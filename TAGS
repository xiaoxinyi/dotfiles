
.cask/24.5.1/bootstrap/commander-20140120.1052/commander-autoloads.el,0

.cask/24.5.1/bootstrap/commander-20140120.1052/commander-pkg.el,217
(define-package "commander" "20140120.1052" "Emacs command line parser" '((s "1.6.0") (dash "2.0.0") (cl-lib "0.3") (f "0.6.1")) :url "http://github.com/rejeep/commander.el" :keywords '("cli" "argv"))"commander"1,0

.cask/24.5.1/bootstrap/commander-20140120.1052/commander.el,2672
(defvar commander-options nilcommander-options116,2923
(defvar commander-commands nilcommander-commands119,2980
(defvar commander-parsing-done nilcommander-parsing-done122,3039
(defvar commander-name nilcommander-name125,3104
(defvar commander-description nilcommander-description128,3154
(defvar commander-default-config nilcommander-default-config131,3218
(defvar commander-default-command nilcommander-default-command134,3321
(defvar commander-no-command nilcommander-no-command137,3404
(defvar commander-args nilcommander-args140,3499
(defconst commander-option-recommander-option-re143,3624
(defconst commander-command-recommander-command-re147,3745
(defun commander--find-option (option)commander--find-option153,3847
(defun commander--find-command (command)commander--find-command159,4012
(defun commander--handle-options (arguments)commander--handle-options165,4187
(defun commander--handle-command (arguments)commander--handle-command209,6902
(defun commander--usage-commands ()commander--usage-commands239,8379
(defun commander--usage-options ()commander--usage-options242,8449
(defun commander--usage-padding ()commander--usage-padding253,8724
(defun commander--usage-command-or-option (to-string description)commander--usage-command-or-option261,9143
(defun commander--usage-command (commander-command)commander--usage-command276,9560
(defun commander--usage-option (commander-option)commander--usage-option281,9819
(defun commander-usage ()commander-usage286,10072
(defun commander-usage-for (command-name)commander-usage-for302,10748
(defun commander-print-usage ()commander-print-usage313,11173
(defun commander-print-usage-for (command-name)commander-print-usage-for317,11278
(defun commander-print-usage-and-exit (&optional exit-code)commander-print-usage-and-exit323,11480
(defun commander-print-usage-for-and-exit (command-name &optional exit-code)commander-print-usage-for-and-exit331,11712
(defun commander-option (flags description function &rest default-values)commander-option341,11998
(defun commander-command (command description function &rest args)commander-command375,13291
(defun commander-ignore-p ()commander-ignore-p409,14451
(defun commander-parse (arguments)commander-parse416,14723
(defun commander-name (name)commander-name427,15280
(defun commander-description (description)commander-description430,15340
(defun commander-config (file)commander-config433,15428
(defun commander-default (command-or-function arguments)commander-default439,15653
(defun commander--make-args (args)commander--make-args454,16037
(defmacro commander (&rest forms)commander471,16627

.cask/24.5.1/bootstrap/dash-20160619.611/dash-autoloads.el,0

.cask/24.5.1/bootstrap/dash-20160619.611/dash-pkg.el,110
(define-package "dash" "20160619.611" "A modern list library for Emacs" 'nil :keywords '("lists"))"dash"1,0

.cask/24.5.1/bootstrap/dash-20160619.611/dash.el,14120
(defgroup dash ()dash37,1343
(defun dash--enable-fontlock (symbol value)dash--enable-fontlock42,1428
(defcustom dash-enable-fontlock nildash-enable-fontlock47,1546
(defmacro !cons (car cdr)!cons54,1729
(defmacro !cdr (list)!cdr58,1842
(defmacro --each (list &rest body)--each62,1940
(defmacro -doto (eval-initial-value &rest forms)-doto75,2270
(defun -each (list fn)-each90,2870
(defalias '--each-indexed '--each)--each-indexed96,3042
(defun -each-indexed (list fn)-each-indexed98,3078
(defmacro --each-while (list pred &rest body)--each-while107,3349
(defun -each-while (list pred fn)-each-while122,3796
(defmacro --dotimes (num &rest body)--dotimes129,4038
(defun -dotimes (num fn)-dotimes140,4383
(defun -map (fn list)-map146,4581
(defmacro --map (form list)--map150,4708
(defmacro --reduce-from (form initial-value list)--reduce-from155,4838
(defun -reduce-from (fn initial-value list)-reduce-from162,5043
(defmacro --reduce (form list)--reduce174,5470
(defun -reduce (fn list)-reduce183,5734
(defun -reduce-r-from (fn initial-value list)-reduce-r-from198,6263
(defmacro --reduce-r-from (form initial-value list)--reduce-r-from210,6722
(defun -reduce-r (fn list)-reduce-r215,6931
(defmacro --reduce-r (form list)--reduce-r234,7598
(defmacro --filter (form list)--filter239,7758
(defun -filter (pred list)-filter247,7979
(defalias '-select '-filter)-select255,8164
(defalias '--select '--filter)--select256,8193
(defmacro --remove (form list)--remove258,8225
(defun -remove (pred list)-remove263,8355
(defalias '-reject '-remove)-reject269,8509
(defalias '--reject '--remove)--reject270,8538
(defun -remove-first (pred list)-remove-first272,8570
(defmacro --remove-first (form list)--remove-first286,8931
(defalias '-reject-first '-remove-first)-reject-first291,9086
(defalias '--reject-first '--remove-first)--reject-first292,9127
(defun -remove-last (pred list)-remove-last294,9171
(defmacro --remove-last (form list)--remove-last302,9375
(defalias '-reject-last '-remove-last)-reject-last307,9527
(defalias '--reject-last '--remove-last)--reject-last308,9566
(defun -remove-item (item list)-remove-item310,9608
(defmacro --keep (form list)--keep316,9755
(defun -keep (fn list)-keep325,10023
(defun -non-nil (list)-non-nil331,10242
(defmacro --map-indexed (form list)--map-indexed335,10331
(defun -map-indexed (fn list)-map-indexed344,10561
(defmacro --map-when (pred rep list)--map-when352,10834
(defun -map-when (pred rep list)-map-when360,11071
(defalias '-replace-where '-map-when)-replace-where370,11412
(defalias '--replace-where '--map-when)--replace-where371,11450
(defun -map-first (pred rep list)-map-first373,11491
(defmacro --map-first (pred rep list)--map-first385,11889
(defun -map-last (pred rep list)-map-last389,12038
(defmacro --map-last (pred rep list)--map-last395,12250
(defun -replace (old new list)-replace399,12396
(defun -replace-first (old new list)-replace-first407,12575
(defun -replace-last (old new list)-replace-last415,12773
(defmacro --mapcat (form list)--mapcat423,12967
(defun -mapcat (fn list)-mapcat428,13104
(defun -flatten (l)-flatten433,13272
(defmacro --iterate (form init n)--iterate449,13807
(defun -flatten-n (num list)-flatten-n454,13960
(defun -concat (&rest lists)-concat460,14120
(defalias '-copy 'copy-sequence-copy464,14259
(defun -splice (pred fun list)-splice467,14328
(defmacro --splice (pred form list)--splice485,14843
(defun -splice-list (pred new-list list)-splice-list489,14973
(defmacro --splice-list (pred new-list list)--splice-list495,15159
(defun -cons* (&rest args)-cons*499,15298
(defun -snoc (list elem &rest elements)-snoc507,15542
(defmacro --first (form list)--first515,15776
(defun -first (pred list)-first524,16007
(defalias '-find '-first)-find532,16220
(defalias '--find '--first)--find533,16246
(defmacro --some (form list)--some535,16275
(defun -some (pred list)-some544,16494
(defalias '-any '-some)-any550,16651
(defalias '--any '--some)--any551,16675
(defmacro --last (form list)--last553,16702
(defun -last (pred list)-last562,16916
(defalias '-first-item 'car-first-item566,17044
(defun -last-item (list)-last-item569,17134
(defun -butlast (list)-butlast573,17240
(defmacro --count (pred list)--count578,17397
(defun -count (pred list)-count586,17613
(defun ---truthy? (val)---truthy?590,17745
(defmacro --any? (form list)--any?593,17790
(defun -any? (pred list)-any?598,17922
(defalias '-some? '-any?)-some?604,18086
(defalias '--some? '--any?)--some?605,18112
(defalias '-any-p '-any?)-any-p606,18140
(defalias '--any-p '--any?)--any-p607,18166
(defalias '-some-p '-any?)-some-p608,18194
(defalias '--some-p '--any?)--some-p609,18221
(defmacro --all? (form list)--all?611,18251
(defun -all? (pred list)-all?619,18469
(defalias '-every? '-all?)-every?625,18635
(defalias '--every? '--all?)--every?626,18662
(defalias '-all-p '-all?)-all-p627,18691
(defalias '--all-p '--all?)--all-p628,18717
(defalias '-every-p '-all?)-every-p629,18745
(defalias '--every-p '--all?)--every-p630,18773
(defmacro --none? (form list)--none?632,18804
(defun -none? (pred list)-none?637,18930
(defalias '-none-p '-none?)-none-p643,19072
(defalias '--none-p '--none?)--none-p644,19100
(defmacro --only-some? (form list)--only-some?646,19131
(defun -only-some? (pred list)-only-some?656,19443
(defalias '-only-some-p '-only-some?)-only-some-p663,19743
(defalias '--only-some-p '--only-some?)--only-some-p664,19781
(defun -slice (list from &optional to step)-slice666,19822
(defun -take (n list)-take692,20664
(defun -take-last (n list)-take-last703,20933
(defalias '-drop 'nthcdr-drop709,21059
(defun -drop-last (n list)-drop-last714,21165
(defmacro --take-while (form list)--take-while721,21347
(defun -take-while (pred list)-take-while729,21575
(defmacro --drop-while (form list)--drop-while733,21743
(defun -drop-while (pred list)-drop-while742,21989
(defun -split-at (n list)-split-at746,22154
(defun -rotate (n list)-rotate755,22420
(defun -insert-at (n x list)-insert-at762,22664
(defun -replace-at (n x list)-replace-at769,22889
(defun -update-at (n func list)-update-at776,23119
(defmacro --update-at (n form list)--update-at783,23409
(defun -remove-at (n list)-remove-at788,23568
(defun -remove-at-indices (indices list)-remove-at-indices794,23741
(defmacro --split-with (pred list)--split-with810,24263
(defun -split-with (pred list)-split-with827,24734
(defmacro -split-on (item list)-split-on831,24922
(defmacro --split-when (form list)--split-when843,25253
(defun -split-when (fn list)-split-when848,25405
(defmacro --separate (form list)--separate866,25928
(defun -separate (pred list)-separate875,26217
(defun ---partition-all-in-steps-reversed (n step list)---partition-all-in-steps-reversed879,26380
(defun -partition-all-in-steps (n step list)-partition-all-in-steps889,26745
(defun -partition-in-steps (n step list)-partition-in-steps894,26999
(defun -partition-all (n list)-partition-all903,27392
(defun -partition (n list)-partition908,27584
(defmacro --partition-by (form list)--partition-by914,27811
(defun -partition-by (fn list)-partition-by941,28630
(defmacro --partition-by-header (form list)--partition-by-header945,28785
(defun -partition-by-header (fn list)-partition-by-header976,29756
(defmacro --group-by (form list)--group-by983,30051
(defun -group-by (fn list)-group-by1005,30603
(defun -interpose (sep list)-interpose1010,30782
(defun -interleave (&rest lists)-interleave1021,31073
(defmacro --zip-with (form list1 list2)--zip-with1029,31337
(defun -zip-with (fn list1 list2)-zip-with1048,31890
(defun -zip (&rest lists)-zip1058,32290
(defalias '-zip-pair '-zip)-zip-pair1079,33176
(defun -zip-fill (fill-value &rest lists)-zip-fill1081,33205
(defun -cycle (list)-cycle1087,33454
(defun -pad (fill-value &rest lists)-pad1093,33651
(defun -annotate (fn list)-annotate1100,33965
(defmacro --annotate (form list)--annotate1105,34153
(defun dash--table-carry (lists restore-lists &optional re)dash--table-carry1110,34299
(defun -table (fn &rest lists)-table1125,34736
(defun -table-flat (fn &rest lists)-table-flat1146,35478
(defun -partial (fn &rest args)-partial1175,36457
(defun -elem-index (elem list)-elem-index1182,36743
(defun -elem-indices (elem list)-elem-indices1188,36948
(defun -find-indices (pred list)-find-indices1193,37129
(defmacro --find-indices (form list)--find-indices1198,37342
(defun -find-index (pred list)-find-index1203,37500
(defmacro --find-index (form list)--find-index1211,37740
(defun -find-last-index (pred list)-find-last-index1216,37892
(defmacro --find-last-index (form list)--find-last-index1224,38142
(defun -select-by-indices (indices list)-select-by-indices1228,38277
(defun -select-columns (columns table)-select-columns1236,38507
(defun -select-column (column table)-select-column1248,38862
(defmacro -> (x &optional form &rest more)->1259,39199
(defmacro ->> (x &optional form &rest more)->>1271,39650
(defmacro --> (x form &rest more)-->1283,40082
(defmacro -some-> (x &optional form &rest more)-some->1294,40474
(defmacro -some->> (x &optional form &rest more)-some->>1303,40823
(defmacro -some--> (x &optional form &rest more)-some-->1312,41178
(defun -grade-up (comparator list)-grade-up1321,41533
(defun -grade-down (comparator list)-grade-down1331,41948
(defvar dash--source-counter 0dash--source-counter1341,42366
(defun dash--match-make-source-symbol ()dash--match-make-source-symbol1344,42444
(defun dash--match-ignore-place-p (symbol)dash--match-ignore-place-p1351,42710
(defun dash--match-cons-skip-cdr (skip-cdr source)dash--match-cons-skip-cdr1356,42885
(defun dash--match-cons-get-car (skip-cdr source)dash--match-cons-get-car1365,43177
(defun dash--match-cons-get-cdr (skip-cdr source)dash--match-cons-get-cdr1375,43415
(defun dash--match-cons (match-form source)dash--match-cons1385,43647
(defun dash--match-cons-1 (match-form source &optional props)dash--match-cons-11409,44595
(defun dash--vector-tail (seq start)dash--vector-tail1443,46025
(defun dash--match-vector (match-form source)dash--match-vector1454,46347
(defun dash--match-vector-1 (match-form source)dash--match-vector-11473,47286
(defun dash--match-kv (match-form source)dash--match-kv1513,48756
(defun dash--match-kv-1 (match-form source type)dash--match-kv-11528,49405
(defun dash--match-symbol (match-form source)dash--match-symbol1558,50685
(defun dash--match (match-form source)dash--match1564,50842
(defmacro -let* (varlist &rest body)-let*1598,52062
(defmacro -let (varlist &rest body)-let1616,52733
(defmacro -lambda (match-form &rest body)-lambda1756,57677
(defmacro -if-let* (vars-vals then &rest else)-if-let*1789,58979
(defmacro -if-let (var-val then &rest else)-if-let1808,59627
(defmacro --if-let (val then &rest else)--if-let1817,59937
(defmacro -when-let* (vars-vals &rest body)-when-let*1824,60156
(defmacro -when-let (var-val &rest body)-when-let1836,60588
(defmacro --when-let (val &rest body)--when-let1845,60875
(defvar -compare-fn nil-compare-fn1852,61070
(defun -distinct (list)-distinct1858,61288
(defalias '-uniq '-distinct)-uniq1868,61573
(defun -union (list list2)-union1870,61603
(defun -intersection (list list2)-intersection1889,62493
(defun -difference (list list2)-difference1895,62746
(defun -contains? (list element)-contains?1901,62986
(defalias '-contains-p '-contains?)-contains-p1921,63522
(defun -same-items? (list list2)-same-items?1923,63559
(defalias '-same-items-p '-same-items?)-same-items-p1935,63889
(defun -is-prefix? (prefix list)-is-prefix?1937,63930
(defun -is-suffix? (suffix list)-is-suffix?1945,64115
(defun -is-infix? (infix list)-is-infix?1951,64269
(defalias '-is-prefix-p '-is-prefix?)-is-prefix-p1963,64525
(defalias '-is-suffix-p '-is-suffix?)-is-suffix-p1964,64563
(defalias '-is-infix-p '-is-infix?)-is-infix-p1965,64601
(defun -sort (comparator list)-sort1967,64638
(defmacro --sort (form list)--sort1974,64961
(defun -list (&rest args)-list1979,65098
(defun -repeat (n x)-repeat1987,65320
(defun -sum (list)-sum1994,65472
(defun -product (list)-product1998,65539
(defun -max (list)-max2002,65614
(defun -min (list)-min2006,65717
(defun -max-by (comparator list)-max-by2010,65821
(defun -min-by (comparator list)-min-by2018,66120
(defmacro --max-by (form list)--max-by2026,66416
(defmacro --min-by (form list)--min-by2033,66634
(defun -iterate (fun init n)-iterate2040,66852
(defun -fix (fn list)-fix2054,67181
(defmacro --fix (form list)--fix2064,67460
(defun -unfold (fun seed)-unfold2068,67556
(defmacro --unfold (form seed)--unfold2084,68077
(defun -cons-pair? (con)-cons-pair?2089,68217
(defun -cons-to-list (con)-cons-to-list2095,68379
(defun -value-to-list (val)-value-to-list2099,68518
(defun -tree-mapreduce-from (fn folder init-value tree)-tree-mapreduce-from2110,68803
(defmacro --tree-mapreduce-from (form folder init-value tree)--tree-mapreduce-from2127,69481
(defun -tree-mapreduce (fn folder tree)-tree-mapreduce2132,69723
(defmacro --tree-mapreduce (form folder tree)--tree-mapreduce2149,70348
(defun -tree-map (fn tree)-tree-map2154,70547
(defmacro --tree-map (form tree)--tree-map2163,70812
(defun -tree-reduce-from (fn init-value tree)-tree-reduce-from2168,70955
(defmacro --tree-reduce-from (form init-value tree)--tree-reduce-from2184,71513
(defun -tree-reduce (fn tree)-tree-reduce2189,71712
(defmacro --tree-reduce (form tree)--tree-reduce2204,72219
(defun -tree-map-nodes (pred fun tree)-tree-map-nodes2209,72375
(defmacro --tree-map-nodes (pred form tree)--tree-map-nodes2222,72797
(defun -tree-seq (branch children tree)-tree-seq2226,72951
(defmacro --tree-seq (branch children tree)--tree-seq2241,73489
(defun -clone (list)-clone2245,73637
(defun dash-enable-font-lock ()dash-enable-font-lock2252,73886

.cask/24.5.1/bootstrap/epl-20150517.433/epl-autoloads.el,0

.cask/24.5.1/bootstrap/epl-20150517.433/epl-pkg.el,151
(define-package "epl" "20150517.433" "Emacs Package Library" '((cl-lib "0.3")) :url "http://github.com/cask/epl" :keywords '("convenience"))"epl"1,0

.cask/24.5.1/bootstrap/epl-20150517.433/epl.el,3820
(defsubst epl--package-desc-p (package)epl--package-desc-p145,4954
(define-error 'epl-error "EPL error")epl-error154,5208
(define-error 'epl-invalid-package "Invalid EPL package" 'epl-error)epl-invalid-package156,5247
(define-error 'epl-invalid-package-file "Invalid EPL package file"epl-invalid-package-file158,5317
(defun epl-package-dir ()epl-package-dir163,5433
(defun epl-default-package-dir ()epl-default-package-dir167,5515
(defun epl-change-package-dir (directory)epl-change-package-dir171,5649
(defvar epl--load-path-before-initialize nilepl--load-path-before-initialize178,5831
(defun epl-initialize (&optional no-activate)epl-initialize181,5922
(defalias 'epl-refresh 'package-refresh-contents)epl-refresh188,6158
(defun epl-add-archive (name url)epl-add-archive190,6209
(defun epl-reset ()epl-reset194,6340
(defun epl-requirement-version-string (requirement)epl-requirement-version-string221,7099
(defmacro epl-package-as-description (var &rest body)epl-package-as-description244,7770
(defsubst epl-package--package-desc-p (package)epl-package--package-desc-p258,8290
(defun epl-package-version (package)epl-package-version262,8458
(defun epl-package-version-string (package)epl-package-version-string273,8890
(defun epl-package-summary (package)epl-package-summary277,9038
(defsubst epl-requirement--from-req (req)epl-requirement--from-req285,9369
(defun epl-package-requirements (package)epl-package-requirements292,9679
(defun epl-package-directory (package)epl-package-directory299,9927
(defun epl-package-->= (pkg1 pkg2)epl-package-->=312,10429
(defun epl-package--from-package-desc (package-desc)epl-package--from-package-desc317,10622
(defun epl-package--parse-info (info)epl-package--parse-info328,11082
(defun epl-package-from-buffer (&optional buffer)epl-package-from-buffer340,11646
(defun epl-package-from-lisp-file (file-name)epl-package-from-lisp-file353,12117
(defun epl-package-from-tar-file (file-name)epl-package-from-tar-file367,12633
(defun epl-package-from-file (file-name)epl-package-from-file392,13890
(defun epl-package--parse-descriptor-requirement (requirement)epl-package--parse-descriptor-requirement401,14193
(defun epl-package-from-descriptor-file (descriptor-file)epl-package-from-descriptor-file408,14542
(defun epl-package-installed-p (package)epl-package-installed-p442,16072
(defun epl--parse-built-in-entry (entry)epl--parse-built-in-entry453,16479
(defun epl-built-in-packages ()epl-built-in-packages463,16934
(defun epl-find-built-in-package (name)epl-find-built-in-package473,17300
(defun epl-package-outdated-p (package)epl-package-outdated-p486,17768
(defun epl--parse-package-list-entry (entry)epl--parse-package-list-entry507,18670
(defun epl-installed-packages ()epl-installed-packages528,19530
(defsubst epl--filter-outdated-packages (packages)epl--filter-outdated-packages534,19706
(defun epl-outdated-packages ()epl-outdated-packages542,19941
(defsubst epl--find-package-in-list (name list)epl--find-package-in-list548,20132
(defun epl-find-installed-package (name)epl-find-installed-package556,20379
(defun epl-find-installed-packages (name)epl-find-installed-packages567,20760
(defun epl-available-packages ()epl-available-packages577,21077
(defun epl-find-available-packages (name)epl-find-available-packages584,21307
(defun epl-find-upgrades (&optional packages)epl-find-upgrades605,21872
(defalias 'epl-built-in-p 'package-built-in-p)epl-built-in-p628,22816
(defalias 'epl-install-file 'package-install-file)epl-install-file633,22890
(defun epl-package-install (package &optional force)epl-package-install635,22942
(defun epl-package-delete (package)epl-package-delete647,23449
(defun epl-upgrade (&optional packages preserve-obsolete)epl-upgrade675,24899

.cask/24.5.1/bootstrap/f-20160426.527/f-autoloads.el,0

.cask/24.5.1/bootstrap/f-20160426.527/f-pkg.el,198
(define-package "f" "20160426.527" "Modern API for working with files and directories" '((s "1.7.0") (dash "2.2.0")) :url "http://github.com/rejeep/f.el" :keywords '("files" "directories"))"f"1,0

.cask/24.5.1/bootstrap/f-20160426.527/f.el,3721
(defvar f--guard-paths nilf--guard-paths42,1372
(defmacro f--destructive (path &rest body)f--destructive47,1481
(defun f-join (&rest args)f-join62,1898
(defun f-split (path)f-split71,2131
(defun f-expand (path &optional dir)f-expand78,2348
(defun f-filename (path)f-filename83,2533
(defalias 'f-parent 'f-dirname)f-parent87,2643
(defun f-dirname (path)f-dirname88,2675
(defun f-common-parent (paths)f-common-parent96,2949
(defun f-ext (path)f-ext116,3585
(defun f-no-ext (path)f-no-ext123,3793
(defun f-swap-ext (path ext)f-swap-ext127,3906
(defun f-base (path)f-base134,4127
(defun f-relative (path &optional dir)f-relative138,4243
(defalias 'f-abbrev 'f-short)f-abbrev142,4349
(defun f-short (path)f-short143,4379
(defun f-long (path)f-long147,4488
(defun f-canonical (path)f-canonical151,4562
(defun f-slash (path)f-slash155,4652
(defun f-full (path)f-full164,4865
(defun f--uniquify (paths)f--uniquify168,4967
(defun f-uniquify (files)f-uniquify184,5740
(defun f-uniquify-alist (files)f-uniquify-alist190,5882
(defun f-read-bytes (path)f-read-bytes199,6066
(defalias 'f-read 'f-read-text)f-read209,6370
(defun f-read-text (path &optional coding)f-read-text210,6402
(defalias 'f-write 'f-write-text)f-write218,6625
(defun f-write-text (text coding path)f-write-text219,6659
(defun f-unibyte-string-p (s)f-unibyte-string-p226,6905
(defun f-write-bytes (data path)f-write-bytes230,7013
(defun f-mkdir (&rest dirs)f-mkdir247,7512
(defun f-delete (path &optional force)f-delete257,7763
(defun f-symlink (source path)f-symlink266,8044
(defun f-move (from to)f-move270,8180
(defun f-copy (from to)f-copy274,8283
(defun f-touch (path)f-touch292,8980
(defun f-exists? (path)f-exists?302,9202
(defalias 'f-dir? 'f-directory?)f-dir?306,9297
(defun f-directory? (path)f-directory?307,9330
(defun f-file? (path)f-file?311,9437
(defun f-symlink? (path)f-symlink?315,9532
(defun f-readable? (path)f-readable?319,9645
(defun f-writable? (path)f-writable?323,9749
(defun f-executable? (path)f-executable?327,9853
(defun f-absolute? (path)f-absolute?331,9963
(defun f-relative? (path)f-relative?335,10072
(defun f-root? (path)f-root?339,10178
(defun f-ext? (path &optional ext)f-ext?343,10283
(defalias 'f-equal? 'f-same?)f-equal?355,10653
(defun f-same? (path-a path-b)f-same?356,10683
(defun f-parent-of? (path-a path-b)f-parent-of?362,10859
(defun f-child-of? (path-a path-b)f-child-of?367,10998
(defun f-ancestor-of? (path-a path-b)f-ancestor-of?372,11135
(defun f-descendant-of? (path-a path-b)f-descendant-of?378,11329
(defun f-size (path)f-size387,11540
(defun f-depth (path)f-depth396,11800
(defun f-this-file ()f-this-file407,12064
(defun f-path-separator ()f-path-separator415,12297
(defun f-glob (pattern &optional path)f-glob419,12388
(defun f--collect-entries (path recursive)f--collect-entries424,12529
(defmacro f--entries (path body &optional recursive)f--entries445,13198
(defun f-entries (path &optional fn recursive)f-entries454,13389
(defmacro f--directories (path body &optional recursive)f--directories463,13750
(defun f-directories (path &optional fn recursive)f-directories472,13953
(defmacro f--files (path body &optional recursive)f--files477,14190
(defun f-files (path &optional fn recursive)f-files486,14375
(defmacro f--up (body &optional dir)f--up491,14577
(defun f-up (fn &optional dir)f-up501,14778
(defmacro f--traverse-upwards (body &optional path)f--traverse-upwards516,15217
(defun f-traverse-upwards (fn &optional path)f-traverse-upwards524,15408
(defun f-root ()f-root541,15949
(defmacro f-with-sandbox (path-or-paths &rest body)f-with-sandbox545,16026

.cask/24.5.1/bootstrap/git-20140128.241/git-autoloads.el,0

.cask/24.5.1/bootstrap/git-20140128.241/git-pkg.el,195
(define-package "git" "20140128.241" "An Elisp API for programmatically using Git" '((s "1.7.0") (dash "2.2.0") (f "0.10.0")) :url "http://github.com/rejeep/git.el" :keywords '("git"))"git"1,0

.cask/24.5.1/bootstrap/git-20140128.241/git.el,2083
(defvar git-executablegit-executable40,1229
(defvar git-repo nilgit-repo44,1300
(defvar git-args nilgit-args47,1357
(defconst git-stash-re "^\\(.+?\\): \\(?:WIP on\\|On\\) \\(.+\\): \\(.+\\)$"git-stash-re50,1434
(defun git-error (string &rest args)git-error56,1653
(defun git-run (command &rest args)git-run64,1880
(defun git-repo? (directory)git-repo?82,2449
(defun git-branch? (branch)git-branch?92,2774
(defun git-tag? (tag)git-tag?96,2892
(defun git-on-branch ()git-on-branch100,2991
(defun git-on-branch? (branch)git-on-branch?107,3201
(defun git-add (&rest files)git-add111,3314
(defun git-branch (branch)git-branch115,3406
(defun git-branches ()git-branches121,3564
(defun git-checkout (ref)git-checkout130,3761
(defun git-clone (url &optional dir)git-clone134,3834
(defun git-commit (message &rest files)git-commit138,3936
(defun git-fetch (&optional repo)git-fetch142,4089
(defun git-init (&optional dir bare)git-init146,4166
(defun git-log (&optional branch)git-log156,4570
(defun git-config (option &optional value)git-config172,5055
(defun git-pull (&optional repo ref)git-pull178,5245
(defun git-push (&optional repo ref)git-push182,5336
(defun git-remote? (name)git-remote?186,5425
(defun git-remotes ()git-remotes190,5548
(defun git-remote-add (name url)git-remote-add194,5638
(defun git-remote-remove (name)git-remote-remove198,5743
(defun git-reset (&optional commit mode)git-reset204,5912
(defun git-rm (path &optional recursive)git-rm208,6056
(defun git-stash (&optional message)git-stash214,6205
(defun git-stashes ()git-stashes225,6616
(defun git-stash-pop (&optional name)git-stash-pop236,6943
(defun git-stash-apply (&optional name)git-stash-apply240,7069
(defun git-tag (tag)git-tag244,7197
(defun git-tags ()git-tags250,7328
(defun git-untracked-files ()git-untracked-files254,7409
(defun git-staged-files ()git-staged-files259,7547
(defun git--lines (string)git--lines267,7685
(defun git--clean (string)git--clean270,7768
(defun git--args (command &rest args)git--args273,7828

.cask/24.5.1/bootstrap/package-build-20160619.1317/package-build-autoloads.el,0

.cask/24.5.1/bootstrap/package-build-20160619.1317/package-build-pkg.el,149
(define-package "package-build" "20160619.1317" "Tools for assembling a package archive" '((cl-lib "0.5")) :keywords '("tools"))"package-build"1,0

.cask/24.5.1/bootstrap/package-build-20160619.1317/package-build.el,10471
(defconst package-build--this-dir (file-name-directory (or load-file-name (buffer-file-name))))package-build--this-dir49,1691
(defgroup package-build nilpackage-build51,1788
(defcustom package-build-working-dir (expand-file-name "working/" package-build--this-dir)package-build-working-dir55,1925
(defcustom package-build-archive-dir (expand-file-name "packages/" package-build--this-dir)package-build-archive-dir60,2100
(defcustom package-build-recipes-dir (expand-file-name "recipes/" package-build--this-dir)package-build-recipes-dir65,2284
(defcustom package-build-verbose tpackage-build-verbose70,2456
(defcustom package-build-stable nilpackage-build-stable75,2620
(defcustom package-build-timeout-executablepackage-build-timeout-executable80,2784
(defcustom package-build-timeout-secs 600package-build-timeout-secs91,3223
(defcustom package-build-tar-executablepackage-build-tar-executable101,3607
(defcustom package-build-write-melpa-badge-images nilpackage-build-write-melpa-badge-images109,3882
(defcustom package-build-version-regexp "^[rRvV]?\\(.*\\)$"package-build-version-regexp114,4071
(defvar package-build--recipe-alist nilpackage-build--recipe-alist122,4356
(defvar package-build--recipe-alist-initialized nilpackage-build--recipe-alist-initialized128,4511
(defvar package-build--archive-alist nilpackage-build--archive-alist131,4635
(defvar package-build--archive-alist-initialized nilpackage-build--archive-alist-initialized137,4857
(defconst package-build-default-files-specpackage-build-default-files-spec140,4981
(defun package-build--message (format-string &rest args)package-build--message147,5273
(defun package-build--slurp-file (file-name)package-build--slurp-file152,5468
(defun package-build--string-rtrim (str)package-build--string-rtrim159,5756
(defun package-build--valid-version (str &optional regexp)package-build--valid-version164,5891
(defun package-build--parse-time (str)package-build--parse-time172,6225
(defun package-build--find-parse-time (regex &optional bound)package-build--find-parse-time185,6947
(defun package-build--find-parse-time-newest (regex &optional bound)package-build--find-parse-time-newest191,7271
(defun package-build--find-version-newest (regex &optional bound)package-build--find-version-newest200,7670
(defun package-build--run-process (dir command &rest args)package-build--run-process236,9566
(defun package-build--run-process-match (regex dir prog &rest args)package-build--run-process-match254,10561
(defun package-build-checkout (package-name config working-dir)package-build-checkout262,10896
(defvar package-build--last-wiki-fetch-time 0package-build--last-wiki-fetch-time276,11627
(defvar package-build--wiki-min-request-interval 3package-build--wiki-min-request-interval281,11862
(defmacro package-build--with-wiki-rate-limit (&rest body)package-build--with-wiki-rate-limit284,12001
(defvar url-http-response-status)url-http-response-status299,12706
(defvar url-http-end-of-headers)url-http-end-of-headers300,12740
(defun package-build--url-copy-file (url newname &optional ok-if-already-exists)package-build--url-copy-file302,12774
(defun package-build--grab-wiki-file (filename)package-build--grab-wiki-file328,13956
(defun package-build--checkout-wiki (name config dir)package-build--checkout-wiki342,14558
(defun package-build--darcs-repo (dir)package-build--darcs-repo353,15090
(defun package-build--checkout-darcs (name config dir)package-build--checkout-darcs357,15261
(defun package-build--fossil-repo (dir)package-build--fossil-repo386,16968
(defun package-build--checkout-fossil (name config dir)package-build--checkout-fossil390,17125
(defun package-build--svn-repo (dir)package-build--svn-repo413,18334
(defun package-build--trim (str &optional chr)package-build--trim417,18481
(defun package-build--princ-exists (dir)package-build--princ-exists423,18712
(defun package-build--princ-checkout (repo dir)package-build--princ-checkout427,18862
(defun package-build--checkout-svn (name config dir)package-build--checkout-svn431,19027
(defun package-build--cvs-repo (dir)package-build--cvs-repo453,20178
(defun package-build--checkout-cvs (name config dir)package-build--checkout-cvs462,20552
(defun package-build--git-repo (dir)package-build--git-repo517,23751
(defun package-build--git-head-branch (dir)package-build--git-head-branch522,23930
(defun package-build--checkout-git (name config dir)package-build--checkout-git529,24163
(defun package-build--update-git-to-ref (dir ref)package-build--update-git-to-ref567,26317
(defun package-build--checkout-github (name config dir)package-build--checkout-github573,26642
(defun package-build--checkout-gitlab (name config dir)package-build--checkout-gitlab578,26932
(defun package-build--checkout-bitbucket (name config dir)package-build--checkout-bitbucket583,27222
(defun package-build--bzr-expand-repo (repo)package-build--bzr-expand-repo588,27516
(defun package-build--bzr-repo (dir)package-build--bzr-repo592,27702
(defun package-build--checkout-bzr (name config dir)package-build--checkout-bzr596,27859
(defun package-build--hg-repo (dir)package-build--hg-repo631,29704
(defun package-build--checkout-hg (name config dir)package-build--checkout-hg635,29854
(defun package-build--dump (data file &optional pretty-print)package-build--dump683,32368
(defun package-build--write-pkg-file (pkg-file pkg-info)package-build--write-pkg-file692,32667
(defun package-build--read-from-file (file-name)package-build--read-from-file720,33981
(defun package-build--create-tar (file dir &optional files)package-build--create-tar725,34220
(defun package-build--find-package-commentary (file-path)package-build--find-package-commentary745,34919
(defun package-build--write-pkg-readme (target-dir commentary file-name)package-build--write-pkg-readme752,35141
(defun package-build--readme-file-name (target-dir file-name)package-build--readme-file-name772,35969
(defun package-build--update-or-insert-version (version)package-build--update-or-insert-version777,36187
(defun package-build--ensure-ends-here-line (file-path)package-build--ensure-ends-here-line794,36849
(defun package-build--get-package-info (file-path)package-build--get-package-info806,37263
(defun package-build--get-pkg-file-info (file-path)package-build--get-pkg-file-info819,37817
(defun package-build--merge-package-info (pkg-info name version)package-build--merge-package-info854,39552
(defun package-build--archive-entry (pkg-info type)package-build--archive-entry863,39935
(defun package-build--archive-file-name (archive-entry)package-build--archive-file-name878,40486
(defun package-build--entry-file-name (archive-entry)package-build--entry-file-name888,40930
(defun package-build--delete-file-if-exists (file)package-build--delete-file-if-exists897,41301
(defun package-build--remove-archive-files (archive-entry)package-build--remove-archive-files902,41437
(defun package-build--read-recipe (file-name)package-build--read-recipe912,41994
(defun package-build--read-recipes ()package-build--read-recipes955,43978
(defun package-build--read-recipes-ignore-errors ()package-build--read-recipes-ignore-errors960,44245
(defun package-build-expand-file-specs (dir specs &optional subdir allow-empty)package-build-expand-file-specs972,44893
(defun package-build--config-file-list (config)package-build--config-file-list1011,46597
(defun package-build--expand-source-file-list (dir config)package-build--expand-source-file-list1022,46979
(defun package-build--generate-info-files (files source-dir target-dir)package-build--generate-info-files1026,47211
(defun package-build--generate-dir-file (files target-dir)package-build--generate-dir-file1055,48438
(defun package-build--copy-package-files (files source-dir target-dir)package-build--copy-package-files1074,49265
(defun package-build--copy-file (file newname)package-build--copy-file1082,49648
(defun package-build--package-name-completing-read ()package-build--package-name-completing-read1096,50137
(defun package-build--find-source-file (target files)package-build--find-source-file1100,50314
(defun package-build--find-package-file (name)package-build--find-package-file1105,50482
(defun package-build--package-buffer-info-vec ()package-build--package-buffer-info-vec1109,50679
(defun package-build-archive (name)package-build-archive1142,52089
(defun package-build-package (package-name version file-specs source-dir target-dir)package-build-package1174,53789
(defun package-build--build-single-file-package (package-name version file source-dir target-dir)package-build--build-single-file-package1207,55382
(defun package-build--build-multi-file-package (package-name version files source-dir target-dir)package-build--build-multi-file-package1240,56925
(defun package-build--write-melpa-badge-image (package-name version target-dir)package-build--write-melpa-badge-image1285,59564
(defvar package-build-minor-mode-mappackage-build-minor-mode-map1306,60596
(define-minor-mode package-build-minor-modepackage-build-minor-mode1312,60784
(defun package-build-create-recipe (name fetcher)package-build-create-recipe1321,61027
(defun package-build-current-recipe ()package-build-current-recipe1347,62036
(defun package-build-archive-ignore-errors (pkg)package-build-archive-ignore-errors1375,63339
(defun package-build-all ()package-build-all1393,63985
(defun package-build-cleanup ()package-build-cleanup1406,64523
(defun package-build-recipe-alist ()package-build-recipe-alist1416,65034
(defun package-build-archive-alist ()package-build-archive-alist1423,65333
(defun package-build-reinitialize ()package-build-reinitialize1429,65540
(defun package-build-dump-archive-contents (&optional file-name pretty-print)package-build-dump-archive-contents1434,65721
(defun package-build--archive-entries ()package-build--archive-entries1443,66157
(defun package-build-recipe-alist-as-json (file-name)package-build-recipe-alist-as-json1464,66916
(defun package-build--sym-to-keyword (s)package-build--sym-to-keyword1470,67120
(defun package-build--pkg-info-for-json (info)package-build--pkg-info-for-json1474,67251
(defun package-build--archive-alist-for-json ()package-build--archive-alist-for-json1491,67896
(defun package-build-archive-alist-as-json (file-name)package-build-archive-alist-as-json1499,68255

.cask/24.5.1/bootstrap/s-20160508.2357/s-autoloads.el,0

.cask/24.5.1/bootstrap/s-20160508.2357/s-pkg.el,124
(define-package "s" "20160508.2357" "The long lost Emacs string manipulation library." 'nil :keywords '("strings"))"s"1,0

.cask/24.5.1/bootstrap/s-20160508.2357/s.el,4315
(defun s-trim-left (s)s-trim-left33,1042
(defun s-trim-right (s)s-trim-right39,1189
(defun s-trim (s)s-trim45,1331
(defun s-collapse-whitespace (s)s-collapse-whitespace49,1437
(defun s-split (separator s &optional omit-nulls)s-split53,1586
(defun s-split-up-to (separator s n &optional omit-nulls)s-split-up-to60,1871
(defun s-lines (s)s-lines86,2772
(defun s-join (separator strings)s-join90,2888
(defun s-concat (&rest strings)s-concat94,3029
(defun s-prepend (prefix s)s-prepend98,3140
(defun s-append (suffix s)s-append102,3220
(defun s-repeat (num s)s-repeat106,3299
(defun s-chop-suffix (suffix s)s-chop-suffix114,3480
(defun s-chop-suffixes (suffixes s)s-chop-suffixes122,3721
(defun s-chop-prefix (prefix s)s-chop-prefix129,3933
(defun s-chop-prefixes (prefixes s)s-chop-prefixes137,4176
(defun s-shared-start (s1 s2)s-shared-start144,4390
(defun s-shared-end (s1 s2)s-shared-end153,4676
(defun s-chomp (s)s-chomp172,5295
(defun s-truncate (len s)s-truncate176,5408
(defun s-word-wrap (len s)s-word-wrap182,5593
(defun s-center (len s)s-center190,5852
(defun s-pad-left (len padding s)s-pad-left198,6089
(defun s-pad-right (len padding s)s-pad-right204,6305
(defun s-left (len s)s-left210,6523
(defun s-right (len s)s-right216,6649
(defun s-ends-with? (suffix s &optional ignore-case)s-ends-with?223,6803
(defalias 's-ends-with-p 's-ends-with?)s-ends-with-p235,7192
(defun s-starts-with? (prefix s &optional ignore-case)s-starts-with?237,7233
(defalias 's-starts-with-p 's-starts-with?)s-starts-with-p247,7543
(defalias 's-suffix? 's-ends-with?)s-suffix?249,7588
(defalias 's-prefix? 's-starts-with?)s-prefix?250,7624
(defalias 's-suffix-p 's-ends-with?)s-suffix-p251,7662
(defalias 's-prefix-p 's-starts-with?)s-prefix-p252,7699
(defun s--truthy? (val)s--truthy?254,7739
(defun s-contains? (needle s &optional ignore-case)s-contains?257,7784
(defalias 's-contains-p 's-contains?)s-contains-p265,8061
(defun s-equals? (s1 s2)s-equals?267,8100
(defalias 's-equals-p 's-equals?)s-equals-p273,8235
(defun s-less? (s1 s2)s-less?275,8270
(defalias 's-less-p 's-less?)s-less-p281,8404
(defun s-matches? (regexp s &optional start)s-matches?283,8435
(defalias 's-matches-p 's-matches?)s-matches-p290,8671
(defun s-blank? (s)s-blank?292,8708
(defun s-present? (s)s-present?296,8795
(defun s-presence (s)s-presence300,8887
(defun s-lowercase? (s)s-lowercase?304,8993
(defun s-uppercase? (s)s-uppercase?309,9139
(defun s-mixedcase? (s)s-mixedcase?314,9285
(defun s-capitalized? (s)s-capitalized?321,9507
(defun s-numeric? (s)s-numeric?327,9714
(defun s-replace (old new s)s-replace332,9805
(defun s--aget (alist key)s--aget336,9926
(defun s-replace-all (replacements s)s-replace-all339,9988
(defun s-downcase (s)s-downcase345,10281
(defun s-upcase (s)s-upcase351,10407
(defun s-capitalize (s)s-capitalize357,10527
(defun s-titleize (s)s-titleize361,10710
(defmacro s-with (s form &rest more)s-with367,10898
(defun s-index-of (needle s &optional ignore-case)s-index-of381,11404
(defun s-reverse (s)s-reverse389,11688
(defun s-match-strings-all (regex string)s-match-strings-all403,12206
(defun s-matched-positions-all (regexp string &optional subexp-depth)s-matched-positions-all423,12901
(defun s-match (regexp s &optional start)s-match436,13418
(defun s-slice-at (regexp s)s-slice-at455,14223
(defun s-split-words (s)s-split-words466,14542
(defun s--mapcar-head (fn-head fn-rest list)s--mapcar-head476,14854
(defun s-lower-camel-case (s)s-lower-camel-case481,15055
(defun s-upper-camel-case (s)s-upper-camel-case485,15191
(defun s-snake-case (s)s-snake-case489,15309
(defun s-dashed-words (s)s-dashed-words493,15416
(defun s-capitalized-words (s)s-capitalized-words497,15527
(defun s-titleized-words (s)s-titleized-words502,15712
(defun s-word-initials (s)s-word-initials506,15831
(defun s-format (template replacer &optional extra)s-format520,16204
(defvar s-lex-value-as-lisp nils-lex-value-as-lisp568,18100
(defun s-lex-fmt|expand (fmt)s-lex-fmt|expand573,18231
(defmacro s-lex-format (format-str)s-lex-format587,18693
(defun s-count-matches (regexp s &optional start end)s-count-matches602,19115
(defun s-wrap (s prefix &optional suffix)s-wrap612,19416

.cask/24.5.1/bootstrap/shut-up-20150423.522/shut-up-autoloads.el,0

.cask/24.5.1/bootstrap/shut-up-20150423.522/shut-up-pkg.el,151
(define-package "shut-up" "20150423.522" "Shut up would you!" '((cl-lib "0.3") (emacs "24")) :url "http://github.com/rejeep/shut-up.el")"shut-up"1,0

.cask/24.5.1/bootstrap/shut-up-20150423.522/shut-up.el,537
(defvar inhibit-message nil)inhibit-message43,1468
(defvar shut-up-ignore nilshut-up-ignore45,1498
(defun shut-up-write-region (start end filenameshut-up-write-region54,1773
(defun shut-up-load (file &optional noerror _nomessage nosuffix must-suffix)shut-up-load68,2367
(defun shut-up-buffer-string (buffer)shut-up-buffer-string72,2564
(defun shut-up-insert-to-buffer (object buffer)shut-up-insert-to-buffer81,2849
(defmacro shut-up (&rest body)shut-up93,3190
(defun shut-up-silence-emacs ()shut-up-silence-emacs133,4860

.cask/24.5.1/elpa/ace-jump-mode-20140616.115/ace-jump-mode-autoloads.el,0

.cask/24.5.1/elpa/ace-jump-mode-20140616.115/ace-jump-mode-pkg.el,213
(define-package "ace-jump-mode" "20140616.115" "a quick cursor location minor mode for emacs" 'nil :url "https://github.com/winterTTr/ace-jump-mode/" :keywords '("motion" "location" "cursor"))"ace-jump-mode"1,0

.cask/24.5.1/elpa/ace-jump-mode-20140616.115/ace-jump-mode.el,4248
(defstruct aj-position offset visual-area)aj-position107,3341
(defmacro aj-position-buffer (aj-pos)aj-position-buffer109,3385
(defmacro aj-position-window (aj-pos)aj-position-window113,3532
(defmacro aj-position-frame (aj-pos)aj-position-frame117,3679
(defmacro aj-position-recover-buffer (aj-pos)aj-position-recover-buffer121,3823
(defstruct aj-visual-area buffer window frame recover-buffer)aj-visual-area132,4178
(defstruct aj-queue head tail)aj-queue138,4323
(defun aj-queue-push (item q)aj-queue-push140,4355
(defun aj-queue-pop (q)aj-queue-pop153,4688
(defvar ace-jump-word-mode-use-query-char tace-jump-word-mode-use-query-char178,5309
(defvar ace-jump-mode-case-fold case-fold-searchace-jump-mode-case-fold181,5430
(defvar ace-jump-mode-mark-ring nilace-jump-mode-mark-ring186,5594
(defvar ace-jump-mode-mark-ring-max 100ace-jump-mode-mark-ring-max189,5694
(defvar ace-jump-mode-gray-background tace-jump-mode-gray-background193,5785
(defvar ace-jump-mode-scope 'globalace-jump-mode-scope199,6018
(defvar ace-jump-mode-detect-punc tace-jump-mode-detect-punc209,6503
(defvar ace-jump-mode-submode-listace-jump-mode-submode-list217,6828
(defvar ace-jump-mode-move-keysace-jump-mode-move-keys243,7528
(defvar ace-jump-mode nilace-jump-mode256,8035
(defvar ace-jump-background-overlay-list nilace-jump-background-overlay-list258,8086
(defvar ace-jump-search-tree nilace-jump-search-tree260,8188
(defvar ace-jump-query-char nilace-jump-query-char263,8330
(defvar ace-jump-current-mode nilace-jump-current-mode265,8415
(defvar ace-jump-sync-emacs-mark-ring nilace-jump-sync-emacs-mark-ring269,8531
(defvar ace-jump-search-filter nilace-jump-search-filter280,9005
(defgroup ace-jump nilace-jump284,9163
(defface ace-jump-face-backgroundace-jump-face-background289,9249
(defface ace-jump-face-foregroundace-jump-face-foreground295,9379
(defvar ace-jump-mode-before-jump-hook nilace-jump-mode-before-jump-hook304,9711
(defvar ace-jump-mode-end-hook nilace-jump-mode-end-hook307,9830
(defvar ace-jump-allow-invisible nilace-jump-allow-invisible310,9929
(defun ace-jump-char-category ( query-char )ace-jump-char-category316,10206
(defun ace-jump-search-candidate (re-query-string visual-area-list)ace-jump-search-candidate351,11221
(defun ace-jump-tree-breadth-first-construct (total-leaf-node max-child-node)ace-jump-tree-breadth-first-construct385,13255
(defun ace-jump-tree-preorder-traverse (tree &optional leaf-func branch-func)ace-jump-tree-preorder-traverse425,15065
(defun ace-jump-populate-overlay-to-search-tree (tree candidate-list)ace-jump-populate-overlay-to-search-tree449,15873
(defun ace-jump-delete-overlay-in-search-tree (tree)ace-jump-delete-overlay-in-search-tree484,18202
(defun ace-jump-buffer-substring (pos)ace-jump-buffer-substring491,18532
(defun ace-jump-update-overlay-in-search-tree (tree keys)ace-jump-update-overlay-in-search-tree498,18793
(defun ace-jump-list-visual-area()ace-jump-list-visual-area540,20864
(defun ace-jump-do( re-query-string )ace-jump-do571,22245
(defun ace-jump-jump-to (position)ace-jump-jump-to646,25632
(defun ace-jump-push-mark ()ace-jump-push-mark684,27015
(defun ace-jump-mode-pop-mark ()ace-jump-mode-pop-mark701,27923
(defun ace-jump-quick-exchange ()ace-jump-quick-exchange769,31930
(defun ace-jump-char-mode (query-char)ace-jump-char-mode796,32757
(defun ace-jump-word-mode (head-char)ace-jump-word-mode815,33412
(defun ace-jump-line-mode ()ace-jump-line-mode853,34811
(defun ace-jump-mode(&optional prefix)ace-jump-mode867,35248
(defun ace-jump-move ()ace-jump-move896,36216
(defun ace-jump-done()ace-jump-done939,38011
(defun ace-jump-kill-buffer(buffer)ace-jump-kill-buffer965,38701
(defun ace-jump-move-to-end-if ( l pred )ace-jump-move-to-end-if977,39126
(defun ace-jump-move-first-to-end-if (l pred)ace-jump-move-first-to-end-if992,39694
(defadvice pop-mark (before ace-jump-pop-mark-advice)pop-mark1004,40069
(defadvice pop-global-mark (before ace-jump-pop-global-mark-advice)pop-global-mark1017,40702
(defun ace-jump-mode-enable-mark-sync ()ace-jump-mode-enable-mark-sync1035,41557
(defun ace-jump-mode-disable-mark-sync ()ace-jump-mode-disable-mark-sync1051,42263

.cask/24.5.1/elpa/async-20160513.128/async-autoloads.el,137
(defvar async-bytecomp-package-mode nil "\async-bytecomp-package-mode81,2745
(defvar dired-async-mode nil "\dired-async-mode103,3534

.cask/24.5.1/elpa/async-20160513.128/async-bytecomp.el,759
(defcustom async-bytecomp-allowed-packagesasync-bytecomp-allowed-packages44,1668
(defvar async-byte-compile-log-file "~/.emacs.d/async-bytecomp.log")async-byte-compile-log-file54,2156
(defun async-byte-recompile-directory (directory &optional quiet)async-byte-recompile-directory57,2241
(defvar package-archive-contents)package-archive-contents107,4695
(defvar package-alist)package-alist108,4729
(defun async-bytecomp--get-package-deps (pkg &optional only)async-bytecomp--get-package-deps111,4810
(defun async-bytecomp-get-allowed-pkgs ()async-bytecomp-get-allowed-pkgs134,6054
(defadvice package--compile (around byte-compile-async)package--compile146,6585
(define-minor-mode async-bytecomp-package-modeasync-bytecomp-package-mode165,7430

.cask/24.5.1/elpa/async-20160513.128/async-pkg.el,101
(define-package "async" "20160513.128" "Asynchronous processing in Emacs" 'nil :keywords"async"1,0

.cask/24.5.1/elpa/async-20160513.128/async.el,1671
(defgroup async nilasync34,1188
(defvar async-debug nil)async-debug38,1270
(defvar async-send-over-pipe t)async-send-over-pipe39,1295
(defvar async-in-child-emacs nil)async-in-child-emacs40,1327
(defvar async-callback nil)async-callback41,1361
(defvar async-callback-for-process nil)async-callback-for-process42,1389
(defvar async-callback-value nil)async-callback-value43,1429
(defvar async-callback-value-set nil)async-callback-value-set44,1463
(defvar async-current-process nil)async-current-process45,1501
(defvar async--procvar nil)async--procvar46,1536
(defun async-inject-variablesasync-inject-variables48,1565
(defalias 'async-inject-environment 'async-inject-variables)async-inject-environment82,2960
(defun async-handle-result (func result buf)async-handle-result84,3022
(defun async-when-done (proc &optional _change)async-when-done98,3505
(defun async--receive-sexp (&optional stream)async--receive-sexp122,4715
(defun async--insert-sexp (sexp)async--insert-sexp134,5175
(defun async--transmit-sexp (process sexp)async--transmit-sexp146,5590
(defun async-batch-invoke ()async-batch-invoke153,5832
(defun async-ready (future)async-ready171,6430
(defun async-wait (future)async-wait178,6729
(defun async-get (future)async-get183,6851
(defun async-message-p (value)async-message-p191,7182
(defun async-send (&rest args)async-send196,7333
(defun async-receive ()async-receive204,7644
(defun async-start-process (name program finish-func &rest program-args)async-start-process209,7771
(defun async-start (start-func &optional finish-func)async-start227,8635
(defmacro async-sandbox(func)async-sandbox297,11183

.cask/24.5.1/elpa/async-20160513.128/dired-async.el,1309
(defgroup dired-async nildired-async48,1546
(defcustom dired-async-env-variables-regexpdired-async-env-variables-regexp52,1639
(defcustom dired-async-message-function 'dired-async-mode-line-messagedired-async-message-function58,1859
(defcustom dired-async-log-file "/tmp/dired-async.log"dired-async-log-file64,2069
(defface dired-async-messagedired-async-message69,2231
(defface dired-async-failuresdired-async-failures74,2355
(defface dired-async-mode-messagedired-async-mode-message79,2477
(define-minor-mode dired-async--modeline-modedired-async--modeline-mode84,2623
(defun dired-async-mode-line-message (text face &rest args)dired-async-mode-line-message94,3032
(defun dired-async-processes ()dired-async-processes107,3499
(defun dired-async-kill-process ()dired-async-kill-process113,3711
(defun dired-async-after-file-create (total operation failures skipped)dired-async-after-file-create121,3963
(defun dired-async-maybe-kill-ftp ()dired-async-maybe-kill-ftp161,5747
(defvar overwrite-query)overwrite-query172,6136
(defun dired-async-create-files (file-creator operation fn-list name-constructordired-async-create-files173,6161
(defadvice dired-create-files (around dired-async)dired-create-files313,14060
(define-minor-mode dired-async-modedired-async-mode318,14245

.cask/24.5.1/elpa/async-20160513.128/smtpmail-async.el,200
(defgroup smtpmail-async nilsmtpmail-async39,1320
(defvar async-smtpmail-before-send-hook nilasync-smtpmail-before-send-hook47,1475
(defun async-smtpmail-send-it ()async-smtpmail-send-it51,1639

.cask/24.5.1/elpa/auto-complete-20160416.604/auto-complete-autoloads.el,74
(defvar global-auto-complete-mode nil "\global-auto-complete-mode20,501

.cask/24.5.1/elpa/auto-complete-20160416.604/auto-complete-config.el,2129
(defvar ac-imenu-index nil)ac-imenu-index37,973
(defun ac-imenu-candidates ()ac-imenu-candidates41,1056
(defface ac-gtags-candidate-faceac-gtags-candidate-face79,2496
(defface ac-gtags-selection-faceac-gtags-selection-face84,2641
(defun ac-gtags-candidate ()ac-gtags-candidate89,2800
(defface ac-yasnippet-candidate-faceac-yasnippet-candidate-face102,3146
(defface ac-yasnippet-selection-faceac-yasnippet-selection-face108,3343
(defun ac-yasnippet-table-hash (table)ac-yasnippet-table-hash113,3512
(defun ac-yasnippet-table-parent (table)ac-yasnippet-table-parent120,3694
(defun ac-yasnippet-candidate-1 (table)ac-yasnippet-candidate-1127,3886
(defun ac-yasnippet-candidates ()ac-yasnippet-candidates141,4383
(defun ac-semantic-candidates (prefix)ac-semantic-candidates174,5546
(defun ac-semantic-doc (symbol)ac-semantic-doc185,6057
(defun ac-semantic-action ()ac-semantic-action194,6338
(defun ac-eclim-candidates ()ac-eclim-candidates236,7822
(defconst ac-css-property-alistac-css-property-alist250,8114
(defconst ac-css-value-classesac-css-value-classes389,14346
(defconst ac-css-pseudo-classesac-css-pseudo-classes407,15155
(defvar ac-css-property nilac-css-property412,15389
(defun ac-css-prefix ()ac-css-prefix415,15449
(defun ac-css-property-candidates ()ac-css-property-candidates420,15642
(defvar ac-ropemacs-loaded nil)ac-ropemacs-loaded461,16775
(defun ac-ropemacs-require ()ac-ropemacs-require462,16807
(defun ac-ropemacs-setup ()ac-ropemacs-setup470,17059
(defun ac-ropemacs-initialize ()ac-ropemacs-initialize475,17247
(defvar ac-ropemacs-completions-cache nil)ac-ropemacs-completions-cache484,17530
(defvar ac-source-ropemacsac-source-ropemacs485,17573
(defvar ac-source-rcodetoolsac-source-rcodetools498,17922
(defun ac-common-setup ()ac-common-setup517,18570
(defun ac-emacs-lisp-mode-setup ()ac-emacs-lisp-mode-setup521,18650
(defun ac-cc-mode-setup ()ac-cc-mode-setup524,18827
(defun ac-ruby-mode-setup ())ac-ruby-mode-setup527,18935
(defun ac-css-mode-setup ()ac-css-mode-setup529,18966
(defun ac-config-default ()ac-config-default533,19077

.cask/24.5.1/elpa/auto-complete-20160416.604/auto-complete-pkg.el,99
(define-package "auto-complete" "20160416.604" "Auto Completion for GNU Emacs""auto-complete"1,0

.cask/24.5.1/elpa/auto-complete-20160416.604/auto-complete.el,15310
(defconst ac-version "1.5.1"ac-version46,1378
(defconst ac-version-major (car (version-to-list ac-version))ac-version-major50,1504
(defconst ac-version-minor (cadr (version-to-list ac-version))ac-version-minor53,1610
(defun ac-error (&optional var)ac-error61,1772
(defgroup auto-complete nilauto-complete72,1981
(defcustom ac-delay 0.1ac-delay77,2069
(defcustom ac-auto-show-menu 0.8ac-auto-show-menu82,2178
(defcustom ac-show-menu-immediately-on-auto-complete tac-show-menu-immediately-on-auto-complete89,2419
(defcustom ac-expand-on-auto-complete tac-expand-on-auto-complete94,2587
(defcustom ac-disable-faces '(font-lock-comment-face font-lock-string-face font-lock-doc-face)ac-disable-faces99,2744
(defcustom ac-stop-flymake-on-completing tac-stop-flymake-on-completing104,2957
(defcustom ac-flycheck-poll-completion-end-interval 0.5ac-flycheck-poll-completion-end-interval109,3103
(defcustom ac-use-fuzzy (and (locate-library "fuzzy") t)ac-use-fuzzy114,3291
(defcustom ac-fuzzy-cursor-color "red"ac-fuzzy-cursor-color119,3429
(defcustom ac-use-comphist tac-use-comphist124,3542
(defcustom ac-comphist-threshold 0.7ac-comphist-threshold129,3668
(defcustom ac-comphist-fileac-comphist-file134,3796
(defcustom ac-user-dictionary nilac-user-dictionary143,4110
(defcustom ac-dictionary-files '("~/.dict")ac-dictionary-files148,4223
(defvaralias 'ac-user-dictionary-files 'ac-dictionary-files)ac-user-dictionary-files152,4339
(defcustom ac-dictionary-directoriesac-dictionary-directories154,4401
(defcustom ac-use-quick-help tac-use-quick-help166,4796
(defcustom ac-quick-help-delay 1.5ac-quick-help-delay171,4904
(defcustom ac-menu-height 10ac-menu-height176,5010
(defvaralias 'ac-candidate-menu-height 'ac-menu-height)ac-candidate-menu-height180,5115
(defcustom ac-quick-help-height 20ac-quick-help-height182,5172
(defcustom ac-quick-help-prefer-pos-tip tac-quick-help-prefer-pos-tip187,5280
(defvaralias 'ac-quick-help-prefer-x 'ac-quick-help-prefer-pos-tip)ac-quick-help-prefer-x191,5449
(defcustom ac-candidate-limit nilac-candidate-limit193,5518
(defvaralias 'ac-candidate-max 'ac-candidate-limit)ac-candidate-max197,5654
(defcustom ac-modesac-modes199,5707
(defcustom ac-compatible-packages-regexpac-compatible-packages-regexp220,6454
(defcustom ac-non-trigger-commandsac-non-trigger-commands226,6612
(defcustom ac-trigger-commandsac-trigger-commands233,6825
(defcustom ac-trigger-commands-on-completingac-trigger-commands-on-completing239,7011
(defcustom ac-trigger-key nilac-trigger-key252,7389
(defcustom ac-auto-start 2ac-auto-start265,7924
(defcustom ac-stop-words nilac-stop-words275,8339
(defvaralias 'ac-ignores 'ac-stop-words)ac-ignores279,8457
(defcustom ac-use-dictionary-as-stop-words tac-use-dictionary-as-stop-words281,8499
(defcustom ac-ignore-case 'smartac-ignore-case286,8667
(defcustom ac-dwim tac-dwim295,9006
(defcustom ac-use-menu-map nilac-use-menu-map300,9135
(defcustom ac-use-overriding-local-map nilac-use-overriding-local-map305,9291
(defcustom ac-disable-inline nilac-disable-inline310,9485
(defcustom ac-candidate-menu-min 1ac-candidate-menu-min315,9610
(defcustom ac-max-width nilac-max-width320,9738
(defface ac-completion-faceac-completion-face327,9993
(defface ac-candidate-faceac-candidate-face332,10125
(defface ac-candidate-mouse-faceac-candidate-mouse-face337,10233
(defface ac-selection-faceac-selection-face342,10364
(defvar auto-complete-mode-hook nilauto-complete-mode-hook347,10496
(defvar auto-complete-mode nilauto-complete-mode354,10597
(defvar ac-cursor-color nilac-cursor-color357,10680
(defvar ac-inline nilac-inline360,10732
(defvar ac-menu nilac-menu363,10788
(defvar ac-show-menu nilac-show-menu366,10829
(defvar ac-last-completion nilac-last-completion369,10893
(defvar ac-quick-help nilac-quick-help372,10990
(defvar ac-completing nilac-completing375,11042
(defvar ac-buffer nilac-buffer378,11139
(defvar ac-point nilac-point381,11206
(defvar ac-last-point nilac-last-point384,11256
(defvar ac-prefix nilac-prefix387,11320
(defvaralias 'ac-target 'ac-prefix)ac-target389,11362
(defvar ac-selected-candidate nilac-selected-candidate391,11399
(defvar ac-common-part nilac-common-part394,11464
(defvar ac-whole-common-part nilac-whole-common-part398,11588
(defvar ac-prefix-overlay nilac-prefix-overlay402,11713
(defvar ac-timer nilac-timer405,11776
(defvar ac-show-menu-timer nilac-show-menu-timer408,11826
(defvar ac-quick-help-timer nilac-quick-help-timer411,11885
(defvar ac-triggered nilac-triggered414,11946
(defvar ac-limit nilac-limit417,11993
(defvar ac-candidates nilac-candidates420,12065
(defvar ac-candidates-cache nilac-candidates-cache423,12117
(defvar ac-fuzzy-enable nilac-fuzzy-enable426,12196
(defvar ac-dwim-enable nilac-dwim-enable429,12271
(defvar ac-mode-map (make-sparse-keymap)ac-mode-map432,12351
(defvar ac-completing-mapac-completing-map435,12490
(defvaralias 'ac-complete-mode-map 'ac-completing-map)ac-complete-mode-map468,13660
(defvar ac-menu-mapac-menu-map470,13716
(defvar ac-current-mapac-current-map484,14215
(defvar ac-match-function 'all-completionsac-match-function489,14331
(defvar ac-prefix-definitionsac-prefix-definitions492,14404
(defvar ac-sources '(ac-source-words-in-same-mode-buffers)ac-sources501,14682
(defvar ac-compiled-sources nilac-compiled-sources505,14812
(defvar ac-current-sources nilac-current-sources508,14883
(defvar ac-omni-completion-sources nilac-omni-completion-sources511,14987
(defvar ac-current-prefix-def nil)ac-current-prefix-def514,15057
(defvar ac-ignoring-prefix-def nil)ac-ignoring-prefix-def516,15093
(defvar ac-comphist nilac-comphist522,15170
(defsubst ac-comphist-make-tab ()ac-comphist-make-tab525,15232
(defsubst ac-comphist-tab (db)ac-comphist-tab528,15301
(defsubst ac-comphist-cache (db)ac-comphist-cache531,15347
(defun ac-comphist-make (&optional tab)ac-comphist-make534,15395
(defun ac-comphist-get (db string &optional create)ac-comphist-get537,15521
(defun ac-comphist-add (db string prefix)ac-comphist-add545,15782
(defun ac-comphist-score (db string prefix)ac-comphist-score553,16080
(defun ac-comphist-sort (db collection prefix &optional threshold)ac-comphist-sort579,17240
(defun ac-comphist-serialize (db)ac-comphist-serialize601,18163
(defun ac-comphist-deserialize (sexp)ac-comphist-deserialize608,18334
(defun ac-comphist-init ()ac-comphist-init617,18702
(defun ac-comphist-load ()ac-comphist-load621,18800
(defun ac-comphist-save ()ac-comphist-save631,19191
(defvar ac-buffer-dictionary nil)ac-buffer-dictionary642,19438
(defvar ac-file-dictionary (make-hash-table :test 'equal))ac-file-dictionary643,19472
(defun ac-clear-dictionary-cache ()ac-clear-dictionary-cache645,19532
(defun ac-file-dictionary (filename)ac-file-dictionary653,19790
(defun ac-mode-dictionary (mode)ac-mode-dictionary665,20199
(defun ac-buffer-dictionary (&optional buffer)ac-buffer-dictionary673,20589
(defun ac-menu-at-wrapper-line-p ()ac-menu-at-wrapper-line-p688,21074
(defun ac-stop-word-p (word)ac-stop-word-p696,21355
(defun ac-prefix-default ()ac-prefix-default701,21511
(defun ac-prefix-symbol ()ac-prefix-symbol711,21839
(defun ac-prefix-file ()ac-prefix-file716,21979
(defsubst ac-windows-remote-file-p (file)ac-windows-remote-file-p721,22111
(defun ac-prefix-valid-file ()ac-prefix-valid-file725,22266
(defun ac-prefix-c-dot ()ac-prefix-c-dot740,22927
(defun ac-prefix-c-dot-ref ()ac-prefix-c-dot-ref745,23099
(defun ac-prefix-cc-member ()ac-prefix-cc-member750,23306
(defun ac-define-prefix (name prefix)ac-define-prefix755,23511
(defun ac-match-substring (prefix candidates)ac-match-substring760,23699
(defsubst ac-source-entity (source)ac-source-entity766,23909
(defun ac-source-available-p (source)ac-source-available-p771,24010
(defun ac-compile-sources (sources)ac-compile-sources792,24922
(defun ac-compiled-sources ()ac-compiled-sources813,25716
(defsubst ac-menu-live-p ()ac-menu-live-p818,25852
(defun ac-menu-create (point width height)ac-menu-create821,25907
(defun ac-menu-delete ()ac-menu-delete835,26422
(defsubst ac-inline-overlay ()ac-inline-overlay840,26516
(defsubst ac-inline-live-p ()ac-inline-live-p843,26569
(defun ac-inline-show (point string)ac-inline-show846,26641
(defun ac-inline-delete ()ac-inline-delete902,28576
(defun ac-inline-hide ()ac-inline-hide908,28720
(defun ac-inline-update ()ac-inline-update918,29058
(defun ac-put-prefix-overlay ()ac-put-prefix-overlay929,29488
(defun ac-remove-prefix-overlay ()ac-remove-prefix-overlay942,29996
(defun ac-activate-completing-map ()ac-activate-completing-map952,30313
(defun ac-deactivate-completing-map ()ac-deactivate-completing-map961,30702
(defsubst ac-selected-candidate ()ac-selected-candidate969,31044
(defun ac-prefix (requires ignore-list)ac-prefix973,31132
(defun ac-init ()ac-init1015,32950
(defun ac-candidates-1 (source)ac-candidates-11028,33349
(defun ac-delete-duplicated-candidates (candidates)ac-delete-duplicated-candidates1071,35585
(defun ac-reduce-candidates (candidates)ac-reduce-candidates1082,35968
(defun ac-candidates ()ac-candidates1095,36485
(defun ac-update-candidates (cursor scroll-top)ac-update-candidates1129,38408
(defun ac-reposition ()ac-reposition1149,39094
(defun ac-cleanup ()ac-cleanup1158,39456
(defsubst ac-abort ()ac-abort1205,40911
(defun ac-extend-region-to-delete (string)ac-extend-region-to-delete1209,40972
(defun ac-expand-string (string &optional remove-undo-boundary)ac-expand-string1225,41711
(defun ac-set-trigger-key (key)ac-set-trigger-key1259,43266
(defun ac-set-timer ()ac-set-timer1270,43652
(defun ac-cancel-timer ()ac-cancel-timer1274,43775
(defun ac-update (&optional force)ac-update1279,43882
(defun ac-update-greedy (&optional force)ac-update-greedy1301,44716
(defun ac-set-show-menu-timer ()ac-set-show-menu-timer1310,45034
(defun ac-cancel-show-menu-timer ()ac-cancel-show-menu-timer1315,45286
(defun ac-show-menu ()ac-show-menu1320,45433
(defun ac-help (&optional persist)ac-help1327,45585
(defun ac-persist-help ()ac-persist-help1332,45702
(defun ac-last-help (&optional persist)ac-last-help1336,45760
(defun ac-last-persist-help ()ac-last-persist-help1341,45910
(defun ac-set-quick-help-timer ()ac-set-quick-help-timer1345,45978
(defun ac-cancel-quick-help-timer ()ac-cancel-quick-help-timer1350,46195
(defun ac-pos-tip-show-quick-help (menu &optional item &rest args)ac-pos-tip-show-quick-help1355,46346
(defun ac-quick-help-use-pos-tip-p ()ac-quick-help-use-pos-tip-p1382,47320
(defun ac-quick-help (&optional force)ac-quick-help1387,47445
(defun ac-remove-quick-help ()ac-remove-quick-help1407,48171
(defun ac-last-quick-help ()ac-last-quick-help1415,48372
(defmacro ac-define-quick-help-command (name arglist &rest body)ac-define-quick-help-command1431,48972
(defun ac-isearch-callback (list)ac-isearch-callback1451,49456
(defun ac-isearch ()ac-isearch1454,49537
(defun auto-complete (&optional sources)auto-complete1499,51122
(defun ac-fuzzy-complete ()ac-fuzzy-complete1504,51262
(defun ac-next ()ac-next1522,51873
(defun ac-previous ()ac-previous1532,52112
(defun ac-expand (arg)ac-expand1542,52367
(defun ac-expand-previous (arg)ac-expand-previous1564,53165
(defun ac-expand-common ()ac-expand-common1569,53296
(defun ac-complete-1 (candidate)ac-complete-11581,53639
(defun ac-complete ()ac-complete1601,54251
(defun ac-stop ()ac-stop1646,55851
(defun ac-ignore (&rest ignore)ac-ignore1652,55956
(defun ac-mouse-1 (event)ac-mouse-11656,56028
(defun ac-mouse-4 (event)ac-mouse-41661,56154
(defun ac-mouse-5 (event)ac-mouse-51665,56218
(defun ac-trigger-key-command (&optional force)ac-trigger-key-command1669,56278
(defvar ac-clear-variables-every-minute-timer nil)ac-clear-variables-every-minute-timer1681,56590
(defvar ac-clear-variables-after-save nil)ac-clear-variables-after-save1682,56641
(defvar ac-clear-variables-every-minute nil)ac-clear-variables-every-minute1683,56684
(defvar ac-minutes-counter 0)ac-minutes-counter1684,56729
(defun ac-clear-variable-after-save (variable &optional pred)ac-clear-variable-after-save1686,56760
(defun ac-clear-variables-after-save ()ac-clear-variables-after-save1689,56892
(defun ac-clear-variable-every-minutes (variable minutes)ac-clear-variable-every-minutes1695,57076
(defun ac-clear-variable-every-minute (variable)ac-clear-variable-every-minute1698,57209
(defun ac-clear-variable-every-10-minutes (variable)ac-clear-variable-every-10-minutes1701,57307
(defun ac-clear-variables-every-minute ()ac-clear-variables-every-minute1704,57410
(defun ac-cursor-on-diable-face-p (&optional point)ac-cursor-on-diable-face-p1714,57642
(defun ac-trigger-command-p (command)ac-trigger-command-p1717,57767
(defun ac-fallback-key-sequence ()ac-fallback-key-sequence1725,58115
(defun ac-fallback-command (&optional except-command)ac-fallback-command1731,58301
(defun ac-compatible-package-command-p (command)ac-compatible-package-command-p1740,58639
(defun ac-handle-pre-command ()ac-handle-pre-command1745,58856
(defun ac-handle-post-command ()ac-handle-post-command1764,59850
(defvar ac-flycheck-poll-completion-end-timer nilac-flycheck-poll-completion-end-timer1776,60241
(defun ac-syntax-checker-workaround ()ac-syntax-checker-workaround1779,60330
(defun ac-setup ()ac-setup1800,61337
(define-minor-mode auto-complete-modeauto-complete-mode1810,61672
(defun auto-complete-mode-maybe ()auto-complete-mode-maybe1827,62315
(define-global-minor-mode global-auto-complete-modeglobal-auto-complete-mode1834,62530
(defun ac-flyspell-workaround ()ac-flyspell-workaround1842,62701
(defun ac-linum-workaround ()ac-linum-workaround1851,63095
(defmacro ac-define-source (name source)ac-define-source1863,63408
(defvar ac-word-index nil)ac-word-index1877,64023
(defun ac-candidate-words-in-buffer (point prefix limit)ac-candidate-words-in-buffer1879,64051
(defun ac-incremental-update-word-index ()ac-incremental-update-word-index1903,64959
(defun ac-update-word-index-1 ()ac-update-word-index-11918,65512
(defun ac-update-word-index ()ac-update-word-index1929,65935
(defun ac-word-candidates (&optional buffer-pred)ac-word-candidates1936,66151
(defvar ac-symbols-cache nil)ac-symbols-cache1962,67239
(defun ac-symbol-file (symbol type)ac-symbol-file1965,67325
(defun ac-symbol-documentation (symbol)ac-symbol-documentation1997,68811
(defun ac-symbol-candidates ()ac-symbol-candidates2044,70587
(defvar ac-functions-cache nil)ac-functions-cache2060,71056
(defun ac-function-candidates ()ac-function-candidates2063,71146
(defvar ac-variables-cache nil)ac-variables-cache2078,71581
(defun ac-variable-candidates ()ac-variable-candidates2081,71671
(defvar ac-emacs-lisp-features nil)ac-emacs-lisp-features2095,72059
(defun ac-emacs-lisp-feature-candidates ()ac-emacs-lisp-feature-candidates2098,72157
(defvaralias 'ac-source-emacs-lisp-features 'ac-source-features)ac-source-emacs-lisp-features2116,73023
(defvar ac-filename-cache nil)ac-filename-cache2131,73468
(defun ac-filename-candidate ()ac-filename-candidate2133,73500

.cask/24.5.1/elpa/buffer-move-20160615.1103/buffer-move-autoloads.el,0

.cask/24.5.1/elpa/buffer-move-20160615.1103/buffer-move-pkg.el,171
(define-package "buffer-move" "20160615.1103" "easily swap buffers" 'nil :url "https://github.com/lukhas/buffer-move" :keywords '("lisp" "convenience"))"buffer-move"1,0

.cask/24.5.1/elpa/buffer-move-20160615.1103/buffer-move.el,533
(defconst buffer-move-version "0.6.1"buffer-move-version81,2759
(defgroup buffer-move nilbuffer-move84,2829
(defcustom buffer-move-behavior 'swapbuffer-move-behavior88,2926
(defcustom buffer-move-stay-after-swap nilbuffer-move-stay-after-swap95,3199
(defun buf-move-to (direction)buf-move-to102,3467
(defun buf-move-up ()buf-move-up130,4678
(defun buf-move-down ()buf-move-down140,4996
(defun buf-move-left ()buf-move-left148,5222
(defun buf-move-right ()buf-move-right156,5466
(defun buf-move ()buf-move164,5714

.cask/24.5.1/elpa/cask-20151123.528/cask-autoloads.el,151
(defvar package-enable-at-startup t "\package-enable-at-startup10,280
(defalias 'package-list-packages 'list-packages)package-list-packages65,2158

.cask/24.5.1/elpa/cask-20151123.528/cask-bootstrap.el,122
(defconst cask-bootstrap-dircask-bootstrap-dir33,1086
(defconst cask-bootstrap-packagescask-bootstrap-packages38,1248

.cask/24.5.1/elpa/cask-20151123.528/cask-cli.el,2407
(defconst cask-cli--table-padding 10cask-cli--table-padding46,1474
(defvar cask-cli--dev-mode nilcask-cli--dev-mode49,1567
(defvar cask-cli--path default-directorycask-cli--path52,1643
(defvar cask-cli--bundle-cache nil)cask-cli--bundle-cache55,1731
(defun cask-cli--bundle ()cask-cli--bundle57,1768
(defun cask-cli--print-dependency (dependency)cask-cli--print-dependency62,1940
(defun cask-cli--print-upgrade (upgrade)cask-cli--print-upgrade71,2215
(defun cask-cli--print-table (table)cask-cli--print-table79,2485
(defmacro cask-cli/with-handled-errors (&rest body)cask-cli/with-handled-errors93,2936
(defun cask-cli/pkg-file ()cask-cli/pkg-file122,4117
(defun cask-cli/install ()cask-cli/install130,4400
(defun cask-cli/upgrade-cask ()cask-cli/upgrade-cask138,4671
(defun cask-cli/exec (&rest args)cask-cli/exec159,5423
(defun cask-cli/update ()cask-cli/update162,5518
(defun cask-cli/init ()cask-cli/init172,5847
(defun cask-cli/list ()cask-cli/list180,6133
(defun cask-cli/version ()cask-cli/version192,6736
(defun cask-cli/info ()cask-cli/info196,6874
(defun cask-cli/help (&optional command-name)cask-cli/help206,7237
(defun cask-cli/load-path ()cask-cli/load-path212,7463
(defun cask-cli/exec-path ()cask-cli/exec-path218,7677
(defmacro cask-cli--with-package-path (&rest body)cask-cli--with-package-path227,8000
(defun cask-cli/eval (form)cask-cli/eval236,8283
(defun cask-cli/package-directory ()cask-cli/package-directory241,8432
(defun cask-cli/outdated ()cask-cli/outdated245,8581
(defun cask-cli/files ()cask-cli/files254,8867
(defun cask-cli/build ()cask-cli/build262,9095
(defun cask-cli/clean-elc ()cask-cli/clean-elc266,9206
(defun cask-cli/link (&optional command-or-name arg)cask-cli/link270,9340
(defun cask-cli/package (&optional target-dir)cask-cli/package313,10664
(defun cask-cli/cask-proxy (host)cask-cli/cask-proxy322,10858
(defun cask-cli/cask-http-proxy (host)cask-cli/cask-http-proxy327,11011
(defun cask-cli/cask-https-proxy (host)cask-cli/cask-https-proxy331,11137
(defun cask-cli/cask-no-proxy (host)cask-cli/cask-no-proxy335,11266
(defun cask-cli/cask-version ()cask-cli/cask-version339,11388
(defun cask-cli/set-path (path)cask-cli/set-path344,11504
(defun cask-cli/dev ()cask-cli/dev348,11631
(defun cask-cli/debug ()cask-cli/debug352,11707
(defun cask-cli/verbose ()cask-cli/verbose356,11786

.cask/24.5.1/elpa/cask-20151123.528/cask-pkg.el,106
(define-package "cask" "20151123.528" "Cask: Project management for Emacs package development""cask"1,0

.cask/24.5.1/elpa/cask-20151123.528/cask.el,5988
(define-error 'cask-error "Cask error")cask-error82,3246
(define-error 'cask-missing-dependency "Missing dependency" 'cask-error)cask-missing-dependency83,3286
(define-error 'cask-missing-dependencies "Missing dependencies" 'cask-error)cask-missing-dependencies84,3359
(define-error 'cask-failed-installation "Failed installation" 'cask-error)cask-failed-installation85,3436
(define-error 'cask-failed-initialization "Failed initialization" 'cask-error)cask-failed-initialization86,3511
(define-error 'cask-not-a-package "Missing `package` or `package-file` directive" 'cask-error)cask-not-a-package87,3590
(define-error 'cask-no-cask-file "Cask file does not exist" 'cask-error)cask-no-cask-file88,3685
(defvar cask-source-mappingcask-source-mapping159,5452
(defconst cask-filename "Cask"cask-filename168,5860
(defconst cask-dist-path "dist"cask-dist-path171,5922
(defvar cask-current-bundle nilcask-current-bundle174,6016
(defconst cask-fetcherscask-fetchers180,6191
(defconst cask-tmp-pathcask-tmp-path184,6285
(defconst cask-tmp-checkout-pathcask-tmp-checkout-path187,6356
(defconst cask-tmp-packages-pathcask-tmp-packages-path190,6429
(defun cask--find-unbalanced-parenthesis (bundle)cask--find-unbalanced-parenthesis196,6529
(defun cask--exit-error (bundle err)cask--exit-error207,6866
(defun cask--current-source-position ()cask--current-source-position232,7965
(defun cask--read (filename)cask--read237,8167
(defmacro cask--with-file (bundle &rest body)cask--with-file261,9107
(defun cask--use-environment (bundle &rest args)cask--use-environment270,9418
(defun cask--fetcher-dependencies (bundle)cask--fetcher-dependencies295,10266
(defun cask--has-fetcher-dependency-p (bundle)cask--has-fetcher-dependency-p299,10433
(defun cask--dependency-to-package-build-config (dependency)cask--dependency-to-package-build-config303,10591
(defun cask--checkout-and-package-dependency (dependency)cask--checkout-and-package-dependency312,11086
(defmacro cask--with-environment (bundle &rest body)cask--with-environment327,11849
(defmacro cask--with-package (bundle &rest body)cask--with-package349,12748
(defun cask--show-package-error (err filename)cask--show-package-error362,13164
(defun cask--eval (bundle forms &optional scope)cask--eval371,13558
(defun cask--template-get (name)cask--template-get410,15167
(defun cask--initialized-p (bundle)cask--initialized-p416,15398
(defun cask--epl-package-to-dependency (epl-package)cask--epl-package-to-dependency422,15572
(defun cask--epl-requirement-to-dependency (epl-requirement)cask--epl-requirement-to-dependency428,15799
(defun cask--find-available-package (name)cask--find-available-package434,16054
(defun cask--find-installed-package (name)cask--find-installed-package438,16186
(defun cask--uniq-dependencies (dependencies)cask--uniq-dependencies442,16331
(defun cask--compute-dependencies (dependencies package-function)cask--compute-dependencies451,16651
(defun cask--runtime-dependencies (bundle &optional deep)cask--runtime-dependencies470,17371
(defun cask--development-dependencies (bundle &optional deep)cask--development-dependencies477,17672
(defun cask--dependencies (bundle &optional deep)cask--dependencies484,17985
(defun cask--installed-dependencies (bundle &optional deep)cask--installed-dependencies489,18197
(defun cask--install-dependency (bundle dependency)cask--install-dependency496,18488
(defun cask--delete-dependency (bundle dependency)cask--delete-dependency511,19172
(defun cask--dependency-files (dependency)cask--dependency-files517,19424
(defun cask--from-epl-package (bundle package)cask--from-epl-package524,19702
(defun cask-setup (project-path)cask-setup538,20269
(defun cask-initialize (&optional project-path)cask-initialize555,20955
(defun cask-update (bundle)cask-update568,21490
(defun cask-outdated (bundle)cask-outdated586,22016
(defun cask-install (bundle)cask-install593,22209
(defun cask-caskify (bundle &optional dev-mode)cask-caskify624,23351
(defun cask-package-name (bundle)cask-package-name636,23790
(defun cask-package-version (bundle)cask-package-version642,23951
(defun cask-package-description (bundle)cask-package-description648,24121
(defun cask-version ()cask-version654,24303
(defun cask-load-path (bundle)cask-load-path660,24499
(defun cask-exec-path (bundle)cask-exec-path670,24818
(defun cask-elpa-path (bundle)cask-elpa-path683,25218
(defun cask-runtime-dependencies (bundle &optional deep)cask-runtime-dependencies687,25376
(defun cask-development-dependencies (bundle &optional deep)cask-development-dependencies696,25666
(defun cask-dependencies (bundle &optional deep)cask-dependencies705,25968
(defun cask-installed-dependencies (bundle &optional deep)cask-installed-dependencies714,26258
(defun cask-has-dependency (bundle name)cask-has-dependency721,26514
(defun cask-find-dependency (bundle name)cask-find-dependency725,26674
(defun cask-define-package-string (bundle)cask-define-package-string732,26875
(defun cask-define-package-file (bundle)cask-define-package-file746,27481
(defun cask-dependency-path (bundle name)cask-dependency-path751,27695
(defun cask-path (bundle)cask-path757,27891
(defun cask-file (bundle)cask-file761,27976
(defun cask-files (bundle)cask-files765,28087
(defun cask-add-dependency (bundle name &rest args)cask-add-dependency775,28494
(defun cask-add-source (bundle name-or-alias &optional url)cask-add-source813,29997
(defun cask-remove-source (bundle name)cask-remove-source830,30648
(defun cask-build (bundle)cask-build836,30903
(defun cask-clean-elc (bundle)cask-clean-elc848,31345
(defun cask-links (bundle)cask-links857,31645
(defun cask-link (bundle name source)cask-link869,32058
(defun cask-link-delete (bundle name)cask-link-delete901,33541
(defun cask-linked-p (bundle name)cask-linked-p911,33919
(defun cask-package (bundle &optional target-dir)cask-package916,34080

.cask/24.5.1/elpa/cask-20151123.528/package-legacy.el,7131
(defgroup package nilpackage176,7735
(defcustom package-enable-at-startup tpackage-enable-at-startup182,7852
(defcustom package-load-list '(all)package-load-list194,8297
(defvar Info-directory-list)Info-directory-list213,9111
(defvar url-http-end-of-headers)url-http-end-of-headers218,9352
(defcustom package-archives '(("gnu" . "https://elpa.gnu.org/packages/"))package-archives220,9386
(defconst package-archive-version 1package-archive-version236,10040
(defconst package-el-version "1.0"package-el-version240,10214
(defvar package-archive-contents nilpackage-archive-contents244,10341
(defcustom package-user-dir (locate-user-emacs-file "elpa")package-user-dir253,10783
(defcustom package-directory-listpackage-directory-list263,11105
(defvar package--builtins nilpackage--builtins283,11832
(defvar package-alist nilpackage-alist297,12422
(defvar package-activated-list nilpackage-activated-list312,13071
(defvar package-obsolete-alist nilpackage-obsolete-alist316,13217
(defconst package-subdirectory-regexppackage-subdirectory-regexp322,13449
(defun package-version-join (vlist)package-version-join328,13740
(defun package-strip-version (dirname)package-strip-version357,14667
(defun package-load-descriptor (dir package)package-load-descriptor363,14912
(defun package-load-all-descriptors ()package-load-all-descriptors375,15402
(defsubst package-desc-vers (desc)package-desc-vers408,16699
(defsubst package-desc-reqs (desc)package-desc-reqs412,16807
(defsubst package-desc-doc (desc)package-desc-doc416,16920
(defsubst package-desc-kind (desc)package-desc-kind420,17030
(defun package--dir (name version)package--dir424,17160
(defun package-activate-1 (package pkg-vec)package-activate-1438,17642
(defun package-built-in-p (package &optional version)package-built-in-p458,18409
(defun package-activate (package version)package-activate468,18953
(defun package-mark-obsolete (package pkg-vec)package-mark-obsolete499,20207
(defun define-package (name-string version-stringdefine-package513,20752
(defun package-autoload-ensure-default-file (file)package-autoload-ensure-default-file554,22330
(defun package-generate-autoloads (name pkg-dir)package-generate-autoloads572,22880
(defun package-untar-buffer ()package-untar-buffer582,23303
(defun package-unpack (name version)package-unpack599,23859
(defun package--write-file-no-coding (file-name)package--write-file-no-coding610,24351
(defun package-unpack-single (file-name version desc requires)package-unpack-single614,24508
(defmacro package--with-work-buffer (location file &rest body)package--with-work-buffer652,25710
(defun package-handle-response ()package-handle-response680,26863
(defun package-download-single (name version desc requires)package-download-single695,27496
(defun package-download-tar (name version)package-download-tar702,27826
(defun package-installed-p (package &optional min-version)package-installed-p709,28097
(defun package-compute-transaction (package-list requirements)package-compute-transaction719,28477
(defun package-read-from-string (str)package-read-from-string771,30611
(defun package--read-archive-file (file)package--read-archive-file786,31084
(defun package-read-all-archive-contents ()package-read-all-archive-contents800,31685
(defun package-read-archive-contents (archive)package-read-archive-contents807,31950
(defun package--add-to-archive-contents (package archive)package--add-to-archive-contents820,32504
(defun package-download-transaction (package-list)package-download-transaction832,33077
(defun package-install (name)package-install857,34059
(defun package-strip-rcs-id (str)package-strip-rcs-id878,34776
(defun package-buffer-info ()package-buffer-info890,35150
(defun package-tar-file-info (file)package-tar-file-info939,37074
(defun package-install-from-buffer (pkg-info type)package-install-from-buffer985,38927
(defun package-install-file (file)package-install-file1018,40149
(defun package-delete (name version)package-delete1031,40674
(defun package-archive-base (name)package-archive-base1043,41100
(defun package--download-one-archive (archive file)package--download-one-archive1048,41330
(defun package-refresh-contents ()package-refresh-contents1064,42063
(defvar package--initialized nil)package--initialized1078,42605
(defun package-initialize (&optional no-activate)package-initialize1081,42655
(defun describe-package (package)describe-package1099,43233
(defun describe-package-1 (package)describe-package-11129,44355
(defun package-install-button-action (button)package-install-button-action1246,48655
(defvar package-menu-mode-mappackage-menu-mode-map1256,48940
(defvar package-menu-sort-button-mappackage-menu-sort-button-map1322,51924
(define-derived-mode package-menu-mode special-mode "Package Menu"package-menu-mode1332,52294
(defun package-menu-refresh ()package-menu-refresh1366,53439
(defun package-menu-revert (&optional arg noconfirm)package-menu-revert1376,53810
(defun package-menu-describe-package ()package-menu-describe-package1385,54150
(defun package-menu-mark-internal (what)package-menu-mark-internal1393,54388
(defun package-menu-mark-delete (num)package-menu-mark-delete1402,54599
(defun package-menu-mark-install (num)package-menu-mark-install1409,54836
(defun package-menu-mark-unmark (num)package-menu-mark-unmark1416,55078
(defun package-menu-backup-unmark ()package-menu-backup-unmark1421,55233
(defun package-menu-mark-obsolete-for-deletion ()package-menu-mark-obsolete-for-deletion1428,55421
(defun package-menu-quick-help ()package-menu-quick-help1439,55726
(defun package-menu-get-package ()package-menu-get-package1448,56066
(defun package-menu-get-version ()package-menu-get-version1455,56276
(defun package-menu-get-status ()package-menu-get-status1461,56427
(defun package-menu-execute ()package-menu-execute1467,56575
(defun package-print-package (package version key desc)package-print-package1521,58332
(defun package-list-maybe-add (package version status description result)package-list-maybe-add1550,59411
(defvar package-menu-package-list nilpackage-menu-package-list1555,59612
(defvar package-menu-sort-key nilpackage-menu-sort-key1559,59758
(defun package--generate-package-list ()package--generate-package-list1562,59844
(defun package-menu--version-predicate (left right)package-menu--version-predicate1646,62478
(defun package-menu--status-predicate (left right)package-menu--status-predicate1653,62735
(defun package-menu--description-predicate (left right)package-menu--description-predicate1670,63311
(defun package-menu--name-predicate (left right)package-menu--name-predicate1677,63539
(defun package-menu-sort-by-column (&optional e)package-menu-sort-by-column1681,63659
(defun package--list-packages (&optional packages)package--list-packages1695,64177
(defun list-packages ()list-packages1711,64884
(defalias 'package-list-packages 'list-packages)package-list-packages1723,65247
(defun package-list-packages-no-fetch ()package-list-packages-no-fetch1725,65297

.cask/24.5.1/elpa/dash-20160619.611/dash-autoloads.el,0

.cask/24.5.1/elpa/dash-20160619.611/dash-pkg.el,110
(define-package "dash" "20160619.611" "A modern list library for Emacs" 'nil :keywords '("lists"))"dash"1,0

.cask/24.5.1/elpa/dash-20160619.611/dash.el,14120
(defgroup dash ()dash37,1343
(defun dash--enable-fontlock (symbol value)dash--enable-fontlock42,1428
(defcustom dash-enable-fontlock nildash-enable-fontlock47,1546
(defmacro !cons (car cdr)!cons54,1729
(defmacro !cdr (list)!cdr58,1842
(defmacro --each (list &rest body)--each62,1940
(defmacro -doto (eval-initial-value &rest forms)-doto75,2270
(defun -each (list fn)-each90,2870
(defalias '--each-indexed '--each)--each-indexed96,3042
(defun -each-indexed (list fn)-each-indexed98,3078
(defmacro --each-while (list pred &rest body)--each-while107,3349
(defun -each-while (list pred fn)-each-while122,3796
(defmacro --dotimes (num &rest body)--dotimes129,4038
(defun -dotimes (num fn)-dotimes140,4383
(defun -map (fn list)-map146,4581
(defmacro --map (form list)--map150,4708
(defmacro --reduce-from (form initial-value list)--reduce-from155,4838
(defun -reduce-from (fn initial-value list)-reduce-from162,5043
(defmacro --reduce (form list)--reduce174,5470
(defun -reduce (fn list)-reduce183,5734
(defun -reduce-r-from (fn initial-value list)-reduce-r-from198,6263
(defmacro --reduce-r-from (form initial-value list)--reduce-r-from210,6722
(defun -reduce-r (fn list)-reduce-r215,6931
(defmacro --reduce-r (form list)--reduce-r234,7598
(defmacro --filter (form list)--filter239,7758
(defun -filter (pred list)-filter247,7979
(defalias '-select '-filter)-select255,8164
(defalias '--select '--filter)--select256,8193
(defmacro --remove (form list)--remove258,8225
(defun -remove (pred list)-remove263,8355
(defalias '-reject '-remove)-reject269,8509
(defalias '--reject '--remove)--reject270,8538
(defun -remove-first (pred list)-remove-first272,8570
(defmacro --remove-first (form list)--remove-first286,8931
(defalias '-reject-first '-remove-first)-reject-first291,9086
(defalias '--reject-first '--remove-first)--reject-first292,9127
(defun -remove-last (pred list)-remove-last294,9171
(defmacro --remove-last (form list)--remove-last302,9375
(defalias '-reject-last '-remove-last)-reject-last307,9527
(defalias '--reject-last '--remove-last)--reject-last308,9566
(defun -remove-item (item list)-remove-item310,9608
(defmacro --keep (form list)--keep316,9755
(defun -keep (fn list)-keep325,10023
(defun -non-nil (list)-non-nil331,10242
(defmacro --map-indexed (form list)--map-indexed335,10331
(defun -map-indexed (fn list)-map-indexed344,10561
(defmacro --map-when (pred rep list)--map-when352,10834
(defun -map-when (pred rep list)-map-when360,11071
(defalias '-replace-where '-map-when)-replace-where370,11412
(defalias '--replace-where '--map-when)--replace-where371,11450
(defun -map-first (pred rep list)-map-first373,11491
(defmacro --map-first (pred rep list)--map-first385,11889
(defun -map-last (pred rep list)-map-last389,12038
(defmacro --map-last (pred rep list)--map-last395,12250
(defun -replace (old new list)-replace399,12396
(defun -replace-first (old new list)-replace-first407,12575
(defun -replace-last (old new list)-replace-last415,12773
(defmacro --mapcat (form list)--mapcat423,12967
(defun -mapcat (fn list)-mapcat428,13104
(defun -flatten (l)-flatten433,13272
(defmacro --iterate (form init n)--iterate449,13807
(defun -flatten-n (num list)-flatten-n454,13960
(defun -concat (&rest lists)-concat460,14120
(defalias '-copy 'copy-sequence-copy464,14259
(defun -splice (pred fun list)-splice467,14328
(defmacro --splice (pred form list)--splice485,14843
(defun -splice-list (pred new-list list)-splice-list489,14973
(defmacro --splice-list (pred new-list list)--splice-list495,15159
(defun -cons* (&rest args)-cons*499,15298
(defun -snoc (list elem &rest elements)-snoc507,15542
(defmacro --first (form list)--first515,15776
(defun -first (pred list)-first524,16007
(defalias '-find '-first)-find532,16220
(defalias '--find '--first)--find533,16246
(defmacro --some (form list)--some535,16275
(defun -some (pred list)-some544,16494
(defalias '-any '-some)-any550,16651
(defalias '--any '--some)--any551,16675
(defmacro --last (form list)--last553,16702
(defun -last (pred list)-last562,16916
(defalias '-first-item 'car-first-item566,17044
(defun -last-item (list)-last-item569,17134
(defun -butlast (list)-butlast573,17240
(defmacro --count (pred list)--count578,17397
(defun -count (pred list)-count586,17613
(defun ---truthy? (val)---truthy?590,17745
(defmacro --any? (form list)--any?593,17790
(defun -any? (pred list)-any?598,17922
(defalias '-some? '-any?)-some?604,18086
(defalias '--some? '--any?)--some?605,18112
(defalias '-any-p '-any?)-any-p606,18140
(defalias '--any-p '--any?)--any-p607,18166
(defalias '-some-p '-any?)-some-p608,18194
(defalias '--some-p '--any?)--some-p609,18221
(defmacro --all? (form list)--all?611,18251
(defun -all? (pred list)-all?619,18469
(defalias '-every? '-all?)-every?625,18635
(defalias '--every? '--all?)--every?626,18662
(defalias '-all-p '-all?)-all-p627,18691
(defalias '--all-p '--all?)--all-p628,18717
(defalias '-every-p '-all?)-every-p629,18745
(defalias '--every-p '--all?)--every-p630,18773
(defmacro --none? (form list)--none?632,18804
(defun -none? (pred list)-none?637,18930
(defalias '-none-p '-none?)-none-p643,19072
(defalias '--none-p '--none?)--none-p644,19100
(defmacro --only-some? (form list)--only-some?646,19131
(defun -only-some? (pred list)-only-some?656,19443
(defalias '-only-some-p '-only-some?)-only-some-p663,19743
(defalias '--only-some-p '--only-some?)--only-some-p664,19781
(defun -slice (list from &optional to step)-slice666,19822
(defun -take (n list)-take692,20664
(defun -take-last (n list)-take-last703,20933
(defalias '-drop 'nthcdr-drop709,21059
(defun -drop-last (n list)-drop-last714,21165
(defmacro --take-while (form list)--take-while721,21347
(defun -take-while (pred list)-take-while729,21575
(defmacro --drop-while (form list)--drop-while733,21743
(defun -drop-while (pred list)-drop-while742,21989
(defun -split-at (n list)-split-at746,22154
(defun -rotate (n list)-rotate755,22420
(defun -insert-at (n x list)-insert-at762,22664
(defun -replace-at (n x list)-replace-at769,22889
(defun -update-at (n func list)-update-at776,23119
(defmacro --update-at (n form list)--update-at783,23409
(defun -remove-at (n list)-remove-at788,23568
(defun -remove-at-indices (indices list)-remove-at-indices794,23741
(defmacro --split-with (pred list)--split-with810,24263
(defun -split-with (pred list)-split-with827,24734
(defmacro -split-on (item list)-split-on831,24922
(defmacro --split-when (form list)--split-when843,25253
(defun -split-when (fn list)-split-when848,25405
(defmacro --separate (form list)--separate866,25928
(defun -separate (pred list)-separate875,26217
(defun ---partition-all-in-steps-reversed (n step list)---partition-all-in-steps-reversed879,26380
(defun -partition-all-in-steps (n step list)-partition-all-in-steps889,26745
(defun -partition-in-steps (n step list)-partition-in-steps894,26999
(defun -partition-all (n list)-partition-all903,27392
(defun -partition (n list)-partition908,27584
(defmacro --partition-by (form list)--partition-by914,27811
(defun -partition-by (fn list)-partition-by941,28630
(defmacro --partition-by-header (form list)--partition-by-header945,28785
(defun -partition-by-header (fn list)-partition-by-header976,29756
(defmacro --group-by (form list)--group-by983,30051
(defun -group-by (fn list)-group-by1005,30603
(defun -interpose (sep list)-interpose1010,30782
(defun -interleave (&rest lists)-interleave1021,31073
(defmacro --zip-with (form list1 list2)--zip-with1029,31337
(defun -zip-with (fn list1 list2)-zip-with1048,31890
(defun -zip (&rest lists)-zip1058,32290
(defalias '-zip-pair '-zip)-zip-pair1079,33176
(defun -zip-fill (fill-value &rest lists)-zip-fill1081,33205
(defun -cycle (list)-cycle1087,33454
(defun -pad (fill-value &rest lists)-pad1093,33651
(defun -annotate (fn list)-annotate1100,33965
(defmacro --annotate (form list)--annotate1105,34153
(defun dash--table-carry (lists restore-lists &optional re)dash--table-carry1110,34299
(defun -table (fn &rest lists)-table1125,34736
(defun -table-flat (fn &rest lists)-table-flat1146,35478
(defun -partial (fn &rest args)-partial1175,36457
(defun -elem-index (elem list)-elem-index1182,36743
(defun -elem-indices (elem list)-elem-indices1188,36948
(defun -find-indices (pred list)-find-indices1193,37129
(defmacro --find-indices (form list)--find-indices1198,37342
(defun -find-index (pred list)-find-index1203,37500
(defmacro --find-index (form list)--find-index1211,37740
(defun -find-last-index (pred list)-find-last-index1216,37892
(defmacro --find-last-index (form list)--find-last-index1224,38142
(defun -select-by-indices (indices list)-select-by-indices1228,38277
(defun -select-columns (columns table)-select-columns1236,38507
(defun -select-column (column table)-select-column1248,38862
(defmacro -> (x &optional form &rest more)->1259,39199
(defmacro ->> (x &optional form &rest more)->>1271,39650
(defmacro --> (x form &rest more)-->1283,40082
(defmacro -some-> (x &optional form &rest more)-some->1294,40474
(defmacro -some->> (x &optional form &rest more)-some->>1303,40823
(defmacro -some--> (x &optional form &rest more)-some-->1312,41178
(defun -grade-up (comparator list)-grade-up1321,41533
(defun -grade-down (comparator list)-grade-down1331,41948
(defvar dash--source-counter 0dash--source-counter1341,42366
(defun dash--match-make-source-symbol ()dash--match-make-source-symbol1344,42444
(defun dash--match-ignore-place-p (symbol)dash--match-ignore-place-p1351,42710
(defun dash--match-cons-skip-cdr (skip-cdr source)dash--match-cons-skip-cdr1356,42885
(defun dash--match-cons-get-car (skip-cdr source)dash--match-cons-get-car1365,43177
(defun dash--match-cons-get-cdr (skip-cdr source)dash--match-cons-get-cdr1375,43415
(defun dash--match-cons (match-form source)dash--match-cons1385,43647
(defun dash--match-cons-1 (match-form source &optional props)dash--match-cons-11409,44595
(defun dash--vector-tail (seq start)dash--vector-tail1443,46025
(defun dash--match-vector (match-form source)dash--match-vector1454,46347
(defun dash--match-vector-1 (match-form source)dash--match-vector-11473,47286
(defun dash--match-kv (match-form source)dash--match-kv1513,48756
(defun dash--match-kv-1 (match-form source type)dash--match-kv-11528,49405
(defun dash--match-symbol (match-form source)dash--match-symbol1558,50685
(defun dash--match (match-form source)dash--match1564,50842
(defmacro -let* (varlist &rest body)-let*1598,52062
(defmacro -let (varlist &rest body)-let1616,52733
(defmacro -lambda (match-form &rest body)-lambda1756,57677
(defmacro -if-let* (vars-vals then &rest else)-if-let*1789,58979
(defmacro -if-let (var-val then &rest else)-if-let1808,59627
(defmacro --if-let (val then &rest else)--if-let1817,59937
(defmacro -when-let* (vars-vals &rest body)-when-let*1824,60156
(defmacro -when-let (var-val &rest body)-when-let1836,60588
(defmacro --when-let (val &rest body)--when-let1845,60875
(defvar -compare-fn nil-compare-fn1852,61070
(defun -distinct (list)-distinct1858,61288
(defalias '-uniq '-distinct)-uniq1868,61573
(defun -union (list list2)-union1870,61603
(defun -intersection (list list2)-intersection1889,62493
(defun -difference (list list2)-difference1895,62746
(defun -contains? (list element)-contains?1901,62986
(defalias '-contains-p '-contains?)-contains-p1921,63522
(defun -same-items? (list list2)-same-items?1923,63559
(defalias '-same-items-p '-same-items?)-same-items-p1935,63889
(defun -is-prefix? (prefix list)-is-prefix?1937,63930
(defun -is-suffix? (suffix list)-is-suffix?1945,64115
(defun -is-infix? (infix list)-is-infix?1951,64269
(defalias '-is-prefix-p '-is-prefix?)-is-prefix-p1963,64525
(defalias '-is-suffix-p '-is-suffix?)-is-suffix-p1964,64563
(defalias '-is-infix-p '-is-infix?)-is-infix-p1965,64601
(defun -sort (comparator list)-sort1967,64638
(defmacro --sort (form list)--sort1974,64961
(defun -list (&rest args)-list1979,65098
(defun -repeat (n x)-repeat1987,65320
(defun -sum (list)-sum1994,65472
(defun -product (list)-product1998,65539
(defun -max (list)-max2002,65614
(defun -min (list)-min2006,65717
(defun -max-by (comparator list)-max-by2010,65821
(defun -min-by (comparator list)-min-by2018,66120
(defmacro --max-by (form list)--max-by2026,66416
(defmacro --min-by (form list)--min-by2033,66634
(defun -iterate (fun init n)-iterate2040,66852
(defun -fix (fn list)-fix2054,67181
(defmacro --fix (form list)--fix2064,67460
(defun -unfold (fun seed)-unfold2068,67556
(defmacro --unfold (form seed)--unfold2084,68077
(defun -cons-pair? (con)-cons-pair?2089,68217
(defun -cons-to-list (con)-cons-to-list2095,68379
(defun -value-to-list (val)-value-to-list2099,68518
(defun -tree-mapreduce-from (fn folder init-value tree)-tree-mapreduce-from2110,68803
(defmacro --tree-mapreduce-from (form folder init-value tree)--tree-mapreduce-from2127,69481
(defun -tree-mapreduce (fn folder tree)-tree-mapreduce2132,69723
(defmacro --tree-mapreduce (form folder tree)--tree-mapreduce2149,70348
(defun -tree-map (fn tree)-tree-map2154,70547
(defmacro --tree-map (form tree)--tree-map2163,70812
(defun -tree-reduce-from (fn init-value tree)-tree-reduce-from2168,70955
(defmacro --tree-reduce-from (form init-value tree)--tree-reduce-from2184,71513
(defun -tree-reduce (fn tree)-tree-reduce2189,71712
(defmacro --tree-reduce (form tree)--tree-reduce2204,72219
(defun -tree-map-nodes (pred fun tree)-tree-map-nodes2209,72375
(defmacro --tree-map-nodes (pred form tree)--tree-map-nodes2222,72797
(defun -tree-seq (branch children tree)-tree-seq2226,72951
(defmacro --tree-seq (branch children tree)--tree-seq2241,73489
(defun -clone (list)-clone2245,73637
(defun dash-enable-font-lock ()dash-enable-font-lock2252,73886

.cask/24.5.1/elpa/epl-20150517.433/epl-autoloads.el,0

.cask/24.5.1/elpa/epl-20150517.433/epl-pkg.el,151
(define-package "epl" "20150517.433" "Emacs Package Library" '((cl-lib "0.3")) :url "http://github.com/cask/epl" :keywords '("convenience"))"epl"1,0

.cask/24.5.1/elpa/epl-20150517.433/epl.el,3820
(defsubst epl--package-desc-p (package)epl--package-desc-p145,4954
(define-error 'epl-error "EPL error")epl-error154,5208
(define-error 'epl-invalid-package "Invalid EPL package" 'epl-error)epl-invalid-package156,5247
(define-error 'epl-invalid-package-file "Invalid EPL package file"epl-invalid-package-file158,5317
(defun epl-package-dir ()epl-package-dir163,5433
(defun epl-default-package-dir ()epl-default-package-dir167,5515
(defun epl-change-package-dir (directory)epl-change-package-dir171,5649
(defvar epl--load-path-before-initialize nilepl--load-path-before-initialize178,5831
(defun epl-initialize (&optional no-activate)epl-initialize181,5922
(defalias 'epl-refresh 'package-refresh-contents)epl-refresh188,6158
(defun epl-add-archive (name url)epl-add-archive190,6209
(defun epl-reset ()epl-reset194,6340
(defun epl-requirement-version-string (requirement)epl-requirement-version-string221,7099
(defmacro epl-package-as-description (var &rest body)epl-package-as-description244,7770
(defsubst epl-package--package-desc-p (package)epl-package--package-desc-p258,8290
(defun epl-package-version (package)epl-package-version262,8458
(defun epl-package-version-string (package)epl-package-version-string273,8890
(defun epl-package-summary (package)epl-package-summary277,9038
(defsubst epl-requirement--from-req (req)epl-requirement--from-req285,9369
(defun epl-package-requirements (package)epl-package-requirements292,9679
(defun epl-package-directory (package)epl-package-directory299,9927
(defun epl-package-->= (pkg1 pkg2)epl-package-->=312,10429
(defun epl-package--from-package-desc (package-desc)epl-package--from-package-desc317,10622
(defun epl-package--parse-info (info)epl-package--parse-info328,11082
(defun epl-package-from-buffer (&optional buffer)epl-package-from-buffer340,11646
(defun epl-package-from-lisp-file (file-name)epl-package-from-lisp-file353,12117
(defun epl-package-from-tar-file (file-name)epl-package-from-tar-file367,12633
(defun epl-package-from-file (file-name)epl-package-from-file392,13890
(defun epl-package--parse-descriptor-requirement (requirement)epl-package--parse-descriptor-requirement401,14193
(defun epl-package-from-descriptor-file (descriptor-file)epl-package-from-descriptor-file408,14542
(defun epl-package-installed-p (package)epl-package-installed-p442,16072
(defun epl--parse-built-in-entry (entry)epl--parse-built-in-entry453,16479
(defun epl-built-in-packages ()epl-built-in-packages463,16934
(defun epl-find-built-in-package (name)epl-find-built-in-package473,17300
(defun epl-package-outdated-p (package)epl-package-outdated-p486,17768
(defun epl--parse-package-list-entry (entry)epl--parse-package-list-entry507,18670
(defun epl-installed-packages ()epl-installed-packages528,19530
(defsubst epl--filter-outdated-packages (packages)epl--filter-outdated-packages534,19706
(defun epl-outdated-packages ()epl-outdated-packages542,19941
(defsubst epl--find-package-in-list (name list)epl--find-package-in-list548,20132
(defun epl-find-installed-package (name)epl-find-installed-package556,20379
(defun epl-find-installed-packages (name)epl-find-installed-packages567,20760
(defun epl-available-packages ()epl-available-packages577,21077
(defun epl-find-available-packages (name)epl-find-available-packages584,21307
(defun epl-find-upgrades (&optional packages)epl-find-upgrades605,21872
(defalias 'epl-built-in-p 'package-built-in-p)epl-built-in-p628,22816
(defalias 'epl-install-file 'package-install-file)epl-install-file633,22890
(defun epl-package-install (package &optional force)epl-package-install635,22942
(defun epl-package-delete (package)epl-package-delete647,23449
(defun epl-upgrade (&optional packages preserve-obsolete)epl-upgrade675,24899

.cask/24.5.1/elpa/f-20160426.527/f-autoloads.el,0

.cask/24.5.1/elpa/f-20160426.527/f-pkg.el,198
(define-package "f" "20160426.527" "Modern API for working with files and directories" '((s "1.7.0") (dash "2.2.0")) :url "http://github.com/rejeep/f.el" :keywords '("files" "directories"))"f"1,0

.cask/24.5.1/elpa/f-20160426.527/f.el,3721
(defvar f--guard-paths nilf--guard-paths42,1372
(defmacro f--destructive (path &rest body)f--destructive47,1481
(defun f-join (&rest args)f-join62,1898
(defun f-split (path)f-split71,2131
(defun f-expand (path &optional dir)f-expand78,2348
(defun f-filename (path)f-filename83,2533
(defalias 'f-parent 'f-dirname)f-parent87,2643
(defun f-dirname (path)f-dirname88,2675
(defun f-common-parent (paths)f-common-parent96,2949
(defun f-ext (path)f-ext116,3585
(defun f-no-ext (path)f-no-ext123,3793
(defun f-swap-ext (path ext)f-swap-ext127,3906
(defun f-base (path)f-base134,4127
(defun f-relative (path &optional dir)f-relative138,4243
(defalias 'f-abbrev 'f-short)f-abbrev142,4349
(defun f-short (path)f-short143,4379
(defun f-long (path)f-long147,4488
(defun f-canonical (path)f-canonical151,4562
(defun f-slash (path)f-slash155,4652
(defun f-full (path)f-full164,4865
(defun f--uniquify (paths)f--uniquify168,4967
(defun f-uniquify (files)f-uniquify184,5740
(defun f-uniquify-alist (files)f-uniquify-alist190,5882
(defun f-read-bytes (path)f-read-bytes199,6066
(defalias 'f-read 'f-read-text)f-read209,6370
(defun f-read-text (path &optional coding)f-read-text210,6402
(defalias 'f-write 'f-write-text)f-write218,6625
(defun f-write-text (text coding path)f-write-text219,6659
(defun f-unibyte-string-p (s)f-unibyte-string-p226,6905
(defun f-write-bytes (data path)f-write-bytes230,7013
(defun f-mkdir (&rest dirs)f-mkdir247,7512
(defun f-delete (path &optional force)f-delete257,7763
(defun f-symlink (source path)f-symlink266,8044
(defun f-move (from to)f-move270,8180
(defun f-copy (from to)f-copy274,8283
(defun f-touch (path)f-touch292,8980
(defun f-exists? (path)f-exists?302,9202
(defalias 'f-dir? 'f-directory?)f-dir?306,9297
(defun f-directory? (path)f-directory?307,9330
(defun f-file? (path)f-file?311,9437
(defun f-symlink? (path)f-symlink?315,9532
(defun f-readable? (path)f-readable?319,9645
(defun f-writable? (path)f-writable?323,9749
(defun f-executable? (path)f-executable?327,9853
(defun f-absolute? (path)f-absolute?331,9963
(defun f-relative? (path)f-relative?335,10072
(defun f-root? (path)f-root?339,10178
(defun f-ext? (path &optional ext)f-ext?343,10283
(defalias 'f-equal? 'f-same?)f-equal?355,10653
(defun f-same? (path-a path-b)f-same?356,10683
(defun f-parent-of? (path-a path-b)f-parent-of?362,10859
(defun f-child-of? (path-a path-b)f-child-of?367,10998
(defun f-ancestor-of? (path-a path-b)f-ancestor-of?372,11135
(defun f-descendant-of? (path-a path-b)f-descendant-of?378,11329
(defun f-size (path)f-size387,11540
(defun f-depth (path)f-depth396,11800
(defun f-this-file ()f-this-file407,12064
(defun f-path-separator ()f-path-separator415,12297
(defun f-glob (pattern &optional path)f-glob419,12388
(defun f--collect-entries (path recursive)f--collect-entries424,12529
(defmacro f--entries (path body &optional recursive)f--entries445,13198
(defun f-entries (path &optional fn recursive)f-entries454,13389
(defmacro f--directories (path body &optional recursive)f--directories463,13750
(defun f-directories (path &optional fn recursive)f-directories472,13953
(defmacro f--files (path body &optional recursive)f--files477,14190
(defun f-files (path &optional fn recursive)f-files486,14375
(defmacro f--up (body &optional dir)f--up491,14577
(defun f-up (fn &optional dir)f-up501,14778
(defmacro f--traverse-upwards (body &optional path)f--traverse-upwards516,15217
(defun f-traverse-upwards (fn &optional path)f-traverse-upwards524,15408
(defun f-root ()f-root541,15949
(defmacro f-with-sandbox (path-or-paths &rest body)f-with-sandbox545,16026

.cask/24.5.1/elpa/helm-20160623.2215/emacs-helm.sh,0

.cask/24.5.1/elpa/helm-20160623.2215/helm-adaptive.el,1008
(defgroup helm-adapt nilhelm-adapt27,929
(defcustom helm-adaptive-history-filehelm-adaptive-history-file31,1018
(defcustom helm-adaptive-history-length 50helm-adaptive-history-length37,1186
(defvar helm-adaptive-done nilhelm-adaptive-done44,1336
(defvar helm-adaptive-history nilhelm-adaptive-history48,1445
(defun helm-adaptive-done-reset ()helm-adaptive-done-reset52,1609
(define-minor-mode helm-adaptive-modehelm-adaptive-mode56,1693
(defun helm-adapt-use-adaptive-p (&optional source-name)helm-adapt-use-adaptive-p79,2784
(defun helm-adaptive-store-selection ()helm-adaptive-store-selection95,3778
(defun helm-adaptive-maybe-load-history ()helm-adaptive-maybe-load-history150,6893
(defun helm-adaptive-save-history (&optional arg)helm-adaptive-save-history156,7171
(defun helm-adaptive-sort (candidates source)helm-adaptive-sort169,7673
(defun helm-reset-adaptive-history ()helm-reset-adaptive-history217,10524
(defun helm-adaptive-compare (x y)helm-adaptive-compare225,10856

.cask/24.5.1/elpa/helm-20160623.2215/helm-apt.el,2274
(defgroup helm-apt nilhelm-apt32,1100
(defcustom helm-apt-cache-show-function 'helm-apt-cache-show-1helm-apt-cache-show-function36,1193
(defcustom helm-apt-actionshelm-apt-actions44,1534
(defface helm-apt-installedhelm-apt-installed54,1905
(defface helm-apt-deinstalledhelm-apt-deinstalled59,2031
(defvar helm-apt-maphelm-apt-map65,2165
(defvar helm-source-apthelm-source-apt75,2527
(defvar helm-apt-search-command "apt-cache search '%s'")helm-apt-search-command88,2971
(defvar helm-apt-show-command "apt-cache show '%s'")helm-apt-show-command89,3028
(defvar helm-apt-installed-packages nil)helm-apt-installed-packages90,3081
(defvar helm-apt-all-packages nil)helm-apt-all-packages91,3122
(defvar helm-apt-input-history nil)helm-apt-input-history92,3157
(defvar helm-apt-show-only 'all)helm-apt-show-only93,3193
(defvar helm-apt-term-buffer nil)helm-apt-term-buffer94,3226
(defvar helm-apt-default-archs nil)helm-apt-default-archs95,3260
(defun helm-apt-refresh ()helm-apt-refresh97,3297
(defun helm-apt-persistent-action (candidate)helm-apt-persistent-action102,3441
(defun helm-apt--installed-package-name (name)helm-apt--installed-package-name106,3561
(defun helm-apt-candidate-transformer (candidates)helm-apt-candidate-transformer114,3896
(defun helm-apt-show-only-installed ()helm-apt-show-only-installed135,4966
(defun helm-apt-show-only-not-installed ()helm-apt-show-only-not-installed142,5153
(defun helm-apt-show-only-deinstalled ()helm-apt-show-only-deinstalled149,5350
(defun helm-apt-show-all ()helm-apt-show-all156,5543
(defun helm-apt-init ()helm-apt-init163,5702
(defun helm-apt-display-to-real (line)helm-apt-display-to-real187,6649
(defvar helm-apt-show-current-package nil)helm-apt-show-current-package193,6818
(define-derived-mode helm-apt-show-modehelm-apt-show-mode194,6861
(defun helm-apt-cache-show (package)helm-apt-cache-show198,6981
(defun helm-apt-cache-show-1 (package)helm-apt-cache-show-1208,7366
(defun helm-apt-install (_package)helm-apt-install222,7882
(defun helm-apt-reinstall (_package)helm-apt-reinstall226,8016
(defun helm-apt-uninstall (_package)helm-apt-uninstall230,8166
(defun helm-apt-purge (_package)helm-apt-purge234,8303
(defun helm-apt (arg)helm-apt268,9658

.cask/24.5.1/elpa/helm-20160623.2215/helm-autoloads.el,1098
(defvar helm-adaptive-mode nil "\helm-adaptive-mode10,277
(defvar helm-comp-read-mode-line "\\<helm-comp-read-map>C/\\[helm-cr-empty-string]:Empty \\<helm-map>\\[helm-help]:Help \\[helm-select-action]:Act \\[helm-maybe-exit-minibuffer]/f1/f2/f-n:NthAct \\[helm-toggle-suspend-update]:Tog.suspend")helm-comp-read-mode-line393,10687
(defvar helm-read-file-name-mode-line-string "\\<helm-read-file-map>\\[helm-help]:Help C/\\[helm-cr-empty-string]:Empty \\<helm-map>\\[helm-select-action]:Act \\[helm-maybe-exit-minibuffer]/f1/f2/f-n:NthAct \\[helm-toggle-suspend-update]:Tog.suspend" "\helm-read-file-name-mode-line-string395,10928
(defvar helm-top-mode-line "\\<helm-top-map>\\[helm-help]:Help \\<helm-map>\\[helm-select-action]:Act \\[helm-maybe-exit-minibuffer]/f1/f2/f-n:NthAct \\[helm-toggle-suspend-update]:Tog.suspend")helm-top-mode-line398,11244
(defvar helm-mode nil "\helm-mode671,20412
(defvar helm-push-mark-mode nil "\helm-push-mark-mode798,23746
(defvar helm-top-poll-mode nil "\helm-top-poll-mode878,26064
(defvar helm-popup-tip-mode nil "\helm-popup-tip-mode932,27587

.cask/24.5.1/elpa/helm-20160623.2215/helm-bookmark.el,6313
(defgroup helm-bookmark nilhelm-bookmark35,1274
(defcustom helm-bookmark-show-location nilhelm-bookmark-show-location39,1364
(defcustom helm-bookmark-default-filtered-sourceshelm-bookmark-default-filtered-sources44,1492
(defcustom helm-bookmark-addressbook-actionshelm-bookmark-addressbook-actions60,2151
(defface helm-bookmark-infohelm-bookmark-info118,4497
(defface helm-bookmark-w3mhelm-bookmark-w3m123,4643
(defface helm-bookmark-gnushelm-bookmark-gnus128,4789
(defface helm-bookmark-manhelm-bookmark-man133,4912
(defface helm-bookmark-filehelm-bookmark-file138,5039
(defface helm-bookmark-directoryhelm-bookmark-directory143,5167
(defface helm-bookmark-addressbookhelm-bookmark-addressbook148,5300
(defvar helm-bookmark-maphelm-bookmark-map154,5438
(defclass helm-source-basic-bookmarks (helm-source-in-buffer helm-type-bookmark)helm-source-basic-bookmarks164,5853
(defvar helm-source-bookmarkshelm-source-bookmarks172,6235
(defun helm-bookmark-transformer (candidates _source)helm-bookmark-transformer176,6366
(defun helm-bookmark-toggle-filename-1 (_candidate)helm-bookmark-toggle-filename-1190,6973
(defun helm-bookmark-toggle-filename ()helm-bookmark-toggle-filename204,7670
(defun helm-bookmark-jump (candidate)helm-bookmark-jump213,7998
(defun helm-bookmark-jump-other-window (candidate)helm-bookmark-jump-other-window219,8181
(defvar helm-source-bookmark-sethelm-source-bookmark-set226,8323
(defconst helm-bookmark--non-file-filename "   - no file -"helm-bookmark--non-file-filename242,8936
(defun helm-bookmark-gnus-bookmark-p (bookmark)helm-bookmark-gnus-bookmark-p245,9060
(defun helm-bookmark-w3m-bookmark-p (bookmark)helm-bookmark-w3m-bookmark-p252,9408
(defun helm-bookmark-woman-bookmark-p (bookmark)helm-bookmark-woman-bookmark-p259,9752
(defun helm-bookmark-man-bookmark-p (bookmark)helm-bookmark-man-bookmark-p266,10097
(defun helm-bookmark-woman-man-bookmark-p (bookmark)helm-bookmark-woman-man-bookmark-p273,10432
(defun helm-bookmark-info-bookmark-p (bookmark)helm-bookmark-info-bookmark-p279,10691
(defun helm-bookmark-image-bookmark-p (bookmark)helm-bookmark-image-bookmark-p284,10902
(defun helm-bookmark-file-p (bookmark)helm-bookmark-file-p290,11126
(defun helm-bookmark-helm-find-files-p (bookmark)helm-bookmark-helm-find-files-p298,11553
(defun helm-bookmark-addressbook-p (bookmark)helm-bookmark-addressbook-p303,11787
(defun helm-bookmark-uncategorized-bookmark-p (bookmark)helm-bookmark-uncategorized-bookmark-p311,12147
(defun helm-bookmark-filter-setup-alist (fn)helm-bookmark-filter-setup-alist324,12795
(defvar w3m-async-exec)w3m-async-exec333,13099
(defun helm-bookmark-jump-w3m (bookmark)helm-bookmark-jump-w3m334,13123
(defalias 'bookmark-w3m-bookmark-jump 'helm-bookmark-jump-w3m)bookmark-w3m-bookmark-jump353,14004
(defalias 'bmkext-jump-woman 'woman-bookmark-jump)bmkext-jump-woman357,14182
(defalias 'bmkext-jump-man 'Man-bookmark-jump)bmkext-jump-man358,14233
(defalias 'bmkext-jump-w3m 'helm-bookmark-jump-w3m)bmkext-jump-w3m359,14280
(defalias 'bmkext-jump-gnus 'gnus-summary-bookmark-jump)bmkext-jump-gnus360,14332
(defalias 'bookmarkp-jump-gnus 'gnus-summary-bookmark-jump)bookmarkp-jump-gnus361,14389
(defalias 'bookmarkp-jump-w3m 'helm-bookmark-jump-w3m)bookmarkp-jump-w3m362,14449
(defalias 'bookmarkp-jump-woman 'woman-bookmark-jump)bookmarkp-jump-woman363,14504
(defalias 'bookmarkp-jump-man 'Man-bookmark-jump)bookmarkp-jump-man364,14558
(defclass helm-source-filtered-bookmarks (helm-source-in-buffer helm-type-bookmark)helm-source-filtered-bookmarks370,14648
(defun helm-bookmark-w3m-setup-alist ()helm-bookmark-w3m-setup-alist377,14869
(defvar helm-source-bookmark-w3mhelm-source-bookmark-w3m381,15029
(defun helm-bookmark-images-setup-alist ()helm-bookmark-images-setup-alist390,15316
(defvar helm-source-bookmark-imageshelm-source-bookmark-images394,15484
(defun helm-bookmark-man-setup-alist ()helm-bookmark-man-setup-alist403,15783
(defvar helm-source-bookmark-manhelm-source-bookmark-man407,15949
(defun helm-bookmark-gnus-setup-alist ()helm-bookmark-gnus-setup-alist416,16240
(defvar helm-source-bookmark-gnushelm-source-bookmark-gnus420,16403
(defun helm-bookmark-info-setup-alist ()helm-bookmark-info-setup-alist429,16691
(defvar helm-source-bookmark-infohelm-source-bookmark-info433,16854
(defun helm-bookmark-local-files-setup-alist ()helm-bookmark-local-files-setup-alist442,17159
(defvar helm-source-bookmark-files&dirshelm-source-bookmark-files&dirs446,17328
(defun helm-bookmark-helm-find-files-setup-alist ()helm-bookmark-helm-find-files-setup-alist455,17663
(defvar helm-source-bookmark-helm-find-fileshelm-source-bookmark-helm-find-files459,17852
(defun helm-bookmark-uncategorized-setup-alist ()helm-bookmark-uncategorized-setup-alist470,18301
(defvar helm-source-bookmark-uncategorizedhelm-source-bookmark-uncategorized474,18491
(defclass helm-bookmark-addressbook-class (helm-source-in-buffer)helm-bookmark-addressbook-class484,18817
(defun helm-bookmark-addressbook-send-mail-1 (_candidate &optional cc)helm-bookmark-addressbook-send-mail-1503,19813
(defun helm-bookmark-addressbook-setup-alist ()helm-bookmark-addressbook-setup-alist516,20409
(defvar helm-source-bookmark-addressbookhelm-source-bookmark-addressbook520,20584
(defun helm-highlight-bookmark (bookmarks _source)helm-highlight-bookmark526,20725
(defun helm-bookmark-edit-bookmark (bookmark-name)helm-bookmark-edit-bookmark606,25139
(defun helm-bookmark-edit-bookmark-1 (bookmark-name handler)helm-bookmark-edit-bookmark-1616,25635
(defun helm-bookmark-maybe-save-bookmark ()helm-bookmark-maybe-save-bookmark642,27006
(defun helm-bookmark-rename (old &optional new batch)helm-bookmark-rename647,27245
(defun helm-bookmark-run-edit ()helm-bookmark-run-edit674,28513
(defun helm-bookmark-run-jump-other-window ()helm-bookmark-run-jump-other-window682,28748
(defun helm-bookmark-run-delete ()helm-bookmark-run-delete689,28989
(defun helm-bookmark-get-bookmark-from-name (bmk)helm-bookmark-get-bookmark-from-name697,29255
(defun helm-delete-marked-bookmarks (_ignore)helm-delete-marked-bookmarks703,29514
(defun helm-bookmarks ()helm-bookmarks711,29762
(defun helm-filtered-bookmarks ()helm-filtered-bookmarks720,30033

.cask/24.5.1/elpa/helm-20160623.2215/helm-buffers.el,7047
(defgroup helm-buffers nilhelm-buffers36,1217
(defcustom helm-boring-buffer-regexp-listhelm-boring-buffer-regexp-list40,1318
(defcustom helm-white-buffer-regexp-list nilhelm-white-buffer-regexp-list49,1694
(defcustom helm-buffers-favorite-modes '(lisp-interaction-modehelm-buffers-favorite-modes56,1933
(defcustom helm-buffer-max-length 20helm-buffer-max-length64,2269
(defcustom helm-buffer-details-flag thelm-buffer-details-flag71,2539
(defcustom helm-buffers-fuzzy-matching nilhelm-buffers-fuzzy-matching76,2673
(defcustom helm-buffer-skip-remote-checking nilhelm-buffer-skip-remote-checking83,2910
(defcustom helm-buffers-truncate-lines thelm-buffers-truncate-lines88,3057
(defcustom helm-mini-default-sources '(helm-source-buffers-listhelm-mini-default-sources93,3197
(defcustom helm-buffers-end-truncated-string "..."helm-buffers-end-truncated-string100,3494
(defgroup helm-buffers-faces nilhelm-buffers-faces109,3664
(defface helm-buffer-saved-outhelm-buffer-saved-out115,3807
(defface helm-buffer-not-savedhelm-buffer-not-saved120,3978
(defface helm-buffer-sizehelm-buffer-size125,4136
(defface helm-buffer-processhelm-buffer-process131,4330
(defface helm-buffer-directoryhelm-buffer-directory136,4469
(defface helm-buffer-filehelm-buffer-file141,4644
(defvar helm-buffer-maphelm-buffer-map149,4823
(defvar helm-buffers-ido-virtual-maphelm-buffers-ido-virtual-map177,6464
(defvar helm-buffers-list-cache nil)helm-buffers-list-cache189,6970
(defvar helm-buffer-max-len-mode nil)helm-buffer-max-len-mode190,7007
(defvar helm-buffers-in-project-p nil)helm-buffers-in-project-p191,7045
(defun helm-buffers-list--init ()helm-buffers-list--init193,7085
(defclass helm-source-buffers (helm-source-sync helm-type-buffer)helm-source-buffers207,7862
(defvar helm-source-buffers-list nil)helm-source-buffers-list232,8856
(defvar helm-source-buffer-not-foundhelm-source-buffer-not-found234,8895
(defvar ido-temp-list)ido-temp-list253,9773
(defvar ido-ignored-list)ido-ignored-list254,9796
(defvar ido-process-ignore-lists)ido-process-ignore-lists255,9822
(defvar ido-use-virtual-buffers)ido-use-virtual-buffers256,9856
(defvar ido-virtual-buffers)ido-virtual-buffers257,9889
(defvar helm-source-ido-virtual-buffershelm-source-ido-virtual-buffers259,9919
(defvar ido-use-virtual-buffers)ido-use-virtual-buffers283,11037
(defvar ido-ignore-buffers)ido-ignore-buffers284,11070
(defun helm-buffer-list ()helm-buffer-list285,11098
(defun helm-buffer-size (buffer)helm-buffer-size296,11439
(defun helm-buffer--show-details (buf-name prefix help-echohelm-buffer--show-details305,11677
(defun helm-buffer--details (buffer &optional details)helm-buffer--details324,12328
(defun helm-highlight-buffers (buffers _source)helm-highlight-buffers374,14850
(defun helm-buffer--get-preselection (buffer)helm-buffer--get-preselection405,16489
(defun helm-toggle-buffers-details ()helm-toggle-buffers-details420,17123
(defun helm-buffers-sort-transformer (candidates _source)helm-buffers-sort-transformer429,17453
(defun helm-buffers-mark-similar-buffers-1 ()helm-buffers-mark-similar-buffers-1436,17666
(defun helm-buffers-mark-similar-buffers ()helm-buffers-mark-similar-buffers461,18784
(defun helm-buffer--match-mjm (pattern mjm)helm-buffer--match-mjm476,19254
(defun helm-buffer--match-pattern (pattern candidate)helm-buffer--match-pattern491,19944
(defun helm-buffers--match-from-mjm (candidate)helm-buffers--match-from-mjm504,20518
(defun helm-buffers--match-from-pat (candidate)helm-buffers--match-from-pat518,21067
(defun helm-buffers--match-from-inside (candidate)helm-buffers--match-from-inside529,21533
(defun helm-buffers--match-from-directory (candidate)helm-buffers--match-from-directory545,22189
(defun helm-buffers-match-function (candidate)helm-buffers-match-function561,22825
(defun helm-buffer-query-replace-1 (&optional regexp-flag buffers)helm-buffer-query-replace-1569,23117
(defun helm-buffer-query-replace-regexp (_candidate)helm-buffer-query-replace-regexp588,23985
(defun helm-buffer-query-replace (_candidate)helm-buffer-query-replace591,24080
(defun helm-buffer-toggle-diff (candidate)helm-buffer-toggle-diff594,24160
(defun helm-buffer-diff-persistent ()helm-buffer-diff-persistent602,24501
(defun helm-revert-buffer (candidate)helm-revert-buffer610,24780
(defun helm-revert-marked-buffers (_ignore)helm-revert-marked-buffers615,24941
(defun helm-buffer-revert-and-update (_candidate)helm-buffer-revert-and-update618,25041
(defun helm-buffer-revert-persistent ()helm-buffer-revert-persistent626,25382
(defun helm-buffer-save-and-update (_candidate)helm-buffer-save-and-update634,25686
(defun helm-buffer-save-persistent ()helm-buffer-save-persistent644,26104
(defun helm-buffer-run-kill-persistent ()helm-buffer-run-kill-persistent652,26396
(defun helm-kill-marked-buffers (_ignore)helm-kill-marked-buffers660,26697
(defun helm-buffer-run-kill-buffers ()helm-buffer-run-kill-buffers668,26993
(defun helm-buffer-run-grep ()helm-buffer-run-grep675,27242
(defun helm-buffer-run-zgrep ()helm-buffer-run-zgrep682,27461
(defun helm-buffer-run-query-replace-regexp ()helm-buffer-run-query-replace-regexp689,27683
(defun helm-buffer-run-query-replace ()helm-buffer-run-query-replace696,27965
(defun helm-buffer-switch-other-window ()helm-buffer-switch-other-window703,28219
(defun helm-buffer-switch-other-frame ()helm-buffer-switch-other-frame710,28496
(defun helm-buffer-switch-to-elscreen ()helm-buffer-switch-to-elscreen717,28763
(defun helm-buffer-run-ediff ()helm-buffer-run-ediff724,29028
(defun helm-buffer-run-ediff-merge ()helm-buffer-run-ediff-merge731,29258
(defun helm-buffers-persistent-kill-1 (buffer)helm-buffers-persistent-kill-1738,29506
(defun helm-buffers--quote-truncated-buffer (buffer)helm-buffers--quote-truncated-buffer750,30019
(defun helm-buffers-persistent-kill (_buffer)helm-buffers-persistent-kill761,30349
(defun helm-buffers-list-persistent-action (candidate)helm-buffers-list-persistent-action777,31056
(defun helm-ediff-marked-buffers (_candidate &optional merge)helm-ediff-marked-buffers784,31387
(defun helm-ediff-marked-buffers-merge (candidate)helm-ediff-marked-buffers-merge804,32097
(defun helm-multi-occur-as-action (_candidate)helm-multi-occur-as-action809,32279
(defun helm-buffers-run-multi-occur ()helm-buffers-run-multi-occur822,32890
(defun helm-buffers-toggle-show-hidden-buffers ()helm-buffers-toggle-show-hidden-buffers829,33126
(defun helm-buffers-browse-project (buf)helm-buffers-browse-project848,34048
(defun helm-buffers-run-browse-project ()helm-buffers-run-browse-project853,34201
(defun helm-skip-boring-buffers (buffers _source)helm-skip-boring-buffers864,34535
(defun helm-shadow-boring-buffers (buffers _source)helm-shadow-boring-buffers869,34720
(defun helm-buffers-list ()helm-buffers-list876,34968
(defun helm-mini ()helm-mini890,35465
(defun helm-quit-and-helm-mini ()helm-quit-and-helm-mini902,35900

.cask/24.5.1/elpa/helm-20160623.2215/helm-color.el,1024
(defun helm-custom-faces-init ()helm-custom-faces-init26,879
(defvar helm-source-customize-facehelm-source-customize-face40,1321
(defun helm-colors-init ()helm-colors-init55,1786
(defun helm-color-insert-name (candidate)helm-color-insert-name66,2083
(defun helm-color-kill-name (candidate)helm-color-kill-name70,2202
(defun helm-color-insert-rgb (candidate)helm-color-insert-rgb73,2290
(defun helm-color-kill-rgb (candidate)helm-color-kill-rgb77,2407
(defun helm-color-run-insert-name ()helm-color-run-insert-name80,2493
(defun helm-color-run-kill-name ()helm-color-run-kill-name86,2723
(defun helm-color-run-insert-rgb ()helm-color-run-insert-rgb92,2945
(defun helm-color-run-kill-rgb ()helm-color-run-kill-rgb98,3171
(defvar helm-color-maphelm-color-map104,3389
(defvar helm-source-colorshelm-source-colors113,3742
(defun helm-colors-get-name (candidate)helm-colors-get-name127,4257
(defun helm-colors-get-rgb (candidate)helm-colors-get-rgb138,4552
(defun helm-colors ()helm-colors150,4861

.cask/24.5.1/elpa/helm-20160623.2215/helm-command.el,1604
(defgroup helm-command nilhelm-command27,915
(defcustom helm-M-x-requires-pattern 0helm-M-x-requires-pattern31,1022
(defcustom helm-M-x-always-save-history nilhelm-M-x-always-save-history37,1198
(defcustom helm-M-x-reverse-history nilhelm-M-x-reverse-history42,1362
(defcustom helm-M-x-fuzzy-match nilhelm-M-x-fuzzy-match47,1522
(defgroup helm-command-faces nilhelm-command-faces56,1673
(defface helm-M-x-key '((t (:foreground "orange" :underline t)))helm-M-x-key62,1816
(defvar helm-M-x-input-history nil)helm-M-x-input-history67,1960
(defvar helm-M-x-prefix-argument nilhelm-M-x-prefix-argument68,1996
(defun helm-get-mode-map-from-mode (mode)helm-get-mode-map-from-mode80,2439
(defun helm-M-x-current-mode-map-alist ()helm-M-x-current-mode-map-alist97,3266
(defun helm-M-x-transformer-1 (candidates &optional sort)helm-M-x-transformer-1104,3534
(defun helm-M-x-transformer (candidates _source)helm-M-x-transformer132,4916
(defun helm-M-x-transformer-hist (candidates _source)helm-M-x-transformer-hist136,5079
(defun helm-M-x--notify-prefix-arg ()helm-M-x--notify-prefix-arg140,5225
(defun helm-cmd--get-current-function-name ()helm-cmd--get-current-function-name146,5420
(defun helm-cmd--get-preconfigured-commands (&optional dir)helm-cmd--get-preconfigured-commands152,5626
(defvar helm-M-x-maphelm-M-x-map163,6121
(defun helm-M-x-universal-argument ()helm-M-x-universal-argument170,6335
(defun helm-M-x-read-extended-command (&optional collection history)helm-M-x-read-extended-command185,6946
(defun helm-M-x (_arg &optional command-name)helm-M-x252,10116

.cask/24.5.1/elpa/helm-20160623.2215/helm-config.el,441
(defgroup helm-config nilhelm-config30,1037
(defcustom helm-command-prefix-key "C-x c"helm-command-prefix-key34,1117
(defcustom helm-minibuffer-history-key "C-r"helm-minibuffer-history-key48,1605
(defvar helm-command-maphelm-command-map74,2688
(defvar helm-command-prefix)helm-command-prefix117,4997
(define-prefix-command 'helm-command-prefix)helm-command-prefix118,5026
(defun helm-configuration ()helm-configuration129,5217

.cask/24.5.1/elpa/helm-20160623.2215/helm-dabbrev.el,1597
(defgroup helm-dabbrev nilhelm-dabbrev25,920
(defcustom helm-dabbrev-always-search-all thelm-dabbrev-always-search-all29,1021
(defcustom helm-dabbrev-max-length-result 20helm-dabbrev-max-length-result37,1286
(defcustom helm-dabbrev-ignored-buffers-regexpshelm-dabbrev-ignored-buffers-regexps45,1587
(defcustom helm-dabbrev-related-buffer-fn #'helm-dabbrev--same-major-mode-phelm-dabbrev-related-buffer-fn51,1828
(defcustom helm-dabbrev-major-mode-assoc nil helm-dabbrev-major-mode-assoc62,2312
(defcustom helm-dabbrev-lineno-around 30helm-dabbrev-lineno-around77,3019
(defcustom helm-dabbrev-cycle-threshold nilhelm-dabbrev-cycle-threshold82,3166
(defcustom helm-dabbrev-case-fold-search 'smarthelm-dabbrev-case-fold-search88,3401
(defvar helm-dabbrev-maphelm-dabbrev-map99,3819
(defvar helm-dabbrev--exclude-current-buffer-flag nil)helm-dabbrev--exclude-current-buffer-flag107,4042
(defvar helm-dabbrev--cache nil)helm-dabbrev--cache108,4097
(defvar helm-dabbrev--data nil)helm-dabbrev--data109,4130
(defvar helm-dabbrev--regexp "\\s-\\|\t\\|[(\[\{\"'`=<$;.]\\|\\s\\\\|^")helm-dabbrev--regexp110,4162
(defun helm-dabbrev--buffer-list ()helm-dabbrev--buffer-list114,4295
(defun helm-dabbrev--same-major-mode-p (start-buffer)helm-dabbrev--same-major-mode-p122,4628
(defun helm-dabbrev--collect (str limit ignore-case all)helm-dabbrev--collect126,4811
(defun helm-dabbrev--get-candidates (abbrev)helm-dabbrev--get-candidates201,8809
(defun helm-dabbrev-default-action (candidate)helm-dabbrev-default-action219,9743
(defun helm-dabbrev ()helm-dabbrev231,10094

.cask/24.5.1/elpa/helm-20160623.2215/helm-easymenu.el,0

.cask/24.5.1/elpa/helm-20160623.2215/helm-elisp-package.el,3209
(defgroup helm-el-package nilhelm-el-package24,894
(defcustom helm-el-package-initial-filter 'allhelm-el-package-initial-filter28,966
(defvar helm-el-package--show-only 'all)helm-el-package--show-only38,1408
(defvar helm-el-package--initialized-p nil)helm-el-package--initialized-p39,1449
(defvar helm-el-package--tabulated-list nil)helm-el-package--tabulated-list40,1493
(defvar helm-el-package--upgrades nil)helm-el-package--upgrades41,1538
(defvar helm-el-package--removable-packages nil)helm-el-package--removable-packages42,1577
(defvar package-menu-async) ; Only available on emacs-25.package-menu-async45,1664
(defun helm-el-package--init ()helm-el-package--init48,1797
(defun helm-el-package-describe (candidate)helm-el-package-describe81,3308
(defun helm-el-package-visit-homepage (candidate)helm-el-package-visit-homepage87,3559
(defun helm-el-run-visit-homepage ()helm-el-run-visit-homepage100,4143
(defun helm-el-package-install-1 (pkg-list)helm-el-package-install-1106,4334
(defun helm-el-package-install (_candidate)helm-el-package-install123,5282
(defun helm-el-run-package-install ()helm-el-run-package-install126,5383
(defun helm-el-package-uninstall-1 (pkg-list)helm-el-package-uninstall-1132,5569
(defun helm-el-package-uninstall (_candidate)helm-el-package-uninstall172,7626
(defun helm-el-run-package-uninstall ()helm-el-run-package-uninstall175,7731
(defun helm-el-package-menu--find-upgrades ()helm-el-package-menu--find-upgrades181,7923
(defun helm-el-package-upgrade-1 (pkg-list)helm-el-package-upgrade-1200,8819
(defun helm-el-package-upgrade (_candidate)helm-el-package-upgrade221,9661
(defun helm-el-run-package-upgrade ()helm-el-run-package-upgrade229,9959
(defun helm-el-package-upgrade-all ()helm-el-package-upgrade-all235,10145
(defun helm-el-package-upgrade-all-action (_candidate)helm-el-package-upgrade-all-action244,10576
(defun helm-el-run-package-upgrade-all ()helm-el-run-package-upgrade-all247,10665
(defun helm-el-package--transformer (candidates _source)helm-el-package--transformer253,10870
(defun helm-el-package-show-upgrade ()helm-el-package-show-upgrade279,12252
(defun helm-el-package-show-installed ()helm-el-package-show-installed286,12445
(defun helm-el-package-show-all ()helm-el-package-show-all293,12644
(defun helm-el-package-show-uninstalled ()helm-el-package-show-uninstalled300,12825
(defvar helm-el-package-maphelm-el-package-map307,13030
(defvar helm-source-list-el-package nil)helm-source-list-el-package322,13795
(defclass helm-list-el-package-source (helm-source-in-buffer)helm-list-el-package-source323,13836
(defun helm-el-package--action-transformer (actions candidate)helm-el-package--action-transformer335,14471
(defun helm-el-package--update ()helm-el-package--update356,15694
(defun helm-el-package-recompile (_pkg)helm-el-package-recompile359,15774
(defun helm-el-package-reinstall (_pkg)helm-el-package-reinstall369,16300
(defun helm-el-run-package-reinstall ()helm-el-run-package-reinstall390,17398
(defun helm-list-elisp-packages (arg)helm-list-elisp-packages397,17605
(defun helm-list-elisp-packages-no-fetch ()helm-list-elisp-packages-no-fetch408,18037

.cask/24.5.1/elpa/helm-20160623.2215/helm-elisp.el,5666
(defgroup helm-elisp nilhelm-elisp36,1184
(defcustom helm-turn-on-show-completion thelm-turn-on-show-completion40,1281
(defcustom helm-show-completion-use-special-display thelm-show-completion-use-special-display45,1434
(defcustom helm-show-completion-min-window-height 7helm-show-completion-min-window-height52,1682
(defcustom helm-lisp-quoted-function-listhelm-lisp-quoted-function-list58,1888
(defcustom helm-lisp-unquoted-function-listhelm-lisp-unquoted-function-list67,2227
(defcustom helm-apropos-fuzzy-match nilhelm-apropos-fuzzy-match74,2464
(defcustom helm-lisp-fuzzy-completion nilhelm-lisp-fuzzy-completion79,2603
(defcustom helm-apropos-function-list '(helm-def-source--emacs-commandshelm-apropos-function-list87,2936
(defgroup helm-elisp-faces nilhelm-elisp-faces102,3588
(defface helm-lisp-show-completionhelm-lisp-show-completion108,3725
(defface helm-lisp-completion-infohelm-lisp-completion-info113,3894
(defcustom helm-elisp-help-functionhelm-elisp-help-function118,4047
(defvar helm-show-completion-overlay nil)helm-show-completion-overlay132,4486
(defun helm-show-completion ()helm-show-completion135,4577
(defun helm-show-completion-init-overlay (beg end)helm-show-completion-init-overlay141,4786
(defun helm-show-completion-display-function (buffer &rest _args)helm-show-completion-display-function147,5051
(defmacro with-helm-show-completion (beg end &rest body)with-helm-show-completion166,6080
(defun helm-lisp-completion--predicate-at-point (beg)helm-lisp-completion--predicate-at-point201,7466
(defun helm-thing-before-point (&optional limits regexp)helm-thing-before-point238,9172
(defun helm-bounds-of-thing-before-point (&optional regexp)helm-bounds-of-thing-before-point256,9843
(defun helm-insert-completion-at-point (beg end str)helm-insert-completion-at-point261,10046
(defvar helm-lisp-completion--cache nil)helm-lisp-completion--cache276,10627
(defvar helm-lgst-len nil)helm-lgst-len277,10668
(defun helm-lisp-completion-at-point ()helm-lisp-completion-at-point279,10710
(defun helm-lisp-completion-persistent-action (candidate &optional name)helm-lisp-completion-persistent-action325,13042
(defun helm-lisp-completion-persistent-help ()helm-lisp-completion-persistent-help331,13338
(defun helm-elisp--show-help-1 (candidate &optional name)helm-elisp--show-help-1337,13637
(defun helm-elisp-show-help (candidate &optional name)helm-elisp-show-help350,14188
(defun helm-elisp-show-doc-modeline (candidate &optional name)helm-elisp-show-doc-modeline357,14480
(defun helm-lisp-completion-transformer (candidates _source)helm-lisp-completion-transformer367,14844
(defun helm-get-first-line-documentation (sym &optional name)helm-get-first-line-documentation382,15490
(defun helm-complete-file-name-at-point (&optional force)helm-complete-file-name-at-point407,16516
(defun helm-lisp-indent ()helm-lisp-indent435,17691
(defun helm-lisp-completion-or-file-name-at-point ()helm-lisp-completion-or-file-name-at-point445,18092
(defun helm-apropos-init (test default)helm-apropos-init461,18637
(defun helm-apropos-init-faces (default)helm-apropos-init-faces472,19078
(defun helm-apropos-default-sort-fn (candidates _source)helm-apropos-default-sort-fn489,19729
(defun helm-def-source--emacs-variables (&optional default)helm-def-source--emacs-variables494,19885
(defun helm-def-source--emacs-faces (&optional default)helm-def-source--emacs-faces528,21442
(defun helm-def-source--helm-attributes (&optional _default)helm-def-source--helm-attributes551,22469
(defun helm-def-source--emacs-commands (&optional default)helm-def-source--emacs-commands569,23290
(defun helm-def-source--emacs-functions (&optional default)helm-def-source--emacs-functions585,24040
(defun helm-def-source--eieio-classes (&optional default)helm-def-source--eieio-classes606,25062
(defun helm-def-source--eieio-generic (&optional default)helm-def-source--eieio-generic624,25891
(defun helm-info-lookup-symbol-1 (c)helm-info-lookup-symbol-1642,26741
(defun helm-info-lookup-symbol (candidate)helm-info-lookup-symbol654,27158
(defun helm-elisp--persistent-help (candidate fun &optional name)helm-elisp--persistent-help657,27269
(defun helm-apropos (default)helm-apropos675,28094
(defvar helm-source-advicehelm-source-advice691,28651
(defun helm-advice-candidates ()helm-advice-candidates700,28968
(defun helm-advice-persistent-action (func-class-advice)helm-advice-persistent-action715,29680
(defun helm-advice-toggle (func-class-advice)helm-advice-toggle720,29858
(defun helm-advice-update-current-display-string ()helm-advice-update-current-display-string732,30298
(defun helm-manage-advice ()helm-manage-advice741,30637
(defun helm-locate-library-scan-list ()helm-locate-library-scan-list750,30836
(defun helm-locate-library ()helm-locate-library759,31176
(defun helm-set-variable (var)helm-set-variable775,32008
(defclass helm-absolute-time-timers-class (helm-source-sync helm-type-timers)helm-absolute-time-timers-class788,32467
(defvar helm-source-absolute-time-timershelm-source-absolute-time-timers797,32789
(defclass helm-idle-time-timers-class (helm-source-sync helm-type-timers)helm-idle-time-timers-class800,32909
(defvar helm-source-idle-time-timershelm-source-idle-time-timers809,33232
(defun helm-elisp--format-timer (timer)helm-elisp--format-timer812,33340
(defun helm-timers ()helm-timers825,33900
(defun helm-btf--usable-p ()helm-btf--usable-p836,34147
(defvar helm-source-complex-command-historyhelm-source-complex-command-history877,35779
(defun helm-complex-command-history ()helm-complex-command-history899,36875

.cask/24.5.1/elpa/helm-20160623.2215/helm-elscreen.el,593
(defun helm-find-buffer-on-elscreen (candidate)helm-find-buffer-on-elscreen27,1124
(defun helm-elscreen-find-file (file)helm-elscreen-find-file39,1687
(defclass helm-source-elscreen (helm-source-sync)helm-source-elscreen43,1816
(defclass helm-source-elscreen-history (helm-source-elscreen)helm-source-elscreen-history66,2657
(defvar helm-source-elscreen-listhelm-source-elscreen-list76,3054
(defvar helm-source-elscreen-history-listhelm-source-elscreen-history-list79,3144
(defun helm-elscreen ()helm-elscreen83,3273
(defun helm-elscreen-history ()helm-elscreen-history89,3438

.cask/24.5.1/elpa/helm-20160623.2215/helm-eshell.el,625
(defgroup helm-eshell nilhelm-eshell43,1617
(defvar helm-eshell-history-maphelm-eshell-history-map48,1702
(defvar helm-esh-completion-maphelm-esh-completion-map55,1905
(defclass helm-esh-source (helm-source-sync)helm-esh-source63,2109
(defvar helm-ec-target "")helm-ec-target91,3194
(defun helm-ec-insert (candidate)helm-ec-insert92,3221
(defun helm-esh-get-candidates ()helm-esh-get-candidates110,4067
(defclass helm-eshell-history-source (helm-source-sync)helm-eshell-history-source165,6807
(defun helm-esh-pcomplete ()helm-esh-pcomplete187,7552
(defun helm-eshell-history ()helm-eshell-history235,9763

.cask/24.5.1/elpa/helm-20160623.2215/helm-eval.el,1104
(defgroup helm-eval nilhelm-eval26,901
(defcustom helm-eldoc-in-minibuffer-show-fnhelm-eldoc-in-minibuffer-show-fn30,996
(defcustom helm-show-info-in-mode-line-delay 12helm-show-info-in-mode-line-delay37,1192
(defvar helm-eldoc-active-minibuffers-list nil)helm-eldoc-active-minibuffers-list68,2382
(defvar helm-eval-expression-maphelm-eval-expression-map70,2431
(defun helm-build-evaluation-result-source ()helm-build-evaluation-result-source84,3071
(defun helm-eval-new-line-and-indent ()helm-eval-new-line-and-indent108,4506
(defun helm-eldoc-store-minibuffer ()helm-eldoc-store-minibuffer112,4595
(defun helm-eldoc-show-in-eval ()helm-eldoc-show-in-eval117,4817
(defun helm-show-info-in-mode-line (str)helm-show-info-in-mode-line134,5706
(defvar helm-source-calculation-resulthelm-source-calculation-result146,6044
(defun helm-eval-expression (arg)helm-eval-expression163,6990
(defvar eldoc-idle-delay)eldoc-idle-delay173,7363
(defun helm-eval-expression-with-eldoc ()helm-eval-expression-with-eldoc175,7404
(defun helm-calcul-expression ()helm-calcul-expression190,7978

.cask/24.5.1/elpa/helm-20160623.2215/helm-external.el,953
(defgroup helm-external nilhelm-external26,921
(defcustom helm-raise-command nilhelm-raise-command30,1025
(defcustom helm-external-programs-associations nilhelm-external-programs-associations37,1270
(defcustom helm-default-external-file-browser "nautilus"helm-default-external-file-browser44,1578
(defvar helm-external-command-history nil)helm-external-command-history56,1971
(defvar helm-external-commands-list nilhelm-external-commands-list57,2014
(defun helm-external-commands-list-1 (&optional sort)helm-external-commands-list-162,2192
(defun helm-run-or-raise (exe &optional file)helm-run-or-raise83,3278
(defun helm-get-mailcap-for-file (filename)helm-get-mailcap-for-file118,4887
(defun helm-get-default-program-for-file (filename)helm-get-default-program-for-file128,5359
(defun helm-open-file-externally (file)helm-open-file-externally139,5942
(defun helm-run-external-command (program)helm-run-external-command185,8279

.cask/24.5.1/elpa/helm-20160623.2215/helm-files.el,22643
(defvar recentf-list)recentf-list55,2175
(defvar helm-mm-matching-method)helm-mm-matching-method56,2197
(defvar dired-async-mode)dired-async-mode57,2230
(defgroup helm-files nilhelm-files60,2259
(defcustom helm-boring-file-regexp-listhelm-boring-file-regexp-list64,2348
(defcustom helm-for-files-preferred-listhelm-for-files-preferred-list75,2674
(defcustom helm-tramp-verbose 0helm-tramp-verbose86,2981
(defcustom helm-ff-auto-update-initial-value nilhelm-ff-auto-update-initial-value93,3214
(defcustom helm-ff-lynx-style-map thelm-ff-lynx-style-map103,3618
(defcustom helm-ff-history-max-length 100helm-ff-history-max-length110,3859
(defcustom helm-ff-fuzzy-matching thelm-ff-fuzzy-matching115,4000
(defcustom helm-ff-tramp-not-fancy thelm-ff-tramp-not-fancy121,4202
(defcustom helm-ff-exif-data-program "exiftran"helm-ff-exif-data-program127,4401
(defcustom helm-ff-exif-data-program-args "-d"helm-ff-exif-data-program-args132,4544
(defcustom helm-ff-newfile-prompt-p thelm-ff-newfile-prompt-p137,4682
(defcustom helm-ff-avfs-directory "~/.avfs"helm-ff-avfs-directory143,4843
(defcustom helm-ff-file-compressed-list '("gz" "bz2" "zip" "7z")helm-ff-file-compressed-list151,5144
(defcustom helm-ff-printer-list nilhelm-ff-printer-list156,5315
(defcustom helm-ff-transformer-show-only-basename thelm-ff-transformer-show-only-basename165,5718
(defcustom helm-ff-signal-error-on-dot-files thelm-ff-signal-error-on-dot-files172,5986
(defcustom helm-ff-search-library-in-sexp nilhelm-ff-search-library-in-sexp179,6248
(defcustom helm-tooltip-hide-delay 25helm-tooltip-hide-delay184,6400
(defcustom helm-ff-file-name-history-use-recentf nilhelm-ff-file-name-history-use-recentf189,6535
(defcustom helm-ff-skip-boring-files nilhelm-ff-skip-boring-files194,6704
(defcustom helm-ff-candidate-number-limit 5000helm-ff-candidate-number-limit201,6970
(defcustom helm-findutils-skip-boring-files thelm-findutils-skip-boring-files206,7148
(defcustom helm-findutils-search-full-path nilhelm-findutils-search-full-path211,7305
(defcustom helm-files-save-history-extra-sourceshelm-files-save-history-extra-sources217,7521
(defcustom helm-find-files-before-init-hook nilhelm-find-files-before-init-hook224,7768
(defcustom helm-find-files-after-init-hook nilhelm-find-files-after-init-hook229,7915
(defcustom helm-multi-files-toggle-locate-binding "C-c p"helm-multi-files-toggle-locate-binding234,8060
(defcustom helm-find-files-bookmark-prefix "Helm-find-files: "helm-find-files-bookmark-prefix239,8232
(defcustom helm-ff-guess-ffap-filenames nilhelm-ff-guess-ffap-filenames244,8390
(defcustom helm-ff-guess-ffap-urls thelm-ff-guess-ffap-urls251,8626
(defcustom helm-ff-no-preselect nilhelm-ff-no-preselect258,8862
(defcustom helm-substitute-in-filename-stay-on-remote nilhelm-substitute-in-filename-stay-on-remote263,9011
(defgroup helm-files-faces nilhelm-files-faces272,9206
(defface helm-ff-prefixhelm-ff-prefix278,9343
(defface helm-ff-executablehelm-ff-executable283,9518
(defface helm-ff-directoryhelm-ff-directory288,9665
(defface helm-ff-dotted-directoryhelm-ff-dotted-directory293,9832
(defface helm-ff-dotted-symlink-directoryhelm-ff-dotted-symlink-directory298,10009
(defface helm-ff-symlinkhelm-ff-symlink303,10209
(defface helm-ff-invalid-symlinkhelm-ff-invalid-symlink308,10350
(defface helm-ff-filehelm-ff-file313,10520
(defface helm-ff-dirshelm-ff-dirs318,10667
(defface helm-history-deletedhelm-history-deleted323,10849
(defface helm-history-remotehelm-history-remote328,11010
(defvar helm-find-files-maphelm-find-files-map337,11222
(defvar helm-read-file-maphelm-read-file-map398,15261
(defvar helm-find-files-doc-header " (\\<helm-find-files-map>\\[helm-find-files-up-one-level]: Go up one level)"helm-find-files-doc-header422,16554
(defvar helm-ff-auto-update-flag nilhelm-ff-auto-update-flag424,16750
(defvar helm-ff-last-expanded nilhelm-ff-last-expanded427,16928
(defvar helm-ff-default-directory nil)helm-ff-default-directory429,17006
(defvar helm-ff-history nil)helm-ff-history430,17045
(defvar helm-ff-cand-to-mark nil)helm-ff-cand-to-mark431,17074
(defvar helm-ff-url-regexphelm-ff-url-regexp432,17108
(defvar helm-tramp-file-name-regexp "\\`/\\([^[/:]+\\|[^/]+]\\):")helm-tramp-file-name-regexp435,17313
(defvar helm-marked-buffer-name "*helm marked*")helm-marked-buffer-name436,17380
(defvar helm-ff--auto-update-state nil)helm-ff--auto-update-state437,17429
(defvar helm-ff--deleting-char-backward nil)helm-ff--deleting-char-backward438,17469
(defvar helm-multi-files--toggle-locate nil)helm-multi-files--toggle-locate439,17514
(defvar helm-ff--move-to-first-real-candidate t)helm-ff--move-to-first-real-candidate440,17559
(defvar helm-find-files--toggle-bookmark nil)helm-find-files--toggle-bookmark441,17608
(defcustom helm-find-files-actionshelm-find-files-actions447,17683
(defvar helm-source-find-files nilhelm-source-find-files498,20391
(defclass helm-source-ffiles (helm-source-sync)helm-source-ffiles502,20505
(defun helm-ff-make-bookmark-record ()helm-ff-make-bookmark-record536,22074
(defun helm-ff-bookmark-jump (bookmark)helm-ff-bookmark-jump543,22325
(defun helm-ff-bookmark-set ()helm-ff-bookmark-set551,22692
(defun helm-dwim-target-directory ()helm-dwim-target-directory562,23064
(defun helm-ff--count-and-collect-dups (files)helm-ff--count-and-collect-dups579,23827
(defun helm-find-files-do-action (action)helm-find-files-do-action595,24566
(defun helm-find-files-copy (_candidate)helm-find-files-copy622,25983
(defun helm-find-files-backup (_candidate)helm-find-files-backup626,26101
(defun helm-find-files-rename (_candidate)helm-find-files-rename633,26431
(defun helm-find-files-symlink (_candidate)helm-find-files-symlink637,26555
(defun helm-find-files-relsymlink (_candidate)helm-find-files-relsymlink641,26682
(defun helm-find-files-hardlink (_candidate)helm-find-files-hardlink645,26818
(defun helm-find-files-other-window (_candidate)helm-find-files-other-window649,26948
(defun helm-find-files-byte-compile (_candidate)helm-find-files-byte-compile661,27439
(defun helm-find-files-load-files (_candidate)helm-find-files-load-files668,27726
(defun helm-find-files-ediff-files-1 (candidate &optional merge)helm-find-files-ediff-files-1674,27942
(defun helm-find-files-ediff-files (candidate)helm-find-files-ediff-files694,28893
(defun helm-find-files-ediff-merge-files (candidate)helm-find-files-ediff-merge-files697,28986
(defun helm-find-files-grep (_candidate)helm-find-files-grep700,29092
(defun helm-ff-git-grep (_candidate)helm-ff-git-grep705,29295
(defun helm-find-files-ag (_candidate)helm-find-files-ag709,29464
(defun helm-ff-zgrep (_candidate)helm-ff-zgrep713,29588
(defun helm-ff-pdfgrep (_candidate)helm-ff-pdfgrep717,29768
(defun helm-ff-etags-select (candidate)helm-ff-etags-select727,30233
(defun helm-find-files-switch-to-hist (_candidate)helm-find-files-switch-to-hist737,30723
(defvar eshell-command-aliases-list nil)eshell-command-aliases-list741,30837
(defvar helm-eshell-command-on-file-input-history nil)helm-eshell-command-on-file-input-history742,30878
(defun helm-find-files-eshell-command-on-file-1 (&optional map)helm-find-files-eshell-command-on-file-1743,30933
(defun helm-find-files-eshell-command-on-file (_candidate)helm-find-files-eshell-command-on-file846,35963
(defun helm-ff-switch-to-eshell (_candidate)helm-ff-switch-to-eshell851,36215
(defun helm-ff-serial-rename-action (method)helm-ff-serial-rename-action862,36634
(defun helm-ff-member-directory-p (file directory)helm-ff-member-directory-p901,38465
(defun helm-ff-serial-rename (_candidate)helm-ff-serial-rename955,41258
(defun helm-ff-serial-rename-by-symlink (_candidate)helm-ff-serial-rename-by-symlink962,41529
(defun helm-ff-serial-rename-by-copying (_candidate)helm-ff-serial-rename-by-copying969,41812
(defvar helm-ff-query-replace-fnames-history-from nil)helm-ff-query-replace-fnames-history-from976,42089
(defvar helm-ff-query-replace-fnames-history-to nil)helm-ff-query-replace-fnames-history-to977,42144
(defun helm-ff-query-replace-on-filenames (candidates)helm-ff-query-replace-on-filenames978,42197
(defun helm-ff-query-replace-on-marked (_candidate)helm-ff-query-replace-on-marked1044,45729
(defun helm-ff-run-query-replace-on-marked ()helm-ff-run-query-replace-on-marked1049,45934
(defun helm-ff-query-replace (_candidate)helm-ff-query-replace1055,46144
(defun helm-ff-query-replace-regexp (_candidate)helm-ff-query-replace-regexp1060,46377
(defun helm-ff-run-query-replace ()helm-ff-run-query-replace1065,46621
(defun helm-ff-run-query-replace-regexp ()helm-ff-run-query-replace-regexp1071,46801
(defun helm-ff-toggle-auto-update (_candidate)helm-ff-toggle-auto-update1077,47002
(defun helm-ff-run-toggle-auto-update ()helm-ff-run-toggle-auto-update1083,47273
(defun helm-ff-delete-char-backward ()helm-ff-delete-char-backward1090,47545
(defun helm-ff-delete-char-backward--exit-fn ()helm-ff-delete-char-backward--exit-fn1101,47928
(defun helm-ff-run-switch-to-history ()helm-ff-run-switch-to-history1105,48084
(defun helm-ff-run-grep ()helm-ff-run-grep1113,48390
(defun helm-ff-run-git-grep ()helm-ff-run-git-grep1120,48602
(defun helm-ff-run-grep-ag ()helm-ff-run-grep-ag1127,48822
(defun helm-ff-run-pdfgrep ()helm-ff-run-pdfgrep1133,48987
(defun helm-ff-run-zgrep ()helm-ff-run-zgrep1140,49203
(defun helm-ff-run-copy-file ()helm-ff-run-copy-file1147,49410
(defun helm-ff-run-rename-file ()helm-ff-run-rename-file1154,49637
(defun helm-ff-run-byte-compile-file ()helm-ff-run-byte-compile-file1161,49872
(defun helm-ff-run-load-file ()helm-ff-run-load-file1168,50131
(defun helm-ff-run-eshell-command-on-file ()helm-ff-run-eshell-command-on-file1175,50364
(defun helm-ff-run-ediff-file ()helm-ff-run-ediff-file1183,50653
(defun helm-ff-run-ediff-merge-file ()helm-ff-run-ediff-merge-file1190,50890
(defun helm-ff-run-symlink-file ()helm-ff-run-symlink-file1198,51156
(defun helm-ff-run-hardlink-file ()helm-ff-run-hardlink-file1205,51395
(defun helm-ff-run-delete-file ()helm-ff-run-delete-file1212,51638
(defun helm-ff-run-complete-fn-at-point ()helm-ff-run-complete-fn-at-point1219,51875
(defun helm-ff-run-switch-to-eshell ()helm-ff-run-switch-to-eshell1227,52159
(defun helm-ff-run-switch-other-window ()helm-ff-run-switch-other-window1234,52411
(defun helm-ff-run-switch-other-frame ()helm-ff-run-switch-other-frame1241,52679
(defun helm-ff-run-open-file-externally ()helm-ff-run-open-file-externally1248,52937
(defun helm-ff-run-open-file-with-default-tool ()helm-ff-run-open-file-with-default-tool1255,53210
(defun helm-ff-locate (candidate)helm-ff-locate1262,53504
(defun helm-ff-run-locate ()helm-ff-run-locate1276,54138
(defun helm-files-insert-as-org-link (candidate)helm-files-insert-as-org-link1283,54350
(defun helm-ff-run-insert-org-link ()helm-ff-run-insert-org-link1287,54470
(defun helm-ff-run-find-file-as-root ()helm-ff-run-find-file-as-root1293,54662
(defun helm-ff-run-find-alternate-file ()helm-ff-run-find-alternate-file1299,54851
(defun helm-ff-run-gnus-attach-files ()helm-ff-run-gnus-attach-files1305,55041
(defun helm-ff-run-etags ()helm-ff-run-etags1312,55305
(defvar lpr-printer-switch)lpr-printer-switch1319,55528
(defun helm-ff-print (_candidate)helm-ff-print1320,55556
(defun helm-ff-run-print-file ()helm-ff-run-print-file1370,57591
(defun helm-ff-checksum (file)helm-ff-checksum1377,57814
(defun helm-ff-toggle-basename (_candidate)helm-ff-toggle-basename1388,58249
(defun helm-ff-run-toggle-basename ()helm-ff-run-toggle-basename1397,58631
(defun helm-reduce-file-name (fname level)helm-reduce-file-name1404,58828
(defun helm-iter-reduce-fname (fname)helm-iter-reduce-fname1411,59137
(defvar helm-find-files--level-tree nil)helm-find-files--level-tree1422,59582
(defvar helm-find-files--level-tree-iterator nil)helm-find-files--level-tree-iterator1423,59623
(defun helm-find-files-up-one-level (arg)helm-find-files-up-one-level1424,59673
(defun helm-find-files-down-last-level ()helm-find-files-down-last-level1455,61144
(defun helm-find-files--reset-level-tree ()helm-find-files--reset-level-tree1470,61817
(defun helm-ff-retrieve-last-expanded ()helm-ff-retrieve-last-expanded1478,62169
(defun helm-ff-move-to-first-real-candidate ()helm-ff-move-to-first-real-candidate1493,62833
(defun helm-ff-update-when-only-one-matched ()helm-ff-update-when-only-one-matched1511,63590
(defun helm-ff-auto-expand-to-home-or-root ()helm-ff-auto-expand-to-home-or-root1593,68270
(defun helm-substitute-in-filename (fname)helm-substitute-in-filename1633,70616
(defun helm-point-file-in-dired (file)helm-point-file-in-dired1661,71944
(defun helm-create-tramp-name (fname)helm-create-tramp-name1669,72268
(defun helm-ff-before-action-hook-fn ()helm-ff-before-action-hook-fn1691,73307
(defun helm-ff-set-pattern (pattern)helm-ff-set-pattern1706,74021
(defun helm-find-files-get-candidates (&optional require-match)helm-find-files-get-candidates1756,76517
(defun helm-ff-directory-files (directory &optional full)helm-ff-directory-files1851,81700
(defun helm-ff-handle-backslash (fname)helm-ff-handle-backslash1879,83022
(defun helm-ff-fuzzy-matching-p ()helm-ff-fuzzy-matching-p1887,83284
(defun helm-ff--transform-pattern-for-completion (pattern)helm-ff--transform-pattern-for-completion1891,83414
(defun helm-dir-is-dot (dir)helm-dir-is-dot1939,85858
(defun helm-ff-save-history ()helm-ff-save-history1942,85943
(defun helm-files-save-file-name-history (&optional force)helm-files-save-file-name-history1953,86473
(defun helm-ff-valid-symlink-p (file)helm-ff-valid-symlink-p1973,87423
(defun helm-get-default-mode-for-file (filename)helm-get-default-mode-for-file1981,87696
(defun helm-ff-properties (candidate)helm-ff-properties1987,87962
(defun helm-ff-properties-persistent ()helm-ff-properties-persistent2029,90102
(defun helm-ff-persistent-delete ()helm-ff-persistent-delete2037,90405
(defun helm-ff-dot-file-p (file)helm-ff-dot-file-p2045,90696
(defun helm-ff-quick-delete (_candidate)helm-ff-quick-delete2049,90809
(defun helm-ff-kill-buffer-fname (candidate)helm-ff-kill-buffer-fname2074,91999
(defun helm-ff-kill-or-find-buffer-fname (candidate)helm-ff-kill-or-find-buffer-fname2083,92413
(defun helm-ff-run-kill-buffer-persistent ()helm-ff-run-kill-buffer-persistent2105,93377
(defun helm-ff-prefix-filename (fname &optional file-or-symlinkp new-file)helm-ff-prefix-filename2113,93696
(defun helm-ff-score-candidate-for-pattern (str pattern)helm-ff-score-candidate-for-pattern2131,94583
(defun helm-ff-sort-candidates (candidates _source)helm-ff-sort-candidates2136,94737
(defun helm-ff-filter-candidate-one-by-one (file)helm-ff-filter-candidate-one-by-one2166,96406
(defun helm-find-files-action-transformer (actions candidate)helm-find-files-action-transformer2240,99846
(defun helm-ff-goto-linum (candidate)helm-ff-goto-linum2275,101679
(defun helm-ff-gnus-attach-files (_candidate)helm-ff-gnus-attach-files2288,102272
(defvar image-dired-display-image-buffer)image-dired-display-image-buffer2294,102504
(defun helm-ff-rotate-current-image-1 (file &optional num-arg)helm-ff-rotate-current-image-12295,102546
(defun helm-ff-rotate-image-left (candidate)helm-ff-rotate-image-left2313,103410
(defun helm-ff-rotate-image-right (candidate)helm-ff-rotate-image-right2318,103581
(defun helm-ff-rotate-left-persistent ()helm-ff-rotate-left-persistent2323,103750
(defun helm-ff-rotate-right-persistent ()helm-ff-rotate-right-persistent2331,104040
(defun helm-ff-exif-data (candidate)helm-ff-exif-data2339,104334
(defun helm-find-files-persistent-action (candidate)helm-find-files-persistent-action2350,104869
(defun helm-find-files-recursive-dirs (directory &optional input)helm-find-files-recursive-dirs2439,109693
(defun helm-ff-recursive-dirs (_candidate)helm-ff-recursive-dirs2471,111181
(defun helm-ff-file-compressed-p (candidate)helm-ff-file-compressed-p2478,111461
(defun helm-insert-file-name-completion-at-point (candidate)helm-insert-file-name-completion-at-point2483,111641
(defun helm-find-files-1 (fname &optional preselect)helm-find-files-12537,114140
(defun helm-find-files-cleanup ()helm-find-files-cleanup2577,116015
(defun helm-find-files-toggle-to-bookmark ()helm-find-files-toggle-to-bookmark2584,116270
(defun helm-find-files-initial-input (&optional input)helm-find-files-initial-input2600,116952
(defun helm-find-files-input (file-at-pt thing-at-pt)helm-find-files-input2612,117496
(defun helm-ff-find-url-at-point ()helm-ff-find-url-at-point2642,118912
(defun helm-find-library-at-point ()helm-find-library-at-point2656,119594
(defun helm-ff--valid-default-directory ()helm-ff--valid-default-directory2684,120741
(defun helm-get-dest-fnames-from-list (flist dest-cand rename-dir-flag)helm-get-dest-fnames-from-list2761,124622
(defun helm-ff-maybe-mark-candidates ()helm-ff-maybe-mark-candidates2779,125439
(defun helm-file-buffers (filename)helm-file-buffers2801,126219
(defun helm-delete-file (file &optional error-if-dot-file-p synchro)helm-delete-file2809,126521
(defun helm-delete-marked-files (_ignore)helm-delete-marked-files2838,127830
(defun helm-find-file-or-marked (candidate)helm-find-file-or-marked2851,128381
(defun helm-shadow-boring-files (files)helm-shadow-boring-files2900,130823
(defun helm-skip-boring-files (files)helm-skip-boring-files2905,131034
(defun helm-skip-current-file (files)helm-skip-current-file2909,131193
(defun helm-w32-pathname-transformer (args)helm-w32-pathname-transformer2913,131323
(defun helm-transform-file-load-el (actions candidate)helm-transform-file-load-el2925,131709
(defun helm-transform-file-browse-url (actions candidate)helm-transform-file-browse-url2932,132007
(defun helm-multi-files-toggle-to-locate ()helm-multi-files-toggle-to-locate2942,132452
(defun helm-files-in-all-dired-candidates ()helm-files-in-all-dired-candidates2963,133249
(defclass helm-files-dired-source (helm-source-sync helm-type-file)helm-files-dired-source2973,133641
(defvar helm-source-files-in-all-diredhelm-source-files-in-all-dired2976,133775
(defvar file-cache-alist)file-cache-alist2983,133914
(defclass helm-file-cache (helm-source-in-buffer helm-type-file)helm-file-cache2985,133941
(defun helm-file-cache-get-candidates ()helm-file-cache-get-candidates2988,134062
(defvar helm-source-file-cache nil)helm-source-file-cache2994,134298
(defcustom helm-file-cache-fuzzy-match nilhelm-file-cache-fuzzy-match2996,134335
(defun helm-ff-cache-add-file (_candidate)helm-ff-cache-add-file3018,135129
(defun helm-ff-file-cache-remove-file-1 (file)helm-ff-file-cache-remove-file-13023,135291
(defun helm-ff-file-cache-remove-file (_file)helm-ff-file-cache-remove-file3034,135685
(defun helm-transform-file-cache (actions _candidate)helm-transform-file-cache3039,135872
(defvar helm-source-file-name-historyhelm-source-file-name-history3051,136216
(defvar helm-source--ff-file-name-history nilhelm-source--ff-file-name-history3058,136479
(defun helm-file-name-history-transformer (candidates _source)helm-file-name-history-transformer3062,136664
(defun helm-ff-file-name-history ()helm-ff-file-name-history3070,137033
(defvar helm-recentf--basename-flag nil)helm-recentf--basename-flag3107,138647
(defun helm-recentf-pattern-transformer (pattern)helm-recentf-pattern-transformer3109,138689
(defcustom helm-turn-on-recentf thelm-turn-on-recentf3121,139203
(defclass helm-recentf-source (helm-source-sync helm-type-file)helm-recentf-source3126,139332
(defmethod helm--setup-source :after ((source helm-recentf-source))helm--setup-source3139,140002
(defvar helm-source-recentf nilhelm-source-recentf3147,140411
(defcustom helm-recentf-fuzzy-match nilhelm-recentf-fuzzy-match3151,140563
(defvar helm--browse-project-cache (make-hash-table :test 'equal))helm--browse-project-cache3166,141090
(defvar helm-buffers-in-project-p)helm-buffers-in-project-p3167,141157
(defun helm-browse-project-get-buffers (root-directory)helm-browse-project-get-buffers3169,141193
(defun helm-browse-project-build-buffers-source (directory)helm-browse-project-build-buffers-source3180,141729
(defun helm-browse-project-find-files (directory &optional refresh)helm-browse-project-find-files3188,142076
(defun helm-browse-project (arg)helm-browse-project3220,143757
(defun helm-browse-project-get--root-dir (directory)helm-browse-project-get--root-dir3263,145604
(defun helm-ff-browse-project (_candidate)helm-ff-browse-project3271,146023
(defun helm-ff-run-browse-project ()helm-ff-run-browse-project3277,146246
(defun helm-ff-gid (_candidate)helm-ff-gid3283,146429
(defun helm-ff-run-gid ()helm-ff-run-gid3287,146538
(defvar session-file-alist)session-file-alist3297,146843
(defvar helm-source-sessionhelm-source-session3298,146871
(defun helm-highlight-files (files)helm-highlight-files3314,147424
(defclass helm-files-in-current-dir-source (helm-source-sync helm-type-file)helm-files-in-current-dir-source3345,148829
(defvar helm-source-files-in-current-dirhelm-source-files-in-current-dir3359,149573
(defvar helm-source-tracker-cand-incomplete nil "Contains incomplete candidate")helm-source-tracker-cand-incomplete3367,149773
(defun helm-source-tracker-transformer (candidates _source)helm-source-tracker-transformer3368,149854
(defvar helm-source-tracker-searchhelm-source-tracker-search3392,151165
(defclass helm-mac-spotlight-source (helm-source-async helm-type-file)helm-mac-spotlight-source3412,151971
(defvar helm-source-mac-spotlighthelm-source-mac-spotlight3419,152258
(defvar helm-source-findutilshelm-source-findutils3428,152449
(defun helm-findutils-transformer (candidates _source)helm-findutils-transformer3441,152974
(defun helm-find--build-cmd-line ()helm-find--build-cmd-line3461,153979
(defun helm-find-shell-command-fn ()helm-find-shell-command-fn3491,155540
(defun helm-find-1 (dir)helm-find-13521,156902
(defun helm-ff-find-sh-command (_candidate)helm-ff-find-sh-command3529,157204
(defun helm-ff-run-find-sh-command ()helm-ff-run-find-sh-command3533,157336
(defun helm-find (arg)helm-find3545,157639
(defvar org-directory)org-directory3570,158554
(defun helm-find-files (arg)helm-find-files3572,158592
(defun helm-for-files ()helm-for-files3602,160374
(defun helm-multi-files ()helm-multi-files3614,160798
(defun helm-recentf ()helm-recentf3639,161869

.cask/24.5.1/elpa/helm-20160623.2215/helm-font.el,1518
(defgroup helm-font nilhelm-font24,866
(defvar helm-ucs-maphelm-ucs-map28,958
(defface helm-ucs-charhelm-ucs-char38,1377
(defvar helm-xfonts-cache nil)helm-xfonts-cache46,1552
(defvar helm-previous-font nil)helm-previous-font47,1583
(defvar helm-source-xfontshelm-source-xfonts48,1615
(defvar helm-ucs--max-len nil)helm-ucs--max-len74,2758
(defvar helm-ucs--names nil)helm-ucs--names75,2789
(defvar helm-ucs-history nil)helm-ucs-history76,2818
(defun helm-calculate-ucs-max-len ()helm-calculate-ucs-max-len78,2849
(defun helm-ucs-init ()helm-ucs-init85,3157
(defun helm-ucs-forward-char (_candidate)helm-ucs-forward-char103,3915
(defun helm-ucs-backward-char (_candidate)helm-ucs-backward-char107,4009
(defun helm-ucs-delete-backward (_candidate)helm-ucs-delete-backward111,4105
(defun helm-ucs-insert (candidate n)helm-ucs-insert115,4202
(defun helm-ucs-insert-char (candidate)helm-ucs-insert-char122,4413
(defun helm-ucs-insert-code (candidate)helm-ucs-insert-code125,4487
(defun helm-ucs-insert-name (candidate)helm-ucs-insert-name128,4561
(defun helm-ucs-persistent-insert ()helm-ucs-persistent-insert131,4635
(defun helm-ucs-persistent-forward ()helm-ucs-persistent-forward138,4867
(defun helm-ucs-persistent-backward ()helm-ucs-persistent-backward145,5104
(defun helm-ucs-persistent-delete ()helm-ucs-persistent-delete152,5338
(defvar helm-source-ucshelm-source-ucs159,5574
(defun helm-select-xfont ()helm-select-xfont176,6365
(defun helm-ucs ()helm-ucs183,6544

.cask/24.5.1/elpa/helm-20160623.2215/helm-grep.el,7717
(defvar helm--ansi-color-regexp)helm--ansi-color-regexp33,1272
(defgroup helm-grep nilhelm-grep36,1308
(defcustom helm-grep-default-commandhelm-grep-default-command40,1403
(defcustom helm-grep-default-recurse-commandhelm-grep-default-recurse-command103,4050
(defcustom helm-default-zgrep-commandhelm-default-zgrep-command110,4329
(defcustom helm-pdfgrep-default-commandhelm-pdfgrep-default-command120,4694
(defcustom helm-grep-use-ioccur-style-keys thelm-grep-use-ioccur-style-keys128,4983
(defcustom helm-pdfgrep-default-read-command nilhelm-pdfgrep-default-read-command133,5110
(defcustom helm-grep-max-length-history 100helm-grep-max-length-history144,5456
(defcustom helm-zgrep-file-extension-regexphelm-zgrep-file-extension-regexp149,5598
(defcustom helm-grep-preferred-ext nilhelm-grep-preferred-ext155,5775
(defcustom helm-grep-save-buffer-name-no-confirm nilhelm-grep-save-buffer-name-no-confirm160,5907
(defcustom helm-grep-ignored-fileshelm-grep-ignored-files165,6051
(defcustom helm-grep-ignored-directorieshelm-grep-ignored-directories174,6419
(defcustom helm-grep-truncate-lines thelm-grep-truncate-lines180,6617
(defcustom helm-grep-file-path-style 'basenamehelm-grep-file-path-style185,6757
(defcustom helm-grep-actionshelm-grep-actions196,7227
(defgroup helm-grep-faces nilhelm-grep-faces213,7712
(defface helm-grep-matchhelm-grep-match219,7846
(defface helm-grep-filehelm-grep-file225,8037
(defface helm-grep-linenohelm-grep-lineno231,8201
(defface helm-grep-finishhelm-grep-finish236,8340
(defface helm-grep-cmd-linehelm-grep-cmd-line241,8475
(defvar helm-grep-maphelm-grep-map250,8646
(defvar helm-pdfgrep-maphelm-pdfgrep-map265,9376
(defvar helm-grep-mode-maphelm-grep-mode-map274,9699
(defvar helm-rzgrep-cache (make-hash-table :test 'equal))helm-rzgrep-cache292,10491
(defvar helm-grep-default-function 'helm-grep-init)helm-grep-default-function293,10549
(defvar helm-zgrep-recurse-flag nil)helm-zgrep-recurse-flag294,10601
(defvar helm-grep-history nil)helm-grep-history295,10638
(defvar helm-grep-last-targets nil)helm-grep-last-targets296,10669
(defvar helm-grep-include-files nil)helm-grep-include-files297,10705
(defvar helm-grep-in-recurse nil)helm-grep-in-recurse298,10742
(defvar helm-grep-use-zgrep nil)helm-grep-use-zgrep299,10776
(defvar helm-grep-default-directory-fn nilhelm-grep-default-directory-fn300,10809
(defvar helm-pdfgrep-targets nil)helm-pdfgrep-targets303,10994
(defvar helm-grep-last-cmd-line nil)helm-grep-last-cmd-line304,11028
(defvar helm-grep-split-line-regexp "^\\([[:lower:][:upper:]]?:?.*?\\):\\([0-9]+\\):\\(.*\\)")helm-grep-split-line-regexp305,11065
(defun helm-grep-prepare-candidates (candidates in-directory)helm-grep-prepare-candidates311,11178
(defun helm-grep-command (&optional recursive grep)helm-grep-command367,14304
(defun helm-grep--prepare-cmd-line (only-files &optional include zgrep)helm-grep--prepare-cmd-line389,15287
(defun helm-grep-init (cmd-line)helm-grep-init450,18510
(defun helm-grep-collect-candidates ()helm-grep-collect-candidates522,22503
(defun helm-grep-action (candidate &optional where mark)helm-grep-action534,22855
(defun helm-grep-persistent-action (candidate)helm-grep-persistent-action579,25091
(defun helm-grep-other-window (candidate)helm-grep-other-window587,25371
(defun helm-grep-other-frame (candidate)helm-grep-other-frame591,25511
(defun helm-grep-jump-elscreen (candidate)helm-grep-jump-elscreen595,25648
(defun helm-goto-next-or-prec-file (n)helm-goto-next-or-prec-file599,25781
(defun helm-goto-precedent-file ()helm-goto-precedent-file638,27579
(defun helm-goto-next-file ()helm-goto-next-file647,27829
(defun helm-grep-run-default-action ()helm-grep-run-default-action653,27987
(defun helm-grep-run-other-window-action ()helm-grep-run-other-window-action660,28219
(defun helm-grep-run-other-frame-action ()helm-grep-run-other-frame-action667,28477
(defun helm-grep-run-save-buffer ()helm-grep-run-save-buffer674,28731
(defun helm-grep-save-results (candidate)helm-grep-save-results685,28995
(defun helm-grep-save-results-1 ()helm-grep-save-results-1688,29076
(define-derived-mode helm-grep-modehelm-grep-mode723,30732
(defun helm-grep-mode--revert-buffer-function (&optional _ignore-auto _noconfirm)helm-grep-mode--revert-buffer-function735,31154
(defun helm-grep-mode--sentinel (process event)helm-grep-mode--sentinel749,31797
(defun helm-gm-next-file ()helm-gm-next-file767,32693
(defun helm-gm-precedent-file ()helm-gm-precedent-file771,32773
(defun helm-grep-mode-jump ()helm-grep-mode-jump775,32859
(defun helm-grep-mode-jump-other-window-1 (arg)helm-grep-mode-jump-other-window-1780,32980
(defun helm-grep-mode-jump-other-window-forward ()helm-grep-mode-jump-other-window-forward790,33300
(defun helm-grep-mode-jump-other-window-backward ()helm-grep-mode-jump-other-window-backward794,33410
(defun helm-grep-mode-jump-other-window ()helm-grep-mode-jump-other-window798,33522
(defun helm-grep-hack-types ()helm-grep-hack-types809,33775
(defun helm-grep-ack-types-transformer (candidates _source)helm-grep-ack-types-transformer829,34728
(defvar helm-grep-ack-types-cache nil)helm-grep-ack-types-cache836,34929
(defun helm-grep-read-ack-type ()helm-grep-read-ack-type837,34968
(defun helm-grep-guess-extensions (files)helm-grep-guess-extensions856,35620
(defun helm-grep-get-file-extensions (files)helm-grep-get-file-extensions876,36577
(defclass helm-grep-class (helm-source-async)helm-grep-class897,37561
(defvar helm-source-grep nil)helm-source-grep911,38173
(defun helm-do-grep-1 (targets &optional recurse grep exts default-input input)helm-do-grep-1913,38204
(defun helm-ff-zgrep-1 (flist recursive)helm-ff-zgrep-11006,42315
(defun helm-grep-split-line (line)helm-grep-split-line1028,43123
(defun helm-grep--filter-candidate-1 (candidate &optional dir)helm-grep--filter-candidate-11039,43601
(defun helm-grep-filter-one-by-one (candidate)helm-grep-filter-one-by-one1066,44920
(defun helm-grep-highlight-match (str &optional multi-match)helm-grep-highlight-match1080,45550
(defun helm-grep-buffers-1 (candidate &optional zgrep)helm-grep-buffers-11112,46912
(defun helm-grep-buffers (candidate)helm-grep-buffers1147,48516
(defun helm-zgrep-buffers (candidate)helm-zgrep-buffers1151,48617
(defvar helm-pdfgrep-default-function 'helm-pdfgrep-init)helm-pdfgrep-default-function1160,48861
(defun helm-pdfgrep-init (only-files)helm-pdfgrep-init1161,48919
(defun helm-do-pdfgrep-1 (only)helm-do-pdfgrep-11201,50844
(defun helm-pdfgrep-action (candidate)helm-pdfgrep-action1233,52372
(defun helm-pdfgrep-action-1 (_split pageno fname)helm-pdfgrep-action-11236,52449
(defcustom helm-grep-ag-commandhelm-grep-ag-command1248,52826
(defun helm-grep--ag-command ()helm-grep--ag-command1265,53359
(defun helm-grep-ag-get-types ()helm-grep-ag-get-types1268,53437
(defun helm-grep-ag-prepare-cmd-line (pattern directory &optional type)helm-grep-ag-prepare-cmd-line1278,53850
(defun helm-grep-ag-init (directory &optional type)helm-grep-ag-init1296,54771
(defclass helm-grep-ag-class (helm-source-async)helm-grep-ag-class1344,57269
(defvar helm-source-grep-ag nil)helm-source-grep-ag1355,57705
(defun helm-grep-ag-1 (directory &optional type)helm-grep-ag-11357,57739
(defun helm-grep-ag (directory with-types)helm-grep-ag1371,58389
(defcustom helm-grep-git-grep-commandhelm-grep-git-grep-command1387,58943
(defun helm-grep-git-1 (directory &optional all default input)helm-grep-git-11402,59604
(defun helm-do-grep-ag (arg)helm-do-grep-ag1422,60577
(defun helm-grep-do-git-grep (arg)helm-grep-do-git-grep1430,60841

.cask/24.5.1/elpa/helm-20160623.2215/helm-help.el,2101
(defvar helm-org-headings--nofilename)helm-org-headings--nofilename21,821
(defgroup helm-help nilhelm-help25,931
(defface helm-helperhelm-helper29,1002
(defcustom helm-documentation-file "~/.emacs.d/helm-doc.org"helm-documentation-file34,1122
(defvar helm-help--string-list '(helm-help-messagehelm-help--string-list39,1278
(defun helm-documentation (arg)helm-documentation63,2522
(defvar helm-buffer-help-messagehelm-buffer-help-message92,3553
(defvar helm-ff-help-messagehelm-ff-help-message207,8282
(defvar helm-read-file-name-help-messagehelm-read-file-name-help-message516,22088
(defvar helm-generic-file-help-messagehelm-generic-file-help-message597,25086
(defvar helm-grep-help-messagehelm-grep-help-message657,27280
(defvar helm-pdfgrep-help-messagehelm-pdfgrep-help-message741,30711
(defvar helm-etags-help-messagehelm-etags-help-message753,30976
(defvar helm-ucs-help-messagehelm-ucs-help-message765,31233
(defvar helm-bookmark-help-messagehelm-bookmark-help-message783,31636
(defvar helm-esh-help-messagehelm-esh-help-message796,32001
(defvar helm-buffers-ido-virtual-help-messagehelm-buffers-ido-virtual-help-message837,33067
(defvar helm-moccur-help-messagehelm-moccur-help-message852,33510
(defvar helm-top-help-messagehelm-top-help-message916,35522
(defvar helm-apt-help-messagehelm-apt-help-message931,35838
(defvar helm-el-package-help-messagehelm-el-package-help-message946,36225
(defvar helm-M-x-help-messagehelm-M-x-help-message1003,38590
(defvar helm-imenu-help-messagehelm-imenu-help-message1022,39104
(defvar helm-colors-help-messagehelm-colors-help-message1035,39328
(defvar helm-semantic-help-messagehelm-semantic-help-message1048,39667
(defvar helm-kmacro-help-messagehelm-kmacro-help-message1059,39790
(defvar helm-comp-read-mode-line "\helm-comp-read-mode-line1082,40326
(defvar helm-read-file-name-mode-line-string "\helm-read-file-name-mode-line-string1093,40598
(defvar helm-top-mode-line "\helm-top-mode-line1105,40945
(defun helm-describe-helm-attribute (helm-attribute)helm-describe-helm-attribute1119,41206

.cask/24.5.1/elpa/helm-20160623.2215/helm-id-utils.el,472
(defgroup helm-id-utils nilhelm-id-utils23,857
(defcustom helm-gid-program "gid"helm-gid-program27,960
(defcustom helm-gid-db-file-name "ID"helm-gid-db-file-name36,1318
(defun helm-gid-candidates-process ()helm-gid-candidates-process41,1469
(defun helm-gid-filtered-candidate-transformer (candidates _source)helm-gid-filtered-candidate-transformer72,3047
(defclass helm-gid-source (helm-source-async)helm-gid-source77,3286
(defun helm-gid ()helm-gid105,4486

.cask/24.5.1/elpa/helm-20160623.2215/helm-imenu.el,1993
(defgroup helm-imenu nilhelm-imenu28,924
(defcustom helm-imenu-delimiter " / "helm-imenu-delimiter32,1021
(defcustom helm-imenu-execute-action-at-once-if-onehelm-imenu-execute-action-at-once-if-one37,1162
(defcustom helm-imenu-lynx-style-map thelm-imenu-lynx-style-map43,1347
(defcustom helm-imenu-all-buffer-assoc nilhelm-imenu-all-buffer-assoc48,1469
(defvar helm-imenu-maphelm-imenu-map58,1889
(defun helm-imenu-next-or-previous-section (n)helm-imenu-next-or-previous-section68,2312
(defun helm-imenu-next-section ()helm-imenu-next-section84,2944
(defun helm-imenu-previous-section ()helm-imenu-previous-section88,3038
(defvar helm-cached-imenu-alist nil)helm-cached-imenu-alist94,3153
(defvar helm-cached-imenu-candidates nil)helm-cached-imenu-candidates97,3245
(defvar helm-cached-imenu-tick nil)helm-cached-imenu-tick100,3347
(defvar helm-source-imenu nil "See (info \"(emacs)Imenu\")")helm-source-imenu104,3439
(defvar helm-source-imenu-all nil)helm-source-imenu-all105,3500
(defclass helm-imenu-source (helm-source-sync)helm-imenu-source107,3536
(defcustom helm-imenu-fuzzy-match nilhelm-imenu-fuzzy-match116,3939
(defun helm-imenu--maybe-switch-to-buffer (candidate)helm-imenu--maybe-switch-to-buffer126,4266
(defun helm-imenu--execute-action-at-once-p ()helm-imenu--execute-action-at-once-p130,4395
(defun helm-imenu-action (candidate)helm-imenu-action142,4749
(defun helm-imenu-persistent-action (candidate)helm-imenu-persistent-action155,5262
(defun helm-imenu-candidates (&optional buffer)helm-imenu-candidates161,5468
(defun helm-imenu-candidates-in-all-buffers ()helm-imenu-candidates-in-all-buffers173,6014
(defun helm-imenu--candidates-1 (alist)helm-imenu--candidates-1192,6850
(defun helm-imenu--get-prop (item)helm-imenu--get-prop208,7762
(defun helm-imenu-transformer (candidates)helm-imenu-transformer221,8226
(defun helm-imenu ()helm-imenu241,9113
(defun helm-imenu-in-all-buffers ()helm-imenu-in-all-buffers258,9687

.cask/24.5.1/elpa/helm-20160623.2215/helm-info.el,1425
(defvar Info-history)Info-history29,1109
(defvar Info-directory-list)Info-directory-list30,1131
(defgroup helm-info nilhelm-info34,1177
(defcustom helm-info-default-sourceshelm-info-default-sources38,1272
(defun helm-info-goto (node-line)helm-info-goto83,3108
(defun helm-info-display-to-real (line)helm-info-display-to-real87,3214
(defclass helm-info-source (helm-source-in-buffer)helm-info-source94,3578
(defmacro helm-build-info-source (fname &rest args)helm-build-info-source103,3920
(defun helm-build-info-index-command (name doc source buffer)helm-build-info-index-command107,4075
(defun helm-define-info-index-sources (var-value &optional commands)helm-define-info-index-sources119,4502
(defun helm-info-index-set (var value)helm-info-index-set132,5167
(defvar helm-info-searched (make-ring 32)helm-info-searched141,5424
(defun helm-get-info-files ()helm-get-info-files144,5512
(defcustom helm-default-info-index-listhelm-default-info-index-list160,6161
(defun helm-info-search-index (candidate)helm-info-search-index167,6358
(defun helm-def-source--info-files ()helm-def-source--info-files176,6700
(defun helm-info ()helm-info189,7109
(defvar helm-info--pages-cache nilhelm-info--pages-cache205,7709
(defvar helm-source-info-pageshelm-source-info-pages208,7790
(defun helm-info-pages-init ()helm-info-pages-init218,8190
(defun helm-info-at-point ()helm-info-at-point233,8706

.cask/24.5.1/elpa/helm-20160623.2215/helm-locate.el,2123
(defgroup helm-locate nilhelm-locate30,1031
(defcustom helm-locate-db-file-regexp "m?locate\.db$"helm-locate-db-file-regexp34,1130
(defcustom helm-ff-locate-db-filename "locate.db"helm-ff-locate-db-filename40,1298
(defcustom helm-locate-command nilhelm-locate-command49,1686
(defcustom helm-locate-create-db-commandhelm-locate-create-db-command71,2462
(defcustom helm-locate-case-fold-search helm-case-fold-searchhelm-locate-case-fold-search77,2625
(defcustom helm-locate-fuzzy-match nilhelm-locate-fuzzy-match88,3068
(defcustom helm-locate-project-list nilhelm-locate-project-list93,3192
(defcustom helm-locate-recursive-dirs-command "locate -i -e -A --regex ^%s %s.*$"helm-locate-recursive-dirs-command100,3431
(defvar helm-generic-files-maphelm-generic-files-map107,3691
(defface helm-locate-finishhelm-locate-finish137,5289
(defun helm-ff-find-locatedb (&optional from-ff)helm-ff-find-locatedb143,5434
(defun helm-locate-create-db-default-function (db-name directory)helm-locate-create-db-default-function165,6347
(defvar helm-locate-create-db-functionhelm-locate-create-db-function171,6629
(defun helm-locate-1 (&optional localdb init from-ff default)helm-locate-1177,6848
(defun helm-locate-set-command ()helm-locate-set-command220,9150
(defvar helm-file-name-history nil)helm-file-name-history230,9496
(defun helm-locate-with-db (&optional db initial-input default)helm-locate-with-db231,9532
(defun helm-locate-init ()helm-locate-init261,10774
(defclass helm-locate-source (helm-source-async helm-type-file)helm-locate-source318,13685
(defvar helm-source-locatehelm-source-locate326,14041
(defun helm-locate-pattern-transformer (pattern)helm-locate-pattern-transformer330,14178
(defun helm-locate-find-dbs-in-projects (&optional update)helm-locate-find-dbs-in-projects340,14579
(defclass helm-locate-subdirs-source (helm-source-in-buffer)helm-locate-subdirs-source359,15372
(defun helm-locate-init-subdirs ()helm-locate-init-subdirs368,15648
(defun helm-projects-find-files (update)helm-projects-find-files382,16092
(defun helm-locate (arg)helm-locate396,16661

.cask/24.5.1/elpa/helm-20160623.2215/helm-man.el,733
(defvar woman-topic-all-completions)woman-topic-all-completions24,853
(defvar woman-manpath)woman-manpath25,890
(defvar woman-path)woman-path26,913
(defvar woman-expanded-directory-path)woman-expanded-directory-path27,933
(defgroup helm-man nilhelm-man35,1390
(defcustom helm-man-or-woman-function 'Man-getpage-in-backgroundhelm-man-or-woman-function39,1471
(defcustom helm-man-format-switches "-l %s"helm-man-format-switches46,1756
(defvar helm-man--pages nilhelm-man--pages56,2112
(defun helm-man-default-action (candidate)helm-man-default-action61,2239
(defun helm-man--init ()helm-man--init78,3040
(defvar helm-source-man-pageshelm-source-man-pages89,3480
(defun helm-man-woman (arg)helm-man-woman99,3815

.cask/24.5.1/elpa/helm-20160623.2215/helm-misc.el,2572
(defvar display-time-world-list)display-time-world-list25,941
(defgroup helm-misc nilhelm-misc28,977
(defcustom helm-time-zone-home-location "Paris"helm-time-zone-home-location32,1067
(defcustom helm-timezone-actionshelm-timezone-actions37,1184
(defcustom helm-mini-default-sources '(helm-source-buffers-listhelm-mini-default-sources44,1436
(defface helm-time-zone-currenthelm-time-zone-current51,1730
(defface helm-time-zone-homehelm-time-zone-home56,1878
(defvar LaTeX-math-menu)LaTeX-math-menu64,2042
(defun helm-latex-math-candidates ()helm-latex-math-candidates65,2067
(defvar helm-source-latex-mathhelm-source-latex-math72,2336
(defun helm-jabber-online-contacts ()helm-jabber-online-contacts84,2702
(defvar helm-source-jabber-contactshelm-source-jabber-contacts94,3019
(defun helm-time-zone-transformer (candidates _source)helm-time-zone-transformer106,3422
(defvar helm-source-time-worldhelm-source-time-world118,3910
(defun helm-lacarte-candidate-transformer (cands)helm-lacarte-candidate-transformer132,4350
(defclass helm-lacarte (helm-source-sync helm-type-command)helm-lacarte142,4726
(defun helm-lacarte-get-candidates (&optional maps)helm-lacarte-get-candidates148,5019
(defun helm-browse-menubar ()helm-browse-menubar159,5550
(defun helm-call-interactively (cmd-or-name)helm-call-interactively171,6049
(defvar helm-source-minibuffer-historyhelm-source-minibuffer-history188,6683
(defun helm-comint-input-ring-action (candidate)helm-comint-input-ring-action209,7358
(defvar helm-source-comint-input-ringhelm-source-comint-input-ring215,7565
(defvar helm-source-ratpoison-commandshelm-source-ratpoison-commands227,7914
(defun helm-ratpoison-commands-init ()helm-ratpoison-commands-init235,8223
(defun helm-ratpoison-commands-display-to-real (display)helm-ratpoison-commands-display-to-real250,8852
(defun helm-ratpoison-commands-execute (candidate)helm-ratpoison-commands-execute254,8988
(defvar helm-source-stumpwm-commandshelm-source-stumpwm-commands260,9124
(defun helm-stumpwm-commands-init ()helm-stumpwm-commands-init267,9361
(defun helm-stumpwm-commands-execute (candidate)helm-stumpwm-commands-execute277,9738
(defun helm-world-time ()helm-world-time281,9855
(defun helm-insert-latex-math ()helm-insert-latex-math288,10089
(defun helm-ratpoison-commands ()helm-ratpoison-commands294,10274
(defun helm-stumpwm-commands()helm-stumpwm-commands301,10500
(defun helm-minibuffer-history ()helm-minibuffer-history308,10708
(defun helm-comint-input-ring ()helm-comint-input-ring316,10967

.cask/24.5.1/elpa/helm-20160623.2215/helm-mode.el,2403
(defgroup helm-mode nilhelm-mode25,875
(defcustom helm-completing-read-handlers-alisthelm-completing-read-handlers-alist29,944
(defcustom helm-comp-read-case-fold-search helm-case-fold-searchhelm-comp-read-case-fold-search80,3135
(defcustom helm-mode-handle-completion-in-region thelm-mode-handle-completion-in-region86,3356
(defcustom helm-mode-reverse-history thelm-mode-reverse-history93,3601
(defcustom helm-mode-no-completion-in-region-in-modes nilhelm-mode-no-completion-in-region-in-modes98,3760
(defcustom helm-completion-in-region-fuzzy-match nilhelm-completion-in-region-fuzzy-match103,3927
(defcustom helm-mode-fuzzy-match nilhelm-mode-fuzzy-match109,4157
(defcustom helm-mode-minibuffer-setup-hook-black-list '(minibuffer-completion-help)helm-mode-minibuffer-setup-hook-black-list119,4547
(defvar helm-comp-read-maphelm-comp-read-map128,4890
(defvar helm-comp-read-must-match-maphelm-comp-read-must-match-map136,5155
(defvar helm-cr-unknown-pattern-flag nil)helm-cr-unknown-pattern-flag149,5506
(defun helm-cr-empty-string ()helm-cr-empty-string155,5596
(defun helm-mode--keyboard-quit ()helm-mode--keyboard-quit164,5818
(defun helm-cr-default-transformer (candidates _source)helm-cr-default-transformer251,10272
(defun helm-comp-read--move-to-first-real-candidate ()helm-comp-read--move-to-first-real-candidate271,11119
(defun helm-cr-default (default cands)helm-cr-default276,11312
(defvar helm-completion-mode-string " Helm")helm-completion-mode-string542,23097
(defvar helm-completion-mode-quit-messagehelm-completion-mode-quit-message544,23143
(defvar helm-completion-mode-start-messagehelm-completion-mode-start-message547,23216
(defun helm-completing-read-symbolshelm-completing-read-symbols553,23320
(defun helm-completing-read-default-1helm-completing-read-default-1585,24465
(defun helm-completing-read-with-cands-in-bufferhelm-completing-read-with-cands-in-buffer629,26358
(defun helm-mode--default-filename (fname dir initial)helm-mode--default-filename902,38505
(defun helm-mode--advice-lisp--local-variables (old--fn &rest args)helm-mode--advice-lisp--local-variables999,43168
(defun helm--completion-in-region (start end collection &optional predicate)helm--completion-in-region1003,43281
(defun helm-mode--in-file-completion-p ()helm-mode--in-file-completion-p1118,49814
(define-minor-mode helm-modehelm-mode1126,50102

.cask/24.5.1/elpa/helm-20160623.2215/helm-multi-match.el,3043
(defgroup helm-multi-match nilhelm-multi-match30,1043
(defcustom helm-mm-matching-method 'multi3helm-mm-matching-method34,1113
(defconst helm-mm-default-match-functionshelm-mm-default-match-functions57,2186
(defconst helm-mm-default-search-functionshelm-mm-default-search-functions59,2268
(defvar helm-mm-space-regexp "[\\ ] "helm-mm-space-regexp66,2380
(defun helm-mm-split-pattern (pattern)helm-mm-split-pattern69,2483
(defun helm-mm-1-make-regexp (pattern)helm-mm-1-make-regexp82,3028
(defvar helm-mm-exact-pattern-str nil)helm-mm-exact-pattern-str91,3212
(defvar helm-mm-exact-pattern-real nil)helm-mm-exact-pattern-real92,3251
(defun helm-mm-exact-get-pattern (pattern)helm-mm-exact-get-pattern94,3292
(defun helm-mm-exact-search (pattern &rest _ignore)helm-mm-exact-search109,3771
(defvar helm-mm-prefix-pattern-str nil)helm-mm-prefix-pattern-str118,3954
(defvar helm-mm-prefix-pattern-real nil)helm-mm-prefix-pattern-real119,3994
(defun helm-mm-prefix-get-pattern (pattern)helm-mm-prefix-get-pattern121,4036
(defun helm-mm-prefix-match (str &optional pattern)helm-mm-prefix-match127,4272
(defun helm-mm-prefix-search (pattern &rest _ignore)helm-mm-prefix-search136,4657
(defvar helm-mm-1-pattern-str nil)helm-mm-1-pattern-str144,4856
(defvar helm-mm-1-pattern-real nil)helm-mm-1-pattern-real145,4891
(defun helm-mm-1-get-pattern (pattern)helm-mm-1-get-pattern147,4928
(defun helm-mm-1-search (pattern &rest _ignore)helm-mm-1-search157,5292
(defvar helm-mm-2-pattern-str nil)helm-mm-2-pattern-str165,5485
(defvar helm-mm-2-pattern-real nil)helm-mm-2-pattern-real166,5520
(defun helm-mm-2-get-pattern (pattern)helm-mm-2-get-pattern168,5557
(defun helm-mm-2-search (pattern &rest _ignore)helm-mm-2-search178,5923
(defvar helm-mm-3-pattern-str nil)helm-mm-3-pattern-str186,6099
(defvar helm-mm-3-pattern-list nil)helm-mm-3-pattern-list187,6134
(defun helm-mm-3-get-patterns (pattern)helm-mm-3-get-patterns189,6171
(defun helm-mm-3-get-patterns-internal (pattern)helm-mm-3-get-patterns-internal199,6603
(defun helm-mm-3-search-base (pattern searchfn1 searchfn2)helm-mm-3-search-base229,8081
(defun helm-mm-3-search (pattern &rest _ignore)helm-mm-3-search256,9422
(defvar helm-mm--previous-migemo-info nilhelm-mm--previous-migemo-info265,9654
(define-minor-mode helm-migemo-modehelm-migemo-mode272,9911
(defun helm-mm-migemo-get-pattern (pattern)helm-mm-migemo-get-pattern282,10241
(defun helm-mm-migemo-search-pattern-get (pattern)helm-mm-migemo-search-pattern-get287,10430
(defun helm-mm-migemo-string-match (pattern str)helm-mm-migemo-string-match292,10633
(defun helm-mm-migemo-forward (word &optional bound noerror count)helm-mm-migemo-forward306,11282
(defun helm-mm-3-migemo-search (pattern &rest _ignore)helm-mm-3-migemo-search317,11802
(defun helm-mm-3p-match (str &optional pattern)helm-mm-3p-match326,12045
(defun helm-mm-3p-search (pattern &rest _ignore)helm-mm-3p-search337,12581
(defun helm-mm-search (pattern &rest _ignore)helm-mm-search355,13155

.cask/24.5.1/elpa/helm-20160623.2215/helm-net.el,4473
(defgroup helm-net nilhelm-net28,922
(defcustom helm-google-suggest-default-browser-function nilhelm-google-suggest-default-browser-function32,1015
(defcustom helm-home-url "http://www.google.fr"helm-home-url39,1275
(defcustom helm-surfraw-default-browser-function nilhelm-surfraw-default-browser-function44,1396
(defcustom helm-google-suggest-urlhelm-google-suggest-url50,1599
(defcustom helm-google-suggest-search-urlhelm-google-suggest-search-url56,1775
(defcustom helm-net-prefer-curl nilhelm-net-prefer-curl62,1945
(defvaralias 'helm-google-suggest-use-curl-p 'helm-net-prefer-curl)helm-google-suggest-use-curl-p68,2126
(defcustom helm-surfraw-duckduckgo-urlhelm-surfraw-duckduckgo-url71,2282
(defcustom helm-wikipedia-suggest-urlhelm-wikipedia-suggest-url80,2588
(defcustom helm-search-suggest-action-wikipedia-urlhelm-search-suggest-action-wikipedia-url86,2779
(defcustom helm-wikipedia-summary-urlhelm-wikipedia-summary-url93,3005
(defcustom helm-wikipedia-follow-delay 2helm-wikipedia-follow-delay99,3223
(defcustom helm-search-suggest-action-youtube-urlhelm-search-suggest-action-youtube-url104,3343
(defcustom helm-search-suggest-action-imdb-urlhelm-search-suggest-action-imdb-url111,3562
(defcustom helm-search-suggest-action-google-maps-urlhelm-search-suggest-action-google-maps-url118,3759
(defcustom helm-search-suggest-action-google-news-urlhelm-search-suggest-action-google-news-url125,3982
(defcustom helm-google-suggest-actionshelm-google-suggest-actions132,4234
(defcustom helm-browse-url-firefox-new-window "-new-tab"helm-browse-url-firefox-new-window158,5459
(defun helm-search-suggest-perform-additional-action (url query)helm-search-suggest-perform-additional-action172,5824
(defun helm-net--url-retrieve-sync (request parser)helm-net--url-retrieve-sync176,5998
(defun helm-google-suggest-parser ()helm-google-suggest-parser188,6299
(defun helm-google-suggest-fetch (input)helm-google-suggest-fetch197,6614
(defun helm-google-suggest-set-candidates (&optional request-prefix)helm-google-suggest-set-candidates204,6886
(defun helm-ggs-set-number-result (num)helm-ggs-set-number-result220,7602
(defun helm-google-suggest-action (candidate)helm-google-suggest-action235,8104
(defvar helm-google-suggest-default-functionhelm-google-suggest-default-function243,8432
(defvar helm-source-google-suggesthelm-source-google-suggest247,8569
(defun helm-google-suggest-emacs-lisp ()helm-google-suggest-emacs-lisp256,8845
(defun helm-wikipedia-suggest-fetch ()helm-wikipedia-suggest-fetch264,9085
(defun helm-wikipedia--parse-buffer ()helm-wikipedia--parse-buffer272,9395
(defvar helm-wikipedia--summary-cache (make-hash-table :test 'equal))helm-wikipedia--summary-cache284,9946
(defun helm-wikipedia-persistent-action (candidate)helm-wikipedia-persistent-action285,10016
(defun helm-wikipedia-fetch-summary (input)helm-wikipedia-fetch-summary315,11305
(defun helm-wikipedia--parse-summary ()helm-wikipedia--parse-summary321,11539
(defvar helm-source-wikipedia-suggesthelm-source-wikipedia-suggest354,12961
(defvar helm-browse-url-chromium-program "chromium-browser")helm-browse-url-chromium-program376,13711
(defvar helm-browse-url-uzbl-program "uzbl-browser")helm-browse-url-uzbl-program377,13772
(defvar helm-browse-url-conkeror-program "conkeror")helm-browse-url-conkeror-program378,13825
(defvar helm-browse-url-default-browser-alisthelm-browse-url-default-browser-alist379,13878
(defun helm-browse-url-firefox (url &optional _ignore)helm-browse-url-firefox408,15193
(defun helm-browse-url-chromium (url &optional _ignore)helm-browse-url-chromium423,15794
(defun helm-browse-url-uzbl (url &optional _ignore)helm-browse-url-uzbl429,15985
(defun helm-browse-url-conkeror (url &optional _ignore)helm-browse-url-conkeror434,16161
(defun helm-browse-url-default-browser (url &rest args)helm-browse-url-default-browser439,16344
(defun helm-browse-url (url &rest args)helm-browse-url448,16752
(defvar helm-surfraw-engines-history nil)helm-surfraw-engines-history461,17042
(defvar helm-surfraw-input-history nil)helm-surfraw-input-history462,17084
(defvar helm-surfraw--elvi-cache nil)helm-surfraw--elvi-cache463,17124
(defun helm-build-elvi-list ()helm-build-elvi-list465,17163
(defun helm-surfraw (pattern engine)helm-surfraw474,17503
(defun helm-google-suggest ()helm-google-suggest505,19023
(defun helm-wikipedia-suggest ()helm-wikipedia-suggest511,19216

.cask/24.5.1/elpa/helm-20160623.2215/helm-org.el,2216
(defgroup helm-org nilhelm-org26,955
(defcustom helm-org-headings-fontify nilhelm-org-headings-fontify30,1031
(defcustom helm-org-format-outline-path nilhelm-org-format-outline-path37,1258
(defcustom helm-org-show-filename nilhelm-org-show-filename42,1372
(defcustom helm-org-headings-min-depth 1helm-org-headings-min-depth48,1581
(defcustom helm-org-headings-max-depth 8helm-org-headings-max-depth53,1709
(defcustom helm-org-headings-actionshelm-org-headings-actions58,1839
(defcustom helm-org-truncate-lines thelm-org-truncate-lines68,2305
(defvar org-capture-templates)org-capture-templates76,2455
(defun helm-source-org-capture-templates ()helm-source-org-capture-templates77,2486
(defun helm-org-goto-marker (marker)helm-org-goto-marker87,2874
(defun helm-org--open-heading-in-indirect-buffer (marker)helm-org--open-heading-in-indirect-buffer94,3074
(defun helm-org--run-open-heading-in-indirect-buffer ()helm-org--run-open-heading-in-indirect-buffer103,3471
(defvar helm-org-headings-maphelm-org-headings-map110,3765
(defclass helm-org-headings-class (helm-source-sync)helm-org-headings-class119,4153
(defmethod helm--setup-source :after ((source helm-org-headings-class))helm--setup-source134,4601
(defun helm-source-org-headings-for-files (filenames &optional parents)helm-source-org-headings-for-files141,4933
(defun helm-org-get-candidates (filenames &optional parents)helm-org-get-candidates146,5115
(defun helm-org--get-candidates-in-file (filename &optional fontify nofname parents)helm-org--get-candidates-in-file156,5482
(defun helm-org-insert-link-to-heading-at-marker (marker)helm-org-insert-link-to-heading-at-marker212,8528
(defun helm-org-heading-refile (marker)helm-org-heading-refile221,8954
(defun helm-org-agenda-files-headings ()helm-org-agenda-files-headings234,9424
(defun helm-org-in-buffer-headings ()helm-org-in-buffer-headings243,9743
(defun helm-org-parent-headings ()helm-org-parent-headings254,10132
(defun helm-org-capture-templates ()helm-org-capture-templates268,10669
(defvar crm-separator)crm-separator281,11114
(defun helm-org-completing-read-tags (prompt collection pred req initialhelm-org-completing-read-tags284,11153

.cask/24.5.1/elpa/helm-20160623.2215/helm-pkg.el,105
(define-package "helm" "20160623.2215" "Helm is an Emacs incremental and narrowing framework""helm"1,0

.cask/24.5.1/elpa/helm-20160623.2215/helm-plugin.el,505
(defun helm-make-info-source (source file)helm-make-info-source28,887
(defun helm-compile-source--info-index (source)helm-compile-source--info-index38,1196
(defun helm-compile-source--candidates-file (source)helm-compile-source--candidates-file56,1692
(defun helm-p-candidates-file-init ()helm-p-candidates-file-init68,2205
(defun helm-compile-source--persistent-help (source)helm-compile-source--persistent-help98,3118
(defun helm-persistent-help-string ()helm-persistent-help-string104,3373

.cask/24.5.1/elpa/helm-20160623.2215/helm-regexp.el,3894
(defgroup helm-regexp nilhelm-regexp29,1000
(defcustom helm-moccur-always-search-in-current nilhelm-moccur-always-search-in-current33,1099
(defcustom helm-moccur-use-ioccur-style-keys thelm-moccur-use-ioccur-style-keys38,1260
(defcustom helm-moccur-auto-update-on-resume nilhelm-moccur-auto-update-on-resume43,1418
(defcustom helm-source-multi-occur-actionshelm-source-multi-occur-actions56,2102
(defcustom helm-moccur-truncate-lines thelm-moccur-truncate-lines64,2425
(defface helm-moccur-bufferhelm-moccur-buffer70,2575
(defface helm-resume-need-updatehelm-resume-need-update75,2729
(defvar helm-moccur-maphelm-moccur-map81,2878
(defvar helm-build-regexp-history nil)helm-build-regexp-history98,3627
(defvar helm-occur-history nil)helm-occur-history99,3666
(defun helm-query-replace-regexp (_candidate)helm-query-replace-regexp101,3699
(defun helm-kill-regexp-as-sexp (_candidate)helm-kill-regexp-as-sexp109,4043
(defun helm-kill-regexp (_candidate)helm-kill-regexp114,4196
(defun helm-query-replace-args (regexp)helm-query-replace-args118,4315
(defvar helm-source-regexphelm-source-regexp132,4884
(defun helm-regexp-get-line (s e)helm-regexp-get-line151,5643
(defun helm-regexp-persistent-action (pt)helm-regexp-persistent-action163,6101
(defun helm-regexp-kill-new (input)helm-regexp-kill-new167,6199
(defvar helm-source-occur nil)helm-source-occur175,6305
(defun helm-occur-init-source ()helm-occur-init-source176,6336
(defvar helm-multi-occur-buffer-list nil)helm-multi-occur-buffer-list187,6528
(defvar helm-multi-occur-buffer-tick nil)helm-multi-occur-buffer-tick188,6570
(defun helm-moccur-init ()helm-moccur-init189,6612
(defun helm-moccur--next-or-previous-char ()helm-moccur--next-or-previous-char202,7083
(defun helm-moccur-get-line (beg end)helm-moccur-get-line207,7229
(defun helm-moccur-persistent-action (candidate)helm-moccur-persistent-action260,9684
(defun helm-moccur-goto-line (candidate)helm-moccur-goto-line264,9803
(defun helm-moccur-goto-line-ow (candidate)helm-moccur-goto-line-ow270,10064
(defun helm-moccur-goto-line-of (candidate)helm-moccur-goto-line-of278,10353
(defun helm-moccur-run-goto-line-ow ()helm-moccur-run-goto-line-ow286,10635
(defun helm-moccur-run-goto-line-of ()helm-moccur-run-goto-line-of293,10889
(defun helm-moccur-run-default-action ()helm-moccur-run-default-action300,11140
(defvar helm-source-moccur nil)helm-source-moccur306,11330
(defclass helm-source-multi-occur (helm-source-in-buffer)helm-source-multi-occur307,11362
(defun helm-moccur-resume-fn ()helm-moccur-resume-fn326,12143
(defun helm-moccur-filter-one-by-one (candidate)helm-moccur-filter-one-by-one372,15101
(defun helm-multi-occur-1 (buffers &optional input)helm-multi-occur-1391,15793
(defun helm-moccur-run-save-buffer ()helm-moccur-run-save-buffer415,16819
(defvar helm-moccur-mode-maphelm-moccur-mode-map426,17090
(defun helm-moccur-mode-goto-line ()helm-moccur-mode-goto-line440,17849
(defun helm-moccur-mode-goto-line-ow ()helm-moccur-mode-goto-line-ow445,17992
(defun helm-moccur-mode-goto-line-ow-forward-1 (arg)helm-moccur-mode-goto-line-ow-forward-1450,18141
(defun helm-moccur-mode-goto-line-ow-forward ()helm-moccur-mode-goto-line-ow-forward459,18370
(defun helm-moccur-mode-goto-line-ow-backward ()helm-moccur-mode-goto-line-ow-backward463,18482
(defun helm-moccur-save-results (_candidate)helm-moccur-save-results467,18596
(define-derived-mode helm-moccur-modehelm-moccur-mode495,19774
(defun helm-moccur-mode--revert-buffer-function (&optional _ignore-auto _noconfirm)helm-moccur-mode--revert-buffer-function507,20218
(defun helm-regexp ()helm-regexp555,22070
(defun helm-occur ()helm-occur570,22642
(defun helm-occur-from-isearch ()helm-occur-from-isearch590,23470
(defun helm-multi-occur-from-isearch (&optional _arg)helm-multi-occur-from-isearch612,24265

.cask/24.5.1/elpa/helm-20160623.2215/helm-ring.el,1982
(defgroup helm-ring nilhelm-ring29,1025
(defcustom helm-kill-ring-threshold 3helm-kill-ring-threshold33,1120
(defcustom helm-kill-ring-max-lines-number 5helm-kill-ring-max-lines-number38,1272
(defcustom helm-register-max-offset 160helm-register-max-offset45,1565
(defcustom helm-kill-ring-actionshelm-kill-ring-actions50,1704
(defvar helm-kill-ring-maphelm-kill-ring-map64,2128
(defvar helm-source-kill-ringhelm-source-kill-ring72,2379
(defun helm-kill-ring-candidates ()helm-kill-ring-candidates85,2864
(defun helm-kill-ring-transformer (candidates _source)helm-kill-ring-transformer91,3119
(defun helm-kill-ring-action (str)helm-kill-ring-action112,4068
(defun helm-mark-ring-line-string-at-pos (pos)helm-mark-ring-line-string-at-pos152,5851
(defun helm-mark-ring-get-candidates ()helm-mark-ring-get-candidates162,6139
(defvar helm-source-mark-ringhelm-source-mark-ring175,6771
(defvar helm-source-global-mark-ringhelm-source-global-mark-ring187,7252
(defun helm-global-mark-ring-format-buffer (marker)helm-global-mark-ring-format-buffer202,7994
(defun helm-global-mark-ring-get-candidates ()helm-global-mark-ring-get-candidates214,8492
(defun helm--push-mark (&optional location nomsg activate)helm--push-mark226,8979
(defadvice push-mark (around helm-push-mark-mode)push-mark252,10364
(define-minor-mode helm-push-mark-modehelm-push-mark-mode256,10475
(defvar helm-source-registerhelm-source-register272,11015
(defun helm-register-candidates ()helm-register-candidates287,11642
(defun helm-register-action-transformer (actions register-and-functions)helm-register-action-transformer354,14502
(defun helm-mark-ring ()helm-mark-ring387,15959
(defun helm-global-mark-ring ()helm-global-mark-ring395,16168
(defun helm-all-mark-rings ()helm-all-mark-rings403,16405
(defun helm-register ()helm-register413,16711
(defun helm-show-kill-ring ()helm-show-kill-ring421,16914
(defun helm-execute-kmacro ()helm-execute-kmacro434,17304

.cask/24.5.1/elpa/helm-20160623.2215/helm-semantic.el,983
(defgroup helm-semantic nilhelm-semantic32,1071
(defcustom helm-semantic-lynx-style-map thelm-semantic-lynx-style-map36,1179
(defcustom helm-semantic-display-stylehelm-semantic-display-style41,1307
(defvar helm-semantic-maphelm-semantic-map62,2169
(defvar helm-semantic--tags-cache nil)helm-semantic--tags-cache71,2486
(defun helm-semantic--fetch-candidates (tags depth &optional class)helm-semantic--fetch-candidates73,2526
(defun helm-semantic-default-action (_candidate &optional persistent)helm-semantic-default-action112,4075
(defun helm-semantic--maybe-set-needs-update ()helm-semantic--maybe-set-needs-update125,4637
(defvar helm-source-semantic nil)helm-source-semantic130,4809
(defclass helm-semantic-source (helm-source-in-buffer)helm-semantic-source132,4844
(defcustom helm-semantic-fuzzy-match nilhelm-semantic-fuzzy-match148,5738
(defun helm-semantic (arg)helm-semantic159,6105
(defun helm-semantic-or-imenu (arg)helm-semantic-or-imenu179,6945

.cask/24.5.1/elpa/helm-20160623.2215/helm-sys.el,2673
(defgroup helm-sys nilhelm-sys26,895
(defface helm-top-columnshelm-top-columns30,968
(defcustom helm-top-commandhelm-top-command36,1094
(defcustom helm-top-poll-delay 1.5helm-top-poll-delay52,1845
(defcustom helm-top-poll-delay-post-command 1.0helm-top-poll-delay-post-command58,2065
(defcustom helm-top-poll-preselection 'linumhelm-top-poll-preselection65,2273
(defvar helm-top-sort-fn nil)helm-top-sort-fn76,2652
(defvar helm-top-maphelm-top-map77,2682
(defvar helm-top-after-init-hook nilhelm-top-after-init-hook86,3032
(defvar helm-top--poll-timer nil)helm-top--poll-timer89,3100
(defun helm-top-poll (&optional no-update delay)helm-top-poll91,3135
(defun helm-top--poll-delay ()helm-top--poll-delay118,4259
(defun helm-top-poll-no-update ()helm-top-poll-no-update121,4324
(defun helm-top-initialize-poll-hooks ()helm-top-initialize-poll-hooks125,4462
(define-minor-mode helm-top-poll-modehelm-top-poll-mode138,5014
(defvar helm-source-tophelm-source-top149,5479
(defvar helm-top--line nil)helm-top--line172,6441
(defun helm-top-transformer (candidates _source)helm-top-transformer173,6469
(defun helm-top--skip-top-line ()helm-top--skip-top-line185,6989
(defun helm-top-action-transformer (actions _candidate)helm-top-action-transformer193,7295
(defun helm-top-sh (sig pid)helm-top-sh215,8531
(defun helm-top-sh-persistent-action (pid)helm-top-sh-persistent-action220,8741
(defun helm-top-init ()helm-top-init225,8860
(defun helm-top-display-to-real (line)helm-top-display-to-real234,9189
(defun helm-top-set-mode-line (str)helm-top-set-mode-line240,9310
(defun helm-top-sort-transformer (candidates source)helm-top-sort-transformer245,9577
(defun helm-top-sort-by-com (s1 s2)helm-top-sort-by-com258,10036
(defun helm-top-sort-by-mem (s1 s2)helm-top-sort-by-mem265,10244
(defun helm-top-sort-by-user (s1 s2)helm-top-sort-by-user272,10482
(defun helm-top-run-sort-by-com ()helm-top-run-sort-by-com279,10693
(defun helm-top-run-sort-by-cpu ()helm-top-run-sort-by-cpu287,10962
(defun helm-top-run-sort-by-mem ()helm-top-run-sort-by-mem295,11213
(defun helm-top-run-sort-by-user ()helm-top-run-sort-by-user303,11482
(defun helm-xrandr-info ()helm-xrandr-info317,11832
(defun helm-xrandr-screen ()helm-xrandr-screen331,12357
(defun helm-xrandr-output ()helm-xrandr-output335,12451
(defvar helm-source-xrandr-change-resolutionhelm-source-xrandr-change-resolution339,12545
(defvar helm-source-emacs-processhelm-source-emacs-process365,13403
(defun helm-top ()helm-top378,13922
(defun helm-list-emacs-process ()helm-list-emacs-process392,14420
(defun helm-xrandr-set ()helm-xrandr-set398,14597

.cask/24.5.1/elpa/helm-20160623.2215/helm-tags.el,1860
(defgroup helm-tags nilhelm-tags27,898
(defcustom helm-etags-tag-file-name "TAGS"helm-etags-tag-file-name31,993
(defcustom helm-etags-tag-file-search-limit 10helm-etags-tag-file-search-limit36,1100
(defcustom helm-etags-match-part-only 'taghelm-etags-match-part-only42,1291
(defcustom helm-etags-execute-action-at-once-if-one thelm-etags-execute-action-at-once-if-one53,1723
(defgroup helm-tags-faces nilhelm-tags-faces60,1894
(defface helm-etags-filehelm-etags-file66,2034
(defun helm-etags-run-switch-other-window ()helm-etags-run-switch-other-window76,2215
(defun helm-etags-run-switch-other-frame ()helm-etags-run-switch-other-frame85,2537
(defvar helm-etags-maphelm-etags-map94,2855
(defvar helm-etags-mtime-alist nilhelm-etags-mtime-alist105,3321
(defvar helm-etags-cache (make-hash-table :test 'equal)helm-etags-cache107,3415
(defun helm-etags-get-tag-file (&optional directory)helm-etags-get-tag-file110,3535
(defun helm-etags-all-tag-files ()helm-etags-all-tag-files121,4018
(defun helm-etags-find-tag-file-directory (current-dir)helm-etags-find-tag-file-directory133,4514
(defun helm-etags-get-header-name (_x)helm-etags-get-header-name154,5486
(defun helm-etags-create-buffer (file)helm-etags-create-buffer160,5677
(defun helm-etags-init ()helm-etags-init188,7059
(defvar helm-source-etags-select nilhelm-source-etags-select210,8072
(defun helm-etags-build-source ()helm-etags-build-source213,8138
(defcustom helm-etags-fuzzy-match nilhelm-etags-fuzzy-match242,9549
(defvar find-tag-marker-ring)find-tag-marker-ring251,9805
(defun helm-etags-action-goto (switcher candidate)helm-etags-action-goto253,9836
(defun helm-etags-mtime (file)helm-etags-mtime273,10693
(defun helm-etags-file-modified-p (file)helm-etags-file-modified-p277,10812
(defun helm-etags-select (reinit)helm-etags-select286,11128

.cask/24.5.1/elpa/helm-20160623.2215/helm-types.el,2894
(defclass helm-type-file (helm-source) ()helm-type-file29,966
(defmethod helm-source-get-action-from-type ((object helm-type-file))helm-source-get-action-from-type32,1048
(defun helm-actions-from-type-file ()helm-actions-from-type-file35,1150
(defcustom helm-type-file-actionshelm-type-file-actions40,1319
(defmethod helm--setup-source :primary ((_source helm-type-file)))helm--setup-source71,3170
(defmethod helm--setup-source :before ((source helm-type-file))helm--setup-source73,3238
(defclass helm-type-bookmark (helm-source) ()helm-type-bookmark90,3979
(defcustom helm-type-bookmark-actionshelm-type-bookmark-actions93,4065
(defmethod helm-source-get-action-from-type ((object helm-type-bookmark))helm-source-get-action-from-type108,4668
(defmethod helm--setup-source :primary ((_source helm-type-bookmark)))helm--setup-source111,4774
(defmethod helm--setup-source :before ((source helm-type-bookmark))helm--setup-source113,4846
(defclass helm-type-buffer (helm-source) ()helm-type-buffer122,5242
(defcustom helm-type-buffer-actionshelm-type-buffer-actions125,5323
(defmethod helm-source-get-action-from-type ((object helm-type-buffer))helm-source-get-action-from-type160,6711
(defmethod helm--setup-source :primary ((_source helm-type-buffer)))helm--setup-source163,6815
(defmethod helm--setup-source :before ((source helm-type-buffer))helm--setup-source165,6885
(defclass helm-type-function (helm-source) ()helm-type-function175,7346
(defcustom helm-type-function-actionshelm-type-function-actions178,7436
(defmethod helm-source-get-action-from-type ((object helm-type-function))helm-source-get-action-from-type192,7971
(defun helm-actions-from-type-function ()helm-actions-from-type-function195,8077
(defmethod helm--setup-source :primary ((_source helm-type-function)))helm--setup-source200,8254
(defmethod helm--setup-source :before ((source helm-type-function))helm--setup-source202,8326
(defclass helm-type-command (helm-source) ()helm-type-command212,8722
(defun helm-actions-from-type-command ()helm-actions-from-type-command215,8810
(defcustom helm-type-command-actionshelm-type-command-actions220,8985
(defmethod helm--setup-source :primary ((_source helm-type-command)))helm--setup-source228,9272
(defmethod helm--setup-source :before ((source helm-type-command))helm--setup-source230,9343
(defclass helm-type-timers (helm-source) ()helm-type-timers236,9606
(defcustom helm-type-timers-actionshelm-type-timers-actions239,9692
(defmethod helm--setup-source :primary ((_source helm-type-timers)))helm--setup-source255,10462
(defmethod helm--setup-source :before ((source helm-type-timers))helm--setup-source257,10532
(defun helm-build-type-file ()helm-build-type-file265,10864
(defun helm-build-type-function ()helm-build-type-function268,10932
(defun helm-build-type-command ()helm-build-type-command271,11008

.cask/24.5.1/elpa/helm-20160623.2215/helm-utils.el,4118
(defvar winner-boring-buffers)winner-boring-buffers28,1051
(defgroup helm-utils nilhelm-utils31,1085
(defcustom helm-su-or-sudo "sudo"helm-su-or-sudo35,1160
(defcustom helm-default-kbsize 1024.0helm-default-kbsize40,1274
(defcustom helm-highlight-matches-around-point-max-lines 15helm-highlight-matches-around-point-max-lines51,1607
(defcustom helm-buffers-to-resize-on-pa nilhelm-buffers-to-resize-on-pa56,1777
(defcustom helm-resize-on-pa-text-height 12helm-resize-on-pa-text-height61,1968
(defcustom helm-sources-using-help-echo-popup '("Moccur" "Imenu in all buffers"helm-sources-using-help-echo-popup66,2120
(defcustom helm-html-decode-entities-function #'helm-html-decode-entities-stringhelm-html-decode-entities-function72,2405
(defvar helm-goto-line-before-hook '(helm-save-current-pos-to-mark-ring)helm-goto-line-before-hook83,2862
(defvar helm-save-pos-before-jump-register ?_helm-save-pos-before-jump-register94,3451
(defconst helm-html-entities-alisthelm-html-entities-alist97,3577
(defface helm-selection-linehelm-selection-line204,6700
(defface helm-match-itemhelm-match-item209,6882
(defadvice cua-delete-region (around helm-avoid-cua activate)cua-delete-region216,7040
(defadvice copy-region-as-kill (around helm-avoid-cua activate)copy-region-as-kill219,7131
(defun helm-switch-to-buffers (buffer-or-name &optional other-window)helm-switch-to-buffers228,7285
(defun helm-switch-to-buffers-other-window (buffer-or-name)helm-switch-to-buffers-other-window251,8245
(defun helm-goto-char (loc)helm-goto-char266,8824
(defun helm-goto-line (lineno &optional noanim)helm-goto-line275,9123
(defun helm-save-pos-to-register-before-jump ()helm-save-pos-to-register-before-jump284,9467
(defun helm-save-current-pos-to-mark-ring ()helm-save-current-pos-to-mark-ring291,9772
(defun helm-show-all-in-this-source-only (arg)helm-show-all-in-this-source-only299,10060
(defun helm-display-all-sources ()helm-display-all-sources311,10603
(defun helm-displaying-source-names ()helm-displaying-source-names318,10827
(defun helm-handle-winner-boring-buffers ()helm-handle-winner-boring-buffers328,11231
(defun helm-quit-and-find-file ()helm-quit-and-find-file336,11615
(defun helm-generic-sort-fn (s1 s2)helm-generic-sort-fn403,14466
(defun helm-ff-get-host-from-tramp-invalid-fname (fname)helm-ff-get-host-from-tramp-invalid-fname435,16063
(defun helm-split-mode-file-attributes (str &optional string)helm-split-mode-file-attributes547,21688
(defmacro with-helm-display-marked-candidates (buffer-or-name candidates &rest body)with-helm-display-marked-candidates565,22396
(defvar helm-match-line-overlay nil)helm-match-line-overlay591,23423
(defvar helm--match-item-overlays nil)helm--match-item-overlays592,23460
(defun helm-highlight-current-line (&optional start end buf face pulse)helm-highlight-current-line594,23500
(defun helm-match-line-cleanup ()helm-match-line-cleanup642,25857
(defun helm-match-line-update ()helm-match-line-update649,26098
(defun helm-persistent-autoresize-hook ()helm-persistent-autoresize-hook654,26245
(defvar helm--show-help-echo-timer nil)helm--show-help-echo-timer666,26789
(defun helm-cancel-help-echo-timer ()helm-cancel-help-echo-timer668,26830
(defun helm-show-help-echo ()helm-show-help-echo673,26994
(define-minor-mode helm-popup-tip-modehelm-popup-tip-mode692,27767
(defun helm-open-file-with-default-tool (file)helm-open-file-with-default-tool705,28370
(defun helm-open-dired (file)helm-open-dired719,28972
(defun helm-require-or-error (feature function)helm-require-or-error727,29212
(defun helm-find-file-as-root (candidate)helm-find-file-as-root731,29347
(defun helm-find-many-files (_ignore)helm-find-many-files748,30002
(defun helm-read-repeat-string (prompt &optional count)helm-read-repeat-string752,30134
(defun helm-html-bookmarks-to-alist (file url-regexp bmk-regexp)helm-html-bookmarks-to-alist763,30560
(defun helm-html-entity-to-string (entity)helm-html-entity-to-string780,31282
(defun helm-html-decode-entities-string (str)helm-html-decode-entities-string789,31620

.cask/24.5.1/elpa/helm-core-20160621.2144/helm-core-autoloads.el,0

.cask/24.5.1/elpa/helm-core-20160621.2144/helm-core-pkg.el,89
(define-package "helm-core" "20160621.2144" "Development files for Helm""helm-core"1,0

.cask/24.5.1/elpa/helm-core-20160621.2144/helm-lib.el,5380
(defcustom helm-file-globstar thelm-file-globstar32,1047
(defcustom helm-yank-text-at-point-function nilhelm-yank-text-at-point-function39,1271
(defcustom helm-scroll-amount nilhelm-scroll-amount48,1666
(defcustom helm-help-full-frame thelm-help-full-frame57,1937
(defvar helm-yank-point nil)helm-yank-point69,2255
(defvar helm-pattern ""helm-pattern70,2284
(defvar helm-buffer "*helm*"helm-buffer72,2363
(defvar helm-current-buffer nilhelm-current-buffer74,2425
(defvar helm-suspend-update-flag nil)helm-suspend-update-flag76,2501
(defvar helm-action-buffer "*helm action*"helm-action-buffer77,2539
(defun helm-add-face-text-properties (beg end face &optional append object)helm-add-face-text-properties83,2635
(defmacro helm-with-gensyms (symbols &rest body)helm-with-gensyms94,3146
(defun helm-iter-list (seq)helm-iter-list109,3745
(defun helm-iter-next (iterator)helm-iter-next117,3922
(defun helm-make-actions (&rest args)helm-make-actions121,4011
(defmacro helm-aif (test-form then-form &rest else-forms)helm-aif137,4503
(defmacro helm-awhile (sexp &rest body)helm-awhile145,4831
(defmacro helm-acond (&rest clauses)helm-acond160,5320
(defun helm-current-line-contents ()helm-current-line-contents170,5625
(defsubst helm--mapconcat-pattern (pattern)helm--mapconcat-pattern176,5805
(defsubst helm--collect-pairs-in-string (string)helm--collect-pairs-in-string197,6606
(defun helm-help-internal (bufname insert-content-fn)helm-help-internal204,6811
(defun helm-help-scroll-up (amount)helm-help-scroll-up224,7578
(defun helm-help-scroll-down (amount)helm-help-scroll-down230,7727
(defun helm-help-next-line ()helm-help-next-line236,7880
(defun helm-help-previous-line ()helm-help-previous-line242,8029
(defun helm-help-toggle-mark ()helm-help-toggle-mark248,8186
(defun helm-help-event-loop ()helm-help-event-loop255,8429
(defun helm-flatten-list (seq &optional omit-nulls)helm-flatten-list286,9682
(defun helm-mklist (obj)helm-mklist304,10407
(defun helm-skip-entries (seq black-regexp-list &optional white-regexp-list)helm-skip-entries336,11601
(defun helm-boring-directory-p (directory black-list)helm-boring-directory-p348,12192
(defun helm-shadow-entries (seq regexp-list)helm-shadow-entries359,12650
(defun helm-remove-if-not-match (regexp seq)helm-remove-if-not-match369,13044
(defun helm-remove-if-match (regexp seq)helm-remove-if-match380,13431
(defun helm-transform-mapcar (function args)helm-transform-mapcar391,13810
(defun helm-stringify (elm)helm-stringify409,14354
(defun helm-substring (str width)helm-substring417,14581
(defun helm-substring-by-width (str width &optional endstr)helm-substring-by-width426,14857
(defun helm-string-multibyte-p (str)helm-string-multibyte-p437,15340
(defun helm-get-pid-from-process-name (process-name)helm-get-pid-from-process-name442,15500
(defun helm-ff-find-printers ()helm-ff-find-printers450,15841
(defun helm-region-active-p ()helm-region-active-p461,16281
(defun helm-quote-whitespace (candidate)helm-quote-whitespace464,16374
(defun helm-symbolify (str-or-sym)helm-symbolify471,16546
(defun helm-symbol-name (obj)helm-symbol-name477,16682
(defun helm-describe-function (func)helm-describe-function483,16839
(defun helm-describe-variable (var)helm-describe-variable488,16968
(defun helm-describe-face (face)helm-describe-face493,17094
(defun helm-find-function (func)helm-find-function498,17214
(defun helm-find-variable (var)helm-find-variable502,17319
(defun helm-find-face-definition (face)helm-find-face-definition506,17421
(defun helm-kill-new (candidate &optional replace)helm-kill-new510,17540
(defun helm-same-major-mode-p (start-buffer alist)helm-same-major-mode-p518,17728
(defun helm-file-name-sans-extension (filename)helm-file-name-sans-extension559,19579
(defun helm-basename (fname &optional ext)helm-basename567,19931
(defun helm-basedir (fname)helm-basedir583,20691
(defun helm-current-directory ()helm-current-directory590,20942
(defun helm-w32-prepare-filename (file)helm-w32-prepare-filename598,21192
(defun helm-w32-shell-execute-open-file (file)helm-w32-shell-execute-open-file606,21473
(defvar helm-walk-ignore-directorieshelm-walk-ignore-directories611,21649
(defsubst helm--dir-file-name (file dir)helm--dir-file-name615,21795
(defsubst helm--dir-name-p (str)helm--dir-name-p619,21904
(defun helm-file-expand-wildcards (pattern &optional full)helm-file-expand-wildcards672,24508
(defun helm-set-pattern (pattern &optional noupdate)helm-set-pattern693,25419
(defun helm-minibuffer-completion-contents ()helm-minibuffer-completion-contents702,25756
(defmacro with-helm-buffer (&rest body)with-helm-buffer707,25964
(defmacro with-helm-current-buffer (&rest body)with-helm-current-buffer713,26130
(defun helm-buffer-get ()helm-buffer-get722,26500
(defun helm-window ()helm-window728,26663
(defun helm-action-window ()helm-action-window732,26758
(defmacro with-helm-window (&rest body)with-helm-window736,26875
(defun helm-yank-text-at-point ()helm-yank-text-at-point746,27081
(defun helm-reset-yank-point ()helm-reset-yank-point764,27784
(defvar helm--ansi-color-regexphelm--ansi-color-regexp773,27978
(defvar helm--ansi-color-drop-regexphelm--ansi-color-drop-regexp775,28041
(defun helm--ansi-color-apply (string)helm--ansi-color-apply777,28145

.cask/24.5.1/elpa/helm-core-20160621.2144/helm-multi-match.el,3043
(defgroup helm-multi-match nilhelm-multi-match30,1043
(defcustom helm-mm-matching-method 'multi3helm-mm-matching-method34,1113
(defconst helm-mm-default-match-functionshelm-mm-default-match-functions57,2186
(defconst helm-mm-default-search-functionshelm-mm-default-search-functions59,2268
(defvar helm-mm-space-regexp "[\\ ] "helm-mm-space-regexp66,2380
(defun helm-mm-split-pattern (pattern)helm-mm-split-pattern69,2483
(defun helm-mm-1-make-regexp (pattern)helm-mm-1-make-regexp82,3028
(defvar helm-mm-exact-pattern-str nil)helm-mm-exact-pattern-str91,3212
(defvar helm-mm-exact-pattern-real nil)helm-mm-exact-pattern-real92,3251
(defun helm-mm-exact-get-pattern (pattern)helm-mm-exact-get-pattern94,3292
(defun helm-mm-exact-search (pattern &rest _ignore)helm-mm-exact-search109,3771
(defvar helm-mm-prefix-pattern-str nil)helm-mm-prefix-pattern-str118,3954
(defvar helm-mm-prefix-pattern-real nil)helm-mm-prefix-pattern-real119,3994
(defun helm-mm-prefix-get-pattern (pattern)helm-mm-prefix-get-pattern121,4036
(defun helm-mm-prefix-match (str &optional pattern)helm-mm-prefix-match127,4272
(defun helm-mm-prefix-search (pattern &rest _ignore)helm-mm-prefix-search136,4657
(defvar helm-mm-1-pattern-str nil)helm-mm-1-pattern-str144,4856
(defvar helm-mm-1-pattern-real nil)helm-mm-1-pattern-real145,4891
(defun helm-mm-1-get-pattern (pattern)helm-mm-1-get-pattern147,4928
(defun helm-mm-1-search (pattern &rest _ignore)helm-mm-1-search157,5292
(defvar helm-mm-2-pattern-str nil)helm-mm-2-pattern-str165,5485
(defvar helm-mm-2-pattern-real nil)helm-mm-2-pattern-real166,5520
(defun helm-mm-2-get-pattern (pattern)helm-mm-2-get-pattern168,5557
(defun helm-mm-2-search (pattern &rest _ignore)helm-mm-2-search178,5923
(defvar helm-mm-3-pattern-str nil)helm-mm-3-pattern-str186,6099
(defvar helm-mm-3-pattern-list nil)helm-mm-3-pattern-list187,6134
(defun helm-mm-3-get-patterns (pattern)helm-mm-3-get-patterns189,6171
(defun helm-mm-3-get-patterns-internal (pattern)helm-mm-3-get-patterns-internal199,6603
(defun helm-mm-3-search-base (pattern searchfn1 searchfn2)helm-mm-3-search-base229,8081
(defun helm-mm-3-search (pattern &rest _ignore)helm-mm-3-search256,9422
(defvar helm-mm--previous-migemo-info nilhelm-mm--previous-migemo-info265,9654
(define-minor-mode helm-migemo-modehelm-migemo-mode272,9911
(defun helm-mm-migemo-get-pattern (pattern)helm-mm-migemo-get-pattern282,10241
(defun helm-mm-migemo-search-pattern-get (pattern)helm-mm-migemo-search-pattern-get287,10430
(defun helm-mm-migemo-string-match (pattern str)helm-mm-migemo-string-match292,10633
(defun helm-mm-migemo-forward (word &optional bound noerror count)helm-mm-migemo-forward306,11282
(defun helm-mm-3-migemo-search (pattern &rest _ignore)helm-mm-3-migemo-search317,11802
(defun helm-mm-3p-match (str &optional pattern)helm-mm-3p-match326,12045
(defun helm-mm-3p-search (pattern &rest _ignore)helm-mm-3p-search337,12581
(defun helm-mm-search (pattern &rest _ignore)helm-mm-search355,13155

.cask/24.5.1/elpa/helm-core-20160621.2144/helm-source.el,2578
(defvar helm-fuzzy-sort-fn)helm-fuzzy-sort-fn35,1294
(defvar helm-fuzzy-match-fn)helm-fuzzy-match-fn36,1322
(defvar helm-fuzzy-search-fn)helm-fuzzy-search-fn37,1351
(defgeneric helm--setup-source (source)helm--setup-source44,1553
(defgeneric helm-setup-user-source (source)helm-setup-user-source47,1667
(defclass helm-source ()helm-source54,1809
(defclass helm-source-sync (helm-source)helm-source-sync542,18573
(defclass helm-source-async (helm-source)helm-source-async585,20236
(defclass helm-source-in-buffer (helm-source)helm-source-in-buffer608,21068
(defclass helm-source-dummy (helm-source)helm-source-dummy697,24416
(defclass helm-source-in-file (helm-source-in-buffer)helm-source-in-file721,24860
(defun helm-default-init-source-in-buffer-function ()helm-default-init-source-in-buffer-function738,25361
(defun helm--create-source (object)helm--create-source746,25593
(defun helm-make-source (name class &rest args)helm-make-source754,25904
(defun helm-make-type (class &rest args)helm-make-type767,26473
(defvar helm-mm-default-search-functions)helm-mm-default-search-functions773,26676
(defvar helm-mm-default-match-functions)helm-mm-default-match-functions774,26718
(defun helm-source-mm-get-search-or-match-fns (source method)helm-source-mm-get-search-or-match-fns776,26760
(defun helm-source--persistent-help-string (string source)helm-source--persistent-help-string833,29570
(defun helm-source--header-line (source)helm-source--header-line839,29825
(defmethod helm--setup-source :primary ((_source helm-source)))helm--setup-source869,31207
(defmethod helm--setup-source :before ((source helm-source))helm--setup-source871,31272
(defmethod helm-setup-user-source ((_source helm-source)))helm-setup-user-source897,32663
(defmethod helm--setup-source ((source helm-source-sync))helm--setup-source899,32723
(defmethod helm--setup-source ((source helm-source-in-buffer))helm--setup-source916,33519
(defmethod helm--setup-source ((source helm-source-async))helm--setup-source952,35107
(defmethod helm--setup-source ((source helm-source-dummy))helm--setup-source958,35420
(defmacro helm-build-sync-source (name &rest args)helm-build-sync-source974,36043
(defmacro helm-build-async-source (name &rest args)helm-build-async-source980,36279
(defmacro helm-build-in-buffer-source (name &rest args)helm-build-in-buffer-source986,36519
(defmacro helm-build-dummy-source (name &rest args)helm-build-dummy-source992,36794
(defmacro helm-build-in-file-source (name file &rest args)helm-build-in-file-source998,37042

.cask/24.5.1/elpa/helm-core-20160621.2144/helm.el,32470
(defun helm-define-multi-key (keymap key functions &optional delay)helm-define-multi-key42,1465
(defmacro helm-multi-key-defun (name docstring funs &optional delay)helm-multi-key-defun64,2258
(defun helm-make-multi-command (functions &optional delay)helm-make-multi-command73,2685
(defun helm-run-multi-key-command (functions iterator delay)helm-run-multi-key-command83,3118
(defun helm-define-key-with-subkeys (map key subkey commandhelm-define-key-with-subkeys108,4280
(defvar helm-maphelm-map168,6501
(defgroup helm nilhelm270,12091
(defcustom helm-completion-window-scroll-margin 5helm-completion-window-scroll-margin274,12165
(defcustom helm-display-source-at-screen-top thelm-display-source-at-screen-top282,12410
(defcustom helm-candidate-number-limit 100helm-candidate-number-limit289,12681
(defcustom helm-input-idle-delay 0.01helm-input-idle-delay301,13151
(defcustom helm-exit-idle-delay 0helm-exit-idle-delay306,13274
(defcustom helm-full-frame nilhelm-full-frame313,13495
(defvaralias 'helm-samewindow 'helm-full-frame)helm-samewindow319,13651
(defcustom helm-candidate-separatorhelm-candidate-separator322,13769
(defcustom helm-save-configuration-functionshelm-save-configuration-functions328,13911
(defcustom helm-persistent-action-use-special-display nilhelm-persistent-action-use-special-display343,14519
(defcustom helm-display-function 'helm-default-display-bufferhelm-display-function348,14682
(defcustom helm-case-fold-search 'smarthelm-case-fold-search355,14898
(defcustom helm-file-name-case-fold-searchhelm-file-name-case-fold-search373,15535
(defcustom helm-reuse-last-window-split-state nilhelm-reuse-last-window-split-state384,15830
(defcustom helm-split-window-preferred-function 'helm-split-window-default-fnhelm-split-window-preferred-function392,16149
(defcustom helm-split-window-default-side 'belowhelm-split-window-default-side397,16310
(defcustom helm-display-buffer-default-size nilhelm-display-buffer-default-size418,17105
(defcustom helm-split-window-in-side-p nilhelm-split-window-in-side-p426,17435
(defcustom helm-always-two-windows nilhelm-always-two-windows437,17759
(defcustom helm-sources-using-default-as-input '(helm-source-imenuhelm-sources-using-default-as-input453,18279
(defcustom helm-delete-minibuffer-contents-from-point thelm-delete-minibuffer-contents-from-point466,18987
(defcustom helm-follow-mode-persistent nilhelm-follow-mode-persistent473,19257
(defcustom helm-prevent-escaping-from-minibuffer thelm-prevent-escaping-from-minibuffer480,19527
(defcustom helm-move-to-line-cycle-in-source nilhelm-move-to-line-cycle-in-source485,19672
(defcustom helm-fuzzy-match-fn 'helm-fuzzy-matchhelm-fuzzy-match-fn491,19887
(defcustom helm-fuzzy-search-fn 'helm-fuzzy-searchhelm-fuzzy-search-fn496,20044
(defcustom helm-fuzzy-sort-fn 'helm-fuzzy-matching-default-sort-fnhelm-fuzzy-sort-fn501,20208
(defcustom helm-fuzzy-matching-highlight-fn 'helm-fuzzy-default-highlight-matchhelm-fuzzy-matching-highlight-fn507,20400
(defcustom helm-autoresize-max-height 40helm-autoresize-max-height513,20595
(defcustom helm-autoresize-min-height 10helm-autoresize-min-height520,20798
(defcustom helm-input-method-verbose-flag nilhelm-input-method-verbose-flag528,21035
(defcustom helm-display-header-line thelm-display-header-line541,21741
(defcustom helm-inherit-input-method thelm-inherit-input-method546,21851
(defcustom helm-echo-input-in-header-line nilhelm-echo-input-in-header-line553,22077
(defcustom helm-tramp-connection-min-time-diff 5helm-tramp-connection-min-time-diff558,22196
(defcustom helm-debug-root-directory nilhelm-debug-root-directory571,22808
(defgroup helm-faces nilhelm-faces585,23179
(defface helm-source-headerhelm-source-header591,23293
(defface helm-visible-markhelm-visible-mark603,23657
(defface helm-headerhelm-header615,24029
(defface helm-candidate-numberhelm-candidate-number620,24151
(defface helm-selectionhelm-selection625,24384
(defface helm-separatorhelm-separator633,24656
(defface helm-actionhelm-action639,24838
(defface helm-prefarghelm-prefarg644,24959
(defface helm-matchhelm-match650,25142
(defface helm-header-line-left-marginhelm-header-line-left-margin656,25318
(defvar helm-type-attributes nilhelm-type-attributes665,25514
(defvar helm-source-filter nilhelm-source-filter675,25931
(defvar helm-selection-overlay nilhelm-selection-overlay681,26123
(defvar helm-async-processes nilhelm-async-processes684,26219
(defvar helm-before-initialize-hook nilhelm-before-initialize-hook687,26324
(defvar helm-after-initialize-hook nilhelm-after-initialize-hook694,26612
(defvar helm-update-hook nilhelm-update-hook699,26813
(defvar helm-after-update-hook nilhelm-after-update-hook705,27021
(defvar helm-cleanup-hook nilhelm-cleanup-hook711,27279
(defvar helm-select-action-hook nilhelm-select-action-hook718,27476
(defvar helm-before-action-hook nilhelm-before-action-hook721,27555
(defvar helm-after-action-hook nilhelm-after-action-hook726,27742
(defvar helm-exit-minibuffer-hook nilhelm-exit-minibuffer-hook729,27812
(defvar helm-after-persistent-action-hook nilhelm-after-persistent-action-hook736,28075
(defvar helm-move-selection-before-hook nilhelm-move-selection-before-hook739,28167
(defvar helm-move-selection-after-hook nilhelm-move-selection-after-hook742,28264
(defvar helm-after-preselection-hook nilhelm-after-preselection-hook745,28359
(defvar helm-window-configuration-hook nilhelm-window-configuration-hook748,28449
(defconst helm-restored-variableshelm-restored-variables751,28549
(defvar helm-execute-action-at-once-if-one nilhelm-execute-action-at-once-if-one758,28722
(defvar helm-quit-if-no-candidate nilhelm-quit-if-no-candidate763,28929
(defvar helm-debug-variables nilhelm-debug-variables767,29057
(defvar helm-debug-buffer "*Debug Helm Log*")helm-debug-buffer772,29233
(defvar helm-debug nilhelm-debug774,29280
(defvar helm-compile-source-functionshelm-compile-source-functions779,29474
(defvar helm-mode-line-string "\helm-mode-line-string785,29685
(defvar helm-minibuffer-set-up-hook nilhelm-minibuffer-set-up-hook797,30121
(defvar helm-help-messagehelm-help-message810,30562
(defvar helm-autoresize-mode) ;; Undefined in `helm-default-display-buffer'.helm-autoresize-mode907,35215
(defvar helm-current-prefix-arg nilhelm-current-prefix-arg913,35324
(defvar helm-saved-action nilhelm-saved-action915,35418
(defvar helm-saved-current-source nilhelm-saved-current-source917,35506
(defvar helm-compiled-sources nilhelm-compiled-sources919,35608
(defvar helm-in-persistent-action nilhelm-in-persistent-action921,35683
(defvar helm-last-buffer nilhelm-last-buffer923,35768
(defvar helm-saved-selection nilhelm-saved-selection925,35846
(defvar helm-sources nilhelm-sources927,35954
(defvar helm-buffer-file-name nilhelm-buffer-file-name929,36036
(defvar helm-candidate-cache (make-hash-table :test 'equal)helm-candidate-cache931,36127
(defvar helm-input ""helm-input933,36255
(defvar helm-input-local nilhelm-input-local935,36323
(defvar helm-source-name nil)helm-source-name937,36434
(defvar helm-current-source nil)helm-current-source938,36464
(defvar helm-candidate-buffer-alist nil)helm-candidate-buffer-alist939,36497
(defvar helm-tick-hash (make-hash-table :test 'equal))helm-tick-hash940,36538
(defvar helm-issued-errors nil)helm-issued-errors941,36593
(defvar helm--last-log-file nilhelm--last-log-file942,36625
(defvar helm-follow-mode nil)helm-follow-mode944,36713
(defvar helm--local-variables nil)helm--local-variables945,36743
(defvar helm-split-window-state nil)helm-split-window-state946,36778
(defvar helm--window-side-state nil)helm--window-side-state947,36815
(defvar helm-selection-point nil)helm-selection-point948,36852
(defvar helm-alive-p nil)helm-alive-p949,36886
(defvar helm-visible-mark-overlays nil)helm-visible-mark-overlays950,36912
(defvar helm-update-blacklist-regexps '("^" "^ *" "$" "!" " " "\\b"helm-update-blacklist-regexps951,36952
(defvar helm-force-updating-p nil)helm-force-updating-p953,37093
(defvar helm-exit-status 0helm-exit-status954,37128
(defvar helm-minibuffer-confirm-state nil)helm-minibuffer-confirm-state961,37456
(defvar helm-quit nil)helm-quit962,37499
(defvar helm-attributes nil "List of all `helm' attributes.")helm-attributes963,37522
(defvar helm-buffers nilhelm-buffers964,37584
(defvar helm-current-position nilhelm-current-position966,37666
(defvar helm-last-frame-or-window-configuration nilhelm-last-frame-or-window-configuration970,37842
(defvar helm-onewindow-p nil)helm-onewindow-p972,37958
(defvar helm-types nil)helm-types973,37988
(defvar helm--mode-line-string-real nil) ; The string to display in mode-line.helm--mode-line-string-real974,38012
(defvar helm-persistent-action-display-window nil)helm-persistent-action-display-window975,38091
(defvar helm-marked-candidates nilhelm-marked-candidates976,38142
(defvar helm--mode-line-display-prefarg nil)helm--mode-line-display-prefarg978,38234
(defvar helm--temp-follow-flag nilhelm--temp-follow-flag979,38279
(defvar helm--reading-passwd-or-string nil)helm--reading-passwd-or-string981,38390
(defvar helm--in-update nil)helm--in-update982,38434
(defvar helm--in-fuzzy nil)helm--in-fuzzy983,38463
(defvar helm--maybe-use-default-as-input nilhelm--maybe-use-default-as-input984,38491
(defvar helm--temp-hooks nilhelm--temp-hooks990,38760
(defvar helm-truncate-lines nilhelm-truncate-lines992,38848
(defvar helm--prompt nil)helm--prompt994,38948
(defvar helm--file-completion-sourceshelm--file-completion-sources995,38974
(defvar helm--url-regexp "\\(news\\(post\\)?:\\|mailto:\\|file:\\|\\(ftp\\|https?\\|telnet\\|gopher\\|www\\|wais\\)://\\)")helm--url-regexp1003,39398
(defvar helm--ignore-errors nilhelm--ignore-errors1004,39522
(defun helm-log (format-string &rest args)helm-log1010,39730
(defun helm-log-run-hook (hook)helm-log-run-hook1031,40641
(defun helm-log-get-current-function ()helm-log-get-current-function1038,40946
(defun helm-log-error (&rest args)helm-log-error1049,41443
(defun helm-log-save-maybe ()helm-log-save-maybe1058,41816
(defun helm-debug-open-last-log ()helm-debug-open-last-log1079,42779
(defun helm-print-error-messages ()helm-print-error-messages1089,43106
(defun helm-this-command ()helm-this-command1098,43359
(defmacro with-helm-time-after-update (&rest body)with-helm-time-after-update1124,44283
(defmacro with-helm-restore-variables (&rest body)with-helm-restore-variables1141,44876
(defmacro with-helm-default-directory (directory &rest body)with-helm-default-directory1153,45385
(defun helm-default-directory ()helm-default-directory1160,45669
(defmacro with-helm-temp-hook (hook &rest body)with-helm-temp-hook1164,45839
(defmacro with-helm-after-update-hook (&rest body)with-helm-after-update-hook1177,46304
(defmacro with-helm-alive-p (&rest body)with-helm-alive-p1182,46488
(defun helm-attr (attribute-name &optional source compute)helm-attr1190,46732
(defun helm-get-attribute-from-source-type (attribute source)helm-get-attribute-from-source-type1231,48572
(defun helm-get-attribute-from-type (attribute type)helm-get-attribute-from-type1238,48815
(defun helm-get-actions-from-type (source)helm-get-actions-from-type1243,49015
(defun helm-inherit-attribute-from-source (attribute source)helm-inherit-attribute-from-source1248,49198
(defun helm-append-at-nth (seq elm index)helm-append-at-nth1254,49399
(defun helm-add-action-to-source (name fn source &optional index)helm-add-action-to-source1267,49815
(defun helm-delete-action-from-source (action-or-name source)helm-delete-action-from-source1286,50710
(defun helm-set-source-filter (sources)helm-set-source-filter1339,53511
(defun helm--normalize-filter-sources (sources)helm--normalize-filter-sources1376,54860
(defun helm-set-sources (sources &optional no-init no-update)helm-set-sources1383,55105
(defun helm-get-sources ()helm-get-sources1395,55636
(defun helm-get-selection (&optional buffer force-display-part)helm-get-selection1418,56212
(defun helm-get-actions-from-current-source ()helm-get-actions-from-current-source1451,57926
(defun helm-get-current-source ()helm-get-current-source1474,58994
(defun helm-buffer-is-modified (buffer)helm-buffer-is-modified1496,59996
(defun helm-current-buffer-is-modified ()helm-current-buffer-is-modified1508,60506
(defun helm-run-after-exit (function &rest args)helm-run-after-exit1512,60671
(defun helm-exit-and-execute-action (action)helm-exit-and-execute-action1528,61279
(defalias 'helm-run-after-quit 'helm-run-after-exit)helm-run-after-quit1540,61747
(defalias 'helm-quit-and-execute-action 'helm-exit-and-execute-action)helm-quit-and-execute-action1542,61866
(defun helm-interpret-value (value &optional source compute)helm-interpret-value1545,62022
(defun helm-set-local-variable (&rest args)helm-set-local-variable1565,62911
(defun helm-empty-source-p ()helm-empty-source-p1595,63998
(defun helm-funcall-with-source (source functions &rest args)helm-funcall-with-source1613,64535
(defun helm-funcall-foreach (sym &optional sources)helm-funcall-foreach1636,65659
(defun helm-normalize-sources (sources)helm-normalize-sources1643,65956
(defun helm-get-candidate-number (&optional in-current-source)helm-get-candidate-number1651,66232
(defmacro with-helm-quittable (&rest body)with-helm-quittable1684,67814
(defconst helm-argument-keyshelm-argument-keys1699,68319
(defun helm (&rest plist)helm1704,68451
(defun helm-alive-p ()helm-alive-p1834,73112
(defun helm-parse-keys (keys)helm-parse-keys1844,73468
(defun helm-internal (&optionalhelm-internal1868,74479
(defun helm-resume (arg)helm-resume1960,78670
(defun helm-resume-previous-session-after-quit (arg)helm-resume-previous-session-after-quit2000,80376
(defun helm-resume-list-buffers-after-quit ()helm-resume-list-buffers-after-quit2009,80777
(defun helm-resume-p (any-resume)helm-resume-p2018,81135
(defun helm-resume-select-buffer ()helm-resume-select-buffer2022,81243
(defun helm-other-buffer (any-sources any-buffer)helm-other-buffer2034,81651
(defun helm-nest (&rest same-as-helm)helm-nest2039,81868
(defun helm-current-position (save-or-restore)helm-current-position2095,84480
(defun helm-frame-or-window-configuration (save-or-restore)helm-frame-or-window-configuration2117,85510
(defun helm-split-window-default-fn (window)helm-split-window-default-fn2139,86744
(defun helm-window-in-direction (direction)helm-window-in-direction2169,88235
(defun helm-display-buffer (buffer)helm-display-buffer2178,88471
(defun helm-default-display-buffer (buffer)helm-default-display-buffer2208,89729
(defun helm-initialize (any-resume any-input any-default any-sources)helm-initialize2234,90955
(defun helm-initialize-overlays (buffer)helm-initialize-overlays2269,92473
(defun helm-restore-position-on-quit ()helm-restore-position-on-quit2283,93032
(defun helm--recent-push (elm sym)helm--recent-push2287,93170
(defun helm--current-buffer ()helm--current-buffer2294,93396
(defun helm--run-init-hooks (hook)helm--run-init-hooks2313,94403
(defun helm-initial-setup (any-default)helm-initial-setup2327,94994
(define-derived-mode helm-major-modehelm-major-mode2377,97164
(defun helm-create-helm-buffer ()helm-create-helm-buffer2384,97415
(define-minor-mode helm--minor-modehelm--minor-mode2417,99006
(defun helm--reset-default-pattern ()helm--reset-default-pattern2428,99347
(defun helm-read-pattern-maybe (any-prompt any-inputhelm-read-pattern-maybe2432,99458
(defun helm-toggle-suspend-update ()helm-toggle-suspend-update2537,105218
(defadvice tramp-read-passwd (around disable-helm-update)tramp-read-passwd2550,105724
(defun helm--advice-tramp-read-passwd (old--fn &rest args)helm--advice-tramp-read-passwd2564,106216
(defun helm--advice-ange-ftp-get-passwd (old--fn &rest args)helm--advice-ange-ftp-get-passwd2576,106669
(defadvice ange-ftp-get-passwd (around disable-helm-update)ange-ftp-get-passwd2586,107042
(defun helm--maybe-update-keymap (&optional map)helm--maybe-update-keymap2596,107402
(defvar helm--remap-mouse-mode-maphelm--remap-mouse-mode-map2618,108426
(define-minor-mode helm--remap-mouse-modehelm--remap-mouse-mode2628,108895
(defun helm-cleanup ()helm-cleanup2642,109312
(defun helm-clean-up-minibuffer ()helm-clean-up-minibuffer2676,110698
(defun helm-check-minibuffer-input ()helm-check-minibuffer-input2689,111073
(defun helm-check-new-input (input)helm-check-new-input2696,111327
(defun helm--reset-update-flag ()helm--reset-update-flag2707,111707
(defun helm-compile-sources (sources funcs)helm-compile-sources2718,111933
(defun helm-get-candidates (source)helm-get-candidates2735,112455
(defmacro helm-while-no-input (&rest body)helm-while-no-input2783,114921
(defun helm-get-cached-candidates (source)helm-get-cached-candidates2792,115226
(defun helm-process-candidate-transformer (candidates source)helm-process-candidate-transformer2816,116255
(defun helm-process-filtered-candidate-transformer (candidates source)helm-process-filtered-candidate-transformer2822,116520
(defmacro helm--maybe-process-filter-one-by-one-candidate (candidate source)helm--maybe-process-filter-one-by-one-candidate2828,116819
(defun helm--initialize-one-by-one-candidates (candidates source)helm--initialize-one-by-one-candidates2839,117326
(defun helm-process-filtered-candidate-transformer-maybehelm-process-filtered-candidate-transformer-maybe2848,117754
(defun helm-process-real-to-display (candidates source)helm-process-real-to-display2858,118202
(defun helm-transform-candidates (candidates source &optional process-p)helm-transform-candidates2871,118816
(defun helm-candidate-number-limit (source)helm-candidate-number-limit2887,119473
(defun helm-candidate-get-display (candidate)helm-candidate-get-display2898,119904
(defun helm-process-pattern-transformer (pattern source)helm-process-pattern-transformer2909,120258
(defun helm-default-match-function (candidate)helm-default-match-function2915,120513
(defvar helm--fuzzy-regexp-cache (make-hash-table :test 'eq))helm--fuzzy-regexp-cache2924,120740
(defun helm--fuzzy-match-maybe-set-pattern ()helm--fuzzy-match-maybe-set-pattern2925,120802
(defun helm-fuzzy-match (candidate)helm-fuzzy-match2951,121991
(defun helm-fuzzy-search (pattern)helm-fuzzy-search2962,122511
(defun helm-score-candidate-for-pattern (candidate pattern)helm-score-candidate-for-pattern2996,124222
(defun helm-fuzzy-matching-default-sort-fn (candidates _source &optional use-real)helm-fuzzy-matching-default-sort-fn3019,125430
(defun helm--maybe-get-migemo-pattern (pattern)helm--maybe-get-migemo-pattern3061,127492
(defun helm-fuzzy-default-highlight-match (candidate)helm-fuzzy-default-highlight-match3066,127651
(defun helm-fuzzy-highlight-matches (candidates _source)helm-fuzzy-highlight-matches3128,130850
(defun helm-match-functions (source)helm-match-functions3134,131123
(defun helm-search-functions (source)helm-search-functions3141,131421
(defun helm-take-first-elements (seq n)helm-take-first-elements3146,131610
(defun helm-set-case-fold-search-1 (pattern)helm-set-case-fold-search-13169,132582
(defun helm-match-from-candidates (cands matchfns match-part-fn limit source)helm-match-from-candidates3175,132797
(defun helm-compute-matches (source)helm-compute-matches3221,135365
(defun helm--candidates-in-buffer-p (matchfns)helm--candidates-in-buffer-p3248,136637
(defun helm-render-source (source matches)helm-render-source3251,136717
(defmacro helm--maybe-use-while-no-input (&rest body)helm--maybe-use-while-no-input3271,137455
(defun helm--collect-matches (src-list)helm--collect-matches3281,137879
(defun helm-update (&optional preselect source)helm-update3290,138147
(defun helm-update-source-p (source)helm-update-source-p3337,140283
(defun helm-update-move-first-line (&optional without-hook)helm-update-move-first-line3356,141173
(defun helm-force-update (&optional preselect)helm-force-update3363,141401
(defun helm-refresh ()helm-refresh3384,142172
(defun helm-force-update--reinit (source)helm-force-update--reinit3391,142342
(defun helm-remove-candidate-cache (source)helm-remove-candidate-cache3401,142715
(defun helm-insert-match (match insert-function &optional num)helm-insert-match3405,142870
(defun helm-insert-header-from-source (source)helm-insert-header-from-source3425,143814
(defun helm-insert-header (name &optional display-string)helm-insert-header3435,144196
(defun helm-insert-candidate-separator ()helm-insert-candidate-separator3453,144912
(defun helm-output-filter (process output-string)helm-output-filter3463,145230
(defun helm-output-filter-1 (process-assoc output-string)helm-output-filter-13468,145442
(defun helm-output-filter--process-source (process output-string source limit)helm-output-filter--process-source3484,146108
(defun helm-output-filter--collect-candidates (lines incomplete-line-info)helm-output-filter--collect-candidates3505,147149
(defun helm-output-filter--post-process ()helm-output-filter--post-process3531,148620
(defun helm-process-deferred-sentinel-hook (process event file)helm-process-deferred-sentinel-hook3541,149013
(defun helm-kill-async-processes ()helm-kill-async-processes3570,150517
(defun helm-kill-async-process (process)helm-kill-async-process3576,150777
(defun helm-execute-selection-action ()helm-execute-selection-action3584,150975
(defun helm-execute-selection-action-1 (&optionalhelm-execute-selection-action-13593,151339
(defun helm-coerce-selection (selection source)helm-coerce-selection3619,152510
(defun helm-get-default-action (action)helm-get-default-action3626,152767
(defun helm-select-action ()helm-select-action3632,152950
(defun helm-show-action-buffer (actions)helm-show-action-buffer3663,154535
(defun helm-display-source-at-screen-top-maybe (unit)helm-display-source-at-screen-top-maybe3696,155895
(defun helm-skip-noncandidate-line (direction)helm-skip-noncandidate-line3703,156233
(defun helm-skip-header-and-separator-line (direction)helm-skip-header-and-separator-line3712,156672
(defun helm-display-mode-line (source &optional force)helm-display-mode-line3725,157232
(defun helm--set-header-line (&optional update)helm--set-header-line3793,160895
(defun helm--update-header-line ()helm--update-header-line3819,162109
(defun helm-hide-minibuffer-maybe ()helm-hide-minibuffer-maybe3825,162303
(defun helm-show-candidate-number (&optional name)helm-show-candidate-number3836,162877
(defun helm-move--beginning-of-multiline-candidate ()helm-move--beginning-of-multiline-candidate3894,165502
(defun helm-move--previous-multi-line-fn ()helm-move--previous-multi-line-fn3904,165895
(defun helm-move--previous-line-fn ()helm-move--previous-line-fn3910,166099
(defun helm-move--next-multi-line-fn ()helm-move--next-multi-line-fn3925,166631
(defun helm-move--next-line-fn ()helm-move--next-line-fn3934,166982
(defun helm-move--previous-page-fn ()helm-move--previous-page-fn3946,167505
(defun helm-move--next-page-fn ()helm-move--next-page-fn3951,167638
(defun helm-move--beginning-of-buffer-fn ()helm-move--beginning-of-buffer-fn3956,167759
(defun helm-move--end-of-buffer-fn ()helm-move--end-of-buffer-fn3959,167831
(defun helm-move--end-of-source ()helm-move--end-of-source3962,167897
(defun helm-move--beginning-of-source ()helm-move--beginning-of-source3966,168044
(defun helm-move--previous-source-fn ()helm-move--previous-source-fn3970,168151
(defun helm-move--next-source-fn ()helm-move--next-source-fn3978,168373
(defun helm-move--goto-source-fn (source-or-name)helm-move--goto-source-fn3987,168744
(defun helm-candidate-number-at-point ()helm-candidate-number-at-point3996,169111
(defun helm--next-or-previous-line (direction &optional arg)helm--next-or-previous-line4002,169313
(defun helm-previous-line (&optional arg)helm-previous-line4018,170115
(defun helm-next-line (&optional arg)helm-next-line4026,170409
(defun helm-previous-page ()helm-previous-page4036,170758
(defun helm-next-page ()helm-next-page4043,170973
(defun helm-beginning-of-buffer ()helm-beginning-of-buffer4050,171179
(defun helm-end-of-buffer ()helm-end-of-buffer4057,171397
(defun helm-previous-source ()helm-previous-source4064,171602
(defun helm-next-source ()helm-next-source4071,171826
(defun helm-goto-source (source-or-name)helm-goto-source4078,172034
(defun helm--follow-action (arg)helm--follow-action4082,172202
(defun helm-follow-action-forward ()helm-follow-action-forward4092,172579
(defun helm-follow-action-backward ()helm-follow-action-backward4098,172778
(defun helm-mark-current-line (&optional resumep)helm-mark-current-line4104,172984
(defun helm-confirm-and-exit-minibuffer ()helm-confirm-and-exit-minibuffer4126,173845
(defun helm-confirm-and-exit-hook ()helm-confirm-and-exit-hook4173,176283
(defun helm-read-string (prompt &optional initial-input historyhelm-read-string4180,176568
(defun helm--updating-p ()helm--updating-p4187,176906
(defun helm-maybe-exit-minibuffer ()helm-maybe-exit-minibuffer4195,177211
(defun helm-exit-minibuffer ()helm-exit-minibuffer4205,177542
(defun helm-keyboard-quit ()helm-keyboard-quit4213,177821
(defun helm-get-next-header-pos ()helm-get-next-header-pos4224,178153
(defun helm-get-previous-header-pos ()helm-get-previous-header-pos4228,178298
(defun helm-pos-multiline-p ()helm-pos-multiline-p4232,178455
(defun helm-get-next-candidate-separator-pos ()helm-get-next-candidate-separator-pos4236,178614
(defun helm-get-previous-candidate-separator-pos ()helm-get-previous-candidate-separator-pos4250,179177
(defun helm-pos-header-line-p ()helm-pos-header-line-p4254,179373
(defun helm-pos-candidate-separator-p ()helm-pos-candidate-separator-p4259,179578
(defun helm-debug-output ()helm-debug-output4267,179765
(defun helm-debug-output-function (&optional vars)helm-debug-output-function4274,179990
(defun helm-debug-toggle ()helm-debug-toggle4287,180523
(defun helm-enable-or-switch-to-debug ()helm-enable-or-switch-to-debug4294,180753
(defun helm-kill-buffer-hook ()helm-kill-buffer-hook4308,181178
(defun helm-preselect (candidate-or-regexp &optional source)helm-preselect4317,181600
(defun helm-delete-current-selection ()helm-delete-current-selection4349,183190
(defun helm-end-of-source-p (&optional at-point)helm-end-of-source-p4373,184235
(defun helm-beginning-of-source-p (&optional at-point)helm-beginning-of-source-p4383,184607
(defun helm-edit-current-selection-internal (func)helm-edit-current-selection-internal4393,184996
(defmacro helm-edit-current-selection (&rest forms)helm-edit-current-selection4408,185564
(defun helm--delete-minibuffer-contents-from (from-str)helm--delete-minibuffer-contents-from4415,185821
(defun helm-delete-minibuffer-contents (&optional arg)helm-delete-minibuffer-contents4426,186249
(defun helm-compile-source--multi-match (source)helm-compile-source--multi-match4449,187204
(defun helm-compile-source--type (source)helm-compile-source--type4475,188551
(defun define-helm-type-attribute (type definition &optional doc)define-helm-type-attribute4480,188714
(defun helm-document-attribute (attribute short-doc &optional long-doc)helm-document-attribute4493,189209
(defun helm-add-type-attribute (type definition)helm-add-type-attribute4507,189771
(defun helm-document-type-attribute (type doc)helm-document-type-attribute4512,189988
(defun helm-dummy-candidate (_candidate _source)helm-dummy-candidate4518,190186
(defun helm-compile-source--dummy (source)helm-compile-source--dummy4523,190365
(defun helm-candidates-in-buffer (&optional source)helm-candidates-in-buffer4538,190870
(defun helm-candidates-in-buffer-search-default-fn (pattern)helm-candidates-in-buffer-search-default-fn4623,194096
(defun helm-candidates-in-buffer-1 (buffer pattern get-line-fnhelm-candidates-in-buffer-14629,194321
(defun helm-search-from-candidate-buffer (pattern get-line-fn search-fnshelm-search-from-candidate-buffer4647,195059
(defun helm-search-match-part (candidate pattern)helm-search-match-part4703,198200
(defun helm-initial-candidates-from-candidate-buffer (get-line-fn limit)helm-initial-candidates-from-candidate-buffer4727,199421
(defun helm--search-from-candidate-buffer-1 (search-fn)helm--search-from-candidate-buffer-14734,199735
(defun helm-candidate-buffer (&optional create-or-buffer)helm-candidate-buffer4753,200351
(defun helm-init-candidates-in-buffer (buffer data)helm-init-candidates-in-buffer4812,202801
(defun helm-compile-source--candidates-in-buffer (source)helm-compile-source--candidates-in-buffer4835,203757
(defun helm-toggle-resplit-window ()helm-toggle-resplit-window4848,204142
(defun helm-enlarge-window-1 (n)helm-enlarge-window-14886,206170
(defun helm-narrow-window ()helm-narrow-window4894,206446
(defun helm-enlarge-window ()helm-enlarge-window4901,206609
(defun helm-swap-windows ()helm-swap-windows4908,206774
(defun helm--get-window-side-state ()helm--get-window-side-state4951,208936
(defun helm-replace-buffer-in-window (window buffer1 buffer2)helm-replace-buffer-in-window4962,209417
(defun helm-select-nth-action (n)helm-select-nth-action4969,209704
(defun helm-get-nth-action (n action)helm-get-nth-action4982,210203
(defun helm-execute-selection-action-at-nth (linum)helm-execute-selection-action-at-nth4993,210542
(defmacro with-helm-display-same-window (&rest body)with-helm-display-same-window5003,210891
(defun helm-initialize-persistent-action ()helm-initialize-persistent-action5010,211196
(defun helm-persistent-action-display-window (&optional split-onewindow)helm-persistent-action-display-window5062,213729
(defun helm-select-persistent-action-window (&optional split-onewindow)helm-select-persistent-action-window5075,214449
(defun helm-persistent-action-display-buffer (buf &optional  action)helm-persistent-action-display-buffer5083,214836
(defun helm-other-window-base (command &optional scroll-amount)helm-other-window-base5122,217030
(defun helm-scroll-other-window ()helm-scroll-other-window5128,217301
(defun helm-scroll-other-window-down ()helm-scroll-other-window-down5134,217509
(defun helm-recenter-top-bottom-other-window ()helm-recenter-top-bottom-other-window5140,217731
(defun helm-reposition-window-other-window ()helm-reposition-window-other-window5146,217996
(defun helm-clear-visible-mark ()helm-clear-visible-mark5156,218287
(defun helm-this-visible-mark ()helm-this-visible-mark5161,218483
(defun helm-delete-visible-mark (overlay)helm-delete-visible-mark5166,218637
(defun helm-make-visible-mark ()helm-make-visible-mark5175,218938
(defun helm-toggle-visible-mark ()helm-toggle-visible-mark5190,219667
(defun helm-file-completion-source-p ()helm-file-completion-source-p5206,220265
(defun helm-mark-all ()helm-mark-all5213,220592
(defun helm-unmark-all ()helm-unmark-all5270,223654
(defun helm-toggle-all-marks ()helm-toggle-all-marks5282,224030
(defun helm--compute-marked (real source wildcard)helm--compute-marked5295,224498
(defun helm-current-source-name= (name)helm-current-source-name=5333,226296
(defun helm-revive-visible-mark ()helm-revive-visible-mark5338,226450
(defun helm-next-point-in-list (curpos points &optional prev)helm-next-point-in-list5369,227969
(defun helm-next-visible-mark (&optional prev)helm-next-visible-mark5389,228629
(defun helm-prev-visible-mark ()helm-prev-visible-mark5403,229088
(defun helm-yank-selection (arg)helm-yank-selection5412,229304
(defun helm-kill-selection-and-quit (arg)helm-kill-selection-and-quit5422,229654
(defun helm-copy-to-buffer ()helm-copy-to-buffer5439,230365
(defun helm-follow-mode (&optional arg)helm-follow-mode5458,230926
(defvar helm-follow-input-idle-delay nilhelm-follow-input-idle-delay5521,233874
(defun helm-follow-execute-persistent-action-maybe ()helm-follow-execute-persistent-action-maybe5525,234086
(defun helm--autoresize-hook (&optional max-height min-height)helm--autoresize-hook5543,234766
(define-minor-mode helm-autoresize-modehelm-autoresize-mode5553,235197
(defun helm-help ()helm-help5569,235869
(defun helm-toggle-truncate-line ()helm-toggle-truncate-line5587,236501

.cask/24.5.1/elpa/material-theme-20160516.844/material-light-theme.el,48
(deftheme material-lightmaterial-light45,1725

.cask/24.5.1/elpa/material-theme-20160516.844/material-theme-autoloads.el,0

.cask/24.5.1/elpa/material-theme-20160516.844/material-theme-pkg.el,129
(define-package "material-theme" "20160516.844" "A Theme based on the colors of the Google Material Design""material-theme"1,0

.cask/24.5.1/elpa/material-theme-20160516.844/material-theme.el,36
(deftheme materialmaterial45,1713

.cask/24.5.1/elpa/meta-presenter-20150501.410/meta-presenter-autoloads.el,0

.cask/24.5.1/elpa/meta-presenter-20150501.410/meta-presenter-pkg.el,205
(define-package "meta-presenter" "20150501.410" "A simple multi-file presentation tool for Emacs" 'nil :url "http://ismail.teamfluxion.com" :keywords '("productivity" "presentation"))"meta-presenter"1,0

.cask/24.5.1/elpa/meta-presenter-20150501.410/meta-presenter.el,2201
(defvar meta-presenter--current-directory)meta-presenter--current-directory71,2423
(defvar meta-presenter--slide-count)meta-presenter--slide-count73,2467
(defvar meta-presenter--current-slide-number)meta-presenter--current-slide-number75,2505
(defvar meta-presenter--progress-percentage)meta-presenter--progress-percentage77,2552
(defvar meta-presenter--index-file)meta-presenter--index-file79,2598
(defvar meta-presenter-enable-animationsmeta-presenter-enable-animations81,2635
(defun meta-presenter--increment (n)meta-presenter--increment84,2684
(defun meta-presenter--decrement (n)meta-presenter--decrement88,2756
(defun meta-presenter--identity (n)meta-presenter--identity93,2835
(defun meta-presenter-start-presentation ()meta-presenter-start-presentation98,2914
(defun meta-presenter-move-to-next-slide ()meta-presenter-move-to-next-slide118,3632
(defun meta-presenter-move-to-previous-slide ()meta-presenter-move-to-previous-slide126,3934
(defun meta-presenter-reload-current-slide ()meta-presenter-reload-current-slide134,4229
(defun meta-presenter--move-to-slide-at-delta (delta)meta-presenter--move-to-slide-at-delta139,4364
(defun meta-presenter--paste-progress (delta)meta-presenter--paste-progress160,5486
(defun meta-presenter--paste-slide-contents (slide-name)meta-presenter--paste-slide-contents174,5962
(defun meta-presenter--slide-down ()meta-presenter--slide-down178,6085
(defun meta-presenter--fill-in ()meta-presenter--fill-in188,6643
(defun meta-presenter--slide-up ()meta-presenter--slide-up196,7078
(defun meta-presenter--set-current-slide-number (n)meta-presenter--set-current-slide-number204,7459
(defun meta-presenter--get-next-slide-number ()meta-presenter--get-next-slide-number209,7606
(defun meta-presenter--get-previous-slide-number ()meta-presenter--get-previous-slide-number213,7754
(defun meta-presenter--get-next-slide-name ()meta-presenter--get-next-slide-name217,7910
(defun meta-presenter--get-slide-name (n)meta-presenter--get-slide-name223,8206
(defun meta-presenter--get-previous-slide-name ()meta-presenter--get-previous-slide-name229,8480
(define-minor-mode meta-presenter-modemeta-presenter-mode236,8803

.cask/24.5.1/elpa/multiple-cursors-20160616.1404/mc-cycle-cursors.el,736
(defun mc/next-fake-cursor-after-point ()mc/next-fake-cursor-after-point31,1015
(defun mc/prev-fake-cursor-before-point ()mc/prev-fake-cursor-before-point43,1370
(defcustom mc/cycle-looping-behaviour 'continuemc/cycle-looping-behaviour55,1726
(defun mc/handle-loop-condition (error-message)mc/handle-loop-condition63,2135
(defun mc/first-fake-cursor-after (point)mc/first-fake-cursor-after70,2337
(defun mc/last-fake-cursor-before (point)mc/last-fake-cursor-before79,2812
(defun mc/cycle-forward ()mc/cycle-forward97,3608
(defun mc/cycle-backward ()mc/cycle-backward103,3802
(define-key mc/keymap (kbd "C-v") 'mc/cycle-forward)mc/keymap109,3996
(define-key mc/keymap (kbd "M-v") 'mc/cycle-backward)mc/keymap110,4049

.cask/24.5.1/elpa/multiple-cursors-20160616.1404/mc-edit-lines.el,271
(defcustom mc/edit-lines-empty-lines nilmc/edit-lines-empty-lines32,1003
(defun mc/edit-lines (&optional arg)mc/edit-lines41,1405
(defun mc/edit-ends-of-lines ()mc/edit-ends-of-lines95,3469
(defun mc/edit-beginnings-of-lines ()mc/edit-beginnings-of-lines102,3669

.cask/24.5.1/elpa/multiple-cursors-20160616.1404/mc-hide-unmatched-lines-mode.el,1072
(defvar hum/hide-unmatched-lines-mode-map (make-sparse-keymap)hum/hide-unmatched-lines-mode-map35,1194
(define-key hum/hide-unmatched-lines-mode-map (kbd "C-g") 'hum/keyboard-quit)hum/hide-unmatched-lines-mode-map38,1323
(define-key hum/hide-unmatched-lines-mode-map (kbd "<return>") 'hum/keyboard-quit)hum/hide-unmatched-lines-mode-map39,1401
(defun hum/keyboard-quit ()hum/keyboard-quit41,1485
(defun hum/disable-hum-mode ()hum/disable-hum-mode47,1657
(define-minor-mode mc-hide-unmatched-lines-modemc-hide-unmatched-lines-mode51,1740
(defconst hum/invisible-overlay-name 'hum/invisible-overlay-name)hum/invisible-overlay-name68,2519
(defcustom hum/lines-to-expand 2hum/lines-to-expand70,2586
(defcustom hum/placeholder "..."hum/placeholder75,2717
(defun hum/add-invisible-overlay (begin end)hum/add-invisible-overlay80,2855
(defun hum/hide-unmatched-lines ()hum/hide-unmatched-lines93,3355
(defun hum/unhide-unmatched-lines ()hum/unhide-unmatched-lines103,3802
(define-key mc/keymap (kbd "C-'") 'mc-hide-unmatched-lines-mode)mc/keymap107,3938

.cask/24.5.1/elpa/multiple-cursors-20160616.1404/mc-mark-more.el,4494
(defun mc/cursor-end (cursor)mc/cursor-end33,1035
(defun mc/cursor-beg (cursor)mc/cursor-beg39,1218
(defun mc/furthest-region-end ()mc/furthest-region-end45,1401
(defun mc/first-region-start ()mc/first-region-start51,1560
(defun mc/furthest-cursor-before-point ()mc/furthest-cursor-before-point57,1718
(defun mc/furthest-cursor-after-point ()mc/furthest-cursor-after-point66,1991
(defun mc/fake-cursor-at-point (&optional point)mc/fake-cursor-at-point75,2263
(defun mc/region-strings ()mc/region-strings87,2662
(defvar mc/enclose-search-term nilmc/enclose-search-term95,2972
(defun mc/mark-more-like-this (skip-last direction)mc/mark-more-like-this104,3218
(defun mc/mark-next-like-this (arg)mc/mark-next-like-this137,4765
(defun mc/mark-next-like-this-word (arg)mc/mark-next-like-this-word154,5382
(defun mc/mark-next-like-this-symbol (arg)mc/mark-next-like-this-symbol171,6066
(defun mc/mark-next-word-like-this (arg)mc/mark-next-word-like-this190,6772
(defun mc/mark-next-symbol-like-this (arg)mc/mark-next-symbol-like-this201,7236
(defun mc/mark-previous-like-this (arg)mc/mark-previous-like-this212,7708
(defun mc/mark-previous-word-like-this (arg)mc/mark-previous-word-like-this229,8340
(defun mc/mark-previous-symbol-like-this (arg)mc/mark-previous-symbol-like-this240,8796
(defun mc/mark-lines (num-lines direction)mc/mark-lines250,9243
(defun mc/mark-next-lines (arg)mc/mark-next-lines266,9876
(defun mc/mark-previous-lines (arg)mc/mark-previous-lines272,10012
(defun mc/unmark-next-like-this ()mc/unmark-next-like-this278,10153
(defun mc/unmark-previous-like-this ()mc/unmark-previous-like-this284,10326
(defun mc/skip-to-next-like-this ()mc/skip-to-next-like-this290,10507
(defun mc/skip-to-previous-like-this ()mc/skip-to-previous-like-this296,10707
(defun mc/mark-all-like-this ()mc/mark-all-like-this302,10915
(defun mc--select-thing-at-point (thing)mc--select-thing-at-point324,11717
(defun mc--select-thing-at-point-or-bark (thing)mc--select-thing-at-point-or-bark331,11899
(defun mc/mark-all-words-like-this ()mc/mark-all-words-like-this336,12090
(defun mc/mark-all-symbols-like-this ()mc/mark-all-symbols-like-this343,12275
(defun mc/mark-all-in-region (beg end &optional search)mc/mark-all-in-region350,12466
(defun mc/mark-all-in-region-regexp (beg end)mc/mark-all-in-region-regexp372,13296
(defun mc/mark-more-like-this-extended ()mc/mark-more-like-this-extended440,16138
(defvar mc/mark-more-like-this-extended-direction nilmc/mark-more-like-this-extended-direction462,16828
(defun mc/mmlte--message ()mc/mmlte--message467,17042
(defun mc/mmlte--up ()mc/mmlte--up472,17320
(defun mc/mmlte--down ()mc/mmlte--down478,17471
(defun mc/mmlte--left ()mc/mmlte--left484,17622
(defun mc/mmlte--right ()mc/mmlte--right491,17816
(defvar mc/mark-more-like-this-extended-keymap (make-sparse-keymap))mc/mark-more-like-this-extended-keymap498,18009
(define-key mc/mark-more-like-this-extended-keymap (kbd "<up>") 'mc/mmlte--up)mc/mark-more-like-this-extended-keymap500,18079
(define-key mc/mark-more-like-this-extended-keymap (kbd "<down>") 'mc/mmlte--down)mc/mark-more-like-this-extended-keymap501,18158
(define-key mc/mark-more-like-this-extended-keymap (kbd "<left>") 'mc/mmlte--left)mc/mark-more-like-this-extended-keymap502,18241
(define-key mc/mark-more-like-this-extended-keymap (kbd "<right>") 'mc/mmlte--right)mc/mark-more-like-this-extended-keymap503,18324
(defvar mc--restrict-mark-all-to-symbols nil)mc--restrict-mark-all-to-symbols505,18410
(defun mc/mark-all-like-this-dwim (arg)mc/mark-all-like-this-dwim508,18472
(defun mc/mark-all-dwim (arg)mc/mark-all-dwim537,19576
(defun mc--in-defun ()mc--in-defun558,20342
(defun mc/mark-all-like-this-in-defun ()mc/mark-all-like-this-in-defun562,20418
(defun mc/mark-all-words-like-this-in-defun ()mc/mark-all-words-like-this-in-defun573,20674
(defun mc/mark-all-symbols-like-this-in-defun ()mc/mark-all-symbols-like-this-in-defun585,20998
(defun mc--mark-symbol-at-point ()mc--mark-symbol-at-point596,21317
(defun mc--get-nice-sgml-context ()mc--get-nice-sgml-context604,21537
(defun mc--on-tag-name-p ()mc--on-tag-name-p612,21727
(defun mc/toggle-cursor-on-click (event)mc/toggle-cursor-on-click622,22063
(defalias 'mc/add-cursor-on-click 'mc/toggle-cursor-on-click)mc/add-cursor-on-click645,22990
(defun mc/mark-sgml-tag-pair ()mc/mark-sgml-tag-pair648,23068
(defun mc--inside-tag-p ()mc--inside-tag-p670,23882

.cask/24.5.1/elpa/multiple-cursors-20160616.1404/mc-mark-pop.el,40
(defun mc/mark-pop ()mc/mark-pop6,107

.cask/24.5.1/elpa/multiple-cursors-20160616.1404/mc-separate-operations.el,1093
(defun mc/insert-numbers (arg)mc/insert-numbers33,1087
(defcustom mc/insert-numbers-default 0mc/insert-numbers-default42,1486
(defvar mc--insert-numbers-number 0)mc--insert-numbers-number48,1645
(defun mc--insert-number-and-increase ()mc--insert-number-and-increase50,1683
(defun mc--ordered-region-strings ()mc--ordered-region-strings55,1864
(defun mc/insert-letters (arg)mc/insert-letters65,2187
(defun mc--number-to-letters (number)mc--number-to-letters74,2585
(defvar mc--insert-letters-number 0)mc--insert-letters-number83,2805
(defun mc--insert-letter-and-increase ()mc--insert-letter-and-increase85,2843
(defvar mc--strings-to-replace nil)mc--strings-to-replace90,3029
(defun mc--replace-region-strings-1 ()mc--replace-region-strings-192,3066
(defun mc--replace-region-strings ()mc--replace-region-strings98,3291
(defun mc/reverse-regions ()mc/reverse-regions103,3453
(defun mc/sort-regions ()mc/sort-regions116,3847
(defun mc/vertical-align (character)mc/vertical-align125,4093
(defun mc/vertical-align-with-space ()mc/vertical-align-with-space148,4854

.cask/24.5.1/elpa/multiple-cursors-20160616.1404/multiple-cursors-autoloads.el,94
(defalias 'mc/add-cursor-on-click 'mc/toggle-cursor-on-click)mc/add-cursor-on-click232,7430

.cask/24.5.1/elpa/multiple-cursors-20160616.1404/multiple-cursors-core.el,5658
(defvar mc--read-char)mc--read-char31,1022
(defface mc/cursor-facemc/cursor-face33,1046
(defface mc/cursor-bar-facemc/cursor-bar-face38,1162
(defface mc/region-facemc/region-face43,1351
(defmacro mc/add-fake-cursor-to-undo-list (&rest forms)mc/add-fake-cursor-to-undo-list48,1464
(defun mc/all-fake-cursors (&optional start end)mc/all-fake-cursors59,2144
(defmacro mc/for-each-fake-cursor (&rest forms)mc/for-each-fake-cursor64,2347
(defmacro mc/save-excursion (&rest forms)mc/save-excursion69,2531
(defun mc--compare-by-overlay-start (o1 o2)mc--compare-by-overlay-start78,2924
(defmacro mc/for-each-cursor-ordered (&rest forms)mc/for-each-cursor-ordered81,3014
(defmacro mc/save-window-scroll (&rest forms)mc/save-window-scroll91,3522
(defun mc/cursor-is-bar ()mc/cursor-is-bar106,4027
(defun mc/make-cursor-overlay-at-eol (pos)mc/make-cursor-overlay-at-eol112,4212
(defun mc/make-cursor-overlay-inline (pos)mc/make-cursor-overlay-inline120,4569
(defun mc/make-cursor-overlay-at-point ()mc/make-cursor-overlay-at-point128,4897
(defun mc/make-region-overlay-between-point-and-mark ()mc/make-region-overlay-between-point-and-mark136,5189
(defvar mc/cursor-specific-vars '(transient-mark-modemc/cursor-specific-vars143,5465
(defun mc/store-current-state-in-overlay (o)mc/store-current-state-in-overlay154,5982
(defun mc/restore-state-from-overlay (o)mc/restore-state-from-overlay162,6322
(defun mc/remove-fake-cursor (o)mc/remove-fake-cursor169,6614
(defun mc/pop-state-from-overlay (o)mc/pop-state-from-overlay176,6857
(defun mc/delete-region-overlay (o)mc/delete-region-overlay181,7035
(defvar mc--current-cursor-id 0mc--current-cursor-id186,7212
(defun mc/create-cursor-id ()mc/create-cursor-id189,7331
(defvar mc--max-cursors-original nilmc--max-cursors-original193,7428
(defcustom mc/max-cursors nilmc/max-cursors200,7763
(defun mc/create-fake-cursor-at-point (&optional id)mc/create-fake-cursor-at-point213,8185
(defun mc/execute-command (cmd)mc/execute-command234,9190
(defvar mc--executing-command-for-fake-cursor nil)mc--executing-command-for-fake-cursor243,9517
(defun mc/execute-command-for-fake-cursor (cmd cursor)mc/execute-command-for-fake-cursor245,9569
(defun mc/execute-command-for-all-fake-cursors (cmd)mc/execute-command-for-all-fake-cursors256,9961
(defun mc/execute-command-for-all-cursors (cmd)mc/execute-command-for-all-cursors269,10431
(defvar mc--read-char nil)mc--read-char277,10715
(defvar multiple-cursors-mode nil)multiple-cursors-mode278,10742
(defadvice read-char (around mc-support activate)read-char279,10777
(defvar mc--read-quoted-char nil)mc--read-quoted-char286,10983
(defadvice read-quoted-char (around mc-support activate)read-quoted-char287,11017
(defun mc--reset-read-prompts ()mc--reset-read-prompts294,11251
(defun mc/fake-cursor-p (o)mc/fake-cursor-p300,11373
(defun mc/cursor-with-id (id)mc/cursor-with-id304,11499
(defvar mc--stored-state-for-undo nilmc--stored-state-for-undo310,11750
(defun activate-cursor-for-undo (id)activate-cursor-for-undo313,11865
(defun deactivate-cursor-after-undo (id)deactivate-cursor-after-undo321,12254
(defcustom mc/always-run-for-all nilmc/always-run-for-all328,12550
(defun mc/prompt-for-inclusion-in-whitelist (original-command)mc/prompt-for-inclusion-in-whitelist333,12713
(defun mc/num-cursors ()mc/num-cursors342,13106
(defvar mc--this-command nilmc--this-command347,13286
(defun mc/make-a-note-of-the-command-being-run ()mc/make-a-note-of-the-command-being-run351,13414
(defun mc/execute-this-command-for-all-cursors ()mc/execute-this-command-for-all-cursors365,14155
(defadvice execute-kbd-macro (around skip-fake-cursors activate)execute-kbd-macro376,14705
(defun mc/execute-this-command-for-all-cursors-1 ()mc/execute-this-command-for-all-cursors-1380,14834
(defun mc/remove-fake-cursors ()mc/remove-fake-cursors428,17486
(defun mc/keyboard-quit ()mc/keyboard-quit438,17840
(defvar mc/keymap nilmc/keymap445,18050
(defun mc--all-equal (list)mc--all-equal458,18573
(defun mc--kill-ring-entries ()mc--kill-ring-entries467,18815
(defun mc--maybe-set-killed-rectangle ()mc--maybe-set-killed-rectangle475,19118
(defvar mc/unsupported-minor-modes '(company-mode auto-complete-mode flyspell-mode jedi-mode)mc/unsupported-minor-modes482,19427
(defvar mc/temporarily-disabled-minor-modes nilmc/temporarily-disabled-minor-modes486,19658
(defun mc/temporarily-disable-minor-mode (mode)mc/temporarily-disable-minor-mode490,19824
(defun mc/temporarily-disable-unsupported-minor-modes ()mc/temporarily-disable-unsupported-minor-modes496,20068
(defun mc/enable-minor-mode (mode)mc/enable-minor-mode499,20198
(defun mc/enable-temporarily-disabled-minor-modes ()mc/enable-temporarily-disabled-minor-modes502,20254
(defcustom mc/mode-linemc/mode-line506,20425
(define-minor-mode multiple-cursors-modemultiple-cursors-mode514,20734
(defun mc/maybe-multiple-cursors-mode ()mc/maybe-multiple-cursors-mode533,21603
(defmacro unsupported-cmd (cmd msg)unsupported-cmd539,21822
(defadvice current-kill (before interprogram-paste-for-all-cursors activate)current-kill554,22527
(defvar mc/list-file (locate-user-emacs-file ".mc-lists.el")mc/list-file578,23797
(defun mc/dump-list (list-symbol)mc/dump-list582,23970
(defun mc/save-lists ()mc/save-lists596,24502
(defvar mc/cmds-to-run-once nilmc/cmds-to-run-once609,24991
(defvar mc--default-cmds-to-run-once nilmc--default-cmds-to-run-once612,25081
(defvar mc--default-cmds-to-run-for-all nilmc--default-cmds-to-run-for-all697,29816
(defvar mc/cmds-to-run-for-all nilmc/cmds-to-run-for-all777,34219

.cask/24.5.1/elpa/multiple-cursors-20160616.1404/multiple-cursors-pkg.el,104
(define-package "multiple-cursors" "20160616.1404" "Multiple cursors for Emacs.""multiple-cursors"1,0

.cask/24.5.1/elpa/multiple-cursors-20160616.1404/multiple-cursors.el,0

.cask/24.5.1/elpa/multiple-cursors-20160616.1404/rectangular-region-mode.el,1069
(defvar rrm/anchor (make-marker)rrm/anchor32,1078
(defvar rectangular-region-mode-map (make-sparse-keymap)rectangular-region-mode-map35,1181
(define-key rectangular-region-mode-map (kbd "C-g") 'rrm/keyboard-quit)rectangular-region-mode-map38,1302
(define-key rectangular-region-mode-map (kbd "<return>") 'rrm/switch-to-multiple-cursors)rectangular-region-mode-map39,1374
(defvar rectangular-region-mode nil)rectangular-region-mode41,1465
(defun rrm/keyboard-quit ()rrm/keyboard-quit43,1503
(defun set-rectangular-region-anchor ()set-rectangular-region-anchor52,1767
(defun rrm/remove-rectangular-region-overlays ()rrm/remove-rectangular-region-overlays62,2110
(defun rrm/repaint ()rrm/repaint70,2400
(defun rrm/switch-to-multiple-cursors (&rest forms)rrm/switch-to-multiple-cursors97,3664
(defadvice er/expand-region (before switch-from-rrm-to-mc activate)er/expand-region103,3858
(defadvice kill-ring-save (before switch-from-rrm-to-mc activate)kill-ring-save107,3998
(define-minor-mode rectangular-region-moderectangular-region-mode112,4151

.cask/24.5.1/elpa/myterminal-controls-20160119.2030/myterminal-controls-autoloads.el,0

.cask/24.5.1/elpa/myterminal-controls-20160119.2030/myterminal-controls-pkg.el,228
(define-package "myterminal-controls" "20160119.2030" "Quick toggle controls at a key-stroke" '((emacs "24") (cl-lib "0.5")) :url "http://ismail.teamfluxion.com" :keywords '("convenience" "shortcuts"))"myterminal-controls"1,0

.cask/24.5.1/elpa/myterminal-controls-20160119.2030/myterminal-controls.el,967
(defvar myterminal-controls--controls-datamyterminal-controls--controls-data72,2362
(defvar myterminal-controls--buffer-namemyterminal-controls--buffer-name75,2413
(defun myterminal-controls-set-controls-data (data)myterminal-controls-set-controls-data79,2498
(defun myterminal-controls-open-controls ()myterminal-controls-open-controls89,2864
(defun myterminal-controls-close-controls ()myterminal-controls-close-controls100,3313
(defun myterminal-controls--get-required-window-height ()myterminal-controls--get-required-window-height109,3753
(defun myterminal-controls--prepare-controls (pairs)myterminal-controls--prepare-controls119,4216
(defun myterminal-controls--apply-keyboard-bindings (pair)myterminal-controls--apply-keyboard-bindings127,4472
(defun myterminal-controls--display-controls-bindings (pair)myterminal-controls--display-controls-bindings137,4819
(define-derived-mode myterminal-controls-mode myterminal-controls-mode149,5251

.cask/24.5.1/elpa/package-build-20160619.1317/package-build-autoloads.el,0

.cask/24.5.1/elpa/package-build-20160619.1317/package-build-pkg.el,149
(define-package "package-build" "20160619.1317" "Tools for assembling a package archive" '((cl-lib "0.5")) :keywords '("tools"))"package-build"1,0

.cask/24.5.1/elpa/package-build-20160619.1317/package-build.el,10471
(defconst package-build--this-dir (file-name-directory (or load-file-name (buffer-file-name))))package-build--this-dir49,1691
(defgroup package-build nilpackage-build51,1788
(defcustom package-build-working-dir (expand-file-name "working/" package-build--this-dir)package-build-working-dir55,1925
(defcustom package-build-archive-dir (expand-file-name "packages/" package-build--this-dir)package-build-archive-dir60,2100
(defcustom package-build-recipes-dir (expand-file-name "recipes/" package-build--this-dir)package-build-recipes-dir65,2284
(defcustom package-build-verbose tpackage-build-verbose70,2456
(defcustom package-build-stable nilpackage-build-stable75,2620
(defcustom package-build-timeout-executablepackage-build-timeout-executable80,2784
(defcustom package-build-timeout-secs 600package-build-timeout-secs91,3223
(defcustom package-build-tar-executablepackage-build-tar-executable101,3607
(defcustom package-build-write-melpa-badge-images nilpackage-build-write-melpa-badge-images109,3882
(defcustom package-build-version-regexp "^[rRvV]?\\(.*\\)$"package-build-version-regexp114,4071
(defvar package-build--recipe-alist nilpackage-build--recipe-alist122,4356
(defvar package-build--recipe-alist-initialized nilpackage-build--recipe-alist-initialized128,4511
(defvar package-build--archive-alist nilpackage-build--archive-alist131,4635
(defvar package-build--archive-alist-initialized nilpackage-build--archive-alist-initialized137,4857
(defconst package-build-default-files-specpackage-build-default-files-spec140,4981
(defun package-build--message (format-string &rest args)package-build--message147,5273
(defun package-build--slurp-file (file-name)package-build--slurp-file152,5468
(defun package-build--string-rtrim (str)package-build--string-rtrim159,5756
(defun package-build--valid-version (str &optional regexp)package-build--valid-version164,5891
(defun package-build--parse-time (str)package-build--parse-time172,6225
(defun package-build--find-parse-time (regex &optional bound)package-build--find-parse-time185,6947
(defun package-build--find-parse-time-newest (regex &optional bound)package-build--find-parse-time-newest191,7271
(defun package-build--find-version-newest (regex &optional bound)package-build--find-version-newest200,7670
(defun package-build--run-process (dir command &rest args)package-build--run-process236,9566
(defun package-build--run-process-match (regex dir prog &rest args)package-build--run-process-match254,10561
(defun package-build-checkout (package-name config working-dir)package-build-checkout262,10896
(defvar package-build--last-wiki-fetch-time 0package-build--last-wiki-fetch-time276,11627
(defvar package-build--wiki-min-request-interval 3package-build--wiki-min-request-interval281,11862
(defmacro package-build--with-wiki-rate-limit (&rest body)package-build--with-wiki-rate-limit284,12001
(defvar url-http-response-status)url-http-response-status299,12706
(defvar url-http-end-of-headers)url-http-end-of-headers300,12740
(defun package-build--url-copy-file (url newname &optional ok-if-already-exists)package-build--url-copy-file302,12774
(defun package-build--grab-wiki-file (filename)package-build--grab-wiki-file328,13956
(defun package-build--checkout-wiki (name config dir)package-build--checkout-wiki342,14558
(defun package-build--darcs-repo (dir)package-build--darcs-repo353,15090
(defun package-build--checkout-darcs (name config dir)package-build--checkout-darcs357,15261
(defun package-build--fossil-repo (dir)package-build--fossil-repo386,16968
(defun package-build--checkout-fossil (name config dir)package-build--checkout-fossil390,17125
(defun package-build--svn-repo (dir)package-build--svn-repo413,18334
(defun package-build--trim (str &optional chr)package-build--trim417,18481
(defun package-build--princ-exists (dir)package-build--princ-exists423,18712
(defun package-build--princ-checkout (repo dir)package-build--princ-checkout427,18862
(defun package-build--checkout-svn (name config dir)package-build--checkout-svn431,19027
(defun package-build--cvs-repo (dir)package-build--cvs-repo453,20178
(defun package-build--checkout-cvs (name config dir)package-build--checkout-cvs462,20552
(defun package-build--git-repo (dir)package-build--git-repo517,23751
(defun package-build--git-head-branch (dir)package-build--git-head-branch522,23930
(defun package-build--checkout-git (name config dir)package-build--checkout-git529,24163
(defun package-build--update-git-to-ref (dir ref)package-build--update-git-to-ref567,26317
(defun package-build--checkout-github (name config dir)package-build--checkout-github573,26642
(defun package-build--checkout-gitlab (name config dir)package-build--checkout-gitlab578,26932
(defun package-build--checkout-bitbucket (name config dir)package-build--checkout-bitbucket583,27222
(defun package-build--bzr-expand-repo (repo)package-build--bzr-expand-repo588,27516
(defun package-build--bzr-repo (dir)package-build--bzr-repo592,27702
(defun package-build--checkout-bzr (name config dir)package-build--checkout-bzr596,27859
(defun package-build--hg-repo (dir)package-build--hg-repo631,29704
(defun package-build--checkout-hg (name config dir)package-build--checkout-hg635,29854
(defun package-build--dump (data file &optional pretty-print)package-build--dump683,32368
(defun package-build--write-pkg-file (pkg-file pkg-info)package-build--write-pkg-file692,32667
(defun package-build--read-from-file (file-name)package-build--read-from-file720,33981
(defun package-build--create-tar (file dir &optional files)package-build--create-tar725,34220
(defun package-build--find-package-commentary (file-path)package-build--find-package-commentary745,34919
(defun package-build--write-pkg-readme (target-dir commentary file-name)package-build--write-pkg-readme752,35141
(defun package-build--readme-file-name (target-dir file-name)package-build--readme-file-name772,35969
(defun package-build--update-or-insert-version (version)package-build--update-or-insert-version777,36187
(defun package-build--ensure-ends-here-line (file-path)package-build--ensure-ends-here-line794,36849
(defun package-build--get-package-info (file-path)package-build--get-package-info806,37263
(defun package-build--get-pkg-file-info (file-path)package-build--get-pkg-file-info819,37817
(defun package-build--merge-package-info (pkg-info name version)package-build--merge-package-info854,39552
(defun package-build--archive-entry (pkg-info type)package-build--archive-entry863,39935
(defun package-build--archive-file-name (archive-entry)package-build--archive-file-name878,40486
(defun package-build--entry-file-name (archive-entry)package-build--entry-file-name888,40930
(defun package-build--delete-file-if-exists (file)package-build--delete-file-if-exists897,41301
(defun package-build--remove-archive-files (archive-entry)package-build--remove-archive-files902,41437
(defun package-build--read-recipe (file-name)package-build--read-recipe912,41994
(defun package-build--read-recipes ()package-build--read-recipes955,43978
(defun package-build--read-recipes-ignore-errors ()package-build--read-recipes-ignore-errors960,44245
(defun package-build-expand-file-specs (dir specs &optional subdir allow-empty)package-build-expand-file-specs972,44893
(defun package-build--config-file-list (config)package-build--config-file-list1011,46597
(defun package-build--expand-source-file-list (dir config)package-build--expand-source-file-list1022,46979
(defun package-build--generate-info-files (files source-dir target-dir)package-build--generate-info-files1026,47211
(defun package-build--generate-dir-file (files target-dir)package-build--generate-dir-file1055,48438
(defun package-build--copy-package-files (files source-dir target-dir)package-build--copy-package-files1074,49265
(defun package-build--copy-file (file newname)package-build--copy-file1082,49648
(defun package-build--package-name-completing-read ()package-build--package-name-completing-read1096,50137
(defun package-build--find-source-file (target files)package-build--find-source-file1100,50314
(defun package-build--find-package-file (name)package-build--find-package-file1105,50482
(defun package-build--package-buffer-info-vec ()package-build--package-buffer-info-vec1109,50679
(defun package-build-archive (name)package-build-archive1142,52089
(defun package-build-package (package-name version file-specs source-dir target-dir)package-build-package1174,53789
(defun package-build--build-single-file-package (package-name version file source-dir target-dir)package-build--build-single-file-package1207,55382
(defun package-build--build-multi-file-package (package-name version files source-dir target-dir)package-build--build-multi-file-package1240,56925
(defun package-build--write-melpa-badge-image (package-name version target-dir)package-build--write-melpa-badge-image1285,59564
(defvar package-build-minor-mode-mappackage-build-minor-mode-map1306,60596
(define-minor-mode package-build-minor-modepackage-build-minor-mode1312,60784
(defun package-build-create-recipe (name fetcher)package-build-create-recipe1321,61027
(defun package-build-current-recipe ()package-build-current-recipe1347,62036
(defun package-build-archive-ignore-errors (pkg)package-build-archive-ignore-errors1375,63339
(defun package-build-all ()package-build-all1393,63985
(defun package-build-cleanup ()package-build-cleanup1406,64523
(defun package-build-recipe-alist ()package-build-recipe-alist1416,65034
(defun package-build-archive-alist ()package-build-archive-alist1423,65333
(defun package-build-reinitialize ()package-build-reinitialize1429,65540
(defun package-build-dump-archive-contents (&optional file-name pretty-print)package-build-dump-archive-contents1434,65721
(defun package-build--archive-entries ()package-build--archive-entries1443,66157
(defun package-build-recipe-alist-as-json (file-name)package-build-recipe-alist-as-json1464,66916
(defun package-build--sym-to-keyword (s)package-build--sym-to-keyword1470,67120
(defun package-build--pkg-info-for-json (info)package-build--pkg-info-for-json1474,67251
(defun package-build--archive-alist-for-json ()package-build--archive-alist-for-json1491,67896
(defun package-build-archive-alist-as-json (file-name)package-build-archive-alist-as-json1499,68255

.cask/24.5.1/elpa/pallet-20150512.2/pallet-autoloads.el,45
(defvar pallet-mode nil "\pallet-mode9,250

.cask/24.5.1/elpa/pallet-20150512.2/pallet-pkg.el,102
(define-package "pallet" "20150512.2" "A package management tool for Emacs, using Cask.""pallet"1,0

.cask/24.5.1/elpa/pallet-20150512.2/pallet.el,1903
(defvar pallet--package-archives-copypallet--package-archives-copy198,7346
(defun pallet-init ()pallet-init206,7478
(defun pallet-install ()pallet-install211,7595
(defun pallet-update ()pallet-update217,7742
(defvar pallet--ignored-text-comment ";;;pallet-ignore")pallet--ignored-text-comment225,7890
(defun pallet--on ()pallet--on227,7948
(defun pallet--off ()pallet--off234,8260
(defun pallet--repack (&optional use-copy)pallet--repack241,8546
(defun pallet--cask-up (&optional body)pallet--cask-up248,8857
(defun pallet--cask-file ()pallet--cask-file255,9178
(defun pallet--package-name (package-name-or-desc)pallet--package-name259,9288
(defun pallet--pick-packages ()pallet--pick-packages265,9643
(defun pallet--pick-cask (bundle)pallet--pick-cask274,9911
(defun pallet--pick-cask-except (bundle excluded-package-name)pallet--pick-cask-except278,10040
(defun pallet--pack (archives packages)pallet--pack287,10431
(defun pallet--pack-one (package-name)pallet--pack-one293,10636
(defun pallet--unpack-one (package-name)pallet--unpack-one300,10883
(defun pallet--ship (archives packages)pallet--ship307,11117
(defun pallet--with-ignored-text (ignored-text text)pallet--with-ignored-text317,11595
(defun pallet--ignored-text (text)pallet--ignored-text323,11800
(defun pallet--write-sources (archive-list)pallet--write-sources327,11943
(defun pallet--format-source (source)pallet--format-source334,12220
(defun pallet--write-depends (package-list)pallet--write-depends341,12546
(defun pallet--format-dependency (package)pallet--format-dependency349,12878
(defun pallet--write-file (file contents)pallet--write-file368,13817
(defun pallet--installed-p (package-name)pallet--installed-p372,13941
(defadvice package-installpackage-install382,14262
(defadvice package-deletepackage-delete389,14575
(define-minor-mode pallet-modepallet-mode399,15032

.cask/24.5.1/elpa/popup-20160531.425/popup-autoloads.el,0

.cask/24.5.1/elpa/popup-20160531.425/popup-pkg.el,120
(define-package "popup" "20160531.425" "Visual Popup User Interface" '((cl-lib "0.5")) :keywords '("lisp"))"popup"1,0

.cask/24.5.1/elpa/popup-20160531.425/popup.el,6351
(defconst popup-version "0.5.3")popup-version35,1147
(defun popup-calculate-max-width (max-width)popup-calculate-max-width41,1199
(defvar popup-use-optimized-column-computation tpopup-use-optimized-column-computation48,1477
(defmacro popup-aif (test then &rest else)popup-aif52,1620
(defmacro popup-awhen (test &rest body)popup-awhen58,1754
(defun popup-x-to-string (x)popup-x-to-string64,1883
(defun popup-substring-by-width (string width)popup-substring-by-width74,2167
(defun popup-fill-string (string &optional width max-width justify squeeze)popup-fill-string89,2716
(defmacro popup-save-buffer-state (&rest body)popup-save-buffer-state142,4803
(defun popup-vertical-motion (column direction)popup-vertical-motion152,5096
(defun popup-last-line-of-buffer-p ()popup-last-line-of-buffer-p159,5355
(defun popup-lookup-key-by-event (function event)popup-lookup-key-by-event164,5518
(defgroup popup nilpopup177,5917
(defface popup-facepopup-face182,6005
(defface popup-summary-facepopup-summary-face187,6135
(defface popup-scroll-bar-foreground-facepopup-scroll-bar-foreground-face192,6262
(defface popup-scroll-bar-background-facepopup-scroll-bar-background-face197,6389
(defvar popup-instances nilpopup-instances202,6515
(defvar popup-scroll-bar-foreground-charpopup-scroll-bar-foreground-char205,6566
(defvar popup-scroll-bar-background-charpopup-scroll-bar-background-char209,6709
(defun popup-item-propertize (item &rest properties)popup-item-propertize221,7163
(defun popup-item-property (item property)popup-item-property231,7527
(defsubst popup-item-value (item)               (popup-item-property item 'value))popup-item-value259,8536
(defsubst popup-item-value-or-self (item)       (or (popup-item-value item) item))popup-item-value-or-self260,8619
(defsubst popup-item-face (item)                (popup-item-property item 'popup-face))popup-item-face261,8702
(defsubst popup-item-mouse-face (item)          (popup-item-property item 'popup-mouse-face))popup-item-mouse-face262,8790
(defsubst popup-item-selection-face (item)      (popup-item-property item 'selection-face))popup-item-selection-face263,8884
(defsubst popup-item-document (item)            (popup-item-property item 'document))popup-item-document264,8976
(defsubst popup-item-summary (item)             (popup-item-property item 'summary))popup-item-summary265,9062
(defsubst popup-item-symbol (item)              (popup-item-property item 'symbol))popup-item-symbol266,9147
(defsubst popup-item-sublist (item)             (popup-item-property item 'sublist))popup-item-sublist267,9231
(defun popup-item-documentation (item)popup-item-documentation269,9317
(defun popup-item-show-help-1 (item)popup-item-show-help-1275,9499
(defun popup-item-show-help-with-event-loop (item)popup-item-show-help-with-event-loop285,9791
(defun popup-item-show-help (item &optional persist)popup-item-show-help300,10386
(defun popup-set-list (popup list)popup-set-list311,10816
(defun popup-set-filtered-list (popup list)popup-set-filtered-list316,10969
(defun popup-selected-item (popup)popup-selected-item324,11224
(defun popup-selected-line (popup)popup-selected-line327,11309
(defun popup-line-overlay (popup line)popup-line-overlay330,11398
(defun popup-selected-line-overlay (popup)popup-selected-line-overlay333,11476
(defun popup-hide-line (popup line)popup-hide-line336,11578
(defun popup-line-hidden-p (popup line)popup-line-hidden-p341,11751
(defun popup-live-p (popup)popup-live-p425,15462
(defun popup-child-point (popup &optional offset)popup-child-point429,15569
(defun popup-calculate-direction (height row)popup-calculate-direction436,15723
(defun popup-delete (popup)popup-delete650,24280
(defun popup-draw (popup)popup-draw668,24858
(defun popup-hide (popup)popup-hide769,29974
(defun popup-hidden-p (popup)popup-hidden-p776,30200
(defun popup-jump (popup cursor)popup-jump785,30451
(defun popup-select (popup i)popup-select795,30856
(defun popup-next (popup)popup-next803,31084
(defun popup-previous (popup)popup-previous821,31687
(defun popup-page-next (popup)popup-page-next839,32276
(defun popup-page-previous (popup)popup-page-previous845,32462
(defun popup-scroll-down (popup &optional n)popup-scroll-down851,32658
(defun popup-scroll-up (popup &optional n)popup-scroll-up859,32999
(defface popup-isearch-matchpopup-isearch-match871,33318
(defvar popup-isearch-cursor-color "blue")popup-isearch-cursor-color876,33446
(defvar popup-isearch-keymappopup-isearch-keymap878,33490
(defvar popup-menu-show-quick-help-function 'popup-menu-show-quick-helppopup-menu-show-quick-help-function888,33893
(defcustom popup-isearch-regexp-builder-function #'regexp-quotepopup-isearch-regexp-builder-function891,34026
(defsubst popup-isearch-char-p (char)popup-isearch-char-p897,34284
(defun popup-isearch-filter-list (pattern list)popup-isearch-filter-list902,34389
(defun popup-isearch-prompt (popup pattern)popup-isearch-prompt923,35293
(defun popup-isearch-update (popup filter pattern &optional callback)popup-isearch-update928,35506
(defface popup-tip-facepopup-tip-face1006,38750
(defvar popup-tip-max-width 80)popup-tip-max-width1011,38868
(defface popup-menu-facepopup-menu-face1093,41546
(defface popup-menu-mouse-facepopup-menu-mouse-face1098,41645
(defface popup-menu-selection-facepopup-menu-selection-face1103,41769
(defface popup-menu-summary-facepopup-menu-summary-face1108,41929
(defvar popup-menu-show-tip-function 'popup-tippopup-menu-show-tip-function1113,42047
(defun popup-menu-show-help (menu &optional persist item)popup-menu-show-help1116,42168
(defun popup-menu-documentation (menu &optional item)popup-menu-documentation1119,42298
(defun popup-menu-show-quick-help (menu &optional item &rest args)popup-menu-show-quick-help1122,42420
(defun popup-menu-item-of-mouse-event (event)popup-menu-item-of-mouse-event1146,43320
(defun popup-menu-read-key-sequence (keymap &optional prompt timeout)popup-menu-read-key-sequence1154,43650
(defun popup-menu-fallback (event default))popup-menu-fallback1181,44976
(defun popup-preferred-width (list)popup-preferred-width1264,48828
(defvar popup-menu-keymappopup-menu-keymap1276,49340
(defun popup-cascade-menu (list &rest args)popup-cascade-menu1411,54621

.cask/24.5.1/elpa/powerline-20160601.724/powerline-autoloads.el,0

.cask/24.5.1/elpa/powerline-20160601.724/powerline-pkg.el,82
(define-package "powerline" "20160601.724" "Rewrite of Powerline""powerline"1,0

.cask/24.5.1/elpa/powerline-20160601.724/powerline-separators.el,1465
(defun pl/interpolate (color1 color2)pl/interpolate24,581
(defun pl/hex-color (color)pl/hex-color35,999
(defun pl/pattern (lst)pl/pattern40,1140
(defun pl/pattern-to-string (pattern)pl/pattern-to-string46,1297
(defun pl/reverse-pattern (pattern)pl/reverse-pattern50,1464
(defun pl/row-pattern (fill total &optional fade)pl/row-pattern54,1564
(defun pl/pattern-bindings-body (patterns height-exp pattern-height-sympl/pattern-bindings-body64,1930
(defun pl/pattern-defun (name dir width &rest patterns)pl/pattern-defun93,3514
(defun pl/background-color (face)pl/background-color133,5123
(defun pl/wrap-defun (name dir width let-vars body &optional body-2x)pl/wrap-defun141,5371
(defmacro pl/alternate (dir)pl/alternate187,7253
(defmacro pl/arrow (dir)pl/arrow199,7585
(defmacro pl/arrow-fade (dir)pl/arrow-fade220,8892
(defmacro pl/bar (dir)pl/bar241,10337
(defmacro pl/box (dir)pl/box246,10465
(defmacro pl/brace (dir)pl/brace264,10856
(defmacro pl/butt (dir)pl/butt306,12023
(defmacro pl/chamfer (dir)pl/chamfer332,12653
(defmacro pl/contour (dir)pl/contour349,13072
(defmacro pl/curve (dir)pl/curve390,14894
(defmacro pl/rounded (dir)pl/rounded434,16097
(defmacro pl/roundstub (dir)pl/roundstub460,16936
(defmacro pl/slant (dir)pl/slant486,17581
(defmacro pl/wave (dir)pl/wave496,18141
(defmacro pl/zigzag (dir)pl/zigzag552,20840
(defmacro pl/nil (dir)pl/nil576,21436
(defmacro pl/utf-8 (dir)pl/utf-8582,21627

.cask/24.5.1/elpa/powerline-20160601.724/powerline-themes.el,545
(defcustom powerline-display-buffer-size tpowerline-display-buffer-size20,443
(defcustom powerline-display-mule-info tpowerline-display-mule-info25,568
(defcustom powerline-display-hud tpowerline-display-hud30,689
(defun powerline-default-theme ()powerline-default-theme36,813
(defun powerline-center-theme ()powerline-center-theme91,4251
(defun powerline-center-evil-theme ()powerline-center-evil-theme139,6363
(defun powerline-vim-theme ()powerline-vim-theme196,8928
(defun powerline-nano-theme ()powerline-nano-theme247,11298

.cask/24.5.1/elpa/powerline-20160601.724/powerline.el,3971
(defface powerline-active1 '((t (:background "grey22" :inherit mode-line)))powerline-active126,655
(defface powerline-active2 '((t (:background "grey40" :inherit mode-line)))powerline-active230,775
(defface powerline-inactive1powerline-inactive134,895
(defface powerline-inactive2powerline-inactive239,1028
(defface mode-line-buffer-id-inactivemode-line-buffer-id-inactive44,1161
(defcustom powerline-default-separator 'arrowpowerline-default-separator49,1290
(defcustom powerline-utf-8-separator-left #xe0b0powerline-utf-8-separator-left74,2066
(defcustom powerline-utf-8-separator-right #xe0b2powerline-utf-8-separator-right79,2239
(defcustom powerline-default-separator-dir '(left . right)powerline-default-separator-dir84,2414
(defcustom powerline-height nilpowerline-height95,2846
(defcustom powerline-text-scale-factor nilpowerline-text-scale-factor100,2973
(defcustom powerline-buffer-size-suffix tpowerline-buffer-size-suffix110,3318
(defcustom powerline-gui-use-vcs-glyph nilpowerline-gui-use-vcs-glyph115,3435
(defun pl/create-or-get-cache ()pl/create-or-get-cache120,3617
(defun pl/reset-cache ()pl/reset-cache125,3892
(defun powerline-current-separator ()powerline-current-separator132,4162
(defun powerline-delete-cache (&optional frame)powerline-delete-cache148,4714
(defun powerline-desktop-save-delete-cache ()powerline-desktop-save-delete-cache152,4847
(defun pl/memoize (func)pl/memoize162,5319
(defun pl/memoize-wrap-frame-local (func)pl/memoize-wrap-frame-local170,5635
(defun pl/separator-height ()pl/separator-height183,6112
(defun powerline-reset ()powerline-reset187,6237
(defun pl/make-xpm (name color1 color2 data)pl/make-xpm228,7418
(defun pl/percent-xpmpl/percent-xpm263,8672
(defun powerline-hud (face1 face2 &optional width)powerline-hud284,9468
(defun powerline-mouse (click-group click-type string)powerline-mouse302,10118
(defun powerline-concat (&rest strings)powerline-concat323,10842
(defmacro defpowerline (name body)defpowerline331,11021
(defun pl/property-substrings (str prop)pl/property-substrings337,11220
(defun pl/assure-list (item)pl/assure-list347,11569
(defun pl/add-text-property (str prop val)pl/add-text-property353,11679
(defun powerline-raw (str &optional face pad)powerline-raw362,11933
(defun powerline-fill (face reserve)powerline-fill376,12500
(defun powerline-fill-center (face reserve)powerline-fill-center388,12983
(defpowerline powerline-major-modepowerline-major-mode400,13525
(defpowerline powerline-minor-modespowerline-minor-modes413,14346
(defpowerline powerline-narrowpowerline-narrow436,15730
(defpowerline powerline-vcpowerline-vc451,16352
(defpowerline powerline-buffer-sizepowerline-buffer-size460,16702
(defun powerline-buffer-id (&optional face pad)powerline-buffer-id473,17180
(defpowerline powerline-processpowerline-process488,17711
(defvar pl/default-mode-line mode-line-format)pl/default-mode-line494,17913
(defvar pl/minibuffer-selected-window-list '())pl/minibuffer-selected-window-list496,17961
(defun pl/minibuffer-selected-window ()pl/minibuffer-selected-window498,18010
(defun pl/minibuffer-setup ()pl/minibuffer-setup503,18203
(defun pl/minibuffer-exit ()pl/minibuffer-exit509,18442
(defvar powerline-selected-window (frame-selected-window))powerline-selected-window515,18618
(defun powerline-set-selected-window ()powerline-set-selected-window516,18677
(defun powerline-unset-selected-window ()powerline-unset-selected-window521,18912
(defadvice handle-switch-framehandle-switch-frame537,19549
(defadvice select-window (after powerline-select-window activate)select-window541,19686
(defun powerline-selected-window-active ()powerline-selected-window-active546,19904
(defun powerline-revert ()powerline-revert550,20049
(defun pl/render (item)pl/render555,20192
(defun powerline-render (values)powerline-render563,20404
(defun powerline-width (values)powerline-width567,20513

.cask/24.5.1/elpa/s-20160508.2357/s-autoloads.el,0

.cask/24.5.1/elpa/s-20160508.2357/s-pkg.el,124
(define-package "s" "20160508.2357" "The long lost Emacs string manipulation library." 'nil :keywords '("strings"))"s"1,0

.cask/24.5.1/elpa/s-20160508.2357/s.el,4315
(defun s-trim-left (s)s-trim-left33,1042
(defun s-trim-right (s)s-trim-right39,1189
(defun s-trim (s)s-trim45,1331
(defun s-collapse-whitespace (s)s-collapse-whitespace49,1437
(defun s-split (separator s &optional omit-nulls)s-split53,1586
(defun s-split-up-to (separator s n &optional omit-nulls)s-split-up-to60,1871
(defun s-lines (s)s-lines86,2772
(defun s-join (separator strings)s-join90,2888
(defun s-concat (&rest strings)s-concat94,3029
(defun s-prepend (prefix s)s-prepend98,3140
(defun s-append (suffix s)s-append102,3220
(defun s-repeat (num s)s-repeat106,3299
(defun s-chop-suffix (suffix s)s-chop-suffix114,3480
(defun s-chop-suffixes (suffixes s)s-chop-suffixes122,3721
(defun s-chop-prefix (prefix s)s-chop-prefix129,3933
(defun s-chop-prefixes (prefixes s)s-chop-prefixes137,4176
(defun s-shared-start (s1 s2)s-shared-start144,4390
(defun s-shared-end (s1 s2)s-shared-end153,4676
(defun s-chomp (s)s-chomp172,5295
(defun s-truncate (len s)s-truncate176,5408
(defun s-word-wrap (len s)s-word-wrap182,5593
(defun s-center (len s)s-center190,5852
(defun s-pad-left (len padding s)s-pad-left198,6089
(defun s-pad-right (len padding s)s-pad-right204,6305
(defun s-left (len s)s-left210,6523
(defun s-right (len s)s-right216,6649
(defun s-ends-with? (suffix s &optional ignore-case)s-ends-with?223,6803
(defalias 's-ends-with-p 's-ends-with?)s-ends-with-p235,7192
(defun s-starts-with? (prefix s &optional ignore-case)s-starts-with?237,7233
(defalias 's-starts-with-p 's-starts-with?)s-starts-with-p247,7543
(defalias 's-suffix? 's-ends-with?)s-suffix?249,7588
(defalias 's-prefix? 's-starts-with?)s-prefix?250,7624
(defalias 's-suffix-p 's-ends-with?)s-suffix-p251,7662
(defalias 's-prefix-p 's-starts-with?)s-prefix-p252,7699
(defun s--truthy? (val)s--truthy?254,7739
(defun s-contains? (needle s &optional ignore-case)s-contains?257,7784
(defalias 's-contains-p 's-contains?)s-contains-p265,8061
(defun s-equals? (s1 s2)s-equals?267,8100
(defalias 's-equals-p 's-equals?)s-equals-p273,8235
(defun s-less? (s1 s2)s-less?275,8270
(defalias 's-less-p 's-less?)s-less-p281,8404
(defun s-matches? (regexp s &optional start)s-matches?283,8435
(defalias 's-matches-p 's-matches?)s-matches-p290,8671
(defun s-blank? (s)s-blank?292,8708
(defun s-present? (s)s-present?296,8795
(defun s-presence (s)s-presence300,8887
(defun s-lowercase? (s)s-lowercase?304,8993
(defun s-uppercase? (s)s-uppercase?309,9139
(defun s-mixedcase? (s)s-mixedcase?314,9285
(defun s-capitalized? (s)s-capitalized?321,9507
(defun s-numeric? (s)s-numeric?327,9714
(defun s-replace (old new s)s-replace332,9805
(defun s--aget (alist key)s--aget336,9926
(defun s-replace-all (replacements s)s-replace-all339,9988
(defun s-downcase (s)s-downcase345,10281
(defun s-upcase (s)s-upcase351,10407
(defun s-capitalize (s)s-capitalize357,10527
(defun s-titleize (s)s-titleize361,10710
(defmacro s-with (s form &rest more)s-with367,10898
(defun s-index-of (needle s &optional ignore-case)s-index-of381,11404
(defun s-reverse (s)s-reverse389,11688
(defun s-match-strings-all (regex string)s-match-strings-all403,12206
(defun s-matched-positions-all (regexp string &optional subexp-depth)s-matched-positions-all423,12901
(defun s-match (regexp s &optional start)s-match436,13418
(defun s-slice-at (regexp s)s-slice-at455,14223
(defun s-split-words (s)s-split-words466,14542
(defun s--mapcar-head (fn-head fn-rest list)s--mapcar-head476,14854
(defun s-lower-camel-case (s)s-lower-camel-case481,15055
(defun s-upper-camel-case (s)s-upper-camel-case485,15191
(defun s-snake-case (s)s-snake-case489,15309
(defun s-dashed-words (s)s-dashed-words493,15416
(defun s-capitalized-words (s)s-capitalized-words497,15527
(defun s-titleized-words (s)s-titleized-words502,15712
(defun s-word-initials (s)s-word-initials506,15831
(defun s-format (template replacer &optional extra)s-format520,16204
(defvar s-lex-value-as-lisp nils-lex-value-as-lisp568,18100
(defun s-lex-fmt|expand (fmt)s-lex-fmt|expand573,18231
(defmacro s-lex-format (format-str)s-lex-format587,18693
(defun s-count-matches (regexp s &optional start end)s-count-matches602,19115
(defun s-wrap (s prefix &optional suffix)s-wrap612,19416

.cask/24.5.1/elpa/shut-up-20150423.522/shut-up-autoloads.el,0

.cask/24.5.1/elpa/shut-up-20150423.522/shut-up-pkg.el,151
(define-package "shut-up" "20150423.522" "Shut up would you!" '((cl-lib "0.3") (emacs "24")) :url "http://github.com/rejeep/shut-up.el")"shut-up"1,0

.cask/24.5.1/elpa/shut-up-20150423.522/shut-up.el,537
(defvar inhibit-message nil)inhibit-message43,1468
(defvar shut-up-ignore nilshut-up-ignore45,1498
(defun shut-up-write-region (start end filenameshut-up-write-region54,1773
(defun shut-up-load (file &optional noerror _nomessage nosuffix must-suffix)shut-up-load68,2367
(defun shut-up-buffer-string (buffer)shut-up-buffer-string72,2564
(defun shut-up-insert-to-buffer (object buffer)shut-up-insert-to-buffer81,2849
(defmacro shut-up (&rest body)shut-up93,3190
(defun shut-up-silence-emacs ()shut-up-silence-emacs133,4860

.cask/24.5.1/elpa/switch-window-20160229.334/switch-window-autoloads.el,0

.cask/24.5.1/elpa/switch-window-20160229.334/switch-window-pkg.el,218
(define-package "switch-window" "20160229.334" "A *visual* way to choose a window to switch to" '((cl-lib "0.5")) :url "https://github.com/dimitri/switch-window" :keywords '("window" "navigation"))"switch-window"1,0

.cask/24.5.1/elpa/switch-window-20160229.334/switch-window.el,2302
(defgroup switch-window nilswitch-window67,1849
(defcustom switch-window-increase 12switch-window-increase71,1939
(defcustom switch-window-timeout 5switch-window-timeout76,2087
(defcustom switch-window-threshold 2switch-window-threshold81,2222
(defcustom switch-window-relative nilswitch-window-relative86,2361
(defcustom switch-window-shortcut-style 'quailswitch-window-shortcut-style91,2520
(defcustom switch-window-qwerty-shortcutsswitch-window-qwerty-shortcuts98,2821
(defcustom switch-window-minibuffer-shortcut nilswitch-window-minibuffer-shortcut104,3034
(defcustom switch-window-configuration-change-hook-inhibit nilswitch-window-configuration-change-hook-inhibit112,3417
(defun switch-window--list-keyboard-keys ()switch-window--list-keyboard-keys117,3600
(defun switch-window--list-keys ()switch-window--list-keys124,3915
(defun switch-window--enumerate ()switch-window--enumerate136,4449
(defun switch-window--label (num)switch-window--label145,4861
(defun switch-window--list (&optional from-current-window)switch-window--list149,4996
(defun switch-window--display-number (win num)switch-window--display-number156,5282
(defun switch-window--jump-to-window (index)switch-window--jump-to-window176,6183
(defun switch-window--list-eobp ()switch-window--list-eobp183,6414
(defun switch-window--restore-eobp (eobp-window-list)switch-window--restore-eobp191,6745
(defun switch-window-then-delete ()switch-window-then-delete200,7101
(defalias 'delete-other-window 'switch-window-then-delete)delete-other-window209,7337
(defun switch-window-then-maximize ()switch-window-then-maximize214,7519
(defun switch-window ()switch-window224,7790
(defun switch-window-then-split-horizontally (arg)switch-window-then-split-horizontally233,8030
(defun switch-window-then-split-vertically (arg)switch-window-then-split-vertically242,8284
(defun switch-window-then-split-below (arg)switch-window-then-split-below251,8530
(defun switch-window-then-split-right (arg)switch-window-then-split-right260,8781
(defun switch-window-then-swap-buffer (arg)switch-window-then-swap-buffer269,9032
(defun switch-window--then (prompt function1 &optional function2switch-window--then284,9516
(defun switch-window--prompt (prompt-message)switch-window--prompt312,10691

.cask/24.5.1/elpa/theme-looper-20150723.1104/theme-looper-autoloads.el,0

.cask/24.5.1/elpa/theme-looper-20150723.1104/theme-looper-pkg.el,203
(define-package "theme-looper" "20150723.1104" "Loop thru the available color-themes" '((cl-lib "0.5")) :url "http://ismail.teamfluxion.com" :keywords '("convenience" "color-themes"))"theme-looper"1,0

.cask/24.5.1/elpa/theme-looper-20150723.1104/theme-looper.el,988
(defvar theme-looper--favorite-themes)theme-looper--favorite-themes69,2035
(defun theme-looper--further-customizetheme-looper--further-customize71,2075
(defun theme-looper-set-theme-set (themes)theme-looper-set-theme-set75,2139
(defun theme-looper-set-customizations (func)theme-looper-set-customizations81,2295
(defun theme-looper--get-current-theme ()theme-looper--get-current-theme86,2459
(defun theme-looper--get-current-theme-index ()theme-looper--get-current-theme-index90,2576
(defun theme-looper--get-next-theme-index ()theme-looper--get-next-theme-index95,2807
(defun theme-looper--get-next-theme ()theme-looper--get-next-theme109,3245
(defun theme-looper--disable-all-themes ()theme-looper--disable-all-themes114,3418
(defun theme-looper-enable-theme (theme)theme-looper-enable-theme120,3571
(defun theme-looper-enable-next-theme ()theme-looper-enable-next-theme130,3830
(defun theme-looper-enable-random-theme ()theme-looper-enable-random-theme137,4072

.cask/24.5.1/elpa/undo-tree-20140509.522/undo-tree-autoloads.el,66
(defvar global-undo-tree-mode nil "\global-undo-tree-mode29,827

.cask/24.5.1/elpa/undo-tree-20140509.522/undo-tree-pkg.el,203
(define-package "undo-tree" "20140509.522" "Treat undo history as a tree" 'nil :url "http://www.dr-qubit.org/emacs.php" :keywords '("convenience" "files" "undo" "redo" "history" "tree"))"undo-tree"1,0

.cask/24.5.1/elpa/undo-tree-20140509.522/undo-tree.el,13563
(defvar buffer-undo-tree nilbuffer-undo-tree867,34364
(defgroup undo-tree nilundo-tree873,34530
(defcustom undo-tree-mode-lighter " Undo-Tree"undo-tree-mode-lighter877,34591
(defcustom undo-tree-incompatible-major-modes '(term-mode)undo-tree-incompatible-major-modes884,34746
(defcustom undo-tree-enable-undo-in-region tundo-tree-enable-undo-in-region891,34960
(defcustom undo-tree-auto-save-history nilundo-tree-auto-save-history902,35295
(defcustom undo-tree-history-directory-alist nilundo-tree-history-directory-alist927,36275
(defcustom undo-tree-visualizer-relative-timestamps tundo-tree-visualizer-relative-timestamps953,37348
(defcustom undo-tree-visualizer-timestamps nilundo-tree-visualizer-timestamps962,37578
(defcustom undo-tree-visualizer-diff nilundo-tree-visualizer-diff973,37914
(defcustom undo-tree-visualizer-lazy-drawing 100undo-tree-visualizer-lazy-drawing983,38225
(defface undo-tree-visualizer-default-faceundo-tree-visualizer-default-face1008,39212
(defface undo-tree-visualizer-current-faceundo-tree-visualizer-current-face1013,39366
(defface undo-tree-visualizer-active-branch-faceundo-tree-visualizer-active-branch-face1018,39537
(defface undo-tree-visualizer-register-faceundo-tree-visualizer-register-face1026,39836
(defface undo-tree-visualizer-unmodified-faceundo-tree-visualizer-unmodified-face1032,40024
(defvar undo-tree-visualizer-parent-buffer nilundo-tree-visualizer-parent-buffer1039,40219
(defvar undo-tree-visualizer-parent-mtime nil)undo-tree-visualizer-parent-mtime1045,40487
(defvar undo-tree-visualizer-spacing nil)undo-tree-visualizer-spacing1050,40725
(defsubst undo-tree-visualizer-calculate-spacing ()undo-tree-visualizer-calculate-spacing1056,40965
(defvar undo-tree-visualizer-initial-node nil)undo-tree-visualizer-initial-node1062,41180
(defvar undo-tree-visualizer-selected-node nil)undo-tree-visualizer-selected-node1067,41414
(defvar undo-tree-visualizer-needs-extending-down nil)undo-tree-visualizer-needs-extending-down1072,41650
(defvar undo-tree-visualizer-needs-extending-up nil)undo-tree-visualizer-needs-extending-up1075,41845
(defvar undo-tree-inhibit-kill-visualizer nil)undo-tree-inhibit-kill-visualizer1081,42164
(defvar undo-tree-insert-face nil)undo-tree-insert-face1084,42274
(defconst undo-tree-visualizer-buffer-name " *undo-tree*")undo-tree-visualizer-buffer-name1087,42337
(defconst undo-tree-diff-buffer-name "*undo-tree Diff*")undo-tree-diff-buffer-name1088,42396
(defvar undo-tree-map nilundo-tree-map1100,42728
(defvar undo-tree-visualizer-mode-map nilundo-tree-visualizer-mode-map1125,43778
(defvar undo-tree-visualizer-selection-mode-map nilundo-tree-visualizer-selection-mode-map1180,46584
(defvar undo-tree-old-undo-menu-item nil)undo-tree-old-undo-menu-item1229,49017
(defun undo-tree-update-menu-bar ()undo-tree-update-menu-bar1231,49060
(defmacro undo-tree-node-p (n)undo-tree-node-p1310,51435
(defmacro undo-tree-region-data-p (r)undo-tree-region-data-p1331,52017
(defmacro undo-tree-node-clear-region-data (node)undo-tree-node-clear-region-data1335,52156
(defmacro undo-tree-node-undo-beginning (node)undo-tree-node-undo-beginning1343,52356
(defmacro undo-tree-node-undo-end (node)undo-tree-node-undo-end1348,52561
(defmacro undo-tree-node-redo-beginning (node)undo-tree-node-redo-beginning1353,52754
(defmacro undo-tree-node-redo-end (node)undo-tree-node-redo-end1358,52959
(defsetf undo-tree-node-undo-beginning (node) (val)undo-tree-node-undo-beginning1364,53153
(defsetf undo-tree-node-undo-end (node) (val)undo-tree-node-undo-end1372,53522
(defsetf undo-tree-node-redo-beginning (node) (val)undo-tree-node-redo-beginning1380,53879
(defsetf undo-tree-node-redo-end (node) (val)undo-tree-node-redo-end1388,54248
(defmacro undo-tree-visualizer-data-p (v)undo-tree-visualizer-data-p1408,54856
(defun undo-tree-node-clear-visualizer-data (node)undo-tree-node-clear-visualizer-data1412,55003
(defmacro undo-tree-node-lwidth (node)undo-tree-node-lwidth1420,55338
(defmacro undo-tree-node-cwidth (node)undo-tree-node-cwidth1425,55539
(defmacro undo-tree-node-rwidth (node)undo-tree-node-rwidth1430,55740
(defmacro undo-tree-node-marker (node)undo-tree-node-marker1435,55941
(defsetf undo-tree-node-lwidth (node) (val)undo-tree-node-lwidth1441,56143
(defsetf undo-tree-node-cwidth (node) (val)undo-tree-node-cwidth1449,56516
(defsetf undo-tree-node-rwidth (node) (val)undo-tree-node-rwidth1457,56889
(defsetf undo-tree-node-marker (node) (val)undo-tree-node-marker1465,57262
(defun undo-tree-register-data-p (data)undo-tree-register-data-p1482,57793
(defun undo-tree-register-data-print-func (data)undo-tree-register-data-print-func1487,57947
(defmacro undo-tree-node-register (node)undo-tree-node-register1491,58093
(defsetf undo-tree-node-register (node) (val)undo-tree-node-register1494,58194
(defun undo-tree-grow (undo)undo-tree-grow1504,58484
(defun undo-tree-grow-backwards (node undo &optional redo)undo-tree-grow-backwards1512,58783
(defun undo-tree-splice-node (node splice)undo-tree-splice-node1522,59183
(defun undo-tree-snip-node (node)undo-tree-snip-node1536,59780
(defun undo-tree-mapc (--undo-tree-mapc-function-- node)undo-tree-mapc1569,61252
(defmacro undo-tree-num-branches ()undo-tree-num-branches1579,61549
(defun undo-tree-position (node list)undo-tree-position1584,61716
(defvar *undo-tree-id-counter* 0)*undo-tree-id-counter*1597,62083
(defmacro undo-tree-generate-id ()undo-tree-generate-id1600,62171
(defun undo-tree-decircle (undo-tree)undo-tree-decircle1608,62491
(defun undo-tree-recircle (undo-tree)undo-tree-recircle1618,62791
(defmacro undo-list-marker-elt-p (elt)undo-list-marker-elt-p1633,63233
(defmacro undo-list-GCd-marker-elt-p (elt)undo-list-GCd-marker-elt-p1636,63303
(defun undo-tree-move-GC-elts-to-pool (elt)undo-tree-move-GC-elts-to-pool1651,63986
(defun undo-tree-restore-GC-elts-from-pool (elt)undo-tree-restore-GC-elts-from-pool1661,64415
(defun undo-list-clean-GCd-elts (undo-list)undo-list-clean-GCd-elts1672,64805
(defun undo-list-pop-changeset (&optional discard-pos)undo-list-pop-changeset1689,65410
(defun undo-tree-copy-list (undo-list)undo-tree-copy-list1715,66485
(defun undo-list-transfer-to-tree ()undo-list-transfer-to-tree1738,67326
(defun undo-list-byte-size (undo-list)undo-list-byte-size1790,69745
(defun undo-list-rebuild-from-tree ()undo-list-rebuild-from-tree1802,70055
(defun undo-tree-oldest-leaf (node)undo-tree-oldest-leaf1844,71440
(defun undo-tree-discard-node (node)undo-tree-discard-node1855,71816
(defun undo-tree-discard-history ()undo-tree-discard-history1928,74937
(defun undo-tree-compute-widths (node)undo-tree-compute-widths2014,78631
(defun undo-tree-node-compute-widths (node)undo-tree-node-compute-widths2032,79365
(defun undo-tree-clear-visualizer-data (tree)undo-tree-clear-visualizer-data2101,82256
(defun undo-tree-node-unmodified-p (node &optional mtime)undo-tree-node-unmodified-p2108,82445
(defvar undo-adjusted-markers nil)undo-adjusted-markers2138,83499
(defun undo-tree-pull-undo-in-region-branch (start end)undo-tree-pull-undo-in-region-branch2141,83536
(defun undo-tree-pull-redo-in-region-branch (start end)undo-tree-pull-redo-in-region-branch2375,93457
(defun undo-tree-adjust-elements-to-elt (node undo-elt &optional below)undo-tree-adjust-elements-to-elt2537,100209
(defun undo-tree-apply-deltas (undo-elt deltas &optional sgn)undo-tree-apply-deltas2561,101222
(defun undo-tree-repeated-undo-in-region-p (start end)undo-tree-repeated-undo-in-region-p2598,102402
(defun undo-tree-repeated-redo-in-region-p (start end)undo-tree-repeated-redo-in-region-p2608,102792
(defalias 'undo-tree-reverting-undo-in-region-pundo-tree-reverting-undo-in-region-p2618,103203
(defalias 'undo-tree-reverting-redo-in-region-pundo-tree-reverting-redo-in-region-p2624,103398
(define-minor-mode undo-tree-modeundo-tree-mode2634,103627
(defun turn-on-undo-tree-mode (&optional print-message)turn-on-undo-tree-mode2663,104477
(defun undo-tree-overridden-undo-bindings-p ()undo-tree-overridden-undo-bindings-p2688,105551
(define-globalized-minor-mode global-undo-tree-modeglobal-undo-tree-mode2708,106347
(defun undo-tree-undo (&optional arg)undo-tree-undo2713,106443
(defun undo-tree-undo-1 (&optional arg preserve-redo preserve-timestamps)undo-tree-undo-12731,107102
(defun undo-tree-redo (&optional arg)undo-tree-redo2822,111265
(defun undo-tree-redo-1 (&optional arg preserve-undo preserve-timestamps)undo-tree-redo-12838,111882
(defun undo-tree-switch-branch (branch)undo-tree-switch-branch2930,116016
(defun undo-tree-set (node &optional preserve-timestamps)undo-tree-set2965,117358
(defun undo-tree-save-state-to-register (register)undo-tree-save-state-to-register2999,119030
(defun undo-tree-restore-state-from-register (register)undo-tree-restore-state-from-register3022,119917
(defun undo-tree-make-history-save-file-name (file)undo-tree-make-history-save-file-name3048,121062
(defun undo-tree-save-history (&optional filename overwrite)undo-tree-save-history3062,121639
(defun undo-tree-load-history (&optional filename noerror)undo-tree-load-history3116,123665
(defun undo-tree-save-history-hook ()undo-tree-save-history-hook3176,125702
(defun undo-tree-load-history-hook ()undo-tree-load-history-hook3181,125875
(defun undo-tree-visualize ()undo-tree-visualize3193,126215
(defun undo-tree-kill-visualizer (&rest _dummy)undo-tree-kill-visualizer3232,127997
(defun undo-tree-draw-tree (undo-tree)undo-tree-draw-tree3242,128366
(defun undo-tree-extend-down (node &optional bottom)undo-tree-extend-down3291,130504
(defun undo-tree-extend-up (node &optional top)undo-tree-extend-up3334,132208
(defun undo-tree-expand-down (from &optional to)undo-tree-expand-down3387,134438
(defun undo-tree-expand-up (from &optional to)undo-tree-expand-up3412,135482
(defun undo-tree-highlight-active-branch (node &optional end)undo-tree-highlight-active-branch3449,137076
(defun undo-tree-draw-node (node &optional current)undo-tree-draw-node3463,137577
(defun undo-tree-draw-subtree (node &optional active-branch)undo-tree-draw-subtree3517,139682
(defun undo-tree-node-char-lwidth (node)undo-tree-node-char-lwidth3648,145147
(defun undo-tree-node-char-rwidth (node)undo-tree-node-char-rwidth3656,145473
(defun undo-tree-insert (str &optional arg)undo-tree-insert3664,145800
(defun undo-tree-move-down (&optional arg)undo-tree-move-down3682,146463
(defun undo-tree-move-up (&optional arg)undo-tree-move-up3700,147019
(defun undo-tree-move-forward (&optional arg)undo-tree-move-forward3706,147168
(defun undo-tree-move-backward (&optional arg)undo-tree-move-backward3732,147951
(defun undo-tree-move-to-parent (node)undo-tree-move-to-parent3738,148115
(defun undo-tree-timestamp-to-stringundo-tree-timestamp-to-string3787,149766
(defun undo-tree-visualize-undo (&optional arg)undo-tree-visualize-undo3857,151808
(defun undo-tree-visualize-redo (&optional arg)undo-tree-visualize-redo3882,152881
(defun undo-tree-visualize-switch-branch-right (arg)undo-tree-visualize-switch-branch-right3907,153991
(defun undo-tree-visualize-switch-branch-left (arg)undo-tree-visualize-switch-branch-left3934,155299
(defun undo-tree-visualizer-quit ()undo-tree-visualizer-quit3942,155593
(defun undo-tree-visualizer-abort ()undo-tree-visualizer-abort3963,156334
(defun undo-tree-visualizer-set (&optional pos)undo-tree-visualizer-set3971,156569
(defun undo-tree-visualizer-mouse-set (pos)undo-tree-visualizer-mouse-set3987,157289
(defun undo-tree-visualize-undo-to-x (&optional x)undo-tree-visualize-undo-to-x3994,157488
(defun undo-tree-visualize-redo-to-x (&optional x)undo-tree-visualize-redo-to-x4046,159395
(defun undo-tree-visualizer-toggle-timestamps ()undo-tree-visualizer-toggle-timestamps4098,161294
(defun undo-tree-visualizer-scroll-left (&optional arg)undo-tree-visualizer-scroll-left4107,161643
(defun undo-tree-visualizer-scroll-right (&optional arg)undo-tree-visualizer-scroll-right4112,161751
(defun undo-tree-visualizer-scroll-up (&optional arg)undo-tree-visualizer-scroll-up4117,161861
(defun undo-tree-visualizer-scroll-down (&optional arg)undo-tree-visualizer-scroll-down4132,162429
(define-minor-mode undo-tree-visualizer-selection-modeundo-tree-visualizer-selection-mode4160,163466
(defun undo-tree-visualizer-select-previous (&optional arg)undo-tree-visualizer-select-previous4184,164384
(defun undo-tree-visualizer-select-next (&optional arg)undo-tree-visualizer-select-next4204,165179
(defun undo-tree-visualizer-select-right (&optional arg)undo-tree-visualizer-select-right4226,166048
(defun undo-tree-visualizer-select-left (&optional arg)undo-tree-visualizer-select-left4247,166862
(defun undo-tree-visualizer-select (pos)undo-tree-visualizer-select4268,167690
(defun undo-tree-visualizer-mouse-select (pos)undo-tree-visualizer-mouse-select4286,168394
(defun undo-tree-visualizer-toggle-diff ()undo-tree-visualizer-toggle-diff4297,168696
(defun undo-tree-visualizer-selection-toggle-diff ()undo-tree-visualizer-selection-toggle-diff4305,168916
(defun undo-tree-visualizer-show-diff (&optional node)undo-tree-visualizer-show-diff4314,169243
(defun undo-tree-visualizer-hide-diff ()undo-tree-visualizer-hide-diff4326,169623
(defun undo-tree-diff (&optional node)undo-tree-diff4333,169870
(defun undo-tree-visualizer-update-diff (&optional node)undo-tree-visualizer-update-diff4360,170886

.cask/24.5.1/elpa/ztree-20160127.1542/ztree-autoloads.el,0

.cask/24.5.1/elpa/ztree-20160127.1542/ztree-diff-model.el,2168
(defvar-local ztree-diff-model-ignore-fun nilztree-diff-model-ignore-fun36,1126
(defvar-local ztree-diff-model-progress-fun nilztree-diff-model-progress-fun39,1252
(defun ztree-diff-model-update-progress ()ztree-diff-model-update-progress43,1385
(defun ztree-diff-model-ignore-p (node)ztree-diff-model-ignore-p70,2592
(defun ztree-diff-node-to-string (node)ztree-diff-node-to-string75,2788
(defun ztree-diff-node-short-name-wrapper (node &optional right-side)ztree-diff-node-short-name-wrapper105,4233
(defun ztree-diff-node-is-directory (node)ztree-diff-node-is-directory113,4506
(defun ztree-diff-node-side (node)ztree-diff-node-side121,4771
(defun ztree-diff-node-equal (node1 node2)ztree-diff-node-equal132,5143
(defun ztree-diff-untrampify-filename (file)ztree-diff-untrampify-filename141,5571
(defun ztree-diff-modef-quotify-string (x)ztree-diff-modef-quotify-string152,6041
(defun ztree-diff-model-files-equal (file1 file2)ztree-diff-model-files-equal156,6144
(defun ztree-directory-files (dir)ztree-directory-files169,6875
(defun ztree-diff-model-partial-rescan (node)ztree-diff-model-partial-rescan177,7279
(defun ztree-diff-model-subtree (parent path side diff)ztree-diff-model-subtree197,8192
(defun ztree-diff-node-update-diff-from-children (node)ztree-diff-node-update-diff-from-children221,9132
(defun ztree-diff-node-update-all-parents-diff (node)ztree-diff-node-update-all-parents-diff230,9587
(defun ztree-diff-model-update-diff (old new)ztree-diff-model-update-diff237,9844
(defun ztree-diff-node-update-diff-from-parent (node)ztree-diff-node-update-diff-from-parent252,10440
(defun ztree-diff-model-find-in-files (list shortname is-dir)ztree-diff-model-find-in-files271,11308
(defun ztree-diff-model-should-ignore (node)ztree-diff-model-should-ignore280,11702
(defun ztree-diff-node-recreate (node)ztree-diff-node-recreate291,12081
(defun ztree-diff-model-update-node (node)ztree-diff-model-update-node376,16344
(defun ztree-diff-model-set-ignore-fun (ignore-p)ztree-diff-model-set-ignore-fun382,16447
(defun ztree-diff-model-set-progress-fun (progess-fun)ztree-diff-model-set-progress-fun389,16745

.cask/24.5.1/elpa/ztree-20160127.1542/ztree-diff.el,3243
(defconst ztree-diff-hidden-files-regexp "^\\."ztree-diff-hidden-files-regexp34,1099
(defface ztreep-diff-header-faceztreep-diff-header-face38,1238
(defvar ztreep-diff-header-face 'ztreep-diff-header-face)ztreep-diff-header-face44,1589
(defface ztreep-diff-header-small-faceztreep-diff-header-small-face46,1648
(defvar ztreep-diff-header-small-face 'ztreep-diff-header-small-face)ztreep-diff-header-small-face52,1981
(defface ztreep-diff-model-diff-faceztreep-diff-model-diff-face54,2052
(defvar ztreep-diff-model-diff-face 'ztreep-diff-model-diff-face)ztreep-diff-model-diff-face58,2245
(defface ztreep-diff-model-add-faceztreep-diff-model-add-face60,2312
(defvar ztreep-diff-model-add-face 'ztreep-diff-model-add-face)ztreep-diff-model-add-face64,2501
(defface ztreep-diff-model-ignored-faceztreep-diff-model-ignored-face66,2566
(defvar ztreep-diff-model-ignored-face 'ztreep-diff-model-ignored-face)ztreep-diff-model-ignored-face72,2935
(defface ztreep-diff-model-normal-faceztreep-diff-model-normal-face74,3008
(defvar ztreep-diff-model-normal-face 'ztreep-diff-model-normal-face)ztreep-diff-model-normal-face79,3281
(defvar-local ztree-diff-filter-list (list ztree-diff-hidden-files-regexp)ztree-diff-filter-list82,3353
(defvar-local ztree-diff-dirs-pair nilztree-diff-dirs-pair86,3534
(defvar-local ztree-diff-show-equal-files tztree-diff-show-equal-files89,3645
(defvar-local ztree-diff-show-filtered-files nilztree-diff-show-filtered-files92,3746
(defvar-local ztree-diff-wait-message nilztree-diff-wait-message95,3843
(define-minor-mode ztreediff-modeztreediff-mode100,3957
(defun ztree-diff-node-face (node)ztree-diff-node-face119,4564
(defun ztree-diff-insert-buffer-header ()ztree-diff-insert-buffer-header127,4941
(defun ztree-diff-full-rescan ()ztree-diff-full-rescan156,6311
(defun ztree-diff-existing-common (node)ztree-diff-existing-common165,6574
(defun ztree-diff-existing-common-parent (node)ztree-diff-existing-common-parent175,6891
(defun ztree-diff-do-partial-rescan (node)ztree-diff-do-partial-rescan182,7176
(defun ztree-diff-partial-rescan ()ztree-diff-partial-rescan196,7730
(defun ztree-diff-simple-diff (node)ztree-diff-simple-diff204,7944
(defun ztree-diff-simple-diff-files ()ztree-diff-simple-diff-files219,8499
(defun ztree-diff-node-action (node hard)ztree-diff-node-action227,8759
(defun ztree-diff-copy-file (node source-path destination-path copy-to-right)ztree-diff-copy-file254,9791
(defun ztree-diff-copy-dir (node source-path destination-path copy-to-right)ztree-diff-copy-dir284,11169
(defun ztree-diff-copy ()ztree-diff-copy321,12824
(defun ztree-diff-view-file ()ztree-diff-view-file367,15135
(defun ztree-diff-delete-file ()ztree-diff-delete-file387,15832
(defun ztree-diff-node-ignore-p (node)ztree-diff-node-ignore-p459,19256
(defun ztree-node-is-visible (node)ztree-node-is-visible470,19664
(defun ztree-diff-toggle-show-equal-files ()ztree-diff-toggle-show-equal-files486,20305
(defun ztree-diff-toggle-show-filtered-files ()ztree-diff-toggle-show-filtered-files493,20589
(defun ztree-diff-update-wait-message (&optional msg)ztree-diff-update-wait-message501,20892
(defun ztree-diff (dir1 dir2)ztree-diff510,21226

.cask/24.5.1/elpa/ztree-20160127.1542/ztree-dir.el,849
(defconst ztree-hidden-files-regexp "^\\."ztree-hidden-files-regexp54,1492
(defvar ztree-dir-move-focus nilztree-dir-move-focus62,1660
(defvar-local ztree-dir-filter-list (list ztree-hidden-files-regexp)ztree-dir-filter-list66,1783
(defvar-local ztree-dir-show-filtered-files nilztree-dir-show-filtered-files74,2089
(defface ztreep-header-faceztreep-header-face82,2202
(defvar ztreep-header-face 'ztreep-header-face)ztreep-header-face88,2538
(define-minor-mode ztreedir-modeztreedir-mode91,2588
(defun ztree-insert-buffer-header ()ztree-insert-buffer-header108,2888
(defun ztree-file-not-hidden (filename)ztree-file-not-hidden117,3157
(defun ztree-find-file (node hard)ztree-find-file126,3514
(defun ztree-dir-toggle-show-filtered-files ()ztree-dir-toggle-show-filtered-files140,3955
(defun ztree-dir (path)ztree-dir151,4271

.cask/24.5.1/elpa/ztree-20160127.1542/ztree-pkg.el,79
(define-package "ztree" "20160127.1542" "Text mode directory tree""ztree"1,0

.cask/24.5.1/elpa/ztree-20160127.1542/ztree-util.el,366
(defun ztree-find (where which)ztree-find31,1055
(defun ztree-filter (condp lst)ztree-filter39,1260
(defun ztree-printable-string (string)ztree-printable-string46,1502
(defun ztree-file-short-name (file)ztree-file-short-name51,1683
(defun ztree-car-atom (value)ztree-car-atom56,1935
(defun ztree-insert-with-face (text face)ztree-insert-with-face62,2118

.cask/24.5.1/elpa/ztree-20160127.1542/ztree-view.el,4369
(defvar ztree-draw-unicode-lines nilztree-draw-unicode-lines51,1347
(defvar-local ztree-expanded-nodes-list nilztree-expanded-nodes-list54,1449
(defvar-local ztree-start-node nilztree-start-node57,1552
(defvar-local ztree-line-to-node-table nilztree-line-to-node-table60,1636
(defvar-local ztree-start-line nilztree-start-line63,1754
(defvar-local ztree-parent-lines-array nilztree-parent-lines-array66,1831
(defvar-local ztree-count-subsequent-bs nilztree-count-subsequent-bs71,2001
(defvar-local ztree-line-tree-properties nilztree-line-tree-properties75,2168
(defvar-local ztree-tree-header-fun nilztree-tree-header-fun80,2375
(defvar-local ztree-node-short-name-fun nilztree-node-short-name-fun84,2505
(defvar-local ztree-node-is-expandable-fun nilztree-node-is-expandable-fun87,2625
(defvar-local ztree-node-equal-fun nilztree-node-equal-fun91,2770
(defvar-local ztree-node-contents-fun nilztree-node-contents-fun94,2867
(defvar-local ztree-node-side-fun nilztree-node-side-fun97,2957
(defvar-local ztree-node-face-fun nilztree-node-face-fun102,3162
(defvar-local ztree-node-action-fun nilztree-node-action-fun105,3244
(defvar-local ztree-node-showp-fun nilztree-node-showp-fun108,3344
(defvar ztree-mode-mapztree-mode-map116,3480
(defface ztreep-node-faceztreep-node-face131,4061
(defvar ztreep-node-face 'ztreep-node-face)ztreep-node-face137,4378
(defface ztreep-leaf-faceztreep-leaf-face139,4423
(defvar ztreep-leaf-face 'ztreep-leaf-face)ztreep-leaf-face145,4746
(defface ztreep-arrow-faceztreep-arrow-face147,4791
(defvar ztreep-arrow-face 'ztreep-arrow-face)ztreep-arrow-face152,5016
(defface ztreep-expand-sign-faceztreep-expand-sign-face154,5063
(defvar ztreep-expand-sign-face 'ztreep-expand-sign-face)ztreep-expand-sign-face159,5303
(define-derived-mode ztree-mode special-mode "Ztree"ztree-mode163,5378
(defun ztree-find-node-in-line (line)ztree-find-node-in-line170,5574
(defun ztree-find-node-at-point ()ztree-find-node-at-point175,5745
(defun ztree-is-expanded-node (node)ztree-is-expanded-node185,6073
(defun ztree-set-parent-for-line (line parent)ztree-set-parent-for-line191,6276
(defun ztree-get-parent-for-line (line)ztree-get-parent-for-line195,6447
(defun scroll-to-line (line)scroll-to-line201,6706
(defun ztree-do-toggle-expand-subtree-iter (node state)ztree-do-toggle-expand-subtree-iter207,6848
(defun ztree-do-toggle-expand-subtree ()ztree-do-toggle-expand-subtree218,7251
(defun ztree-do-perform-action (hard)ztree-do-perform-action235,7954
(defun ztree-perform-action ()ztree-perform-action256,8790
(defun ztree-perform-soft-action ()ztree-perform-soft-action262,8986
(defun ztree-toggle-expand-subtree()ztree-toggle-expand-subtree269,9192
(defun ztree-do-toggle-expand-state (node do-expand)ztree-do-toggle-expand-state274,9346
(defun ztree-toggle-expand-state (node)ztree-toggle-expand-state284,9697
(defun ztree-move-up-in-tree ()ztree-move-up-in-tree289,9860
(defun ztree-get-splitted-node-contens (node)ztree-get-splitted-node-contens309,10640
(defun ztree-draw-char (c x y &optional face)ztree-draw-char326,11360
(defun ztree-vertical-line-char ()ztree-vertical-line-char337,11751
(defun ztree-horizontal-line-char ()ztree-horizontal-line-char341,11883
(defun ztree-left-bottom-corner-char ()ztree-left-bottom-corner-char345,12017
(defun ztree-left-intersection-char ()ztree-left-intersection-char349,12154
(defun ztree-draw-vertical-line (y1 y2 x &optional face)ztree-draw-vertical-line354,12324
(defun ztree-draw-vertical-rounded-line (y1 y2 x &optional face)ztree-draw-vertical-rounded-line369,12936
(defun ztree-draw-horizontal-line (x1 x2 y)ztree-draw-horizontal-line387,13657
(defun ztree-draw-tree (tree depth start-offset)ztree-draw-tree397,14018
(defun ztree-fill-parent-array (tree)ztree-fill-parent-array451,16611
(defun ztree-insert-node-contents (path)ztree-insert-node-contents462,16958
(defun ztree-insert-node-contents-1 (node depth)ztree-insert-node-contents-1493,18413
(defun ztree-insert-entry (node depth expanded)ztree-insert-entry526,20002
(defun ztree-insert-single-entry (short-name depthztree-insert-single-entry551,21370
(defun ztree-jump-side ()ztree-jump-side588,23164
(defun ztree-refresh-buffer (&optional line)ztree-refresh-buffer601,23531
(defun ztree-view (ztree-view620,24241

.cask/24.5.1/elpa/ztree-20160127.1542/ztree.el,0

anaconda-mode/0.1.2/anaconda_mode.py,815
import syssys14,286
from functools import wrapswraps15,297
from jedi import Script, NotFoundErrorScript17,326
from jedi import Script, NotFoundErrorNotFoundError17,326
from service_factory import service_factoryservice_factory18,365
def script_method(f):script_method21,411
    def wrapper(source, line, column, path):wrapper25,505
def process_definitions(f):process_definitions34,694
    def wrapper(script):wrapper38,803
def complete(script):complete58,1519
def goto_definitions(script):goto_definitions66,1675
def goto_assignments(script):goto_assignments74,1831
def usages(script):usages82,1987
def eldoc(script):eldoc89,2108
app = [complete, goto_definitions, goto_assignments, usages, eldoc]app102,2466
    host = sys.argv[1] if len(sys.argv) == 2 else '127.0.0.1'host106,2563

anaconda-mode/0.1.2/jedi/__init__.py,706
__version__ = '0.9.0'__version__39,1457
from jedi.api import Script, Interpreter, NotFoundError, set_debug_functionScript41,1480
from jedi.api import Script, Interpreter, NotFoundError, set_debug_functionInterpreter41,1480
from jedi.api import Script, Interpreter, NotFoundError, set_debug_functionNotFoundError41,1480
from jedi.api import Script, Interpreter, NotFoundError, set_debug_functionset_debug_function41,1480
from jedi.api import preload_module, defined_names, namespreload_module42,1556
from jedi.api import preload_module, defined_names, namesdefined_names42,1556
from jedi.api import preload_module, defined_names, namesnames42,1556
from jedi import settingssettings43,1614

anaconda-mode/0.1.2/jedi/__main__.py,520
from sys import argvargv1,0
from os.path import join, dirname, abspath, isdirjoin2,21
from os.path import join, dirname, abspath, isdirdirname2,21
from os.path import join, dirname, abspath, isdirabspath2,21
from os.path import join, dirname, abspath, isdirisdir2,21
    import jedijedi14,506
    import syssys15,522
            import fnmatchfnmatch24,712
            import osos25,739
            paths = []paths27,762
            paths = [path]paths32,989
                import pdbpdb40,1221

anaconda-mode/0.1.2/jedi/_compatibility.py,1885
import syssys5,143
import impimp6,154
import osos7,165
import rere8,175
    import importlibimportlib10,190
is_py26 = not is_py3 and sys.version_info[1] < 7is_py2616,324
def find_module_py33(string, path=None):find_module_py3319,375
def find_module_pre_py33(string, path=None):find_module_pre_py3356,1706
find_module = find_module_py33 if is_py33 else find_module_pre_py33find_module62,1930
    unicode = unicodeunicode76,2437
    unicode = strunicode78,2477
    u = lambda s: su81,2507
    u = lambda s: s.decode('utf-8')u83,2533
    def exec_function(source, global_map):exec_function91,2684
    def reraise(exception, traceback):reraise99,2929
class Python3Method(object):Python3Method116,3268
    def __init__(self, func):__init__117,3297
    def __get__(self, obj, objtype):__get__120,3353
def use_metaclass(meta, *bases):use_metaclass127,3575
    encoding = sys.stdout.encodingencoding135,3744
        encoding = 'utf-8'encoding137,3804
    encoding = 'ascii'encoding139,3854
def u(string):u142,3879
    import builtins  # module name in python 3builtins155,4294
    import builtins  # module name in python 3module155,4294
    import builtins  # module name in python 3name155,4294
    import builtins  # module name in python 3in155,4294
    import builtins  # module name in python 3python155,4294
    import __builtin__ as builtinsbuiltins157,4361
import astast160,4398
def literal_eval(string):literal_eval163,4411
    from itertools import zip_longestzip_longest173,4734
    from itertools import izip_longest as zip_longest  # Python 2zip_longest175,4792
    from itertools import izip_longest as zip_longest  # Python 2Python175,4792
def no_unicode_pprint(dct):no_unicode_pprint178,4860
    import pprintpprint185,5163
def utf8_repr(func):utf8_repr190,5243
    def wrapper(self):wrapper195,5419

anaconda-mode/0.1.2/jedi/api/__init__.py,3814
import rere9,242
import osos10,252
import warningswarnings11,262
import syssys12,278
from itertools import chainchain13,289
from jedi._compatibility import unicode, builtinsunicode15,318
from jedi._compatibility import unicode, builtinsbuiltins15,318
from jedi.parser import Parser, load_grammarParser16,368
from jedi.parser import Parser, load_grammarload_grammar16,368
from jedi.parser.tokenize import source_tokenssource_tokens17,413
from jedi.parser import treetree18,460
from jedi.parser.user_context import UserContext, UserContextParserUserContext19,489
from jedi.parser.user_context import UserContext, UserContextParserUserContextParser19,489
from jedi import debugdebug20,557
from jedi import settingssettings21,580
from jedi import commoncommon22,606
from jedi import cachecache23,630
from jedi.api import keywordskeywords24,653
from jedi.api import classesclasses25,683
from jedi.api import interpreterinterpreter26,712
from jedi.api import usagesusages27,745
from jedi.api import helpershelpers28,773
from jedi.evaluate import EvaluatorEvaluator29,802
from jedi.evaluate import representation as erer30,838
from jedi.evaluate import compiledcompiled31,885
from jedi.evaluate import importsimports32,920
from jedi.evaluate.cache import memoize_defaultmemoize_default33,954
from jedi.evaluate.helpers import FakeName, get_module_namesFakeName34,1002
from jedi.evaluate.helpers import FakeName, get_module_namesget_module_names34,1002
from jedi.evaluate.finder import global_names_dict_generator, filter_definition_namesglobal_names_dict_generator35,1063
from jedi.evaluate.finder import global_names_dict_generator, filter_definition_namesfilter_definition_names35,1063
from jedi.evaluate import analysisanalysis36,1149
class NotFoundError(Exception):NotFoundError43,1347
class Script(object):Script53,1598
    def __init__(self, source=None, line=None, column=None, path=None,__init__77,2557
    def _parsed_callback(self, parser):_parsed_callback115,4248
    def source_path(self):source_path120,4430
    def __repr__(self):__repr__129,4679
    def completions(self):completions132,4781
        def get_completions(user_stmt, bs):get_completions140,5095
    def _simple_complete(self, path, dot, like):_simple_complete231,9403
    def _prepare_goto(self, goto_path, is_completion=False):_prepare_goto261,10706
    def _get_under_cursor_stmt(self, cursor_txt, start_pos=None):_get_under_cursor_stmt299,12211
    def goto_definitions(self):goto_definitions322,13155
        def resolve_import_paths(scopes):resolve_import_paths334,13787
    def goto_assignments(self):goto_assignments369,15427
    def _goto(self, add_import_name=False):_goto382,15960
        def follow_inexistent_imports(defs):follow_inexistent_imports388,16151
    def usages(self, additional_module_paths=()):usages449,18724
    def call_signatures(self):call_signatures495,20678
    def _analysis(self):_analysis527,21748
        def check_types(types):check_types528,21773
class Interpreter(Script):Interpreter553,22741
    def __init__(self, source, namespaces, **kwds):__init__569,23189
    def _simple_complete(self, path, dot, like):_simple_complete600,24644
            class NamespaceModule(object):NamespaceModule606,24986
                def __getattr__(_, name):__getattr__607,25029
                def __dir__(_):__dir__615,25307
def defined_names(source, path=None, encoding='utf-8'):defined_names640,26204
def names(source=None, path=None, encoding='utf-8', all_scopes=False,names660,26872
    def def_ref_filter(_def):def_ref_filter676,27647
def preload_module(*modules):preload_module687,28159
def set_debug_function(func_cb=debug.print_to_stdout, warnings=True,set_debug_function699,28533

anaconda-mode/0.1.2/jedi/api/classes.py,3728
import warningswarnings6,227
from itertools import chainchain7,243
import rere8,271
from jedi._compatibility import unicode, use_metaclassunicode10,282
from jedi._compatibility import unicode, use_metaclassuse_metaclass10,282
from jedi import settingssettings11,337
from jedi import commoncommon12,363
from jedi.parser import treetree13,387
from jedi.evaluate.cache import memoize_default, CachedMetaClassmemoize_default14,416
from jedi.evaluate.cache import memoize_default, CachedMetaClassCachedMetaClass14,416
from jedi.evaluate import representation as erer15,481
from jedi.evaluate import iterableiterable16,528
from jedi.evaluate import importsimports17,563
from jedi.evaluate import compiledcompiled18,597
from jedi.api import keywordskeywords19,632
from jedi.evaluate.finder import filter_definition_namesfilter_definition_names20,662
def defined_names(evaluator, scope):defined_names23,721
class BaseDefinition(object):BaseDefinition36,1099
    _mapping = {_mapping37,1129
    _tuple_mapping = dict((tuple(k.split('.')), v) for (k, v) in {_tuple_mapping52,1505
    def __init__(self, evaluator, name):__init__58,1743
    def name(self):name76,2415
    def start_pos(self):start_pos87,2645
    def type(self):type97,2929
    def _path(self):_path164,4923
    def module_name(self):module_name188,5766
    def in_builtin_module(self):in_builtin_module201,6142
    def line(self):line206,6303
    def column(self):column213,6508
    def docstring(self, raw=False):docstring219,6703
    def doc(self):doc251,7649
    def raw_doc(self):raw_doc261,7908
    def description(self):description271,8179
    def full_name(self):full_name276,8307
    def goto_assignments(self):goto_assignments311,9459
    def _follow_statements_imports(self):_follow_statements_imports316,9625
    def params(self):params329,10102
    def parent(self):parent354,11082
    def __repr__(self):__repr__359,11256
class Completion(BaseDefinition):Completion363,11349
    def __init__(self, evaluator, name, needs_dot, like_name_length):__init__368,11534
    def _complete(self, like_name):_complete378,11909
    def complete(self):complete397,12492
    def name_with_symbols(self):name_with_symbols409,12814
    def description(self):description421,13120
    def __repr__(self):__repr__434,13572
    def docstring(self, raw=False, fast=True):docstring437,13659
    def type(self):type460,14646
    def _follow_statements_imports(self):_follow_statements_imports479,15396
    def follow_definition(self):follow_definition489,15821
class Definition(use_metaclass(CachedMetaClass, BaseDefinition)):Definition502,16414
    def __init__(self, evaluator, definition):__init__507,16619
    def description(self):description511,16745
    def desc_with_module(self):desc_with_module579,19122
    def defined_names(self):defined_names593,19645
    def is_definition(self):is_definition606,20149
    def __eq__(self, other):__eq__613,20388
    def __ne__(self, other):__ne__619,20631
    def __hash__(self):__hash__622,20699
class CallSignature(Definition):CallSignature626,20815
    def __init__(self, evaluator, executable_name, call_stmt, index, key_name):__init__632,21095
    def index(self):index639,21360
    def bracket_start(self):bracket_start663,22124
    def call_name(self):call_name671,22321
    def module(self):module683,22627
    def __repr__(self):__repr__691,22838
class _Param(Definition):_Param696,22985
    def get_code(self):get_code700,23070
class _Help(object):_Help712,23397
    def __init__(self, definition):__init__717,23527
    def full(self):full720,23596
    def raw(self):raw726,23725

anaconda-mode/0.1.2/jedi/api/helpers.py,556
import rere4,28
from jedi.parser import tree as ptpt6,39
from jedi.evaluate import importsimports7,74
def completion_parts(path_until_cursor):completion_parts10,110
def sorted_definitions(defs):sorted_definitions19,356
def get_on_import_stmt(evaluator, user_context, user_stmt, is_like_search=False):get_on_import_stmt24,546
def check_error_statements(module, pos):check_error_statements37,926
def importer_from_error_statement(error_statement, pos):importer_from_error_statement45,1292
    def check_dotted(children):check_dotted46,1349

anaconda-mode/0.1.2/jedi/api/interpreter.py,1071
import inspectinspect4,70
import rere5,85
from jedi._compatibility import builtinsbuiltins7,96
from jedi import debugdebug8,137
from jedi.common import source_to_unicodesource_to_unicode9,160
from jedi.cache import underscore_memoizationunderscore_memoization10,202
from jedi.evaluate import compiledcompiled11,248
from jedi.evaluate.compiled.fake import get_moduleget_module12,283
from jedi.parser import tree as ptpt13,334
from jedi.parser import load_grammarload_grammar14,369
from jedi.parser.fast import FastParserFastParser15,406
from jedi.evaluate import helpershelpers16,446
from jedi.evaluate import iterableiterable17,480
from jedi.evaluate import representation as erer18,515
def add_namespaces_to_parser(evaluator, namespaces, parser_module):add_namespaces_to_parser21,564
class LazyName(helpers.FakeName):LazyName30,988
    def __init__(self, evaluator, module, name, value):__init__31,1022
    def is_definition(self):is_definition38,1244
    def parent(self):parent43,1336
    def parent(self, value):parent108,3619

anaconda-mode/0.1.2/jedi/api/keywords.py,941
import pydocpydoc1,0
import keywordkeyword2,13
from jedi._compatibility import is_py3is_py34,29
from jedi import commoncommon5,68
from jedi.evaluate import compiledcompiled6,92
from jedi.evaluate.helpers import FakeNameFakeName7,127
    from pydoc_data import topics as pydoc_topicspydoc_topics10,176
    import pydoc_topicspydoc_topics13,263
    keys = keyword.kwlistkeys16,299
    keys = keyword.kwlist + ['None', 'False', 'True']keys18,331
def keywords(string='', pos=(0, 0), all=False):keywords21,387
def keyword_names(*args, **kwargs):keyword_names29,584
def get_operator(string, pos):get_operator33,677
class Keyword(object):Keyword37,742
    def __init__(self, name, pos):__init__38,765
    def get_parent_until(self):get_parent_until43,915
    def names(self):names47,989
    def docstr(self):docstr52,1106
    def __repr__(self):__repr__55,1169
def imitate_pydoc(string):imitate_pydoc59,1256

anaconda-mode/0.1.2/jedi/api/replstartup.py,134
import jedi.utilsjedi18,565
import jedi.utilsutils18,565
from jedi import __version__ as __jedi_version____jedi_version__19,583

anaconda-mode/0.1.2/jedi/api/usages.py,386
from jedi._compatibility import unicodeunicode1,0
from jedi.api import classesclasses2,40
from jedi.parser import treetree3,69
from jedi.evaluate import importsimports4,98
def usages(evaluator, definition_names, mods):usages7,134
    def compare_array(definitions):compare_array11,234
def usages_add_import_modules(evaluator, definitions):usages_add_import_modules41,1427

anaconda-mode/0.1.2/jedi/cache.py,2238
import timetime16,722
import osos17,734
import syssys18,744
import jsonjson19,755
import hashlibhashlib20,767
import gcgc21,782
import inspectinspect22,792
import shutilshutil23,807
import rere24,821
    import cPickle as picklepickle26,836
    import picklepickle28,885
from jedi import settingssettings30,904
from jedi import commoncommon31,930
from jedi import debugdebug32,954
_time_caches = {}_time_caches34,978
parser_cache = {}parser_cache37,1038
class ParserCacheItem(object):ParserCacheItem40,1058
    def __init__(self, parser, change_time=None):__init__41,1089
def clear_time_caches(delete_all=False):clear_time_caches48,1279
def time_cache(time_add_setting):time_cache71,2036
    def _temp(key_func):_temp79,2371
        def wrapper(*args, **kwargs):wrapper83,2459
def cache_call_signatures(evaluator, call, source, user_pos):cache_call_signatures103,3055
def underscore_memoization(func):underscore_memoization118,3618
    def wrapper(self):wrapper139,4061
def memoize_method(method):memoize_method152,4369
    def wrapper(self, *args, **kwargs):wrapper154,4434
def cache_star_import(func):cache_star_import166,4782
    def wrapper(self):wrapper168,4857
def _invalidate_star_import_cache_module(module, only_main=False):_invalidate_star_import_cache_module174,4967
def invalidate_star_import_cache(path):invalidate_star_import_cache184,5285
def load_parser(path):load_parser194,5540
def save_parser(path, parser, pickling=True):save_parser213,6228
class ParserPickling(object):ParserPickling226,6590
    version = 24version228,6621
    def __init__(self):__init__241,6996
    def load_parser(self, path, original_changed_time):load_parser254,7442
    def save_parser(self, path, parser_cache_item):save_parser275,8130
    def _index(self):_index290,8566
    def _remove_old_modules(self):_remove_old_modules306,9144
    def _flush_index(self):_flush_index313,9317
    def clear_cache(self):clear_cache319,9527
    def _get_hashed_path(self, path):_get_hashed_path322,9602
    def _get_path(self, file):_get_path325,9729
    def _cache_directory(self):_cache_directory331,9903
ParserPickling = ParserPickling()ParserPickling336,10021

anaconda-mode/0.1.2/jedi/common.py,1149
import syssys2,74
import contextlibcontextlib3,85
import functoolsfunctools4,103
import rere5,120
from ast import literal_evalliteral_eval6,130
from jedi._compatibility import unicode, reraiseunicode8,160
from jedi._compatibility import unicode, reraisereraise8,160
from jedi import settingssettings9,209
class UncaughtAttributeError(Exception):UncaughtAttributeError12,237
def safe_property(func):safe_property25,779
def reraise_uncaught(func):reraise_uncaught29,850
    def wrapper(*args, **kwds):wrapper50,1822
class PushBackIterator(object):PushBackIterator59,2066
    def __init__(self, iterator):__init__60,2098
    def push_back(self, value):push_back65,2219
    def __iter__(self):__iter__68,2286
    def next(self):next71,2331
    def __next__(self):__next__75,2422
def scale_speed_settings(factor):scale_speed_settings84,2633
def indent_block(text, indention='    '):indent_block96,2953
def ignored(*exceptions):ignored107,3295
def source_to_unicode(source, encoding=None):source_to_unicode118,3531
    def detect_encoding():detect_encoding119,3577
def splitlines(string):splitlines147,4608

anaconda-mode/0.1.2/jedi/debug.py,1325
from jedi._compatibility import encoding, is_py3, uencoding1,0
from jedi._compatibility import encoding, is_py3, uis_py31,0
from jedi._compatibility import encoding, is_py3, uu1,0
import inspectinspect2,52
import osos3,67
import timetime4,77
        from colorama import Fore, initFore12,277
        from colorama import Fore, initinit12,277
        from colorama import initialiseinitialise13,317
    class Fore(object):Fore19,584
        RED = ''RED20,608
        GREEN = ''GREEN21,625
        YELLOW = ''YELLOW22,644
        RESET = ''RESET23,664
NOTICE = object()NOTICE25,684
WARNING = object()WARNING26,702
SPEED = object()SPEED27,721
enable_speed = Falseenable_speed29,739
enable_warning = Falseenable_warning30,760
enable_notice = Falseenable_notice31,783
debug_function = Nonedebug_function34,840
ignored_modules = ['jedi.evaluate.builtin', 'jedi.parser']ignored_modules35,862
_debug_indent = -1_debug_indent36,921
_start_time = time.time()_start_time37,940
def reset_time():reset_time40,968
def increase_indent(func):increase_indent46,1079
    def wrapper(*args, **kwargs):wrapper48,1137
def dbg(message, *args):dbg59,1374
def warning(message, *args):warning69,1770
def speed(name):speed75,1968
def print_to_stdout(level, str_out):print_to_stdout82,2168

anaconda-mode/0.1.2/jedi/evaluate/__init__.py,1550
import copycopy63,2669
from itertools import chainchain64,2681
from jedi.parser import treetree66,2710
from jedi import debugdebug67,2739
from jedi.evaluate import representation as erer68,2762
from jedi.evaluate import importsimports69,2809
from jedi.evaluate import recursionrecursion70,2843
from jedi.evaluate import iterableiterable71,2879
from jedi.evaluate.cache import memoize_defaultmemoize_default72,2914
from jedi.evaluate import stdlibstdlib73,2962
from jedi.evaluate import finderfinder74,2995
from jedi.evaluate import compiledcompiled75,3028
from jedi.evaluate import precedenceprecedence76,3063
from jedi.evaluate import paramparam77,3100
from jedi.evaluate import helpershelpers78,3132
class Evaluator(object):Evaluator81,3168
    def __init__(self, grammar):__init__82,3193
    def wrap(self, element):wrap92,3654
    def find_types(self, scope, name_str, position=None, search_global=False,find_types106,4197
    def eval_statement(self, stmt, seek_name=None):eval_statement125,4988
    def eval_element(self, element):eval_element161,6703
    def _eval_atom(self, atom):_eval_atom214,9269
    def eval_trailer(self, types, trailer):eval_trailer249,10885
    def execute_evaluated(self, obj, *args):execute_evaluated270,11714
    def execute(self, obj, arguments=(), trailer=None):execute278,11976
    def goto_definition(self, name):goto_definition303,12844
    def goto(self, name):goto310,13125
        def resolve_implicit_imports(names):resolve_implicit_imports311,13151

anaconda-mode/0.1.2/jedi/evaluate/analysis.py,1667
from jedi import debugdebug4,38
from jedi.parser import treetree5,61
from jedi.evaluate.compiled import CompiledObjectCompiledObject6,90
CODES = {CODES9,142
class Error(object):Error24,827
    def __init__(self, name, module_path, start_pos, message=None):__init__25,848
    def line(self):line34,1125
    def column(self):column38,1194
    def code(self):code42,1265
    def __unicode__(self):__unicode__47,1408
    def __str__(self):__str__51,1568
    def __eq__(self, other):__eq__54,1626
    def __ne__(self, other):__ne__58,1781
    def __hash__(self):__hash__61,1849
    def __repr__(self):__repr__64,1935
class Warning(Error):Warning70,2162
def add(evaluator, name, jedi_obj, message=None, typ=Error, payload=None):add74,2195
    from jedi.evaluate.iterable import MergedNodesMergedNodes75,2270
def _check_for_setattr(instance):_check_for_setattr92,2805
def add_attribute_error(evaluator, scope, name):add_attribute_error106,3179
    from jedi.evaluate.representation import InstanceInstance108,3302
def _check_for_exception_catch(evaluator, jedi_obj, exception, payload=None):_check_for_exception_catch128,3942
    def check_match(cls, exception):check_match136,4303
    def check_try_for_except(obj, exception):check_try_for_except142,4491
                    from jedi.evaluate import iterableiterable158,5138
    def check_hasattr(node, suite):check_hasattr168,5591
            from jedi.evaluate.param import ArgumentsArguments178,6027
def get_module_statements(module):get_module_statements213,7305
    def check_children(node):check_children218,7481
    def add_nodes(nodes):add_nodes243,8500

anaconda-mode/0.1.2/jedi/evaluate/cache.py,398
import inspectinspect7,185
NO_DEFAULT = object()NO_DEFAULT9,201
def memoize_default(default=NO_DEFAULT, evaluator_is_first_arg=False, second_arg_is_evaluator=False):memoize_default12,225
    def func(function):func20,673
        def wrapper(obj, *args, **kwargs):wrapper21,697
class CachedMetaClass(type):CachedMetaClass50,1609
    def __call__(self, *args, **kwargs):__call__57,1928

anaconda-mode/0.1.2/jedi/evaluate/compiled/__init__.py,5055
import inspectinspect4,43
import rere5,58
import syssys6,68
import osos7,79
from functools import partialpartial8,89
from jedi._compatibility import builtins as _builtins, unicode_builtins10,120
from jedi._compatibility import builtins as _builtins, unicodeunicode10,120
from jedi import debugdebug11,183
from jedi.cache import underscore_memoization, memoize_methodunderscore_memoization12,206
from jedi.cache import underscore_memoization, memoize_methodmemoize_method12,206
from jedi.evaluate.sys_path import get_sys_pathget_sys_path13,268
from jedi.parser.tree import Param, Base, Operator, zero_position_modifierParam14,316
from jedi.parser.tree import Param, Base, Operator, zero_position_modifierBase14,316
from jedi.parser.tree import Param, Base, Operator, zero_position_modifierOperator14,316
from jedi.parser.tree import Param, Base, Operator, zero_position_modifierzero_position_modifier14,316
from jedi.evaluate.helpers import FakeNameFakeName15,391
from . import fakefake16,434
_sep = os.path.sep_sep19,455
_path_re = re.compile('(?:\.[^{0}]+|[{0}]__init__\.py)$'.format(re.escape(_sep)))_path_re22,532
class CheckAttribute(object):CheckAttribute26,625
    def __init__(self, func):__init__28,726
    def __get__(self, instance, owner):__get__33,879
class CompiledObject(Base):CompiledObject39,1073
    start_pos = 0, 0start_pos41,1130
    path = None  # modules have this attribute - set it to None.path42,1151
    used_names = {}  # To be consistent with modules.used_names43,1216
    def __init__(self, obj, parent=None):__init__45,1271
    def py__call__(self):py__call__50,1380
        def actual(evaluator, params):actual51,1406
                from jedi.evaluate.representation import InstanceInstance53,1487
    def py__class__(self, evaluator):py__class__63,1834
    def py__mro__(self, evaluator):py__mro__67,1963
    def py__bases__(self, evaluator):py__bases__71,2106
    def py__bool__(self):py__bool__74,2220
    def py__file__(self):py__file__77,2277
    def is_class(self):is_class80,2337
    def doc(self):doc84,2417
    def params(self):params88,2497
    def __repr__(self):__repr__101,2998
    def _parse_function_doc(self):_parse_function_doc105,3117
    def api_type(self):api_type111,3254
    def type(self):type125,3668
    def _cls(self):_cls137,4071
    def names_dict(self):names_dict150,4559
    def names_dicts(self, search_global, is_instance=False):names_dicts154,4685
    def _names_dict_ensure_one_dict(self, is_instance):_names_dict_ensure_one_dict158,4828
    def get_subscope_by_name(self, name):get_subscope_by_name165,5081
    def get_index_types(self, evaluator, index_array=()):get_index_types171,5321
        from jedi.evaluate.iterable import create_indexes_or_slicescreate_indexes_or_slices182,5820
    def name(self):name203,6631
    def _execute_function(self, evaluator, params):_execute_function207,6768
    def subscopes(self):subscopes225,7406
    def is_scope(self):is_scope239,7854
    def get_self_attributes(self):get_self_attributes242,7899
    def get_imports(self):get_imports245,7979
class LazyNamesDict(object):LazyNamesDict249,8057
    def __init__(self, compiled_obj, is_instance):__init__253,8177
    def __iter__(self):__iter__257,8311
    def __getitem__(self, name):__getitem__261,8407
    def values(self):values268,8670
class CompiledName(FakeName):CompiledName285,9137
    def __init__(self, obj, name):__init__286,9167
    def __repr__(self):__repr__291,9301
    def is_definition(self):is_definition298,9540
    def parent(self):parent303,9632
    def parent(self, value):parent308,9783
def dotted_from_fs_path(fs_path, sys_path=None):dotted_from_fs_path312,9898
def load_module(path=None, name=None):load_module344,10908
docstr_defaults = {docstr_defaults379,11999
def _parse_function_doc(doc):_parse_function_doc388,12154
        def change_options(m):change_options417,13132
class Builtin(CompiledObject):Builtin448,14114
    def get_by_name(self, name):get_by_name450,14165
def _a_generator(foo):_a_generator454,14247
def _create_from_name(module, parent, name):_create_from_name460,14358
builtin = Builtin(_builtins)builtin477,14838
magic_function_class = CompiledObject(type(load_module), parent=builtin)magic_function_class478,14867
generator_obj = CompiledObject(_a_generator(1.0))generator_obj479,14940
_type_names_dict = builtin.get_by_name('type').names_dict_type_names_dict480,14990
none_obj = builtin.get_by_name('None')none_obj481,15048
false_obj = builtin.get_by_name('False')false_obj482,15087
true_obj = builtin.get_by_name('True')true_obj483,15128
object_obj = builtin.get_by_name('object')object_obj484,15167
def keyword_from_value(obj):keyword_from_value487,15212
def compiled_objects_cache(func):compiled_objects_cache498,15425
    def wrapper(evaluator, obj, parent=builtin, module=None):wrapper499,15459
def create(evaluator, obj, parent=builtin, module=None):create513,15986

anaconda-mode/0.1.2/jedi/evaluate/compiled/fake.py,836
import osos7,246
import inspectinspect8,256
from jedi._compatibility import is_py3, builtins, unicodeis_py310,272
from jedi._compatibility import is_py3, builtins, unicodebuiltins10,272
from jedi._compatibility import is_py3, builtins, unicodeunicode10,272
from jedi.parser import Parser, load_grammarParser11,330
from jedi.parser import Parser, load_grammarload_grammar11,330
from jedi.parser import tree as ptpt12,375
from jedi.evaluate.helpers import FakeNameFakeName13,410
modules = {}modules15,454
def _load_faked_module(module):_load_faked_module18,469
def search_scope(scope, obj_name):search_scope47,1564
def get_module(obj):get_module53,1688
def _faked(module, obj, name):_faked70,2050
def get_faked(module, obj, name=None):get_faked100,3014
def is_class_instance(obj):is_class_instance118,3758

anaconda-mode/0.1.2/jedi/evaluate/docstrings.py,1732
from ast import literal_evalliteral_eval17,593
import rere18,622
from itertools import chainchain19,632
from textwrap import dedentdedent20,660
from jedi.evaluate.cache import memoize_defaultmemoize_default22,689
from jedi.parser import Parser, load_grammarParser23,737
from jedi.parser import Parser, load_grammarload_grammar23,737
from jedi.common import indent_blockindent_block24,782
from jedi.evaluate.iterable import Array, FakeSequence, AlreadyEvaluatedArray25,819
from jedi.evaluate.iterable import Array, FakeSequence, AlreadyEvaluatedFakeSequence25,819
from jedi.evaluate.iterable import Array, FakeSequence, AlreadyEvaluatedAlreadyEvaluated25,819
DOCSTRING_PARAM_PATTERNS = [DOCSTRING_PARAM_PATTERNS28,894
DOCSTRING_RETURN_PATTERNS = [DOCSTRING_RETURN_PATTERNS34,1078
REST_ROLE_PATTERN = re.compile(r':[^`]+:`([^`]+)`')REST_ROLE_PATTERN39,1227
    from numpydoc.docscrape import NumpyDocStringNumpyDocString43,1286
    def _search_param_in_numpydocstr(docstr, param_str):_search_param_in_numpydocstr45,1356
    def _search_param_in_numpydocstr(docstr, param_str):_search_param_in_numpydocstr48,1437
def _search_param_in_docstr(docstr, param_str):_search_param_in_docstr65,2102
def _strip_rst_role(type_str):_strip_rst_role94,3023
def _evaluate_for_statement_string(evaluator, string, module):_evaluate_for_statement_string116,3607
def _execute_types_in_stmt(evaluator, stmt):_execute_types_in_stmt150,4972
def _execute_array_values(evaluator, array):_execute_array_values160,5376
def follow_param(evaluator, param):follow_param176,5949
def find_return_types(evaluator, func):find_return_types187,6377
    def search_return_in_docstr(code):search_return_in_docstr188,6417

anaconda-mode/0.1.2/jedi/evaluate/dynamic.py,818
from itertools import chainchain19,522
from jedi._compatibility import unicodeunicode21,551
from jedi.parser import treetree22,591
from jedi import settingssettings23,620
from jedi import debugdebug24,646
from jedi.evaluate.cache import memoize_defaultmemoize_default25,669
from jedi.evaluate import importsimports26,717
class ParamListener(object):ParamListener29,753
    def __init__(self):__init__33,858
    def execute(self, params):execute36,921
def search_params(evaluator, param):search_params41,1020
def search_function_call(evaluator, func):search_function_call69,1942
    from jedi.evaluate import representation as erer73,2036
    def get_params_for_module(module):get_params_for_module75,2088
        def get_posibilities(evaluator, module, func_name):get_posibilities80,2267

anaconda-mode/0.1.2/jedi/evaluate/finder.py,2608
from itertools import chainchain14,544
from jedi._compatibility import unicode, uunicode16,573
from jedi._compatibility import unicode, uu16,573
from jedi.parser import treetree17,616
from jedi import debugdebug18,645
from jedi import commoncommon19,668
from jedi import settingssettings20,692
from jedi.evaluate import representation as erer21,718
from jedi.evaluate import dynamicdynamic22,765
from jedi.evaluate import compiledcompiled23,799
from jedi.evaluate import docstringsdocstrings24,834
from jedi.evaluate import iterableiterable25,871
from jedi.evaluate import importsimports26,906
from jedi.evaluate import analysisanalysis27,940
from jedi.evaluate import flow_analysisflow_analysis28,975
from jedi.evaluate import paramparam29,1015
from jedi.evaluate import helpershelpers30,1047
from jedi.evaluate.cache import memoize_defaultmemoize_default31,1081
def filter_after_position(names, position):filter_after_position34,1131
def filter_definition_names(names, origin, position=None):filter_definition_names51,1656
class NameFinder(object):NameFinder75,2609
    def __init__(self, evaluator, scope, name_str, position=None):__init__76,2635
    def find(self, scopes, search_global=False):find84,2934
    def scopes(self, search_global=False):scopes105,3916
    def names_dict_lookup(self, names_dict, position):names_dict_lookup111,4169
        def get_param(scope, el):get_param112,4224
    def filter_name(self, names_dicts):filter_name170,6633
    def _clean_names(self, names):_clean_names185,7161
    def _check_getattr(self, inst):_check_getattr198,7653
    def _names_to_types(self, names, search_global):_names_to_types214,8463
    def _resolve_descriptors(self, name, types):_resolve_descriptors244,9785
def _name_to_types(evaluator, name, scope):_name_to_types264,10495
def _remove_statements(evaluator, stmt, name):_remove_statements305,12457
def _eval_param(evaluator, param, scope):_eval_param333,13317
    from jedi.evaluate.param import ExecutedParam, ArgumentsExecutedParam339,13482
    from jedi.evaluate.param import ExecutedParam, ArgumentsArguments339,13482
def check_flow_information(evaluator, flow, search_name, pos):check_flow_information378,15038
def _check_isinstance_type(evaluator, element, search_name):_check_isinstance_type411,16152
def global_names_dict_generator(evaluator, scope, position):global_names_dict_generator443,17434
def check_tuple_assignments(types, name):check_tuple_assignments513,19999
def filter_private_variable(scope, origin_node):filter_private_variable534,20598

anaconda-mode/0.1.2/jedi/evaluate/flow_analysis.py,664
from jedi.parser import treetree1,0
class Status(object):Status4,31
    lookup_table = {}lookup_table5,53
    def __init__(self, value, name):__init__7,76
    def invert(self):invert12,210
    def __and__(self, other):__and__20,397
    def __repr__(self):__repr__26,582
REACHABLE = Status(True, 'reachable')REACHABLE30,670
UNREACHABLE = Status(False, 'unreachable')UNREACHABLE31,708
UNSURE = Status(None, 'unsure')UNSURE32,751
def break_check(evaluator, base_scope, stmt, origin_scope=None):break_check35,785
def _break_check(evaluator, stmt, base_scope, element_scope):_break_check51,1607
def _check_if(evaluator, node):_check_if78,2664

anaconda-mode/0.1.2/jedi/evaluate/helpers.py,1205
import copycopy1,0
from itertools import chainchain2,12
from jedi.parser import treetree4,41
def deep_ast_copy(obj, parent=None, new_elements=None):deep_ast_copy7,72
    def copy_node(obj):copy_node16,300
def call_of_name(name, cut_own_trailer=False):call_of_name74,2457
def get_module_names(module, all_scopes):get_module_names108,3654
class FakeImport(tree.ImportName):FakeImport120,3937
    def __init__(self, name, parent, level=0):__init__121,3972
    def get_defined_names(self):get_defined_names127,4147
    def aliases(self):aliases130,4208
    def level(self):level134,4264
    def start_pos(self):start_pos138,4327
    def paths(self):paths141,4373
    def is_definition(self):is_definition144,4424
class FakeName(tree.Name):FakeName148,4475
    def __init__(self, name_str, parent=None, start_pos=(0, 0), is_definition=None):__init__149,4502
    def get_definition(self):get_definition158,4869
    def is_definition(self):is_definition161,4927
class LazyName(FakeName):LazyName168,5108
    def __init__(self, name, parent_callback, is_definition=None):__init__169,5134
    def parent(self):parent174,5338
    def parent(self, value):parent178,5419

anaconda-mode/0.1.2/jedi/evaluate/imports.py,3494
import impimp14,626
import osos15,637
import pkgutilpkgutil16,647
import syssys17,662
from itertools import chainchain18,673
from jedi._compatibility import find_module, unicodefind_module20,702
from jedi._compatibility import find_module, unicodeunicode20,702
from jedi import commoncommon21,755
from jedi import debugdebug22,779
from jedi import cachecache23,802
from jedi.parser import fastfast24,825
from jedi.parser import treetree25,854
from jedi.evaluate import sys_pathsys_path26,883
from jedi.evaluate import helpershelpers27,918
from jedi import settingssettings28,952
from jedi.common import source_to_unicodesource_to_unicode29,978
from jedi.evaluate import compiledcompiled30,1020
from jedi.evaluate import analysisanalysis31,1055
from jedi.evaluate.cache import memoize_default, NO_DEFAULTmemoize_default32,1090
from jedi.evaluate.cache import memoize_default, NO_DEFAULTNO_DEFAULT32,1090
def completion_names(evaluator, imp, pos):completion_names35,1152
class ImportWrapper(tree.Base):ImportWrapper61,2015
    def __init__(self, evaluator, name):__init__62,2047
        self._import = name.get_parent_until(tree.Import)name66,2151
        self._import = name.get_parent_until(tree.Import)get_parent_until66,2151
        self._import = name.get_parent_until(tree.Import)tree66,2151
        self._import = name.get_parent_until(tree.Import)Import66,2151
    def follow(self, is_goto=False):follow70,2293
class NestedImportModule(tree.Module):NestedImportModule124,4410
    def __init__(self, module, nested_import):__init__129,4610
        self._nested_import = nested_importnested_import131,4687
    def _get_nested_import_name(self):_get_nested_import_name133,4732
    def __getattr__(self, name):__getattr__148,5392
    def __repr__(self):__repr__151,5469
def _add_error(evaluator, name, message=None):_add_error156,5625
def get_init_path(directory_path):get_init_path162,5811
class Importer(object):Importer174,6135
    def __init__(self, evaluator, import_path, module, level=0):__init__175,6159
        debug.speed('import %s' % (import_path,))s188,6753
                    debug.warning('Attempted relative import beyond top-level package.')beyond217,7938
                    debug.warning('Attempted relative import beyond top-level package.')top217,7938
                    debug.warning('Attempted relative import beyond top-level package.')level217,7938
                    debug.warning('Attempted relative import beyond top-level package.')package217,7938
    def str_import_path(self):str_import_path224,8215
    def sys_path_with_modifications(self):sys_path_with_modifications229,8404
    def follow(self):follow249,9440
    def _do_import(self, import_path, sys_path):_do_import254,9603
    def _generate_name(self, name):_generate_name352,13703
    def _get_module_names(self, search_path=None):_get_module_names355,13798
    def completion_names(self, evaluator, only_modules=False):completion_names372,14415
        from jedi.evaluate import finderfinder377,14630
def _load_module(evaluator, path=None, source=None, sys_path=None):_load_module434,17092
    def load(source):load435,17160
def add_module(evaluator, module_name, module):add_module455,17872
def get_modules_containing_name(evaluator, mods, name):get_modules_containing_name464,18243
    def check_python_file(path):check_python_file468,18364
    def check_fs(path):check_fs477,18605

anaconda-mode/0.1.2/jedi/evaluate/iterable.py,5976
from itertools import chainchain23,806
from jedi import commoncommon25,835
from jedi import debugdebug26,859
from jedi import settingssettings27,882
from jedi._compatibility import use_metaclass, is_py3, unicodeuse_metaclass28,908
from jedi._compatibility import use_metaclass, is_py3, unicodeis_py328,908
from jedi._compatibility import use_metaclass, is_py3, unicodeunicode28,908
from jedi.parser import treetree29,971
from jedi.evaluate import compiledcompiled30,1000
from jedi.evaluate import helpershelpers31,1035
from jedi.evaluate.cache import CachedMetaClass, memoize_defaultCachedMetaClass32,1069
from jedi.evaluate.cache import CachedMetaClass, memoize_defaultmemoize_default32,1069
from jedi.evaluate import analysisanalysis33,1134
def unite(iterable):unite36,1171
class IterableWrapper(tree.Base):IterableWrapper41,1305
    def is_class(self):is_class42,1339
class GeneratorMixin(object):GeneratorMixin46,1386
    def names_dicts(self, search_global=False):  # is always Falsenames_dicts48,1439
    def get_index_types(self, evaluator, index_array):get_index_types60,1974
    def get_exact_index_types(self, index):get_exact_index_types65,2200
    def py__bool__(self):py__bool__72,2421
class Generator(use_metaclass(CachedMetaClass, IterableWrapper, GeneratorMixin)):Generator76,2469
    def __init__(self, evaluator, func, var_args):__init__78,2592
    def iter_content(self):iter_content84,2780
        from jedi.evaluate.representation import FunctionExecutionFunctionExecution88,2968
    def __getattr__(self, name):__getattr__92,3162
    def __repr__(self):__repr__100,3539
class GeneratorMethod(IterableWrapper):GeneratorMethod104,3628
    def __init__(self, generator, builtin_func):__init__106,3713
    def py__call__(self, evaluator, params):py__call__110,3841
    def __getattr__(self, name):__getattr__114,3983
class Comprehension(IterableWrapper):Comprehension118,4067
    def from_atom(evaluator, atom):from_atom120,4123
    def __init__(self, evaluator, atom):__init__127,4324
    def eval_node(self):eval_node132,4451
    def get_exact_index_types(self, index):get_exact_index_types151,5090
    def __repr__(self):__repr__154,5206
class ArrayMixin(object):ArrayMixin158,5297
    def names_dicts(self, search_global=False):  # Always False.names_dicts160,5346
    def py__bool__(self):py__bool__167,5724
class ListComprehension(Comprehension, ArrayMixin):ListComprehension171,5821
    type = 'list'type172,5873
    def get_index_types(self, evaluator, index):get_index_types174,5892
    def iter_content(self):iter_content177,5977
    def name(self):name181,6082
class GeneratorComprehension(Comprehension, GeneratorMixin):GeneratorComprehension185,6166
    def iter_content(self):iter_content186,6227
class Array(IterableWrapper, ArrayMixin):Array190,6319
    mapping = {'(': 'tuple',mapping191,6361
    def __init__(self, evaluator, atom):__init__195,6447
    def name(self):name209,6945
    def get_index_types(self, evaluator, index=()):get_index_types213,7045
    def values(self):values235,7875
    def get_exact_index_types(self, mixed_index):get_exact_index_types240,8063
    def iter_content(self):iter_content257,8826
    def parent(self):parent261,8910
    def get_parent_until(self):get_parent_until264,8965
    def __getattr__(self, name):__getattr__267,9030
    def _values(self):_values273,9305
    def _items(self):_items280,9530
    def __iter__(self):__iter__304,10434
    def __repr__(self):__repr__307,10494
class _FakeArray(Array):_FakeArray311,10583
    def __init__(self, evaluator, container, type):__init__312,10608
class ImplicitTuple(_FakeArray):ImplicitTuple318,10753
    def __init__(self, evaluator, testlist):__init__319,10786
    def _items(self):_items323,10940
class FakeSequence(_FakeArray):FakeSequence327,11008
    def __init__(self, evaluator, sequence_values, type):__init__328,11040
    def _items(self):_items332,11224
    def get_exact_index_types(self, index):get_exact_index_types335,11284
class AlreadyEvaluated(frozenset):AlreadyEvaluated340,11426
    def get_code(self):get_code342,11536
class MergedNodes(frozenset):MergedNodes347,11621
class FakeDict(_FakeArray):FakeDict351,11662
    def __init__(self, evaluator, dct):__init__352,11690
    def get_exact_index_types(self, index):get_exact_index_types356,11818
    def _items(self):_items360,12003
class MergedArray(_FakeArray):MergedArray364,12060
    def __init__(self, evaluator, arrays):__init__365,12091
    def get_exact_index_types(self, mixed_index):get_exact_index_types369,12243
    def values(self):values372,12319
    def __iter__(self):__iter__375,12406
    def __len__(self):__len__380,12518
def get_iterator_types(inputs):get_iterator_types384,12592
    from jedi.evaluate.representation import InstanceInstance402,13318
def check_array_additions(evaluator, array):check_array_additions422,14117
def _check_array_additions(evaluator, compare_array, module, is_list):_check_array_additions440,14820
    def check_additions(arglist, add_name):check_additions450,15127
    from jedi.evaluate import representation as er, paramer464,15742
    from jedi.evaluate import representation as er, paramparam464,15742
    def get_execution_parent(element):get_execution_parent466,15801
def check_array_instances(evaluator, instance):check_array_instances538,19275
    from jedi.evaluate import paramparam544,19493
class ArrayInstance(IterableWrapper):ArrayInstance548,19595
    def __init__(self, evaluator, instance):__init__559,20086
    def iter_content(self):iter_content564,20243
class Slice(object):Slice581,20857
    def __init__(self, evaluator, start, stop, step):__init__582,20878
    def obj(self):obj590,21118
        def get(element):get595,21254
def create_indexes_or_slices(evaluator, index):create_indexes_or_slices615,21885

anaconda-mode/0.1.2/jedi/evaluate/param.py,2411
from collections import defaultdictdefaultdict1,0
from itertools import chainchain2,36
from jedi._compatibility import unicode, zip_longestunicode4,65
from jedi._compatibility import unicode, zip_longestzip_longest4,65
from jedi import debugdebug5,118
from jedi import commoncommon6,141
from jedi.parser import treetree7,165
from jedi.evaluate import iterableiterable8,194
from jedi.evaluate import analysisanalysis9,229
from jedi.evaluate import precedenceprecedence10,264
from jedi.evaluate.helpers import FakeNameFakeName11,301
from jedi.cache import underscore_memoizationunderscore_memoization12,344
class Arguments(tree.Base):Arguments15,392
    def __init__(self, evaluator, argument_node, trailer=None):__init__16,420
        self.trailer = trailer  # Can be None, e.g. in a class definition.definition26,889
    def _split(self):_split28,965
    def get_parent_until(self, *args, **kwargs):get_parent_until46,1575
                from jedi.evaluate.iterable import AlreadyEvaluatedAlreadyEvaluated50,1722
    def as_tuple(self):as_tuple60,2142
    def unpack(self, func=None):unpack68,2415
    def _reorder_var_args(var_args):_reorder_var_args105,4136
    def eval_argument_clinic(self, arguments):eval_argument_clinic123,4787
    def scope(self):scope144,5921
    def eval_args(self):eval_args148,6087
    def __repr__(self):__repr__153,6299
    def get_calling_var_args(self):get_calling_var_args156,6394
class ExecutedParam(tree.Param):ExecutedParam164,6677
    def __init__(self, original_param, var_args, values):__init__166,6753
    def eval(self, evaluator):eval171,6921
    def position_nr(self):position_nr178,7085
    def name(self):name184,7278
    def __getattr__(self, name):__getattr__187,7377
def _get_calling_var_args(evaluator, var_args):_get_calling_var_args191,7463
def get_params(evaluator, func, var_args):get_params216,8477
    from jedi.evaluate.representation import InstanceElementInstanceElement222,8681
def _iterate_star_args(evaluator, array, input_node, func=None):_iterate_star_args353,14723
    from jedi.evaluate.representation import InstanceInstance354,14788
def _star_star_dict(evaluator, array, input_node, func):_star_star_dict370,15500
    from jedi.evaluate.representation import InstanceInstance372,15591
def _error_argument_count(func, actual_count):_error_argument_count395,16516

anaconda-mode/0.1.2/jedi/evaluate/precedence.py,1397
import operatoroperator4,37
from jedi._compatibility import unicodeunicode6,54
from jedi.parser import treetree7,94
from jedi import debugdebug8,123
from jedi.evaluate.compiled import (CompiledObject, create, builtin,CompiledObject9,146
from jedi.evaluate.compiled import (CompiledObject, create, builtin,create9,146
from jedi.evaluate.compiled import (CompiledObject, create, builtin,builtin9,146
from jedi.evaluate import analysisanalysis11,292
COMPARISON_OPERATORS = {COMPARISON_OPERATORS14,373
def _literals_to_types(evaluator, result):_literals_to_types26,593
def calculate_children(evaluator, children):calculate_children38,1063
def calculate(evaluator, left_result, operator, right_result):calculate66,2150
def factor_calculate(evaluator, types, operator):factor_calculate85,2947
def _is_number(obj):_is_number102,3418
def is_string(obj):is_string107,3532
def is_literal(obj):is_literal112,3647
def _is_tuple(obj):_is_tuple116,3715
    from jedi.evaluate import iterableiterable117,3735
def _is_list(obj):_is_list121,3843
    from jedi.evaluate import iterableiterable122,3862
def _element_calculate(evaluator, left, operator, right):_element_calculate126,3969
    from jedi.evaluate import iterable, representation as eriterable127,4027
    from jedi.evaluate import iterable, representation as erer127,4027
    def check(obj):check163,5541

anaconda-mode/0.1.2/jedi/evaluate/recursion.py,1162
from jedi import debugdebug10,415
from jedi import settingssettings11,438
from jedi.evaluate import compiledcompiled12,464
from jedi.evaluate import iterableiterable13,499
def recursion_decorator(func):recursion_decorator16,536
    def run(evaluator, stmt, *args, **kwargs):run17,567
class RecursionDetector(object):RecursionDetector29,922
    def __init__(self):__init__34,1123
    def push_stmt(self, stmt):push_stmt38,1200
    def pop_stmt(self):pop_stmt48,1552
    def _check_recursion(self):_check_recursion54,1766
    def node_statements(self):node_statements63,1997
class _RecursionNode(object):_RecursionNode72,2176
    def __init__(self, stmt, parent):__init__74,2252
    def __eq__(self, other):__eq__85,2654
def execution_recursion_decorator(func):execution_recursion_decorator94,2888
    def run(execution, **kwargs):run95,2929
class ExecutionRecursionDetector(object):ExecutionRecursionDetector107,3237
    def __init__(self):__init__112,3402
    def __call__(self, execution):__call__118,3571
    def pop_execution(cls):pop_execution128,3928
    def push_execution(cls, execution):push_execution132,4031

anaconda-mode/0.1.2/jedi/evaluate/representation.py,7642
import osos31,1438
import pkgutilpkgutil32,1448
import impimp33,1463
import rere34,1474
from itertools import chainchain35,1484
from jedi._compatibility import use_metaclass, unicode, Python3Methoduse_metaclass37,1513
from jedi._compatibility import use_metaclass, unicode, Python3Methodunicode37,1513
from jedi._compatibility import use_metaclass, unicode, Python3MethodPython3Method37,1513
from jedi.parser import treetree38,1583
from jedi import debugdebug39,1612
from jedi import commoncommon40,1635
from jedi.cache import underscore_memoization, cache_star_importunderscore_memoization41,1659
from jedi.cache import underscore_memoization, cache_star_importcache_star_import41,1659
from jedi.evaluate.cache import memoize_default, CachedMetaClass, NO_DEFAULTmemoize_default42,1724
from jedi.evaluate.cache import memoize_default, CachedMetaClass, NO_DEFAULTCachedMetaClass42,1724
from jedi.evaluate.cache import memoize_default, CachedMetaClass, NO_DEFAULTNO_DEFAULT42,1724
from jedi.evaluate import compiledcompiled43,1801
from jedi.evaluate import recursionrecursion44,1836
from jedi.evaluate import iterableiterable45,1872
from jedi.evaluate import docstringsdocstrings46,1907
from jedi.evaluate import helpershelpers47,1944
from jedi.evaluate import paramparam48,1978
from jedi.evaluate import flow_analysisflow_analysis49,2010
from jedi.evaluate import importsimports50,2050
class Executed(tree.Base):Executed53,2086
    def __init__(self, evaluator, base, var_args=()):__init__58,2276
    def is_scope(self):is_scope63,2425
    def get_parent_until(self, *args, **kwargs):get_parent_until66,2470
    def parent(self):parent70,2611
class Instance(use_metaclass(CachedMetaClass, Executed)):Instance74,2667
    def __init__(self, evaluator, base, var_args, is_generated=False):__init__78,2787
    def py__call__(self):py__call__100,3719
        def actual(evaluator, params):actual101,3745
    def py__class__(self, evaluator):py__class__112,4042
    def py__bool__(self):py__bool__115,4106
    def _get_method_execution(self, func):_get_method_execution120,4236
    def _get_func_self_name(self, func):_get_func_self_name124,4417
    def _self_names_dict(self, add_mro=True):_self_names_dict134,4686
    def get_subscope_by_name(self, name):get_subscope_by_name167,6350
    def execute_subscope_by_name(self, name, *args):execute_subscope_by_name171,6509
    def get_descriptor_returns(self, obj):get_descriptor_returns175,6676
    def names_dicts(self, search_global):names_dicts186,7157
    def get_index_types(self, evaluator, index_array):get_index_types198,7696
    def name(self):name216,8447
    def __getattr__(self, name):__getattr__220,8567
    def __repr__(self):__repr__227,8875
class LazyInstanceDict(object):LazyInstanceDict235,9140
    def __init__(self, evaluator, instance, dct):__init__236,9172
    def __getitem__(self, name):__getitem__241,9317
    def values(self):values245,9471
class InstanceName(tree.Name):InstanceName249,9543
    def __init__(self, origin_name, parent):__init__250,9574
    def is_definition(self):is_definition257,9889
def get_instance_el(evaluator, instance, var, is_class_var=False):get_instance_el261,9969
class InstanceElement(use_metaclass(CachedMetaClass, tree.Base)):InstanceElement282,10803
    def __init__(self, evaluator, instance, var, is_class_var):__init__287,11014
    def parent(self):parent295,11261
    def get_parent_until(self, *args, **kwargs):get_parent_until306,11670
    def get_definition(self):get_definition309,11789
    def get_decorated_func(self):get_decorated_func312,11901
    def get_rhs(self):get_rhs318,12144
    def is_definition(self):is_definition322,12301
    def children(self):children326,12385
    def name(self):name333,12626
    def __iter__(self):__iter__337,12745
    def __getitem__(self, index):__getitem__342,12932
    def __getattr__(self, name):__getattr__346,13097
    def isinstance(self, *cls):isinstance349,13170
    def is_scope(self):is_scope352,13244
    def py__call__(self, evaluator, params):py__call__358,13408
    def __repr__(self):__repr__366,13795
class Wrapper(tree.Base):Wrapper370,13883
    def is_scope(self):is_scope371,13909
    def is_class(self):is_class374,13954
    def py__bool__(self):py__bool__377,14000
    def name(self):name386,14234
class Class(use_metaclass(CachedMetaClass, Wrapper)):Class391,14355
    def __init__(self, evaluator, base):__init__396,14579
    def py__mro__(self, evaluator):py__mro__401,14715
        def add(cls):add402,14751
    def py__bases__(self, evaluator):py__bases__434,15982
    def py__call__(self, evaluator, params):py__call__442,16268
    def py__getattribute__(self, name):py__getattribute__445,16365
    def params(self):params449,16474
    def names_dicts(self, search_global, is_instance=False):names_dicts452,16557
    def is_class(self):is_class462,16946
    def get_subscope_by_name(self, name):get_subscope_by_name465,16991
    def __getattr__(self, name):__getattr__472,17258
    def __repr__(self):__repr__479,17619
class Function(use_metaclass(CachedMetaClass, Wrapper)):Function483,17709
    def __init__(self, evaluator, func, is_decorated=False):__init__487,17847
    def get_decorated_func(self):get_decorated_func496,18194
    def names_dicts(self, search_global):names_dicts548,20421
    def py__call__(self, evaluator, params):py__call__556,20670
    def __getattr__(self, name):__getattr__562,20913
    def __repr__(self):__repr__565,20992
class LambdaWrapper(Function):LambdaWrapper572,21205
    def get_decorated_func(self):get_decorated_func573,21236
class FunctionExecution(Executed):FunctionExecution577,21292
    type = 'funcdef'type586,21671
    def __init__(self, evaluator, base, *args, **kwargs):__init__588,21693
    def get_return_types(self, check_yields=False):get_return_types597,22109
    def names_dicts(self, search_global):names_dicts630,23368
    def _get_params(self):_get_params634,23482
    def param_by_name(self, name):param_by_name643,23848
    def name_for_position(self, position):name_for_position646,23952
    def _copy_list(self, lst):_copy_list649,24059
    def __getattr__(self, name):__getattr__663,24583
    def _scope_copy(self, scope):_scope_copy668,24813
    def returns(self):returns678,25193
    def yields(self):yields683,25334
    def statements(self):statements688,25473
    def subscopes(self):subscopes693,25615
    def __repr__(self):__repr__696,25702
class GlobalName(helpers.FakeName):GlobalName700,25791
    def __init__(self, name):__init__701,25827
class ModuleWrapper(use_metaclass(CachedMetaClass, tree.Module, Wrapper)):ModuleWrapper710,26143
    def __init__(self, evaluator, module):__init__711,26218
    def names_dicts(self, search_global):names_dicts715,26340
    def star_imports(self):star_imports730,26953
    def _module_attributes_dict(self):_module_attributes_dict743,27419
        def parent_callback():parent_callback744,27458
    def name(self):name754,27860
    def _get_init_directory(self):_get_init_directory757,27952
    def py__name__(self):py__name__765,28270
    def py__file__(self):py__file__772,28444
    def py__package__(self):py__package__781,28662
    def py__path__(self):py__path__788,28868
        def return_value(search_path):return_value799,29248
    def _sub_modules_dict(self):_sub_modules_dict828,30557
    def __getattr__(self, name):__getattr__853,31543
    def __repr__(self):__repr__856,31620

anaconda-mode/0.1.2/jedi/evaluate/stdlib.py,1553
import collectionscollections9,230
import rere10,249
from jedi._compatibility import unicodeunicode12,260
from jedi.evaluate import compiledcompiled13,300
from jedi.evaluate import representation as erer14,335
from jedi.evaluate import iterableiterable15,382
from jedi.parser import ParserParser16,417
from jedi.parser import treetree17,448
from jedi import debugdebug18,477
from jedi.evaluate import precedenceprecedence19,500
from jedi.evaluate import paramparam20,537
class NotInStdLib(LookupError):NotInStdLib23,571
def execute(evaluator, obj, params):execute27,614
def _follow_param(evaluator, params, index):_follow_param48,1177
def argument_clinic(string, want_obj=False, want_scope=False):argument_clinic57,1408
    def f(func):f78,2294
        def wrapper(evaluator, obj, arguments):wrapper79,2311
def builtins_getattr(evaluator, objects, names, defaults=None):builtins_getattr97,2848
def builtins_type(evaluator, objects, bases, dicts):builtins_type115,3454
class SuperInstance(er.Instance):SuperInstance123,3671
    def __init__(self, evaluator, cls):__init__125,3761
def builtins_super(evaluator, types, objects, scope):builtins_super131,3944
def builtins_reversed(evaluator, sequences, obj):builtins_reversed150,4682
def builtins_isinstance(evaluator, objects, types):builtins_isinstance165,5352
def collections_namedtuple(evaluator, obj, params):collections_namedtuple189,6224
def _return_first_param(evaluator, firsts):_return_first_param233,7687
_implemented = {_implemented237,7751

anaconda-mode/0.1.2/jedi/evaluate/sys_path.py,2147
import globglob1,0
import osos2,12
import syssys3,22
from jedi._compatibility import exec_function, unicodeexec_function5,34
from jedi._compatibility import exec_function, unicodeunicode5,34
from jedi.parser import treetree6,89
from jedi.parser import ParserParser7,118
from jedi.evaluate.cache import memoize_defaultmemoize_default8,149
from jedi import debugdebug9,197
from jedi import commoncommon10,220
from jedi import cachecache11,244
def get_sys_path():get_sys_path14,269
    def check_virtual_env(sys_path):check_virtual_env15,289
def _get_venv_sitepackages(venv):_get_venv_sitepackages34,906
def _execute_code(module_path, code):_execute_code43,1162
    c = "import os; from os.path import *; result=%s"os44,1200
    c = "import os; from os.path import *; result=%s"from44,1200
    c = "import os; from os.path import *; result=%s"os44,1200
    c = "import os; from os.path import *; result=%s"path44,1200
    c = "import os; from os.path import *; result=%s"import44,1200
    c = "import os; from os.path import *; result=%s"result44,1200
    c = "import os; from os.path import *; result=%s"s44,1200
def _paths_from_assignment(evaluator, expr_stmt):_paths_from_assignment60,1653
        from jedi.evaluate.iterable import get_iterator_typesget_iterator_types93,3149
        from jedi.evaluate.precedence import is_stringis_string94,3211
def _paths_from_list_modifications(module_path, trailer1, trailer2):_paths_from_list_modifications100,3405
def _check_module(evaluator, module):_check_module119,4211
    def get_sys_path_powers(names):get_sys_path_powers120,4249
def sys_path_with_modifications(evaluator, module):sys_path_with_modifications147,5324
def _get_paths_from_buildout_script(evaluator, buildout_script):_get_paths_from_buildout_script169,6090
    def load(buildout_script):load170,6155
def traverse_parents(path):traverse_parents191,6788
def _get_parent_dir_with_file(path, filename):_get_parent_dir_with_file200,6951
def _detect_django_path(module_path):_detect_django_path207,7143
def _get_buildout_scripts(module_path):_get_buildout_scripts219,7543

anaconda-mode/0.1.2/jedi/parser/__init__.py,2330
import osos18,964
import rere19,974
from jedi.parser import tree as ptpt21,985
from jedi.parser import tokenizetokenize22,1020
from jedi.parser import tokentoken23,1053
from jedi.parser.token import (DEDENT, INDENT, ENDMARKER, NEWLINE, NUMBER,DEDENT24,1083
from jedi.parser.token import (DEDENT, INDENT, ENDMARKER, NEWLINE, NUMBER,INDENT24,1083
from jedi.parser.token import (DEDENT, INDENT, ENDMARKER, NEWLINE, NUMBER,ENDMARKER24,1083
from jedi.parser.token import (DEDENT, INDENT, ENDMARKER, NEWLINE, NUMBER,NEWLINE24,1083
from jedi.parser.token import (DEDENT, INDENT, ENDMARKER, NEWLINE, NUMBER,NUMBER24,1083
from jedi.parser.pgen2.pgen import generate_grammargenerate_grammar26,1213
from jedi.parser.pgen2.parse import PgenParserPgenParser27,1265
OPERATOR_KEYWORDS = 'and', 'for', 'if', 'else', 'in', 'is', 'lambda', 'not', 'or'OPERATOR_KEYWORDS29,1313
    'return', 'yield', 'pass', 'continue', 'break'STATEMENT_KEYWORDS32,1544
_loaded_grammars = {}_loaded_grammars35,1597
def load_grammar(file='grammar3.4'):load_grammar38,1621
class ErrorStatement(object):ErrorStatement54,2123
    def __init__(self, stack, next_token, position_modifier, next_start_pos):__init__55,2153
    def next_start_pos(self):next_start_pos62,2408
    def first_pos(self):first_pos67,2543
    def first_type(self):first_type72,2659
class ParserSyntaxError(object):ParserSyntaxError77,2755
    def __init__(self, message, position):__init__78,2788
class Parser(object):Parser83,2897
    def __init__(self, grammar, source, module_path=None, tokenizer=None):__init__94,3374
    def convert_node(self, grammar, type, children):convert_node170,6384
    def convert_leaf(self, grammar, type, value, prefix, start_pos):convert_leaf208,8132
    def error_recovery(self, grammar, stack, typ, value, start_pos, prefix,error_recovery233,9352
        def current_suite(stack):current_suite240,9691
    def _stack_removal(self, grammar, stack, start_index, value, start_pos):_stack_removal290,12309
        def clear_names(children):clear_names291,12386
    def _tokenize(self, tokenizer):_tokenize324,13626
    def _add_syntax_error(self, message, position):_add_syntax_error346,14484
    def __repr__(self):__repr__349,14609
    def remove_last_newline(self):remove_last_newline352,14697

anaconda-mode/0.1.2/jedi/parser/fast.py,3341
import rere6,239
from itertools import chainchain7,249
from jedi._compatibility import use_metaclassuse_metaclass9,278
from jedi import settingssettings10,324
from jedi.parser import ParserParser11,350
from jedi.parser import treetree12,381
from jedi import cachecache13,410
from jedi import debugdebug14,433
from jedi.parser.tokenize import (source_tokens, NEWLINE,source_tokens15,456
from jedi.parser.tokenize import (source_tokens, NEWLINE,NEWLINE15,456
FLOWS = 'if', 'else', 'elif', 'while', 'with', 'try', 'except', 'finally', 'for'FLOWS18,576
class FastModule(tree.Module):FastModule21,659
    type = 'file_input'type22,690
    def __init__(self, module_path):__init__24,715
    def reset_caches(self):reset_caches31,913
    def used_names(self):used_names40,1164
    def global_names(self):global_names44,1274
    def error_statement_stacks(self):error_statement_stacks48,1388
    def __repr__(self):__repr__51,1502
    def global_names(self, value):global_names58,1845
    def error_statement_stacks(self, value):error_statement_stacks62,1929
    def used_names(self, value):used_names66,2011
class MergedNamesDict(object):MergedNamesDict70,2059
    def __init__(self, dicts):__init__71,2090
    def __iter__(self):__iter__74,2149
    def __getitem__(self, value):__getitem__77,2241
    def items(self):items80,2359
    def values(self):values91,2677
class CachedFastParser(type):CachedFastParser98,2800
    def __call__(self, grammar, source, module_path=None):__call__100,2888
class ParserNode(object):ParserNode113,3360
    def __init__(self, fast_module, parser, source):__init__114,3386
    def _rewrite_last_newline(self):_rewrite_last_newline134,4052
    def __repr__(self):__repr__149,4777
    def reset_node(self):reset_node157,5061
    def close(self):close172,5589
    def parent_until_indent(self, indent=None):parent_until_indent184,6116
    def _indent(self):_indent191,6366
    def add_node(self, node, line_offset):add_node197,6499
    def all_sub_nodes(self):all_sub_nodes217,7246
    def remove_last_newline(self):remove_last_newline227,7533
class FastParser(use_metaclass(CachedFastParser)):FastParser231,7612
    _FLOWS_NEED_SPACE = 'if', 'elif', 'while', 'with', 'except', 'for'_FLOWS_NEED_SPACE232,7663
    _FLOWS_NEED_COLON = 'else', 'try', 'except', 'finally'_FLOWS_NEED_COLON233,7734
    _keyword_re = re.compile('^[ \t]*(def |class |@|(?:%s)|(?:%s)\s*:)'_keyword_re234,7793
    def __init__(self, grammar, source, module_path=None):__init__238,7989
    def _reset_caches(self):_reset_caches245,8218
    def update(self, source):update249,8361
    def _split_parts(self, source):_split_parts263,8863
        def gen_part():gen_part269,9102
        def just_newlines(current_lines):just_newlines275,9265
    def _parse(self, source):_parse358,12641
    def _get_node(self, source, parser_code, line_offset, nodes):_get_node419,15520
class FastTokenizer(object):FastTokenizer447,16522
    def __init__(self, source):__init__451,16647
    def __iter__(self):__iter__467,17151
    def next(self):next470,17196
    def __next__(self):__next__474,17287
    def _close(self):_close546,20300
    def _finish_dedents(self):_finish_dedents557,20667
    def _get_prefix(self):_get_prefix567,21024

anaconda-mode/0.1.2/jedi/parser/pgen2/__init__.py,0

anaconda-mode/0.1.2/jedi/parser/pgen2/grammar.py,314
import picklepickle20,654
class Grammar(object):Grammar23,670
    def __init__(self):__init__77,3191
    def dump(self, filename):dump88,3473
    def load(self, filename):load93,3645
    def copy(self):copy99,3837
    def report(self):report112,4263
        from pprint import pprintpprint114,4358

anaconda-mode/0.1.2/jedi/parser/pgen2/parse.py,592
from jedi.parser import tokenizetokenize18,462
class ParseError(Exception):ParseError21,497
    def __init__(self, msg, type, value, start_pos):__init__24,578
class PgenParser(object):PgenParser33,893
    def __init__(self, grammar, convert_node, convert_leaf, error_recovery):__init__63,2008
    def parse(self, tokenizer):parse104,3690
    def addtoken(self, type, value, prefix, start_pos):addtoken117,4303
    def shift(self, type, value, newstate, prefix, start_pos):shift173,6795
    def push(self, type, newdfa, newstate):push180,7104
    def pop(self):pop187,7361

anaconda-mode/0.1.2/jedi/parser/pgen2/pgen.py,1748
from . import grammargrammar9,253
from jedi.parser import tokentoken10,275
from jedi.parser import tokenizetokenize11,305
class ParserGenerator(object):ParserGenerator14,340
    def __init__(self, filename, stream=None):__init__15,371
    def make_grammar(self):make_grammar30,935
    def make_first(self, c, name):make_first55,1864
    def make_label(self, c, label):make_label64,2151
    def addfirstsets(self):addfirstsets110,4032
    def calcfirst(self, name):calcfirst118,4273
    def parse(self):parse148,5490
    def make_dfa(self, start, finish):make_dfa172,6310
        def closure(state):closure180,6663
        def addclosure(state, base):addclosure185,6774
    def dump_nfa(self, name, start, finish):dump_nfa211,7785
    def dump_dfa(self, name, dfa):dump_dfa227,8368
    def simplify_dfa(self, dfa):simplify_dfa234,8666
    def parse_rhs(self):parse_rhs255,9508
    def parse_alt(self):parse_alt272,9963
    def parse_item(self):parse_item282,10242
    def parse_atom(self):parse_atom302,10802
    def expect(self, type, value=None):expect319,11368
    def gettoken(self):gettoken327,11681
    def raise_error(self, msg, *args):raise_error334,11949
class NFAState(object):NFAState345,12316
    def __init__(self):__init__346,12340
    def addarc(self, next, label=None):addarc349,12423
class DFAState(object):DFAState355,12602
    def __init__(self, nfaset, final):__init__356,12626
    def addarc(self, next, label):addarc364,12926
    def unifystate(self, old, new):unifystate370,13112
    def __eq__(self, other):__eq__375,13262
    __hash__ = None  # For Py3 compatibility.__hash__389,13810
def generate_grammar(filename="Grammar.txt"):generate_grammar392,13858

anaconda-mode/0.1.2/jedi/parser/token.py,310
from __future__ import absolute_importabsolute_import1,0
from jedi._compatibility import is_py3is_py33,40
COMMENT = N_TOKENSCOMMENT7,101
NL = N_TOKENSNL11,165
    BACKQUOTE = N_TOKENSBACKQUOTE16,225
    RARROW = N_TOKENSRARROW20,312
    ELLIPSIS = N_TOKENSELLIPSIS23,384
opmap = {}opmap81,1081

anaconda-mode/0.1.2/jedi/parser/tokenize.py,3021
from __future__ import absolute_importabsolute_import12,454
import stringstring14,494
import rere15,508
from io import StringIOStringIO16,518
from jedi.parser.token import (tok_name, N_TOKENS, ENDMARKER, STRING, NUMBER,tok_name17,542
from jedi.parser.token import (tok_name, N_TOKENS, ENDMARKER, STRING, NUMBER,N_TOKENS17,542
from jedi.parser.token import (tok_name, N_TOKENS, ENDMARKER, STRING, NUMBER,ENDMARKER17,542
from jedi.parser.token import (tok_name, N_TOKENS, ENDMARKER, STRING, NUMBER,STRING17,542
from jedi.parser.token import (tok_name, N_TOKENS, ENDMARKER, STRING, NUMBER,NUMBER17,542
from jedi._compatibility import is_py3is_py319,698
cookie_re = re.compile("coding[:=]\s*([-\w.]+)")cookie_re22,739
    is_identifier = str.isidentifieris_identifier27,880
    namechars = string.ascii_letters + '_'namechars29,923
    is_identifier = lambda s: s in namecharsis_identifier30,966
COMMENT = N_TOKENSCOMMENT33,1013
def group(*choices):group37,1064
def maybe(*choices):maybe41,1128
whitespace = r'[ \f\t]*'whitespace47,1275
comment = r'#[^\r\n]*'comment48,1300
name = r'\w+'name49,1323
hex_number = r'0[xX][0-9a-fA-F]+'hex_number51,1338
bin_number = r'0[bB][01]+'bin_number52,1372
oct_number = r'0[oO][0-7]+'oct_number53,1399
dec_number = r'(?:0+|[1-9][0-9]*)'dec_number54,1427
int_number = group(hex_number, bin_number, oct_number, dec_number)int_number55,1462
exponent = r'[eE][-+]?[0-9]+'exponent56,1529
point_float = group(r'[0-9]+\.[0-9]*', r'\.[0-9]+') + maybe(exponent)point_float57,1559
Expfloat = r'[0-9]+' + exponentExpfloat58,1629
float_number = group(point_float, Expfloat)float_number59,1661
imag_number = group(r'[0-9]+[jJ]', float_number + r'[jJ]')imag_number60,1705
number = group(imag_number, float_number, int_number)number61,1764
single = r"[^'\\]*(?:\\.[^'\\]*)*'"single64,1843
double = r'[^"\\]*(?:\\.[^"\\]*)*"'double66,1903
single3 = r"[^'\\]*(?:(?:\\.|'(?!''))[^'\\]*)*'''"single368,1965
double3 = r'[^"\\]*(?:(?:\\.|"(?!""))[^"\\]*)*"""'double370,2042
triple = group("[uUbB]?[rR]?'''", '[uUbB]?[rR]?"""')triple71,2093
operator = group(r"\*\*=?", r">>=?", r"<<=?", r"!=",operator77,2351
bracket = '[][(){}]'bracket82,2499
special = group(r'\r?\n', r'\.\.\.', r'[:;.,@]')special83,2520
funny = group(operator, bracket, special)funny84,2569
cont_str = group(r"[bBuU]?[rR]?'[^\n'\\]*(?:\\.[^\n'\\]*)*" +cont_str87,2653
pseudo_extras = group(r'\\\r?\n', comment, triple)pseudo_extras91,2859
    group(pseudo_extras, number, funny, cont_str, name)pseudo_token93,2947
def _compile(expr):_compile96,3005
endprogs = {"'": _compile(single), '"': _compile(double),endprogs103,3160
triple_quoted = {}triple_quoted121,4099
single_quoted = {}single_quoted131,4478
tabsize = 8tabsize144,4812
ALWAYS_BREAK_TOKENS = (';', 'import', 'from', 'class', 'def', 'try', 'except',ALWAYS_BREAK_TOKENS146,4825
def source_tokens(source):source_tokens150,4959
def generate_tokens(readline):generate_tokens157,5196

anaconda-mode/0.1.2/jedi/parser/tree.py,11479
import osos31,1093
import rere32,1103
from inspect import cleandoccleandoc33,1113
from itertools import chainchain34,1142
import textwraptextwrap35,1170
from jedi._compatibility import (Python3Method, encoding, is_py3, utf8_repr,Python3Method37,1187
from jedi._compatibility import (Python3Method, encoding, is_py3, utf8_repr,encoding37,1187
from jedi._compatibility import (Python3Method, encoding, is_py3, utf8_repr,is_py337,1187
from jedi._compatibility import (Python3Method, encoding, is_py3, utf8_repr,utf8_repr37,1187
from jedi import cachecache39,1335
def is_node(node, *symbol_names):is_node42,1360
class PositionModifier(object):PositionModifier51,1524
    def __init__(self):__init__53,1608
zero_position_modifier = PositionModifier()zero_position_modifier57,1656
class DocstringMixin(object):DocstringMixin60,1702
    __slots__ = ()__slots__61,1732
    def raw_doc(self):raw_doc64,1766
class Base(object):Base98,3112
    __slots__ = ()__slots__107,3517
    def isinstance(self, *cls):isinstance109,3537
    def get_parent_until(self, classes=(), reverse=False,get_parent_until113,3626
    def get_parent_scope(self, include_flows=False):get_parent_scope130,4286
    def is_scope(self):is_scope143,4659
class Leaf(Base):Leaf148,4771
    __slots__ = ('position_modifier', 'value', 'parent', '_start_pos', 'prefix')__slots__149,4789
    def __init__(self, position_modifier, value, start_pos, prefix=''):__init__151,4871
    def start_pos(self):start_pos159,5128
    def start_pos(self, value):start_pos163,5260
    def end_pos(self):end_pos167,5382
    def move(self, line_offset, column_offset):move171,5526
    def get_previous(self):get_previous175,5699
    def get_code(self):get_code197,6351
    def next_sibling(self):next_sibling200,6416
    def prev_sibling(self):prev_sibling213,6906
    def __repr__(self):__repr__227,7396
class LeafWithNewLines(Leaf):LeafWithNewLines231,7484
    __slots__ = ()__slots__232,7514
    def end_pos(self):end_pos235,7548
class Whitespace(LeafWithNewLines):Whitespace251,8092
    __slots__ = ()__slots__253,8177
    type = 'whitespace'type254,8196
class Name(Leaf):Name257,8222
    type = 'name'type262,8348
    __slots__ = ()__slots__263,8366
    def __str__(self):__str__265,8386
    def __unicode__(self):__unicode__268,8436
    def __repr__(self):__repr__271,8490
    def get_definition(self):get_definition275,8656
    def is_definition(self):is_definition291,9215
    def assignment_indexes(self):assignment_indexes304,9780
class Literal(LeafWithNewLines):Literal334,10686
    __slots__ = ()__slots__335,10719
    def eval(self):eval337,10739
class Number(Literal):Number341,10801
    type = 'number'type342,10824
    __slots__ = ()__slots__343,10844
class String(Literal):String346,10865
    type = 'string'type347,10888
    __slots__ = ()__slots__348,10908
class Operator(Leaf):Operator351,10929
    type = 'operator'type352,10951
    __slots__ = ()__slots__353,10973
    def __str__(self):__str__355,10993
    def __eq__(self, other):__eq__358,11043
    def __ne__(self, other):__ne__368,11315
    def __hash__(self):__hash__372,11418
class Keyword(Leaf):Keyword376,11476
    type = 'keyword'type377,11497
    __slots__ = ()__slots__378,11518
    def __eq__(self, other):__eq__380,11538
    def __ne__(self, other):__ne__389,11791
    def __hash__(self):__hash__393,11897
class BaseNode(Base):BaseNode397,11955
    __slots__ = ('children', 'parent')__slots__402,12114
    type = Nonetype403,12153
    def __init__(self, children):__init__405,12170
    def move(self, line_offset, column_offset):move416,12456
    def start_pos(self):start_pos424,12657
    def end_pos(self):end_pos428,12739
    def get_code(self):get_code431,12804
    def name_for_position(self, position):name_for_position435,12908
    def get_statement_for_position(self, pos):get_statement_for_position447,13315
    def first_leaf(self):first_leaf460,13840
    def __repr__(self):__repr__467,14011
class Node(BaseNode):Node475,14276
    __slots__ = ('type',)__slots__477,14352
    def __init__(self, type, children):__init__479,14379
    def __repr__(self):__repr__491,14745
class IsScopeMeta(type):IsScopeMeta495,14853
    def __instancecheck__(self, other):__instancecheck__496,14878
class IsScope(use_metaclass(IsScopeMeta)):IsScope500,14952
class Scope(BaseNode, DocstringMixin):Scope504,15006
    __slots__ = ('names_dict',)__slots__515,15428
    def __init__(self, children):__init__517,15461
    def returns(self):returns521,15556
    def subscopes(self):subscopes527,15764
    def flows(self):flows531,15848
    def imports(self):imports535,15927
    def _search_in_scope(self, typ):_search_in_scope539,16015
        def scan(children):scan540,16052
    def statements(self):statements553,16496
    def is_scope(self):is_scope556,16590
    def __repr__(self):__repr__559,16635
    def walk(self):walk571,16988
class Module(Scope):Module584,17297
    __slots__ = ('path', 'global_names', 'used_names', '_name',__slots__590,17476
    type = 'file_input'type592,17583
    def __init__(self, children):__init__594,17608
    def name(self):name608,17950
    def has_explicit_absolute_import(self):has_explicit_absolute_import624,18556
class Decorator(BaseNode):Decorator641,19284
    type = 'decorator'type642,19311
    __slots__ = ()__slots__643,19334
class ClassOrFunc(Scope):ClassOrFunc646,19355
    __slots__ = ()__slots__647,19381
    def name(self):name650,19415
    def get_decorators(self):get_decorators653,19468
class Class(ClassOrFunc):Class664,19791
    type = 'classdef'type675,20123
    __slots__ = ()__slots__676,20145
    def __init__(self, children):__init__678,20165
    def get_super_arglist(self):get_super_arglist681,20246
    def doc(self):doc691,20537
def _create_params(parent, argslist_list):_create_params703,20895
    def check_python2_nested_param(node):check_python2_nested_param714,21453
class Function(ClassOrFunc):Function748,22698
    __slots__ = ('listeners',)__slots__752,22803
    type = 'funcdef'type753,22834
    def __init__(self, children):__init__755,22856
        parameters = self.children[2]  # After `def foo`foo758,23007
    def params(self):params762,23169
    def name(self):name766,23253
    def yields(self):yields770,23347
    def is_generator(self):is_generator774,23493
    def annotation(self):annotation777,23555
            return self.children[6]  # 6th element: def foo(...) -> barfoo779,23594
    def get_call_signature(self, width=72, func_name=None):get_call_signature783,23718
    def doc(self):doc799,24239
class Lambda(Function):Lambda805,24421
    type = 'lambda'type809,24537
    __slots__ = ()__slots__810,24557
    def __init__(self, children):__init__812,24577
        lst = self.children[1:-2]  # After `def foo`foo816,24803
    def params(self):params820,24927
    def is_generator(self):is_generator823,24985
    def yields(self):yields826,25035
    def __repr__(self):__repr__829,25076
class Flow(BaseNode):Flow833,25171
    __slots__ = ()__slots__834,25193
class IfStmt(Flow):IfStmt837,25214
    type = 'if_stmt'type838,25234
    __slots__ = ()__slots__839,25255
    def check_nodes(self):check_nodes841,25275
    def node_in_which_check_node(self, node):node_in_which_check_node854,25599
    def node_after_else(self, node):node_after_else859,25796
class WhileStmt(Flow):WhileStmt871,26089
    type = 'while_stmt'type872,26112
    __slots__ = ()__slots__873,26136
class ForStmt(Flow):ForStmt876,26157
    type = 'for_stmt'type877,26178
    __slots__ = ()__slots__878,26200
class TryStmt(Flow):TryStmt881,26221
    type = 'try_stmt'type882,26242
    __slots__ = ()__slots__883,26264
    def except_clauses(self):except_clauses885,26284
class WithStmt(Flow):WithStmt897,26664
    type = 'with_stmt'type898,26686
    __slots__ = ()__slots__899,26709
    def get_defined_names(self):get_defined_names901,26729
    def node_from_name(self, name):node_from_name909,27009
class Import(BaseNode):Import917,27201
    __slots__ = ()__slots__918,27225
    def path_for_name(self, name):path_for_name920,27245
        raise ValueError('Name should be defined in the import itself')itself930,27570
    def is_nested(self):is_nested932,27643
    def is_star_import(self):is_star_import935,27745
class ImportFrom(Import):ImportFrom939,27817
    type = 'import_from'type940,27843
    __slots__ = ()__slots__941,27868
    def get_defined_names(self):get_defined_names943,27888
    def aliases(self):aliases946,27995
    def get_from_names(self):get_from_names951,28197
    def level(self):level963,28551
    def _as_name_tuples(self):_as_name_tuples973,28813
    def star_import_name(self):star_import_name990,29345
    def paths(self):paths996,29486
class ImportName(Import):ImportName1008,29846
    type = 'import_name'type1010,29949
    __slots__ = ()__slots__1011,29974
    def get_defined_names(self):get_defined_names1013,29994
    def level(self):level1017,30119
    def paths(self):paths1021,30252
    def _dotted_as_names(self):_dotted_as_names1024,30339
    def is_nested(self):is_nested1044,31051
    def aliases(self):aliases1054,31347
class KeywordStatement(BaseNode):KeywordStatement1059,31495
    __slots__ = ()__slots__1064,31698
    def keyword(self):keyword1067,31732
class AssertStmt(KeywordStatement):AssertStmt1071,31795
    type = 'assert_stmt'type1072,31831
    __slots__ = ()__slots__1073,31856
    def assertion(self):assertion1075,31876
class GlobalStmt(KeywordStatement):GlobalStmt1079,31935
    type = 'global_stmt'type1080,31971
    __slots__ = ()__slots__1081,31996
    def get_defined_names(self):get_defined_names1083,32016
    def get_global_names(self):get_global_names1086,32068
class ReturnStmt(KeywordStatement):ReturnStmt1090,32137
    type = 'return_stmt'type1091,32173
    __slots__ = ()__slots__1092,32198
class YieldExpr(BaseNode):YieldExpr1095,32219
    type = 'yield_expr'type1096,32246
    __slots__ = ()__slots__1097,32270
def _defined_names(current):_defined_names1100,32291
class ExprStmt(BaseNode, DocstringMixin):ExprStmt1121,33008
    type = 'expr_stmt'type1122,33050
    __slots__ = ()__slots__1123,33073
    def get_defined_names(self):get_defined_names1125,33093
    def get_rhs(self):get_rhs1130,33364
    def first_operation(self):first_operation1134,33478
class Param(BaseNode):Param1144,33700
    type = 'param'type1150,33955
    def __init__(self, children, parent):__init__1152,33975
    def stars(self):stars1159,34170
    def default(self):default1166,34325
    def annotation(self):annotation1172,34488
    def _tfpdef(self):_tfpdef1176,34581
    def name(self):name1184,34767
    def position_nr(self):position_nr1191,34942
    def parent_function(self):parent_function1195,35036
    def __repr__(self):__repr__1198,35114
class CompFor(BaseNode):CompFor1203,35292
    type = 'comp_for'type1204,35317
    __slots__ = ()__slots__1205,35339
    def is_scope(self):is_scope1207,35359
    def names_dict(self):names_dict1211,35418
    def names_dicts(self, search_global):names_dicts1218,35605
    def get_defined_names(self):get_defined_names1221,35678

anaconda-mode/0.1.2/jedi/parser/user_context.py,2066
import rere1,0
import osos2,10
import keywordkeyword3,20
from jedi import cachecache5,36
from jedi import commoncommon6,59
from jedi.parser import tokenize, Parsertokenize7,83
from jedi.parser import tokenize, ParserParser7,83
from jedi._compatibility import uu8,124
from jedi.parser.fast import FastParserFastParser9,158
from jedi.parser import treetree10,198
from jedi import debugdebug11,227
from jedi.common import PushBackIteratorPushBackIterator12,250
REPLACE_STR = r"[bBuU]?[rR]?" + (r"(?:(')[^\n'\\]*(?:\\.[^\n'\\]*)*(?:'|$)" +REPLACE_STR15,293
REPLACE_STR = re.compile(REPLACE_STR)REPLACE_STR18,485
class UserContext(object):UserContext21,525
    def __init__(self, source, position):__init__27,717
    def get_path_until_cursor(self):get_path_until_cursor35,924
    def _backwards_line_generator(self, start_pos):_backwards_line_generator40,1112
    def _get_backwards_tokenizer(self, start_pos, line_gen=None):_get_backwards_tokenizer53,1556
    def _calc_path_until_cursor(self, start_pos):_calc_path_until_cursor71,2479
    def get_path_under_cursor(self):get_path_under_cursor139,5074
    def get_path_after_cursor(self):get_path_after_cursor146,5339
    def get_operator_under_cursor(self):get_operator_under_cursor150,5494
    def call_signature(self):call_signature157,5839
        def get_line(pos):get_line161,5967
            def simplify_str(match):simplify_str162,5994
    def get_context(self, yield_positions=False):get_context217,8252
    def get_line(self, line_nr):get_line249,9338
    def get_position_line(self):get_position_line264,9813
class UserContextParser(object):UserContextParser268,9914
    def __init__(self, grammar, source, path, position, user_context,__init__269,9947
    def _parser(self):_parser280,10410
    def user_stmt(self):user_stmt292,10928
    def user_stmt_with_whitespace(self):user_stmt_with_whitespace298,11114
    def user_scope(self):user_scope318,11993
            def scan(scope):scan324,12184
    def module(self):module338,12790

anaconda-mode/0.1.2/jedi/refactoring.py,615
import difflibdifflib15,452
from jedi import commoncommon17,468
from jedi.evaluate import helpershelpers18,492
from jedi.parser import tree as ptpt19,526
class Refactoring(object):Refactoring22,563
    def __init__(self, change_dct):__init__23,590
    def old_files(self):old_files29,763
    def new_files(self):new_files35,945
    def diff(self):diff41,1127
def rename(script, new_name):rename52,1499
def _rename(names, replace_str):_rename62,1824
    def process(path, old_lines, new_lines):process67,2006
def extract(script, new_name):extract97,3021
def inline(script):inline159,5397

anaconda-mode/0.1.2/jedi/settings.py,1633
import osos77,1795
import platformplatform78,1805
case_insensitive_completion = Truecase_insensitive_completion84,1890
add_dot_after_module = Falseadd_dot_after_module89,1981
add_bracket_after_function = Falseadd_bracket_after_function96,2203
no_completion_duplicates = Trueno_completion_duplicates102,2383
use_filesystem_cache = Trueuse_filesystem_cache112,2607
    _cache_directory = os.path.join(os.getenv('APPDATA') or '~', 'Jedi',_cache_directory118,2747
    _cache_directory = os.path.join('~', 'Library', 'Caches', 'Jedi')_cache_directory121,2908
    _cache_directory = os.path.join(os.getenv('XDG_CACHE_HOME') or '~/.cache',_cache_directory123,2984
cache_directory = os.path.expanduser(_cache_directory)cache_directory125,3107
fast_parser = Truefast_parser139,3519
dynamic_array_additions = Truedynamic_array_additions150,3772
dynamic_params = Truedynamic_params155,3886
dynamic_params_for_other_modules = Truedynamic_params_for_other_modules161,4019
additional_dynamic_modules = []additional_dynamic_modules166,4099
dynamic_flow_information = Truedynamic_flow_information172,4293
auto_import_modules = [auto_import_modules177,4396
max_until_execution_unique = 50max_until_execution_unique190,4690
max_function_recursion_level = 5max_function_recursion_level198,4962
max_executions_without_builtins = 200max_executions_without_builtins207,5291
max_executions = 250max_executions212,5363
scale_call_signatures = 0.1scale_call_signatures217,5443
star_import_cache_validity = 60.0star_import_cache_validity228,5749
call_signatures_validity = 3.0call_signatures_validity235,5966

anaconda-mode/0.1.2/jedi/utils.py,692
from __future__ import absolute_importabsolute_import5,34
import __main____main__6,73
from collections import namedtuplenamedtuple7,89
import rere8,124
import osos9,134
import syssys10,144
from jedi import InterpreterInterpreter12,156
from jedi.api.helpers import completion_partscompletion_parts13,185
from jedi.parser.user_context import UserContextUserContext14,231
def setup_readline(namespace_module=__main__):setup_readline17,282
    class JediRL(object):JediRL58,1727
        def complete(self, text, state):complete59,1753
        import readlinereadline89,2986
def version_info():version_info106,3719
    from jedi import __version____version__112,3904

anaconda-mode/0.1.2/service_factory/__init__.py,105
from .factory import service_factoryservice_factory14,277
__all__ = ['service_factory']__all__16,315

anaconda-mode/0.1.2/service_factory/errors.py,329
from json import dumpsdumps13,303
import sixsix15,327
from .exceptions import ServiceExceptionServiceException17,339
def parse_error():parse_error20,382
def invalid_request(error):invalid_request34,650
def method_not_found(request_id):method_not_found54,1057
def server_error(request_id, error):server_error73,1453

anaconda-mode/0.1.2/service_factory/exceptions.py,59
class ServiceException(Exception):ServiceException15,322

anaconda-mode/0.1.2/service_factory/factory.py,183
from .providers.basehttp import HTTPServiceProviderHTTPServiceProvider14,292
from .service import ServiceService15,344
def service_factory(app, host, port,service_factory18,375

anaconda-mode/0.1.2/service_factory/providers/__init__.py,0

anaconda-mode/0.1.2/service_factory/providers/basehttp.py,957
import socketsocket14,344
import syssys15,358
from traceback import print_excprint_exc16,369
from six.moves.BaseHTTPServer import BaseHTTPRequestHandler, HTTPServerBaseHTTPRequestHandler18,402
from six.moves.BaseHTTPServer import BaseHTTPRequestHandler, HTTPServerHTTPServer18,402
from service_factory.errors import parse_errorparse_error20,475
from service_factory.exceptions import ServiceExceptionServiceException21,522
class HTTPRequestHandler(BaseHTTPRequestHandler):HTTPRequestHandler24,580
    protocol_version = 'HTTP/1.1'protocol_version26,631
    error_message_format = ''error_message_format27,665
    def log_request(self, *args):log_request29,696
    def do_POST(self):do_POST34,794
class HTTPServiceProvider(HTTPServer):HTTPServiceProvider55,1510
    def __init__(self, service, host, port,__init__58,1588
    def bind(self):bind67,1844
    def do_bind(self):do_bind83,2250
    def report(self):report88,2411

anaconda-mode/0.1.2/service_factory/service.py,478
from json import loads, dumpsloads13,289
from json import loads, dumpsdumps13,289
class Service(object):Service21,505
    def __init__(self, app):__init__24,589
    def __call__(self, arg):__call__37,933
    def load_args(self, arg):load_args53,1335
    def validate(self, request):validate68,1625
    def get_method(self, args):get_method84,2028
    def apply(self, method, args):apply94,2285
    def make_response(self, args, result):make_response108,2672

anaconda-mode/0.1.2/service_factory/validation.py,229
import sixsix14,313
def validate_version(request):validate_version17,326
def validate_method(request):validate_method25,537
def validate_params(request):validate_params33,764
def validate_id(request):validate_id42,1011

anaconda-mode/0.1.2/six.py,9169
from __future__ import absolute_importabsolute_import23,1164
import functoolsfunctools25,1204
import itertoolsitertools26,1221
import operatoroperator27,1238
import syssys28,1254
import typestypes29,1265
__author__ = "Benjamin Peterson <benjamin@python.org>"__author__31,1279
__version__ = "1.10.0"__version__32,1334
    string_types = str,string_types41,1519
    integer_types = int,integer_types42,1543
    class_types = type,class_types43,1568
    text_type = strtext_type44,1592
    binary_type = bytesbinary_type45,1612
    MAXSIZE = sys.maxsizeMAXSIZE47,1637
    string_types = basestring,string_types49,1669
    integer_types = (int, long)integer_types50,1700
    class_types = (type, types.ClassType)class_types51,1732
    text_type = unicodetext_type52,1774
    binary_type = strbinary_type53,1798
        MAXSIZE = int((1 << 31) - 1)MAXSIZE57,1899
        class X(object):X60,2014
            def __len__(self):__len__62,2040
            MAXSIZE = int((1 << 31) - 1)MAXSIZE68,2187
            MAXSIZE = int((1 << 63) - 1)MAXSIZE71,2263
def _add_doc(func, doc):_add_doc75,2320
def _import_module(name):_import_module80,2413
class _LazyDescr(object):_LazyDescr86,2557
    def __init__(self, name):__init__88,2584
    def __get__(self, obj, tp):__get__91,2640
class MovedModule(_LazyDescr):MovedModule103,3006
    def __init__(self, name, old, new=None):__init__105,3038
    def _resolve(self):_resolve114,3271
    def __getattr__(self, attr):__getattr__117,3336
class _LazyModule(types.ModuleType):_LazyModule124,3500
    def __init__(self, name):__init__126,3538
    def __dir__(self):__dir__130,3663
    _moved_attributes = []_moved_attributes136,3850
class MovedAttribute(_LazyDescr):MovedAttribute139,3879
    def __init__(self, name, old_mod, new_mod, old_attr=None, new_attr=None):__init__141,3914
    def _resolve(self):_resolve159,4498
class _SixMetaPathImporter(object):_SixMetaPathImporter164,4608
    def __init__(self, six_module_name):__init__173,4863
    def _add_module(self, mod, *fullnames):_add_module177,4973
    def _get_module(self, fullname):_get_module181,5118
    def find_module(self, fullname, path=None):find_module184,5218
    def __get_module(self, fullname):__get_module189,5354
    def load_module(self, fullname):load_module195,5557
    def is_package(self, fullname):is_package209,5944
    def get_code(self, fullname):get_code218,6218
    get_source = get_code  # same as get_codeget_source224,6415
_importer = _SixMetaPathImporter(__name__)_importer226,6462
class _MovedItems(_LazyModule):_MovedItems229,6507
    __path__ = []  # mark as package__path__232,6580
_moved_attributes = [_moved_attributes235,6619
moves = _MovedItems(__name__ + ".moves")moves316,11188
class Module_six_moves_urllib_parse(_LazyModule):Module_six_moves_urllib_parse320,11269
_urllib_parse_moved_attributes = [_urllib_parse_moved_attributes325,11388
class Module_six_moves_urllib_error(_LazyModule):Module_six_moves_urllib_error360,13175
_urllib_error_moved_attributes = [_urllib_error_moved_attributes365,13294
class Module_six_moves_urllib_request(_LazyModule):Module_six_moves_urllib_request380,13871
_urllib_request_moved_attributes = [_urllib_request_moved_attributes385,13994
class Module_six_moves_urllib_response(_LazyModule):Module_six_moves_urllib_response430,16639
_urllib_response_moved_attributes = [_urllib_response_moved_attributes435,16764
class Module_six_moves_urllib_robotparser(_LazyModule):Module_six_moves_urllib_robotparser451,17427
_urllib_robotparser_moved_attributes = [_urllib_robotparser_moved_attributes456,17558
class Module_six_moves_urllib(types.ModuleType):Module_six_moves_urllib469,18076
    __path__ = []  # mark as package__path__472,18210
    parse = _importer._get_module("moves.urllib_parse")parse473,18247
    error = _importer._get_module("moves.urllib_error")error474,18303
    request = _importer._get_module("moves.urllib_request")request475,18359
    response = _importer._get_module("moves.urllib_response")response476,18419
    robotparser = _importer._get_module("moves.urllib_robotparser")robotparser477,18481
    def __dir__(self):__dir__479,18550
def add_move(move):add_move486,18761
def remove_move(name):remove_move491,18861
    _meth_func = "im_func"_meth_func511,19336
    _meth_self = "im_self"_meth_self512,19363
    _func_closure = "func_closure"_func_closure514,19391
    _func_code = "func_code"_func_code515,19426
    _func_defaults = "func_defaults"_func_defaults516,19455
    _func_globals = "func_globals"_func_globals517,19492
    advance_iterator = nextadvance_iterator521,19534
    def advance_iterator(it):advance_iterator523,19580
next = advance_iteratornext525,19635
    callable = callablecallable529,19666
    def callable(obj):callable531,19708
    def get_unbound_function(unbound):get_unbound_function536,19821
    create_bound_method = types.MethodTypecreate_bound_method539,19884
    def create_unbound_method(func, cls):create_unbound_method541,19928
    Iterator = objectIterator544,19991
    def get_unbound_function(unbound):get_unbound_function546,20019
    def create_bound_method(func, obj):create_bound_method549,20090
    def create_unbound_method(func, cls):create_unbound_method552,20189
    class Iterator(object):Iterator555,20281
        def next(self):next557,20310
    callable = callablecallable560,20380
get_method_function = operator.attrgetter(_meth_func)get_method_function565,20505
get_method_self = operator.attrgetter(_meth_self)get_method_self566,20559
get_function_closure = operator.attrgetter(_func_closure)get_function_closure567,20609
get_function_code = operator.attrgetter(_func_code)get_function_code568,20667
get_function_defaults = operator.attrgetter(_func_defaults)get_function_defaults569,20719
get_function_globals = operator.attrgetter(_func_globals)get_function_globals570,20779
    def iterkeys(d, **kw):iterkeys574,20847
    def itervalues(d, **kw):itervalues577,20909
    def iteritems(d, **kw):iteritems580,20975
    def iterlists(d, **kw):iterlists583,21039
    viewkeys = operator.methodcaller("keys")viewkeys586,21103
    viewvalues = operator.methodcaller("values")viewvalues588,21149
    viewitems = operator.methodcaller("items")viewitems590,21199
    def iterkeys(d, **kw):iterkeys592,21252
    def itervalues(d, **kw):itervalues595,21312
    def iteritems(d, **kw):iteritems598,21376
    def iterlists(d, **kw):iterlists601,21438
    viewkeys = operator.methodcaller("viewkeys")viewkeys604,21500
    viewvalues = operator.methodcaller("viewvalues")viewvalues606,21550
    viewitems = operator.methodcaller("viewitems")viewitems608,21604
    def b(s):b619,22009
    def u(s):u622,22059
    unichr = chrunichr624,22090
    import structstruct625,22107
    int2byte = struct.Struct(">B").packint2byte626,22125
    byte2int = operator.itemgetter(0)byte2int628,22180
    indexbytes = operator.getitemindexbytes629,22218
    iterbytes = iteriterbytes630,22252
    import ioio631,22273
    StringIO = io.StringIOStringIO632,22287
    BytesIO = io.BytesIOBytesIO633,22314
    _assertCountEqual = "assertCountEqual"_assertCountEqual634,22339
    def b(s):b642,22612
    def u(s):u646,22686
    unichr = unichrunichr648,22768
    int2byte = chrint2byte649,22788
    def byte2int(bs):byte2int651,22808
    def indexbytes(buf, i):indexbytes654,22857
    iterbytes = functools.partial(itertools.imap, ord)iterbytes656,22912
    import StringIOStringIO657,22967
    _assertCountEqual = "assertItemsEqual"_assertCountEqual659,23030
    _assertRaisesRegex = "assertRaisesRegexp"_assertRaisesRegex660,23073
    _assertRegex = "assertRegexpMatches"_assertRegex661,23119
def assertCountEqual(self, *args, **kwargs):assertCountEqual666,23226
def assertRaisesRegex(self, *args, **kwargs):assertRaisesRegex670,23334
def assertRegex(self, *args, **kwargs):assertRegex674,23444
    def reraise(tp, value, tb=None):reraise681,23595
    def exec_(_code_, _globs_=None, _locs_=None):exec_689,23795
    def raise_from(value, from_value):raise_from717,24565
print_ = getattr(moves.builtins, "print", None)print_721,24626
    def print_(*args, **kwargs):print_723,24693
        def write(data):write729,24880
    _print = print__print777,26602
    def print_(*args, **kwargs):print_779,26623
    def wraps(wrapped, assigned=functools.WRAPPER_ASSIGNMENTS,wraps789,26919
        def wrapper(f):wrapper791,27032
    wraps = functools.wrapswraps797,27205
def with_metaclass(meta, *bases):with_metaclass800,27235
    class metaclass(meta):metaclass805,27500
        def __new__(cls, name, this_bases, d):__new__807,27528
def add_metaclass(metaclass):add_metaclass812,27679
    def wrapper(cls):wrapper814,27774
def python_2_unicode_compatible(klass):python_2_unicode_compatible828,28226
__path__ = []  # required for PEP 302 and PEP 451__path__849,29063
__package__ = __name__  # see PEP 366 @ReservedAssignment__package__850,29113

ede-projects.el,0

elpa/ace-jump-mode-20140616.115/ace-jump-mode-autoloads.el,0

elpa/ace-jump-mode-20140616.115/ace-jump-mode-pkg.el,213
(define-package "ace-jump-mode" "20140616.115" "a quick cursor location minor mode for emacs" 'nil :url "https://github.com/winterTTr/ace-jump-mode/" :keywords '("motion" "location" "cursor"))"ace-jump-mode"1,0

elpa/ace-jump-mode-20140616.115/ace-jump-mode.el,4248
(defstruct aj-position offset visual-area)aj-position107,3341
(defmacro aj-position-buffer (aj-pos)aj-position-buffer109,3385
(defmacro aj-position-window (aj-pos)aj-position-window113,3532
(defmacro aj-position-frame (aj-pos)aj-position-frame117,3679
(defmacro aj-position-recover-buffer (aj-pos)aj-position-recover-buffer121,3823
(defstruct aj-visual-area buffer window frame recover-buffer)aj-visual-area132,4178
(defstruct aj-queue head tail)aj-queue138,4323
(defun aj-queue-push (item q)aj-queue-push140,4355
(defun aj-queue-pop (q)aj-queue-pop153,4688
(defvar ace-jump-word-mode-use-query-char tace-jump-word-mode-use-query-char178,5309
(defvar ace-jump-mode-case-fold case-fold-searchace-jump-mode-case-fold181,5430
(defvar ace-jump-mode-mark-ring nilace-jump-mode-mark-ring186,5594
(defvar ace-jump-mode-mark-ring-max 100ace-jump-mode-mark-ring-max189,5694
(defvar ace-jump-mode-gray-background tace-jump-mode-gray-background193,5785
(defvar ace-jump-mode-scope 'globalace-jump-mode-scope199,6018
(defvar ace-jump-mode-detect-punc tace-jump-mode-detect-punc209,6503
(defvar ace-jump-mode-submode-listace-jump-mode-submode-list217,6828
(defvar ace-jump-mode-move-keysace-jump-mode-move-keys243,7528
(defvar ace-jump-mode nilace-jump-mode256,8035
(defvar ace-jump-background-overlay-list nilace-jump-background-overlay-list258,8086
(defvar ace-jump-search-tree nilace-jump-search-tree260,8188
(defvar ace-jump-query-char nilace-jump-query-char263,8330
(defvar ace-jump-current-mode nilace-jump-current-mode265,8415
(defvar ace-jump-sync-emacs-mark-ring nilace-jump-sync-emacs-mark-ring269,8531
(defvar ace-jump-search-filter nilace-jump-search-filter280,9005
(defgroup ace-jump nilace-jump284,9163
(defface ace-jump-face-backgroundace-jump-face-background289,9249
(defface ace-jump-face-foregroundace-jump-face-foreground295,9379
(defvar ace-jump-mode-before-jump-hook nilace-jump-mode-before-jump-hook304,9711
(defvar ace-jump-mode-end-hook nilace-jump-mode-end-hook307,9830
(defvar ace-jump-allow-invisible nilace-jump-allow-invisible310,9929
(defun ace-jump-char-category ( query-char )ace-jump-char-category316,10206
(defun ace-jump-search-candidate (re-query-string visual-area-list)ace-jump-search-candidate351,11221
(defun ace-jump-tree-breadth-first-construct (total-leaf-node max-child-node)ace-jump-tree-breadth-first-construct385,13255
(defun ace-jump-tree-preorder-traverse (tree &optional leaf-func branch-func)ace-jump-tree-preorder-traverse425,15065
(defun ace-jump-populate-overlay-to-search-tree (tree candidate-list)ace-jump-populate-overlay-to-search-tree449,15873
(defun ace-jump-delete-overlay-in-search-tree (tree)ace-jump-delete-overlay-in-search-tree484,18202
(defun ace-jump-buffer-substring (pos)ace-jump-buffer-substring491,18532
(defun ace-jump-update-overlay-in-search-tree (tree keys)ace-jump-update-overlay-in-search-tree498,18793
(defun ace-jump-list-visual-area()ace-jump-list-visual-area540,20864
(defun ace-jump-do( re-query-string )ace-jump-do571,22245
(defun ace-jump-jump-to (position)ace-jump-jump-to646,25632
(defun ace-jump-push-mark ()ace-jump-push-mark684,27015
(defun ace-jump-mode-pop-mark ()ace-jump-mode-pop-mark701,27923
(defun ace-jump-quick-exchange ()ace-jump-quick-exchange769,31930
(defun ace-jump-char-mode (query-char)ace-jump-char-mode796,32757
(defun ace-jump-word-mode (head-char)ace-jump-word-mode815,33412
(defun ace-jump-line-mode ()ace-jump-line-mode853,34811
(defun ace-jump-mode(&optional prefix)ace-jump-mode867,35248
(defun ace-jump-move ()ace-jump-move896,36216
(defun ace-jump-done()ace-jump-done939,38011
(defun ace-jump-kill-buffer(buffer)ace-jump-kill-buffer965,38701
(defun ace-jump-move-to-end-if ( l pred )ace-jump-move-to-end-if977,39126
(defun ace-jump-move-first-to-end-if (l pred)ace-jump-move-first-to-end-if992,39694
(defadvice pop-mark (before ace-jump-pop-mark-advice)pop-mark1004,40069
(defadvice pop-global-mark (before ace-jump-pop-global-mark-advice)pop-global-mark1017,40702
(defun ace-jump-mode-enable-mark-sync ()ace-jump-mode-enable-mark-sync1035,41557
(defun ace-jump-mode-disable-mark-sync ()ace-jump-mode-disable-mark-sync1051,42263

elpa/ag-20160321.1606/ag-autoloads.el,165
(defalias 'ag-project-at-point 'ag-project)ag-project-at-point60,1688
(defalias 'ag-regexp-project-at-point 'ag-project-regexp)ag-regexp-project-at-point62,1733

elpa/ag-20160321.1606/ag-pkg.el,161
(define-package "ag" "20160321.1606" "A front-end for ag ('the silver searcher'), the C ack replacement." '((dash "2.8.0") (s "1.9.0") (cl-lib "0.5")))"ag"1,0

elpa/ag-20160321.1606/ag.el,3123
(defcustom ag-executableag-executable42,1445
(defcustom ag-argumentsag-arguments48,1546
(defcustom ag-highlight-search nilag-highlight-search60,1953
(defcustom ag-reuse-buffers nilag-reuse-buffers67,2167
(defcustom ag-reuse-window nilag-reuse-window74,2369
(defcustom ag-project-root-function nilag-project-root-function80,2520
(defcustom ag-ignore-list nilag-ignore-list92,2929
(defface ag-hit-face '((t :inherit compilation-info))ag-hit-face103,3299
(defface ag-match-face '((t :inherit match))ag-match-face107,3405
(defvar ag-search-finished-hook nilag-search-finished-hook111,3502
(defun ag/run-finished-hook (buffer how-finished)ag/run-finished-hook114,3593
(defmacro ag/with-patch-function (fun-name fun-args fun-body &rest body)ag/with-patch-function119,3778
(defun ag/next-error-function (n &optional reset)ag/next-error-function127,4116
(defvar ag/file-column-patternag/file-column-pattern143,4807
(define-compilation-mode ag-mode "Ag"ag-mode147,4978
(define-key ag-mode-map (kbd "p") #'compilation-previous-error)ag-mode-map159,5587
(define-key ag-mode-map (kbd "n") #'compilation-next-error)ag-mode-map160,5651
(define-key ag-mode-map (kbd "k") '(lambda () (interactive) ag-mode-map161,5711
(defun ag/buffer-name (search-string directory regexp)ag/buffer-name164,5862
(defun ag/format-ignore (ignores)ag/format-ignore171,6180
(defun ag/dwim-at-point ()ag/dwim-at-point227,9043
(defun ag/buffer-extension-regex ()ag/buffer-extension-regex236,9375
(defun ag/longest-string (&rest strings)ag/longest-string245,9708
(defun ag/replace-first (string before after)ag/replace-first257,10136
(defun ag/project-root (file-path)ag/project-root276,10633
(defun ag/dired-align-size-column ()ag/dired-align-size-column290,11039
(defun ag/dired-filter (proc string)ag/dired-filter304,11488
(defun ag/dired-sentinel (proc state)ag/dired-sentinel340,12868
(defun ag/kill-process ()ag/kill-process363,13894
(defun ag/escape-pcre (regexp)ag/escape-pcre373,14240
(defun ag (string directory)ag387,14724
(defun ag-files (string file-type directory)ag-files397,15100
(defun ag-regexp (string directory)ag-regexp409,15583
(defun ag-project (string)ag-project418,15908
(defun ag-project-files (string file-type)ag-project-files427,16219
(defun ag/read-from-minibuffer (prompt)ag/read-from-minibuffer437,16632
(defun ag-project-regexp (regexp)ag-project-regexp457,17404
(defalias 'ag-project-at-point 'ag-project)ag-project-at-point469,17835
(defalias 'ag-regexp-project-at-point 'ag-project-regexp)ag-regexp-project-at-point473,17951
(defun ag-dired (dir pattern)ag-dired477,18095
(defun ag-dired-regexp (dir regexp)ag-dired-regexp491,18499
(defun ag-project-dired (pattern)ag-project-dired547,20922
(defun ag-project-dired-regexp (regexp)ag-project-dired-regexp555,21174
(defun ag-kill-buffers ()ag-kill-buffers563,21419
(defun ag-kill-other-buffers ()ag-kill-other-buffers571,21636
(defun ag-filter ()ag-filter582,22046
(defun ag/get-supported-types ()ag/get-supported-types606,23107
(defun ag/read-file-type ()ag/read-file-type614,23560

elpa/anaconda-mode-20160527.512/anaconda-mode-autoloads.el,0

elpa/anaconda-mode-20160527.512/anaconda-mode-pkg.el,258
(define-package "anaconda-mode" "20160527.512" "Code navigation, documentation lookup and completion for Python" '((emacs "24") (pythonic "0.1.0") (dash "2.6.0") (s "1.9") (f "0.16.2")) :url "https://github.com/proofit404/anaconda-mode")"anaconda-mode"1,0

elpa/anaconda-mode-20160527.512/anaconda-mode.el,7884
(defgroup anaconda-mode nilanaconda-mode38,1228
(defcustom anaconda-mode-installation-directoryanaconda-mode-installation-directory42,1349
(defcustom anaconda-mode-complete-callbackanaconda-mode-complete-callback48,1524
(defcustom anaconda-mode-show-doc-callbackanaconda-mode-show-doc-callback54,1717
(defcustom anaconda-mode-find-definitions-callbackanaconda-mode-find-definitions-callback60,1910
(defcustom anaconda-mode-find-assignments-callbackanaconda-mode-find-assignments-callback66,2127
(defcustom anaconda-mode-find-references-callbackanaconda-mode-find-references-callback72,2344
(defcustom anaconda-mode-eldoc-callbackanaconda-mode-eldoc-callback78,2558
(defcustom anaconda-mode-eldoc-as-single-line nilanaconda-mode-eldoc-as-single-line84,2751
(defvar anaconda-mode-server-version "0.1.2"anaconda-mode-server-version92,2909
(defvar anaconda-mode-server-script "anaconda_mode.py"anaconda-mode-server-script95,3004
(defvar anaconda-mode-process-name "anaconda-mode"anaconda-mode-process-name98,3104
(defvar anaconda-mode-process-buffer "*anaconda-mode*"anaconda-mode-process-buffer101,3203
(defvar anaconda-mode-process nilanaconda-mode-process104,3305
(defun anaconda-mode-show-process-buffer ()anaconda-mode-show-process-buffer107,3386
(defvar anaconda-mode-process-fail-hook nilanaconda-mode-process-fail-hook111,3523
(defvar anaconda-mode-port nilanaconda-mode-port116,3716
(defvar anaconda-mode-ensure-directory-command "anaconda-mode-ensure-directory-command119,3788
(defvar anaconda-mode-check-installation-command "anaconda-mode-check-installation-command126,4018
(defvar anaconda-mode-install-server-command "anaconda-mode-install-server-command138,4418
(defun anaconda-mode-server-directory ()anaconda-mode-server-directory145,4659
(defun anaconda-mode-host ()anaconda-mode-host150,4850
(defun anaconda-mode-start (&optional callback)anaconda-mode-start160,5178
(defun anaconda-mode-stop ()anaconda-mode-stop172,5562
(defun anaconda-mode-running-p ()anaconda-mode-running-p181,5874
(defun anaconda-mode-bound-p ()anaconda-mode-bound-p186,6025
(defun anaconda-mode-need-restart ()anaconda-mode-need-restart190,6125
(defun anaconda-mode-ensure-directory (&optional callback)anaconda-mode-ensure-directory198,6496
(defun anaconda-mode-ensure-directory-sentinel (process _event &optional callback)anaconda-mode-ensure-directory-sentinel210,7149
(defun anaconda-mode-check (&optional callback)anaconda-mode-check221,7684
(defun anaconda-mode-check-sentinel (process _event &optional callback)anaconda-mode-check-sentinel233,8309
(defun anaconda-mode-install (&optional callback)anaconda-mode-install242,8750
(defun anaconda-mode-install-sentinel (process _event &optional callback)anaconda-mode-install-sentinel255,9436
(defun anaconda-mode-bootstrap (&optional callback)anaconda-mode-bootstrap265,9937
(defun anaconda-mode-bootstrap-filter (process output &optional callback)anaconda-mode-bootstrap-filter282,10862
(defun anaconda-mode-bootstrap-sentinel (process _event)anaconda-mode-bootstrap-sentinel299,11579
(defun anaconda-mode-call (command callback)anaconda-mode-call309,11924
(defun anaconda-mode-jsonrpc (command callback)anaconda-mode-jsonrpc315,12124
(defun anaconda-mode-jsonrpc-request (command)anaconda-mode-jsonrpc-request328,12662
(defun anaconda-mode-jsonrpc-request-data (command)anaconda-mode-jsonrpc-request-data332,12857
(defun anaconda-mode-create-response-handler (command callback)anaconda-mode-create-response-handler353,13925
(defvar anaconda-mode-definition-commandsanaconda-mode-definition-commands404,17269
(defvar anaconda-mode-response-buffer "*anaconda-response*"anaconda-mode-response-buffer412,17585
(defvar anaconda-mode-response-read-fail-hook nilanaconda-mode-response-read-fail-hook415,17731
(defun anaconda-mode-show-unreadable-response (response)anaconda-mode-show-unreadable-response420,17942
(defun anaconda-mode-complete ()anaconda-mode-complete432,18280
(defun anaconda-mode-complete-callback (result)anaconda-mode-complete-callback438,18481
(defun anaconda-mode-complete-extract-names (result)anaconda-mode-complete-extract-names447,18939
(defun anaconda-mode-complete-annotation (candidate)anaconda-mode-complete-annotation464,19747
(defun anaconda-mode-show-doc ()anaconda-mode-show-doc472,19948
(defun anaconda-mode-show-doc-callback (result)anaconda-mode-show-doc-callback477,20118
(defun anaconda-mode-find-definitions ()anaconda-mode-find-definitions486,20327
(defun anaconda-mode-find-definitions-callback (result)anaconda-mode-find-definitions-callback491,20509
(defun anaconda-mode-find-assignments ()anaconda-mode-find-assignments500,20726
(defun anaconda-mode-find-assignments-callback (result)anaconda-mode-find-assignments-callback505,20908
(defun anaconda-mode-find-references ()anaconda-mode-find-references514,21124
(defun anaconda-mode-find-references-callback (result)anaconda-mode-find-references-callback519,21293
(defun anaconda-mode-eldoc-function ()anaconda-mode-eldoc-function528,21496
(defun anaconda-mode-eldoc-callback (result)anaconda-mode-eldoc-callback534,21695
(defun anaconda-mode-eldoc-format (result)anaconda-mode-eldoc-format538,21834
(defun anaconda-mode-eldoc-format-definition (name index params)anaconda-mode-eldoc-format-definition549,22276
(defun anaconda-mode-eldoc-format-params (args index)anaconda-mode-eldoc-format-params557,22537
(defmacro anaconda-mode-with-view-buffer (&rest body)anaconda-mode-with-view-buffer571,22857
(defun anaconda-mode-definitions-view (result)anaconda-mode-definitions-view582,23187
(defun anaconda-mode-documentation-view (result)anaconda-mode-documentation-view588,23427
(defun anaconda-mode-view (result presenter)anaconda-mode-view592,23596
(defun anaconda-mode-view-make-bold (string)anaconda-mode-view-make-bold600,23886
(defun anaconda-mode-view-make-source (string)anaconda-mode-view-make-source604,24001
(define-button-type 'anaconda-mode-definition-buttonanaconda-mode-definition-button614,24280
(defun anaconda-mode-view-jump (button)anaconda-mode-view-jump618,24383
(defun anaconda-mode-view-jump-other-window (button)anaconda-mode-view-jump-other-window623,24566
(defun anaconda-mode-find-file (definition)anaconda-mode-find-file628,24775
(defun anaconda-mode-find-file-other-window (definition)anaconda-mode-find-file-other-window632,24929
(defun anaconda-mode-find-file-no-record-definition (definition)anaconda-mode-find-file-no-record-definition636,25122
(defvar-local anaconda-mode-go-back-definitions nilanaconda-mode-go-back-definitions640,25339
(defun anaconda-mode-find-file-generic (definition find-function &optional no-record)anaconda-mode-find-file-generic643,25458
(defun anaconda-mode-view-insert-button (name definition)anaconda-mode-view-insert-button659,26337
(defun anaconda-mode-view-definitions-presenter (result)anaconda-mode-view-definitions-presenter665,26588
(defun anaconda-mode-view-insert-module-definition (module)anaconda-mode-view-insert-module-definition671,26804
(defun anaconda-mode-view-documentation-presenter (result)anaconda-mode-view-documentation-presenter683,27180
(defvar anaconda-mode-view-mode-mapanaconda-mode-view-mode-map693,27482
(define-derived-mode anaconda-mode-view-mode special-mode "Anaconda-View"anaconda-mode-view-mode700,27719
(defun anaconda-mode-next-definition (num _reset)anaconda-mode-next-definition706,27961
(defun anaconda-mode-go-back ()anaconda-mode-go-back713,28277
(defvar anaconda-mode-mapanaconda-mode-map723,28596
(define-minor-mode anaconda-modeanaconda-mode735,29082
(define-minor-mode anaconda-eldoc-modeanaconda-eldoc-mode743,29275
(defun turn-on-anaconda-eldoc-mode ()turn-on-anaconda-eldoc-mode750,29485
(defun turn-off-anaconda-eldoc-mode ()turn-off-anaconda-eldoc-mode756,29706

elpa/async-20160513.128/async-autoloads.el,137
(defvar async-bytecomp-package-mode nil "\async-bytecomp-package-mode81,2745
(defvar dired-async-mode nil "\dired-async-mode103,3534

elpa/async-20160513.128/async-bytecomp.el,759
(defcustom async-bytecomp-allowed-packagesasync-bytecomp-allowed-packages44,1668
(defvar async-byte-compile-log-file "~/.emacs.d/async-bytecomp.log")async-byte-compile-log-file54,2156
(defun async-byte-recompile-directory (directory &optional quiet)async-byte-recompile-directory57,2241
(defvar package-archive-contents)package-archive-contents107,4695
(defvar package-alist)package-alist108,4729
(defun async-bytecomp--get-package-deps (pkg &optional only)async-bytecomp--get-package-deps111,4810
(defun async-bytecomp-get-allowed-pkgs ()async-bytecomp-get-allowed-pkgs134,6054
(defadvice package--compile (around byte-compile-async)package--compile146,6585
(define-minor-mode async-bytecomp-package-modeasync-bytecomp-package-mode165,7430

elpa/async-20160513.128/async-pkg.el,101
(define-package "async" "20160513.128" "Asynchronous processing in Emacs" 'nil :keywords"async"1,0

elpa/async-20160513.128/async.el,1671
(defgroup async nilasync34,1188
(defvar async-debug nil)async-debug38,1270
(defvar async-send-over-pipe t)async-send-over-pipe39,1295
(defvar async-in-child-emacs nil)async-in-child-emacs40,1327
(defvar async-callback nil)async-callback41,1361
(defvar async-callback-for-process nil)async-callback-for-process42,1389
(defvar async-callback-value nil)async-callback-value43,1429
(defvar async-callback-value-set nil)async-callback-value-set44,1463
(defvar async-current-process nil)async-current-process45,1501
(defvar async--procvar nil)async--procvar46,1536
(defun async-inject-variablesasync-inject-variables48,1565
(defalias 'async-inject-environment 'async-inject-variables)async-inject-environment82,2960
(defun async-handle-result (func result buf)async-handle-result84,3022
(defun async-when-done (proc &optional _change)async-when-done98,3505
(defun async--receive-sexp (&optional stream)async--receive-sexp122,4715
(defun async--insert-sexp (sexp)async--insert-sexp134,5175
(defun async--transmit-sexp (process sexp)async--transmit-sexp146,5590
(defun async-batch-invoke ()async-batch-invoke153,5832
(defun async-ready (future)async-ready171,6430
(defun async-wait (future)async-wait178,6729
(defun async-get (future)async-get183,6851
(defun async-message-p (value)async-message-p191,7182
(defun async-send (&rest args)async-send196,7333
(defun async-receive ()async-receive204,7644
(defun async-start-process (name program finish-func &rest program-args)async-start-process209,7771
(defun async-start (start-func &optional finish-func)async-start227,8635
(defmacro async-sandbox(func)async-sandbox297,11183

elpa/async-20160513.128/dired-async.el,1309
(defgroup dired-async nildired-async48,1546
(defcustom dired-async-env-variables-regexpdired-async-env-variables-regexp52,1639
(defcustom dired-async-message-function 'dired-async-mode-line-messagedired-async-message-function58,1859
(defcustom dired-async-log-file "/tmp/dired-async.log"dired-async-log-file64,2069
(defface dired-async-messagedired-async-message69,2231
(defface dired-async-failuresdired-async-failures74,2355
(defface dired-async-mode-messagedired-async-mode-message79,2477
(define-minor-mode dired-async--modeline-modedired-async--modeline-mode84,2623
(defun dired-async-mode-line-message (text face &rest args)dired-async-mode-line-message94,3032
(defun dired-async-processes ()dired-async-processes107,3499
(defun dired-async-kill-process ()dired-async-kill-process113,3711
(defun dired-async-after-file-create (total operation failures skipped)dired-async-after-file-create121,3963
(defun dired-async-maybe-kill-ftp ()dired-async-maybe-kill-ftp161,5747
(defvar overwrite-query)overwrite-query172,6136
(defun dired-async-create-files (file-creator operation fn-list name-constructordired-async-create-files173,6161
(defadvice dired-create-files (around dired-async)dired-create-files313,14060
(define-minor-mode dired-async-modedired-async-mode318,14245

elpa/async-20160513.128/smtpmail-async.el,200
(defgroup smtpmail-async nilsmtpmail-async39,1320
(defvar async-smtpmail-before-send-hook nilasync-smtpmail-before-send-hook47,1475
(defun async-smtpmail-send-it ()async-smtpmail-send-it51,1639

elpa/auto-complete-20160416.604/auto-complete-autoloads.el,74
(defvar global-auto-complete-mode nil "\global-auto-complete-mode20,501

elpa/auto-complete-20160416.604/auto-complete-config.el,2129
(defvar ac-imenu-index nil)ac-imenu-index37,973
(defun ac-imenu-candidates ()ac-imenu-candidates41,1056
(defface ac-gtags-candidate-faceac-gtags-candidate-face79,2496
(defface ac-gtags-selection-faceac-gtags-selection-face84,2641
(defun ac-gtags-candidate ()ac-gtags-candidate89,2800
(defface ac-yasnippet-candidate-faceac-yasnippet-candidate-face102,3146
(defface ac-yasnippet-selection-faceac-yasnippet-selection-face108,3343
(defun ac-yasnippet-table-hash (table)ac-yasnippet-table-hash113,3512
(defun ac-yasnippet-table-parent (table)ac-yasnippet-table-parent120,3694
(defun ac-yasnippet-candidate-1 (table)ac-yasnippet-candidate-1127,3886
(defun ac-yasnippet-candidates ()ac-yasnippet-candidates141,4383
(defun ac-semantic-candidates (prefix)ac-semantic-candidates174,5546
(defun ac-semantic-doc (symbol)ac-semantic-doc185,6057
(defun ac-semantic-action ()ac-semantic-action194,6338
(defun ac-eclim-candidates ()ac-eclim-candidates236,7822
(defconst ac-css-property-alistac-css-property-alist250,8114
(defconst ac-css-value-classesac-css-value-classes389,14346
(defconst ac-css-pseudo-classesac-css-pseudo-classes407,15155
(defvar ac-css-property nilac-css-property412,15389
(defun ac-css-prefix ()ac-css-prefix415,15449
(defun ac-css-property-candidates ()ac-css-property-candidates420,15642
(defvar ac-ropemacs-loaded nil)ac-ropemacs-loaded461,16775
(defun ac-ropemacs-require ()ac-ropemacs-require462,16807
(defun ac-ropemacs-setup ()ac-ropemacs-setup470,17059
(defun ac-ropemacs-initialize ()ac-ropemacs-initialize475,17247
(defvar ac-ropemacs-completions-cache nil)ac-ropemacs-completions-cache484,17530
(defvar ac-source-ropemacsac-source-ropemacs485,17573
(defvar ac-source-rcodetoolsac-source-rcodetools498,17922
(defun ac-common-setup ()ac-common-setup517,18570
(defun ac-emacs-lisp-mode-setup ()ac-emacs-lisp-mode-setup521,18650
(defun ac-cc-mode-setup ()ac-cc-mode-setup524,18827
(defun ac-ruby-mode-setup ())ac-ruby-mode-setup527,18935
(defun ac-css-mode-setup ()ac-css-mode-setup529,18966
(defun ac-config-default ()ac-config-default533,19077

elpa/auto-complete-20160416.604/auto-complete-pkg.el,99
(define-package "auto-complete" "20160416.604" "Auto Completion for GNU Emacs""auto-complete"1,0

elpa/auto-complete-20160416.604/auto-complete.el,15310
(defconst ac-version "1.5.1"ac-version46,1378
(defconst ac-version-major (car (version-to-list ac-version))ac-version-major50,1504
(defconst ac-version-minor (cadr (version-to-list ac-version))ac-version-minor53,1610
(defun ac-error (&optional var)ac-error61,1772
(defgroup auto-complete nilauto-complete72,1981
(defcustom ac-delay 0.1ac-delay77,2069
(defcustom ac-auto-show-menu 0.8ac-auto-show-menu82,2178
(defcustom ac-show-menu-immediately-on-auto-complete tac-show-menu-immediately-on-auto-complete89,2419
(defcustom ac-expand-on-auto-complete tac-expand-on-auto-complete94,2587
(defcustom ac-disable-faces '(font-lock-comment-face font-lock-string-face font-lock-doc-face)ac-disable-faces99,2744
(defcustom ac-stop-flymake-on-completing tac-stop-flymake-on-completing104,2957
(defcustom ac-flycheck-poll-completion-end-interval 0.5ac-flycheck-poll-completion-end-interval109,3103
(defcustom ac-use-fuzzy (and (locate-library "fuzzy") t)ac-use-fuzzy114,3291
(defcustom ac-fuzzy-cursor-color "red"ac-fuzzy-cursor-color119,3429
(defcustom ac-use-comphist tac-use-comphist124,3542
(defcustom ac-comphist-threshold 0.7ac-comphist-threshold129,3668
(defcustom ac-comphist-fileac-comphist-file134,3796
(defcustom ac-user-dictionary nilac-user-dictionary143,4110
(defcustom ac-dictionary-files '("~/.dict")ac-dictionary-files148,4223
(defvaralias 'ac-user-dictionary-files 'ac-dictionary-files)ac-user-dictionary-files152,4339
(defcustom ac-dictionary-directoriesac-dictionary-directories154,4401
(defcustom ac-use-quick-help tac-use-quick-help166,4796
(defcustom ac-quick-help-delay 1.5ac-quick-help-delay171,4904
(defcustom ac-menu-height 10ac-menu-height176,5010
(defvaralias 'ac-candidate-menu-height 'ac-menu-height)ac-candidate-menu-height180,5115
(defcustom ac-quick-help-height 20ac-quick-help-height182,5172
(defcustom ac-quick-help-prefer-pos-tip tac-quick-help-prefer-pos-tip187,5280
(defvaralias 'ac-quick-help-prefer-x 'ac-quick-help-prefer-pos-tip)ac-quick-help-prefer-x191,5449
(defcustom ac-candidate-limit nilac-candidate-limit193,5518
(defvaralias 'ac-candidate-max 'ac-candidate-limit)ac-candidate-max197,5654
(defcustom ac-modesac-modes199,5707
(defcustom ac-compatible-packages-regexpac-compatible-packages-regexp220,6454
(defcustom ac-non-trigger-commandsac-non-trigger-commands226,6612
(defcustom ac-trigger-commandsac-trigger-commands233,6825
(defcustom ac-trigger-commands-on-completingac-trigger-commands-on-completing239,7011
(defcustom ac-trigger-key nilac-trigger-key252,7389
(defcustom ac-auto-start 2ac-auto-start265,7924
(defcustom ac-stop-words nilac-stop-words275,8339
(defvaralias 'ac-ignores 'ac-stop-words)ac-ignores279,8457
(defcustom ac-use-dictionary-as-stop-words tac-use-dictionary-as-stop-words281,8499
(defcustom ac-ignore-case 'smartac-ignore-case286,8667
(defcustom ac-dwim tac-dwim295,9006
(defcustom ac-use-menu-map nilac-use-menu-map300,9135
(defcustom ac-use-overriding-local-map nilac-use-overriding-local-map305,9291
(defcustom ac-disable-inline nilac-disable-inline310,9485
(defcustom ac-candidate-menu-min 1ac-candidate-menu-min315,9610
(defcustom ac-max-width nilac-max-width320,9738
(defface ac-completion-faceac-completion-face327,9993
(defface ac-candidate-faceac-candidate-face332,10125
(defface ac-candidate-mouse-faceac-candidate-mouse-face337,10233
(defface ac-selection-faceac-selection-face342,10364
(defvar auto-complete-mode-hook nilauto-complete-mode-hook347,10496
(defvar auto-complete-mode nilauto-complete-mode354,10597
(defvar ac-cursor-color nilac-cursor-color357,10680
(defvar ac-inline nilac-inline360,10732
(defvar ac-menu nilac-menu363,10788
(defvar ac-show-menu nilac-show-menu366,10829
(defvar ac-last-completion nilac-last-completion369,10893
(defvar ac-quick-help nilac-quick-help372,10990
(defvar ac-completing nilac-completing375,11042
(defvar ac-buffer nilac-buffer378,11139
(defvar ac-point nilac-point381,11206
(defvar ac-last-point nilac-last-point384,11256
(defvar ac-prefix nilac-prefix387,11320
(defvaralias 'ac-target 'ac-prefix)ac-target389,11362
(defvar ac-selected-candidate nilac-selected-candidate391,11399
(defvar ac-common-part nilac-common-part394,11464
(defvar ac-whole-common-part nilac-whole-common-part398,11588
(defvar ac-prefix-overlay nilac-prefix-overlay402,11713
(defvar ac-timer nilac-timer405,11776
(defvar ac-show-menu-timer nilac-show-menu-timer408,11826
(defvar ac-quick-help-timer nilac-quick-help-timer411,11885
(defvar ac-triggered nilac-triggered414,11946
(defvar ac-limit nilac-limit417,11993
(defvar ac-candidates nilac-candidates420,12065
(defvar ac-candidates-cache nilac-candidates-cache423,12117
(defvar ac-fuzzy-enable nilac-fuzzy-enable426,12196
(defvar ac-dwim-enable nilac-dwim-enable429,12271
(defvar ac-mode-map (make-sparse-keymap)ac-mode-map432,12351
(defvar ac-completing-mapac-completing-map435,12490
(defvaralias 'ac-complete-mode-map 'ac-completing-map)ac-complete-mode-map468,13660
(defvar ac-menu-mapac-menu-map470,13716
(defvar ac-current-mapac-current-map484,14215
(defvar ac-match-function 'all-completionsac-match-function489,14331
(defvar ac-prefix-definitionsac-prefix-definitions492,14404
(defvar ac-sources '(ac-source-words-in-same-mode-buffers)ac-sources501,14682
(defvar ac-compiled-sources nilac-compiled-sources505,14812
(defvar ac-current-sources nilac-current-sources508,14883
(defvar ac-omni-completion-sources nilac-omni-completion-sources511,14987
(defvar ac-current-prefix-def nil)ac-current-prefix-def514,15057
(defvar ac-ignoring-prefix-def nil)ac-ignoring-prefix-def516,15093
(defvar ac-comphist nilac-comphist522,15170
(defsubst ac-comphist-make-tab ()ac-comphist-make-tab525,15232
(defsubst ac-comphist-tab (db)ac-comphist-tab528,15301
(defsubst ac-comphist-cache (db)ac-comphist-cache531,15347
(defun ac-comphist-make (&optional tab)ac-comphist-make534,15395
(defun ac-comphist-get (db string &optional create)ac-comphist-get537,15521
(defun ac-comphist-add (db string prefix)ac-comphist-add545,15782
(defun ac-comphist-score (db string prefix)ac-comphist-score553,16080
(defun ac-comphist-sort (db collection prefix &optional threshold)ac-comphist-sort579,17240
(defun ac-comphist-serialize (db)ac-comphist-serialize601,18163
(defun ac-comphist-deserialize (sexp)ac-comphist-deserialize608,18334
(defun ac-comphist-init ()ac-comphist-init617,18702
(defun ac-comphist-load ()ac-comphist-load621,18800
(defun ac-comphist-save ()ac-comphist-save631,19191
(defvar ac-buffer-dictionary nil)ac-buffer-dictionary642,19438
(defvar ac-file-dictionary (make-hash-table :test 'equal))ac-file-dictionary643,19472
(defun ac-clear-dictionary-cache ()ac-clear-dictionary-cache645,19532
(defun ac-file-dictionary (filename)ac-file-dictionary653,19790
(defun ac-mode-dictionary (mode)ac-mode-dictionary665,20199
(defun ac-buffer-dictionary (&optional buffer)ac-buffer-dictionary673,20589
(defun ac-menu-at-wrapper-line-p ()ac-menu-at-wrapper-line-p688,21074
(defun ac-stop-word-p (word)ac-stop-word-p696,21355
(defun ac-prefix-default ()ac-prefix-default701,21511
(defun ac-prefix-symbol ()ac-prefix-symbol711,21839
(defun ac-prefix-file ()ac-prefix-file716,21979
(defsubst ac-windows-remote-file-p (file)ac-windows-remote-file-p721,22111
(defun ac-prefix-valid-file ()ac-prefix-valid-file725,22266
(defun ac-prefix-c-dot ()ac-prefix-c-dot740,22927
(defun ac-prefix-c-dot-ref ()ac-prefix-c-dot-ref745,23099
(defun ac-prefix-cc-member ()ac-prefix-cc-member750,23306
(defun ac-define-prefix (name prefix)ac-define-prefix755,23511
(defun ac-match-substring (prefix candidates)ac-match-substring760,23699
(defsubst ac-source-entity (source)ac-source-entity766,23909
(defun ac-source-available-p (source)ac-source-available-p771,24010
(defun ac-compile-sources (sources)ac-compile-sources792,24922
(defun ac-compiled-sources ()ac-compiled-sources813,25716
(defsubst ac-menu-live-p ()ac-menu-live-p818,25852
(defun ac-menu-create (point width height)ac-menu-create821,25907
(defun ac-menu-delete ()ac-menu-delete835,26422
(defsubst ac-inline-overlay ()ac-inline-overlay840,26516
(defsubst ac-inline-live-p ()ac-inline-live-p843,26569
(defun ac-inline-show (point string)ac-inline-show846,26641
(defun ac-inline-delete ()ac-inline-delete902,28576
(defun ac-inline-hide ()ac-inline-hide908,28720
(defun ac-inline-update ()ac-inline-update918,29058
(defun ac-put-prefix-overlay ()ac-put-prefix-overlay929,29488
(defun ac-remove-prefix-overlay ()ac-remove-prefix-overlay942,29996
(defun ac-activate-completing-map ()ac-activate-completing-map952,30313
(defun ac-deactivate-completing-map ()ac-deactivate-completing-map961,30702
(defsubst ac-selected-candidate ()ac-selected-candidate969,31044
(defun ac-prefix (requires ignore-list)ac-prefix973,31132
(defun ac-init ()ac-init1015,32950
(defun ac-candidates-1 (source)ac-candidates-11028,33349
(defun ac-delete-duplicated-candidates (candidates)ac-delete-duplicated-candidates1071,35585
(defun ac-reduce-candidates (candidates)ac-reduce-candidates1082,35968
(defun ac-candidates ()ac-candidates1095,36485
(defun ac-update-candidates (cursor scroll-top)ac-update-candidates1129,38408
(defun ac-reposition ()ac-reposition1149,39094
(defun ac-cleanup ()ac-cleanup1158,39456
(defsubst ac-abort ()ac-abort1205,40911
(defun ac-extend-region-to-delete (string)ac-extend-region-to-delete1209,40972
(defun ac-expand-string (string &optional remove-undo-boundary)ac-expand-string1225,41711
(defun ac-set-trigger-key (key)ac-set-trigger-key1259,43266
(defun ac-set-timer ()ac-set-timer1270,43652
(defun ac-cancel-timer ()ac-cancel-timer1274,43775
(defun ac-update (&optional force)ac-update1279,43882
(defun ac-update-greedy (&optional force)ac-update-greedy1301,44716
(defun ac-set-show-menu-timer ()ac-set-show-menu-timer1310,45034
(defun ac-cancel-show-menu-timer ()ac-cancel-show-menu-timer1315,45286
(defun ac-show-menu ()ac-show-menu1320,45433
(defun ac-help (&optional persist)ac-help1327,45585
(defun ac-persist-help ()ac-persist-help1332,45702
(defun ac-last-help (&optional persist)ac-last-help1336,45760
(defun ac-last-persist-help ()ac-last-persist-help1341,45910
(defun ac-set-quick-help-timer ()ac-set-quick-help-timer1345,45978
(defun ac-cancel-quick-help-timer ()ac-cancel-quick-help-timer1350,46195
(defun ac-pos-tip-show-quick-help (menu &optional item &rest args)ac-pos-tip-show-quick-help1355,46346
(defun ac-quick-help-use-pos-tip-p ()ac-quick-help-use-pos-tip-p1382,47320
(defun ac-quick-help (&optional force)ac-quick-help1387,47445
(defun ac-remove-quick-help ()ac-remove-quick-help1407,48171
(defun ac-last-quick-help ()ac-last-quick-help1415,48372
(defmacro ac-define-quick-help-command (name arglist &rest body)ac-define-quick-help-command1431,48972
(defun ac-isearch-callback (list)ac-isearch-callback1451,49456
(defun ac-isearch ()ac-isearch1454,49537
(defun auto-complete (&optional sources)auto-complete1499,51122
(defun ac-fuzzy-complete ()ac-fuzzy-complete1504,51262
(defun ac-next ()ac-next1522,51873
(defun ac-previous ()ac-previous1532,52112
(defun ac-expand (arg)ac-expand1542,52367
(defun ac-expand-previous (arg)ac-expand-previous1564,53165
(defun ac-expand-common ()ac-expand-common1569,53296
(defun ac-complete-1 (candidate)ac-complete-11581,53639
(defun ac-complete ()ac-complete1601,54251
(defun ac-stop ()ac-stop1646,55851
(defun ac-ignore (&rest ignore)ac-ignore1652,55956
(defun ac-mouse-1 (event)ac-mouse-11656,56028
(defun ac-mouse-4 (event)ac-mouse-41661,56154
(defun ac-mouse-5 (event)ac-mouse-51665,56218
(defun ac-trigger-key-command (&optional force)ac-trigger-key-command1669,56278
(defvar ac-clear-variables-every-minute-timer nil)ac-clear-variables-every-minute-timer1681,56590
(defvar ac-clear-variables-after-save nil)ac-clear-variables-after-save1682,56641
(defvar ac-clear-variables-every-minute nil)ac-clear-variables-every-minute1683,56684
(defvar ac-minutes-counter 0)ac-minutes-counter1684,56729
(defun ac-clear-variable-after-save (variable &optional pred)ac-clear-variable-after-save1686,56760
(defun ac-clear-variables-after-save ()ac-clear-variables-after-save1689,56892
(defun ac-clear-variable-every-minutes (variable minutes)ac-clear-variable-every-minutes1695,57076
(defun ac-clear-variable-every-minute (variable)ac-clear-variable-every-minute1698,57209
(defun ac-clear-variable-every-10-minutes (variable)ac-clear-variable-every-10-minutes1701,57307
(defun ac-clear-variables-every-minute ()ac-clear-variables-every-minute1704,57410
(defun ac-cursor-on-diable-face-p (&optional point)ac-cursor-on-diable-face-p1714,57642
(defun ac-trigger-command-p (command)ac-trigger-command-p1717,57767
(defun ac-fallback-key-sequence ()ac-fallback-key-sequence1725,58115
(defun ac-fallback-command (&optional except-command)ac-fallback-command1731,58301
(defun ac-compatible-package-command-p (command)ac-compatible-package-command-p1740,58639
(defun ac-handle-pre-command ()ac-handle-pre-command1745,58856
(defun ac-handle-post-command ()ac-handle-post-command1764,59850
(defvar ac-flycheck-poll-completion-end-timer nilac-flycheck-poll-completion-end-timer1776,60241
(defun ac-syntax-checker-workaround ()ac-syntax-checker-workaround1779,60330
(defun ac-setup ()ac-setup1800,61337
(define-minor-mode auto-complete-modeauto-complete-mode1810,61672
(defun auto-complete-mode-maybe ()auto-complete-mode-maybe1827,62315
(define-global-minor-mode global-auto-complete-modeglobal-auto-complete-mode1834,62530
(defun ac-flyspell-workaround ()ac-flyspell-workaround1842,62701
(defun ac-linum-workaround ()ac-linum-workaround1851,63095
(defmacro ac-define-source (name source)ac-define-source1863,63408
(defvar ac-word-index nil)ac-word-index1877,64023
(defun ac-candidate-words-in-buffer (point prefix limit)ac-candidate-words-in-buffer1879,64051
(defun ac-incremental-update-word-index ()ac-incremental-update-word-index1903,64959
(defun ac-update-word-index-1 ()ac-update-word-index-11918,65512
(defun ac-update-word-index ()ac-update-word-index1929,65935
(defun ac-word-candidates (&optional buffer-pred)ac-word-candidates1936,66151
(defvar ac-symbols-cache nil)ac-symbols-cache1962,67239
(defun ac-symbol-file (symbol type)ac-symbol-file1965,67325
(defun ac-symbol-documentation (symbol)ac-symbol-documentation1997,68811
(defun ac-symbol-candidates ()ac-symbol-candidates2044,70587
(defvar ac-functions-cache nil)ac-functions-cache2060,71056
(defun ac-function-candidates ()ac-function-candidates2063,71146
(defvar ac-variables-cache nil)ac-variables-cache2078,71581
(defun ac-variable-candidates ()ac-variable-candidates2081,71671
(defvar ac-emacs-lisp-features nil)ac-emacs-lisp-features2095,72059
(defun ac-emacs-lisp-feature-candidates ()ac-emacs-lisp-feature-candidates2098,72157
(defvaralias 'ac-source-emacs-lisp-features 'ac-source-features)ac-source-emacs-lisp-features2116,73023
(defvar ac-filename-cache nil)ac-filename-cache2131,73468
(defun ac-filename-candidate ()ac-filename-candidate2133,73500

elpa/auto-complete-c-headers-20150911.2023/auto-complete-c-headers-autoloads.el,0

elpa/auto-complete-c-headers-20150911.2023/auto-complete-c-headers-pkg.el,180
(define-package "auto-complete-c-headers" "20150911.2023" "An auto-complete source for C/C++ header files" '((auto-complete "1.4")) :keywords '("c"))"auto-complete-c-headers"1,0

elpa/auto-complete-c-headers-20150911.2023/auto-complete-c-headers.el,1298
(defvar achead:include-patterns (listachead:include-patterns35,1115
(defvar achead:include-directories (list "." "/usr/include" "/usr/local/include")achead:include-directories43,1564
(defvar achead:get-include-directories-function 'achead:get-include-directoriesachead:get-include-directories-function57,1963
(defun achead:get-include-directories ()achead:get-include-directories60,2093
(defvar achead:ac-prefix "#\\(?:include\\|import\\)[ \t]*[<\"][ \t]*\\([^\"<>' \t\r\n]+\\)"achead:ac-prefix66,2305
(defvar achead:inspect-remote-directories tachead:inspect-remote-directories69,2438
(defun achead:get-include-directories-from-options (cmd-line-options)achead:get-include-directories-from-options72,2531
(defvar achead:include-cache nilachead:include-cache80,2889
(defun achead:file-list-for-directory (dir)achead:file-list-for-directory83,2968
(defun achead:path-should-be-displayed (path)achead:path-should-be-displayed91,3253
(defun achead:get-include-file-candidates (&optional basedir)achead:get-include-file-candidates97,3479
(defvar achead:ac-latest-results-alist nilachead:ac-latest-results-alist121,5046
(defun achead:documentation-for-candidate (candidate)achead:documentation-for-candidate124,5163
(defun achead:ac-candidates ()achead:ac-candidates138,5684

elpa/bind-key-20160227.48/bind-key-autoloads.el,0

elpa/bind-key-20160227.48/bind-key-pkg.el,208
(define-package "bind-key" "20160227.48" "A simple way to manage personal keybindings" 'nil :url "https://github.com/jwiegley/use-package" :keywords '("keys" "keybinding" "config" "dotemacs"))"bind-key"1,0

elpa/bind-key-20160227.48/bind-key.el,1091
(defgroup bind-key nilbind-key98,3506
(defcustom bind-key-column-widths '(18 . 40)bind-key-column-widths102,3595
(defcustom bind-key-segregation-regexpbind-key-segregation-regexp107,3750
(defcustom bind-key-describe-special-forms nilbind-key-describe-special-forms114,3984
(defvar override-global-map (make-keymap)override-global-map121,4208
(define-minor-mode override-global-modeoverride-global-mode124,4284
(defvar personal-keybindings nilpersonal-keybindings133,4593
(defmacro bind-key (key-name command &optional keymap predicate)bind-key139,4746
(defmacro unbind-key (key-name &optional keymap)unbind-key174,6432
(defmacro bind-key* (key-name command &optional predicate)bind-key*190,7119
(defun bind-keys-form (args)bind-keys-form194,7313
(defmacro bind-keys (&rest args)bind-keys277,10813
(defmacro bind-keys* (&rest args)bind-keys*295,11525
(defun get-binding-description (elem)get-binding-description299,11635
(defun compare-keybindings (l r)compare-keybindings326,12378
(defun describe-personal-keybindings ()describe-personal-keybindings354,13333

elpa/bookmark+-20161027.926/bookmark+-1.el,66015
(defalias 'bmkp-bookmark-data-from-record 'bookmark-get-bookmark-record)bmkp-bookmark-data-from-record667,33169
(defalias 'bmkp-bookmark-name-from-record 'bookmark-name-from-full-record)bmkp-bookmark-name-from-record668,33242
(defvar bmkp-auto-light-when-set)       ; In `bookmark+-lit.el'bmkp-auto-light-when-set701,34822
(defvar bmkp-auto-light-when-jump)      ; In `bookmark+-lit.el'bmkp-auto-light-when-jump702,34886
(defvar bmkp-edit-bookmark-record-mode-map) ; Here, via `define-derived-mode'bmkp-edit-bookmark-record-mode-map703,34950
(defvar bmkp-edit-bookmark-records-mode-map) ; Here, via `define-derived-mode'bmkp-edit-bookmark-records-mode-map704,35028
(defvar bmkp-edit-tags-mode-map)        ; Here, via `define-derived-mode'bmkp-edit-tags-mode-map705,35107
(defvar bmkp-light-priorities)          ; In `bookmark+-lit.el'bmkp-light-priorities706,35181
(defvar bmkp-temporary-bookmarking-mode) ;  Herebmkp-temporary-bookmarking-mode707,35245
(defvar bmkp-global-auto-idle-bookmark-mode) ; Here, via `define-globalized-minor-mode'bmkp-global-auto-idle-bookmark-mode708,35294
(defvar bookmark-current-point)         ; In `bookmark.el', but not in Emacs 23+bookmark-current-point709,35382
(defvar bookmark-edit-annotation-text-func) ; In `bookmark.el'bookmark-edit-annotation-text-func710,35463
(defvar bookmark-read-annotation-text-func) ; In `bookmark.el', but not in Emacs 23+bookmark-read-annotation-text-func711,35526
(defvar bookmark-make-record-function)  ; In `bookmark.el'bookmark-make-record-function712,35611
(defvar desktop-basefilename)           ; In `desktop.el' (Emacs < 22)desktop-basefilename713,35670
(defvar desktop-base-file-name)         ; In `desktop.el'desktop-base-file-name714,35741
(defvar desktop-buffer-args-list)       ; In `desktop.el'desktop-buffer-args-list715,35799
(defvar desktop-delay-hook)             ; In `desktop.el'desktop-delay-hook716,35857
(defvar desktop-dirname)                ; In `desktop.el'desktop-dirname717,35915
(defvar desktop-file-modtime)           ; In `desktop.el'desktop-file-modtime718,35973
(defvar desktop-globals-to-save)        ; In `desktop.el'desktop-globals-to-save719,36031
(defvar desktop-save-mode)              ; In `desktop.el'desktop-save-mode720,36089
(defvar desktop-save)                   ; In `desktop.el'desktop-save721,36147
(defvar dired-actual-switches)          ; In `dired.el'dired-actual-switches722,36205
(defvar dired-buffers)                  ; In `dired.el'dired-buffers723,36261
(defvar dired-directory)                ; In `dired.el'dired-directory724,36317
(defvar dired-guess-shell-case-fold-search) ; In `dired-x.el'dired-guess-shell-case-fold-search725,36373
(defvar dired-subdir-alist)             ; In `dired.el'dired-subdir-alist726,36435
(defvar gnus-article-current)           ; In `gnus-sum.el'gnus-article-current727,36491
(defvar icicle-candidate-properties-alist) ; In `icicles-var.el'icicle-candidate-properties-alist728,36550
(defvar icicle-completion-candidates)	; In `icicles-var.el'icicle-completion-candidates729,36615
(defvar icicle-mode)                    ; In `icicle-mode.el'icicle-mode730,36675
(defvar icicle-multi-completing-p)	; In `icicles-var.el'icicle-multi-completing-p731,36737
(defvar icicle-saved-completion-candidates) ; In `icicles-var.el'icicle-saved-completion-candidates732,36794
(defvar icicle-searching-p)		; In `icicles-var.el'icicle-searching-p733,36860
(defvar Info-current-node)              ; In `info.el'Info-current-node734,36911
(defvar Info-current-file)              ; In `info.el'Info-current-file735,36966
(defvar Man-arguments)                  ; In `man.el'Man-arguments736,37021
(defvar org-store-link-functions)       ; In `org.el'org-store-link-functions737,37075
(defvar read-file-name-completion-ignore-case) ; Emacs 23+read-file-name-completion-ignore-case738,37129
(defvar last-repeatable-command)        ; In `repeat.el'last-repeatable-command739,37188
(defvar w3m-current-title)              ; In `w3m.el'w3m-current-title740,37245
(defvar w3m-current-url)                ; In `w3m.el'w3m-current-url741,37299
(defvar w3m-mode-map)                   ; In `w3m.el'w3m-mode-map742,37353
(defvar zz-izones)                      ; In `zones.el'zz-izones743,37407
(defvar zz-izones-var)                  ; In `zones.el'zz-izones-var744,37463
(defvar woman-last-file-name)           ; In `woman.el'woman-last-file-name745,37519
(defcustom bmkp-autofile-filecache 'cache-onlybmkp-autofile-filecache751,37749
(defcustom bmkp-auto-idle-bookmark-min-distance 1000bmkp-auto-idle-bookmark-min-distance765,38587
(defcustom bmkp-auto-idle-bookmark-mode-delay 60bmkp-auto-idle-bookmark-mode-delay784,39500
(defcustom bmkp-auto-idle-bookmark-mode-lighter " Auto-Bmk"bmkp-auto-idle-bookmark-mode-lighter791,39815
(defcustom bmkp-auto-idle-bookmark-mode-set-function #'bmkp-set-autonamed-bookmark-at-linebmkp-auto-idle-bookmark-mode-set-function798,40185
(defcustom bmkp-autoname-bookmark-function 'bmkp-autoname-bookmark-function-defaultbmkp-autoname-bookmark-function808,40737
(defcustom bmkp-autoname-format (if (> emacs-major-version 21) "^[0-9]\\{9\\} %B" "^[0-9]+ %B")bmkp-autoname-format816,41151
(defcustom bmkp-autotemp-bookmark-predicates '(bmkp-autonamed-bookmark-pbmkp-autotemp-bookmark-predicates827,41765
(defcustom bmkp-bookmark-name-length-max 70bmkp-bookmark-name-length-max862,43686
(defcustom bmkp-count-multi-mods-as-one-flag tbmkp-count-multi-mods-as-one-flag867,43916
(defcustom bmkp-crosshairs-flag (> emacs-major-version 21)bmkp-crosshairs-flag878,44529
(defcustom bmkp-default-bookmark-name 'highlightedbmkp-default-bookmark-name901,45750
(defcustom bmkp-default-handlers-for-file-typesbmkp-default-handlers-for-file-types929,46996
(defcustom bmkp-desktop-default-directory nilbmkp-desktop-default-directory973,49202
(defcustom bmkp-desktop-jump-save-before-flag nilbmkp-desktop-jump-save-before-flag979,49504
(defcustom bmkp-desktop-no-save-vars '(search-ring regexp-search-ring kill-ring)bmkp-desktop-no-save-vars984,49740
(defcustom bmkp-annotation-modes-inherit-from (if (fboundp 'org-mode) 'org-mode 'text-mode)bmkp-annotation-modes-inherit-from991,50118
(defcustom bmkp-handle-region-function 'bmkp-handle-region-defaultbmkp-handle-region-function1001,50599
(defcustom bmkp-incremental-filter-delay (if (boundp 'bookmark-search-delay)bmkp-incremental-filter-delay1006,50822
(defcustom bmkp-last-as-first-bookmark-file bookmark-default-filebmkp-last-as-first-bookmark-file1013,51215
(defcustom bmkp-menu-popup-max-length 20bmkp-menu-popup-max-length1033,52161
(defcustom bmkp-new-bookmark-default-namesbmkp-new-bookmark-default-names1049,52923
(defcustom bmkp-other-window-pop-to-flag tbmkp-other-window-pop-to-flag1094,54982
(defcustom bmkp-prompt-for-tags-flag nilbmkp-prompt-for-tags-flag1102,55381
(defcustom bmkp-properties-to-keep '(tags annotation)bmkp-properties-to-keep1110,55799
(defcustom bmkp-region-search-size 40bmkp-region-search-size1117,56160
(defcustom bmkp-save-new-location-flag tbmkp-save-new-location-flag1122,56381
(defcustom bmkp-sequence-jump-display-function 'pop-to-bufferbmkp-sequence-jump-display-function1129,56704
(defcustom bmkp-show-end-of-region-flag tbmkp-show-end-of-region-flag1134,56944
(defcustom bmkp-sort-comparer '((bmkp-info-cp bmkp-gnus-cp bmkp-url-cp bmkp-local-file-type-cp)bmkp-sort-comparer1140,57204
(defcustom bmkp-su-or-sudo-regexp "\\(/su:\\|/sudo:\\)"bmkp-su-or-sudo-regexp1238,61100
(defcustom bmkp-tags-for-completion 'currentbmkp-tags-for-completion1243,61317
(defcustom bmkp-temporary-bookmarking-mode-hook ()bmkp-temporary-bookmarking-mode-hook1290,63704
(defcustom bmkp-this-file/buffer-cycle-sort-comparer '((bmkp-position-cp))bmkp-this-file/buffer-cycle-sort-comparer1295,63948
(defcustom bmkp-guess-default-handler-for-file-flag nilbmkp-guess-default-handler-for-file-flag1312,64739
(defcustom bmkp-read-bookmark-file-hook ()bmkp-read-bookmark-file-hook1321,65195
(defcustom bmkp-temporary-bookmarking-mode-lighter " Temp-Bmk"bmkp-temporary-bookmarking-mode-lighter1328,65561
(defcustom bmkp-use-region tbmkp-use-region1335,65914
(defcustom bmkp-w3m-allow-multi-tabs-flag tbmkp-w3m-allow-multi-tabs-flag1344,66370
(defcustom bmkp-write-bookmark-file-hook ()bmkp-write-bookmark-file-hook1349,66583
(defconst bmkp-non-file-filename "   - no file -"bmkp-non-file-filename1358,66938
(defconst bmkp-types-alist '(("autofile"         . bmkp-autofile-history)bmkp-types-alist1361,67052
(defvar bmkp-autofile-history ()         "History for autofile bookmarks.")bmkp-autofile-history1387,68886
(defvar bmkp-autonamed-history ()        "History for autonamed bookmarks.")bmkp-autonamed-history1388,68962
(defvar bmkp-bookmark-file-history ()    "History for bookmark-file bookmarks.")bmkp-bookmark-file-history1389,69039
(defvar bmkp-bookmark-list-history ()    "History for bookmark-list bookmarks.")bmkp-bookmark-list-history1390,69120
(defvar bmkp-desktop-history ()          "History for desktop bookmarks.")bmkp-desktop-history1391,69201
(defvar bmkp-dired-history ()            "History for Dired bookmarks.")bmkp-dired-history1392,69276
(defvar bmkp-file-history ()             "History for file bookmarks.")bmkp-file-history1393,69349
(defvar bmkp-gnus-history ()             "History for Gnus bookmarks.")bmkp-gnus-history1394,69421
(defvar bmkp-image-history ()            "History for image-file bookmarks.")bmkp-image-history1395,69493
(defvar bmkp-info-history ()             "History for Info bookmarks.")bmkp-info-history1396,69571
(defvar bmkp-last-bmenu-state-file nil   "Last value of option `bmkp-bmenu-state-file'.")bmkp-last-bmenu-state-file1397,69643
(defvar bmkp-local-file-history ()       "History for local-file bookmarks.")bmkp-local-file-history1398,69733
(defvar bmkp-man-history ()              "History for `man'-page bookmarks.")bmkp-man-history1399,69811
(defvar bmkp-non-file-history ()         "History for buffer (non-file) bookmarks.")bmkp-non-file-history1400,69889
(defvar bmkp-region-history ()           "History for bookmarks that activate the region.")bmkp-region-history1401,69974
(defvar bmkp-remote-file-history ()      "History for remote-file bookmarks.")bmkp-remote-file-history1402,70066
(defvar bmkp-snippet-history ()          "History for snippet bookmarks.")bmkp-snippet-history1403,70145
(defvar bmkp-specific-buffers-history () "History for specific-buffers bookmarks.")bmkp-specific-buffers-history1404,70220
(defvar bmkp-specific-files-history ()   "History for specific-files bookmarks.")bmkp-specific-files-history1405,70304
(defvar bmkp-temporary-history ()        "History for temporary bookmarks.")bmkp-temporary-history1406,70386
(defvar bmkp-url-history ()              "History for URL bookmarks.")bmkp-url-history1407,70463
(defvar bmkp-variable-list-history ()    "History for variable-list bookmarks.")bmkp-variable-list-history1408,70534
(defvar bmkp-w3m-history ()              "History for W3M bookmarks.")bmkp-w3m-history1409,70615
(defvar bmkp-after-set-hook nil "Hook run after `bookmark-set' sets a bookmark.")bmkp-after-set-hook1411,70687
(defvar bmkp-auto-idle-bookmarks ()bmkp-auto-idle-bookmarks1413,70770
(defvar bmkp-auto-idle-bookmark-mode-timer nilbmkp-auto-idle-bookmark-mode-timer1416,70884
(defvar bmkp-autotemp-all-when-set-p nil "Non-nil means make any bookmark temporary whenever it is set.")bmkp-autotemp-all-when-set-p1429,71372
(defvar bookmark-after-jump-hook nilbookmark-after-jump-hook1440,71927
(defvar bmkp-before-jump-hook nilbmkp-before-jump-hook1444,72075
(defvar bmkp-copied-tags ()bmkp-copied-tags1447,72168
(defvar bmkp-bookmark-set-confirms-overwrite-p nilbmkp-bookmark-set-confirms-overwrite-p1450,72271
(defvar bmkp-current-bookmark-file bookmark-default-filebmkp-current-bookmark-file1453,72398
(defvar bmkp-desktop-current-file nilbmkp-desktop-current-file1468,73023
(defvar bmkp-edit-bookmark-orig-record nilbmkp-edit-bookmark-orig-record1471,73118
(defvar bmkp-file-bookmark-handlers '(bmkp-jump-dired image-bookmark-jump)bmkp-file-bookmark-handlers1474,73200
(defvar bmkp-icicles-search-hits-retrieve-more nilbmkp-icicles-search-hits-retrieve-more1478,73390
(defvar bmkp-last-bookmark-file bookmark-default-filebmkp-last-bookmark-file1482,73562
(defvar bmkp-current-nav-bookmark nil "Current bookmark for navigation.")bmkp-current-nav-bookmark1486,73741
(defvar bmkp-jump-display-function nil "Function used currently to display a bookmark.")bmkp-jump-display-function1488,73816
(defvar bmkp-last-specific-buffer ""bmkp-last-specific-buffer1490,73906
(defvar bmkp-last-specific-file ""bmkp-last-specific-file1493,74003
(defvar bmkp-modified-bookmarks ()bmkp-modified-bookmarks1496,74102
(defvar bmkp-nav-alist () "Current bookmark alist used for navigation.")bmkp-nav-alist1499,74201
(defvar bmkp-return-buffer nil "Name of buffer to return to.")bmkp-return-buffer1501,74275
(defvar bmkp-reverse-sort-p nil "Non-nil means the sort direction is reversed.")bmkp-reverse-sort-p1503,74339
(defvar bmkp-reverse-multi-sort-p nilbmkp-reverse-multi-sort-p1505,74421
(defvar bmkp-use-w32-browser-p nilbmkp-use-w32-browser-p1511,74689
(defvar bmkp-latest-bookmark-alist () "Copy of `bookmark-alist' as last filtered.")bmkp-latest-bookmark-alist1516,74926
(defvar bmkp-last-save-flag-value nil "Last value of option `bookmark-save-flag'.")bmkp-last-save-flag-value1518,75011
(defvar bmkp-sorted-alist ()bmkp-sorted-alist1520,75096
(defvar bmkp-tag-history () "History of tags read from the user.")bmkp-tag-history1524,75247
(defvar bmkp-tags-alist ()bmkp-tags-alist1526,75315
(defvar bookmarks-already-loaded nilbookmarks-already-loaded1537,75706
(defcustom bookmark-version-control tbookmark-version-control1802,86369
(defcustom bookmark-automatically-show-annotations tbookmark-automatically-show-annotations1827,87415
(defun bookmark-get-bookmark-record (bookmark)bookmark-get-bookmark-record1844,88198
(defun bookmark-get-bookmark (bookmark &optional noerror)bookmark-get-bookmark1864,89055
(defun bookmark-make-record ()bookmark-make-record1892,90554
(defun bookmark-store (bookmark-name data no-overwrite &optional no-refresh-p no-msg-p)bookmark-store1927,92432
(defun bookmark-default-annotation-text (bookmark-name)bookmark-default-annotation-text1978,94905
(defun bookmark-insert-annotation (bookmark)bookmark-insert-annotation1995,95573
(define-derived-mode bookmark-show-annotation-mode bookmark-edit-annotation-modebookmark-show-annotation-mode2031,97398
(defun bookmark-send-edited-annotation () ; Bound to `C-c C-M-c' in `bookmark-edit-annotation-mode'.bookmark-send-edited-annotation2049,98129
(defun bookmark-edit-annotation (bookmark)bookmark-edit-annotation2075,99474
(defun bookmark-all-names (&optional alist)bookmark-all-names2098,100479
(defun bookmark-completing-read (prompt &optional default alist pred hist)bookmark-completing-read2113,101091
(defun bookmark-make-record-default (&optional no-file no-context position visits no-region)bookmark-make-record-default2145,102268
(defun bookmark-alist-from-buffer (&optional do-not-propertize-p)bookmark-alist-from-buffer2198,104948
(defun bookmark-set (&optional name parg interactivep no-refresh-p) ; `C-x r M', `C-x p c M'bookmark-set2245,107663
(defun bookmark-set-name (bookmark newname)bookmark-set-name2400,116113
(defun bookmark-yank-word ()            ; Bound to `C-M-w' in minibuffer when setting bookmark.bookmark-yank-word2419,116995
(defun bookmark-maybe-load-default-file ()bookmark-maybe-load-default-file2439,117973
(defun bookmark--jump-via (bookmark display-function)bookmark--jump-via2463,119273
(defun bookmark-prop-set (bookmark prop val)bookmark-prop-set2507,121913
(defun bookmark-jump (bookmark          ; Bound to `C-x j j', `C-x r b', `C-x p g'bookmark-jump2531,123035
(defun bookmark-jump-other-window (bookmark &optional flip-use-region-p)bookmark-jump-other-window2569,124684
(defun bookmark-handle-bookmark (bookmark)bookmark-handle-bookmark2590,125748
(defun bookmark-default-handler (bookmark)bookmark-default-handler2670,130162
(defun bookmark-relocate (bookmark-name &optional no-refresh-p) ; Not boundbookmark-relocate2742,133974
(defun bookmark-insert-location (bookmark-name &optional no-history) ; `C-x p I' (original: `C-x p f')bookmark-insert-location2801,137123
(defun bookmark-location (bookmark)bookmark-location2824,138118
(defun bookmark-rename (old &optional new batchp) ; Not bound in Bookmark+bookmark-rename2853,139372
(defun bookmark-insert (bookmark-name)  ; Bound to `C-x p i'bookmark-insert2912,142291
(defun bookmark-delete (bookmark &optional batchp) ; Bound to `C-x p d'bookmark-delete2937,143521
(defun bookmark-save (&optional parg file) ; Bound to `C-x p s'bookmark-save2986,146325
(defun bookmark-write-file (file &optional add alt-msg)bookmark-write-file3034,148782
(defun bookmark-import-new-list (new-list &optional duplicates-ok return-bmks)bookmark-import-new-list3148,155202
(defun bookmark-maybe-rename (full-record names)bookmark-maybe-rename3180,156672
(defun bookmark-load (file &optional overwrite batchp) ; Bound to `C-x p l'bookmark-load3213,158366
(defun bookmark-show-annotation (bookmark &optional msg-p)bookmark-show-annotation3338,164984
(defun bookmark-show-all-annotations ()bookmark-show-all-annotations3393,168052
(defun bookmark-exit-hook-internal ()   ; This goes on `kill-emacs-hook'.bookmark-exit-hook-internal3426,169779
(defun bmkp-new-bookmark-default-names (&optional first-def)bmkp-new-bookmark-default-names3525,175282
(defun bmkp-bookmark-record-from-name (bookmark-name &optional noerror memp alist)bmkp-bookmark-record-from-name3576,178232
(defun bmkp-rename-for-marked-and-omitted-lists (old new)bmkp-rename-for-marked-and-omitted-lists3602,179562
(defun bmkp-get-bookmark-in-alist (bookmark &optional noerror alist)bmkp-get-bookmark-in-alist3613,180229
(defun bmkp-default-bookmark-file ()bmkp-default-bookmark-file3638,181432
(defun bmkp-completing-read-bookmarks (&optional alist pred hist names-only-p)bmkp-completing-read-bookmarks3642,181608
(defun bmkp-completing-read-lax (prompt &optional default alist pred hist)bmkp-completing-read-lax3661,182471
(defun bmkp-completing-read-1 (prompt default alist pred hist laxp)bmkp-completing-read-13689,184268
(defun bmkp-jump-1 (bookmark display-function &optional flip-use-region-p)bmkp-jump-13718,186089
(defun bmkp-select-buffer-other-window (buffer)bmkp-select-buffer-other-window3731,186784
(defun bmkp-maybe-save-bookmarks (&optional same-count-p)bmkp-maybe-save-bookmarks3737,187094
(defun bmkp-annotate-bookmark (bookmark)bmkp-annotate-bookmark3745,187526
(defun bmkp-show-this-annotation-read-only ()bmkp-show-this-annotation-read-only3761,188413
(defun bmkp-edit-this-annotation ()bmkp-edit-this-annotation3793,190239
(defun bmkp-edit-bookmark-name-and-location (bookmark &optional edit-record-p)bmkp-edit-bookmark-name-and-location3813,191242
(define-derived-mode bmkp-edit-bookmark-records-mode emacs-lisp-modebmkp-edit-bookmark-records-mode3896,197606
(define-key bmkp-edit-bookmark-records-mode-map "\C-c\C-c" 'bmkp-edit-bookmark-records-send)bmkp-edit-bookmark-records-mode-map3906,198174
(defvar bmkp-edit-bookmark-records-number 0bmkp-edit-bookmark-records-number3908,198268
(defun bmkp-edit-bookmark-records-send (&optional msg-p) ; Bound to `C-c C-c' in records-editing buffer.bmkp-edit-bookmark-records-send3912,198430
(define-derived-mode bmkp-edit-bookmark-record-mode emacs-lisp-modebmkp-edit-bookmark-record-mode3971,202521
(define-key bmkp-edit-bookmark-record-mode-map "\C-c\C-c" 'bmkp-edit-bookmark-record-send)bmkp-edit-bookmark-record-mode-map3981,203062
(defun bmkp-edit-bookmark-record (bookmark) ; Bound to `C-x p e'.bmkp-edit-bookmark-record3984,203219
(defun bmkp-edit-bookmark-record-send (&optional msg-p) ; Bound to `C-c C-c' in record-editing buffer.bmkp-edit-bookmark-record-send4014,204897
(define-derived-mode bmkp-edit-tags-mode emacs-lisp-modebmkp-edit-tags-mode4058,207820
(define-key bmkp-edit-tags-mode-map "\C-c\C-c" 'bmkp-edit-tags-send)bmkp-edit-tags-mode-map4067,208240
(defun bmkp-edit-tags (bookmark)        ; Bound to `C-x p t e'bmkp-edit-tags4070,208364
(defun bmkp-edit-tags-send (&optional batchp)bmkp-edit-tags-send4096,209791
(defun bmkp-bookmark-type (bookmark)bmkp-bookmark-type4127,211367
(defun bmkp-record-visit (bookmark &optional batchp)bmkp-record-visit4167,214240
(defun bmkp-default-bookmark-name (&optional alist)bmkp-default-bookmark-name4186,215302
(defun bmkp-buffer-names ()bmkp-buffer-names4202,216165
(defun bmkp-file-names ()bmkp-file-names4218,216835
(defun bmkp-bookmark-set-confirm-overwrite (&optional name parg interactivep) ; Bound `C-x r m', `C-x p c m'.bmkp-bookmark-set-confirm-overwrite4229,217276
(defun bmkp-send-bug-report ()          ; Not boundbmkp-send-bug-report4239,217796
(defun bmkp-toggle-bookmark-set-refreshes () ; Not boundbmkp-toggle-bookmark-set-refreshes4250,218339
(defun bmkp-refresh-latest-bookmark-list ()bmkp-refresh-latest-bookmark-list4260,218855
(defun bmkp-toggle-saving-menu-list-state () ; Bound to `C-M-~' in bookmark listbmkp-toggle-saving-menu-list-state4267,219244
(defun bmkp-save-menu-list-state (&optional msg-p) ; Used in `bookmark-exit-hook-internal'.bmkp-save-menu-list-state4282,220085
(defun bmkp-toggle-saving-bookmark-file (&optional msg-p) ; Bound to `M-~' in bookmark listbmkp-toggle-saving-bookmark-file4348,224683
(defun bmkp-read-from-whole-string (string)bmkp-read-from-whole-string4367,225827
(defun bmkp-make-function-bookmark (bookmark-name function &optional msg-p) ; Bound globally to `C-x p c F'.bmkp-make-function-bookmark4379,226431
(defun bmkp-set-dired-bookmark-for-files (bookmark-name dired-name to-add &optional switches msg-p)bmkp-set-dired-bookmark-for-files4409,228051
(defun bmkp-revert-bookmark-file (&optional msg-p) ; Same as `C-u g' in bookmark list (but not bound).bmkp-revert-bookmark-file4437,229447
(defun bmkp-switch-bookmark-file (file &optional batchp) ; Not bound and not used in the code now.bmkp-switch-bookmark-file4460,230671
(defun bmkp-switch-to-last-bookmark-file (&optional batchp) ; Not bound to any key, by defaultbmkp-switch-to-last-bookmark-file4481,231969
(defun bmkp-switch-bookmark-file-create (file &optional batchp)bmkp-switch-bookmark-file-create4493,232605
(defun bmkp-read-bookmark-file-name (&optional prompt dir default-filename require-match)bmkp-read-bookmark-file-name4531,234691
(defun bmkp-read-bookmark-file-default ()bmkp-read-bookmark-file-default4540,235206
(defun bmkp-empty-file (file &optional confirmp) ; Bound to `C-x p 0'bmkp-empty-file4549,235627
(defun bmkp-crosshairs-highlight ()     ; Not boundbmkp-crosshairs-highlight4577,237055
(defun bmkp-choose-navlist-from-bookmark-list (bookmark-name &optional alist) ; Bound to `C-x p B'bmkp-choose-navlist-from-bookmark-list4592,237881
(defun bmkp-current-bookmark-list-state ()bmkp-current-bookmark-list-state4634,240875
(defun bmkp-choose-navlist-of-type (type) ; Bound to `C-x p :'bmkp-choose-navlist-of-type4640,241174
(defun bmkp-autonamed-bookmark-p (bookmark &optional buffer)bmkp-autonamed-bookmark-p4660,242353
(defun bmkp-format-spec (format specification)bmkp-format-spec4681,243294
(defun bmkp-autonamed-this-buffer-bookmark-p (bookmark)bmkp-autonamed-this-buffer-bookmark-p4714,245111
(defun bmkp-autonamed-bookmark-for-buffer-p (bookmark buffer-name)bmkp-autonamed-bookmark-for-buffer-p4719,245384
(defun bmkp-update-autonamed-bookmark (bookmark)bmkp-update-autonamed-bookmark4728,245897
(defun bmkp-this-file/buffer-bmenu-list () ; Bound to `C-x p ,'bmkp-this-file/buffer-bmenu-list4747,247051
(defun bmkp-this-file-bmenu-list ()bmkp-this-file-bmenu-list4755,247465
(defun bmkp-this-buffer-bmenu-list ()bmkp-this-buffer-bmenu-list4790,249606
(defun bmkp-navlist-bmenu-list ()       ; Bound to `C-x p N'bmkp-navlist-bmenu-list4823,251514
(defun bmkp-completing-read-buffer-name (&optional no-default-p)bmkp-completing-read-buffer-name4851,252956
(defun bmkp-completing-read-file-name (&optional no-default-p)bmkp-completing-read-file-name4867,253829
(defun bmkp-refresh/rebuild-menu-list (&optional bookmark no-msg-p)bmkp-refresh/rebuild-menu-list4888,255177
(defun bmkp-refresh-menu-list (&optional bookmark no-msg-p)bmkp-refresh-menu-list4898,255737
(defun bmkp-unomit-all (&optional msg-p) ; Bound to `O U' in bookmark listbmkp-unomit-all4920,257008
(defun bmkp-omitted-alist-only ()bmkp-omitted-alist-only4939,258080
(defun bmkp-omitted-bookmark-p (bookmark)bmkp-omitted-bookmark-p4945,258328
(defun bmkp-get-tags (bookmark)bmkp-get-tags5002,260830
(defalias 'bmkp-tagged-bookmark-p 'bmkp-get-tags)bmkp-tagged-bookmark-p5007,260993
(defun bmkp-get-tag-value (bookmark tag)bmkp-get-tag-value5009,261044
(defun bmkp-has-tag-p (bookmark tag)bmkp-has-tag-p5016,261304
(defun bmkp-read-tags ()bmkp-read-tags5023,261582
(defun bmkp-read-tag-completing (&optional prompt candidate-tags require-match update-tags-alist-p)bmkp-read-tag-completing5032,261869
(defun bmkp-read-tags-completing (&optional candidate-tags require-match update-tags-alist-p)bmkp-read-tags-completing5052,263083
(defun bmkp-list-all-tags (fullp current-only-p &optional msg-p)bmkp-list-all-tags5085,265032
(defun bmkp-tags-list (&optional names-only-p current-only-p)bmkp-tags-list5116,266556
(defun bmkp-tags-in-bookmark-file (file &optional names-only-p)bmkp-tags-in-bookmark-file5144,267926
(defun bmkp-tag-name (tag)bmkp-tag-name5169,269221
(defun bmkp-full-tag (tag)bmkp-full-tag5173,269345
(defun bmkp-remove-all-tags (bookmark &optional no-update-p msg-p)bmkp-remove-all-tags5178,269543
(defun bmkp-add-tags (bookmark tags &optional no-update-p msg-p)bmkp-add-tags5198,270771
(defun bmkp-set-tag-value-for-navlist (tag value &optional msg-p) ; Bound to `C-x p t V'bmkp-set-tag-value-for-navlist5239,272952
(defun bmkp-set-tag-value-for-bookmarks (bookmarks tag value &optional msg-p) ; Not boundbmkp-set-tag-value-for-bookmarks5246,273360
(defun bmkp-set-tag-value (bookmark tag value &optional no-update-p msg-p) ; Bound to `C-x p t v'bmkp-set-tag-value5257,274086
(defun bmkp-remove-tags (bookmark tags &optional no-update-p msg-p)bmkp-remove-tags5282,275617
(defun bmkp-remove-tags-from-all (tags &optional msg-p) ; Bound to `C-x p t d', (`T d' in bookmark list)bmkp-remove-tags-from-all5328,278179
(defun bmkp-rename-tag (tag newname &optional msg-p) ; Bound to `C-x p t r', (`T r' in bookmark list)bmkp-rename-tag5353,279626
(defun bmkp-copy-tags (bookmark &optional msg-p) ; Bound to `C-x p t c', `C-x p t M-w'bmkp-copy-tags5380,281133
(defun bmkp-paste-add-tags (bookmark &optional no-update-p msg-p) ; Bound to `C-x p t p', `C-x p t C-y'bmkp-paste-add-tags5395,281928
(defun bmkp-paste-replace-tags (bookmark &optional no-update-p msg-p) ; Bound to `C-x p t q'bmkp-paste-replace-tags5409,282778
(defun bmkp-annotated-bookmark-p (bookmark)bmkp-annotated-bookmark-p5440,284321
(defun bmkp-autofile-bookmark-p (bookmark &optional prefix)bmkp-autofile-bookmark-p5448,284698
(defun bmkp-bookmark-file-bookmark-p (bookmark)bmkp-bookmark-file-bookmark-p5463,285469
(defun bmkp-bookmark-list-bookmark-p (bookmark)bmkp-bookmark-list-bookmark-p5469,285756
(defun bmkp-desktop-bookmark-p (bookmark)bmkp-desktop-bookmark-p5475,286043
(defun bmkp-dired-bookmark-p (bookmark)bmkp-dired-bookmark-p5484,286566
(defun bmkp-dired-this-dir-bookmark-p (bookmark)bmkp-dired-this-dir-bookmark-p5491,286883
(defun bmkp-dired-wildcards-bookmark-p (bookmark)bmkp-dired-wildcards-bookmark-p5499,287295
(defun bmkp-file-bookmark-p (bookmark)bmkp-file-bookmark-p5508,287758
(defun bmkp-file-this-dir-bookmark-p (bookmark)bmkp-file-this-dir-bookmark-p5522,288491
(defun bmkp-flagged-bookmark-p (bookmark)bmkp-flagged-bookmark-p5532,289014
(defun bmkp-function-bookmark-p (bookmark)bmkp-function-bookmark-p5539,289341
(defun bmkp-gnus-bookmark-p (bookmark)bmkp-gnus-bookmark-p5545,289613
(defun bmkp-icicles-search-hits-bookmark-p (bookmark)bmkp-icicles-search-hits-bookmark-p5552,289929
(defun bmkp-image-bookmark-p (bookmark)bmkp-image-bookmark-p5558,290226
(defun bmkp-info-bookmark-p (bookmark)bmkp-info-bookmark-p5568,290768
(defun bmkp-local-directory-bookmark-p (bookmark)bmkp-local-directory-bookmark-p5577,291250
(defun bmkp-local-file-bookmark-p (bookmark)bmkp-local-file-bookmark-p5584,291599
(defun bmkp-local-non-dir-file-bookmark-p (bookmark)bmkp-local-non-dir-file-bookmark-p5591,291980
(defun bmkp-man-bookmark-p (bookmark)bmkp-man-bookmark-p5598,292347
(defun bmkp-marked-bookmark-p (bookmark)bmkp-marked-bookmark-p5605,292707
(defun bmkp-modified-bookmark-p (bookmark)bmkp-modified-bookmark-p5612,293093
(defun bmkp-navlist-bookmark-p (bookmark)bmkp-navlist-bookmark-p5619,293400
(defun bmkp-non-dir-file-bookmark-p (bookmark)bmkp-non-dir-file-bookmark-p5625,293645
(defun bmkp-non-file-bookmark-p (bookmark)bmkp-non-file-bookmark-p5632,293994
(defun bmkp-orphaned-file-bookmark-p (bookmark)bmkp-orphaned-file-bookmark-p5648,294836
(defun bmkp-orphaned-local-file-bookmark-p (bookmark)bmkp-orphaned-local-file-bookmark-p5663,295579
(defun bmkp-orphaned-remote-file-bookmark-p (bookmark)bmkp-orphaned-remote-file-bookmark-p5678,296360
(defun bmkp-region-bookmark-p (bookmark)bmkp-region-bookmark-p5693,297140
(defun bmkp-remote-file-bookmark-p (bookmark)bmkp-remote-file-bookmark-p5701,297510
(defun bmkp-remote-non-dir-file-bookmark-p (bookmark)bmkp-remote-non-dir-file-bookmark-p5713,298083
(defun bmkp-snippet-bookmark-p (bookmark)bmkp-snippet-bookmark-p5720,298453
(defun bmkp-temporary-bookmark-p (bookmark)bmkp-temporary-bookmark-p5729,298879
(defun bmkp-this-buffer-p (bookmark)bmkp-this-buffer-p5737,299257
(defun bmkp-this-file-p (bookmark)bmkp-this-file-p5759,300521
(defun bmkp-last-specific-buffer-p (bookmark)bmkp-last-specific-buffer-p5770,301222
(defun bmkp-last-specific-file-p (bookmark)bmkp-last-specific-file-p5786,302027
(defun bmkp-sequence-bookmark-p (bookmark)bmkp-sequence-bookmark-p5793,302369
(defun bmkp-url-bookmark-p (bookmark)bmkp-url-bookmark-p5799,302641
(defun bmkp-url-browse-bookmark-p (bookmark)bmkp-url-browse-bookmark-p5808,303011
(defun bmkp-variable-list-bookmark-p (bookmark)bmkp-variable-list-bookmark-p5814,303291
(defun bmkp-w3m-bookmark-p (bookmark)bmkp-w3m-bookmark-p5820,303578
(defun bmkp-all-tags-alist-only (tags)bmkp-all-tags-alist-only5830,303912
(defun bmkp-all-tags-regexp-alist-only (regexp)bmkp-all-tags-regexp-alist-only5842,304398
(defun bmkp-annotated-alist-only ()bmkp-annotated-alist-only5855,304909
(defun bmkp-autofile-alist-only (&optional prefix)bmkp-autofile-alist-only5861,305165
(defun bmkp-autofile-all-tags-alist-only (tags)bmkp-autofile-all-tags-alist-only5870,305627
(defun bmkp-autofile-all-tags-regexp-alist-only (regexp)bmkp-autofile-all-tags-regexp-alist-only5881,306074
(defun bmkp-autofile-some-tags-alist-only (tags)bmkp-autofile-some-tags-alist-only5894,306603
(defun bmkp-autofile-some-tags-regexp-alist-only (regexp)bmkp-autofile-some-tags-regexp-alist-only5903,307002
(defun bmkp-autonamed-alist-only ()bmkp-autonamed-alist-only5913,307494
(defun bmkp-autonamed-this-buffer-alist-only ()bmkp-autonamed-this-buffer-alist-only5919,307749
(defun bmkp-bookmark-file-alist-only ()bmkp-bookmark-file-alist-only5925,308051
(defun bmkp-bookmark-list-alist-only ()bmkp-bookmark-list-alist-only5931,308313
(defun bmkp-desktop-alist-only ()bmkp-desktop-alist-only5937,308575
(defun bmkp-dired-alist-only ()bmkp-dired-alist-only5943,308819
(defun bmkp-dired-this-dir-alist-only ()bmkp-dired-this-dir-alist-only5949,309057
(defun bmkp-dired-wildcards-alist-only ()bmkp-dired-wildcards-alist-only5955,309325
(defun bmkp-file-alist-only ()bmkp-file-alist-only5961,309597
(defun bmkp-file-all-tags-alist-only (tags)bmkp-file-all-tags-alist-only5969,309986
(defun bmkp-file-all-tags-regexp-alist-only (regexp)bmkp-file-all-tags-regexp-alist-only5980,310431
(defun bmkp-file-some-tags-alist-only (tags)bmkp-file-some-tags-alist-only5993,310957
(defun bmkp-file-some-tags-regexp-alist-only (regexp)bmkp-file-some-tags-regexp-alist-only6003,311387
(defun bmkp-file-this-dir-alist-only ()bmkp-file-this-dir-alist-only6014,311877
(defun bmkp-file-this-dir-all-tags-alist-only (tags)bmkp-file-this-dir-all-tags-alist-only6023,312340
(defun bmkp-file-this-dir-all-tags-regexp-alist-only (regexp)bmkp-file-this-dir-all-tags-regexp-alist-only6035,312863
(defun bmkp-file-this-dir-some-tags-alist-only (tags)bmkp-file-this-dir-some-tags-alist-only6049,313468
(defun bmkp-file-this-dir-some-tags-regexp-alist-only (regexp)bmkp-file-this-dir-some-tags-regexp-alist-only6060,313976
(defun bmkp-function-alist-only ()bmkp-function-alist-only6072,314544
(defun bmkp-gnus-alist-only ()bmkp-gnus-alist-only6078,314791
(defun bmkp-icicles-search-hits-alist-only ()bmkp-icicles-search-hits-alist-only6084,315026
(defun bmkp-image-alist-only ()bmkp-image-alist-only6090,315295
(defun bmkp-info-alist-only ()bmkp-info-alist-only6096,315538
(defun bmkp-last-specific-buffer-alist-only ()bmkp-last-specific-buffer-alist-only6102,315773
(defun bmkp-last-specific-file-alist-only ()bmkp-last-specific-file-alist-only6108,316033
(defun bmkp-man-alist-only ()bmkp-man-alist-only6114,316287
(defun bmkp-local-file-alist-only ()bmkp-local-file-alist-only6120,316526
(defun bmkp-local-non-dir-file-alist-only ()bmkp-local-non-dir-file-alist-only6126,316779
(defun bmkp-non-autonamed-alist-only ()bmkp-non-autonamed-alist-only6132,317056
(defun bmkp-non-dir-file-alist-only ()bmkp-non-dir-file-alist-only6138,317344
(defun bmkp-non-file-alist-only ()bmkp-non-file-alist-only6144,317609
(defun bmkp-orphaned-file-alist-only ()bmkp-orphaned-file-alist-only6150,317856
(defun bmkp-orphaned-local-file-alist-only ()bmkp-orphaned-local-file-alist-only6155,318076
(defun bmkp-orphaned-remote-file-alist-only ()bmkp-orphaned-remote-file-alist-only6160,318309
(defun bmkp-regexp-filtered-annotation-alist-only ()bmkp-regexp-filtered-annotation-alist-only6165,318545
(defun bmkp-regexp-filtered-bookmark-name-alist-only ()bmkp-regexp-filtered-bookmark-name-alist-only6175,319020
(defun bmkp-regexp-filtered-file-name-alist-only ()bmkp-regexp-filtered-file-name-alist-only6181,319321
(defun bmkp-regexp-filtered-tags-alist-only ()bmkp-regexp-filtered-tags-alist-only6188,319706
(defun bmkp-region-alist-only ()bmkp-region-alist-only6199,320326
(defun bmkp-remote-file-alist-only ()bmkp-remote-file-alist-only6205,320578
(defun bmkp-remote-non-dir-file-alist-only ()bmkp-remote-non-dir-file-alist-only6211,320834
(defun bmkp-sequence-alist-only ()bmkp-sequence-alist-only6217,321114
(defun bmkp-snippet-alist-only ()bmkp-snippet-alist-only6223,321363
(defun bmkp-some-tags-alist-only (tags)bmkp-some-tags-alist-only6229,321607
(defun bmkp-some-tags-regexp-alist-only (regexp)bmkp-some-tags-regexp-alist-only6239,322071
(defun bmkp-specific-buffers-alist-only (&optional buffers)bmkp-specific-buffers-alist-only6249,322561
(defun bmkp-specific-files-alist-only (&optional files)bmkp-specific-files-alist-only6269,323646
(defun bmkp-tagged-alist-only ()bmkp-tagged-alist-only6279,324165
(defun bmkp-temporary-alist-only ()bmkp-temporary-alist-only6285,324391
(defun bmkp-this-file/buffer-alist-only ()bmkp-this-file/buffer-alist-only6291,324641
(defun bmkp-this-buffer-alist-only ()bmkp-this-buffer-alist-only6299,325045
(defun bmkp-this-file-alist-only ()bmkp-this-file-alist-only6306,325315
(defun bmkp-untagged-alist-only ()bmkp-untagged-alist-only6313,325577
(defun bmkp-url-alist-only ()bmkp-url-alist-only6319,325808
(defun bmkp-url-browse-alist-only ()bmkp-url-browse-alist-only6325,326040
(defun bmkp-variable-list-alist-only ()bmkp-variable-list-alist-only6331,326294
(defun bmkp-w3m-alist-only ()bmkp-w3m-alist-only6337,326556
(defun bmkp-marked-bookmarks-only ()bmkp-marked-bookmarks-only6346,326811
(defun bmkp-unmarked-bookmarks-only ()bmkp-unmarked-bookmarks-only6351,326991
(defun bmkp-some-marked-p (alist)bmkp-some-marked-p6356,327171
(defun bmkp-some-unmarked-p (alist)bmkp-some-unmarked-p6360,327368
(defun bmkp-unpropertized-string (string)bmkp-unpropertized-string6394,328787
(defun bmkp-delete-bookmark-name-from-list (delname bnames)bmkp-delete-bookmark-name-from-list6402,329121
(defun bmkp-bookmark-name-member (name names)bmkp-bookmark-name-member6428,330507
(defun bmkp-names-same-bookmark-p (name1 name2)bmkp-names-same-bookmark-p6447,331665
(defun bmkp-remove-if (pred xs)bmkp-remove-if6457,332085
(defun bmkp-remove-if-not (pred xs)bmkp-remove-if-not6463,332296
(defun bmkp-every (predicate list)bmkp-every6470,332602
(defun bmkp-some (predicate list)bmkp-some6480,333139
(defun bmkp-set-union (list1 list2)bmkp-set-union6494,333720
(defun bmkp-upcase (string)bmkp-upcase6510,334404
(defun bmkp-same-file-p (file1 file2)bmkp-same-file-p6517,334716
(defun bmkp-file-remote-p (file)bmkp-file-remote-p6552,336585
(defun bmkp-float-time (&optional specified-time)bmkp-float-time6570,337314
(defun bmkp-string-less-case-fold-p (s1 s2)bmkp-string-less-case-fold-p6577,337624
(defun bmkp-make-plain-predicate (pred &optional final-pred)bmkp-make-plain-predicate6583,337856
(defun bmkp-repeat-command (command)bmkp-repeat-command6597,338489
(defun bmkp-get-buffer-name (bookmark)bmkp-get-buffer-name6643,340895
(defun bmkp-get-end-position (bookmark)bmkp-get-end-position6648,341079
(defun bmkp-get-visits-count (bookmark)bmkp-get-visits-count6653,341266
(defun bmkp-get-visit-time (bookmark)bmkp-get-visit-time6658,341441
(defun bmkp-sort-omit (alist &optional omit)bmkp-sort-omit6676,342253
(defun bmkp-remove-omitted (alist &optional omit)bmkp-remove-omitted6699,343418
(defun bmkp-multi-sort (b1 b2)bmkp-multi-sort6755,346273
(defun bmkp-sorting-description (order)bmkp-sorting-description6779,347412
(defun bmkp-msg-about-sort-order (order &optional prefix-msg suffix-msg)bmkp-msg-about-sort-order6806,348736
(defun bmkp-current-sort-order ()bmkp-current-sort-order6820,349302
(defun bmkp-flagged-cp (b1 b2)bmkp-flagged-cp6828,349548
(defun bmkp-marked-cp (b1 b2)bmkp-marked-cp6846,350220
(defun bmkp-modified-cp (b1 b2)bmkp-modified-cp6864,350875
(defun bmkp-tagged-cp (b1 b2)bmkp-tagged-cp6882,351538
(defun bmkp-visited-more-cp (b1 b2)bmkp-visited-more-cp6900,352193
(defun bmkp-bookmark-creation-cp (b1 b2)bmkp-bookmark-creation-cp6922,353011
(defun bmkp-same-creation-time-p (b1 b2)bmkp-same-creation-time-p6947,353966
(defun bmkp-bookmark-last-access-cp (b1 b2)bmkp-bookmark-last-access-cp6958,354465
(defun bmkp-buffer-last-access-cp (b1 b2)bmkp-buffer-last-access-cp6982,355375
(defun bmkp-handler-cp (b1 b2)bmkp-handler-cp7019,357203
(defun bmkp-info-cp (b1 b2)bmkp-info-cp7050,358670
(defun bmkp-gnus-cp (b1 b2)bmkp-gnus-cp7088,360706
(defun bmkp-url-cp (b1 b2)bmkp-url-cp7124,362529
(defun bmkp-w3m-cp (b1 b2)bmkp-w3m-cp7150,363665
(defun bmkp-position-cp (b1 b2)bmkp-position-cp7175,364716
(defun bmkp-alpha-cp (b1 b2)bmkp-alpha-cp7196,365632
(defun bmkp-alpha-p (b1 b2)bmkp-alpha-p7218,366572
(defun bmkp-file-alpha-cp (b1 b2)bmkp-file-alpha-cp7232,367051
(defun bmkp-local-file-accessed-more-recently-cp (b1 b2)bmkp-local-file-accessed-more-recently-cp7289,369575
(defun bmkp-local-file-updated-more-recently-cp (b1 b2)bmkp-local-file-updated-more-recently-cp7314,370752
(defun bmkp-local-file-size-cp (b1 b2)bmkp-local-file-size-cp7339,371927
(defun bmkp-local-file-type-cp (b1 b2)bmkp-local-file-type-cp7364,373062
(defun bmkp-cp-not (truth)bmkp-cp-not7392,374275
(defun bmkp-url-target-set (url &optional arg name/prefix no-overwrite-p no-refresh-p msg-p)bmkp-url-target-set7403,374616
(defun bmkp-file-target-set (file &optional arg name/prefix no-overwrite no-refresh-p msg-p)bmkp-file-target-set7469,378049
(defun bmkp-make-record-for-target-file (file)bmkp-make-record-for-target-file7540,381734
(defalias 'bmkp-bookmark-a-file 'bmkp-autofile-set)bmkp-bookmark-a-file7585,384095
(defun bmkp-autofile-set (file &optional dir prefix no-refresh-p msg-p) ; Bound to `C-x p c a'bmkp-autofile-set7587,384204
(defun bmkp-get-autofile-bookmark (file &optional dir prefix)bmkp-get-autofile-bookmark7658,388062
(defalias 'bmkp-tag-a-file 'bmkp-autofile-add-tags) ; Bound to `C-x p t + a'bmkp-tag-a-file7685,389503
(defun bmkp-autofile-add-tags (file tags &optional dir prefix no-update-p msg-p)bmkp-autofile-add-tags7687,389642
(defalias 'bmkp-untag-a-file 'bmkp-autofile-remove-tags) ; Bound to `C-x p t - a'bmkp-untag-a-file7731,391835
(defun bmkp-autofile-remove-tags (file tags &optional dir prefix no-update-p msg-p)bmkp-autofile-remove-tags7733,391982
(defun bmkp-purge-notags-autofiles (&optional prefix msg-p) ; Not bound to a key by defaultbmkp-purge-notags-autofiles7794,395402
(defun bmkp-replace-existing-bookmark (bookmark)bmkp-replace-existing-bookmark7816,396803
(defun bmkp-default-handler-for-file (filename)bmkp-default-handler-for-file7846,398443
(defun bmkp-default-handler-user (filename)bmkp-default-handler-user7878,400333
(defun bmkp-sound-jump (bookmark)bmkp-sound-jump7887,400793
(defun bmkp-describe-bookmark (bookmark &optional defn) ; Bound to `C-x p ?'bmkp-describe-bookmark8117,412255
(defun bmkp-bookmark-description (bookmark &optional no-image)bmkp-bookmark-description8166,415096
(defun bmkp-all-exif-data (file)bmkp-all-exif-data8308,424995
(defun bmkp-describe-bookmark-internals (bookmark)bmkp-describe-bookmark-internals8319,425478
(defun bmkp-list-defuns-in-commands-file ()bmkp-list-defuns-in-commands-file8336,426612
(defun bmkp-root-or-sudo-logged-p ()bmkp-root-or-sudo-logged-p8374,428426
(defun bmkp-position-post-context (breg)bmkp-position-post-context8381,428711
(defun bmkp-position-post-context-region (breg ereg)bmkp-position-post-context-region8389,429090
(defun bmkp-position-pre-context (breg)bmkp-position-pre-context8396,429431
(defun bmkp-position-pre-context-region (breg)bmkp-position-pre-context-region8404,429801
(defun bmkp-end-position-pre-context (breg ereg)bmkp-end-position-pre-context8411,430137
(defun bmkp-end-position-post-context (ereg)bmkp-end-position-post-context8417,430450
(defun bmkp-position-after-whitespace (position)bmkp-position-after-whitespace8423,430754
(defun bmkp-position-before-whitespace (position)bmkp-position-before-whitespace8427,430952
(defun bmkp-save-new-region-location (bookmark beg end)bmkp-save-new-region-location8431,431153
(defun bmkp-handle-region-default (bookmark)bmkp-handle-region-default8450,432234
(defun bmkp-line-number-at-pos (&optional pos)bmkp-line-number-at-pos8521,436569
(defun bmkp-goto-position (bookmark file buf bufname pos forward-str behind-str)bmkp-goto-position8526,436865
(defun bmkp-jump-sequence (bookmark)bmkp-jump-sequence8565,439337
(defun bmkp-jump-function (bookmark)bmkp-jump-function8574,439771
(defun bmkp-make-bookmark-list-record ()bmkp-make-bookmark-list-record8583,440116
(defun bmkp-jump-bookmark-list (bookmark)bmkp-jump-bookmark-list8605,441428
(defun bmkp-set-bookmark-file-bookmark (file &optional msg-p) ; Bound to `C-x p y', `C-x p c y'bmkp-set-bookmark-file-bookmark8628,442887
(defun bmkp-make-bookmark-file-record (bookmark-file)bmkp-make-bookmark-file-record8665,445185
(defun bmkp-jump-bookmark-file (bookmark &optional switchp batchp)bmkp-jump-bookmark-file8676,445675
(defun bmkp-bookmark-file-jump (bookmark-name &optional switchp no-msg) ; `C-x j y'bmkp-bookmark-file-jump8693,446684
(defun bmkp-set-snippet-bookmark (beg end &optional promptp msgp)bmkp-set-snippet-bookmark8706,447396
(defun bmkp-jump-snippet (bookmark)bmkp-jump-snippet8727,448656
(defun bmkp-snippet-to-kill-ring (bookmark-name) ; `C-x j M-w'bmkp-snippet-to-kill-ring8734,448997
(defun bmkp-set-desktop-bookmark (desktop-file &optional nosavep)bmkp-set-desktop-bookmark8745,449547
(defun bmkp-desktop-save (desktop-file)bmkp-desktop-save8789,452274
(defun bmkp-desktop-save-as-last ()bmkp-desktop-save-as-last8811,453643
(defun bmkp-desktop-file-p (filename)bmkp-desktop-file-p8837,454837
(defun bmkp-make-desktop-record (desktop-file)bmkp-make-desktop-record8849,455357
(defun bmkp-jump-desktop (bookmark)bmkp-jump-desktop8857,455719
(defun bmkp-desktop-change-dir (desktop-file)bmkp-desktop-change-dir8870,456456
(defun bmkp-desktop-kill ()bmkp-desktop-kill8896,458031
(defun bmkp-desktop-read (file)bmkp-desktop-read8921,459533
(defun bmkp-desktop-delete (bookmark-name)bmkp-desktop-delete8959,461698
(defun bmkp-jump-icicle-search-hits (bookmark)bmkp-jump-icicle-search-hits8978,462812
(defun bmkp-retrieve-icicle-search-hits () ; Bound to `C-x C-M-<' during Icicles completion.bmkp-retrieve-icicle-search-hits8993,463692
(defun bmkp-retrieve-more-icicle-search-hits () ; Bound to `C-x C-<' during Icicles completion.bmkp-retrieve-more-icicle-search-hits9003,464228
(defun bmkp-retrieve-icicle-search-hits-1 (&optional morep)bmkp-retrieve-icicle-search-hits-19012,464695
(defun bmkp-set-icicle-search-hits-bookmark () ; Bound to `C-x C-M->' during Icicles completion.bmkp-set-icicle-search-hits-bookmark9028,465777
(defun bmkp-make-icicle-search-hits-record ()bmkp-make-icicle-search-hits-record9039,466414
(defun bmkp-wrap-bookmark-with-last-kbd-macro (sequence bookmark &optional arg msgp)bmkp-wrap-bookmark-with-last-kbd-macro9079,468457
(defun bmkp-pop-to-readable-marker (readable-marker)bmkp-pop-to-readable-marker9109,470036
(defun bmkp-set-sequence-bookmark (seqname bookmark-names &optional arg msgp)bmkp-set-sequence-bookmark9116,470366
(defun bmkp-make-sequence-record (bookmark-names)bmkp-make-sequence-record9213,475767
(defun bmkp-set-variable-list-bookmark (variables)bmkp-set-variable-list-bookmark9224,476280
(defun bmkp-create-variable-list-bookmark (bookmark-name vars vals &optional buffer-name)bmkp-create-variable-list-bookmark9234,476827
(defun bmkp-read-variables-completing (&optional option)bmkp-read-variables-completing9247,477613
(defun bmkp-read-variable (prompt &optional option default-value)bmkp-read-variable9260,478188
(defun bmkp-make-variable-list-record (variables &optional buffer-name)bmkp-make-variable-list-record9279,479354
(defun bmkp-printable-vars+vals (variables)bmkp-printable-vars+vals9296,480310
(defun bmkp-readable-p (value)bmkp-readable-p9313,481155
(defun bmkp-jump-variable-list (bookmark)bmkp-jump-variable-list9332,482127
(defun bmkp-make-url-browse-record (url)bmkp-make-url-browse-record9349,482880
(defun bmkp-jump-url-browse (bookmark)bmkp-jump-url-browse9359,483253
(defun bmkp-make-w3m-record ()bmkp-make-w3m-record9367,483535
(defun bmkp-w3m-set-new-buffer-name ()bmkp-w3m-set-new-buffer-name9378,483970
(defun bmkp-jump-w3m-new-session (bookmark)bmkp-jump-w3m-new-session9384,484270
(defun bmkp-jump-w3m-only-one-tab (bookmark)bmkp-jump-w3m-only-one-tab9397,484886
(defalias 'bmkext-jump-w3m 'bmkp-jump-w3m)bmkext-jump-w3m9406,485359
(defun bmkp-jump-w3m (bookmark)bmkp-jump-w3m9407,485402
(defun bmkp-make-gnus-record ()bmkp-make-gnus-record9425,486094
(defun bmkp-jump-gnus (bookmark)bmkp-jump-gnus9475,488662
(defun bmkext-jump-gnus (bookmark)      ; Compatibility code.bmkext-jump-gnus9491,489637
(defun bmkp-make-man-record ()bmkp-make-man-record9511,490445
(defun bmkext-jump-woman (bookmark)     ; Compatibility code.bmkext-jump-woman9521,490894
(defun bmkp-jump-woman (bookmark)bmkp-jump-woman9527,491140
(defun bmkext-jump-man (bookmark)       ; Compatibility code.bmkext-jump-man9537,491640
(defun bmkp-jump-man (bookmark)bmkp-jump-man9543,491878
(defun bmkp-dired-remember-*-marks (beg end)bmkp-dired-remember-*-marks9566,493140
(defun bmkp-make-dired-record ()bmkp-make-dired-record9576,493635
(defun bmkp-dired-subdirs ()bmkp-dired-subdirs9595,494719
(defun bmkp-jump-dired (bookmark)bmkp-jump-dired9608,495316
(defun bmkp-read-bookmark-for-type (type alist &optional other-win pred hist action prompt)bmkp-read-bookmark-for-type9630,496619
(defun bmkp-jump-to-type (bookmark-name &optional flip-use-region-p) ; `C-x j :'bmkp-jump-to-type9647,497677
(defun bmkp-jump-to-type-other-window (bookmark-name &optional flip-use-region-p) ; `C-x 4 j :'bmkp-jump-to-type-other-window9678,499657
(defun bmkp-handler-pred (type)bmkp-handler-pred9699,501156
(defun bmkp-autonamed-jump (bookmark-name) ; `C-x j #'bmkp-autonamed-jump9707,501552
(defun bmkp-autonamed-jump-other-window (bookmark-name) ; `C-x 4 j # #'bmkp-autonamed-jump-other-window9716,501965
(defun bmkp-autonamed-this-buffer-jump (bookmark-name) ; `C-x j , #'bmkp-autonamed-this-buffer-jump9724,502377
(defun bmkp-autonamed-this-buffer-jump-other-window (bookmark-name) ; `C-x 4 j # .'bmkp-autonamed-this-buffer-jump-other-window9733,502850
(defun bmkp-bookmark-list-jump (bookmark-name &optional flip-use-region-p) ; `C-x j B'bmkp-bookmark-list-jump9741,503290
(defun bmkp-desktop-jump (bookmark-name &optional flip-use-region-p) ; `C-x j K'bmkp-desktop-jump9752,503848
(defun bmkp-dired-jump (bookmark-name &optional flip-use-region-p) ; `C-x j d', (`J' in Dired)bmkp-dired-jump9769,504717
(defun bmkp-dired-jump-other-window (bookmark-name &optional flip-use-region-p) ; `C-x 4 j d'bmkp-dired-jump-other-window9780,505262
(defun bmkp-dired-this-dir-jump (bookmark-name &optional flip-use-region-p) ; `C-x j . d', (`C-j' in Dired)bmkp-dired-this-dir-jump9789,505721
(defun bmkp-dired-this-dir-jump-other-window (bookmark-name &optional flip-use-region-p) ; `C-x 4 j C-d'bmkp-dired-this-dir-jump-other-window9800,506339
(defun bmkp-file-jump (bookmark-name &optional flip-use-region-p) ; `C-x j f'bmkp-file-jump9809,506830
(defun bmkp-file-jump-other-window (bookmark-name &optional flip-use-region-p) ; `C-x 4 j f'bmkp-file-jump-other-window9820,507366
(defun bmkp-file-this-dir-jump (bookmark-name &optional flip-use-region-p) ; `C-x j . f'bmkp-file-this-dir-jump9829,507819
(defun bmkp-file-this-dir-jump-other-window (bookmark-name &optional flip-use-region-p) ; `C-x 4 j . f'bmkp-file-this-dir-jump-other-window9840,508426
(defun bmkp-gnus-jump (bookmark-name &optional flip-use-region-p) ; `C-x j g', (`j' in Gnus summary mode)bmkp-gnus-jump9849,508911
(defun bmkp-gnus-jump-other-window (bookmark-name &optional flip-use-region-p) ; `C-x 4 j g'bmkp-gnus-jump-other-window9860,509462
(defun bmkp-image-jump (bookmark-name &optional flip-use-region-p) ; `C-x j M-i'bmkp-image-jump9869,509907
(defun bmkp-image-jump-other-window (bookmark-name &optional flip-use-region-p) ; `C-x j M-i'bmkp-image-jump-other-window9880,510444
(defun bmkp-info-jump (bookmark-name &optional flip-use-region-p) ; `C-x j i', (`j' in Info)bmkp-info-jump9889,510878
(defun bmkp-info-jump-other-window (bookmark-name &optional flip-use-region-p) ; `C-x 4 j i'bmkp-info-jump-other-window9900,511417
(defun bmkp-local-file-jump (bookmark-name &optional flip-use-region-p) ; `C-x j l'bmkp-local-file-jump9909,511867
(defun bmkp-local-file-jump-other-window (bookmark-name &optional flip-use-region-p) ; `C-x 4 j l'bmkp-local-file-jump-other-window9920,512439
(defun bmkp-local-non-dir-file-jump (bookmark-name &optional flip-use-region-p) ; Not bound.bmkp-local-non-dir-file-jump9929,512927
(defun bmkp-local-non-dir-file-jump-other-window (bookmark-name &optional flip-use-region-p) ; Not bound.bmkp-local-non-dir-file-jump-other-window9940,513533
(defun bmkp-man-jump (bookmark-name &optional flip-use-region-p) ; `C-x j m', (`j' in Man)bmkp-man-jump9949,514037
(defun bmkp-man-jump-other-window (bookmark-name &optional flip-use-region-p) ; `C-x 4 j m'bmkp-man-jump-other-window9960,514577
(defun bmkp-non-dir-file-jump (bookmark-name &optional flip-use-region-p) ; Not bound.bmkp-non-dir-file-jump9969,515026
(defun bmkp-non-dir-file-jump-other-window (bookmark-name &optional flip-use-region-p) ; Not bound.bmkp-non-dir-file-jump-other-window9980,515596
(defun bmkp-non-file-jump (bookmark-name &optional flip-use-region-p) ; `C-x j b', (`j' in Buffer Menu)bmkp-non-file-jump9989,516075
(defun bmkp-non-file-jump-other-window (bookmark-name &optional flip-use-region-p) ; `C-x 4 j b'bmkp-non-file-jump-other-window10000,516662
(defun bmkp-region-jump (bookmark-name) ; `C-x j r'bmkp-region-jump10009,517137
(defun bmkp-region-jump-other-window (bookmark-name) ; `C-x 4 j r'bmkp-region-jump-other-window10017,517625
(defun bmkp-region-jump-narrow-indirect-other-window ()bmkp-region-jump-narrow-indirect-other-window10026,518194
(defun bmkp-handle-region+narrow-indirect (bookmark)bmkp-handle-region+narrow-indirect10044,518954
(defun bmkp-remote-file-jump (bookmark-name &optional flip-use-region-p) ; `C-x j n'bmkp-remote-file-jump10053,519479
(defun bmkp-remote-file-jump-other-window (bookmark-name &optional flip-use-region-p) ; `C-x 4 j n'bmkp-remote-file-jump-other-window10064,520057
(defun bmkp-remote-non-dir-file-jump (bookmark-name &optional flip-use-region-p) ; Not bound.bmkp-remote-non-dir-file-jump10073,520551
(defun bmkp-remote-non-dir-file-jump-other-window (bookmark-name &optional flip-use-region-p) ; Not bound.bmkp-remote-non-dir-file-jump-other-window10084,521163
(defun bmkp-specific-buffers-jump (buffers bookmark-name &optional flip-use-region-p) ; `C-x j = b'bmkp-specific-buffers-jump10093,521685
(defun bmkp-specific-buffers-jump-other-window (buffers bookmark-namebmkp-specific-buffers-jump-other-window10110,522560
(defun bmkp-specific-files-jump (files bookmark-name &optional flip-use-region-p) ; `C-x j = f'bmkp-specific-files-jump10124,523320
(defun bmkp-specific-files-jump-other-window (files bookmark-namebmkp-specific-files-jump-other-window10142,524217
(defun bmkp-temporary-jump (bookmark-name) ; `C-x j x'bmkp-temporary-jump10157,524998
(defun bmkp-temporary-jump-other-window (bookmark-name) ; `C-x 4 j x'bmkp-temporary-jump-other-window10165,525455
(defun bmkp-this-buffer-jump (bookmark-name &optional flip-use-region-p) ; `C-x j , ,'bmkp-this-buffer-jump10172,525874
(defun bmkp-this-buffer-jump-other-window (bookmark-name &optional flip-use-region-p) ; `C-x 4 j , ,'bmkp-this-buffer-jump-other-window10185,526568
(defun bmkp-variable-list-jump (bookmark-name) ; `C-x j v'bmkp-variable-list-jump10230,529282
(defun bmkp-url-jump (bookmark-name &optional flip-use-region-p) ; `C-x j u'bmkp-url-jump10239,529695
(defun bmkp-url-jump-other-window (bookmark-name &optional flip-use-region-p) ; `C-x 4 j u'bmkp-url-jump-other-window10250,530274
(defun bmkp-w32-browser-jump (bookmark-name) ; Not bound by default.bmkp-w32-browser-jump10259,530782
(defun bmkp-w3m-jump (bookmark-name &optional flip-use-region-p) ; `C-x j w', (`j' in W3M)bmkp-w3m-jump10270,531404
(defun bmkp-w3m-jump-other-window (bookmark-name &optional flip-use-region-p) ; `C-x 4 j w'bmkp-w3m-jump-other-window10281,531935
(defun bmkp-all-tags-jump (tags bookmark) ; `C-x j t *'bmkp-all-tags-jump10290,532378
(defun bmkp-all-tags-jump-other-window (tags bookmark) ; `C-x 4 j t *'bmkp-all-tags-jump-other-window10307,533236
(defun bmkp-all-tags-regexp-jump (regexp bookmark) ; `C-x j t % *'bmkp-all-tags-regexp-jump10317,533774
(defun bmkp-all-tags-regexp-jump-other-window (regexp bookmark) ; `C-x 4 j t % *'bmkp-all-tags-regexp-jump-other-window10329,534402
(defun bmkp-some-tags-jump (tags bookmark) ; `C-x j t +'bmkp-some-tags-jump10339,534946
(defun bmkp-some-tags-jump-other-window (tags bookmark) ; `C-x 4 j t +'bmkp-some-tags-jump-other-window10355,535794
(defun bmkp-some-tags-regexp-jump (regexp bookmark) ; `C-x j t % +'bmkp-some-tags-regexp-jump10366,536393
(defun bmkp-some-tags-regexp-jump-other-window (regexp bookmark) ; `C-x 4 j t % +'bmkp-some-tags-regexp-jump-other-window10378,537017
(defun bmkp-file-all-tags-jump (tags bookmark) ; `C-x j t f *'bmkp-file-all-tags-jump10388,537564
(defun bmkp-file-all-tags-jump-other-window (tags bookmark) ; `C-x 4 j t f *'bmkp-file-all-tags-jump-other-window10405,538474
(defun bmkp-file-all-tags-regexp-jump (regexp bookmark) ; `C-x j t f % *'bmkp-file-all-tags-regexp-jump10415,539051
(defun bmkp-file-all-tags-regexp-jump-other-window (regexp bookmark) ; `C-x 4 j t f % *'bmkp-file-all-tags-regexp-jump-other-window10427,539727
(defun bmkp-file-some-tags-jump (tags bookmark) ; `C-x j t f +'bmkp-file-some-tags-jump10437,540306
(defun bmkp-file-some-tags-jump-other-window (tags bookmark) ; `C-x 4 j t f +'bmkp-file-some-tags-jump-other-window10453,541206
(defun bmkp-file-some-tags-regexp-jump (regexp bookmark) ; `C-x j t f % +'bmkp-file-some-tags-regexp-jump10464,541844
(defun bmkp-file-some-tags-regexp-jump-other-window (regexp bookmark) ; `C-x 4 j t f % +'bmkp-file-some-tags-regexp-jump-other-window10476,542520
(defun bmkp-file-this-dir-all-tags-jump (tags bookmark) ; `C-x j t . *'bmkp-file-this-dir-all-tags-jump10486,543110
(defun bmkp-file-this-dir-all-tags-jump-other-window (tags bookmark) ; `C-x 4 j t . *'bmkp-file-this-dir-all-tags-jump-other-window10503,544046
(defun bmkp-file-this-dir-all-tags-regexp-jump (regexp bookmark) ; `C-x j t . % *'bmkp-file-this-dir-all-tags-regexp-jump10513,544659
(defun bmkp-file-this-dir-all-tags-regexp-jump-other-window (regexp bookmark) ; `C-x 4 j t . % *'bmkp-file-this-dir-all-tags-regexp-jump-other-window10525,545361
(defun bmkp-file-this-dir-some-tags-jump (tags bookmark) ; `C-x j t . +'bmkp-file-this-dir-some-tags-jump10535,545976
(defun bmkp-file-this-dir-some-tags-jump-other-window (tags bookmark) ; `C-x 4 j t . +'bmkp-file-this-dir-some-tags-jump-other-window10551,546902
(defun bmkp-file-this-dir-some-tags-regexp-jump (regexp bookmark) ; `C-x j t . % +'bmkp-file-this-dir-some-tags-regexp-jump10562,547576
(defun bmkp-file-this-dir-some-tags-regexp-jump-other-window (regexp bookmark) ; `C-x 4 j t . % +'bmkp-file-this-dir-some-tags-regexp-jump-other-window10574,548278
(defun bmkp-autofile-jump (bookmark-name)    ; `C-x j a'bmkp-autofile-jump10584,548881
(defun bmkp-autofile-jump-other-window (bookmark-name) ; `C-x 4 j a'bmkp-autofile-jump-other-window10593,549291
(defun bmkp-autofile-all-tags-jump (tags bookmark) ; `C-x j t a *'bmkp-autofile-all-tags-jump10601,549676
(defun bmkp-autofile-all-tags-jump-other-window (tags bookmark) ; `C-x 4 j t a *'bmkp-autofile-all-tags-jump-other-window10618,550602
(defun bmkp-autofile-all-tags-regexp-jump (regexp bookmark) ; `C-x j t a % *'bmkp-autofile-all-tags-regexp-jump10628,551195
(defun bmkp-autofile-all-tags-regexp-jump-other-window (regexp bookmark) ; `C-x 4 j t a % *'bmkp-autofile-all-tags-regexp-jump-other-window10640,551887
(defun bmkp-autofile-some-tags-jump (tags bookmark) ; `C-x j t a +'bmkp-autofile-some-tags-jump10650,552482
(defun bmkp-autofile-some-tags-jump-other-window (tags bookmark) ; `C-x 4 j t a +'bmkp-autofile-some-tags-jump-other-window10666,553398
(defun bmkp-autofile-some-tags-regexp-jump (regexp bookmark) ; `C-x j t a % +'bmkp-autofile-some-tags-regexp-jump10677,554052
(defun bmkp-autofile-some-tags-regexp-jump-other-window (regexp bookmark) ; `C-x 4 j t a % +'bmkp-autofile-some-tags-regexp-jump-other-window10689,554744
(defun bmkp-find-file (&optional file create-autofile-p must-exist-p msg-p) ; `C-x j C-f'bmkp-find-file10698,555274
(defun bmkp-find-file-other-window (&optional file create-autofile-p must-exist-p msg-p) ; `C-x 4 j C-f'bmkp-find-file-other-window10730,557037
(defun bmkp-jump-in-navlist (bookmark-name &optional flip-use-region-p) ; `C-x j N'bmkp-jump-in-navlist10968,573100
(defun bmkp-jump-in-navlist-other-window (bookmark-name &optional flip-use-region-p) ; `C-x 4 j N'bmkp-jump-in-navlist-other-window10984,574006
(defun bmkp-cycle (increment &optional other-window startoverp)bmkp-cycle11000,574911
(defun bmkp-cycle-other-window (increment &optional startoverp)bmkp-cycle-other-window11040,576868
(defun bmkp-cycle-this-file/buffer (increment &optional other-window startoverp)bmkp-cycle-this-file/buffer11046,577121
(defun bmkp-cycle-this-file/buffer-other-window (increment &optional startoverp)bmkp-cycle-this-file/buffer-other-window11057,577767
(defun bmkp-cycle-this-file (increment &optional other-window startoverp)bmkp-cycle-this-file11064,578195
(defun bmkp-cycle-this-file-other-window (increment &optional startoverp)bmkp-cycle-this-file-other-window11111,580596
(defun bmkp-cycle-this-buffer (increment &optional other-window startoverp)bmkp-cycle-this-buffer11118,581005
(defun bmkp-cycle-this-buffer-other-window (increment &optional startoverp)bmkp-cycle-this-buffer-other-window11165,583426
(defun bmkp-cycle-1 (increment &optional other-window startoverp)bmkp-cycle-111171,583779
(defun bmkp-list-position (item items &optional test)bmkp-list-position11206,585745
(defun bmkp-next-bookmark (n &optional startoverp) ; You can bind this to a repeatable keybmkp-next-bookmark11220,586272
(defun bmkp-previous-bookmark (n &optional startoverp) ; You can bind this to a repeatable keybmkp-previous-bookmark11230,586795
(defun bmkp-next-bookmark-repeat (arg)  ; `C-x p right', `C-x p f', `C-x p C-f'bmkp-next-bookmark-repeat11238,587244
(defun bmkp-previous-bookmark-repeat (arg) ; `C-x p left', `C-x p b', `C-x p C-b'bmkp-previous-bookmark-repeat11248,587712
(defun bmkp-next-bookmark-this-file/buffer (n &optional startoverp) ; Bind to repeatable key, e.g. `S-f2'bmkp-next-bookmark-this-file/buffer11256,588063
(defun bmkp-previous-bookmark-this-file/buffer (n &optional startoverp) ; Bind to repeatable key, e.g. `f2'bmkp-previous-bookmark-this-file/buffer11266,588642
(defun bmkp-next-bookmark-this-file/buffer-repeat (arg)bmkp-next-bookmark-this-file/buffer-repeat11274,589151
(defun bmkp-previous-bookmark-this-file/buffer-repeat (arg)bmkp-previous-bookmark-this-file/buffer-repeat11285,589735
(defun bmkp-next-bookmark-this-file (n &optional startoverp) ; Bind to repeatable key, e.g. `S-f2'bmkp-next-bookmark-this-file11294,590190
(defun bmkp-previous-bookmark-this-file (n &optional startoverp) ; Bind to repeatable key, e.g. `f2'bmkp-previous-bookmark-this-file11304,590734
(defun bmkp-next-bookmark-this-file-repeat (arg)bmkp-next-bookmark-this-file-repeat11312,591208
(defun bmkp-previous-bookmark-this-file-repeat (arg)bmkp-previous-bookmark-this-file-repeat11322,591654
(defun bmkp-next-bookmark-this-buffer (n &optional startoverp) ; Bind to repeatable key, e.g. `S-f2'bmkp-next-bookmark-this-buffer11331,591981
(defun bmkp-previous-bookmark-this-buffer (n &optional startoverp) ; Bind to repeatable key, e.g. `f2'bmkp-previous-bookmark-this-buffer11341,592534
(defun bmkp-next-bookmark-this-buffer-repeat (arg)bmkp-next-bookmark-this-buffer-repeat11349,593017
(defun bmkp-previous-bookmark-this-buffer-repeat (arg)bmkp-previous-bookmark-this-buffer-repeat11359,593472
(defun bmkp-next-bookmark-w32 (n &optional startoverp)       ; You can bind this to a repeatable keybmkp-next-bookmark-w3211367,593797
(defun bmkp-previous-bookmark-w32 (n &optional startoverp)   ; You can bind this to a repeatable keybmkp-previous-bookmark-w3211378,594441
(defun bmkp-next-bookmark-w32-repeat (arg) ; `C-x p next'bmkp-next-bookmark-w32-repeat11386,594940
(defun bmkp-previous-bookmark-w32-repeat (arg) ; `C-x p prior'bmkp-previous-bookmark-w32-repeat11396,595429
(defun bmkp-toggle-autonamed-bookmark-set/delete (&optional position allp)bmkp-toggle-autonamed-bookmark-set/delete11488,600322
(defun bmkp-set-autonamed-bookmark (&optional position msg-p)bmkp-set-autonamed-bookmark11510,601399
(defun bmkp-set-autonamed-bookmark-at-line (&optional number)bmkp-set-autonamed-bookmark-at-line11525,602139
(defun bmkp-set-autonamed-regexp-buffer (regexp &optional msg-p)bmkp-set-autonamed-regexp-buffer11559,603745
(defun bmkp-set-autonamed-regexp-region (regexp beg end &optional msg-p)bmkp-set-autonamed-regexp-region11566,604146
(defun bmkp-autoname-bookmark-function-default (position)bmkp-autoname-bookmark-function-default11579,604718
(defun bmkp-delete-all-autonamed-for-this-buffer (&optional msg-p)bmkp-delete-all-autonamed-for-this-buffer11589,605259
(defun bmkp-delete-autonamed-this-buffer-no-confirm (&optional no-refresh-p)bmkp-delete-autonamed-this-buffer-no-confirm11608,606454
(defun bmkp-delete-autonamed-no-confirm ()bmkp-delete-autonamed-no-confirm11623,607306
(defun bmkp-not-near-other-auto-idle-bmks (&optional position)bmkp-not-near-other-auto-idle-bmks11763,615145
(defun bmkp-toggle-autotemp-on-set (&optional msg-p) ; Bound to `C-x p x'bmkp-toggle-autotemp-on-set11891,622733
(defun bmkp-toggle-temporary-bookmark (bookmark &optional msg-p)bmkp-toggle-temporary-bookmark11900,623268
(defun bmkp-make-bookmark-temporary (bookmark &optional msg-p)bmkp-make-bookmark-temporary11914,624052
(defun bmkp-make-bookmark-savable (bookmark &optional msg-p)bmkp-make-bookmark-savable11926,624687
(defun bmkp-delete-all-temporary-bookmarks (&optional msg-p)bmkp-delete-all-temporary-bookmarks11938,625331
(defun bmkp-delete-temporary-no-confirm ()bmkp-delete-temporary-no-confirm11957,626477
(defun bmkp-delete-bookmarks (&optional position allp alist msg-p) ; Bound to `C-x p delete'bmkp-delete-bookmarks11967,627132
(defun bmkp-thing-at-point (thing &optional syntax-table)bmkp-thing-at-point12067,632934
(defun bmkp-get-external-annotation (annotation)bmkp-get-external-annotation12077,633488
(defun bmkp-visit-external-annotation (annotation.type msg-p)bmkp-visit-external-annotation12089,634117

elpa/bookmark+-20161027.926/bookmark+-autoloads.el,0

elpa/bookmark+-20161027.926/bookmark+-bmu.el,72644
(defalias 'bmkp-bookmark-data-from-record 'bookmark-get-bookmark-record)bmkp-bookmark-data-from-record367,16409
(defalias 'bmkp-bookmark-name-from-record 'bookmark-name-from-full-record)bmkp-bookmark-name-from-record368,16482
(defun bmkp-replace-regexp-in-string (regexp rep string &optional fixedcase literal subexp start)bmkp-replace-regexp-in-string385,17234
(defun bmkp-assoc-delete-all (key alist)bmkp-assoc-delete-all391,17637
(defvar dired-re-mark)                  ; In `dired.el'.dired-re-mark448,20343
(defvar tramp-file-name-regexp)         ; In `tramp.el'.tramp-file-name-regexp449,20400
(defvar bmkp-bmenu-highlight-menu)      ; Defined in this file (conditionally).bmkp-bmenu-highlight-menu451,20458
(defvar bmkp-copied-tags)               ; In `bookmark+-1.el'.bmkp-copied-tags452,20538
(defvar bmkp-count-multi-mods-as-one-flag) ; In `bookmark+-1.el'.bmkp-count-multi-mods-as-one-flag453,20601
(defvar bmkp-current-bookmark-file)     ; In `bookmark+-1.el'.bmkp-current-bookmark-file454,20667
(defvar bmkp-edit-bookmark-orig-record) ; In `bookmark+-1.el'.bmkp-edit-bookmark-orig-record455,20730
(defvar bmkp-incremental-filter-delay)  ; In `bookmark+-1.el'.bmkp-incremental-filter-delay456,20793
(defvar bmkp-edit-bookmark-records-number) ; In `bookmark+-1.el'.bmkp-edit-bookmark-records-number457,20856
(defvar bmkp-last-bookmark-file)        ; In `bookmark+-1.el'.bmkp-last-bookmark-file458,20922
(defvar bmkp-last-specific-buffer)      ; In `bookmark+-1.el'.bmkp-last-specific-buffer459,20985
(defvar bmkp-last-specific-file)        ; In `bookmark+-1.el'.bmkp-last-specific-file460,21048
(defvar bmkp-latest-bookmark-alist)     ; In `bookmark+-1.el'.bmkp-latest-bookmark-alist461,21111
(defvar bmkp-modified-bookmarks)        ; In `bookmark+-1.el'.bmkp-modified-bookmarks462,21174
(defvar bmkp-non-file-filename)         ; In `bookmark+-1.el'.bmkp-non-file-filename463,21237
(defvar bmkp-reverse-multi-sort-p)      ; In `bookmark+-1.el'.bmkp-reverse-multi-sort-p464,21300
(defvar bmkp-reverse-sort-p)            ; In `bookmark+-1.el'.bmkp-reverse-sort-p465,21363
(defvar bmkp-sort-comparer)             ; In `bookmark+-1.el'.bmkp-sort-comparer466,21426
(defvar bmkp-sorted-alist)              ; In `bookmark+-1.el'.bmkp-sorted-alist467,21489
(defvar bmkp-su-or-sudo-regexp)         ; In `bookmark+-1.el'.bmkp-su-or-sudo-regexp468,21552
(defvar bmkp-temporary-bookmarking-mode) ; In `bookmark+-1.el'.bmkp-temporary-bookmarking-mode469,21615
(defvar minibuffer-prompt-properties)   ; Emacs 22+.minibuffer-prompt-properties470,21679
(defun bmkp-looking-at-p (regexp)bmkp-looking-at-p485,22391
(defun bmkp-remap (old new map &optional oldmap)bmkp-remap490,22596
(defgroup bookmark-plus nilbookmark-plus501,23107
(defface bmkp->-mark '((((background dark)) (:foreground "Yellow"))bmkp->-mark513,23661
(defface bmkp-a-mark '((((background dark)) (:background "SaddleBrown"))bmkp-a-mark519,23945
(defface bmkp-bad-bookmark '((t (:foreground "Red" :background "Chartreuse1")))bmkp-bad-bookmark524,24181
(defface bmkp-bookmark-filebmkp-bookmark-file528,24377
(defface bmkp-bookmark-listbmkp-bookmark-list535,24658
(defface bmkp-bufferbmkp-buffer541,24919
(defface bmkp-D-mark '((t (:foreground "Yellow" :background "Red")))bmkp-D-mark547,25160
(defface bmkp-desktopbmkp-desktop551,25332
(defface bmkp-file-handlerbmkp-file-handler557,25578
(defface bmkp-functionbmkp-function563,25820
(defface bmkp-gnusbmkp-gnus569,26064
(defface bmkp-infobmkp-info575,26244
(defface bmkp-local-directorybmkp-local-directory581,26454
(defface bmkp-local-file-without-regionbmkp-local-file-without-region588,26712
(defface bmkp-local-file-with-regionbmkp-local-file-with-region594,26938
(defface bmkp-manbmkp-man600,27152
(defface bmkp-*-mark '((t (:foreground "Red" :background "Yellow")))bmkp-*-mark606,27338
(defface bmkp-no-jumpbmkp-no-jump610,27514
(defface bmkp-no-localbmkp-no-local615,27683
(defface bmkp-non-filebmkp-non-file620,27855
(defface bmkp-remote-filebmkp-remote-file625,28030
(defface bmkp-sequencebmkp-sequence631,28261
(defface bmkp-snippetbmkp-snippet637,28492
(defface bmkp-su-or-sudo '((t (:foreground "Red")))bmkp-su-or-sudo644,28710
(defface bmkp-t-mark '((((background dark)) (:foreground "Magenta"))bmkp-t-mark648,28863
(defface bmkp-urlbmkp-url653,29106
(defface bmkp-variable-listbmkp-variable-list659,29308
(defface bmkp-X-mark '((t (:foreground "Red")))bmkp-X-mark665,29554
(defface bmkp-heading '((((background dark)) (:foreground "Yellow"))bmkp-heading677,30070
(defcustom bmkp-bmenu-omitted-bookmarks ()bmkp-bmenu-omitted-bookmarks686,30494
(defcustom bmkp-bmenu-commands-file (convert-standard-filename "~/.emacs-bmk-bmenu-commands.el")bmkp-bmenu-commands-file698,31162
(defcustom bmkp-bmenu-state-file (convert-standard-filename "~/.emacs-bmk-bmenu-state.el")bmkp-bmenu-state-file718,32289
(defcustom bmkp-bmenu-image-bookmark-icon-filebmkp-bmenu-image-bookmark-icon-file734,33043
(defcustom bmkp-propertize-bookmark-names-flag (> emacs-major-version 20)bmkp-propertize-bookmark-names-flag827,37078
(defconst bmkp-bmenu-header-lines 5bmkp-bmenu-header-lines843,37813
(defconst bmkp-bmenu-marks-width 4bmkp-bmenu-marks-width846,37910
(defvar bmkp-bmenu-before-hide-marked-alist ()bmkp-bmenu-before-hide-marked-alist851,38092
(defvar bmkp-bmenu-before-hide-unmarked-alist ()bmkp-bmenu-before-hide-unmarked-alist854,38207
(defvar bmkp-bmenu-define-command-history ()bmkp-bmenu-define-command-history857,38326
(defvar bmkp-bmenu-filter-function  nil "Latest filtering function for `*Bookmark List*' display.")bmkp-bmenu-filter-function860,38446
(defvar bmkp-bmenu-filter-pattern "" "Regexp for incremental filtering.")bmkp-bmenu-filter-pattern862,38547
(defvar bmkp-bmenu-filter-timer nil "Timer used for incremental filtering.")bmkp-bmenu-filter-timer864,38622
(defvar bmkp-bmenu-first-time-p tbmkp-bmenu-first-time-p866,38700
(defvar bmkp-bmenu-marked-bookmarks ()bmkp-bmenu-marked-bookmarks871,38923
(defvar bmkp-bmenu-title "" "Latest title for `*Bookmark List*' display.")bmkp-bmenu-title876,39102
(defvar bmkp-flagged-bookmarks ()bmkp-flagged-bookmarks878,39178
(defvar bmkp-last-bmenu-bookmark nil "The name of the last bookmark current in the bookmark list.")bmkp-last-bmenu-bookmark882,39383
(defalias 'bookmark-bmenu-check-position 'bookmark-bmenu-ensure-position)bookmark-bmenu-check-position915,40708
(defun bookmark-bmenu-ensure-position ()bookmark-bmenu-ensure-position916,40782
(defun bookmark-bmenu-mark (&optional no-re-sort-p msg-p) ; Bound to `m' in bookmark listbookmark-bmenu-mark939,41768
(defun bookmark-bmenu-unmark (&optional backup no-re-sort-p msg-p) ; Bound to `u' in bookmark listbookmark-bmenu-unmark990,44328
(defalias 'bmkp-bmenu-flag-for-deletion 'bookmark-bmenu-delete) ; A better name.bmkp-bmenu-flag-for-deletion1034,46567
(defun bookmark-bmenu-delete ()         ; Bound to `d', `k' in bookmark listbookmark-bmenu-delete1036,46709
(defalias 'bmkp-bmenu-flag-for-deletion-backwards 'bookmark-bmenu-delete-backwards) ; A better name.bmkp-bmenu-flag-for-deletion-backwards1063,48052
(defun bookmark-bmenu-delete-backwards ()bookmark-bmenu-delete-backwards1065,48224
(defun bookmark-bmenu-surreptitiously-rebuild-list (&optional no-msg-p)bookmark-bmenu-surreptitiously-rebuild-list1081,48763
(defalias 'list-bookmarks 'bookmark-bmenu-list)list-bookmarks1104,49999
(defun bookmark-bmenu-list (&optional filteredp msg-p) ; Bound to `C-x p e', `C-x r l'bookmark-bmenu-list1106,50106
(defun bmkp-bmenu-list-1 (filteredp reset-p interactivep)bmkp-bmenu-list-11230,57844
(defun bookmark-bmenu-bookmark (&optional full)bookmark-bmenu-bookmark1319,62838
(defun bookmark-bmenu-mode ()bookmark-bmenu-mode1336,63593
(defun bookmark-bmenu-toggle-filenames (&optional show no-msg-p)bookmark-bmenu-toggle-filenames1814,87578
(defun bookmark-bmenu-show-filenames (&optional force no-msg-p)bookmark-bmenu-show-filenames1837,88527
(defun bookmark-bmenu-hide-filenames (&optional force no-msg-p)bookmark-bmenu-hide-filenames1883,91020
(defun bookmark-bmenu-1-window (&optional flip-use-region-p) ; Bound to `1' in bookmark listbookmark-bmenu-1-window1926,93156
(defun bookmark-bmenu-2-window (&optional flip-use-region-p) ; Bound to `2' in bookmark listbookmark-bmenu-2-window1943,93791
(defun bookmark-bmenu-this-window (&optional flip-use-region-p) ; Bound to `RET' in bookmark listbookmark-bmenu-this-window1965,94670
(defun bookmark-bmenu-other-window (&optional flip-use-region-p) ; Bound to `o' in bookmark listbookmark-bmenu-other-window1982,95361
(defun bookmark-bmenu-switch-other-window (&optional flip-use-region-p) ; Bound to `C-o' in bookmark listbookmark-bmenu-switch-other-window1999,96111
(defun bookmark-bmenu-other-window-with-mouse (event &optional flip-use-region-p)bookmark-bmenu-other-window-with-mouse2020,96995
(defun bookmark-bmenu-show-annotation (msg-p) ; Only in `mouse-3' menu.bookmark-bmenu-show-annotation2037,97764
(defun bookmark-bmenu-execute-deletions (&optional markedp no-confirm-p) ; Bound to `x' in bookmark listbookmark-bmenu-execute-deletions2063,99168
(defun bookmark-bmenu-rename ()         ; Bound to `r' in bookmark listbookmark-bmenu-rename2123,102206
(defun bmkp-bmenu-show-all ()           ; Bound to `.' in bookmark listbmkp-bmenu-show-all2225,109166
(defun bmkp-bmenu-show-only-autofile-bookmarks (&optional arg) ; Bound to `A S' in bookmark listbmkp-bmenu-show-only-autofile-bookmarks2241,110044
(defun bmkp-bmenu-show-only-file-bookmarks (&optional arg) ; Bound to `F S' in bookmark listbmkp-bmenu-show-only-file-bookmarks2261,111207
(defun bmkp-bmenu-show-only-orphaned-local-file-bookmarks (&optional arg) ; `O S' in bookmark listbmkp-bmenu-show-only-orphaned-local-file-bookmarks2277,112137
(defun bmkp-bmenu-show-only-specific-buffer-bookmarks (&optional buffer) ; `= b S' in bookmark listbmkp-bmenu-show-only-specific-buffer-bookmarks2295,113195
(defun bmkp-bmenu-show-only-specific-file-bookmarks (&optional file) ; Bound to `= f S' in bookmark listbmkp-bmenu-show-only-specific-file-bookmarks2313,114236
(defun bmkp-bmenu-refresh-menu-list (&optional parg msg-p) ; Bound to `g' in bookmark listbmkp-bmenu-refresh-menu-list2345,116058
(defun bmkp-bmenu-filter-bookmark-name-incrementally () ; Bound to `P B' in bookmark listbmkp-bmenu-filter-bookmark-name-incrementally2383,118178
(defun bmkp-bmenu-filter-alist-by-bookmark-name-regexp ()bmkp-bmenu-filter-alist-by-bookmark-name-regexp2394,118716
(defun bmkp-bmenu-filter-file-name-incrementally () ; Bound to `P F' in bookmark listbmkp-bmenu-filter-file-name-incrementally2404,119327
(defun bmkp-bmenu-filter-alist-by-file-name-regexp ()bmkp-bmenu-filter-alist-by-file-name-regexp2415,119853
(defun bmkp-bmenu-filter-annotation-incrementally () ; Bound to `P A' in bookmark listbmkp-bmenu-filter-annotation-incrementally2425,120458
(defun bmkp-bmenu-filter-alist-by-annotation-regexp ()bmkp-bmenu-filter-alist-by-annotation-regexp2436,120994
(defun bmkp-bmenu-filter-tags-incrementally () ; Bound to `P T' in bookmark listbmkp-bmenu-filter-tags-incrementally2446,121596
(defun bmkp-bmenu-filter-alist-by-tags-regexp ()bmkp-bmenu-filter-alist-by-tags-regexp2457,122107
(defun bmkp-bmenu-read-filter-input ()bmkp-bmenu-read-filter-input2466,122609
(defun bmkp-bmenu-cancel-incremental-filtering ()bmkp-bmenu-cancel-incremental-filtering2495,124383
(defun bmkp-bmenu-toggle-show-only-unmarked () ; Bound to `<' in bookmark listbmkp-bmenu-toggle-show-only-unmarked2501,124651
(defun bmkp-bmenu-toggle-show-only-marked () ; Bound to `>' in bookmark listbmkp-bmenu-toggle-show-only-marked2534,126493
(defun bmkp-bmenu-mark-all (&optional no-re-sort-p msg-p) ; Bound to `M-m' in bookmark listbmkp-bmenu-mark-all2571,128473
(defun bmkp-bmenu-unmark-all (mark &optional arg no-re-sort-p msg-p) ; Bound to `M-DEL', `U' in bmk listbmkp-bmenu-unmark-all2597,129790
(defun bmkp-bmenu-regexp-mark (regexp &optional no-re-sort-p msg-p) ; Bound to `% m' in bookmark listbmkp-bmenu-regexp-mark2647,132423
(defun bmkp-bmenu-mark-autofile-bookmarks (&optional arg) ; Bound to `A M' in bookmark listbmkp-bmenu-mark-autofile-bookmarks2679,134140
(defun bmkp-bmenu-mark-autonamed-bookmarks () ; Bound to `# M' in bookmark listbmkp-bmenu-mark-autonamed-bookmarks2690,134752
(defun bmkp-bmenu-mark-bookmark-file-bookmarks () ; Bound to `Y M' in bookmark listbmkp-bmenu-mark-bookmark-file-bookmarks2696,135028
(defun bmkp-bmenu-mark-bookmark-list-bookmarks () ; Bound to `Z M' in bookmark listbmkp-bmenu-mark-bookmark-list-bookmarks2702,135315
(defun bmkp-bmenu-mark-desktop-bookmarks () ; Bound to `K M' in bookmark listbmkp-bmenu-mark-desktop-bookmarks2708,135596
(defun bmkp-bmenu-mark-dired-bookmarks () ; Bound to `M-d M-m' in bookmark listbmkp-bmenu-mark-dired-bookmarks2714,135857
(defun bmkp-bmenu-mark-file-bookmarks (arg) ; Bound to `F M' in bookmark listbmkp-bmenu-mark-file-bookmarks2720,136115
(defun bmkp-bmenu-mark-function-bookmarks () ; Bound to `Q M' in bookmark listbmkp-bmenu-mark-function-bookmarks2728,136482
(defun bmkp-bmenu-mark-gnus-bookmarks () ; Bound to `G M' in bookmark listbmkp-bmenu-mark-gnus-bookmarks2734,136746
(defun bmkp-bmenu-mark-icicles-search-hits-bookmarks () ; Bound to `i M' in bookmark listbmkp-bmenu-mark-icicles-search-hits-bookmarks2740,137012
(defun bmkp-bmenu-mark-image-bookmarks () ; Bound to `M-I M-M' in bookmark listbmkp-bmenu-mark-image-bookmarks2746,137308
(defun bmkp-bmenu-mark-info-bookmarks () ; Bound to `I M' in bookmark listbmkp-bmenu-mark-info-bookmarks2752,137571
(defun bmkp-bmenu-mark-man-bookmarks () ; Bound to `M M' in bookmark listbmkp-bmenu-mark-man-bookmarks2764,138051
(defun bmkp-bmenu-mark-non-file-bookmarks () ; Bound to `B M' in bookmark listbmkp-bmenu-mark-non-file-bookmarks2770,138310
(defun bmkp-bmenu-mark-orphaned-local-file-bookmarks (arg) ; Bound to `O M' in bookmark listbmkp-bmenu-mark-orphaned-local-file-bookmarks2776,138588
(defun bmkp-bmenu-mark-region-bookmarks () ; Bound to `R M' in bookmark listbmkp-bmenu-mark-region-bookmarks2784,139048
(defun bmkp-bmenu-mark-snippet-bookmarks () ; Bound to `w M' in bookmark listbmkp-bmenu-mark-snippet-bookmarks2790,139322
(defun bmkp-bmenu-mark-specific-buffer-bookmarks (&optional buffer) ; `= b M' in bookmark listbmkp-bmenu-mark-specific-buffer-bookmarks2796,139593
(defun bmkp-bmenu-mark-specific-file-bookmarks (&optional file) ; Bound to `= f M' in bookmark listbmkp-bmenu-mark-specific-file-bookmarks2805,140090
(defun bmkp-bmenu-mark-temporary-bookmarks () ; Bound to `X M' in bookmark listbmkp-bmenu-mark-temporary-bookmarks2814,140586
(defun bmkp-bmenu-mark-variable-list-bookmarks () ; Bound to `V M' in bookmark listbmkp-bmenu-mark-variable-list-bookmarks2820,140861
(defun bmkp-bmenu-mark-url-bookmarks () ; Bound to `M-u M-m' in bookmark listbmkp-bmenu-mark-url-bookmarks2826,141138
(defun bmkp-bmenu-mark-w3m-bookmarks () ; Bound to `W M' in bookmark listbmkp-bmenu-mark-w3m-bookmarks2832,141389
(defun bmkp-bmenu-mark-bookmarks-satisfying (pred &optional no-re-sort-p msg-p) ; Not boundbmkp-bmenu-mark-bookmarks-satisfying2838,141649
(defun bmkp-bmenu-toggle-marks (&optional backup no-re-sort-p msg-p) ; Bound to `t' in bookmark listbmkp-bmenu-toggle-marks2874,143387
(defun bmkp-bmenu-toggle-marked-temporary/savable () ; Bound to `M-X' in bookmark listbmkp-bmenu-toggle-marked-temporary/savable2908,145103
(defun bmkp-bmenu-toggle-temporary ()   ; Bound to `C-M-X' in bookmark listbmkp-bmenu-toggle-temporary2944,146811
(defun bmkp-bmenu-dired-marked (dirbufname &optional include-omitted-p)bmkp-bmenu-dired-marked2958,147402
(defun bmkp-bmenu-delete-marked (&optional no-confirm-p)      ; Bound to `D' in bookmark listbmkp-bmenu-delete-marked2985,148823
(defun bmkp-bmenu-move-marked-to-bookmark-file (file &optional duplicates-ok include-omitted-p batchp)bmkp-bmenu-move-marked-to-bookmark-file2993,149256
(defun bmkp-bmenu-copy-marked-to-bookmark-file (file &optional duplicates-ok include-omitted-p movep batchp)bmkp-bmenu-copy-marked-to-bookmark-file3041,151991
(defun bmkp-bmenu-create-bookmark-file-from-marked (file create-b-f-bookmark-pbmkp-bmenu-create-bookmark-file-from-marked3119,156662
(defun bmkp-bmenu-set-bookmark-file-bookmark-from-marked (file &optional include-omitted-p batchp)bmkp-bmenu-set-bookmark-file-bookmark-from-marked3162,159141
(defun bmkp-bmenu-load-marked-bookmark-file-bookmarks (&optional msg-p) ; Bound to `M-l' in bookmark listbmkp-bmenu-load-marked-bookmark-file-bookmarks3195,161023
(defun bmkp-bmenu-make-sequence-from-marked (seqname &optional dont-omit-p) ; Not boundbmkp-bmenu-make-sequence-from-marked3239,163637
(defun bmkp-bmenu-omit ()               ; Not boundbmkp-bmenu-omit3287,165917
(defun bmkp-bmenu-omit/unomit-marked () ; Bound to `- >' in bookmark listbmkp-bmenu-omit/unomit-marked3297,166310
(defun bmkp-bmenu-omit-marked ()        ; Bound to `- >' in bookmark listbmkp-bmenu-omit-marked3306,166703
(defun bmkp-bmenu-unomit-marked ()      ; `- >' in bookmark list when showing omitted bookmarksbmkp-bmenu-unomit-marked3336,168144
(defun bmkp-bmenu-show-only-omitted-bookmarks ()  ; Bound to `- S' in bookmark list to show only omittedbmkp-bmenu-show-only-omitted-bookmarks3367,169937
(defun bmkp-bmenu-search-marked-bookmarks-regexp (regexp &optional allp include-omitted-p)bmkp-bmenu-search-marked-bookmarks-regexp3422,173063
(defun bmkp-bmenu-query-replace-marked-bookmarks-regexp (from to ; Bound to `M-q' in bookmark listbmkp-bmenu-query-replace-marked-bookmarks-regexp3449,174600
(defun bmkp-bmenu-remove-all-tags (&optional must-confirm-p)bmkp-bmenu-remove-all-tags3487,176612
(defun bmkp-bmenu-add-tags ()           ; Only on `mouse-3' menu in bookmark list.bmkp-bmenu-add-tags3500,177199
(defun bmkp-bmenu-set-tag-value ()      ; Bound to `T v' in bookmark listbmkp-bmenu-set-tag-value3512,177833
(defun bmkp-bmenu-set-tag-value-for-marked (tag value &optional allp include-omitted-p msg-p)bmkp-bmenu-set-tag-value-for-marked3526,178356
(defun bmkp-bmenu-remove-tags (&optional msg-p) ; Only on `mouse-3' menu in bookmark list.bmkp-bmenu-remove-tags3553,179727
(defun bmkp-bmenu-add-tags-to-marked (tags &optional allp include-omitted-p msg-p)bmkp-bmenu-add-tags-to-marked3571,180692
(defun bmkp-bmenu-remove-tags-from-marked (tags &optional allp include-omitted-p msg-p)bmkp-bmenu-remove-tags-from-marked3610,182806
(defun bmkp-bmenu-list-tags-of-marked (fullp &optional msg-p)bmkp-bmenu-list-tags-of-marked3657,185369
(defun bmkp-bmenu-mark-bookmarks-tagged-regexp (regexp &optional notp no-re-sort-p msg-p)bmkp-bmenu-mark-bookmarks-tagged-regexp3681,186636
(defun bmkp-bmenu-mark-bookmarks-tagged-all (tags &optional nonep msg-p) ; `T m *' in bookmark listbmkp-bmenu-mark-bookmarks-tagged-all3720,188671
(defun bmkp-bmenu-mark-bookmarks-tagged-none (tags &optional allp msg-p) ; `T m ~ +' in bookmark listbmkp-bmenu-mark-bookmarks-tagged-none3731,189296
(defun bmkp-bmenu-mark-bookmarks-tagged-some (tags &optional somenotp msg-p) ; `T m +' in bookmark listbmkp-bmenu-mark-bookmarks-tagged-some3742,189907
(defun bmkp-bmenu-mark-bookmarks-tagged-not-all (tags &optional somep msg-p) ; `T m ~ *' in bmk listbmkp-bmenu-mark-bookmarks-tagged-not-all3756,190634
(defun bmkp-bmenu-unmark-bookmarks-tagged-regexp (regexp &optional notp no-re-sort-p msg-p)bmkp-bmenu-unmark-bookmarks-tagged-regexp3767,191248
(defun bmkp-bmenu-unmark-bookmarks-tagged-all (tags &optional nonep msg-p) ; `T u *' in bookmark listbmkp-bmenu-unmark-bookmarks-tagged-all3806,193291
(defun bmkp-bmenu-unmark-bookmarks-tagged-none (tags &optional allp msg-p) ; `T u ~ +' in bookmark listbmkp-bmenu-unmark-bookmarks-tagged-none3817,193905
(defun bmkp-bmenu-unmark-bookmarks-tagged-some (tags &optional somenotp msg-p) ; `T u +' in bmk listbmkp-bmenu-unmark-bookmarks-tagged-some3828,194525
(defun bmkp-bmenu-unmark-bookmarks-tagged-not-all (tags &optional somep msg-p) ; `T u ~ *' in bmk listbmkp-bmenu-unmark-bookmarks-tagged-not-all3839,195148
(defun bmkp-bmenu-mark/unmark-bookmarks-tagged-all/none (tags &optional nonep unmarkp no-re-sort-p msg-p)bmkp-bmenu-mark/unmark-bookmarks-tagged-all/none3849,195686
(defun bmkp-bmenu-mark/unmark-bookmarks-tagged-some/not-all (tags &optional notallp unmarkpbmkp-bmenu-mark/unmark-bookmarks-tagged-some/not-all3893,198087
(defun bmkp-bmenu-copy-tags (&optional msg-p) ; `T c', `T M-w', `mouse-3' menu in bookmark list.bmkp-bmenu-copy-tags3939,200625
(defun bmkp-bmenu-paste-add-tags (&optional msg-p) ; `T p', `T C-y', `mouse-3' menu in bookmark list.bmkp-bmenu-paste-add-tags3953,201367
(defun bmkp-bmenu-paste-replace-tags (&optional msg-p) ; `T q', `mouse-3' menu.bmkp-bmenu-paste-replace-tags3961,201773
(defun bmkp-bmenu-paste-add-tags-to-marked (&optional allp include-omitted-p msg-p)bmkp-bmenu-paste-add-tags-to-marked3974,202505
(defun bmkp-bmenu-paste-replace-tags-for-marked (&optional allp include-omitted-p msg-p) ; `T > q'bmkp-bmenu-paste-replace-tags-for-marked4002,204144
(defun bmkp-bmenu-show-or-edit-annotation (editp msg-p) ; Bound to `a' in bookmark list.bmkp-bmenu-show-or-edit-annotation4039,206178
(defun bmkp-bmenu-jump-to-marked ()bmkp-bmenu-jump-to-marked4046,206586
(defun bmkp-bmenu-w32-open ()           ; Bound to `M-RET' in bookmark list.bmkp-bmenu-w32-open4057,207064
(defun bmkp-bmenu-w32-open-with-mouse (event) ; Bound to `M-mouse-2' in bookmark list.bmkp-bmenu-w32-open-with-mouse4063,207443
(defun bmkp-bmenu-w32-jump-to-marked ()    ; Bound to `M-o' in bookmark-list.bmkp-bmenu-w32-jump-to-marked4080,208477
(defun bmkp-bmenu-mode-status-help ()   ; Bound to `C-h m' and `?' in bookmark listbmkp-bmenu-mode-status-help4085,208775
(defun bmkp-bmenu-define-jump-marked-command () ; Bound to `C-c C-j' in bookmark listbmkp-bmenu-define-jump-marked-command4285,221701
(defun bmkp-bmenu-define-command ()     ; Bound to `C-c C-c' in bookmark listbmkp-bmenu-define-command4325,224021
(defun bmkp-bmenu-define-full-snapshot-command () ; Bound to `C-c C-S-c' (aka `C-c C-C') in bookmark listbmkp-bmenu-define-full-snapshot-command4375,226766
(defun bmkp-maybe-unpropertize-bookmark-names (list &optional copy)bmkp-maybe-unpropertize-bookmark-names4456,232327
(defun bmkp-maybe-unpropertize-string (string &optional copy)bmkp-maybe-unpropertize-string4497,234414
(defun bmkp-define-tags-sort-command (tags &optional msg-p) ; Bound to `T s' in bookmark listbmkp-define-tags-sort-command4515,235294
(defun bmkp-bmenu-relocate-marked (directory &optional include-omitted-p msgp)bmkp-bmenu-relocate-marked4580,238590
(defun bmkp-bmenu-edit-bookmark-name-and-location (&optional internalp) ; Bound to `r' in bookmark listbmkp-bmenu-edit-bookmark-name-and-location4617,240372
(defun bmkp-bmenu-edit-tags ()          ; Bound to `T e' in bookmark listbmkp-bmenu-edit-tags4632,241098
(defun bmkp-bmenu-edit-bookmark-record () ; Bound to `e' in bookmark listbmkp-bmenu-edit-bookmark-record4642,241540
(defun bmkp-bmenu-edit-marked (&optional allp include-omitted-p) ; Bound to `E' in bookmark listbmkp-bmenu-edit-marked4652,242072
(defun bmkp-bmenu-propertize-item (bookmark start end)bmkp-bmenu-propertize-item4696,244591
(defun bmkp-bmenu-quit ()               ; Bound to `q' in bookmark listbmkp-bmenu-quit4814,252564
(defun bmkp-bmenu-goto-bookmark-named (name)bmkp-bmenu-goto-bookmark-named4831,253370
(defun bmkp-bmenu-barf-if-not-in-menu-list ()bmkp-bmenu-barf-if-not-in-menu-list4846,254179
(defun bmkp-face-prop (value)bmkp-face-prop4851,254430
(defun bmkp-bmenu-change-sort-order-repeat (arg) ; Bound to `s s'... in bookmark listbmkp-bmenu-change-sort-order-repeat4942,259155
(defun bmkp-bmenu-change-sort-order (&optional arg)bmkp-bmenu-change-sort-order4951,259550
(defun bmkp-reverse-sort-order ()       ; Bound to `s r' in bookmark listbmkp-reverse-sort-order4972,260665
(defun bmkp-reverse-multi-sort-order () ; Bound to `s C-r' in bookmark listbmkp-reverse-multi-sort-order4987,261496
(defun bmkp-bmenu-show-this-annotation+move-down (&optional n) ; Bound to `M-down' in bookmark listbmkp-bmenu-show-this-annotation+move-down5217,272556
(defun bmkp-bmenu-show-this-annotation+move-up (&optional n) ; Bound to `M-up' in bookmark listbmkp-bmenu-show-this-annotation+move-up5225,272924
(defun bmkp-bmenu-kill-annotation (&optional bookmark-name)bmkp-bmenu-kill-annotation5232,273211
(defun bmkp-bmenu-describe-this+move-down (&optional defn) ; Bound to `C-down' in bookmark listbmkp-bmenu-describe-this+move-down5241,273713
(defun bmkp-bmenu-describe-this+move-up (&optional defn) ; Bound to `C-up' in bookmark listbmkp-bmenu-describe-this+move-up5249,274104
(defun bmkp-bmenu-describe-this-bookmark (&optional defn) ; Bound to `C-h RET' in bookmark listbmkp-bmenu-describe-this-bookmark5257,274497
(defun bmkp-bmenu-describe-marked (&optional defn include-omitted-p) ; Bound to `C-h >' in bookmark listbmkp-bmenu-describe-marked5267,275031
(defun bmkp-bmenu-get-marked-files ()bmkp-bmenu-get-marked-files5288,276215
(defun bmkp-bmenu-marked-or-this-or-all (&optional allp include-omitted-p)bmkp-bmenu-marked-or-this-or-all5296,276536
(define-key bookmark-bmenu-mode-map "\M-~"                 'bmkp-toggle-saving-bookmark-file)bookmark-bmenu-mode-map5316,277449
(define-key bookmark-bmenu-mode-map (kbd "C-M-~")          'bmkp-toggle-saving-menu-list-state)bookmark-bmenu-mode-map5317,277543
(define-key bookmark-bmenu-mode-map "."                    'bmkp-bmenu-show-all)bookmark-bmenu-mode-map5318,277639
(define-key bookmark-bmenu-mode-map ">"                    'bmkp-bmenu-toggle-show-only-marked)bookmark-bmenu-mode-map5319,277720
(define-key bookmark-bmenu-mode-map "<"                    'bmkp-bmenu-toggle-show-only-unmarked)bookmark-bmenu-mode-map5320,277816
(define-key bookmark-bmenu-mode-map (kbd "M-<DEL>")        'bmkp-bmenu-unmark-all)bookmark-bmenu-mode-map5321,277914
(define-key bookmark-bmenu-mode-map "-"                    nil) ; For Emacs 20bookmark-bmenu-mode-map5322,277997
(define-key bookmark-bmenu-mode-map "->"                   'bmkp-bmenu-omit/unomit-marked)bookmark-bmenu-mode-map5323,278076
(define-key bookmark-bmenu-mode-map "-S"                   'bmkp-bmenu-show-only-omitted-bookmarks)bookmark-bmenu-mode-map5324,278167
(define-key bookmark-bmenu-mode-map "-U"                   'bmkp-unomit-all)bookmark-bmenu-mode-map5325,278267
(define-key bookmark-bmenu-mode-map "="                    nil) ; For Emacs 20bookmark-bmenu-mode-map5326,278344
(define-key bookmark-bmenu-mode-map "=bM"                  'bmkp-bmenu-mark-specific-buffer-bookmarks)bookmark-bmenu-mode-map5327,278423
(define-key bookmark-bmenu-mode-map "=fM"                  'bmkp-bmenu-mark-specific-file-bookmarks)bookmark-bmenu-mode-map5328,278526
(define-key bookmark-bmenu-mode-map "=bS"                  'bmkp-bmenu-show-only-specific-buffer-bookmarks)bookmark-bmenu-mode-map5329,278627
(define-key bookmark-bmenu-mode-map "=fS"                  'bmkp-bmenu-show-only-specific-file-bookmarks)bookmark-bmenu-mode-map5330,278735
(define-key bookmark-bmenu-mode-map "%"                    nil) ; For Emacs 20bookmark-bmenu-mode-map5331,278841
(define-key bookmark-bmenu-mode-map "%m"                   'bmkp-bmenu-regexp-mark)bookmark-bmenu-mode-map5332,278920
(define-key bookmark-bmenu-mode-map "*"                    nil) ; For Emacs 20bookmark-bmenu-mode-map5333,279004
(define-key bookmark-bmenu-mode-map "#"                    nil) ; For Emacs 20bookmark-bmenu-mode-map5336,279198
(define-key bookmark-bmenu-mode-map "#M"                   'bmkp-bmenu-mark-autonamed-bookmarks)bookmark-bmenu-mode-map5337,279277
(define-key bookmark-bmenu-mode-map "#S"                   'bmkp-bmenu-show-only-autonamed-bookmarks)bookmark-bmenu-mode-map5338,279374
(define-key bookmark-bmenu-mode-map "\M-a"                 'bookmark-bmenu-show-all-annotations)bookmark-bmenu-mode-map5339,279476
(define-key bookmark-bmenu-mode-map "a"                    'bmkp-bmenu-show-or-edit-annotation)bookmark-bmenu-mode-map5341,279634
(define-key bookmark-bmenu-mode-map "A"                    nil) ; For Emacs 20bookmark-bmenu-mode-map5343,279819
(define-key bookmark-bmenu-mode-map "AM"                   'bmkp-bmenu-mark-autofile-bookmarks)bookmark-bmenu-mode-map5344,279898
(define-key bookmark-bmenu-mode-map "AS"                   'bmkp-bmenu-show-only-autofile-bookmarks)bookmark-bmenu-mode-map5345,279994
(define-key bookmark-bmenu-mode-map "B"                    nil) ; For Emacs 20bookmark-bmenu-mode-map5346,280095
(define-key bookmark-bmenu-mode-map "BM"                   'bmkp-bmenu-mark-non-file-bookmarks)bookmark-bmenu-mode-map5347,280174
(define-key bookmark-bmenu-mode-map "BS"                   'bmkp-bmenu-show-only-non-file-bookmarks)bookmark-bmenu-mode-map5348,280270
(define-key bookmark-bmenu-mode-map (kbd "C-c C-c")        'bmkp-bmenu-define-command)bookmark-bmenu-mode-map5349,280371
(define-key bookmark-bmenu-mode-map (kbd "C-c C-S-c")      'bmkp-bmenu-define-full-snapshot-command)bookmark-bmenu-mode-map5350,280458
(define-key bookmark-bmenu-mode-map (kbd "C-c C-j")        'bmkp-bmenu-define-jump-marked-command)bookmark-bmenu-mode-map5351,280559
(define-key bookmark-bmenu-mode-map "d"                    'bmkp-bmenu-flag-for-deletion)bookmark-bmenu-mode-map5352,280658
(define-key bookmark-bmenu-mode-map "D"                    'bmkp-bmenu-delete-marked)bookmark-bmenu-mode-map5353,280748
(define-key bookmark-bmenu-mode-map "\C-d"                 'bmkp-bmenu-flag-for-deletion-backwards)bookmark-bmenu-mode-map5354,280834
(define-key bookmark-bmenu-mode-map "\M-d"                 nil) ; For Emacs 20bookmark-bmenu-mode-map5355,280934
(define-key bookmark-bmenu-mode-map "\M-d>"                'bmkp-bmenu-dired-marked)bookmark-bmenu-mode-map5356,281013
(define-key bookmark-bmenu-mode-map "\M-d\M-m"             'bmkp-bmenu-mark-dired-bookmarks)bookmark-bmenu-mode-map5357,281098
(define-key bookmark-bmenu-mode-map "\M-d\M-s"             'bmkp-bmenu-show-only-dired-bookmarks)bookmark-bmenu-mode-map5358,281191
(define-key bookmark-bmenu-mode-map "e"                    'bmkp-bmenu-edit-bookmark-record)bookmark-bmenu-mode-map5360,281350
(define-key bookmark-bmenu-mode-map "E"                    'bmkp-bmenu-edit-marked)bookmark-bmenu-mode-map5361,281443
(define-key bookmark-bmenu-mode-map "F"                    nil) ; For Emacs 20bookmark-bmenu-mode-map5362,281527
(define-key bookmark-bmenu-mode-map "FM"                   'bmkp-bmenu-mark-file-bookmarks)bookmark-bmenu-mode-map5363,281606
(define-key bookmark-bmenu-mode-map "FS"                   'bmkp-bmenu-show-only-file-bookmarks)bookmark-bmenu-mode-map5364,281698
(define-key bookmark-bmenu-mode-map "g"                    'bmkp-bmenu-refresh-menu-list)bookmark-bmenu-mode-map5365,281795
(define-key bookmark-bmenu-mode-map "G"                    nil) ; For Emacs 20bookmark-bmenu-mode-map5366,281885
(define-key bookmark-bmenu-mode-map "GM"                   'bmkp-bmenu-mark-gnus-bookmarks)bookmark-bmenu-mode-map5367,281964
(define-key bookmark-bmenu-mode-map "GS"                   'bmkp-bmenu-show-only-gnus-bookmarks)bookmark-bmenu-mode-map5368,282056
(define-key bookmark-bmenu-mode-map (kbd "C-h >")          'bmkp-bmenu-describe-marked)bookmark-bmenu-mode-map5374,282563
(define-key bookmark-bmenu-mode-map (kbd "C-h RET")        'bmkp-bmenu-describe-this-bookmark)bookmark-bmenu-mode-map5375,282651
(define-key bookmark-bmenu-mode-map (kbd "C-h C-<return>") 'bmkp-bmenu-describe-this-bookmark)bookmark-bmenu-mode-map5376,282746
(define-key bookmark-bmenu-mode-map (kbd "C-<down>")       'bmkp-bmenu-describe-this+move-down)bookmark-bmenu-mode-map5377,282841
(define-key bookmark-bmenu-mode-map (kbd "C-<up>")         'bmkp-bmenu-describe-this+move-up)bookmark-bmenu-mode-map5378,282937
(define-key bookmark-bmenu-mode-map (kbd "M-<down>")       'bmkp-bmenu-show-this-annotation+move-down)bookmark-bmenu-mode-map5379,283031
(define-key bookmark-bmenu-mode-map (kbd "M-<up>")         'bmkp-bmenu-show-this-annotation+move-up)bookmark-bmenu-mode-map5380,283134
(define-key bookmark-bmenu-mode-map (kbd "M-<return>")     'bmkp-bmenu-w32-open)bookmark-bmenu-mode-map5381,283235
(define-key bookmark-bmenu-mode-map [M-mouse-2]            'bmkp-bmenu-w32-open-with-mouse)bookmark-bmenu-mode-map5382,283316
(define-key bookmark-bmenu-mode-map "i"                    nil) ; For Emacs 20bookmark-bmenu-mode-map5393,284226
(define-key bookmark-bmenu-mode-map "iM"                  'bmkp-bmenu-mark-icicles-search-hits-bookmarks)bookmark-bmenu-mode-map5394,284305
(define-key bookmark-bmenu-mode-map "iS"                'bmkp-bmenu-show-only-icicles-search-hits-bookmarks)bookmark-bmenu-mode-map5395,284411
(define-key bookmark-bmenu-mode-map "I"                    nil) ; For Emacs 20bookmark-bmenu-mode-map5396,284520
(define-key bookmark-bmenu-mode-map "IM"                   'bmkp-bmenu-mark-info-bookmarks)bookmark-bmenu-mode-map5397,284599
(define-key bookmark-bmenu-mode-map "IS"                   'bmkp-bmenu-show-only-info-bookmarks)bookmark-bmenu-mode-map5398,284691
(define-key bookmark-bmenu-mode-map "\M-I"                 nil) ; For Emacs 20bookmark-bmenu-mode-map5399,284788
(define-key bookmark-bmenu-mode-map "\M-I\M-M"             'bmkp-bmenu-mark-image-bookmarks)bookmark-bmenu-mode-map5400,284867
(define-key bookmark-bmenu-mode-map "\M-I\M-S"             'bmkp-bmenu-show-only-image-bookmarks)bookmark-bmenu-mode-map5401,284960
(define-key bookmark-bmenu-mode-map "k"                    'bmkp-bmenu-flag-for-deletion)bookmark-bmenu-mode-map5405,285166
(define-key bookmark-bmenu-mode-map "K"                    nil) ; For Emacs 20bookmark-bmenu-mode-map5406,285256
(define-key bookmark-bmenu-mode-map "KM"                   'bmkp-bmenu-mark-desktop-bookmarks)bookmark-bmenu-mode-map5407,285335
(define-key bookmark-bmenu-mode-map "KS"                   'bmkp-bmenu-show-only-desktop-bookmarks)bookmark-bmenu-mode-map5408,285430
(define-key bookmark-bmenu-mode-map "L"                    'bmkp-switch-bookmark-file-create)bookmark-bmenu-mode-map5409,285530
(define-key bookmark-bmenu-mode-map [(control shift ?l)]   'bookmark-bmenu-locate) ; `C-L' (aka `C-S-l')bookmark-bmenu-mode-map5410,285624
(define-key bookmark-bmenu-mode-map "\M-l"bookmark-bmenu-mode-map5411,285729
(define-key bookmark-bmenu-mode-map "\M-L"                 'bmkp-temporary-bookmarking-mode)bookmark-bmenu-mode-map5413,285823
(define-key bookmark-bmenu-mode-map "M"                    nil) ; For Emacs 20bookmark-bmenu-mode-map5414,285916
(define-key bookmark-bmenu-mode-map "MM"                   'bmkp-bmenu-mark-man-bookmarks)bookmark-bmenu-mode-map5415,285995
(define-key bookmark-bmenu-mode-map "MS"                   'bmkp-bmenu-show-only-man-bookmarks)bookmark-bmenu-mode-map5416,286086
(define-key bookmark-bmenu-mode-map "\M-m"                 'bmkp-bmenu-mark-all)bookmark-bmenu-mode-map5417,286182
(define-key bookmark-bmenu-mode-map "O"                    nil) ; For Emacs 20bookmark-bmenu-mode-map5418,286263
(define-key bookmark-bmenu-mode-map "OM"                 'bmkp-bmenu-mark-orphaned-local-file-bookmarks)bookmark-bmenu-mode-map5419,286342
(define-key bookmark-bmenu-mode-map "OS"                'bmkp-bmenu-show-only-orphaned-local-file-bookmarks)bookmark-bmenu-mode-map5420,286447
(define-key bookmark-bmenu-mode-map "P"                    nil) ; For Emacs 20bookmark-bmenu-mode-map5421,286556
(define-key bookmark-bmenu-mode-map "PA"                  'bmkp-bmenu-filter-annotation-incrementally)bookmark-bmenu-mode-map5422,286635
(define-key bookmark-bmenu-mode-map "PB"                 'bmkp-bmenu-filter-bookmark-name-incrementally)bookmark-bmenu-mode-map5423,286738
(define-key bookmark-bmenu-mode-map "PF"                   'bmkp-bmenu-filter-file-name-incrementally)bookmark-bmenu-mode-map5424,286843
(define-key bookmark-bmenu-mode-map "PT"                   'bmkp-bmenu-filter-tags-incrementally)bookmark-bmenu-mode-map5425,286946
(define-key bookmark-bmenu-mode-map "q"                    'bmkp-bmenu-quit)bookmark-bmenu-mode-map5426,287044
(define-key bookmark-bmenu-mode-map "\M-q"                'bmkp-bmenu-query-replace-marked-bookmarks-regexp)bookmark-bmenu-mode-map5427,287121
(define-key bookmark-bmenu-mode-map "Q"                    nil) ; For Emacs 20bookmark-bmenu-mode-map5428,287230
(define-key bookmark-bmenu-mode-map "QM"                   'bmkp-bmenu-mark-function-bookmarks)bookmark-bmenu-mode-map5429,287309
(define-key bookmark-bmenu-mode-map "QS"                   'bmkp-bmenu-show-only-function-bookmarks)bookmark-bmenu-mode-map5430,287405
(define-key bookmark-bmenu-mode-map "r"                    'bmkp-bmenu-edit-bookmark-name-and-location)bookmark-bmenu-mode-map5431,287506
(define-key bookmark-bmenu-mode-map "R"                    nil) ; For Emacs 20bookmark-bmenu-mode-map5432,287610
(define-key bookmark-bmenu-mode-map "RM"                   'bmkp-bmenu-mark-region-bookmarks)bookmark-bmenu-mode-map5433,287689
(define-key bookmark-bmenu-mode-map "RS"                   'bmkp-bmenu-show-only-region-bookmarks)bookmark-bmenu-mode-map5434,287783
(define-key bookmark-bmenu-mode-map "\M-r"                 'bookmark-bmenu-relocate) ; `R' in Emacsbookmark-bmenu-mode-map5435,287882
(define-key bookmark-bmenu-mode-map "\M-R"                 'bmkp-bmenu-relocate-marked)bookmark-bmenu-mode-map5436,287982
(define-key bookmark-bmenu-mode-map "S"                    'bookmark-bmenu-save) ; `s' in Emacsbookmark-bmenu-mode-map5437,288070
(define-key bookmark-bmenu-mode-map "s"                    nil) ; For Emacs 20bookmark-bmenu-mode-map5438,288166
(define-key bookmark-bmenu-mode-map "s>"                   'bmkp-bmenu-sort-marked-before-unmarked)bookmark-bmenu-mode-map5439,288245
(define-key bookmark-bmenu-mode-map "s*"                   'bmkp-bmenu-sort-modified-before-unmodified)bookmark-bmenu-mode-map5440,288345
(define-key bookmark-bmenu-mode-map "s0"                   'bmkp-bmenu-sort-by-creation-time)bookmark-bmenu-mode-map5441,288449
(define-key bookmark-bmenu-mode-map "sb"                   'bmkp-bmenu-sort-by-last-buffer-or-file-access)bookmark-bmenu-mode-map5442,288543
(define-key bookmark-bmenu-mode-map "sd"                   'bmkp-bmenu-sort-by-last-bookmark-access)bookmark-bmenu-mode-map5443,288650
(define-key bookmark-bmenu-mode-map "sD"                   'bmkp-bmenu-sort-flagged-before-unflagged)bookmark-bmenu-mode-map5444,288751
(define-key bookmark-bmenu-mode-map "sfd"                  'bmkp-bmenu-sort-by-last-local-file-access)bookmark-bmenu-mode-map5445,288853
(define-key bookmark-bmenu-mode-map "sfk"                  'bmkp-bmenu-sort-by-local-file-type)bookmark-bmenu-mode-map5446,288956
(define-key bookmark-bmenu-mode-map "sfn"                  'bmkp-bmenu-sort-by-file-name)bookmark-bmenu-mode-map5447,289052
(define-key bookmark-bmenu-mode-map "sfs"                  'bmkp-bmenu-sort-by-local-file-size)bookmark-bmenu-mode-map5448,289142
(define-key bookmark-bmenu-mode-map "sfu"                  'bmkp-bmenu-sort-by-last-local-file-update)bookmark-bmenu-mode-map5449,289238
(define-key bookmark-bmenu-mode-map "sg"                   'bmkp-bmenu-sort-by-Gnus-thread)bookmark-bmenu-mode-map5450,289341
(define-key bookmark-bmenu-mode-map "si"                   'bmkp-bmenu-sort-by-Info-location)bookmark-bmenu-mode-map5451,289433
(define-key bookmark-bmenu-mode-map "sk"                   'bmkp-bmenu-sort-by-bookmark-type)bookmark-bmenu-mode-map5452,289527
(define-key bookmark-bmenu-mode-map "sn"                   'bmkp-bmenu-sort-by-bookmark-name)bookmark-bmenu-mode-map5453,289621
(define-key bookmark-bmenu-mode-map "sr"                   'bmkp-reverse-sort-order)bookmark-bmenu-mode-map5454,289715
(define-key bookmark-bmenu-mode-map "s\C-r"                'bmkp-reverse-multi-sort-order)bookmark-bmenu-mode-map5455,289800
(define-key bookmark-bmenu-mode-map "ss"                   'bmkp-bmenu-change-sort-order-repeat)bookmark-bmenu-mode-map5456,289891
(define-key bookmark-bmenu-mode-map "st"                   'bmkp-bmenu-sort-tagged-before-untagged)bookmark-bmenu-mode-map5457,289988
(define-key bookmark-bmenu-mode-map "su"                   'bmkp-bmenu-sort-by-url)bookmark-bmenu-mode-map5458,290088
(define-key bookmark-bmenu-mode-map "sv"                   'bmkp-bmenu-sort-by-bookmark-visit-frequency)bookmark-bmenu-mode-map5459,290172
(define-key bookmark-bmenu-mode-map (kbd "M-s a M-s")      'bmkp-bmenu-search-marked-bookmarks-regexp)bookmark-bmenu-mode-map5464,290625
(define-key bookmark-bmenu-mode-map "T"                    nil) ; For Emacs20bookmark-bmenu-mode-map5465,290728
(define-key bookmark-bmenu-mode-map "T>+"                  'bmkp-bmenu-add-tags-to-marked)bookmark-bmenu-mode-map5466,290806
(define-key bookmark-bmenu-mode-map "T>-"                  'bmkp-bmenu-remove-tags-from-marked)bookmark-bmenu-mode-map5467,290897
(define-key bookmark-bmenu-mode-map "T>e"                  'bmkp-bmenu-edit-marked)bookmark-bmenu-mode-map5468,290993
(define-key bookmark-bmenu-mode-map "T>l"                  'bmkp-bmenu-list-tags-of-marked)bookmark-bmenu-mode-map5469,291077
(define-key bookmark-bmenu-mode-map "T>p"                  'bmkp-bmenu-paste-add-tags-to-marked)bookmark-bmenu-mode-map5470,291169
(define-key bookmark-bmenu-mode-map "T>q"                  'bmkp-bmenu-paste-replace-tags-for-marked)bookmark-bmenu-mode-map5471,291266
(define-key bookmark-bmenu-mode-map "T>v"                  'bmkp-bmenu-set-tag-value-for-marked)bookmark-bmenu-mode-map5472,291368
(define-key bookmark-bmenu-mode-map "T>\C-y"               'bmkp-bmenu-paste-add-tags-to-marked)bookmark-bmenu-mode-map5473,291465
(define-key bookmark-bmenu-mode-map "T0"                   'bmkp-remove-all-tags)bookmark-bmenu-mode-map5474,291562
(define-key bookmark-bmenu-mode-map "T+"                   'bmkp-add-tags)bookmark-bmenu-mode-map5475,291644
(define-key bookmark-bmenu-mode-map "T-"                   'bmkp-remove-tags)bookmark-bmenu-mode-map5476,291719
(define-key bookmark-bmenu-mode-map "Tc"                   'bmkp-bmenu-copy-tags)bookmark-bmenu-mode-map5477,291797
(define-key bookmark-bmenu-mode-map "Td"                   'bmkp-remove-tags-from-all)bookmark-bmenu-mode-map5478,291879
(define-key bookmark-bmenu-mode-map "Te"                   'bmkp-bmenu-edit-tags)bookmark-bmenu-mode-map5479,291966
(define-key bookmark-bmenu-mode-map "Tl"                   'bmkp-list-all-tags)bookmark-bmenu-mode-map5480,292048
(define-key bookmark-bmenu-mode-map "Tm*"                  'bmkp-bmenu-mark-bookmarks-tagged-all)bookmark-bmenu-mode-map5481,292128
(define-key bookmark-bmenu-mode-map "Tm%"                  'bmkp-bmenu-mark-bookmarks-tagged-regexp)bookmark-bmenu-mode-map5482,292226
(define-key bookmark-bmenu-mode-map "Tm+"                  'bmkp-bmenu-mark-bookmarks-tagged-some)bookmark-bmenu-mode-map5483,292327
(define-key bookmark-bmenu-mode-map "Tm~*"                 'bmkp-bmenu-mark-bookmarks-tagged-not-all)bookmark-bmenu-mode-map5484,292426
(define-key bookmark-bmenu-mode-map "Tm~+"                 'bmkp-bmenu-mark-bookmarks-tagged-none)bookmark-bmenu-mode-map5485,292528
(define-key bookmark-bmenu-mode-map "Tp"                   'bmkp-bmenu-paste-add-tags)bookmark-bmenu-mode-map5486,292627
(define-key bookmark-bmenu-mode-map "Tq"                   'bmkp-bmenu-paste-replace-tags)bookmark-bmenu-mode-map5487,292714
(define-key bookmark-bmenu-mode-map "Tr"                   'bmkp-rename-tag)bookmark-bmenu-mode-map5488,292805
(define-key bookmark-bmenu-mode-map "Ts"                   'bmkp-define-tags-sort-command)bookmark-bmenu-mode-map5489,292882
(define-key bookmark-bmenu-mode-map "TS"                   'bmkp-bmenu-show-only-tagged-bookmarks)bookmark-bmenu-mode-map5490,292973
(define-key bookmark-bmenu-mode-map "Tu*"                  'bmkp-bmenu-unmark-bookmarks-tagged-all)bookmark-bmenu-mode-map5491,293072
(define-key bookmark-bmenu-mode-map "Tu%"                  'bmkp-bmenu-unmark-bookmarks-tagged-regexp)bookmark-bmenu-mode-map5492,293172
(define-key bookmark-bmenu-mode-map "Tu+"                  'bmkp-bmenu-unmark-bookmarks-tagged-some)bookmark-bmenu-mode-map5493,293275
(define-key bookmark-bmenu-mode-map "Tu~*"                 'bmkp-bmenu-unmark-bookmarks-tagged-not-all)bookmark-bmenu-mode-map5494,293376
(define-key bookmark-bmenu-mode-map "Tu~+"                 'bmkp-bmenu-unmark-bookmarks-tagged-none)bookmark-bmenu-mode-map5495,293480
(define-key bookmark-bmenu-mode-map "Tv"                   'bmkp-bmenu-set-tag-value)bookmark-bmenu-mode-map5496,293581
(define-key bookmark-bmenu-mode-map "T\M-w"                'bmkp-bmenu-copy-tags)bookmark-bmenu-mode-map5497,293667
(define-key bookmark-bmenu-mode-map "T\C-y"                'bmkp-bmenu-paste-add-tags)bookmark-bmenu-mode-map5498,293749
(define-key bookmark-bmenu-mode-map "\M-t"                 'bookmark-bmenu-toggle-filenames) ; `t' in Emacsbookmark-bmenu-mode-map5499,293836
(define-key bookmark-bmenu-mode-map "t"                    'bmkp-bmenu-toggle-marks)bookmark-bmenu-mode-map5500,293944
(define-key bookmark-bmenu-mode-map "U"                    'bmkp-bmenu-unmark-all)bookmark-bmenu-mode-map5501,294029
(define-key bookmark-bmenu-mode-map "\M-u"                 nil) ; For Emacs 20bookmark-bmenu-mode-map5502,294112
(define-key bookmark-bmenu-mode-map "\M-u\M-m"             'bmkp-bmenu-mark-url-bookmarks)bookmark-bmenu-mode-map5503,294191
(define-key bookmark-bmenu-mode-map "\M-u\M-s"             'bmkp-bmenu-show-only-url-bookmarks)bookmark-bmenu-mode-map5504,294282
(define-key bookmark-bmenu-mode-map "v"                    'bmkp-bmenu-w32-jump-to-marked)bookmark-bmenu-mode-map5505,294378
(define-key bookmark-bmenu-mode-map "V"                    nil) ; For Emacs20bookmark-bmenu-mode-map5506,294469
(define-key bookmark-bmenu-mode-map "VM"                   'bmkp-bmenu-mark-variable-list-bookmarks)bookmark-bmenu-mode-map5507,294547
(define-key bookmark-bmenu-mode-map "VS"                   'bmkp-bmenu-show-only-variable-list-bookmarks)bookmark-bmenu-mode-map5508,294648
(define-key bookmark-bmenu-mode-map "\M-o"                 'bmkp-bmenu-w32-jump-to-marked)bookmark-bmenu-mode-map5509,294754
(define-key bookmark-bmenu-mode-map "W"                    nil) ; For Emacs 20bookmark-bmenu-mode-map5510,294845
(define-key bookmark-bmenu-mode-map "WM"                   'bmkp-bmenu-mark-w3m-bookmarks)bookmark-bmenu-mode-map5511,294924
(define-key bookmark-bmenu-mode-map "WS"                   'bmkp-bmenu-show-only-w3m-bookmarks)bookmark-bmenu-mode-map5512,295015
(define-key bookmark-bmenu-mode-map "w"                    nil) ; For Emacs 20bookmark-bmenu-mode-map5513,295111
(define-key bookmark-bmenu-mode-map "wM"                   'bmkp-bmenu-mark-snippet-bookmarks)bookmark-bmenu-mode-map5514,295190
(define-key bookmark-bmenu-mode-map "wS"                   'bmkp-bmenu-show-only-snippet-bookmarks)bookmark-bmenu-mode-map5515,295285
(define-key bookmark-bmenu-mode-map "X"                    nil) ; For Emacs 20bookmark-bmenu-mode-map5516,295385
(define-key bookmark-bmenu-mode-map "XM"                   'bmkp-bmenu-mark-temporary-bookmarks)bookmark-bmenu-mode-map5517,295464
(define-key bookmark-bmenu-mode-map "XS"                   'bmkp-bmenu-show-only-temporary-bookmarks)bookmark-bmenu-mode-map5518,295561
(define-key bookmark-bmenu-mode-map "\M-X"                 'bmkp-bmenu-toggle-marked-temporary/savable)bookmark-bmenu-mode-map5519,295663
(define-key bookmark-bmenu-mode-map "\C-\M-X"              'bmkp-bmenu-toggle-temporary)bookmark-bmenu-mode-map5520,295767
(define-key bookmark-bmenu-mode-map "Y"                    nil) ; For Emacs 20bookmark-bmenu-mode-map5521,295856
(define-key bookmark-bmenu-mode-map "YM"                   'bmkp-bmenu-mark-bookmark-file-bookmarks)bookmark-bmenu-mode-map5522,295935
(define-key bookmark-bmenu-mode-map "YS"                   'bmkp-bmenu-show-only-bookmark-file-bookmarks)bookmark-bmenu-mode-map5523,296036
(define-key bookmark-bmenu-mode-map "Y>"                   nil) ; For Emacs 20bookmark-bmenu-mode-map5524,296142
(define-key bookmark-bmenu-mode-map "Y>+"                  'bmkp-bmenu-copy-marked-to-bookmark-file)bookmark-bmenu-mode-map5525,296221
(define-key bookmark-bmenu-mode-map "Y>-"                  'bmkp-bmenu-move-marked-to-bookmark-file)bookmark-bmenu-mode-map5526,296322
(define-key bookmark-bmenu-mode-map "Y>0"                  'bmkp-bmenu-create-bookmark-file-from-marked)bookmark-bmenu-mode-map5527,296423
(define-key bookmark-bmenu-mode-map "Z"                    nil) ; For Emacs 20bookmark-bmenu-mode-map5528,296528
(define-key bookmark-bmenu-mode-map "ZM"                   'bmkp-bmenu-mark-bookmark-list-bookmarks)bookmark-bmenu-mode-map5529,296607
(define-key bookmark-bmenu-mode-map "ZS"                   'bmkp-bmenu-show-only-bookmark-list-bookmarks)bookmark-bmenu-mode-map5530,296708
(defvar bmkp-bmenu-menubar-menu (make-sparse-keymap "Bookmark+") "`Boomark+' menu-bar menu.")bmkp-bmenu-menubar-menu5535,296868
(define-key bookmark-bmenu-mode-map [menu-bar bmkp]bookmark-bmenu-mode-map5536,296962
(define-key bmkp-bmenu-menubar-menu [bmkp-bmenu-quit]bmkp-bmenu-menubar-menu5540,297074
(define-key bmkp-bmenu-menubar-menu [bmkp-list-defuns-in-commands-file]bmkp-bmenu-menubar-menu5543,297253
(define-key bmkp-bmenu-menubar-menu [bmkp-bmenu-describe-marked]bmkp-bmenu-menubar-menu5546,297482
(define-key bmkp-bmenu-menubar-menu [bmkp-bmenu-describe-this-bookmark]bmkp-bmenu-menubar-menu5549,297695
(define-key bmkp-bmenu-menubar-menu [bmkp-bmenu-mode-status-help]bmkp-bmenu-menubar-menu5552,297919
(define-key bmkp-bmenu-menubar-menu [top-sep7] '("--")) ; ------------bmkp-bmenu-menubar-menu5556,298135
(define-key bmkp-bmenu-menubar-menu [bmkp-revert-bookmark-file]bmkp-bmenu-menubar-menu5557,298206
(define-key bmkp-bmenu-menubar-menu [bmkp-bmenu-refresh-menu-list]bmkp-bmenu-menubar-menu5560,298419
(define-key bmkp-bmenu-menubar-menu [top-sep6] '("--")) ; ------------bmkp-bmenu-menubar-menu5564,298639
(define-key bmkp-bmenu-menubar-menu [bmkp-save-menu-list-state]bmkp-bmenu-menubar-menu5565,298710
(define-key bmkp-bmenu-menubar-menu [bookmark-write]bmkp-bmenu-menubar-menu5569,298995
(define-key bmkp-bmenu-menubar-menu [bookmark-bmenu-save]bmkp-bmenu-menubar-menu5572,299170
(define-key bmkp-bmenu-menubar-menu [top-sep5] '("--")) ; ----------bmkp-bmenu-menubar-menu5577,299399
(define-key bmkp-bmenu-menubar-menu [bmkp-bmenu-edit-marked]bmkp-bmenu-menubar-menu5578,299468
(define-key bmkp-bmenu-menubar-menu [bmkp-bmenu-relocate-marked]bmkp-bmenu-menubar-menu5581,299684
(define-key bmkp-bmenu-menubar-menu [top-sep4] '("--")) ; ----------bmkp-bmenu-menubar-menu5585,299871
(define-key bmkp-bmenu-menubar-menu [bmkp-make-function-bookmark]bmkp-bmenu-menubar-menu5586,299940
(define-key bmkp-bmenu-menubar-menu [bmkp-bmenu-make-sequence-from-marked]bmkp-bmenu-menubar-menu5589,300152
(define-key bmkp-bmenu-menubar-menu [top-sep3] '("--")) ; ----------bmkp-bmenu-menubar-menu5593,300403
(define-key bmkp-bmenu-menubar-menu [bmkp-choose-navlist-from-bookmark-list]bmkp-bmenu-menubar-menu5594,300472
(define-key bmkp-bmenu-menubar-menu [bmkp-choose-navlist-of-type]bmkp-bmenu-menubar-menu5597,300715
(define-key bmkp-bmenu-menubar-menu [top-sep2] '("--")) ; ----------bmkp-bmenu-menubar-menu5601,300935
(defvar bmkp-bmenu-define-command-menu (make-sparse-keymap "Define Command")bmkp-bmenu-define-command-menu5603,301005
(define-key bmkp-bmenu-menubar-menu [define-command]bmkp-bmenu-menubar-menu5605,301145
(defvar bmkp-bmenu-bookmark-file-menu (make-sparse-keymap "Bookmark File")bmkp-bmenu-bookmark-file-menu5608,301257
(define-key bmkp-bmenu-menubar-menu [bookmark-file] (cons "Bookmark File" bmkp-bmenu-bookmark-file-menu))bmkp-bmenu-menubar-menu5610,301394
(defvar bmkp-bmenu-tags-menu (make-sparse-keymap "Tags")bmkp-bmenu-tags-menu5618,301845
(define-key bmkp-bmenu-menubar-menu [tags] (cons "Tags" bmkp-bmenu-tags-menu))bmkp-bmenu-menubar-menu5620,301955
(defvar bmkp-bmenu-search-menu (make-sparse-keymap "Search")bmkp-bmenu-search-menu5622,302035
(define-key bmkp-bmenu-menubar-menu [search] (cons "Search" bmkp-bmenu-search-menu))bmkp-bmenu-menubar-menu5624,302151
(defvar bmkp-bmenu-sort-menu (make-sparse-keymap "Sort")bmkp-bmenu-sort-menu5626,302237
(define-key bmkp-bmenu-menubar-menu [sort] (cons "Sort" bmkp-bmenu-sort-menu))bmkp-bmenu-menubar-menu5628,302347
(defvar bmkp-bmenu-show-menu (make-sparse-keymap "Show")bmkp-bmenu-show-menu5630,302427
(define-key bmkp-bmenu-menubar-menu [show] (cons "Show" bmkp-bmenu-show-menu))bmkp-bmenu-menubar-menu5632,302537
(defvar bmkp-bmenu-omit-menu (make-sparse-keymap "Omit")bmkp-bmenu-omit-menu5634,302617
(define-key bmkp-bmenu-menubar-menu [omitting] (cons "Omit" bmkp-bmenu-omit-menu))bmkp-bmenu-menubar-menu5636,302725
(defvar bmkp-bmenu-mark-menu (make-sparse-keymap "Mark")bmkp-bmenu-mark-menu5638,302809
(define-key bmkp-bmenu-menubar-menu [marking] (cons "Mark" bmkp-bmenu-mark-menu))bmkp-bmenu-menubar-menu5640,302919
(defvar bmkp-bmenu-delete-menu (make-sparse-keymap "Delete")bmkp-bmenu-delete-menu5642,303002
(define-key bmkp-bmenu-menubar-menu [delete] (cons "Delete" bmkp-bmenu-delete-menu))bmkp-bmenu-menubar-menu5644,303118
(defvar bmkp-bmenu-toggle-menu (make-sparse-keymap "Toggle")bmkp-bmenu-toggle-menu5646,303204
(define-key bmkp-bmenu-menubar-menu [toggle] (cons "Toggle" bmkp-bmenu-toggle-menu))bmkp-bmenu-menubar-menu5648,303337
(define-key bmkp-bmenu-define-command-menu [bmkp-bmenu-define-full-snapshot-command]bmkp-bmenu-define-command-menu5652,303495
(define-key bmkp-bmenu-define-command-menu [bmkp-bmenu-define-command]bmkp-bmenu-define-command-menu5655,303749
(define-key bmkp-bmenu-define-command-menu [bmkp-define-tags-sort-command]bmkp-bmenu-define-command-menu5658,303985
(define-key bmkp-bmenu-define-command-menu [bmkp-bmenu-define-jump-marked-command]bmkp-bmenu-define-command-menu5661,304220
(define-key bmkp-bmenu-bookmark-file-menu [bmkp-empty-file]bmkp-bmenu-bookmark-file-menu5668,304588
(define-key bmkp-bmenu-bookmark-file-menu [bmkp-bmenu-set-bookmark-file-bookmark-from-marked]bmkp-bmenu-bookmark-file-menu5671,304786
(define-key bmkp-bmenu-bookmark-file-menu [bmkp-bmenu-create-bookmark-file-from-marked]bmkp-bmenu-bookmark-file-menu5676,305100
(define-key bmkp-bmenu-bookmark-file-menu [bmkp-bmenu-copy-marked-to-bookmark-file]bmkp-bmenu-bookmark-file-menu5679,305375
(define-key bmkp-bmenu-bookmark-file-menu [bmkp-bmenu-move-marked-to-bookmark-file]bmkp-bmenu-bookmark-file-menu5682,305628
(define-key bmkp-bmenu-bookmark-file-menu [sep] '("--")) ; ------------bmkp-bmenu-bookmark-file-menu5686,305892
(define-key bmkp-bmenu-bookmark-file-menu [bmkp-bmenu-load-marked-bookmark-file-bookmarks]bmkp-bmenu-bookmark-file-menu5687,305964
(define-key bmkp-bmenu-bookmark-file-menu [bookmark-bmenu-load]bmkp-bmenu-bookmark-file-menu5690,306221
(define-key bmkp-bmenu-bookmark-file-menu [bmkp-switch-bookmark-file-create]bmkp-bmenu-bookmark-file-menu5693,306409
(define-key bmkp-bmenu-bookmark-file-menu [bmkp-revert-bookmark-file]bmkp-bmenu-bookmark-file-menu5696,306654
(define-key bmkp-bmenu-toggle-menu [diredp-highlight-autofiles-mode]bmkp-bmenu-toggle-menu5703,306961
(define-key bmkp-bmenu-toggle-menu [bmkp-toggle-guess-default-file-handler]bmkp-bmenu-toggle-menu5712,307583
(define-key bmkp-bmenu-toggle-menu [bmkp-toggle-auto-light-when-jump-menu]bmkp-bmenu-toggle-menu5718,308061
(define-key bmkp-bmenu-toggle-menu [bmkp-toggle-auto-light-when-set-menu]bmkp-bmenu-toggle-menu5725,308603
(define-key bmkp-bmenu-toggle-menu [bmkp-toggle-prompt-for-tags]bmkp-bmenu-toggle-menu5732,309136
(define-key bmkp-bmenu-toggle-menu [bmkp-toggle-propertize-bookmark-names]bmkp-bmenu-toggle-menu5737,309519
(define-key bmkp-bmenu-toggle-menu [sep4] '("--")) ; ------------ Jumping-behavior stuffbmkp-bmenu-toggle-menu5745,310047
(define-key bmkp-bmenu-toggle-menu [bmkp-toggle-allow-multi-tabs-for-w3m]bmkp-bmenu-toggle-menu5746,310136
(define-key bmkp-bmenu-toggle-menu [bmkp-toggle-showing-region-end]bmkp-bmenu-toggle-menu5751,310545
(define-key bmkp-bmenu-toggle-menu [bmkp-toggle-pop-to]bmkp-bmenu-toggle-menu5756,310930
(define-key bmkp-bmenu-toggle-menu [bmkp-toggle-auto-light-when-jump-menu]bmkp-bmenu-toggle-menu5761,311315
(define-key bmkp-bmenu-toggle-menu [sep3] '("--")) ; ------------ Temporary bookmark stuffbmkp-bmenu-toggle-menu5777,312393
(define-key bmkp-bmenu-toggle-menu [bmkp-bmenu-toggle-marked-temporary/savable]bmkp-bmenu-toggle-menu5778,312484
(define-key bmkp-bmenu-toggle-menu [bmkp-temporary-bookmarking-mode]bmkp-bmenu-toggle-menu5781,312742
(define-key bmkp-bmenu-toggle-menu [bmkp-toggle-autotemp-on-set]bmkp-bmenu-toggle-menu5786,313103
(define-key bmkp-bmenu-toggle-menu [sep2] '("--")) ; ------------ List display stuffbmkp-bmenu-toggle-menu5792,313520
(define-key bmkp-bmenu-toggle-menu [bmkp-toggle-bookmark-set-refreshes]bmkp-bmenu-toggle-menu5793,313605
(define-key bmkp-bmenu-toggle-menu [bmkp-toggle-count-multi-mods-as-one]bmkp-bmenu-toggle-menu5796,313856
(define-key bmkp-bmenu-toggle-menu [bmkp-bmenu-toggle-marks]bmkp-bmenu-toggle-menu5801,314274
(define-key bmkp-bmenu-toggle-menu [bmkp-reverse-sort-order]bmkp-bmenu-toggle-menu5804,314462
(define-key bmkp-bmenu-toggle-menu [bmkp-bmenu-toggle-show-only-unmarked]bmkp-bmenu-toggle-menu5808,314673
(define-key bmkp-bmenu-toggle-menu [bmkp-bmenu-toggle-show-only-marked]bmkp-bmenu-toggle-menu5811,314879
(define-key bmkp-bmenu-toggle-menu [bmkp-bmenu-toggle-filenames]bmkp-bmenu-toggle-menu5814,315079
(define-key bmkp-bmenu-toggle-menu [bmkp-toggle-saving-menu-list-state]bmkp-bmenu-toggle-menu5832,316362
(define-key bmkp-bmenu-toggle-menu [sep1] '("--")) ; ------------ Automatic stuffbmkp-bmenu-toggle-menu5838,316752
(define-key bmkp-bmenu-toggle-menu [bmkp-auto-idle-bookmark-mode]bmkp-bmenu-toggle-menu5839,316834
(define-key bmkp-bmenu-toggle-menu [bmkp-toggle-save-desktop-before-switching]bmkp-bmenu-toggle-menu5842,317044
(define-key bmkp-bmenu-toggle-menu [bmkp-toggle-saving-relocated]bmkp-bmenu-toggle-menu5847,317498
(define-key bmkp-bmenu-toggle-menu [bmkp-toggle-saving-bookmark-file]bmkp-bmenu-toggle-menu5852,317884
(define-key bmkp-bmenu-tags-menu [bmkp-list-all-tags]bmkp-bmenu-tags-menu5889,320075
(define-key bmkp-bmenu-tags-menu [bmkp-bmenu-list-tags-of-marked]bmkp-bmenu-tags-menu5892,320263
(define-key bmkp-bmenu-tags-menu [bmkp-purge-notags-autofiles]bmkp-bmenu-tags-menu5895,320487
(define-key bmkp-bmenu-tags-menu [bmkp-untag-a-file]bmkp-bmenu-tags-menu5898,320688
(define-key bmkp-bmenu-tags-menu [bmkp-tag-a-file]bmkp-bmenu-tags-menu5901,320870
(define-key bmkp-bmenu-tags-menu [tags-sep] '("--")) ; ---------------bmkp-bmenu-tags-menu5905,321043
(define-key bmkp-bmenu-tags-menu [bmkp-rename-tag]bmkp-bmenu-tags-menu5906,321114
(define-key bmkp-bmenu-tags-menu [bmkp-bmenu-edit-marked]bmkp-bmenu-tags-menu5909,321279
(define-key bmkp-bmenu-tags-menu [bmkp-bmenu-set-tag-value-for-marked]bmkp-bmenu-tags-menu5913,321507
(define-key bmkp-bmenu-tags-menu [bmkp-remove-tags-from-all]bmkp-bmenu-tags-menu5916,321729
(define-key bmkp-bmenu-tags-menu [bmkp-bmenu-remove-tags-from-marked]bmkp-bmenu-tags-menu5919,321915
(define-key bmkp-bmenu-tags-menu [bmkp-bmenu-add-tags-to-marked]bmkp-bmenu-tags-menu5922,322137
(define-key bmkp-bmenu-tags-menu [bmkp-bmenu-paste-replace-tags-for-marked]bmkp-bmenu-tags-menu5925,322339
(define-key bmkp-bmenu-tags-menu [bmkp-bmenu-paste-add-tags-to-marked]bmkp-bmenu-tags-menu5928,322593
(define-key bmkp-bmenu-tags-menu [bmkp-bmenu-copy-tags]bmkp-bmenu-tags-menu5932,322851
(define-key bmkp-bmenu-search-menu [bmkp-bmenu-query-replace-marked-bookmarks-regexp]bmkp-bmenu-search-menu5938,323131
(define-key bmkp-bmenu-search-menu [bmkp-bmenu-search-marked-bookmarks-regexp]bmkp-bmenu-search-menu5948,323917
(define-key bmkp-bmenu-sort-menu [bmkp-bmenu-sort-by-url]bmkp-bmenu-sort-menu5954,324233
(define-key bmkp-bmenu-sort-menu [bmkp-bmenu-sort-by-Gnus-thread]bmkp-bmenu-sort-menu5957,324407
(define-key bmkp-bmenu-sort-menu [bmkp-bmenu-sort-by-Info-location]bmkp-bmenu-sort-menu5960,324612
(define-key bmkp-bmenu-sort-menu [bmkp-bmenu-sort-by-last-local-file-update]bmkp-bmenu-sort-menu5963,324820
(define-key bmkp-bmenu-sort-menu [bmkp-bmenu-sort-by-last-buffer-or-file-access]bmkp-bmenu-sort-menu5966,325041
(define-key bmkp-bmenu-sort-menu [bmkp-bmenu-sort-by-local-file-size]bmkp-bmenu-sort-menu5969,325291
(define-key bmkp-bmenu-sort-menu [bmkp-bmenu-sort-by-local-file-type]bmkp-bmenu-sort-menu5972,325479
(define-key bmkp-bmenu-sort-menu [bmkp-bmenu-sort-by-bookmark-type]bmkp-bmenu-sort-menu5975,325693
(define-key bmkp-bmenu-sort-menu [bmkp-bmenu-sort-by-file-name]bmkp-bmenu-sort-menu5978,325886
(define-key bmkp-bmenu-sort-menu [bmkp-bmenu-sort-by-bookmark-name]bmkp-bmenu-sort-menu5980,326046
(define-key bmkp-bmenu-sort-menu [bmkp-bmenu-sort-by-creation-time]bmkp-bmenu-sort-menu5983,326257
(define-key bmkp-bmenu-sort-menu [bmkp-bmenu-sort-by-last-bookmark-access]bmkp-bmenu-sort-menu5986,326450
(define-key bmkp-bmenu-sort-menu [bmkp-bmenu-sort-by-bookmark-visit-frequency]bmkp-bmenu-sort-menu5989,326679
(define-key bmkp-bmenu-sort-menu [bmkp-bmenu-sort-marked-before-unmarked]bmkp-bmenu-sort-menu5992,326917
(define-key bmkp-bmenu-sort-menu [bmkp-reverse-sort-order]bmkp-bmenu-sort-menu5995,327132
(define-key bmkp-bmenu-show-menu [bookmark-bmenu-show-all-annotations]bmkp-bmenu-show-menu6000,327362
(define-key bmkp-bmenu-show-menu [bookmark-bmenu-toggle-filenames]bmkp-bmenu-show-menu6003,327575
(define-key bmkp-bmenu-show-menu [show-sep5] '("--")) ; --------------bmkp-bmenu-show-menu6007,327782
(define-key bmkp-bmenu-show-menu [bmkp-bmenu-filter-tags-incrementally]bmkp-bmenu-show-menu6008,327853
(define-key bmkp-bmenu-show-menu [bmkp-bmenu-filter-annotation-incrementally]bmkp-bmenu-show-menu6011,328071
(define-key bmkp-bmenu-show-menu [bmkp-bmenu-filter-file-name-incrementally]bmkp-bmenu-show-menu6014,328314
(define-key bmkp-bmenu-show-menu [bmkp-bmenu-filter-bookmark-name-incrementally]bmkp-bmenu-show-menu6017,328553
(define-key bmkp-bmenu-show-menu [show-sep3] '("--")) ; --------------bmkp-bmenu-show-menu6021,328800
(define-key bmkp-bmenu-show-menu [bmkp-bmenu-show-only-specific-file-bookmarks]bmkp-bmenu-show-menu6022,328871
(define-key bmkp-bmenu-show-menu [bmkp-bmenu-show-only-specific-buffer-bookmarks]bmkp-bmenu-show-menu6025,329103
(define-key bmkp-bmenu-show-menu [show-sep2] '("--")) ; --------------bmkp-bmenu-show-menu6029,329344
(define-key bmkp-bmenu-show-menu [bmkp-bmenu-show-only-temporary-bookmarks]bmkp-bmenu-show-menu6034,329656
(define-key bmkp-bmenu-show-menu [bmkp-bmenu-show-only-autonamed-bookmarks]bmkp-bmenu-show-menu6037,329870
(define-key bmkp-bmenu-show-menu [bmkp-bmenu-show-only-autofile-bookmarks]bmkp-bmenu-show-menu6040,330076
(define-key bmkp-bmenu-show-menu [show-sep1] '("--")) ; --------------bmkp-bmenu-show-menu6044,330317
(define-key bmkp-bmenu-show-menu [bmkp-bmenu-toggle-show-only-unmarked]bmkp-bmenu-show-menu6045,330388
(define-key bmkp-bmenu-show-menu [bmkp-bmenu-toggle-show-only-marked]bmkp-bmenu-show-menu6048,330604
(define-key bmkp-bmenu-show-menu [bmkp-bmenu-show-all]bmkp-bmenu-show-menu6051,330816
(defvar bmkp-bmenu-show-types-menu (make-sparse-keymap "Only Bookmarks of Type")bmkp-bmenu-show-types-menu6058,331065
(define-key bmkp-bmenu-show-menu [type] (cons "Only Bookmarks of Type" bmkp-bmenu-show-types-menu))bmkp-bmenu-show-menu6060,331226
(define-key bmkp-bmenu-show-types-menu [show-sep4] '("--")) ; --------------bmkp-bmenu-show-types-menu6062,331327
(define-key bmkp-bmenu-show-types-menu [bmkp-bmenu-show-only-w3m-bookmarks]bmkp-bmenu-show-types-menu6063,331404
(define-key bmkp-bmenu-show-types-menu [bmkp-bmenu-show-only-url-bookmarks]bmkp-bmenu-show-types-menu6066,331591
(define-key bmkp-bmenu-show-types-menu [bmkp-bmenu-show-only-man-bookmarks]bmkp-bmenu-show-types-menu6069,331770
(define-key bmkp-bmenu-show-types-menu [bmkp-bmenu-show-only-untagged-bookmarks]bmkp-bmenu-show-types-menu6072,331969
(define-key bmkp-bmenu-show-types-menu [bmkp-bmenu-show-only-tagged-bookmarks]bmkp-bmenu-show-types-menu6075,332180
(define-key bmkp-bmenu-show-types-menu [bmkp-bmenu-show-only-variable-list-bookmarks]bmkp-bmenu-show-types-menu6078,332378
(define-key bmkp-bmenu-show-types-menu [bmkp-bmenu-show-only-function-bookmarks]bmkp-bmenu-show-types-menu6081,332597
(define-key bmkp-bmenu-show-types-menu [bmkp-bmenu-show-only-snippet-bookmarks]bmkp-bmenu-show-types-menu6084,332796
(define-key bmkp-bmenu-show-types-menu [bmkp-bmenu-show-only-region-bookmarks]bmkp-bmenu-show-types-menu6087,332991
(define-key bmkp-bmenu-show-types-menu [bmkp-bmenu-show-only-orphaned-local-file-bookmarks]bmkp-bmenu-show-types-menu6090,333196
(define-key bmkp-bmenu-show-types-menu [bmkp-bmenu-show-only-non-file-bookmarks]bmkp-bmenu-show-types-menu6093,333461
(define-key bmkp-bmenu-show-types-menu [bmkp-bmenu-show-only-image-bookmarks]bmkp-bmenu-show-types-menu6096,333670
(define-key bmkp-bmenu-show-types-menu [bmkp-bmenu-show-only-icicles-search-hits-bookmarks]bmkp-bmenu-show-types-menu6099,333863
(define-key bmkp-bmenu-show-types-menu [bmkp-bmenu-show-only-info-bookmarks]bmkp-bmenu-show-types-menu6102,334101
(define-key bmkp-bmenu-show-types-menu [bmkp-bmenu-show-only-gnus-bookmarks]bmkp-bmenu-show-types-menu6105,334289
(define-key bmkp-bmenu-show-types-menu [bmkp-bmenu-show-only-file-bookmarks]bmkp-bmenu-show-types-menu6108,334480
(define-key bmkp-bmenu-show-types-menu [bmkp-bmenu-show-only-dired-bookmarks]bmkp-bmenu-show-types-menu6111,334677
(define-key bmkp-bmenu-show-types-menu [bmkp-bmenu-show-only-desktop-bookmarks]bmkp-bmenu-show-types-menu6114,334871
(define-key bmkp-bmenu-show-types-menu [bmkp-bmenu-show-only-bookmark-list-bookmarks]bmkp-bmenu-show-types-menu6117,335066
(define-key bmkp-bmenu-show-types-menu [bmkp-bmenu-show-only-bookmark-file-bookmarks]bmkp-bmenu-show-types-menu6120,335285
(define-key bmkp-bmenu-omit-menu [bmkp-bmenu-show-all]bmkp-bmenu-omit-menu6126,335577
(define-key bmkp-bmenu-omit-menu [bmkp-bmenu-show-only-omitted-bookmarks]bmkp-bmenu-omit-menu6130,335797
(define-key bmkp-bmenu-omit-menu [bmkp-unomit-all]bmkp-bmenu-omit-menu6134,336103
(define-key bmkp-bmenu-omit-menu [bmkp-bmenu-unomit-marked]bmkp-bmenu-omit-menu6137,336280
(define-key bmkp-bmenu-omit-menu [bmkp-bmenu-omit-marked]bmkp-bmenu-omit-menu6144,336759
(define-key bmkp-bmenu-mark-menu [bmkp-bmenu-unmark-bookmarks-tagged-not-all]bmkp-bmenu-mark-menu6153,337258
(define-key bmkp-bmenu-mark-menu [bmkp-bmenu-unmark-bookmarks-tagged-none]bmkp-bmenu-mark-menu6156,337524
(define-key bmkp-bmenu-mark-menu [bmkp-bmenu-unmark-bookmarks-tagged-all]bmkp-bmenu-mark-menu6159,337777
(define-key bmkp-bmenu-mark-menu [bmkp-bmenu-unmark-bookmarks-tagged-some]bmkp-bmenu-mark-menu6162,338022
(define-key bmkp-bmenu-mark-menu [bmkp-bmenu-unmark-bookmarks-tagged-regexp]bmkp-bmenu-mark-menu6165,338279
(define-key bmkp-bmenu-mark-menu [bmkp-bmenu-mark-bookmarks-tagged-not-all]bmkp-bmenu-mark-menu6168,338524
(define-key bmkp-bmenu-mark-menu [bmkp-bmenu-mark-bookmarks-tagged-none]bmkp-bmenu-mark-menu6171,338779
(define-key bmkp-bmenu-mark-menu [bmkp-bmenu-mark-bookmarks-tagged-all]bmkp-bmenu-mark-menu6174,339022
(define-key bmkp-bmenu-mark-menu [bmkp-bmenu-mark-bookmarks-tagged-some]bmkp-bmenu-mark-menu6177,339259
(define-key bmkp-bmenu-mark-menu [bmkp-bmenu-mark-bookmarks-tagged-regexp]bmkp-bmenu-mark-menu6180,339508
(define-key bmkp-bmenu-mark-menu [mark-sep3] '("--")) ; --------------bmkp-bmenu-mark-menu6184,339746
(define-key bmkp-bmenu-mark-menu [bmkp-bmenu-mark-temporary-bookmarks]bmkp-bmenu-mark-menu6189,340033
(define-key bmkp-bmenu-mark-menu [bmkp-bmenu-mark-autonamed-bookmarks]bmkp-bmenu-mark-menu6192,340229
(define-key bmkp-bmenu-mark-menu [bmkp-bmenu-mark-autofile-bookmarks]bmkp-bmenu-mark-menu6195,340406
(define-key bmkp-bmenu-mark-menu [mark-sep2] '("--")) ; --------------bmkp-bmenu-mark-menu6199,340628
(define-key bmkp-bmenu-mark-menu [bmkp-bmenu-unmark-all]bmkp-bmenu-mark-menu6200,340699
(define-key bmkp-bmenu-mark-menu [bmkp-bmenu-mark-all]bmkp-bmenu-mark-menu6203,340900
(define-key bmkp-bmenu-mark-menu [bmkp-bmenu-toggle-marks]bmkp-bmenu-mark-menu6205,341045
(define-key bmkp-bmenu-mark-menu [bmkp-bmenu-regexp-mark]bmkp-bmenu-mark-menu6208,341238
(define-key bmkp-bmenu-mark-menu [mark-sep4] '("--")) ; --------------bmkp-bmenu-mark-menu6212,341423
(define-key bmkp-bmenu-mark-menu [bmkp-bmenu-mark-specific-file-bookmarks]bmkp-bmenu-mark-menu6213,341494
(define-key bmkp-bmenu-mark-menu [bmkp-bmenu-mark-specific-buffer-bookmarks]bmkp-bmenu-mark-menu6216,341697
(defvar bmkp-bmenu-mark-types-menu (make-sparse-keymap "Bookmarks of Type")bmkp-bmenu-mark-types-menu6222,341981
(define-key bmkp-bmenu-mark-menu [type] (cons "Bookmarks of Type" bmkp-bmenu-mark-types-menu))bmkp-bmenu-mark-menu6224,342131
(define-key bmkp-bmenu-mark-types-menu [bmkp-bmenu-mark-w3m-bookmarks]bmkp-bmenu-mark-types-menu6226,342227
(define-key bmkp-bmenu-mark-types-menu [bmkp-bmenu-mark-url-bookmarks]bmkp-bmenu-mark-types-menu6228,342386
(define-key bmkp-bmenu-mark-types-menu [bmkp-bmenu-mark-variable-list-bookmarks]bmkp-bmenu-mark-types-menu6230,342537
(define-key bmkp-bmenu-mark-types-menu [bmkp-bmenu-mark-man-bookmarks]bmkp-bmenu-mark-types-menu6233,342736
(define-key bmkp-bmenu-mark-types-menu [bmkp-bmenu-mark-snippet-bookmarks]bmkp-bmenu-mark-types-menu6236,342911
(define-key bmkp-bmenu-mark-types-menu [bmkp-bmenu-mark-region-bookmarks]bmkp-bmenu-mark-types-menu6239,343082
(define-key bmkp-bmenu-mark-types-menu [bmkp-bmenu-mark-orphaned-local-file-bookmarks]bmkp-bmenu-mark-types-menu6242,343263
(define-key bmkp-bmenu-mark-types-menu [bmkp-bmenu-mark-non-file-bookmarks]bmkp-bmenu-mark-types-menu6245,343503
(define-key bmkp-bmenu-mark-types-menu [bmkp-bmenu-mark-image-bookmarks]bmkp-bmenu-mark-types-menu6248,343688
(define-key bmkp-bmenu-mark-types-menu [bmkp-bmenu-mark-icicles-search-hits-bookmarks]bmkp-bmenu-mark-types-menu6250,343852
(define-key bmkp-bmenu-mark-types-menu [bmkp-bmenu-mark-info-bookmarks]bmkp-bmenu-mark-types-menu6253,344068
(define-key bmkp-bmenu-mark-types-menu [bmkp-bmenu-mark-gnus-bookmarks]bmkp-bmenu-mark-types-menu6255,344228
(define-key bmkp-bmenu-mark-types-menu [bmkp-bmenu-mark-file-bookmarks]bmkp-bmenu-mark-types-menu6257,344391
(define-key bmkp-bmenu-mark-types-menu [bmkp-bmenu-mark-dired-bookmarks]bmkp-bmenu-mark-types-menu6259,344546
(define-key bmkp-bmenu-mark-types-menu [bmkp-bmenu-mark-desktop-bookmarks]bmkp-bmenu-mark-types-menu6261,344712
(define-key bmkp-bmenu-mark-types-menu [bmkp-bmenu-mark-bookmark-list-bookmarks]bmkp-bmenu-mark-types-menu6264,344883
(define-key bmkp-bmenu-mark-types-menu [bmkp-bmenu-mark-bookmark-file-bookmarks]bmkp-bmenu-mark-types-menu6267,345082
(define-key bmkp-bmenu-delete-menu [bookmark-bmenu-execute-deletions]bmkp-bmenu-delete-menu6273,345354
(define-key bmkp-bmenu-delete-menu [bmkp-bmenu-delete-marked]bmkp-bmenu-delete-menu6276,345552
(define-key bmkp-bmenu-delete-menu [bmkp-delete-all-temporary-bookmarks]bmkp-bmenu-delete-menu6279,345752
(define-key-after menu-bar-edit-menu [separator-snippet] '("--")  'mark-whole-buffer)menu-bar-edit-menu6287,346088
(define-key-after menu-bar-edit-menu [bmkp-set-snippet-bookmark]menu-bar-edit-menu6288,346174
(define-key-after menu-bar-edit-menu [bmkp-snippet-to-kill-ring]menu-bar-edit-menu6292,346431
(defvar bmkp-bmenu-line-overlay nilbmkp-bmenu-line-overlay6303,346788
(define-key bookmark-bmenu-mode-map [down-mouse-3] 'bmkp-bmenu-mouse-3-menu)bookmark-bmenu-mode-map6305,346898
(define-key bookmark-bmenu-mode-map [mouse-3]      'ignore)bookmark-bmenu-mode-map6306,346975
(defun bmkp-bmenu-mouse-3-menu (event)bmkp-bmenu-mouse-3-menu6309,347099

elpa/bookmark+-20161027.926/bookmark+-chg.el,0

elpa/bookmark+-20161027.926/bookmark+-doc.el,0

elpa/bookmark+-20161027.926/bookmark+-key.el,33844
(defun bmkp-set-map-prefix-key (pref-keys-option keys)bmkp-set-map-prefix-key112,4072
(defcustom bmkp-bookmark-map-prefix-keys (list (kbd "C-x p"))bmkp-bookmark-map-prefix-keys125,4695
(defcustom bmkp-jump-map-prefix-keys (list (kbd "C-x j"))bmkp-jump-map-prefix-keys137,5240
(defcustom bmkp-jump-other-window-map-prefix-keys (list (kbd "C-x 4 j"))bmkp-jump-other-window-map-prefix-keys150,5783
(defalias 'bmkp-bookmark-data-from-record 'bookmark-get-bookmark-record)bmkp-bookmark-data-from-record177,6961
(defalias 'bmkp-bookmark-name-from-record 'bookmark-name-from-full-record)bmkp-bookmark-name-from-record178,7034
(defvar bmkp-bmenu-menubar-menu)        ; In `bookmark+-bmu.el'.bmkp-bmenu-menubar-menu182,7138
(defvar bmkp-bmenu-toggle-menu)         ; In `bookmark+-bmu.el'.bmkp-bmenu-toggle-menu183,7203
(defvar bmkp-crosshairs-flag)           ; In `bookmark+-1.el'.bmkp-crosshairs-flag184,7268
(defvar bmkp-prompt-for-tags-flag)      ; In `bookmark+-1.el'.bmkp-prompt-for-tags-flag185,7331
(defvar bmkp-save-new-location-flag)    ; In `bookmark+-1.el'.bmkp-save-new-location-flag186,7394
(defvar diredp-bookmark-menu)           ; In `dired+.el'.diredp-bookmark-menu187,7457
(defvar gnus-summary-mode-map)          ; In `gnus-sum.el'.gnus-summary-mode-map188,7515
(defvar Info-mode-map)                  ; In `info.el'.Info-mode-map189,7575
(defvar Info-mode-menu)                 ; In `info.el'.Info-mode-menu190,7631
(defvar Man-mode-map)                   ; In `man.el'.Man-mode-map191,7687
(defvar mouse-wheel-down-event)         ; In `mwheel.el'.mouse-wheel-down-event192,7742
(defvar mouse-wheel-up-event)           ; In `mwheel.el'.mouse-wheel-up-event193,7800
(defvar w3m-minor-mode-map)             ; In `w3m.el'.w3m-minor-mode-map194,7858
(defvar w3m-mode-map)                   ; In `w3m.el'.w3m-mode-map195,7913
(defvar woman-menu)                     ; In `woman.el'.woman-menu196,7968
(defvar woman-mode-map)                 ; In `woman.el'.woman-mode-map197,8025
(define-key ctl-x-map "rK" 'bmkp-set-desktop-bookmark)        ; `C-x r K' (also `C-x p K', `C-x p c K')ctl-x-map206,8339
(define-key bookmark-map "0"      'bmkp-empty-file)                                   ; `C-x p 0'bookmark-map208,8444
(define-key bookmark-map "B"      'bmkp-choose-navlist-from-bookmark-list)            ; `C-x p B'bookmark-map209,8542
(define-key bookmark-map "E"      'bmkp-edit-bookmark-record)                         ; `C-x p E'bookmark-map211,8715
(define-key bookmark-map "I"      'bookmark-insert-location)                          ; `C-x p I'bookmark-map213,8882
(define-key bookmark-map "K"      'bmkp-set-desktop-bookmark) ; `C-x p K' (also `C-x r K', `C-x p c K')bookmark-map214,8980
(define-key bookmark-map "L"      'bmkp-switch-bookmark-file-create)                  ; `C-x p L'bookmark-map215,9084
(define-key bookmark-map "m"      'bmkp-bookmark-set-confirm-overwrite)               ; `C-x p m'bookmark-map216,9182
(define-key bookmark-map "N"      'bmkp-navlist-bmenu-list)                           ; `C-x p N'bookmark-map217,9280
(define-key bookmark-map "o"      'bookmark-jump-other-window)           ; `C-x p o' (also `C-x 4 j j')bookmark-map218,9378
(define-key bookmark-map "q"      'bookmark-jump-other-window)           ; `C-x p q' (also `C-x 4 j j')bookmark-map219,9482
(define-key bookmark-map "r"      'bmkp-edit-bookmark-name-and-location)              ; `C-x p r'bookmark-map220,9586
(define-key bookmark-map "\M-w"   'bmkp-set-snippet-bookmark)        ; `C-x p M-w' (also `C-x p c M-w')bookmark-map221,9684
(define-key bookmark-map "x"      'bmkp-toggle-autotemp-on-set)                       ; `C-x p x'bookmark-map222,9788
(define-key bookmark-map "y"      'bmkp-set-bookmark-file-bookmark)                   ; `C-x p y'bookmark-map223,9886
(define-key bookmark-map ","      'bmkp-this-file/buffer-bmenu-list)                  ; `C-x p ,'bookmark-map231,10606
(define-key bookmark-map "?"      'bmkp-describe-bookmark)                            ; `C-x p ?'bookmark-map232,10704
(define-key bookmark-map ":"      'bmkp-choose-navlist-of-type)                       ; `C-x p :'bookmark-map233,10802
(define-key bookmark-map "\r"     'bmkp-toggle-autonamed-bookmark-set/delete)         ; `C-x p RET'bookmark-map234,10900
(define-key bookmark-map [delete] 'bmkp-delete-bookmarks)                             ; `C-x p delete'bookmark-map235,11000
(define-key bookmark-map [deletechar] 'bmkp-delete-bookmarks)                      ; `C-x p deletechar'bookmark-map236,11103
(define-key bookmark-map [kp-delete] 'bmkp-delete-bookmarks)                       ; `C-x p kp-delete'bookmark-map238,11224
(defvar bmkp-set-map nil "Keymap containing bindings for bookmark set commands.")bmkp-set-map285,14577
(define-prefix-command 'bmkp-set-map)bmkp-set-map287,14660
(define-key bookmark-map "c"  bmkp-set-map)                                    ; `C-x p c' for createbookmark-map288,14698
(define-key bmkp-set-map "a"    'bmkp-autofile-set)                            ; `C-x p c a'bmkp-set-map290,14801
(define-key bmkp-set-map "f"    'bmkp-file-target-set)                         ; `C-x p c f'bmkp-set-map291,14894
(define-key bmkp-set-map "F"    'bmkp-make-function-bookmark)                  ; `C-x p c F'bmkp-set-map292,14987
(define-key bmkp-set-map "K"    'bmkp-set-desktop-bookmark)                    ; `C-x p c K'bmkp-set-map293,15080
(define-key bmkp-set-map "\C-k" 'bmkp-wrap-bookmark-with-last-kbd-macro)       ; `C-x p C-k'bmkp-set-map294,15173
(define-key bmkp-set-map "m"    'bmkp-bookmark-set-confirm-overwrite)          ; `C-x p c m'bmkp-set-map295,15266
(define-key bmkp-set-map "M"    'bookmark-set)                                 ; `C-x p c M'bmkp-set-map296,15359
(define-key bmkp-set-map "s"    'bmkp-set-sequence-bookmark)                   ; `C-x p c s'bmkp-set-map297,15452
(define-key bmkp-set-map "u"    'bmkp-url-target-set)                          ; `C-x p c u'bmkp-set-map298,15545
(define-key bmkp-set-map "\M-w" 'bmkp-set-snippet-bookmark)                    ; `C-x p c M-w'bmkp-set-map299,15638
(define-key bmkp-set-map "y"    'bmkp-set-bookmark-file-bookmark)              ; `C-x p c y'bmkp-set-map300,15733
(define-key bmkp-set-map "\r"   'bmkp-toggle-autonamed-bookmark-set/delete)    ; `C-x p c RET'bmkp-set-map301,15826
(defvar bmkp-tags-map nil "Keymap containing bindings for bookmark tag commands.")bmkp-tags-map336,17619
(define-prefix-command 'bmkp-tags-map)bmkp-tags-map338,17703
(define-key bookmark-map "t"  bmkp-tags-map)                                      ; `C-x p t' for tagsbookmark-map339,17742
(define-key bmkp-tags-map "0"    'bmkp-remove-all-tags)                           ; `C-x p t 0'bmkp-tags-map341,17846
(define-key bmkp-tags-map "+"    nil) ; For Emacs 20bmkp-tags-map342,17942
(define-key bmkp-tags-map "+b"   'bmkp-add-tags)                                  ; `C-x p t + b'bmkp-tags-map343,17995
(define-key bmkp-tags-map "-b"   'bmkp-remove-tags)                               ; `C-x p t - b'bmkp-tags-map344,18093
(define-key bmkp-tags-map "+a"   'bmkp-tag-a-file)                                ; `C-x p t + a'bmkp-tags-map345,18191
(define-key bmkp-tags-map "-a"   'bmkp-untag-a-file)                              ; `C-x p t - a'bmkp-tags-map346,18289
(define-key bmkp-tags-map "c"    'bmkp-copy-tags)                                 ; `C-x p t c'bmkp-tags-map347,18387
(define-key bmkp-tags-map "d"    'bmkp-remove-tags-from-all)                      ; `C-x p t d'bmkp-tags-map348,18483
(define-key bmkp-tags-map "e"    'bmkp-edit-tags)                                 ; `C-x p t e'bmkp-tags-map349,18579
(define-key bmkp-tags-map "l"    'bmkp-list-all-tags)                             ; `C-x p t l'bmkp-tags-map350,18675
(define-key bmkp-tags-map "p"    'bmkp-paste-add-tags)                            ; `C-x p t p'bmkp-tags-map351,18771
(define-key bmkp-tags-map "q"    'bmkp-paste-replace-tags)                        ; `C-x p t q'bmkp-tags-map352,18867
(define-key bmkp-tags-map "r"    'bmkp-rename-tag)                                ; `C-x p t r'bmkp-tags-map353,18963
(define-key bmkp-tags-map "v"    'bmkp-set-tag-value)                             ; `C-x p t v'bmkp-tags-map354,19059
(define-key bmkp-tags-map "V"    'bmkp-set-tag-value-for-navlist)                 ; `C-x p t V'bmkp-tags-map355,19155
(define-key bmkp-tags-map "\M-w" 'bmkp-copy-tags)                                 ; `C-x p t M-w'bmkp-tags-map356,19251
(define-key bmkp-tags-map "\C-y" 'bmkp-paste-add-tags)                            ; `C-x p t C-y'bmkp-tags-map357,19349
(defvar bmkp-jump-map nil "Keymap containing bindings for bookmark jump commands.")bmkp-jump-map362,19534
(defvar bmkp-jump-other-window-map nilbmkp-jump-other-window-map364,19619
(define-prefix-command 'bmkp-jump-map)bmkp-jump-map367,19732
(define-prefix-command 'bmkp-jump-other-window-map)bmkp-jump-other-window-map368,19771
(define-key bookmark-bmenu-mode-map "j"  nil) ; For Emacs 20bookmark-bmenu-mode-map371,19928
(define-key bookmark-bmenu-mode-map "J"  nil) ; For Emacs 20bookmark-bmenu-mode-map372,19989
(define-key bookmark-bmenu-mode-map "J"  bmkp-jump-map)bookmark-bmenu-mode-map373,20050
(define-key bookmark-bmenu-mode-map "j"  bmkp-jump-other-window-map)bookmark-bmenu-mode-map374,20106
(define-key bookmark-bmenu-mode-map "j>" 'bmkp-bmenu-jump-to-marked)  ; `j >'bookmark-bmenu-mode-map375,20175
(define-key bmkp-jump-map              "."    nil) ; For Emacs 20bmkp-jump-map377,20254
(define-key bmkp-jump-other-window-map "."    nil) ; For Emacs 20bmkp-jump-other-window-map378,20320
(define-key bmkp-jump-map              ".d"   'bmkp-dired-this-dir-jump)                 ; `C-x j . d'bmkp-jump-map379,20386
(define-key bmkp-jump-other-window-map ".d"   'bmkp-dired-this-dir-jump-other-window)  ; `C-x 4 j . d'bmkp-jump-other-window-map380,20489
(define-key bmkp-jump-map              ".f"   'bmkp-file-this-dir-jump)                  ; `C-x j . f'bmkp-jump-map381,20592
(define-key bmkp-jump-other-window-map ".f"   'bmkp-file-this-dir-jump-other-window)   ; `C-x 4 j . f'bmkp-jump-other-window-map382,20695
(define-key bmkp-jump-map              ","    nil) ; For Emacs 20bmkp-jump-map384,20799
(define-key bmkp-jump-other-window-map ","    nil) ; For Emacs 20bmkp-jump-other-window-map385,20865
(define-key bmkp-jump-map              ",,"   'bmkp-this-buffer-jump)                    ; `C-x j , ,'bmkp-jump-map386,20931
(define-key bmkp-jump-other-window-map ",,"   'bmkp-this-buffer-jump-other-window)     ; `C-x 4 j , ,'bmkp-jump-other-window-map387,21034
(define-key bmkp-jump-map              ",#"   'bmkp-autonamed-this-buffer-jump)          ; `C-x j , #'bmkp-jump-map388,21137
(define-key bmkp-jump-other-window-map ",#"bmkp-jump-other-window-map389,21240
(define-key bmkp-jump-map              "#"    'bmkp-autonamed-jump)                        ; `C-x j #'bmkp-jump-map392,21388
(define-key bmkp-jump-other-window-map "#"    'bmkp-autonamed-jump-other-window)         ; `C-x 4 j #'bmkp-jump-other-window-map393,21491
(define-key bmkp-jump-map              "="    nil) ; For Emacs 20bmkp-jump-map395,21595
(define-key bmkp-jump-other-window-map "="    nil) ; For Emacs 20bmkp-jump-other-window-map396,21661
(define-key bmkp-jump-map              "=b"   'bmkp-specific-buffers-jump)                ; `C-x j = b'bmkp-jump-map397,21727
(define-key bmkp-jump-other-window-map "=b"   'bmkp-specific-buffers-jump-other-window) ; `C-x 4 j = b'bmkp-jump-other-window-map398,21831
(define-key bmkp-jump-map              "=f"   'bmkp-specific-files-jump)                  ; `C-x j = f'bmkp-jump-map399,21935
(define-key bmkp-jump-other-window-map "=f"   'bmkp-specific-files-jump-other-window)   ; `C-x 4 j = f'bmkp-jump-other-window-map400,22039
(define-key bmkp-jump-map              "a"    'bmkp-autofile-jump)                          ; `C-x j a'bmkp-jump-map402,22144
(define-key bmkp-jump-other-window-map "a"    'bmkp-autofile-jump-other-window)           ; `C-x 4 j a'bmkp-jump-other-window-map403,22248
(define-key bmkp-jump-map              "b"    'bmkp-non-file-jump)                          ; `C-x j b'bmkp-jump-map404,22352
(define-key bmkp-jump-other-window-map "b"    'bmkp-non-file-jump-other-window)           ; `C-x 4 j b'bmkp-jump-other-window-map405,22456
(define-key bmkp-jump-map              "B"    'bmkp-bookmark-list-jump)                     ; `C-x j B'bmkp-jump-map406,22560
(define-key bmkp-jump-other-window-map "B"    'bmkp-bookmark-list-jump)     ; SAME COMMAND: `C-x 4 j B'bmkp-jump-other-window-map407,22664
(define-key bmkp-jump-map              "d"    'bmkp-dired-jump)                             ; `C-x j d'bmkp-jump-map408,22768
(define-key bmkp-jump-other-window-map "d"    'bmkp-dired-jump-other-window)              ; `C-x 4 j d'bmkp-jump-other-window-map409,22872
(define-key bmkp-jump-map              "f"    'bmkp-file-jump)                              ; `C-x j f'bmkp-jump-map410,22976
(define-key bmkp-jump-other-window-map "f"    'bmkp-file-jump-other-window)               ; `C-x 4 j f'bmkp-jump-other-window-map411,23080
(define-key bmkp-jump-map              "\C-f" 'bmkp-find-file)                            ; `C-x j C-f'bmkp-jump-map412,23184
(define-key bmkp-jump-other-window-map "\C-f" 'bmkp-find-file-other-window)             ; `C-x 4 j C-f'bmkp-jump-other-window-map413,23288
(define-key bmkp-jump-map              "g"    'bmkp-gnus-jump)                              ; `C-x j g'bmkp-jump-map414,23392
(define-key bmkp-jump-other-window-map "g"    'bmkp-gnus-jump-other-window)               ; `C-x 4 j g'bmkp-jump-other-window-map415,23496
(define-key bmkp-jump-map              "h"    'bmkp-lighted-jump)                           ; `C-x j h'bmkp-jump-map416,23600
(define-key bmkp-jump-other-window-map "h"    'bmkp-lighted-jump-other-window)            ; `C-x 4 j h'bmkp-jump-other-window-map417,23704
(define-key bmkp-jump-map              "i"    'bmkp-info-jump)                              ; `C-x j i'bmkp-jump-map418,23808
(define-key bmkp-jump-other-window-map "i"    'bmkp-info-jump-other-window)               ; `C-x 4 j i'bmkp-jump-other-window-map419,23912
(define-key bmkp-jump-map              "\M-i" 'bmkp-image-jump)                           ; `C-x j M-i'bmkp-jump-map420,24016
(define-key bmkp-jump-other-window-map "\M-i" 'bmkp-image-jump-other-window)            ; `C-x 4 j M-i'bmkp-jump-other-window-map421,24120
(define-key bmkp-jump-map              "j"    'bookmark-jump)                               ; `C-x j j'bmkp-jump-map422,24224
(define-key bmkp-jump-other-window-map "j"    'bookmark-jump-other-window)                ; `C-x 4 j j'bmkp-jump-other-window-map425,24379
(define-key bmkp-jump-map              "K"    'bmkp-desktop-jump)                           ; `C-x j K'bmkp-jump-map429,24596
(define-key bmkp-jump-other-window-map "K"    'bmkp-desktop-jump)           ; SAME COMMAND: `C-x 4 j K'bmkp-jump-other-window-map430,24700
(define-key bmkp-jump-map              "l"    'bmkp-local-file-jump)                        ; `C-x j l'bmkp-jump-map431,24804
(define-key bmkp-jump-other-window-map "l"    'bmkp-local-file-jump-other-window)         ; `C-x 4 j l'bmkp-jump-other-window-map432,24908
(define-key bmkp-jump-map              "m"    'bmkp-man-jump)                               ; `C-x j m'bmkp-jump-map433,25012
(define-key bmkp-jump-other-window-map "m"    'bmkp-man-jump-other-window)                ; `C-x 4 j m'bmkp-jump-other-window-map434,25116
(define-key bmkp-jump-map              "n"    'bmkp-remote-file-jump)         ; `C-x j n' ("_n_etwork")bmkp-jump-map435,25220
(define-key bmkp-jump-other-window-map "n"    'bmkp-remote-file-jump-other-window)        ; `C-x 4 j n'bmkp-jump-other-window-map436,25324
(define-key bmkp-jump-map              "N"    'bmkp-jump-in-navlist)                        ; `C-x j N'bmkp-jump-map437,25428
(define-key bmkp-jump-other-window-map "N"    'bmkp-jump-in-navlist-other-window)         ; `C-x 4 j N'bmkp-jump-other-window-map438,25532
(define-key bmkp-jump-map              "r"    'bmkp-region-jump)                            ; `C-x j r'bmkp-jump-map439,25636
(define-key bmkp-jump-other-window-map "r"    'bmkp-region-jump-other-window)             ; `C-x 4 j r'bmkp-jump-other-window-map440,25740
(define-key bmkp-jump-other-window-map "R"bmkp-jump-other-window-map441,25844
(define-key bmkp-jump-map              "t"    nil) ; For Emacs 20bmkp-jump-map444,25992
(define-key bmkp-jump-other-window-map "t"    nil) ; For Emacs 20bmkp-jump-other-window-map445,26058
(define-key bmkp-jump-map              "t*"   'bmkp-all-tags-jump)                        ; `C-x j t *'bmkp-jump-map446,26124
(define-key bmkp-jump-other-window-map "t*"   'bmkp-all-tags-jump-other-window)         ; `C-x 4 j t *'bmkp-jump-other-window-map447,26228
(define-key bmkp-jump-map              "t+"   'bmkp-some-tags-jump)                       ; `C-x j t +'bmkp-jump-map448,26332
(define-key bmkp-jump-other-window-map "t+"   'bmkp-some-tags-jump-other-window)        ; `C-x 4 j t +'bmkp-jump-other-window-map449,26436
(define-key bmkp-jump-map              "t%"   nil) ; For Emacs 20bmkp-jump-map451,26541
(define-key bmkp-jump-other-window-map "t%"   nil) ; For Emacs 20bmkp-jump-other-window-map452,26607
(define-key bmkp-jump-map              "t%*"  'bmkp-all-tags-regexp-jump)               ; `C-x j t % *'bmkp-jump-map453,26673
(define-key bmkp-jump-other-window-map "t%*"bmkp-jump-other-window-map454,26777
(define-key bmkp-jump-map              "t%+"  'bmkp-some-tags-regexp-jump)              ; `C-x j t % +'bmkp-jump-map456,26926
(define-key bmkp-jump-other-window-map "t%+"bmkp-jump-other-window-map457,27030
(define-key bmkp-jump-map              "t."   nil) ; For Emacs 20bmkp-jump-map460,27180
(define-key bmkp-jump-other-window-map "t."   nil) ; For Emacs 20bmkp-jump-other-window-map461,27246
(define-key bmkp-jump-map              "t.*" 'bmkp-file-this-dir-all-tags-jump)         ; `C-x j t . *'bmkp-jump-map462,27312
(define-key bmkp-jump-other-window-map "t.*"bmkp-jump-other-window-map463,27416
(define-key bmkp-jump-map              "t.+" 'bmkp-file-this-dir-some-tags-jump)        ; `C-x j t . +'bmkp-jump-map465,27565
(define-key bmkp-jump-other-window-map "t.+"bmkp-jump-other-window-map466,27669
(define-key bmkp-jump-map              "t.%" nil) ; For Emacs 20bmkp-jump-map469,27819
(define-key bmkp-jump-other-window-map "t.%" nil) ; For Emacs 20bmkp-jump-other-window-map470,27884
(define-key bmkp-jump-map              "t.%*"bmkp-jump-map471,27949
(define-key bmkp-jump-other-window-map "t.%*"bmkp-jump-other-window-map473,28099
(define-key bmkp-jump-map              "t.%+"bmkp-jump-map475,28249
(define-key bmkp-jump-other-window-map "t.%+"bmkp-jump-other-window-map477,28399
(define-key bmkp-jump-map              "ta"   nil) ; For Emacs 20bmkp-jump-map481,28551
(define-key bmkp-jump-other-window-map "ta"   nil) ; For Emacs 20bmkp-jump-other-window-map482,28617
(define-key bmkp-jump-map              "ta*"  'bmkp-autofile-all-tags-jump)             ; `C-x j t a *'bmkp-jump-map483,28683
(define-key bmkp-jump-other-window-map "ta*"bmkp-jump-other-window-map484,28787
(define-key bmkp-jump-map              "ta+"  'bmkp-autofile-some-tags-jump)            ; `C-x j t a +'bmkp-jump-map486,28936
(define-key bmkp-jump-other-window-map "ta+"bmkp-jump-other-window-map487,29040
(define-key bmkp-jump-map              "ta%"  nil) ; For Emacs 20bmkp-jump-map490,29190
(define-key bmkp-jump-other-window-map "ta%"  nil) ; For Emacs 20bmkp-jump-other-window-map491,29256
(define-key bmkp-jump-map              "ta%*" 'bmkp-autofile-all-tags-regexp-jump)    ; `C-x j t a % *'bmkp-jump-map492,29322
(define-key bmkp-jump-other-window-map "ta%*"bmkp-jump-other-window-map493,29426
(define-key bmkp-jump-map              "ta%+" 'bmkp-autofile-some-tags-regexp-jump)   ; `C-x j t a % +'bmkp-jump-map495,29576
(define-key bmkp-jump-other-window-map "ta%+"bmkp-jump-other-window-map496,29680
(define-key bmkp-jump-map              "tf"   nil) ; For Emacs 20bmkp-jump-map499,29831
(define-key bmkp-jump-other-window-map "tf"   nil) ; For Emacs 20bmkp-jump-other-window-map500,29897
(define-key bmkp-jump-map              "tf*"  'bmkp-file-all-tags-jump)                 ; `C-x j t f *'bmkp-jump-map501,29963
(define-key bmkp-jump-other-window-map "tf*"  'bmkp-file-all-tags-jump-other-window)  ; `C-x 4 j t f *'bmkp-jump-other-window-map502,30067
(define-key bmkp-jump-map              "tf+"  'bmkp-file-some-tags-jump)                ; `C-x j t f +'bmkp-jump-map503,30171
(define-key bmkp-jump-other-window-map "tf+"  'bmkp-file-some-tags-jump-other-window) ; `C-x 4 j t f +'bmkp-jump-other-window-map504,30275
(define-key bmkp-jump-map              "tf%"  nil) ; For Emacs 20bmkp-jump-map506,30380
(define-key bmkp-jump-other-window-map "tf%"  nil) ; For Emacs 20bmkp-jump-other-window-map507,30446
(define-key bmkp-jump-map              "tf%*" 'bmkp-file-all-tags-regexp-jump)        ; `C-x j t f % *'bmkp-jump-map508,30512
(define-key bmkp-jump-other-window-map "tf%*"bmkp-jump-other-window-map509,30616
(define-key bmkp-jump-map              "tf%+" 'bmkp-file-some-tags-regexp-jump)       ; `C-x j t f % +'bmkp-jump-map511,30766
(define-key bmkp-jump-other-window-map "tf%+"bmkp-jump-other-window-map512,30870
(define-key bmkp-jump-map              "u"    'bmkp-url-jump)                               ; `C-x j u'bmkp-jump-map530,32194
(define-key bmkp-jump-other-window-map "u"    'bmkp-url-jump-other-window)                ; `C-x 4 j u'bmkp-jump-other-window-map531,32298
(define-key bmkp-jump-map              "v"    'bmkp-variable-list-jump)                     ; `C-x j v'bmkp-jump-map532,32402
(define-key bmkp-jump-map              "w"    'bmkp-w3m-jump)                               ; `C-x j w'bmkp-jump-map533,32506
(define-key bmkp-jump-other-window-map "w"    'bmkp-w3m-jump-other-window)                ; `C-x 4 j w'bmkp-jump-other-window-map534,32610
(define-key bmkp-jump-map              "\M-w" 'bmkp-snippet-to-kill-ring)                 ; `C-x j M-w'bmkp-jump-map535,32714
(define-key bmkp-jump-other-window-map "\M-w" 'bmkp-snippet-to-kill-ring)     ; SAME CMD: `C-x 4 j M-w'bmkp-jump-other-window-map536,32818
(define-key bmkp-jump-map              "x"    'bmkp-temporary-jump)                         ; `C-x j x'bmkp-jump-map537,32922
(define-key bmkp-jump-other-window-map "x"    'bmkp-temporary-jump-other-window)          ; `C-x 4 j x'bmkp-jump-other-window-map538,33026
(define-key bmkp-jump-map              "y"    'bmkp-bookmark-file-jump)                     ; `C-x j y'bmkp-jump-map539,33130
(define-key bmkp-jump-map              ":"    'bmkp-jump-to-type)                           ; `C-x j :'bmkp-jump-map540,33234
(define-key bmkp-jump-other-window-map ":"    'bmkp-jump-to-type-other-window)            ; `C-x 4 j :'bmkp-jump-other-window-map541,33338
(define-key-after menu-bar-bookmark-map [separator-edit] '("--") ;-------------------------------------menu-bar-bookmark-map612,37476
(define-key menu-bar-bookmark-map [rename] nil)menu-bar-bookmark-map615,37693
(define-key-after menu-bar-bookmark-map [bmkp-edit-bookmark-name-and-location]menu-bar-bookmark-map617,37742
(define-key-after menu-bar-bookmark-map [bmkp-edit-bookmark-record]menu-bar-bookmark-map621,37971
(define-key-after menu-bar-bookmark-map [separator-show] '("--") ;-------------------------------------menu-bar-bookmark-map626,38218
(define-key-after menu-bar-bookmark-map [edit]menu-bar-bookmark-map628,38368
(define-key-after menu-bar-bookmark-map [bmkp-this-file/buffer-bmenu-list]menu-bar-bookmark-map637,38940
(define-key-after menu-bar-bookmark-map [bmkp-navlist-bmenu-list]menu-bar-bookmark-map641,39204
(define-key-after menu-bar-bookmark-map [separator-2] '("--") ;-------------------------------------menu-bar-bookmark-map646,39447
(define-key-after menu-bar-bookmark-map [bmkp-choose-navlist-of-type]menu-bar-bookmark-map648,39592
(define-key-after menu-bar-bookmark-map [bmkp-choose-navlist-from-bookmark-list]menu-bar-bookmark-map652,39830
(define-key-after menu-bar-bookmark-map [bmkp-list-defuns-in-commands-file]menu-bar-bookmark-map656,40108
(define-key-after menu-bar-bookmark-map [insert]menu-bar-bookmark-map662,40471
(define-key-after menu-bar-bookmark-map [locate]menu-bar-bookmark-map665,40655
(define-key-after menu-bar-bookmark-map [separator-3] '("--") ;-------------------------------------menu-bar-bookmark-map670,40869
(define-key-after menu-bar-bookmark-map [save]menu-bar-bookmark-map672,40997
(define-key-after menu-bar-bookmark-map [write]menu-bar-bookmark-map675,41147
(define-key-after menu-bar-bookmark-map [bmkp-switch-bookmark-file-create]menu-bar-bookmark-map679,41312
(define-key-after menu-bar-bookmark-map [load]menu-bar-bookmark-map683,41564
(define-key-after menu-bar-bookmark-map [bmkp-empty-file]menu-bar-bookmark-map687,41765
(defvar bmkp-delete-menu (make-sparse-keymap)bmkp-delete-menu778,47126
(define-key menu-bar-bookmark-map [delete-menu] (cons "Delete" bmkp-delete-menu))menu-bar-bookmark-map780,47225
(define-key bmkp-delete-menu [bmkp-delete-all-temporary-bookmarks]bmkp-delete-menu782,47308
(define-key bmkp-delete-menu [bmkp-delete-all-autonamed-for-this-buffer]bmkp-delete-menu797,48355
(define-key bmkp-delete-menu [bmkp-toggle-autoname-bookmark-delete]bmkp-delete-menu801,48597
(define-key bmkp-delete-menu [bmkp-delete-bookmarks]bmkp-delete-menu810,49230
(define-key bmkp-delete-menu [delete]bmkp-delete-menu813,49435
(define-key bmkp-delete-menu [bmkp-purge-notags-autofiles]bmkp-delete-menu815,49573
(define-key menu-bar-bookmark-map [delete] nil)menu-bar-bookmark-map820,49841
(defvar bmkp-set-bookmark-menu (make-sparse-keymap)bmkp-set-bookmark-menu824,49961
(define-key menu-bar-bookmark-map [set-bookmark] (cons "New/Update" bmkp-set-bookmark-menu))menu-bar-bookmark-map826,50070
(defun bmkp-menu-bar-set-bookmark ()bmkp-menu-bar-set-bookmark828,50164
(define-key bmkp-set-bookmark-menu [bmkp-make-function-bookmark]bmkp-set-bookmark-menu833,50326
(define-key bmkp-set-bookmark-menu [bmkp-toggle-autoname-bookmark-set]bmkp-set-bookmark-menu836,50535
(define-key bmkp-set-bookmark-menu [bmkp-set-bookmark-file-bookmark]bmkp-set-bookmark-menu841,50885
(define-key bmkp-set-bookmark-menu [bmkp-set-desktop-bookmark]bmkp-set-bookmark-menu844,51099
(define-key bmkp-set-bookmark-menu [bmkp-url-target-set]bmkp-set-bookmark-menu847,51274
(define-key bmkp-set-bookmark-menu [bmkp-file-target-set]bmkp-set-bookmark-menu850,51428
(define-key bmkp-set-bookmark-menu [bmkp-autofile-set]bmkp-set-bookmark-menu853,51604
(define-key bmkp-set-bookmark-menu [bmkp-menu-bar-set-bookmark]bmkp-set-bookmark-menu856,51783
(define-key menu-bar-bookmark-map [set] nil)menu-bar-bookmark-map862,52028
(define-key menu-bar-bookmark-map [options] (cons "Toggle" bmkp-bmenu-toggle-menu))menu-bar-bookmark-map866,52170
(defvar bmkp-tags-menu (make-sparse-keymap)bmkp-tags-menu871,52313
(define-key menu-bar-bookmark-map [tags] (cons "Tags" bmkp-tags-menu))menu-bar-bookmark-map873,52408
(define-key bmkp-tags-menu [bmkp-list-all-tags]bmkp-tags-menu875,52480
(define-key bmkp-tags-menu [bmkp-purge-notags-autofiles]bmkp-tags-menu877,52624
(define-key bmkp-tags-menu [bmkp-untag-a-file]bmkp-tags-menu880,52819
(define-key bmkp-tags-menu [bmkp-tag-a-file]bmkp-tags-menu883,52995
(define-key bmkp-tags-menu [tags-sep1] '("--")) ;----------------------------------------------bmkp-tags-menu887,53162
(define-key bmkp-tags-menu [bmkp-rename-tag]bmkp-tags-menu888,53258
(define-key bmkp-tags-menu [bmkp-set-tag-value]bmkp-tags-menu890,53389
(define-key bmkp-tags-menu [bmkp-remove-tags-from-all]bmkp-tags-menu892,53538
(define-key bmkp-tags-menu [bmkp-remove-tags]bmkp-tags-menu895,53718
(define-key bmkp-tags-menu [bmkp-add-tags]bmkp-tags-menu897,53864
(define-key bmkp-tags-menu [bmkp-paste-replace-tags]bmkp-tags-menu899,53996
(define-key bmkp-tags-menu [bmkp-paste-add-tags]bmkp-tags-menu902,54185
(define-key bmkp-tags-menu [bmkp-copy-tags]bmkp-tags-menu905,54368
(define-key bmkp-tags-menu [bmkp-edit-tags]bmkp-tags-menu908,54534
(defvar bmkp-jump-menu (make-sparse-keymap)bmkp-jump-menu914,54722
(define-key menu-bar-bookmark-map [jump] nil)menu-bar-bookmark-map917,54919
(define-key menu-bar-bookmark-map [jump-other] nil)menu-bar-bookmark-map918,54965
(define-key menu-bar-bookmark-map [bmkp-jump] (cons "Jump To" bmkp-jump-menu))menu-bar-bookmark-map919,55017
(define-key bmkp-bmenu-menubar-menu [jump] (cons "Jump To" bmkp-jump-menu))bmkp-bmenu-menubar-menu922,55195
(define-key bmkp-jump-menu [bmkp-temporary-jump-other-window]bmkp-jump-menu924,55272
(define-key bmkp-jump-menu [bmkp-autofile-jump-other-window]bmkp-jump-menu927,55439
(define-key bmkp-jump-menu [bmkp-autonamed-this-buffer-jump]bmkp-jump-menu930,55603
(define-key bmkp-jump-menu [bmkp-autonamed-jump-other-window]bmkp-jump-menu933,55800
(define-key bmkp-jump-menu [bmkp-specific-files-jump-other-window]bmkp-jump-menu936,55968
(define-key bmkp-jump-menu [bmkp-specific-buffers-jump-other-window]bmkp-jump-menu939,56163
(define-key bmkp-jump-menu [bmkp-this-buffer-jump]bmkp-jump-menu946,56638
(define-key bmkp-jump-menu [bmkp-jump-in-navlist-other-window]bmkp-jump-menu958,57284
(define-key bmkp-jump-menu [jump-sep0] '("--")) ;---------------------------------------------------bmkp-jump-menu962,57507
(define-key bmkp-jump-menu [bmkp-url-jump-other-window]bmkp-jump-menu966,57799
(define-key bmkp-jump-menu [bmkp-gnus-jump-other-window]bmkp-jump-menu971,58134
(define-key bmkp-jump-menu [bmkp-man-jump-other-window]bmkp-jump-menu976,58480
(define-key bmkp-jump-menu [bmkp-info-jump-other-window]bmkp-jump-menu981,58833
(define-key bmkp-jump-menu [bmkp-image-jump-other-window]bmkp-jump-menu986,59189
(define-key bmkp-jump-menu [bmkp-non-file-jump-other-window]bmkp-jump-menu991,59576
(define-key bmkp-jump-menu [bmkp-region-jump-other-window]bmkp-jump-menu997,59987
(define-key bmkp-jump-menu [bmkp-remote-file-jump-other-window]bmkp-jump-menu1003,60410
(define-key bmkp-jump-menu [bmkp-local-file-jump-other-window]bmkp-jump-menu1009,60837
(define-key bmkp-jump-menu [bmkp-file-this-dir-jump-other-window]bmkp-jump-menu1016,61307
(define-key bmkp-jump-menu [bmkp-file-jump-other-window]bmkp-jump-menu1022,61743
(define-key bmkp-jump-menu [bmkp-dired-this-dir-jump-other-window]bmkp-jump-menu1028,62191
(define-key bmkp-jump-menu [bmkp-dired-jump-other-window]bmkp-jump-menu1035,62670
(define-key bmkp-jump-menu [bmkp-variable-list-jump]bmkp-jump-menu1041,63072
(define-key bmkp-jump-menu [bmkp-bookmark-file-jump]bmkp-jump-menu1046,63447
(define-key bmkp-jump-menu [bmkp-bookmark-list-jump]bmkp-jump-menu1052,63826
(define-key bmkp-jump-menu [bmkp-desktop-jump]bmkp-jump-menu1057,64164
(define-key bmkp-jump-menu [bmkp-jump-to-type-other-window]bmkp-jump-menu1059,64293
(define-key bmkp-jump-menu [bookmark-jump-other-window]bmkp-jump-menu1063,64472
(define-key bmkp-jump-menu [bookmark-jump]bmkp-jump-menu1066,64658
(define-key bmkp-jump-menu [bmkp-bmenu-jump-to-marked]bmkp-jump-menu1069,64796
(defvar bmkp-jump-tags-menu (make-sparse-keymap)bmkp-jump-tags-menu1078,65198
(define-key bmkp-jump-menu [bmkp-tags] (cons "With Tags" bmkp-jump-tags-menu))bmkp-jump-menu1080,65315
(define-key bmkp-jump-tags-menu [bmkp-file-this-dir-all-tags-regexp-jump-other-window]bmkp-jump-tags-menu1081,65394
(define-key bmkp-jump-tags-menu [bmkp-file-this-dir-some-tags-regexp-jump-other-window]bmkp-jump-tags-menu1085,65682
(define-key bmkp-jump-tags-menu [bmkp-file-this-dir-all-tags-jump-other-window]bmkp-jump-tags-menu1089,65979
(define-key bmkp-jump-tags-menu [bmkp-file-this-dir-some-tags-jump-other-window]bmkp-jump-tags-menu1092,66253
(define-key bmkp-jump-tags-menu [jump-sep5] '("--")) ;----------------------------------------------bmkp-jump-tags-menu1096,66530
(define-key bmkp-jump-tags-menu [bmkp-file-all-tags-regexp-jump-other-window]bmkp-jump-tags-menu1097,66631
(define-key bmkp-jump-tags-menu [bmkp-file-some-tags-regexp-jump-other-window]bmkp-jump-tags-menu1100,66895
(define-key bmkp-jump-tags-menu [bmkp-file-all-tags-jump-other-window]bmkp-jump-tags-menu1103,67168
(define-key bmkp-jump-tags-menu [bmkp-file-some-tags-jump-other-window]bmkp-jump-tags-menu1106,67407
(define-key bmkp-jump-tags-menu [jump-sep4] '("--")) ;----------------------------------------------bmkp-jump-tags-menu1110,67649
(define-key bmkp-jump-tags-menu [bmkp-autofile-all-tags-regexp-jump-other-window]bmkp-jump-tags-menu1111,67750
(define-key bmkp-jump-tags-menu [bmkp-autofile-some-tags-regexp-jump-other-window]bmkp-jump-tags-menu1115,68028
(define-key bmkp-jump-tags-menu [bmkp-autofile-all-tags-jump-other-window]bmkp-jump-tags-menu1119,68315
(define-key bmkp-jump-tags-menu [bmkp-autofile-some-tags-jump-other-window]bmkp-jump-tags-menu1123,68568
(define-key bmkp-jump-tags-menu [jump-sep2] '("--")) ;----------------------------------------------bmkp-jump-tags-menu1145,70045
(define-key bmkp-jump-tags-menu [bmkp-all-tags-regexp-jump-other-window]bmkp-jump-tags-menu1146,70146
(define-key bmkp-jump-tags-menu [bmkp-some-tags-regexp-jump-other-window]bmkp-jump-tags-menu1149,70386
(define-key bmkp-jump-tags-menu [bmkp-all-tags-jump-other-window]bmkp-jump-tags-menu1152,70635
(define-key bmkp-jump-tags-menu [bmkp-some-tags-jump-other-window]bmkp-jump-tags-menu1155,70846

elpa/bookmark+-20161027.926/bookmark+-lit.el,8903
(defalias 'bmkp-bookmark-data-from-record 'bookmark-get-bookmark-record)bmkp-bookmark-data-from-record202,8015
(defalias 'bmkp-bookmark-name-from-record 'bookmark-name-from-full-record)bmkp-bookmark-name-from-record203,8088
(defvar bmkp-autoname-format)           ; In `bookmark+-1.el'.bmkp-autoname-format236,9378
(defvar bmkp-current-nav-bookmark)      ; In `bookmark+-1.el'.bmkp-current-nav-bookmark237,9441
(defvar bmkp-latest-bookmark-alist)     ; In `bookmark+-1.el'.bmkp-latest-bookmark-alist238,9504
(defvar bmkp-light-left-fringe-bitmap)  ; Defined in this file for Emacs 22+.bmkp-light-left-fringe-bitmap239,9567
(defvar bmkp-light-right-fringe-bitmap) ; Defined in this file for Emacs 22+.bmkp-light-right-fringe-bitmap240,9645
(defvar bmkp-nav-alist)                 ; In `bookmark+-1.el'.bmkp-nav-alist241,9723
(defvar bmkp-this-file/buffer-cycle-sort-comparer) ; In `bookmark+-1.el'.bmkp-this-file/buffer-cycle-sort-comparer242,9786
(defvar fringe-bitmaps)                 ; Built-in for Emacs 22+.fringe-bitmaps243,9860
(defface bmkp-light-autonamedbmkp-light-autonamed249,10031
(defface bmkp-light-autonamed-regionbmkp-light-autonamed-region255,10302
(defface bmkp-light-mark '((t (:background "Plum")))bmkp-light-mark273,11199
(defface bmkp-light-non-autonamedbmkp-light-non-autonamed278,11423
(defface bmkp-light-non-autonamed-regionbmkp-light-non-autonamed-region284,11706
(defcustom bmkp-auto-light-relocate-when-jump-flag tbmkp-auto-light-relocate-when-jump-flag294,12161
(defcustom bmkp-auto-light-when-jump nilbmkp-auto-light-when-jump301,12480
(defvar bmkp-last-auto-light-when-jump (and (not bmkp-auto-light-when-jump)  'all-in-buffer)bmkp-last-auto-light-when-jump321,13686
(defcustom bmkp-auto-light-when-set nilbmkp-auto-light-when-set325,13892
(defvar bmkp-last-auto-light-when-set (and (not bmkp-auto-light-when-set)  'all-in-buffer)bmkp-last-auto-light-when-set339,14717
(defcustom bmkp-light-priorities '((bmkp-autonamed-overlays        . 160)bmkp-light-priorities343,14917
(defvar bmkp-light-styles-alist (append '(("Region"              . region)bmkp-light-styles-alist365,16087
(defun bmkp-light-style-choices ()bmkp-light-style-choices378,16980
(defcustom bmkp-light-style-autonamed (if (not (fboundp 'fringe-columns)) ; Emacs 20-21.bmkp-light-style-autonamed384,17264
(defcustom bmkp-light-style-non-autonamed (if (not (fboundp 'fringe-columns)) ; Emacs 20-21.bmkp-light-style-non-autonamed391,17639
(defcustom bmkp-light-style-autonamed-region  'regionbmkp-light-style-autonamed-region398,18033
(defcustom bmkp-light-style-non-autonamed-region 'regionbmkp-light-style-non-autonamed-region403,18284
(defcustom bmkp-light-threshold 100000bmkp-light-threshold408,18525
(defvar bmkp-autonamed-overlays nilbmkp-autonamed-overlays415,18753
(defvar bmkp-non-autonamed-overlays nilbmkp-non-autonamed-overlays418,18843
(defun bmkp-bmenu-light ()              ; `H H' in bookmark listbmkp-bmenu-light433,19421
(defun bmkp-bmenu-light-marked (&optional parg msgp) ; `H > H' in bookmark listbmkp-bmenu-light-marked440,19722
(defun bmkp-bmenu-unlight ()            ; `H U' in bookmark listbmkp-bmenu-unlight451,20240
(defun bmkp-bmenu-unlight-marked (&optional parg msgp) ; `H > U' in bookmark listbmkp-bmenu-unlight-marked458,20543
(defun bmkp-bmenu-set-lighting (style face when &optional msgp) ; `H +' in bookmark listbmkp-bmenu-set-lighting469,21078
(defun bmkp-bmenu-set-lighting-for-marked (style face when &optional msgp) ; `H > +' in bookmark listbmkp-bmenu-set-lighting-for-marked486,21970
(defun bmkp-bookmarks-lighted-at-point (&optional position fullp msgp) ; `C-x p ='bmkp-bookmarks-lighted-at-point509,23225
(defun bmkp-toggle-auto-light-when-jump (&optional msgp) ; Not bound.bmkp-toggle-auto-light-when-jump534,24396
(defun bmkp-lighted-jump (bookmark-name &optional flip-use-region-p) ; `C-x j h'bmkp-lighted-jump550,25313
(defun bmkp-lighted-jump-other-window (bookmark-name &optional flip-use-region-p) ; `C-x 4 j h'bmkp-lighted-jump-other-window561,25895
(defun bmkp-unlight-bookmark (bookmark &optional noerrorp msgp)bmkp-unlight-bookmark572,26460
(defun bmkp-unlight-bookmark-here (&optional noerrorp msgp) ; `C-x p C-u'bmkp-unlight-bookmark-here591,27588
(defun bmkp-unlight-bookmark-this-buffer (bookmark &optional noerrorp msgp) ; `C-x p u'bmkp-unlight-bookmark-this-buffer599,28044
(defun bmkp-unlight-bookmarks (&optional overlays-symbols this-buffer-p msgp) ; `C-x p U'bmkp-unlight-bookmarks618,28985
(defun bmkp-unlight-autonamed-this-buffer (&optional everywherep)bmkp-unlight-autonamed-this-buffer653,30892
(defun bmkp-unlight-non-autonamed-this-buffer (&optional everywherep)bmkp-unlight-non-autonamed-this-buffer661,31268
(defun bmkp-unlight-this-buffer ()bmkp-unlight-this-buffer669,31642
(defun bmkp-toggle-auto-light-when-set (&optional msgp) ; Not bound.bmkp-toggle-auto-light-when-set675,31846
(defun bmkp-set-lighting-for-bookmark (bookmark-name style face when &optional msgp light-now-p)bmkp-set-lighting-for-bookmark690,32783
(defun bmkp-set-lighting-for-buffer (buffer style face when &optional msgp light-now-p)bmkp-set-lighting-for-buffer723,34758
(defun bmkp-set-lighting-for-this-buffer (style face when &optional msgp light-now-p)bmkp-set-lighting-for-this-buffer741,35681
(defun bmkp-set-lighting-for-bookmarks (alist style face when &optional msgp light-now-p)bmkp-set-lighting-for-bookmarks754,36387
(defun bmkp-light-bookmark (bookmark &optional style face msgp pointp)bmkp-light-bookmark766,37120
(defun bmkp-light-bookmark-this-buffer (bookmark &optional style face msgp) ; `C-x p h'bmkp-light-bookmark-this-buffer861,43128
(defun bmkp-light-bookmarks (&optional alist overlays-symbols msgp) ; `C-x p H'bmkp-light-bookmarks889,44982
(defun bmkp-light-navlist-bookmarks (&optional overlays-symbols msgp)bmkp-light-navlist-bookmarks991,51669
(defun bmkp-light-this-buffer (&optional overlays-symbols msgp)bmkp-light-this-buffer1004,52327
(defun bmkp-light-bookmarks-in-region (start end &optional overlays-symbols msgp)bmkp-light-bookmarks-in-region1017,53001
(defun bmkp-light-autonamed-this-buffer (&optional msgp)bmkp-light-autonamed-this-buffer1035,53979
(defun bmkp-light-non-autonamed-this-buffer (&optional msgp)bmkp-light-non-autonamed-this-buffer1041,54278
(defun bmkp-cycle-lighted-this-buffer (increment &optional other-window startoverp)bmkp-cycle-lighted-this-buffer1048,54642
(defun bmkp-cycle-lighted-this-buffer-other-window (increment &optional startoverp)bmkp-cycle-lighted-this-buffer-other-window1086,56832
(defun bmkp-next-lighted-this-buffer (n &optional startoverp) ; Repeatable key, e.g. `S-f2'bmkp-next-lighted-this-buffer1093,57281
(defun bmkp-previous-lighted-this-buffer (n &optional startoverp) ; Repeatable key, e.g. `f2'bmkp-previous-lighted-this-buffer1103,57852
(defun bmkp-next-lighted-this-buffer-repeat (arg) ; `C-x p C-down'bmkp-next-lighted-this-buffer-repeat1111,58344
(defun bmkp-previous-lighted-this-buffer-repeat (arg) ; `C-x p C-up'bmkp-previous-lighted-this-buffer-repeat1121,58825
(defun bmkp-light-face (bookmark)bmkp-light-face1132,59167
(defun bmkp-light-style (bookmark)bmkp-light-style1152,60164
(defun bmkp-light-when (bookmark)bmkp-light-when1176,61335
(defun bmkp-lighting-face (bookmark)bmkp-lighting-face1186,61808
(defun bmkp-lighting-style (bookmark)bmkp-lighting-style1195,62218
(defun bmkp-lighting-when (bookmark)bmkp-lighting-when1205,62688
(defun bmkp-lighting-attribute (bookmark attribute)bmkp-lighting-attribute1215,63148
(defun bmkp-get-lighting (bookmark)bmkp-get-lighting1226,63663
(defun bmkp-bookmark-overlay-p (overlay)bmkp-bookmark-overlay-p1232,63918
(defun bmkp-default-lighted ()bmkp-default-lighted1237,64131
(defun bmkp-a-bookmark-lighted-on-this-line (&optional fullp msgp)bmkp-a-bookmark-lighted-on-this-line1244,64479
(defun bmkp-a-bookmark-lighted-at-pos (&optional position fullp)bmkp-a-bookmark-lighted-at-pos1266,65408
(defun bmkp-read-set-lighting-args (&optional default-style default-face default-when)bmkp-read-set-lighting-args1282,66160
(defun bmkp-lighted-alist-only ()bmkp-lighted-alist-only1309,68022
(defun bmkp-this-buffer-lighted-alist-only ()bmkp-this-buffer-lighted-alist-only1315,68266
(defun bmkp-number-lighted (&optional overlays-symbols)bmkp-number-lighted1322,68599
(defalias 'bmkp-lighted-p 'bmkp-overlay-of-bookmark)bmkp-lighted-p1331,68974
(defun bmkp-overlay-of-bookmark (bookmark &optional overlays)bmkp-overlay-of-bookmark1332,69027
(defun bmkp-make/move-overlay-of-style (style pos autonamedp bookmark &optional overlay)bmkp-make/move-overlay-of-style1347,69859
(defun bmkp-make/move-fringe (side pos autonamedp &optional overlay linep)bmkp-make/move-fringe1399,73053
(defun bmkp-fringe-string (side autonamedp)bmkp-fringe-string1427,74586

elpa/bookmark+-20161027.926/bookmark+-mac.el,1266
(defalias 'bmkp-bookmark-data-from-record 'bookmark-get-bookmark-record)bmkp-bookmark-data-from-record158,5714
(defalias 'bmkp-bookmark-name-from-record 'bookmark-name-from-full-record)bmkp-bookmark-name-from-record159,5787
(defun bmkp-replace-regexp-in-string (regexp rep string &optional fixedcase literal subexp start)bmkp-replace-regexp-in-string174,6383
(defmacro bmkp-with-help-window (buffer &rest body)bmkp-with-help-window186,6995
(defmacro bmkp-with-output-to-plain-temp-buffer (buf &rest body)bmkp-with-output-to-plain-temp-buffer196,7395
(defmacro bmkp-define-cycle-command (type &optional otherp)bmkp-define-cycle-command210,8007
(defmacro bmkp-define-next+prev-cycle-commands (type)bmkp-define-next+prev-cycle-commands235,9234
(defmacro bmkp-define-show-only-command (type doc-string filter-function)bmkp-define-show-only-command276,11273
(defmacro bmkp-define-sort-command (sort-order comparer doc-string)bmkp-define-sort-command317,13485
(defmacro bmkp-define-file-sort-predicate (att-nb)bmkp-define-file-sort-predicate370,16367
(defmacro bmkp-menu-bar-make-toggle (command variable item-name message helpbmkp-menu-bar-make-toggle454,20551
(defmacro bmkp-with-bookmark-dir (bookmark &rest body)bmkp-with-bookmark-dir494,22593

elpa/bookmark+-20161027.926/bookmark+-pkg.el,178
(define-package "bookmark+" "20161027.926" "Bookmark+: extensions to standard library `bookmark.el'." 'nil :url "http://www.emacswiki.org/bookmark+.el" :keywords"bookmark+"1,0

elpa/bookmark+-20161027.926/bookmark+.el,118
(defconst bmkp-version-number "2013.04.13")bmkp-version-number172,6619
(defun bmkp-version ()bmkp-version175,6716

elpa/buffer-move-20160615.1103/buffer-move-autoloads.el,0

elpa/buffer-move-20160615.1103/buffer-move-pkg.el,171
(define-package "buffer-move" "20160615.1103" "easily swap buffers" 'nil :url "https://github.com/lukhas/buffer-move" :keywords '("lisp" "convenience"))"buffer-move"1,0

elpa/buffer-move-20160615.1103/buffer-move.el,533
(defconst buffer-move-version "0.6.1"buffer-move-version81,2759
(defgroup buffer-move nilbuffer-move84,2829
(defcustom buffer-move-behavior 'swapbuffer-move-behavior88,2926
(defcustom buffer-move-stay-after-swap nilbuffer-move-stay-after-swap95,3199
(defun buf-move-to (direction)buf-move-to102,3467
(defun buf-move-up ()buf-move-up130,4678
(defun buf-move-down ()buf-move-down140,4996
(defun buf-move-left ()buf-move-left148,5222
(defun buf-move-right ()buf-move-right156,5466
(defun buf-move ()buf-move164,5714

elpa/camcorder-20160404.2134/camcorder-autoloads.el,114
(defconst camcorder-version "0.1" "\camcorder-version11,404
(defvar camcorder-mode nil "\camcorder-mode28,819

elpa/camcorder-20160404.2134/camcorder-pkg.el,247
(define-package "camcorder" "20160404.2134" "Record screencasts in gif or other formats." '((emacs "24") (names "20150000") (cl-lib "0.5")) :url "http://github.com/Bruce-Connor/camcorder.el" :keywords '("multimedia" "screencast"))"camcorder"1,0

elpa/camcorder-20160404.2134/camcorder.el,1461
(define-namespace camcorder-camcorder-73,2535
(defcustom frame-parametersframe-parameters80,2628
(defcustom recording-commandrecording-command89,2897
(defcustom gif-conversion-commandsgif-conversion-commands113,3949
(defcustom window-id-offset 0window-id-offset157,6053
(defcustom output-directory (expand-file-name "~/Videos")output-directory164,6283
(defcustom gif-output-directory output-directorygif-output-directory168,6405
(defvar temp-dirtemp-dir172,6518
(defvar recording-frame nilrecording-frame180,6738
(defvar -process nil "Recording process PID.")-process184,6867
(defvar -output-file-name nil-output-file-name186,6915
(defvar -gif-file-name nil-gif-file-name189,6993
(defun stop () "Stop recording." (interactive) (mode -1))stop194,7064
(defun record ()record197,7133
(defalias 'camcorder-start #'record)camcorder-start210,7474
(define-minor-mode modemode213,7522
(defun -clear-message ()-clear-message239,8455
(defun -is-running-p ()-is-running-p244,8548
(defun pause ()pause249,8698
(defvar -input-file nil "")-input-file255,8827
(defun convert-to-gif ()convert-to-gif257,8856
(defun -stop-recording-if-frame-deleted (frame)-stop-recording-if-frame-deleted288,10134
(defun -announce-start-recording ()-announce-start-recording294,10352
(defun -start-recording ()-start-recording304,10608
(defun -convert-args (arg)-convert-args328,11439
(defun -frame-window-id (frame)-frame-window-id349,12110

elpa/cask-20151123.528/cask-autoloads.el,151
(defvar package-enable-at-startup t "\package-enable-at-startup10,280
(defalias 'package-list-packages 'list-packages)package-list-packages65,2158

elpa/cask-20151123.528/cask-bootstrap.el,122
(defconst cask-bootstrap-dircask-bootstrap-dir33,1086
(defconst cask-bootstrap-packagescask-bootstrap-packages38,1248

elpa/cask-20151123.528/cask-cli.el,2407
(defconst cask-cli--table-padding 10cask-cli--table-padding46,1474
(defvar cask-cli--dev-mode nilcask-cli--dev-mode49,1567
(defvar cask-cli--path default-directorycask-cli--path52,1643
(defvar cask-cli--bundle-cache nil)cask-cli--bundle-cache55,1731
(defun cask-cli--bundle ()cask-cli--bundle57,1768
(defun cask-cli--print-dependency (dependency)cask-cli--print-dependency62,1940
(defun cask-cli--print-upgrade (upgrade)cask-cli--print-upgrade71,2215
(defun cask-cli--print-table (table)cask-cli--print-table79,2485
(defmacro cask-cli/with-handled-errors (&rest body)cask-cli/with-handled-errors93,2936
(defun cask-cli/pkg-file ()cask-cli/pkg-file122,4117
(defun cask-cli/install ()cask-cli/install130,4400
(defun cask-cli/upgrade-cask ()cask-cli/upgrade-cask138,4671
(defun cask-cli/exec (&rest args)cask-cli/exec159,5423
(defun cask-cli/update ()cask-cli/update162,5518
(defun cask-cli/init ()cask-cli/init172,5847
(defun cask-cli/list ()cask-cli/list180,6133
(defun cask-cli/version ()cask-cli/version192,6736
(defun cask-cli/info ()cask-cli/info196,6874
(defun cask-cli/help (&optional command-name)cask-cli/help206,7237
(defun cask-cli/load-path ()cask-cli/load-path212,7463
(defun cask-cli/exec-path ()cask-cli/exec-path218,7677
(defmacro cask-cli--with-package-path (&rest body)cask-cli--with-package-path227,8000
(defun cask-cli/eval (form)cask-cli/eval236,8283
(defun cask-cli/package-directory ()cask-cli/package-directory241,8432
(defun cask-cli/outdated ()cask-cli/outdated245,8581
(defun cask-cli/files ()cask-cli/files254,8867
(defun cask-cli/build ()cask-cli/build262,9095
(defun cask-cli/clean-elc ()cask-cli/clean-elc266,9206
(defun cask-cli/link (&optional command-or-name arg)cask-cli/link270,9340
(defun cask-cli/package (&optional target-dir)cask-cli/package313,10664
(defun cask-cli/cask-proxy (host)cask-cli/cask-proxy322,10858
(defun cask-cli/cask-http-proxy (host)cask-cli/cask-http-proxy327,11011
(defun cask-cli/cask-https-proxy (host)cask-cli/cask-https-proxy331,11137
(defun cask-cli/cask-no-proxy (host)cask-cli/cask-no-proxy335,11266
(defun cask-cli/cask-version ()cask-cli/cask-version339,11388
(defun cask-cli/set-path (path)cask-cli/set-path344,11504
(defun cask-cli/dev ()cask-cli/dev348,11631
(defun cask-cli/debug ()cask-cli/debug352,11707
(defun cask-cli/verbose ()cask-cli/verbose356,11786

elpa/cask-20151123.528/cask-pkg.el,106
(define-package "cask" "20151123.528" "Cask: Project management for Emacs package development""cask"1,0

elpa/cask-20151123.528/cask.el,5988
(define-error 'cask-error "Cask error")cask-error82,3246
(define-error 'cask-missing-dependency "Missing dependency" 'cask-error)cask-missing-dependency83,3286
(define-error 'cask-missing-dependencies "Missing dependencies" 'cask-error)cask-missing-dependencies84,3359
(define-error 'cask-failed-installation "Failed installation" 'cask-error)cask-failed-installation85,3436
(define-error 'cask-failed-initialization "Failed initialization" 'cask-error)cask-failed-initialization86,3511
(define-error 'cask-not-a-package "Missing `package` or `package-file` directive" 'cask-error)cask-not-a-package87,3590
(define-error 'cask-no-cask-file "Cask file does not exist" 'cask-error)cask-no-cask-file88,3685
(defvar cask-source-mappingcask-source-mapping159,5452
(defconst cask-filename "Cask"cask-filename168,5860
(defconst cask-dist-path "dist"cask-dist-path171,5922
(defvar cask-current-bundle nilcask-current-bundle174,6016
(defconst cask-fetcherscask-fetchers180,6191
(defconst cask-tmp-pathcask-tmp-path184,6285
(defconst cask-tmp-checkout-pathcask-tmp-checkout-path187,6356
(defconst cask-tmp-packages-pathcask-tmp-packages-path190,6429
(defun cask--find-unbalanced-parenthesis (bundle)cask--find-unbalanced-parenthesis196,6529
(defun cask--exit-error (bundle err)cask--exit-error207,6866
(defun cask--current-source-position ()cask--current-source-position232,7965
(defun cask--read (filename)cask--read237,8167
(defmacro cask--with-file (bundle &rest body)cask--with-file261,9107
(defun cask--use-environment (bundle &rest args)cask--use-environment270,9418
(defun cask--fetcher-dependencies (bundle)cask--fetcher-dependencies295,10266
(defun cask--has-fetcher-dependency-p (bundle)cask--has-fetcher-dependency-p299,10433
(defun cask--dependency-to-package-build-config (dependency)cask--dependency-to-package-build-config303,10591
(defun cask--checkout-and-package-dependency (dependency)cask--checkout-and-package-dependency312,11086
(defmacro cask--with-environment (bundle &rest body)cask--with-environment327,11849
(defmacro cask--with-package (bundle &rest body)cask--with-package349,12748
(defun cask--show-package-error (err filename)cask--show-package-error362,13164
(defun cask--eval (bundle forms &optional scope)cask--eval371,13558
(defun cask--template-get (name)cask--template-get410,15167
(defun cask--initialized-p (bundle)cask--initialized-p416,15398
(defun cask--epl-package-to-dependency (epl-package)cask--epl-package-to-dependency422,15572
(defun cask--epl-requirement-to-dependency (epl-requirement)cask--epl-requirement-to-dependency428,15799
(defun cask--find-available-package (name)cask--find-available-package434,16054
(defun cask--find-installed-package (name)cask--find-installed-package438,16186
(defun cask--uniq-dependencies (dependencies)cask--uniq-dependencies442,16331
(defun cask--compute-dependencies (dependencies package-function)cask--compute-dependencies451,16651
(defun cask--runtime-dependencies (bundle &optional deep)cask--runtime-dependencies470,17371
(defun cask--development-dependencies (bundle &optional deep)cask--development-dependencies477,17672
(defun cask--dependencies (bundle &optional deep)cask--dependencies484,17985
(defun cask--installed-dependencies (bundle &optional deep)cask--installed-dependencies489,18197
(defun cask--install-dependency (bundle dependency)cask--install-dependency496,18488
(defun cask--delete-dependency (bundle dependency)cask--delete-dependency511,19172
(defun cask--dependency-files (dependency)cask--dependency-files517,19424
(defun cask--from-epl-package (bundle package)cask--from-epl-package524,19702
(defun cask-setup (project-path)cask-setup538,20269
(defun cask-initialize (&optional project-path)cask-initialize555,20955
(defun cask-update (bundle)cask-update568,21490
(defun cask-outdated (bundle)cask-outdated586,22016
(defun cask-install (bundle)cask-install593,22209
(defun cask-caskify (bundle &optional dev-mode)cask-caskify624,23351
(defun cask-package-name (bundle)cask-package-name636,23790
(defun cask-package-version (bundle)cask-package-version642,23951
(defun cask-package-description (bundle)cask-package-description648,24121
(defun cask-version ()cask-version654,24303
(defun cask-load-path (bundle)cask-load-path660,24499
(defun cask-exec-path (bundle)cask-exec-path670,24818
(defun cask-elpa-path (bundle)cask-elpa-path683,25218
(defun cask-runtime-dependencies (bundle &optional deep)cask-runtime-dependencies687,25376
(defun cask-development-dependencies (bundle &optional deep)cask-development-dependencies696,25666
(defun cask-dependencies (bundle &optional deep)cask-dependencies705,25968
(defun cask-installed-dependencies (bundle &optional deep)cask-installed-dependencies714,26258
(defun cask-has-dependency (bundle name)cask-has-dependency721,26514
(defun cask-find-dependency (bundle name)cask-find-dependency725,26674
(defun cask-define-package-string (bundle)cask-define-package-string732,26875
(defun cask-define-package-file (bundle)cask-define-package-file746,27481
(defun cask-dependency-path (bundle name)cask-dependency-path751,27695
(defun cask-path (bundle)cask-path757,27891
(defun cask-file (bundle)cask-file761,27976
(defun cask-files (bundle)cask-files765,28087
(defun cask-add-dependency (bundle name &rest args)cask-add-dependency775,28494
(defun cask-add-source (bundle name-or-alias &optional url)cask-add-source813,29997
(defun cask-remove-source (bundle name)cask-remove-source830,30648
(defun cask-build (bundle)cask-build836,30903
(defun cask-clean-elc (bundle)cask-clean-elc848,31345
(defun cask-links (bundle)cask-links857,31645
(defun cask-link (bundle name source)cask-link869,32058
(defun cask-link-delete (bundle name)cask-link-delete901,33541
(defun cask-linked-p (bundle name)cask-linked-p911,33919
(defun cask-package (bundle &optional target-dir)cask-package916,34080

elpa/cask-20151123.528/package-legacy.el,7131
(defgroup package nilpackage176,7735
(defcustom package-enable-at-startup tpackage-enable-at-startup182,7852
(defcustom package-load-list '(all)package-load-list194,8297
(defvar Info-directory-list)Info-directory-list213,9111
(defvar url-http-end-of-headers)url-http-end-of-headers218,9352
(defcustom package-archives '(("gnu" . "https://elpa.gnu.org/packages/"))package-archives220,9386
(defconst package-archive-version 1package-archive-version236,10040
(defconst package-el-version "1.0"package-el-version240,10214
(defvar package-archive-contents nilpackage-archive-contents244,10341
(defcustom package-user-dir (locate-user-emacs-file "elpa")package-user-dir253,10783
(defcustom package-directory-listpackage-directory-list263,11105
(defvar package--builtins nilpackage--builtins283,11832
(defvar package-alist nilpackage-alist297,12422
(defvar package-activated-list nilpackage-activated-list312,13071
(defvar package-obsolete-alist nilpackage-obsolete-alist316,13217
(defconst package-subdirectory-regexppackage-subdirectory-regexp322,13449
(defun package-version-join (vlist)package-version-join328,13740
(defun package-strip-version (dirname)package-strip-version357,14667
(defun package-load-descriptor (dir package)package-load-descriptor363,14912
(defun package-load-all-descriptors ()package-load-all-descriptors375,15402
(defsubst package-desc-vers (desc)package-desc-vers408,16699
(defsubst package-desc-reqs (desc)package-desc-reqs412,16807
(defsubst package-desc-doc (desc)package-desc-doc416,16920
(defsubst package-desc-kind (desc)package-desc-kind420,17030
(defun package--dir (name version)package--dir424,17160
(defun package-activate-1 (package pkg-vec)package-activate-1438,17642
(defun package-built-in-p (package &optional version)package-built-in-p458,18409
(defun package-activate (package version)package-activate468,18953
(defun package-mark-obsolete (package pkg-vec)package-mark-obsolete499,20207
(defun define-package (name-string version-stringdefine-package513,20752
(defun package-autoload-ensure-default-file (file)package-autoload-ensure-default-file554,22330
(defun package-generate-autoloads (name pkg-dir)package-generate-autoloads572,22880
(defun package-untar-buffer ()package-untar-buffer582,23303
(defun package-unpack (name version)package-unpack599,23859
(defun package--write-file-no-coding (file-name)package--write-file-no-coding610,24351
(defun package-unpack-single (file-name version desc requires)package-unpack-single614,24508
(defmacro package--with-work-buffer (location file &rest body)package--with-work-buffer652,25710
(defun package-handle-response ()package-handle-response680,26863
(defun package-download-single (name version desc requires)package-download-single695,27496
(defun package-download-tar (name version)package-download-tar702,27826
(defun package-installed-p (package &optional min-version)package-installed-p709,28097
(defun package-compute-transaction (package-list requirements)package-compute-transaction719,28477
(defun package-read-from-string (str)package-read-from-string771,30611
(defun package--read-archive-file (file)package--read-archive-file786,31084
(defun package-read-all-archive-contents ()package-read-all-archive-contents800,31685
(defun package-read-archive-contents (archive)package-read-archive-contents807,31950
(defun package--add-to-archive-contents (package archive)package--add-to-archive-contents820,32504
(defun package-download-transaction (package-list)package-download-transaction832,33077
(defun package-install (name)package-install857,34059
(defun package-strip-rcs-id (str)package-strip-rcs-id878,34776
(defun package-buffer-info ()package-buffer-info890,35150
(defun package-tar-file-info (file)package-tar-file-info939,37074
(defun package-install-from-buffer (pkg-info type)package-install-from-buffer985,38927
(defun package-install-file (file)package-install-file1018,40149
(defun package-delete (name version)package-delete1031,40674
(defun package-archive-base (name)package-archive-base1043,41100
(defun package--download-one-archive (archive file)package--download-one-archive1048,41330
(defun package-refresh-contents ()package-refresh-contents1064,42063
(defvar package--initialized nil)package--initialized1078,42605
(defun package-initialize (&optional no-activate)package-initialize1081,42655
(defun describe-package (package)describe-package1099,43233
(defun describe-package-1 (package)describe-package-11129,44355
(defun package-install-button-action (button)package-install-button-action1246,48655
(defvar package-menu-mode-mappackage-menu-mode-map1256,48940
(defvar package-menu-sort-button-mappackage-menu-sort-button-map1322,51924
(define-derived-mode package-menu-mode special-mode "Package Menu"package-menu-mode1332,52294
(defun package-menu-refresh ()package-menu-refresh1366,53439
(defun package-menu-revert (&optional arg noconfirm)package-menu-revert1376,53810
(defun package-menu-describe-package ()package-menu-describe-package1385,54150
(defun package-menu-mark-internal (what)package-menu-mark-internal1393,54388
(defun package-menu-mark-delete (num)package-menu-mark-delete1402,54599
(defun package-menu-mark-install (num)package-menu-mark-install1409,54836
(defun package-menu-mark-unmark (num)package-menu-mark-unmark1416,55078
(defun package-menu-backup-unmark ()package-menu-backup-unmark1421,55233
(defun package-menu-mark-obsolete-for-deletion ()package-menu-mark-obsolete-for-deletion1428,55421
(defun package-menu-quick-help ()package-menu-quick-help1439,55726
(defun package-menu-get-package ()package-menu-get-package1448,56066
(defun package-menu-get-version ()package-menu-get-version1455,56276
(defun package-menu-get-status ()package-menu-get-status1461,56427
(defun package-menu-execute ()package-menu-execute1467,56575
(defun package-print-package (package version key desc)package-print-package1521,58332
(defun package-list-maybe-add (package version status description result)package-list-maybe-add1550,59411
(defvar package-menu-package-list nilpackage-menu-package-list1555,59612
(defvar package-menu-sort-key nilpackage-menu-sort-key1559,59758
(defun package--generate-package-list ()package--generate-package-list1562,59844
(defun package-menu--version-predicate (left right)package-menu--version-predicate1646,62478
(defun package-menu--status-predicate (left right)package-menu--status-predicate1653,62735
(defun package-menu--description-predicate (left right)package-menu--description-predicate1670,63311
(defun package-menu--name-predicate (left right)package-menu--name-predicate1677,63539
(defun package-menu-sort-by-column (&optional e)package-menu-sort-by-column1681,63659
(defun package--list-packages (&optional packages)package--list-packages1695,64177
(defun list-packages ()list-packages1711,64884
(defalias 'package-list-packages 'list-packages)package-list-packages1723,65247
(defun package-list-packages-no-fetch ()package-list-packages-no-fetch1725,65297

elpa/cask-mode-20160410.749/cask-mode-autoloads.el,0

elpa/cask-mode-20160410.749/cask-mode-pkg.el,114
(define-package "cask-mode" "20160410.749" "major mode for editing Cask files" '((emacs "24.3")))"cask-mode"1,0

elpa/cask-mode-20160410.749/cask-mode.el,490
(defvar cask-mode-syntax-tablecask-mode-syntax-table30,1036
(defface cask-mode-source-facecask-mode-source-face37,1236
(defface cask-mode-symbol-facecask-mode-symbol-face45,1573
(defvar cask-mode-source-face 'cask-mode-source-facecask-mode-source-face51,1757
(defvar cask-mode-symbol-face 'cask-mode-symbol-facecask-mode-symbol-face53,1858
(defvar cask-mode-font-lock-keywordscask-mode-font-lock-keywords56,1960
(define-derived-mode cask-mode prog-mode "Cask"cask-mode73,2567

elpa/cl-generic-0.2/cl-generic-autoloads.el,0

elpa/cl-generic-0.2/cl-generic-pkg.el,172
(define-package "cl-generic" "0.2" "Forward cl-generic compatibility for Emacs<25" 'nil :url "http://elpa.gnu.org/packages/cl-generic.html" :keywords nil)"cl-generic"1,0

elpa/cl-generic-0.2/cl-generic.el,0

elpa/clean-aindent-mode-20150816.2029/clean-aindent-mode-autoloads.el,60
(defvar clean-aindent-mode nil "\clean-aindent-mode10,306

elpa/clean-aindent-mode-20150816.2029/clean-aindent-mode-pkg.el,245
(define-package "clean-aindent-mode" "20150816.2029" "Simple indent and unindent, trims indent white-space" 'nil :url "https://github.com/pmarinov/clean-aindent-mode" :keywords '("indentation" "whitespace" "backspace"))"clean-aindent-mode"1,0

elpa/clean-aindent-mode-20150816.2029/clean-aindent-mode.el,1745
(defgroup clean-aindent nilclean-aindent88,2802
(defcustom clean-aindent-is-simple-indent nilclean-aindent-is-simple-indent92,2887
(defun clean-aindent--get-indent-len()clean-aindent--get-indent-len102,3165
(defun clean-aindent--abandonedp()clean-aindent--abandonedp113,3502
(defun clean-aindent--trim-last-point()clean-aindent--trim-last-point128,4104
(defun clean-aindent--check-last-point()clean-aindent--check-last-point143,4532
(defun clean-aindent--find-indent()clean-aindent--find-indent154,4916
(defun clean-aindent--simple-newline-and-indent()clean-aindent--simple-newline-and-indent163,5197
(defadvice newline-and-indent (around clean-aindent)newline-and-indent180,5716
(defun clean-aindent--get-line-len()clean-aindent--get-line-len202,6657
(defun clean-aindent--line-emptyp()clean-aindent--line-emptyp210,6857
(defun clean-aindent--prev-line()clean-aindent--prev-line218,7045
(defun clean-aindent--find-u-indent(start)clean-aindent--find-u-indent228,7336
(defun clean-aindent--inside-indentp()clean-aindent--inside-indentp244,7786
(defun clean-aindent--line-point()clean-aindent--line-point255,8080
(defun clean-aindent--goto-column(col)clean-aindent--goto-column261,8225
(defun clean-aindent--bsunindent(arg)clean-aindent--bsunindent268,8459
(defvar clean-aindent--last-indent nil)clean-aindent--last-indent294,9327
(defvar clean-aindent--last-indent-len 0)clean-aindent--last-indent-len295,9367
(defvar clean-aindent-mode--keymap (make-keymap) "clean-aindent-mode keymap.")clean-aindent-mode--keymap297,9410
(define-key clean-aindent-mode--keymap (kbd "M-DEL") 'clean-aindent--bsunindent)clean-aindent-mode--keymap298,9489
(define-minor-mode clean-aindent-modeclean-aindent-mode301,9586

elpa/color-theme-20080305.34/color-theme-autoloads.el,0

elpa/color-theme-20080305.34/color-theme-pkg.el,159
(define-package "color-theme" "20080305.34" "install color themes" 'nil :url "http://www.emacswiki.org/cgi-bin/wiki.pl?ColorTheme" :keywords"color-theme"1,0

elpa/color-theme-20080305.34/color-theme.el,5584
(defconst color-theme-maintainer-address "zedek@gnu.org"color-theme-maintainer-address59,2084
(defvar color-theme-xemacs-p (and (featurep 'xemacs) color-theme-xemacs-p71,2449
(defun color-theme-alist (plist)color-theme-alist111,4123
(defgroup color-theme nilcolor-theme130,4866
(defcustom color-theme-legal-frame-parameters "\\(color\\|mode\\)$"color-theme-legal-frame-parameters137,5049
(defcustom color-theme-legal-variables "\\(color\\|face\\)$"color-theme-legal-variables148,5524
(defcustom color-theme-illegal-faces "^w3-"color-theme-illegal-faces156,5854
(defcustom color-theme-illegal-default-attributes '(:family :height :width)color-theme-illegal-default-attributes165,6173
(defcustom color-theme-is-global tcolor-theme-is-global172,6475
(defcustom color-theme-is-cumulative tcolor-theme-is-cumulative204,7780
(defcustom color-theme-directory nilcolor-theme-directory211,8027
(defcustom color-theme-libraries (directory-files color-theme-libraries221,8475
(defcustom color-theme-load-all-themes tcolor-theme-load-all-themes234,9056
(defcustom color-theme-mode-hook nilcolor-theme-mode-hook241,9261
(defvar color-theme-mode-mapcolor-theme-mode-map246,9367
(defvar color-theme-initialized nilcolor-theme-initialized263,10182
(defvar color-theme-buffer-name "*Color Theme Selection*"color-theme-buffer-name266,10306
(defvar color-theme-original-frame-alist nilcolor-theme-original-frame-alist269,10412
(defvar color-theme-history nilcolor-theme-history272,10517
(defcustom color-theme-history-max-length nilcolor-theme-history-max-length275,10601
(defvar color-theme-counter 0color-theme-counter284,10902
(defvar color-theme-entry-path (condcolor-theme-entry-path289,11083
(defun color-theme-add-to-history (name)color-theme-add-to-history301,11607
(defvar color-themescolor-themes324,12260
(defun color-theme-backup-original-values ()color-theme-backup-original-values445,20587
(defun color-theme-select (&optional arg)color-theme-select456,21027
(defun color-theme-mode ()color-theme-mode505,22938
(defun color-theme-describe ()color-theme-describe557,24851
(defun color-theme-install-at-mouse (event)color-theme-install-at-mouse566,25187
(defun color-theme-install-at-point ()color-theme-install-at-point576,25492
(defun color-theme-install-at-point-for-current-frame ()color-theme-install-at-point-for-current-frame597,26349
(defun color-theme-filter (old-list regexp &optional exclude)color-theme-filter609,26709
(defun color-theme-spec-filter (spec)color-theme-spec-filter638,27869
(defun color-theme-plist-delete (plist prop)color-theme-plist-delete656,28694
(defun color-theme-spec-canonical-font (atts)color-theme-spec-canonical-font708,30748
(defun color-theme-spec-resolve-height (old new)color-theme-spec-resolve-height729,31738
(defun color-theme-spec-resolve-inheritance (atts)color-theme-spec-resolve-inheritance762,32859
(defun color-theme-spec-maybe-invert (atts)color-theme-spec-maybe-invert809,35048
(defun color-theme-spec (face)color-theme-spec839,36348
(defun color-theme-get-params ()color-theme-get-params859,37182
(defun color-theme-get-vars ()color-theme-get-vars868,37649
(defun color-theme-print-alist (alist)color-theme-print-alist884,38242
(defun color-theme-get-faces ()color-theme-get-faces893,38509
(defun color-theme-get-face-definitions ()color-theme-get-face-definitions902,38984
(defun color-theme-print-faces (faces)color-theme-print-faces907,39158
(defun color-theme-reset-faces ()color-theme-reset-faces916,39431
(defun color-theme-print-theme (func doc params vars faces)color-theme-print-theme932,40009
(defun color-theme-print (&optional buf)color-theme-print954,40790
(defun color-theme-analyze-find-theme (code)color-theme-analyze-find-theme1005,42261
(defun color-theme-analyze-add-face (a b regexp faces)color-theme-analyze-add-face1031,43173
(defun color-theme-analyze-add-faces (faces)color-theme-analyze-add-faces1077,44774
(defun color-theme-analyze-remove-heights (faces)color-theme-analyze-remove-heights1142,48039
(defun color-theme-analyze-defun ()color-theme-analyze-defun1169,49236
(defun color-theme-snapshot nil)color-theme-snapshot1222,51327
(defun color-theme-make-snapshot ()color-theme-make-snapshot1225,51376
(defvar color-theme-frame-param-frobbing-rulescolor-theme-frame-param-frobbing-rules1247,52185
(defun color-theme-frob-faces (params)color-theme-frob-faces1255,52574
(defun color-theme-alist-reduce (old-list)color-theme-alist-reduce1267,53006
(defun color-theme-install-frame-params (params)color-theme-install-frame-params1278,53401
(defun color-theme-install-variables (vars)color-theme-install-variables1328,55516
(defun color-theme-install-faces (faces)color-theme-install-faces1346,56281
(defun color-theme-canonic (theme)color-theme-canonic1419,59220
(defun color-theme-function (theme)color-theme-function1436,59799
(defun color-theme-frame-params (theme)color-theme-frame-params1440,59895
(defun color-theme-variables (theme)color-theme-variables1444,59999
(defun color-theme-faces (theme)color-theme-faces1448,60089
(defun color-theme-merge-alists (&rest alists)color-theme-merge-alists1452,60175
(defun color-theme-compare (theme-a theme-b)color-theme-compare1470,60936
(defun color-theme-install (theme)color-theme-install1525,62667
(defun color-theme-submit ()color-theme-submit1570,64425
(defmacro define-color-theme (name author description &rest forms)define-color-theme1626,66377
(defun color-theme-initialize ()color-theme-initialize1644,66931

elpa/color-theme-20080305.34/themes/color-theme-example.el,55
(defun color-theme-example ()color-theme-example4,46

elpa/color-theme-20080305.34/themes/color-theme-library.el,6795
(defun color-theme-gnome ()color-theme-gnome33,1181
(defun color-theme-blue-gnus ()color-theme-blue-gnus54,2158
(defun color-theme-dark-gnus ()color-theme-dark-gnus133,7162
(defun color-theme-blue-eshell ()color-theme-blue-eshell212,11758
(defun color-theme-salmon-font-lock ()color-theme-salmon-font-lock235,12990
(defun color-theme-dark-font-lock ()color-theme-dark-font-lock255,14033
(defun color-theme-dark-info ()color-theme-dark-info276,15052
(defun color-theme-gnome2 ()color-theme-gnome2290,15597
(defun color-theme-simple-1 ()color-theme-simple-1389,20696
(defun color-theme-jonadabian ()color-theme-jonadabian407,21426
(defun color-theme-ryerson ()color-theme-ryerson439,23046
(defun color-theme-wheat ()color-theme-wheat457,23844
(defun color-theme-standard ()color-theme-standard468,24179
(defun color-theme-fischmeister ()color-theme-fischmeister706,38412
(defun color-theme-sitaramv-solaris ()color-theme-sitaramv-solaris743,40255
(defun color-theme-sitaramv-nt ()color-theme-sitaramv-nt919,50398
(defun color-theme-billw ()color-theme-billw983,53904
(defun color-theme-retro-green (&optional color func)color-theme-retro-green1166,65277
(defun color-theme-retro-orange ()color-theme-retro-orange1198,66477
(defun color-theme-subtle-hacker ()color-theme-subtle-hacker1203,66666
(defun color-theme-pok-wog ()color-theme-pok-wog1267,70812
(defun color-theme-pok-wob ()color-theme-pok-wob1403,79073
(defun color-theme-blue-sea ()color-theme-blue-sea1555,87906
(defun color-theme-rotor ()color-theme-rotor1675,94879
(defun color-theme-pierson ()color-theme-pierson1754,99379
(defun color-theme-xemacs ()color-theme-xemacs1791,101160
(defun color-theme-jsc-light ()color-theme-jsc-light1883,105855
(defun color-theme-jsc-dark ()color-theme-jsc-dark2021,113822
(defun color-theme-greiner ()color-theme-greiner2192,124153
(defun color-theme-jb-simple ()color-theme-jb-simple2260,127699
(defun color-theme-beige-diff ()color-theme-beige-diff2557,144235
(defun color-theme-standard-ediff ()color-theme-standard-ediff2584,145662
(defun color-theme-beige-eshell ()color-theme-beige-eshell2608,147201
(defun color-theme-goldenrod ()color-theme-goldenrod2630,148428
(defun color-theme-ramangalahy ()color-theme-ramangalahy2684,151298
(defun color-theme-raspopovic ()color-theme-raspopovic2865,161566
(defun color-theme-taylor ()color-theme-taylor2938,166115
(defun color-theme-marquardt ()color-theme-marquardt3033,171530
(defun color-theme-parus ()color-theme-parus3155,178384
(defun color-theme-high-contrast ()color-theme-high-contrast3301,186258
(defun color-theme-infodoc ()color-theme-infodoc3344,188629
(defun color-theme-classic ()color-theme-classic3441,195322
(defun color-theme-scintilla ()color-theme-scintilla3543,201006
(defun color-theme-gtk-ide ()color-theme-gtk-ide3583,202907
(defun color-theme-midnight ()color-theme-midnight3623,204804
(defun color-theme-jedit-grey ()color-theme-jedit-grey3662,206602
(defun color-theme-snow ()color-theme-snow3699,208276
(defun color-theme-montz ()color-theme-montz3808,214855
(defun color-theme-aalto-light ()color-theme-aalto-light3977,224242
(defun color-theme-aalto-dark ()color-theme-aalto-dark4112,231727
(defun color-theme-blippblopp ()color-theme-blippblopp4170,234683
(defun color-theme-hober (&optional preview)color-theme-hober4244,238573
(defun color-theme-bharadwaj ()color-theme-bharadwaj4393,247189
(defun color-theme-oswald ()color-theme-oswald4741,266531
(defun color-theme-salmon-diff ()color-theme-salmon-diff4805,270473
(defun color-theme-robin-hood ()color-theme-robin-hood4831,271836
(defun color-theme-snowish ()color-theme-snowish4865,273667
(defun color-theme-dark-laptop ()color-theme-dark-laptop5103,287711
(defun color-theme-taming-mr-arneson ()color-theme-taming-mr-arneson5245,296030
(defun color-theme-digital-ofs1 ()color-theme-digital-ofs15405,304416
(defun color-theme-mistyday ()color-theme-mistyday5897,332922
(defun color-theme-marine ()color-theme-marine5966,337080
(defun color-theme-blue-erc ()color-theme-blue-erc6056,341829
(defun color-theme-dark-erc ()color-theme-dark-erc6109,344392
(defun color-theme-subtle-blue ()color-theme-subtle-blue6164,346953
(defun color-theme-dark-blue ()color-theme-dark-blue6587,372296
(defun color-theme-jonadabian-slate ()color-theme-jonadabian-slate6627,374484
(defun color-theme-gray1 ()color-theme-gray16750,381763
(defun color-theme-word-perfect ()color-theme-word-perfect6817,385178
(defun color-theme-emacs-21 ()color-theme-emacs-217013,395035
(defun color-theme-jsc-light2 ()color-theme-jsc-light27383,423217
(defun color-theme-ld-dark ()color-theme-ld-dark7432,426290
(defun color-theme-deep-blue ()color-theme-deep-blue7646,440588
(defun color-theme-kingsajz ()color-theme-kingsajz7758,447691
(defun color-theme-comidia ()color-theme-comidia8036,467754
(defun color-theme-katester ()color-theme-katester8206,478334
(defun color-theme-arjen ()color-theme-arjen8233,479501
(defun color-theme-tty-dark ()color-theme-tty-dark8442,491494
(defun color-theme-aliceblue ()color-theme-aliceblue8499,494379
(defun color-theme-black-on-gray ()color-theme-black-on-gray8622,502161
(defun color-theme-dark-blue2 ()color-theme-dark-blue28724,507527
(defun color-theme-blue-mood ()color-theme-blue-mood9348,546929
(defun color-theme-euphoria ()color-theme-euphoria9455,553039
(defun color-theme-resolve ()color-theme-resolve9530,557520
(defun color-theme-xp ()color-theme-xp9690,567812
(defun color-theme-gray30 ()color-theme-gray309848,577707
(defun color-theme-dark-green ()color-theme-dark-green10012,587984
(defun color-theme-whateveryouwant ()color-theme-whateveryouwant10067,590721
(defun color-theme-bharadwaj-slate ()color-theme-bharadwaj-slate10466,621999
(defun color-theme-lethe ()color-theme-lethe10752,640860
(defun color-theme-shaman ()color-theme-shaman11197,666346
(defun color-theme-emacs-nw ()color-theme-emacs-nw11282,670861
(defun color-theme-late-night ()color-theme-late-night11658,699315
(defun color-theme-clarity ()color-theme-clarity11710,701865
(defun color-theme-andreas ()color-theme-andreas11801,706697
(defun color-theme-charcoal-black ()color-theme-charcoal-black11988,717356
(defun color-theme-vim-colors ()color-theme-vim-colors12267,735336
(defun color-theme-calm-forest ()color-theme-calm-forest12365,740390
(defun color-theme-lawrence ()color-theme-lawrence12511,749350
(defun color-theme-matrix ()color-theme-matrix12764,765767
(defun color-theme-feng-shui ()color-theme-feng-shui13434,792717
(defun color-theme-renegade ()color-theme-renegade13500,795804
(defun color-theme-domq-pastel ()color-theme-domq-pastel13539,797831

elpa/color-theme-monokai-0.0.5/color-theme-monokai-autoloads.el,0

elpa/color-theme-monokai-0.0.5/color-theme-monokai-pkg.el,131
(define-package "color-theme-monokai" "0.0.5" "Monokai Color Theme for Emacs." '((color-theme "6.5.5")))"color-theme-monokai"1,0

elpa/color-theme-monokai-0.0.5/color-theme-monokai.el,56
(defun color-theme-monokai ()color-theme-monokai9,287

elpa/color-theme-solarized-20160626.743/color-theme-solarized-autoloads.el,0

elpa/color-theme-solarized-20160626.743/color-theme-solarized-pkg.el,112
(define-package "color-theme-solarized" "20160626.743" "Solarized themes for Emacs""color-theme-solarized"1,0

elpa/color-theme-solarized-20160626.743/color-theme-solarized.el,207
(defun color-theme-solarized ()color-theme-solarized26,798
(defun color-theme-solarized-dark ()color-theme-solarized-dark39,1211
(defun color-theme-solarized-light ()color-theme-solarized-light45,1474

elpa/color-theme-solarized-20160626.743/solarized-definitions.el,971
(defconst solarized-descriptionsolarized-description7,107
(defcustom solarized-termcolors 16solarized-termcolors11,267
(defcustom solarized-degrade nilsolarized-degrade20,671
(defcustom solarized-diff-mode 'normalsolarized-diff-mode26,892
(defcustom solarized-bold tsolarized-bold32,1061
(defcustom solarized-underline tsolarized-underline37,1179
(defcustom solarized-italic tsolarized-italic42,1308
(defcustom solarized-contrast 'normalsolarized-contrast47,1431
(defcustom solarized-broken-srgbsolarized-broken-srgb55,1758
(defvar solarized-colors           ; ANSI(Solarized terminal)solarized-colors70,2491
(defun solarized-face-for-index (facespec index &optional light)solarized-face-for-index92,3876
(defun create-face-spec (name facespec)create-face-spec132,5626
(defun solarized-color-definitions ()solarized-color-definitions160,7202
(defmacro create-solarized-theme (name description color-definitions)create-solarized-theme787,41728

elpa/color-theme-solarized-20160626.743/solarized-theme.el,0

elpa/command-log-mode-20160412.2147/command-log-mode-autoloads.el,0

elpa/command-log-mode-20160412.2147/command-log-mode-pkg.el,184
(define-package "command-log-mode" "20160412.2147" "log keyboard commands to buffer" 'nil :url "https://github.com/lewang/command-log-mode" :keywords '("help"))"command-log-mode"1,0

elpa/command-log-mode-20160412.2147/command-log-mode.el,2378
(defvar clm/log-text tclm/log-text52,1778
(defvar clm/log-repeat nilclm/log-repeat55,1870
(defvar clm/recent-history-string ""clm/recent-history-string58,1992
(defun clm/recent-history ()clm/recent-history61,2078
(defun clm/zap-recent-history ()clm/zap-recent-history68,2292
(defvar clm/time-string "%Y-%m-%dT%H:%M:%S"clm/time-string76,2561
(defvar clm/logging-dir "~/log/"clm/logging-dir79,2680
(defvar clm/log-command-exceptions*clm/log-command-exceptions*82,2781
(defvar clm/command-log-buffer nilclm/command-log-buffer95,3415
(defvar clm/command-repetitions 0clm/command-repetitions97,3521
(defvar clm/last-keyboard-command nilclm/last-keyboard-command99,3625
(defvar clm/log-command-indentation 11clm/log-command-indentation103,3700
(defgroup command-log nilcommand-log106,3793
(defcustom command-log-mode-auto-show nilcommand-log-mode-auto-show109,3860
(defcustom command-log-mode-window-size 40command-log-mode-window-size114,3999
(defcustom command-log-mode-window-font-size 2command-log-mode-window-font-size119,4123
(defcustom command-log-mode-key-binding-open-log "C-c o"command-log-mode-key-binding-open-log124,4256
(defcustom command-log-mode-open-log-turns-on-mode nilcommand-log-mode-open-log-turns-on-mode131,4519
(defcustom command-log-mode-is-global nilcommand-log-mode-is-global136,4666
(define-minor-mode command-log-modecommand-log-mode142,4818
(define-global-minor-mode global-command-log-mode command-log-modeglobal-command-log-mode155,5211
(defun clm/buffer-log-command-p (cmd &optional buffer)clm/buffer-log-command-p158,5299
(defmacro clm/save-command-environment (&rest body)clm/save-command-environment168,5733
(defun clm/open-command-log-buffer (&optional arg)clm/open-command-log-buffer178,6076
(defun clm/close-command-log-buffer ()clm/close-command-log-buffer194,6709
(defun clm/toggle-command-log-buffer (&optional arg)clm/toggle-command-log-buffer205,7034
(defun clm/scroll-buffer-window (buffer &optional move-fn)clm/scroll-buffer-window222,7648
(defmacro clm/with-command-log-buffer (&rest body)clm/with-command-log-buffer240,8350
(defun clm/log-command (&optional cmd)clm/log-command247,8586
(defun clm/command-log-clear ()clm/command-log-clear283,10459
(defun clm/save-log-line (start end)clm/save-log-line289,10609
(defun clm/save-command-log ()clm/save-command-log299,10934

elpa/company-20160626.1903/company-abbrev.el,149
(defun company-abbrev-insert (match)company-abbrev-insert32,925
(defun company-abbrev (command &optional arg &rest ignored)company-abbrev37,1041

elpa/company-20160626.1903/company-autoloads.el,63
(defvar global-company-mode nil "\global-company-mode39,1391

elpa/company-20160626.1903/company-bbdb.el,270
(defgroup company-bbdb nilcompany-bbdb30,1079
(defcustom company-bbdb-modes '(message-mode)company-bbdb-modes34,1159
(defun company-bbdb--candidates (arg)company-bbdb--candidates39,1346
(defun company-bbdb (command &optional arg &rest ignore)company-bbdb46,1624

elpa/company-20160626.1903/company-capf.el,326
(defvar company--capf-cache nil)company--capf-cache31,957
(defun company--capf-data ()company--capf-data33,991
(defun company--capf-data-real ()company--capf-data-real44,1449
(defun company--capf-workaround ()company--capf-workaround59,2290
(defun company-capf (command &optional arg &rest _args)company-capf67,2684

elpa/company-20160626.1903/company-clang.el,2526
(defgroup company-clang nilcompany-clang32,967
(defcustom company-clang-executablecompany-clang-executable36,1049
(defcustom company-clang-begin-after-member-access tcompany-clang-begin-after-member-access41,1163
(defcustom company-clang-arguments nilcompany-clang-arguments50,1533
(defcustom company-clang-prefix-guesser 'company-clang-guess-prefixcompany-clang-prefix-guesser56,1818
(defvar company-clang-modes '(c-mode c++-mode objc-mode)company-clang-modes60,2004
(defcustom company-clang-insert-arguments tcompany-clang-insert-arguments63,2105
(defvar company-clang--prefix nil)company-clang--prefix70,2366
(defsubst company-clang--guess-pch-file (file)company-clang--guess-pch-file72,2402
(defsubst company-clang--file-substring (file beg end)company-clang--file-substring78,2681
(defun company-clang-guess-prefix ()company-clang-guess-prefix83,2833
(defun company-clang-set-prefix (&optional prefix)company-clang-set-prefix92,3258
(defconst company-clang--completion-patterncompany-clang--completion-pattern112,4131
(defconst company-clang--error-buffer-name "*clang-error*")company-clang--error-buffer-name115,4243
(defun company-clang--lang-option ()company-clang--lang-option117,4304
(defun company-clang--parse-output (prefix _objc)company-clang--parse-output123,4539
(defun company-clang--meta (candidate)company-clang--meta143,5341
(defun company-clang--annotation (candidate)company-clang--annotation146,5422
(defun company-clang--annotation-1 (candidate)company-clang--annotation-1158,5805
(defun company-clang--strip-formatting (text)company-clang--strip-formatting173,6341
(defun company-clang--handle-error (res args)company-clang--handle-error179,6492
(defun company-clang--start-process (prefix callback &rest args)company-clang--start-process201,7457
(defsubst company-clang--build-location (pos)company-clang--build-location230,8665
(defsubst company-clang--build-complete-args (pos)company-clang--build-complete-args243,9057
(defun company-clang--candidates (prefix callback)company-clang--candidates254,9634
(defun company-clang--prefix ()company-clang--prefix266,10079
(defconst company-clang-required-version 1.1)company-clang-required-version273,10319
(defvar company-clang--version nil)company-clang--version275,10366
(defun company-clang--auto-save-p ()company-clang--auto-save-p277,10403
(defsubst company-clang-version ()company-clang-version280,10475
(defun company-clang (command &optional arg &rest ignored)company-clang292,10907

elpa/company-20160626.1903/company-cmake.el,1184
(defgroup company-cmake nilcompany-cmake31,1028
(defcustom company-cmake-executablecompany-cmake-executable35,1110
(defvar company-cmake-executable-argumentscompany-cmake-executable-arguments40,1224
(defvar company-cmake--completion-patterncompany-cmake--completion-pattern47,1465
(defvar company-cmake-modes '(cmake-mode)company-cmake-modes51,1576
(defvar company-cmake--candidates-cache nilcompany-cmake--candidates-cache54,1665
(defvar company-cmake--meta-command-cache nilcompany-cmake--meta-command-cache57,1745
(defun company-cmake--replace-tags (rlt)company-cmake--replace-tags60,1870
(defun company-cmake--fill-candidates-cache (arg)company-cmake--fill-candidates-cache78,2588
(defun company-cmake--parse (prefix content cmd)company-cmake--parse95,3251
(defun company-cmake--candidates (prefix)company-cmake--candidates111,3801
(defun company-cmake--unexpand-candidate (candidate)company-cmake--unexpand-candidate129,4392
(defun company-cmake--meta (candidate)company-cmake--meta148,5194
(defun company-cmake--doc-buffer (candidate)company-cmake--doc-buffer166,5993
(defun company-cmake (command &optional arg &rest ignored)company-cmake180,6578

elpa/company-20160626.1903/company-css.el,1020
(defconst company-css-property-alistcompany-css-property-alist31,1003
(defconst company-css-value-classescompany-css-value-classes293,13300
(defconst company-css-html-tagscompany-css-html-tags316,14406
(defconst company-css-pseudo-classescompany-css-pseudo-classes331,15290
(defconst company-css-property-cache (make-hash-table :size 115 :test 'equal))company-css-property-cache336,15529
(defun company-css-property-values (attribute)company-css-property-values338,15609
(defconst company-css-braces-syntax-tablecompany-css-braces-syntax-table359,16487
(defun company-css-inside-braces-p ()company-css-inside-braces-p366,16703
(defconst company-css-tag-regexpcompany-css-tag-regexp374,16961
(defconst company-css-pseudo-regexpcompany-css-pseudo-regexp388,17447
(defun company-css-grab-property ()company-css-grab-property403,17964
(defconst company-css-property-value-regexpcompany-css-property-value-regexp410,18194
(defun company-css (command &optional arg &rest ignored)company-css415,18379

elpa/company-20160626.1903/company-dabbrev-code.el,676
(defgroup company-dabbrev-code nilcompany-dabbrev-code32,969
(defcustom company-dabbrev-code-modescompany-dabbrev-code-modes36,1070
(defcustom company-dabbrev-code-other-buffers tcompany-dabbrev-code-other-buffers48,1652
(defcustom company-dabbrev-code-time-limit .1company-dabbrev-code-time-limit59,2226
(defcustom company-dabbrev-code-everywhere nilcompany-dabbrev-code-everywhere64,2428
(defcustom company-dabbrev-code-ignore-case nilcompany-dabbrev-code-ignore-case68,2552
(defun company-dabbrev-code--make-regexp (prefix)company-dabbrev-code--make-regexp72,2685
(defun company-dabbrev-code (command &optional arg &rest ignored)company-dabbrev-code79,2914

elpa/company-20160626.1903/company-dabbrev.el,1380
(defgroup company-dabbrev nilcompany-dabbrev31,951
(defcustom company-dabbrev-other-buffers 'allcompany-dabbrev-other-buffers35,1038
(defcustom company-dabbrev-ignore-buffers "\\`[ *]"company-dabbrev-ignore-buffers43,1436
(defcustom company-dabbrev-time-limit .1company-dabbrev-time-limit50,1721
(defcustom company-dabbrev-char-regexp "\\sw"company-dabbrev-char-regexp55,1921
(defcustom company-dabbrev-ignore-case 'keep-prefixcompany-dabbrev-ignore-case59,2063
(defcustom company-dabbrev-downcase 'case-replacecompany-dabbrev-downcase64,2330
(defcustom company-dabbrev-minimum-length 4company-dabbrev-minimum-length74,2683
(defcustom company-dabbrev-ignore-invisible nilcompany-dabbrev-ignore-invisible80,2927
(defmacro company-dabbrev--time-limit-while (test start limit freq &rest body)company-dabbrev--time-limit-while85,3070
(defun company-dabbrev--make-regexp ()company-dabbrev--make-regexp97,3537
(defun company-dabbrev--search-buffer (regexp pos symbols start limitcompany-dabbrev--search-buffer100,3632
(defun company-dabbrev--search (regexp &optional limit other-buffer-modescompany-dabbrev--search136,5369
(defun company-dabbrev--prefix ()company-dabbrev--prefix158,6477
(defun company-dabbrev--filter (prefix candidates)company-dabbrev--filter166,6801
(defun company-dabbrev (command &optional arg &rest ignored)company-dabbrev171,6972

elpa/company-20160626.1903/company-eclim.el,1239
(defgroup company-eclim nilcompany-eclim37,1253
(defun company-eclim-executable-find ()company-eclim-executable-find41,1335
(defcustom company-eclim-executablecompany-eclim-executable50,1782
(defcustom company-eclim-auto-save tcompany-eclim-auto-save57,1981
(defvar-local company-eclim--project-dir 'unknown)company-eclim--project-dir65,2317
(defvar-local company-eclim--project-name nil)company-eclim--project-name67,2369
(defvar json-array-type)json-array-type70,2453
(defun company-eclim--call-process (&rest args)company-eclim--call-process72,2479
(defun company-eclim--project-list ()company-eclim--project-list87,3035
(defun company-eclim--project-dir ()company-eclim--project-dir90,3122
(defun company-eclim--project-name ()company-eclim--project-name99,3454
(defun company-eclim--candidates (prefix)company-eclim--candidates108,3843
(defun company-eclim--search-point (prefix)company-eclim--search-point137,5234
(defun company-eclim--meta (candidate)company-eclim--meta142,5372
(defun company-eclim--annotation (candidate)company-eclim--annotation145,5453
(defun company-eclim--prefix ()company-eclim--prefix150,5654
(defun company-eclim (command &optional arg &rest ignored)company-eclim158,5914

elpa/company-20160626.1903/company-elisp.el,1675
(defgroup company-elisp nilcompany-elisp33,979
(defcustom company-elisp-detect-function-context tcompany-elisp-detect-function-context37,1066
(defcustom company-elisp-show-locals-first tcompany-elisp-show-locals-first43,1322
(defun company-elisp--prefix ()company-elisp--prefix49,1545
(defun company-elisp--predicate (symbol)company-elisp--predicate58,1832
(defun company-elisp--fns-regexp (&rest names)company-elisp--fns-regexp64,1966
(defvar company-elisp-parse-limit 30)company-elisp-parse-limit67,2075
(defvar company-elisp-parse-depth 100)company-elisp-parse-depth68,2113
(defvar company-elisp-defun-names '("defun" "defmacro" "defsubst"))company-elisp-defun-names70,2153
(defvar company-elisp-var-binding-regexpcompany-elisp-var-binding-regexp72,2222
(defvar company-elisp-var-binding-regexp-1company-elisp-var-binding-regexp-177,2442
(defvar company-elisp-fun-binding-regexpcompany-elisp-fun-binding-regexp81,2610
(defvar company-elisp-defuns-regexpcompany-elisp-defuns-regexp85,2765
(defun company-elisp--should-complete ()company-elisp--should-complete89,2898
(defun company-elisp--locals (prefix functions-p)company-elisp--locals107,3460
(defun company-elisp-candidates (prefix)company-elisp-candidates145,5102
(defun company-elisp--globals (prefix predicate)company-elisp--globals157,5646
(defun company-elisp--candidates-predicate (prefix)company-elisp--candidates-predicate160,5742
(defun company-elisp--before-binding-varlist-p ()company-elisp--before-binding-varlist-p179,6467
(defun company-elisp--doc (symbol)company-elisp--doc185,6661
(defun company-elisp (command &optional arg &rest ignored)company-elisp195,6991

elpa/company-20160626.1903/company-etags.el,773
(defgroup company-etags nilcompany-etags32,922
(defcustom company-etags-use-main-table-list tcompany-etags-use-main-table-list36,1004
(defcustom company-etags-ignore-case nilcompany-etags-ignore-case43,1274
(defcustom company-etags-everywhere nilcompany-etags-everywhere48,1427
(defvar company-etags-modes '(prog-mode c-mode objc-mode c++-mode java-modecompany-etags-modes57,1804
(defvar-local company-etags-buffer-table 'unknown)company-etags-buffer-table60,1956
(defun company-etags-find-table ()company-etags-find-table62,2008
(defun company-etags-buffer-table ()company-etags-buffer-table71,2334
(defun company-etags--candidates (prefix)company-etags--candidates77,2594
(defun company-etags (command &optional arg &rest ignored)company-etags87,2980

elpa/company-20160626.1903/company-files.el,718
(defun company-files--directory-files (dir prefix)company-files--directory-files31,915
(defvar company-files--regexpscompany-files--regexps40,1297
(defun company-files--grab-existing-name ()company-files--grab-existing-name49,1659
(defun company-files--connected-p (file)company-files--connected-p62,2121
(defun company-files--trailing-slash-p (file)company-files--trailing-slash-p66,2231
(defvar company-files--completion-cache nil)company-files--completion-cache72,2510
(defun company-files--complete (prefix)company-files--complete74,2556
(defun company-file--keys-match-p (new old)company-file--keys-match-p100,4030
(defun company-files (command &optional arg &rest ignored)company-files105,4172

elpa/company-20160626.1903/company-gtags.el,690
(defgroup company-gtags nilcompany-gtags32,938
(defcustom company-gtags-executablecompany-gtags-executable36,1025
(defcustom company-gtags-insert-arguments tcompany-gtags-insert-arguments45,1260
(defvar-local company-gtags--tags-available-p 'unknown)company-gtags--tags-available-p50,1439
(defcustom company-gtags-modes '(prog-mode jde-mode)company-gtags-modes52,1496
(defun company-gtags--tags-available-p ()company-gtags--tags-available-p59,1756
(defun company-gtags--fetch-tags (prefix)company-gtags--fetch-tags65,1996
(defun company-gtags--annotation (arg)company-gtags--annotation87,3049
(defun company-gtags (command &optional arg &rest ignored)company-gtags93,3241

elpa/company-20160626.1903/company-ispell.el,430
(defgroup company-ispell nilcompany-ispell32,932
(defcustom company-ispell-dictionary nilcompany-ispell-dictionary36,1018
(defvar company-ispell-available 'unknown)company-ispell-available42,1241
(defalias 'company-ispell--lookup-wordscompany-ispell--lookup-words44,1285
(defun company-ispell-available ()company-ispell-available49,1410
(defun company-ispell (command &optional arg &rest ignored)company-ispell61,1789

elpa/company-20160626.1903/company-keywords.el,235
(defun company-keywords-upper-lower (&rest lst)company-keywords-upper-lower31,918
(defvar company-keywords-alistcompany-keywords-alist35,1057
(defun company-keywords (command &optional arg &rest ignored)company-keywords236,14110

elpa/company-20160626.1903/company-nxml.el,1025
(defvar rng-open-elements)rng-open-elements31,908
(defvar rng-validate-mode)rng-validate-mode32,935
(defvar rng-in-attribute-regex)rng-in-attribute-regex33,962
(defvar rng-in-attribute-value-regex)rng-in-attribute-value-regex34,994
(defconst company-nxml-token-regexpcompany-nxml-token-regexp42,1407
(defvar company-nxml-in-attribute-value-regexpcompany-nxml-in-attribute-value-regexp45,1489
(defvar company-nxml-in-tag-name-regexpcompany-nxml-in-tag-name-regexp54,1804
(defun company-nxml-all-completions (prefix alist)company-nxml-all-completions58,1966
(defmacro company-nxml-prepared (&rest body)company-nxml-prepared71,2448
(defun company-nxml-tag (command &optional arg &rest ignored)company-nxml-tag78,2692
(defun company-nxml-attribute (command &optional arg &rest ignored)company-nxml-attribute88,3087
(defun company-nxml-attribute-value (command &optional arg &rest ignored)company-nxml-attribute-value101,3668
(defun company-nxml (command &optional arg &rest ignored)company-nxml123,4796

elpa/company-20160626.1903/company-oddmuse.el,237
(defvar company-oddmuse-link-regexpcompany-oddmuse-link-regexp33,1006
(defun company-oddmuse-get-page-table ()company-oddmuse-get-page-table36,1111
(defun company-oddmuse (command &optional arg &rest ignored)company-oddmuse44,1407

elpa/company-20160626.1903/company-pkg.el,92
(define-package "company" "20160626.1903" "Modular text completion framework""company"1,0

elpa/company-20160626.1903/company-semantic.el,1412
(defvar semantic-idle-summary-function)semantic-idle-summary-function32,946
(defgroup company-semantic nilcompany-semantic44,1607
(defcustom company-semantic-metadata-function 'company-semantic-summary-and-doccompany-semantic-metadata-function48,1697
(defcustom company-semantic-begin-after-member-access tcompany-semantic-begin-after-member-access52,1859
(defcustom company-semantic-insert-arguments tcompany-semantic-insert-arguments61,2232
(defvar company-semantic-modes '(c-mode c++-mode jde-mode java-mode))company-semantic-modes66,2414
(defvar-local company-semantic--current-tags nilcompany-semantic--current-tags68,2485
(defun company-semantic-documentation-for-tag (tag)company-semantic-documentation-for-tag71,2570
(defun company-semantic-doc-or-summary (tag)company-semantic-doc-or-summary76,2773
(defun company-semantic-summary-and-doc (tag)company-semantic-summary-and-doc82,3019
(defun company-semantic-doc-buffer (tag)company-semantic-doc-buffer95,3497
(defsubst company-semantic-completions (prefix)company-semantic-completions103,3749
(defun company-semantic-completions-raw (prefix)company-semantic-completions-raw111,4090
(defun company-semantic-annotation (argument tags)company-semantic-annotation118,4421
(defun company-semantic--prefix ()company-semantic--prefix126,4777
(defun company-semantic (command &optional arg &rest ignored)company-semantic132,4956

elpa/company-20160626.1903/company-template.el,1478
(defface company-template-fieldcompany-template-field26,870
(defvar company-template-nav-mapcompany-template-nav-map32,1114
(defvar-local company-template--buffer-templates nil)company-template--buffer-templates38,1330
(defun company-template-templates-at (pos)company-template-templates-at42,1467
(defun company-template-move-to-first (templ)company-template-move-to-first51,1766
(defun company-template-forward-field ()company-template-forward-field56,1901
(defun company-template-field-at (&optional point)company-template-field-at72,2501
(defun company-template-declare-template (beg end)company-template-declare-template79,2773
(defun company-template-remove-template (templ)company-template-remove-template89,3155
(defun company-template-add-field (templ beg end &optional display)company-template-add-field96,3423
(defun company-template-remove-field (ovl &optional clear)company-template-remove-field115,4262
(defun company-template-clean-up (&optional pos)company-template-clean-up126,4720
(defun company-template-insert-hook (ovl after-p &rest _ignore)company-template-insert-hook135,5100
(defun company-template-post-command ()company-template-post-command140,5279
(defun company-template-c-like-templatify (call)company-template-c-like-templatify147,5549
(defun company-template--c-like-args (templ end)company-template--c-like-args178,6763
(defun company-template-objc-templatify (selector)company-template-objc-templatify188,7177

elpa/company-20160626.1903/company-tempo.el,392
(defgroup company-tempo nilcompany-tempo32,922
(defcustom company-tempo-expand nilcompany-tempo-expand36,1000
(defsubst company-tempo-lookup (match)company-tempo-lookup41,1168
(defun company-tempo-insert (match)company-tempo-insert44,1256
(defsubst company-tempo-meta (match)company-tempo-meta51,1479
(defun company-tempo (command &optional arg &rest ignored)company-tempo59,1693

elpa/company-20160626.1903/company-xcode.el,705
(defgroup company-xcode nilcompany-xcode31,914
(defcustom company-xcode-xcodeindex-executable (executable-find "xcodeindex")company-xcode-xcodeindex-executable35,1005
(defvar company-xcode-tags nil)company-xcode-tags39,1138
(defun company-xcode-reset ()company-xcode-reset41,1171
(defcustom company-xcode-typescompany-xcode-types46,1278
(defvar-local company-xcode-project 'unknown)company-xcode-project65,2249
(defun company-xcode-fetch (project-bundle)company-xcode-fetch69,2378
(defun company-xcode-find-project ()company-xcode-find-project87,3246
(defun company-xcode-tags ()company-xcode-tags99,3680
(defun company-xcode (command &optional arg &rest ignored)company-xcode108,4099

elpa/company-20160626.1903/company-yasnippet.el,381
(defun company-yasnippet--key-prefixes ()company-yasnippet--key-prefixes38,1208
(defun company-yasnippet--candidates (prefix)company-yasnippet--candidates65,2205
(defun company-yasnippet--completions-for-prefix (prefix key-prefix tables)company-yasnippet--completions-for-prefix76,2866
(defun company-yasnippet (command &optional arg &rest ignore)company-yasnippet101,3672

elpa/company-20160626.1903/company.el,20281
(defgroup company nilcompany88,3427
(defface company-tooltipcompany-tooltip94,3557
(defface company-tooltip-selectioncompany-tooltip-selection102,3821
(defface company-tooltip-searchcompany-tooltip-search110,4111
(defface company-tooltip-mousecompany-tooltip-mouse114,4247
(defface company-tooltip-commoncompany-tooltip-common118,4366
(defface company-tooltip-common-selectioncompany-tooltip-common-selection125,4560
(defface company-tooltip-annotationcompany-tooltip-annotation129,4716
(defface company-tooltip-annotation-selectioncompany-tooltip-annotation-selection136,4922
(defface company-scrollbar-fgcompany-scrollbar-fg140,5090
(defface company-scrollbar-bgcompany-scrollbar-bg147,5273
(defface company-previewcompany-preview154,5460
(defface company-preview-commoncompany-preview-common162,5691
(defface company-preview-searchcompany-preview-search170,5940
(defface company-echo nilcompany-echo178,6193
(defface company-echo-commoncompany-echo-common181,6269
(defun company-frontends-set (variable value)company-frontends-set186,6475
(defcustom company-frontends '(company-pseudo-tooltip-unless-just-one-frontendcompany-frontends208,7673
(defcustom company-tooltip-limit 10company-tooltip-limit247,9570
(defcustom company-tooltip-minimum 6company-tooltip-minimum251,9678
(defcustom company-tooltip-minimum-width 0company-tooltip-minimum-width256,9848
(defcustom company-tooltip-margin 1company-tooltip-margin262,10054
(defcustom company-tooltip-offset-display 'scrollbarcompany-tooltip-offset-display266,10164
(defcustom company-tooltip-align-annotations nilcompany-tooltip-align-annotations273,10520
(defcustom company-tooltip-flip-when-above nilcompany-tooltip-flip-when-above278,10693
(defvar company-safe-backendscompany-safe-backends283,10865
(defun company-safe-backends-p (backends)company-safe-backends-p306,11687
(defcustom company-backends `(,@(unless (version< "24.3.51" emacs-version)company-backends314,11995
(defcustom company-transformers nilcompany-transformers463,18963
(defcustom company-completion-started-hook nilcompany-completion-started-hook478,19622
(defcustom company-completion-cancelled-hook nilcompany-completion-cancelled-hook484,19823
(defcustom company-completion-finished-hook nilcompany-completion-finished-hook490,20027
(defcustom company-minimum-prefix-length 3company-minimum-prefix-length498,20335
(defcustom company-abort-manual-when-too-short nilcompany-abort-manual-when-too-short502,20471
(defcustom company-require-match 'company-explicit-action-pcompany-require-match509,20755
(defcustom company-auto-complete nilcompany-auto-complete521,21317
(defcustom company-auto-complete-chars '(?\  ?\) ?.)company-auto-complete-chars532,21799
(defcustom company-idle-delay .5company-idle-delay560,23290
(defcustom company-tooltip-idle-delay .5company-tooltip-idle-delay568,23661
(defcustom company-begin-commands '(self-insert-commandcompany-begin-commands575,23968
(defcustom company-continue-commands '(not save-buffer save-some-bufferscompany-continue-commands593,24865
(defcustom company-show-numbers nilcompany-show-numbers608,25719
(defcustom company-selection-wrap-around nilcompany-selection-wrap-around613,25907
(defvar company-async-wait 0.03company-async-wait618,26104
(defvar company-async-timeout 2company-async-timeout622,26246
(defvar company-mode-map (make-sparse-keymap)company-mode-map627,26432
(defvar company-active-mapcompany-active-map630,26515
(defvar company--disabled-backends nil)company--disabled-backends660,28090
(defun company-init-backend (backend)company-init-backend662,28131
(defcustom company-lighter-base "company"company-lighter-base686,28907
(defvar company-lighter '(" "company-lighter691,29063
(define-minor-mode company-modecompany-mode708,29757
(defcustom company-global-modes tcompany-global-modes746,31304
(define-globalized-minor-mode global-company-mode company-mode company-mode-on)global-company-mode764,32180
(defun company-mode-on ()company-mode-on766,32261
(defsubst company-assert-enabled ()company-assert-enabled775,32651
(defvar-local company-my-keymap nil)company-my-keymap782,32857
(defvar company-emulation-alist '((t . nil)))company-emulation-alist784,32895
(defsubst company-enable-overriding-keymap (keymap)company-enable-overriding-keymap786,32942
(defun company-ensure-emulation-alist ()company-ensure-emulation-alist790,33056
(defun company-install-map ()company-install-map796,33325
(defun company-uninstall-map ()company-uninstall-map801,33503
(defun company-ignore ()company-ignore808,33805
(defun company-input-noop ()company-input-noop814,33940
(defun company--posn-col-row (posn)company--posn-col-row817,34023
(defun company--col-row (&optional pos)company--col-row829,34590
(defun company--row (&optional pos)company--row832,34678
(defvar-local company-backend nil)company-backend837,34829
(defun company-grab (regexp &optional expression limit)company-grab839,34865
(defun company-grab-line (regexp &optional expression)company-grab-line843,35019
(defun company-grab-symbol ()company-grab-symbol851,35384
(defun company-grab-word ()company-grab-word860,35780
(defun company-grab-symbol-cons (idle-begin-after-re &optional max-len)company-grab-symbol-cons869,36162
(defun company-in-string-or-comment ()company-in-string-or-comment883,36794
(defun company-call-backend (&rest args)company-call-backend890,37026
(defun company--force-sync (fun args backend)company--force-sync893,37141
(defun company-call-backend-raw (&rest args)company-call-backend-raw908,37691
(defun company--multi-backend-adapter (backends command &rest args)company--multi-backend-adapter916,38056
(defun company--multi-backend-adapter-candidates (backends prefix separate)company--multi-backend-adapter-candidates946,39245
(defun company--multi-candidates-mapper (backend separate tag)company--multi-candidates-mapper961,40154
(defun company--merge-async (pairs merger)company--merge-async975,40571
(defun company--prefix-str (prefix)company--prefix-str1006,41890
(defvar-local company-prefix nil)company-prefix1011,42042
(defvar-local company-candidates nil)company-candidates1013,42077
(defvar-local company-candidates-length nil)company-candidates-length1015,42116
(defvar-local company-candidates-cache nil)company-candidates-cache1017,42162
(defvar-local company-candidates-predicate nil)company-candidates-predicate1019,42207
(defvar-local company-common nil)company-common1021,42256
(defvar-local company-selection 0)company-selection1023,42291
(defvar-local company-selection-changed nil)company-selection-changed1025,42327
(defvar-local company--manual-action nilcompany--manual-action1027,42373
(defvar-local company--manual-prefix nil)company--manual-prefix1030,42462
(defvar company--auto-completion nilcompany--auto-completion1032,42505
(defvar-local company--point-max nil)company--point-max1036,42651
(defvar-local company-point nil)company-point1038,42690
(defvar company-timer nil)company-timer1040,42724
(defvar company-tooltip-timer nil)company-tooltip-timer1041,42751
(defsubst company-strip-prefix (str)company-strip-prefix1043,42787
(defun company--insert-candidate (candidate)company--insert-candidate1046,42868
(defmacro company-with-candidate-inserted (candidate &rest body)company-with-candidate-inserted1056,43323
(defun company-explicit-action-p ()company-explicit-action-p1070,43872
(defun company-reformat (candidate)company-reformat1075,44041
(defun company--should-complete ()company--should-complete1083,44430
(defun company--should-continue ()company--should-continue1092,44839
(defun company-call-frontends (command)company-call-frontends1102,45303
(defun company-set-selection (selection &optional force-update)company-set-selection1109,45594
(defun company--group-lighter (candidate base)company--group-lighter1119,46024
(defun company-update-candidates (candidates)company-update-candidates1128,46483
(defun company-calculate-candidates (prefix)company-calculate-candidates1162,48072
(defun company--fetch-candidates (prefix)company--fetch-candidates1191,49380
(defun company--preprocess-candidates (candidates)company--preprocess-candidates1226,50801
(defun company--postprocess-candidates (candidates)company--postprocess-candidates1234,51091
(defun company--strip-duplicates (candidates)company--strip-duplicates1241,51422
(defun company--transform-candidates (candidates)company--transform-candidates1264,52340
(defcustom company-occurrence-weight-functioncompany-occurrence-weight-function1270,52492
(defun company-occurrence-prefer-closest-above (pos match-beg match-end)company-occurrence-prefer-closest-above1281,52986
(defun company-occurrence-prefer-any-closest (pos _match-beg match-end)company-occurrence-prefer-any-closest1287,53213
(defun company-sort-by-occurrence (candidates)company-sort-by-occurrence1291,53368
(defun company--occurrence-predicate ()company--occurrence-predicate1325,54755
(defun company-sort-by-backend-importance (candidates)company-sort-by-backend-importance1338,55262
(defun company-sort-prefer-same-case-prefix (candidates)company-sort-prefer-same-case-prefix1356,56086
(defun company-idle-begin (buf win tick pos)company-idle-begin1366,56564
(defun company-auto-begin ()company-auto-begin1376,56900
(defun company-manual-begin ()company-manual-begin1391,57418
(defun company-other-backend (&optional backward)company-other-backend1402,57732
(defun company-require-match-p ()company-require-match-p1419,58398
(defun company-auto-complete-p (input)company-auto-complete-p1427,58719
(defun company--incremental-p ()company--incremental-p1439,59287
(defun company--continue-failed (new-prefix)company--continue-failed1447,59611
(defun company--good-prefix-p (prefix)company--good-prefix-p1475,60702
(defun company--continue ()company--continue1486,61271
(defun company--begin-new ()company--begin-new1512,62350
(defun company--perform ()company--perform1548,63933
(defun company-cancel (&optional result)company-cancel1559,64345
(defun company-abort ()company-abort1593,65635
(defun company-finish (result)company-finish1597,65703
(defsubst company-keep (command)company-keep1601,65799
(defun company-pre-command ()company-pre-command1604,65888
(defun company-post-command ()company-post-command1621,66494
(defun company--idle-delay ()company--idle-delay1653,67922
(defvar company--begin-inhibit-commands '(company-abortcompany--begin-inhibit-commands1658,68033
(defun company--should-begin ()company--should-begin1667,68522
(defcustom company-search-regexp-function #'regexp-quotecompany-search-regexp-function1676,68864
(defvar-local company-search-string "")company-search-string1689,69566
(defvar company-search-lighter '(" "company-search-lighter1691,69607
(defvar-local company-search-filtering nilcompany-search-filtering1697,69858
(defvar-local company--search-old-selection 0)company--search-old-selection1700,69972
(defvar-local company--search-old-changed nil)company--search-old-changed1702,70020
(defun company-search-words-regexp (input)company-search-words-regexp1704,70068
(defun company-search-words-in-any-order-regexp (input)company-search-words-in-any-order-regexp1708,70229
(defun company-search-flex-regexp (input)company-search-flex-regexp1717,70610
(defun company--permutations (lst)company--permutations1726,70942
(defun company--search (text lines)company--search1735,71164
(defun company-search-keypad ()company-search-keypad1743,71408
(defun company-search-printing-char ()company-search-printing-char1749,71605
(defun company--search-update-predicate (ss)company--search-update-predicate1757,71890
(defun company--search-update-string (new)company--search-update-string1767,72309
(defun company--search-assert-input ()company--search-assert-input1774,72571
(defun company-search-repeat-forward ()company-search-repeat-forward1779,72725
(defun company-search-repeat-backward ()company-search-repeat-backward1790,73160
(defun company-search-toggle-filtering ()company-search-toggle-filtering1802,73668
(defun company-search-abort ()company-search-abort1811,73985
(defun company-search-other-char ()company-search-other-char1819,74263
(defun company-search-delete-char ()company-search-delete-char1825,74409
(defvar company-search-mapcompany-search-map1835,74735
(define-minor-mode company-search-modecompany-search-mode1878,76797
(defun company--search-assert-enabled ()company--search-assert-enabled1900,77754
(defun company-search-candidates ()company-search-candidates1906,77924
(defvar company-filter-mapcompany-filter-map1925,78689
(defun company-filter-candidates ()company-filter-candidates1933,78980
(defun company-select-next (&optional arg)company-select-next1943,79353
(defun company-select-previous (&optional arg)company-select-previous1951,79593
(defun company-select-next-or-abort (&optional arg)company-select-next-or-abort1958,79792
(defun company-select-previous-or-abort (&optional arg)company-select-previous-or-abort1969,80119
(defun company-next-page ()company-next-page1980,80458
(defun company-previous-page ()company-previous-page1991,80878
(defvar company-pseudo-tooltip-overlay)company-pseudo-tooltip-overlay2002,81304
(defvar company-tooltip-offset)company-tooltip-offset2004,81345
(defun company--inside-tooltip-p (event-col-row row height)company--inside-tooltip-p2006,81378
(defun company--event-col-row (event)company--event-col-row2020,81922
(defun company-select-mouse (event)company-select-mouse2023,82008
(defun company-complete-mouse (event)company-complete-mouse2049,83188
(defun company-complete-selection ()company-complete-selection2055,83365
(defun company-complete-common ()company-complete-common2062,83581
(defun company-complete-common-or-cycle (&optional arg)company-complete-common-or-cycle2071,83904
(defun company-indent-or-complete-common ()company-indent-or-complete-common2084,84416
(defun company-select-next-if-tooltip-visible-or-complete-selection ()company-select-next-if-tooltip-visible-or-complete-selection2098,84930
(defun company-complete ()company-complete2108,85379
(defun company-complete-number (n)company-complete-number2121,85935
(defconst company-space-strings-limit 100)company-space-strings-limit2145,87025
(defconst company-space-stringscompany-space-strings2147,87069
(defun company-space-string (len)company-space-string2153,87259
(defun company-safe-substring (str from &optional to)company-safe-substring2158,87403
(defvar-local company-last-metadata nil)company-last-metadata2176,88018
(defun company-fetch-metadata ()company-fetch-metadata2178,88060
(defun company-doc-buffer (&optional string)company-doc-buffer2185,88347
(defvar company--electric-saved-window-configuration nil)company--electric-saved-window-configuration2193,88569
(defvar company--electric-commandscompany--electric-commands2195,88628
(defun company--electric-restore-window-configuration ()company--electric-restore-window-configuration2199,88793
(defmacro company--electric-do (&rest body)company--electric-do2206,89174
(defun company--unread-last-input ()company--unread-last-input2218,89680
(defun company-show-doc-buffer ()company-show-doc-buffer2223,89834
(defun company-show-location ()company-show-location2240,90589
(defvar-local company-callback nil)company-callback2263,91607
(defun company-remove-callback (&optional ignored)company-remove-callback2265,91644
(defun company-begin-backend (backend &optional callback)company-begin-backend2270,91921
(defun company-begin-with (candidatescompany-begin-with2286,92689
(defun company-version (&optional show-version)company-version2313,93690
(defun company-diag ()company-diag2326,94089
(defvar-local company-pseudo-tooltip-overlay nil)company-pseudo-tooltip-overlay2368,95681
(defvar-local company-tooltip-offset 0)company-tooltip-offset2370,95732
(defun company-tooltip--lines-update-offset (selection num-lines limit)company-tooltip--lines-update-offset2372,95773
(defun company-tooltip--simple-update-offset (selection _num-lines limit)company-tooltip--simple-update-offset2392,96359
(defsubst company-round-tab (arg)company-round-tab2401,96632
(defun company-plainify (str)company-plainify2404,96716
(defun company-fill-propertize (value annotation width selected left right)company-fill-propertize2417,97245
(defun company--search-chunks ()company--search-chunks2486,100688
(defun company--pre-render (str &optional annotation-p)company--pre-render2496,100958
(defun company--clean-string (str)company--clean-string2507,101460
(defun company-buffer-lines (beg end)company-buffer-lines2528,102012
(defun company-modify-line (old new offset)company-modify-line2552,103013
(defsubst company--length-limit (lst limit)company--length-limit2557,103185
(defsubst company--window-height ()company--window-height2562,103286
(defun company--window-width ()company--window-width2567,103423
(defun company--replacement-string (lines old column nl &optional align-top)company--replacement-string2590,104264
(defun company--offset-line (line offset)company--offset-line2629,105618
(defun company--create-lines (selection limit)company--create-lines2634,105726
(defun company--scrollbar-bounds (offset limit length)company--scrollbar-bounds2727,109362
(defun company--scrollbar (i bounds)company--scrollbar2734,109627
(defun company--scrollpos-line (text width)company--scrollpos-line2740,109834
(defun company--pseudo-tooltip-height ()company--pseudo-tooltip-height2748,110124
(defun company-pseudo-tooltip-show (row column selection)company-pseudo-tooltip-show2758,110587
(defun company-pseudo-tooltip-show-at-point (pos column-offset)company-pseudo-tooltip-show-at-point2790,111731
(defun company-pseudo-tooltip-edit (selection)company-pseudo-tooltip-edit2796,111997
(defun company-pseudo-tooltip-hide ()company-pseudo-tooltip-hide2807,112582
(defun company-pseudo-tooltip-hide-temporarily ()company-pseudo-tooltip-hide-temporarily2812,112760
(defun company-pseudo-tooltip-unhide ()company-pseudo-tooltip-unhide2819,113122
(defun company-pseudo-tooltip-guard ()company-pseudo-tooltip-guard2836,113852
(defun company-pseudo-tooltip-frontend (command)company-pseudo-tooltip-frontend2847,114295
(defun company-pseudo-tooltip-unless-just-one-frontend (command)company-pseudo-tooltip-unless-just-one-frontend2871,115478
(defun company-pseudo-tooltip-unless-just-one-frontend-with-delay (command)company-pseudo-tooltip-unless-just-one-frontend-with-delay2877,115751
(defvar-local company-preview-overlay nil)company-preview-overlay2903,116926
(defun company-preview-show-at-point (pos)company-preview-show-at-point2905,116970
(defun company-preview-hide ()company-preview-hide2951,118878
(defun company-preview-frontend (command)company-preview-frontend2956,119028
(defun company-preview-if-just-one-frontend (command)company-preview-if-just-one-frontend2963,119305
(defun company--show-inline-p ()company--show-inline-p2969,119554
(defun company-tooltip-visible-p ()company-tooltip-visible-p2975,119775
(defvar-local company-echo-last-msg nil)company-echo-last-msg2982,120056
(defvar company-echo-timer nil)company-echo-timer2984,120098
(defvar company-echo-delay .01)company-echo-delay2986,120131
(defun company-echo-show (&optional getter)company-echo-show2988,120164
(defun company-echo-show-soon (&optional getter)company-echo-show-soon2996,120403
(defun company-echo-cancel (&optional unset)company-echo-cancel3000,120555
(defun company-echo-show-when-idle (&optional getter)company-echo-show-when-idle3006,120717
(defun company-echo-format ()company-echo-format3011,120904
(defun company-echo-strip-common-format ()company-echo-strip-common-format3041,121974
(defun company-echo-hide ()company-echo-hide3066,122813
(defun company-echo-frontend (command)company-echo-frontend3071,122947
(defun company-echo-strip-common-frontend (command)company-echo-strip-common-frontend3077,123173
(defun company-echo-metadata-frontend (command)company-echo-metadata-frontend3083,123425

elpa/ctags-update-0.1.2/ctags-update-autoloads.el,0

elpa/ctags-update-0.1.2/ctags-update-pkg.el,125
(define-package "ctags-update" "0.1.2" "auto update TAGS in parent directory using exuberant-ctags" 'nil)"ctags-update"1,0

elpa/ctags-update-0.1.2/ctags-update.el,909
(defgroup ctags-update nilctags-update80,2768
(defcustom ctags-update-command "ctags"ctags-update-command85,2903
(defcustom ctags-update-other-optionsctags-update-other-options93,3181
(defvar ctags-update-minor-mode-mapctags-update-minor-mode-map109,3494
(defvar  ctags-update-minor-mode-hook nil)ctags-update-minor-mode-hook113,3577
(defvar ctags-update-use-xemacs-etags-pctags-update-use-xemacs-etags-p115,3621
(defun ctags-update-file-truename (filename) "empty function")ctags-update-file-truename119,3719
(defun ctags-update-command (tagfile-full-path &optional save-tagfile-to-as)ctags-update-command128,4082
(defun get-system-file-path(file-path)get-system-file-path140,4736
(defun ctags-update-find-tags-file ()ctags-update-find-tags-file148,5036
(defun ctags-update(&optional args)ctags-update167,5879
(define-minor-mode ctags-update-minor-modectags-update-minor-mode196,7346

elpa/cuda-mode-20151213.1921/cuda-mode-autoloads.el,0

elpa/cuda-mode-20151213.1921/cuda-mode-pkg.el,120
(define-package "cuda-mode" "20151213.1921" "NVIDIA CUDA Major Mode" 'nil :keywords '("c" "languages"))"cuda-mode"1,0

elpa/cuda-mode-20151213.1921/cuda-mode.el,686
(defconst cuda-builtinscuda-builtins104,3683
(defcustom cuda-font-lock-extra-types nilcuda-font-lock-extra-types264,7140
(defconst cuda-font-lock-keywords-1cuda-font-lock-keywords-1269,7320
(defconst cuda-font-lock-keywords-2cuda-font-lock-keywords-2273,7433
(defconst cuda-font-lock-keywords-3cuda-font-lock-keywords-3277,7550
(defvar cuda-font-lock-keywords cuda-font-lock-keywords-3cuda-font-lock-keywords285,7814
(defvar cuda-mode-syntax-table nilcuda-mode-syntax-table288,7925
(defvar cuda-mode-abbrev-table nilcuda-mode-abbrev-table294,8126
(defvar cuda-mode-map (let ((map (c-make-inherited-keymap)))cuda-mode-map304,8536
(defun cuda-mode ()cuda-mode322,9201

elpa/dash-20160605.248/dash-autoloads.el,0

elpa/dash-20160605.248/dash-pkg.el,110
(define-package "dash" "20160605.248" "A modern list library for Emacs" 'nil :keywords '("lists"))"dash"1,0

elpa/dash-20160605.248/dash.el,14119
(defgroup dash ()dash37,1343
(defun dash--enable-fontlock (symbol value)dash--enable-fontlock42,1428
(defcustom dash-enable-fontlock nildash-enable-fontlock47,1546
(defmacro !cons (car cdr)!cons54,1729
(defmacro !cdr (list)!cdr58,1842
(defmacro --each (list &rest body)--each62,1940
(defmacro -doto (eval-initial-value &rest forms)-doto75,2270
(defun -each (list fn)-each90,2870
(defalias '--each-indexed '--each)--each-indexed96,3042
(defun -each-indexed (list fn)-each-indexed98,3078
(defmacro --each-while (list pred &rest body)--each-while106,3304
(defun -each-while (list pred fn)-each-while121,3751
(defmacro --dotimes (num &rest body)--dotimes128,3993
(defun -dotimes (num fn)-dotimes139,4338
(defun -map (fn list)-map145,4536
(defmacro --map (form list)--map149,4663
(defmacro --reduce-from (form initial-value list)--reduce-from154,4793
(defun -reduce-from (fn initial-value list)-reduce-from161,4998
(defmacro --reduce (form list)--reduce173,5425
(defun -reduce (fn list)-reduce182,5689
(defun -reduce-r-from (fn initial-value list)-reduce-r-from197,6218
(defmacro --reduce-r-from (form initial-value list)--reduce-r-from209,6677
(defun -reduce-r (fn list)-reduce-r214,6886
(defmacro --reduce-r (form list)--reduce-r233,7553
(defmacro --filter (form list)--filter238,7713
(defun -filter (pred list)-filter246,7934
(defalias '-select '-filter)-select254,8119
(defalias '--select '--filter)--select255,8148
(defmacro --remove (form list)--remove257,8180
(defun -remove (pred list)-remove262,8310
(defalias '-reject '-remove)-reject268,8464
(defalias '--reject '--remove)--reject269,8493
(defun -remove-first (pred list)-remove-first271,8525
(defmacro --remove-first (form list)--remove-first285,8886
(defalias '-reject-first '-remove-first)-reject-first290,9041
(defalias '--reject-first '--remove-first)--reject-first291,9082
(defun -remove-last (pred list)-remove-last293,9126
(defmacro --remove-last (form list)--remove-last301,9330
(defalias '-reject-last '-remove-last)-reject-last306,9482
(defalias '--reject-last '--remove-last)--reject-last307,9521
(defun -remove-item (item list)-remove-item309,9563
(defmacro --keep (form list)--keep315,9710
(defun -keep (fn list)-keep324,9978
(defun -non-nil (list)-non-nil330,10197
(defmacro --map-indexed (form list)--map-indexed334,10286
(defun -map-indexed (fn list)-map-indexed343,10516
(defmacro --map-when (pred rep list)--map-when351,10789
(defun -map-when (pred rep list)-map-when359,11026
(defalias '-replace-where '-map-when)-replace-where369,11367
(defalias '--replace-where '--map-when)--replace-where370,11405
(defun -map-first (pred rep list)-map-first372,11446
(defmacro --map-first (pred rep list)--map-first384,11844
(defun -map-last (pred rep list)-map-last388,11993
(defmacro --map-last (pred rep list)--map-last394,12205
(defun -replace (old new list)-replace398,12351
(defun -replace-first (old new list)-replace-first406,12530
(defun -replace-last (old new list)-replace-last414,12728
(defmacro --mapcat (form list)--mapcat422,12922
(defun -mapcat (fn list)-mapcat427,13059
(defun -flatten (l)-flatten432,13227
(defmacro --iterate (form init n)--iterate448,13762
(defun -flatten-n (num list)-flatten-n453,13915
(defun -concat (&rest lists)-concat459,14075
(defalias '-copy 'copy-sequence-copy463,14214
(defun -splice (pred fun list)-splice466,14283
(defmacro --splice (pred form list)--splice484,14798
(defun -splice-list (pred new-list list)-splice-list488,14928
(defmacro --splice-list (pred new-list list)--splice-list494,15114
(defun -cons* (&rest args)-cons*498,15253
(defun -snoc (list elem &rest elements)-snoc506,15497
(defmacro --first (form list)--first514,15731
(defun -first (pred list)-first523,15962
(defalias '-find '-first)-find531,16175
(defalias '--find '--first)--find532,16201
(defmacro --some (form list)--some534,16230
(defun -some (pred list)-some543,16449
(defalias '-any '-some)-any549,16606
(defalias '--any '--some)--any550,16630
(defmacro --last (form list)--last552,16657
(defun -last (pred list)-last561,16871
(defalias '-first-item 'car-first-item565,16999
(defun -last-item (list)-last-item568,17089
(defun -butlast (list)-butlast572,17195
(defmacro --count (pred list)--count577,17352
(defun -count (pred list)-count585,17568
(defun ---truthy? (val)---truthy?589,17700
(defmacro --any? (form list)--any?592,17745
(defun -any? (pred list)-any?597,17877
(defalias '-some? '-any?)-some?603,18041
(defalias '--some? '--any?)--some?604,18067
(defalias '-any-p '-any?)-any-p605,18095
(defalias '--any-p '--any?)--any-p606,18121
(defalias '-some-p '-any?)-some-p607,18149
(defalias '--some-p '--any?)--some-p608,18176
(defmacro --all? (form list)--all?610,18206
(defun -all? (pred list)-all?618,18424
(defalias '-every? '-all?)-every?624,18590
(defalias '--every? '--all?)--every?625,18617
(defalias '-all-p '-all?)-all-p626,18646
(defalias '--all-p '--all?)--all-p627,18672
(defalias '-every-p '-all?)-every-p628,18700
(defalias '--every-p '--all?)--every-p629,18728
(defmacro --none? (form list)--none?631,18759
(defun -none? (pred list)-none?636,18885
(defalias '-none-p '-none?)-none-p642,19027
(defalias '--none-p '--none?)--none-p643,19055
(defmacro --only-some? (form list)--only-some?645,19086
(defun -only-some? (pred list)-only-some?655,19398
(defalias '-only-some-p '-only-some?)-only-some-p662,19698
(defalias '--only-some-p '--only-some?)--only-some-p663,19736
(defun -slice (list from &optional to step)-slice665,19777
(defun -take (n list)-take691,20619
(defun -take-last (n list)-take-last702,20888
(defalias '-drop 'nthcdr-drop708,21014
(defun -drop-last (n list)-drop-last713,21120
(defmacro --take-while (form list)--take-while720,21302
(defun -take-while (pred list)-take-while728,21530
(defmacro --drop-while (form list)--drop-while732,21698
(defun -drop-while (pred list)-drop-while741,21944
(defun -split-at (n list)-split-at745,22109
(defun -rotate (n list)-rotate754,22375
(defun -insert-at (n x list)-insert-at761,22619
(defun -replace-at (n x list)-replace-at768,22844
(defun -update-at (n func list)-update-at775,23074
(defmacro --update-at (n form list)--update-at782,23364
(defun -remove-at (n list)-remove-at787,23523
(defun -remove-at-indices (indices list)-remove-at-indices793,23696
(defmacro --split-with (pred list)--split-with809,24218
(defun -split-with (pred list)-split-with826,24689
(defmacro -split-on (item list)-split-on830,24877
(defmacro --split-when (form list)--split-when842,25208
(defun -split-when (fn list)-split-when847,25360
(defmacro --separate (form list)--separate865,25883
(defun -separate (pred list)-separate874,26172
(defun ---partition-all-in-steps-reversed (n step list)---partition-all-in-steps-reversed878,26335
(defun -partition-all-in-steps (n step list)-partition-all-in-steps888,26700
(defun -partition-in-steps (n step list)-partition-in-steps893,26954
(defun -partition-all (n list)-partition-all902,27347
(defun -partition (n list)-partition907,27539
(defmacro --partition-by (form list)--partition-by913,27766
(defun -partition-by (fn list)-partition-by940,28585
(defmacro --partition-by-header (form list)--partition-by-header944,28740
(defun -partition-by-header (fn list)-partition-by-header975,29711
(defmacro --group-by (form list)--group-by982,30006
(defun -group-by (fn list)-group-by1004,30558
(defun -interpose (sep list)-interpose1009,30737
(defun -interleave (&rest lists)-interleave1020,31028
(defmacro --zip-with (form list1 list2)--zip-with1028,31292
(defun -zip-with (fn list1 list2)-zip-with1047,31845
(defun -zip (&rest lists)-zip1057,32245
(defalias '-zip-pair '-zip)-zip-pair1078,33131
(defun -zip-fill (fill-value &rest lists)-zip-fill1080,33160
(defun -cycle (list)-cycle1086,33409
(defun -pad (fill-value &rest lists)-pad1092,33606
(defun -annotate (fn list)-annotate1099,33920
(defmacro --annotate (form list)--annotate1104,34108
(defun dash--table-carry (lists restore-lists &optional re)dash--table-carry1109,34254
(defun -table (fn &rest lists)-table1124,34691
(defun -table-flat (fn &rest lists)-table-flat1145,35433
(defun -partial (fn &rest args)-partial1174,36412
(defun -elem-index (elem list)-elem-index1181,36698
(defun -elem-indices (elem list)-elem-indices1187,36903
(defun -find-indices (pred list)-find-indices1192,37084
(defmacro --find-indices (form list)--find-indices1197,37297
(defun -find-index (pred list)-find-index1202,37455
(defmacro --find-index (form list)--find-index1210,37695
(defun -find-last-index (pred list)-find-last-index1215,37847
(defmacro --find-last-index (form list)--find-last-index1223,38097
(defun -select-by-indices (indices list)-select-by-indices1227,38232
(defun -select-columns (columns table)-select-columns1235,38462
(defun -select-column (column table)-select-column1247,38817
(defmacro -> (x &optional form &rest more)->1258,39154
(defmacro ->> (x &optional form &rest more)->>1270,39605
(defmacro --> (x form &rest more)-->1282,40037
(defmacro -some-> (x &optional form &rest more)-some->1293,40429
(defmacro -some->> (x &optional form &rest more)-some->>1302,40778
(defmacro -some--> (x &optional form &rest more)-some-->1311,41133
(defun -grade-up (comparator list)-grade-up1320,41488
(defun -grade-down (comparator list)-grade-down1330,41903
(defvar dash--source-counter 0dash--source-counter1340,42321
(defun dash--match-make-source-symbol ()dash--match-make-source-symbol1343,42399
(defun dash--match-ignore-place-p (symbol)dash--match-ignore-place-p1350,42665
(defun dash--match-cons-skip-cdr (skip-cdr source)dash--match-cons-skip-cdr1355,42840
(defun dash--match-cons-get-car (skip-cdr source)dash--match-cons-get-car1364,43132
(defun dash--match-cons-get-cdr (skip-cdr source)dash--match-cons-get-cdr1374,43370
(defun dash--match-cons (match-form source)dash--match-cons1384,43602
(defun dash--match-cons-1 (match-form source &optional props)dash--match-cons-11408,44550
(defun dash--vector-tail (seq start)dash--vector-tail1442,45980
(defun dash--match-vector (match-form source)dash--match-vector1453,46302
(defun dash--match-vector-1 (match-form source)dash--match-vector-11472,47241
(defun dash--match-kv (match-form source)dash--match-kv1512,48711
(defun dash--match-kv-1 (match-form source type)dash--match-kv-11527,49360
(defun dash--match-symbol (match-form source)dash--match-symbol1557,50640
(defun dash--match (match-form source)dash--match1563,50797
(defmacro -let* (varlist &rest body)-let*1597,52017
(defmacro -let (varlist &rest body)-let1615,52688
(defmacro -lambda (match-form &rest body)-lambda1755,57632
(defmacro -if-let* (vars-vals then &rest else)-if-let*1788,58934
(defmacro -if-let (var-val then &rest else)-if-let1807,59582
(defmacro --if-let (val then &rest else)--if-let1816,59892
(defmacro -when-let* (vars-vals &rest body)-when-let*1823,60111
(defmacro -when-let (var-val &rest body)-when-let1835,60543
(defmacro --when-let (val &rest body)--when-let1844,60830
(defvar -compare-fn nil-compare-fn1851,61025
(defun -distinct (list)-distinct1857,61243
(defalias '-uniq '-distinct)-uniq1867,61528
(defun -union (list list2)-union1869,61558
(defun -intersection (list list2)-intersection1888,62448
(defun -difference (list list2)-difference1894,62701
(defun -contains? (list element)-contains?1900,62941
(defalias '-contains-p '-contains?)-contains-p1920,63477
(defun -same-items? (list list2)-same-items?1922,63514
(defalias '-same-items-p '-same-items?)-same-items-p1934,63844
(defun -is-prefix? (prefix list)-is-prefix?1936,63885
(defun -is-suffix? (suffix list)-is-suffix?1944,64070
(defun -is-infix? (infix list)-is-infix?1950,64224
(defalias '-is-prefix-p '-is-prefix?)-is-prefix-p1962,64480
(defalias '-is-suffix-p '-is-suffix?)-is-suffix-p1963,64518
(defalias '-is-infix-p '-is-infix?)-is-infix-p1964,64556
(defun -sort (comparator list)-sort1966,64593
(defmacro --sort (form list)--sort1973,64916
(defun -list (&rest args)-list1978,65053
(defun -repeat (n x)-repeat1986,65275
(defun -sum (list)-sum1993,65427
(defun -product (list)-product1997,65494
(defun -max (list)-max2001,65569
(defun -min (list)-min2005,65672
(defun -max-by (comparator list)-max-by2009,65776
(defun -min-by (comparator list)-min-by2017,66075
(defmacro --max-by (form list)--max-by2025,66371
(defmacro --min-by (form list)--min-by2032,66589
(defun -iterate (fun init n)-iterate2039,66807
(defun -fix (fn list)-fix2053,67136
(defmacro --fix (form list)--fix2063,67415
(defun -unfold (fun seed)-unfold2067,67511
(defmacro --unfold (form seed)--unfold2083,68032
(defun -cons-pair? (con)-cons-pair?2088,68172
(defun -cons-to-list (con)-cons-to-list2094,68334
(defun -value-to-list (val)-value-to-list2098,68473
(defun -tree-mapreduce-from (fn folder init-value tree)-tree-mapreduce-from2109,68758
(defmacro --tree-mapreduce-from (form folder init-value tree)--tree-mapreduce-from2126,69436
(defun -tree-mapreduce (fn folder tree)-tree-mapreduce2131,69678
(defmacro --tree-mapreduce (form folder tree)--tree-mapreduce2148,70303
(defun -tree-map (fn tree)-tree-map2153,70502
(defmacro --tree-map (form tree)--tree-map2162,70767
(defun -tree-reduce-from (fn init-value tree)-tree-reduce-from2167,70910
(defmacro --tree-reduce-from (form init-value tree)--tree-reduce-from2183,71468
(defun -tree-reduce (fn tree)-tree-reduce2188,71667
(defmacro --tree-reduce (form tree)--tree-reduce2203,72174
(defun -tree-map-nodes (pred fun tree)-tree-map-nodes2208,72330
(defmacro --tree-map-nodes (pred form tree)--tree-map-nodes2221,72752
(defun -tree-seq (branch children tree)-tree-seq2225,72906
(defmacro --tree-seq (branch children tree)--tree-seq2240,73444
(defun -clone (list)-clone2244,73592
(defun dash-enable-font-lock ()dash-enable-font-lock2251,73841

elpa/dash-functional-20160615.1351/dash-functional-autoloads.el,0

elpa/dash-functional-20160615.1351/dash-functional-pkg.el,200
(define-package "dash-functional" "20160615.1351" "Collection of useful combinators for Emacs Lisp" '((dash "2.0.0") (emacs "24")) :keywords '("lisp" "functions" "combinators"))"dash-functional"1,0

elpa/dash-functional-20160615.1351/dash-functional.el,776
(defun -partial (fn &rest args)-partial35,1214
(defun -rpartial (fn &rest args)-rpartial42,1502
(defun -juxt (&rest fns)-juxt49,1828
(defun -compose (&rest fns)-compose56,2146
(defun -applify (fn)-applify66,2557
(defun -on (operator transformer)-on71,2713
(defun -flip (func)-flip79,3033
(defun -const (c)-const85,3189
(defmacro -cut (&rest params)-cut91,3327
(defun -not (pred)-not105,3858
(defun -orfn (&rest preds)-orfn111,4046
(defun -andfn (&rest preds)-andfn119,4317
(defun -iteratefn (fn n)-iteratefn127,4580
(defun -counter (&optional beg end inc)-counter142,5050
(defvar -fixfn-max-iterations 1000-fixfn-max-iterations158,5592
(defun -fixfn (fn &optional equal-test halt-test)-fixfn162,5726
(defun -prodfn (&rest fns)-prodfn202,7342

elpa/diminish-20151215.915/diminish-autoloads.el,0

elpa/diminish-20151215.915/diminish-pkg.el,226
(define-package "diminish" "20151215.915" "Diminished modes are minor modes with no modeline display" 'nil :url "https://github.com/myrjola/diminish.el" :keywords '("extensions" "diminish" "minor" "codeprose"))"diminish"1,0

elpa/diminish-20151215.915/diminish.el,469
(defvar diminish-must-not-copy-minor-mode-alist nildiminish-must-not-copy-minor-mode-alist111,4992
(defvar diminished-mode-alist nildiminished-mode-alist122,5548
(defvar diminish-history-symbols nildiminish-history-symbols125,5653
(defvar diminish-history-names nildiminish-history-names128,5745
(defun diminish (mode &optional to-what)diminish155,7393
(defun diminish-undo (mode)diminish-undo206,10118
(defun diminished-modes ()diminished-modes244,12073

elpa/dired+-20160528.748/dired+-autoloads.el,1345
(defvar diff-switches "-c" "\diff-switches9,250
(defvar diredp-auto-focus-frame-for-thumbnail-tooltip-flag nil "\diredp-auto-focus-frame-for-thumbnail-tooltip-flag14,399
(defvar diredp-compressed-extensions '(".tar" ".taz" ".tgz" ".arj" ".lzh" ".zip" ".z" ".Z" ".gz" ".bz2") "\diredp-compressed-extensions25,938
(defvar diredp-dwim-any-frame-flag pop-up-frames "\diredp-dwim-any-frame-flag30,1164
(defvar diredp-ignore-compressed-flag t "\diredp-ignore-compressed-flag40,2702
(defvar diredp-image-preview-in-tooltip (or (and (boundp 'image-dired-thumb-size) image-dired-thumb-size) 100) "\diredp-image-preview-in-tooltip48,3034
(defvar diredp-image-show-this-file-use-frame-flag t "\diredp-image-show-this-file-use-frame-flag64,3689
(defvar diredp-prompt-for-bookmark-prefix-flag nil "\diredp-prompt-for-bookmark-prefix-flag78,4302
(defvar diredp-w32-local-drives '(("C:" "Local disk")) "\diredp-w32-local-drives83,4491
(defvar diredp-wrap-around-flag t "\diredp-wrap-around-flag90,4783
(defalias 'toggle-diredp-find-file-reuse-dir 'diredp-toggle-find-file-reuse-dir)toggle-diredp-find-file-reuse-dir1206,49358
(defalias 'diredp-show-metadata 'diredp-describe-autofile)diredp-show-metadata1692,66913
(defalias 'diredp-show-metadata-for-marked 'diredp-describe-marked-autofiles)diredp-show-metadata-for-marked1705,67321

elpa/dired+-20160528.748/dired+-pkg.el,183
(define-package "dired+" "20160528.748" "Extensions to Dired." 'nil :url "http://www.emacswiki.org/dired+.el" :keywords '("unix" "mouse" "directories" "diredp" "dired"))"dired+"1,0

elpa/dired+-20160528.748/dired+.el,73953
(defvar bmkp-copied-tags)                         ; In `bookmark+-1.el'bmkp-copied-tags1564,84129
(defvar bmkp-current-bookmark-file)               ; In `bookmark+-1.el'bmkp-current-bookmark-file1565,84201
(defvar bookmark-default-file)                    ; In `bookmark.el'bookmark-default-file1566,84273
(defvar compilation-current-error)                ; In `compile.el'compilation-current-error1567,84342
(defvar delete-by-moving-to-trash)                ; Built-in, Emacs 23+delete-by-moving-to-trash1568,84410
(defvar dired-details-state)                      ; In `dired-details+.el'dired-details-state1569,84482
(defvar dired-keep-marker-hardlink)               ; In `dired-x.el'dired-keep-marker-hardlink1570,84557
(defvar dired-recursive-deletes)                  ; In `dired.el', Emacs 22+dired-recursive-deletes1571,84625
(defvar dired-switches-alist)                     ; In `dired.el'dired-switches-alist1572,84702
(defvar dired-subdir-switches)                    ; In `dired.el'dired-subdir-switches1573,84768
(defvar dired-touch-program)                      ; Emacs 22+dired-touch-program1574,84834
(defvar dired-use-ls-dired)                       ; Emacs 22+dired-use-ls-dired1575,84896
(defvar diredp-hide-details-initially-flag)       ; Here, Emacs 24.4+diredp-hide-details-initially-flag1576,84958
(defvar diredp-hide-details-last-state)           ; Here, Emacs 24.4+diredp-hide-details-last-state1577,85028
(defvar diredp-hide-details-propagate-flag)       ; Here, Emacs 24.4+diredp-hide-details-propagate-flag1578,85098
(defvar diredp-hide-details-toggled)              ; Here, Emacs 24.4+diredp-hide-details-toggled1579,85168
(defvar diredp-menu-bar-immediate-bookmarks-menu) ; Here, if Bookmark+ is availablediredp-menu-bar-immediate-bookmarks-menu1580,85238
(defvar filesets-data)                            ; In `filesets.el'filesets-data1581,85322
(defvar grep-use-null-device)                     ; In `grep.el'grep-use-null-device1582,85391
(defvar header-line-format)                       ; Emacs 22+header-line-format1583,85456
(defvar icicle-file-sort)                         ; In `icicles-opt.el'icicle-file-sort1584,85518
(defvar icicle-ignored-directories)               ; In `icicles-opt.el'icicle-ignored-directories1585,85590
(defvar icicle-sort-comparer)                     ; In `icicles-opt.el'icicle-sort-comparer1586,85662
(defvar image-dired-display-image-buffer)         ; In `image-dired.el'image-dired-display-image-buffer1587,85734
(defvar image-dired-line-up-method)               ; In `image-dired.el'image-dired-line-up-method1588,85806
(defvar image-dired-main-image-directory)         ; In `image-dired.el'image-dired-main-image-directory1589,85878
(defvar image-dired-thumbnail-buffer)             ; In `image-dired.el'image-dired-thumbnail-buffer1590,85950
(defvar image-dired-thumb-height)                 ; In `image-dired.el'image-dired-thumb-height1591,86022
(defvar image-dired-thumb-width)                  ; In `image-dired.el'image-dired-thumb-width1592,86094
(defvar image-dired-widget-list)                  ; In `image-dired.el'image-dired-widget-list1593,86166
(defvar minibuffer-default-add-function)          ; In `simple.el', Emacs 23+minibuffer-default-add-function1594,86238
(defvar mouse3-dired-function)                    ; In `mouse3.el'mouse3-dired-function1595,86316
(defvar read-file-name-completion-ignore-case)    ; In `minibuffer.el', Emacs 23+.  In C code, Emacs 22.read-file-name-completion-ignore-case1596,86383
(defvar recentf-list)                             ; In `recentf.el'recentf-list1597,86488
(defvar tooltip-mode)                             ; In `tooltip.el'tooltip-mode1598,86556
(defvar vc-directory-exclusion-list)              ; In `vc'vc-directory-exclusion-list1599,86624
(defvar w32-browser-wait-time)                    ; In `w32-browser.el'w32-browser-wait-time1600,86684
(defcustom diff-switches "-c"diff-switches1612,87024
(defcustom diredp-auto-focus-frame-for-thumbnail-tooltip-flag nildiredp-auto-focus-frame-for-thumbnail-tooltip-flag1618,87216
(defcustom diredp-compressed-extensions '(".tar" ".taz" ".tgz" ".arj" ".lzh" ".zip" ".z" ".Z" ".gz" ".bz2")diredp-compressed-extensions1629,87727
(defcustom diredp-dwim-any-frame-flag pop-up-framesdiredp-dwim-any-frame-flag1634,87955
(defcustom diredp-ignore-compressed-flag tdiredp-ignore-compressed-flag1686,90141
(defcustom diredp-image-preview-in-tooltip (or (and (boundp 'image-dired-thumb-size)  image-dired-thumb-size)diredp-image-preview-in-tooltip1694,90466
(defcustom diredp-image-show-this-file-use-frame-flag tdiredp-image-show-this-file-use-frame-flag1716,91442
(defcustom diredp-prompt-for-bookmark-prefix-flag nildiredp-prompt-for-bookmark-prefix-flag1730,92035
(defcustom diredp-w32-local-drives '(("C:" "Local disk"))diredp-w32-local-drives1735,92208
(defcustom diredp-wrap-around-flag tdiredp-wrap-around-flag1745,92621
(defvar diredp-re-no-dot "^\\([^.]\\|\\.\\([^.]\\|\\..\\)\\).*"diredp-re-no-dot1759,93261
(defvar diredp-w32-drives-mode-map (let ((map  (make-sparse-keymap)))diredp-w32-drives-mode-map1762,93381
(defmacro dired-mark-if (predicate msg)dired-mark-if1784,94387
(defun diredp-get-file-or-dir-name (arg)diredp-get-file-or-dir-name1814,95867
(defmacro dired-map-over-marks (body arg &optional show-progressdired-map-over-marks1836,96616
(defmacro diredp-with-help-window (buffer &rest body)diredp-with-help-window1918,100990
(defun diredp-nonempty-region-p ()diredp-nonempty-region-p1954,102394
(defun diredp-get-image-filename (&optional localp no-error-if-not-filep)diredp-get-image-filename1958,102563
(defun diredp-root-directory-p (file)diredp-root-directory-p1976,103433
(defun diredp-parent-dir (file &optional relativep)diredp-parent-dir1986,103977
(defun diredp-ensure-mode ()diredp-ensure-mode2003,104827
(defun diredp-ensure-bookmark+ ()diredp-ensure-bookmark+2007,104979
(defun dired-get-marked-files (&optional localp arg filter distinguish-one-marked)dired-get-marked-files2026,105645
(defun dired-map-over-marks-check (fun arg op-symbol &optional show-progress)dired-map-over-marks-check2062,107421
(defun dired-read-dir-and-switches (string &optional read-extra-files-p dired-buffer)dired-read-dir-and-switches2184,113891
(defadvice dired (before diredp-doc-cons-arg activate)dired2364,126068
(defadvice dired-other-window (before diredp-doc-cons-arg activate)dired-other-window2426,128921
(defadvice dired-other-frame (before diredp-doc-cons-arg activate)dired-other-frame2437,129361
(defun dired-switches-escape-p (switches)dired-switches-escape-p2449,129880
(defun diredp-image-dired-required-msg ()diredp-image-dired-required-msg2576,136804
(defun diredp-image-dired-create-thumb (file &optional arg)diredp-image-dired-create-thumb2584,137193
(defun image-dired-dired-insert-marked-thumbs () ; Bound to `C-t C-t' (Emacs 22-23)image-dired-dired-insert-marked-thumbs2611,138726
(defun image-dired-dired-toggle-marked-thumbs (&optional arg) ; Bound to `C-t C-t' (Emacs 24+)image-dired-dired-toggle-marked-thumbs2638,140048
(defun diredp-image-dired-comment-file ()diredp-image-dired-comment-file2667,141583
(defun diredp-image-dired-tag-file ()diredp-image-dired-tag-file2674,141868
(defun diredp-image-dired-delete-tag ()diredp-image-dired-delete-tag2682,142218
(defun diredp-image-dired-display-thumb (&optional append)diredp-image-dired-display-thumb2689,142526
(defun diredp-image-dired-copy-with-exif-name ()diredp-image-dired-copy-with-exif-name2714,144046
(defun diredp-image-dired-edit-comment-and-tags ()diredp-image-dired-edit-comment-and-tags2728,144777
(defun diredp-do-display-images (&optional arg)diredp-do-display-images2775,147105
(defun diredp-display-image ()diredp-display-image2789,147856
(defun diredp-image-show-this-file (&optional arg)diredp-image-show-this-file2805,148631
(define-key dired-mode-map [menu-bar] nil)dired-mode-map2847,150832
(define-key dired-mode-map [menu-bar edit] 'undefined)dired-mode-map2849,150923
(defvar diredp-menu-bar-immediate-menu (make-sparse-keymap "Single"))diredp-menu-bar-immediate-menu2856,151056
(define-key dired-mode-map [menu-bar immediate] (cons "Single" diredp-menu-bar-immediate-menu))dired-mode-map2857,151126
(define-key diredp-menu-bar-immediate-menu [separator-describe] '("--")) ; ---------------------diredp-menu-bar-immediate-menu2867,151647
(define-key diredp-menu-bar-immediate-menu [chmod]diredp-menu-bar-immediate-menu2877,152149
(define-key diredp-menu-bar-immediate-menu [separator-change] '("--")) ; -----------------------diredp-menu-bar-immediate-menu2884,152558
(define-key diredp-menu-bar-immediate-menu [load]diredp-menu-bar-immediate-menu2886,152656
(define-key diredp-menu-bar-immediate-menu [compile]diredp-menu-bar-immediate-menu2889,152789
(define-key diredp-menu-bar-immediate-menu [diredp-async-shell-command-this-file]diredp-menu-bar-immediate-menu2892,152949
(define-key diredp-menu-bar-immediate-menu [command]diredp-menu-bar-immediate-menu2895,153181
(define-key diredp-menu-bar-immediate-menu [compress]diredp-menu-bar-immediate-menu2898,153350
(define-key diredp-menu-bar-immediate-menu [grep]diredp-menu-bar-immediate-menu2901,153515
(define-key diredp-menu-bar-immediate-menu [print]diredp-menu-bar-immediate-menu2903,153641
(define-key diredp-menu-bar-immediate-menu [separator-misc] '("--")) ; -------------------------diredp-menu-bar-immediate-menu2911,154043
(define-key diredp-menu-bar-immediate-menu [delete]diredp-menu-bar-immediate-menu2913,154141
(define-key diredp-menu-bar-immediate-menu [separator-delete] '("--")) ; -----------------------diredp-menu-bar-immediate-menu2915,154272
(define-key diredp-menu-bar-immediate-menu [hardlink]diredp-menu-bar-immediate-menu2917,154370
(define-key diredp-menu-bar-immediate-menu [copy]diredp-menu-bar-immediate-menu2930,155189
(define-key diredp-menu-bar-immediate-menu [rename]diredp-menu-bar-immediate-menu2932,155318
(define-key diredp-menu-bar-immediate-menu [separator-link] '("--")) ; -------------------------diredp-menu-bar-immediate-menu2935,155494
(define-key diredp-menu-bar-immediate-menu [downcase]diredp-menu-bar-immediate-menu2937,155592
(define-key diredp-menu-bar-immediate-menu [upcase]diredp-menu-bar-immediate-menu2942,155918
(define-key diredp-menu-bar-immediate-menu [capitalize]diredp-menu-bar-immediate-menu2946,156156
(define-key diredp-menu-bar-immediate-menu [separator-rename] '("--")) ; -----------------------diredp-menu-bar-immediate-menu2949,156330
(define-key diredp-menu-bar-immediate-menu [backup-diff]diredp-menu-bar-immediate-menu2951,156428
(define-key diredp-menu-bar-immediate-menu [diff]diredp-menu-bar-immediate-menu2954,156593
(define-key diredp-menu-bar-immediate-menu [ediff]diredp-menu-bar-immediate-menu2957,156746
(define-key diredp-menu-bar-immediate-menu [separator-diff] '("--")) ; -------------------------diredp-menu-bar-immediate-menu2959,156888
(define-key diredp-menu-bar-immediate-menu [diredp-kill-this-tree]diredp-menu-bar-immediate-menu2961,156986
(define-key diredp-menu-bar-immediate-menu [dired-kill-subdir]diredp-menu-bar-immediate-menu2967,157355
(define-key diredp-menu-bar-immediate-menu [diredp-dired-this-subdir]diredp-menu-bar-immediate-menu2971,157638
(define-key diredp-menu-bar-immediate-menu [insert-subdir]diredp-menu-bar-immediate-menu2978,158161
(define-key diredp-menu-bar-immediate-menu [goto-subdir]diredp-menu-bar-immediate-menu2984,158513
(define-key diredp-menu-bar-immediate-menu [separator-subdir] '("--" ; ------------------------diredp-menu-bar-immediate-menu2990,158870
(define-key diredp-menu-bar-immediate-menu [view]diredp-menu-bar-immediate-menu2995,159207
(define-key diredp-menu-bar-immediate-menu [display]diredp-menu-bar-immediate-menu2998,159361
(define-key diredp-menu-bar-immediate-menu [find-file-other-frame]diredp-menu-bar-immediate-menu3010,159990
(define-key diredp-menu-bar-immediate-menu [find-file-other-window]diredp-menu-bar-immediate-menu3013,160177
(define-key diredp-menu-bar-immediate-menu [find-file]diredp-menu-bar-immediate-menu3016,160367
(defvar diredp-menu-bar-immediate-image-menu (make-sparse-keymap "Image"))diredp-menu-bar-immediate-image-menu3022,160522
(defalias 'diredp-menu-bar-immediate-image-menu diredp-menu-bar-immediate-image-menu)diredp-menu-bar-immediate-image-menu3023,160597
(define-key diredp-menu-bar-immediate-menu [image]diredp-menu-bar-immediate-menu3024,160683
(define-key diredp-menu-bar-immediate-image-menu [diredp-image-dired-display-thumb]diredp-menu-bar-immediate-image-menu3029,160947
(define-key diredp-menu-bar-immediate-image-menu [diredp-image-dired-create-thumb]diredp-menu-bar-immediate-image-menu3032,161165
(define-key diredp-menu-bar-immediate-image-menu [diredp-image-dired-edit-comment-and-tags]diredp-menu-bar-immediate-image-menu3035,161372
(define-key diredp-menu-bar-immediate-image-menu [diredp-image-dired-delete-tag]diredp-menu-bar-immediate-image-menu3038,161602
(define-key diredp-menu-bar-immediate-image-menu [diredp-image-dired-tag-file]diredp-menu-bar-immediate-image-menu3041,161812
(define-key diredp-menu-bar-immediate-image-menu [diredp-image-dired-comment-file]diredp-menu-bar-immediate-image-menu3044,161989
(define-key diredp-menu-bar-immediate-image-menu [diredp-image-dired-copy-with-exif-name]diredp-menu-bar-immediate-image-menu3047,162182
(define-key diredp-menu-bar-immediate-image-menu [image-dired-dired-display-external]diredp-menu-bar-immediate-image-menu3050,162416
(define-key diredp-menu-bar-immediate-image-menu [image-dired-dired-display-image]diredp-menu-bar-immediate-image-menu3053,162622
(define-key diredp-menu-bar-immediate-image-menu [diredp-image-show-this-file]diredp-menu-bar-immediate-image-menu3056,162841
(define-key diredp-menu-bar-immediate-image-menu [dired-find-file]diredp-menu-bar-immediate-image-menu3059,163065
(defvar diredp-menu-bar-operate-menu (make-sparse-keymap "Multiple"))diredp-menu-bar-operate-menu3142,167690
(define-key dired-mode-map [menu-bar operate] (cons "Multiple" diredp-menu-bar-operate-menu))dired-mode-map3143,167760
(define-key diredp-menu-bar-operate-menu [diredp-describe-marked-autofiles]diredp-menu-bar-operate-menu3145,167855
(define-key diredp-menu-bar-operate-menu [separator-describe] '("--")) ; -----------------------diredp-menu-bar-operate-menu3149,168112
(define-key diredp-menu-bar-operate-menu [chmod]diredp-menu-bar-operate-menu3159,168606
(define-key diredp-menu-bar-operate-menu [separator-change] '("--")) ; -------------------------diredp-menu-bar-operate-menu3166,168995
(define-key diredp-menu-bar-operate-menu [load]diredp-menu-bar-operate-menu3168,169093
(define-key diredp-menu-bar-operate-menu [compile]diredp-menu-bar-operate-menu3170,169215
(define-key diredp-menu-bar-operate-menu [command]diredp-menu-bar-operate-menu3176,169630
(define-key diredp-menu-bar-operate-menu [compress]diredp-menu-bar-operate-menu3179,169791
(define-key diredp-menu-bar-operate-menu [diredp-do-apply-function]diredp-menu-bar-operate-menu3181,169940
(define-key diredp-menu-bar-operate-menu [print]diredp-menu-bar-operate-menu3184,170170
(define-key diredp-menu-bar-operate-menu [separator-misc] '("--")) ; ---------------------------diredp-menu-bar-operate-menu3194,170753
(define-key diredp-menu-bar-operate-menu [delete-flagged]diredp-menu-bar-operate-menu3196,170851
(define-key diredp-menu-bar-operate-menu [delete]diredp-menu-bar-operate-menu3199,171020
(define-key diredp-menu-bar-operate-menu [separator-delete] '("--")) ; -------------------------diredp-menu-bar-operate-menu3202,171204
(define-key diredp-menu-bar-operate-menu [hardlink]diredp-menu-bar-operate-menu3204,171302
(define-key diredp-menu-bar-operate-menu [copy]diredp-menu-bar-operate-menu3218,172119
(define-key diredp-menu-bar-operate-menu [rename]diredp-menu-bar-operate-menu3220,172256
(define-key diredp-menu-bar-operate-menu [separator-rename] '("--")) ; -------------------------diredp-menu-bar-operate-menu3222,172400
(define-key diredp-menu-bar-operate-menu [capitalize]diredp-menu-bar-operate-menu3224,172498
(define-key diredp-menu-bar-operate-menu [downcase]diredp-menu-bar-operate-menu3227,172667
(define-key diredp-menu-bar-operate-menu [upcase]diredp-menu-bar-operate-menu3231,172893
(define-key diredp-menu-bar-operate-menu [separator-lettercase] '("--")) ; ---------------------diredp-menu-bar-operate-menu3235,173113
(define-key diredp-menu-bar-operate-menu [diredp-list-marked]diredp-menu-bar-operate-menu3241,173456
(define-key diredp-menu-bar-operate-menu [diredp-insert-subdirs]diredp-menu-bar-operate-menu3244,173656
(define-key diredp-menu-bar-operate-menu [diredp-marked-other-window]diredp-menu-bar-operate-menu3247,173857
(define-key diredp-menu-bar-operate-menu [diredp-marked]diredp-menu-bar-operate-menu3253,174280
(defvar diredp-menu-bar-images-menu (make-sparse-keymap "Images"))diredp-menu-bar-images-menu3272,175192
(defalias 'diredp-menu-bar-images-menu diredp-menu-bar-images-menu)diredp-menu-bar-images-menu3273,175259
(define-key diredp-menu-bar-operate-menu [images]diredp-menu-bar-operate-menu3274,175327
(define-key diredp-menu-bar-operate-menu [image-dired-delete-tag] nil)diredp-menu-bar-operate-menu3279,175523
(define-key diredp-menu-bar-operate-menu [image-dired-tag-files] nil)diredp-menu-bar-operate-menu3280,175594
(define-key diredp-menu-bar-operate-menu [image-dired-dired-comment-files] nil)diredp-menu-bar-operate-menu3281,175664
(define-key diredp-menu-bar-operate-menu [image-dired-display-thumbs] nil)diredp-menu-bar-operate-menu3282,175744
(define-key diredp-menu-bar-images-menu [image-dired-delete-tag]diredp-menu-bar-images-menu3285,175863
(define-key diredp-menu-bar-images-menu [image-dired-tag-files]diredp-menu-bar-images-menu3288,176030
(define-key diredp-menu-bar-images-menu [image-dired-dired-comment-files]diredp-menu-bar-images-menu3291,176189
(define-key diredp-menu-bar-images-menu [image-dired-display-thumbs]diredp-menu-bar-images-menu3294,176374
(define-key diredp-menu-bar-images-menu [diredp-do-display-images]diredp-menu-bar-images-menu3297,176561
(defvar diredp-menu-bar-operate-search-menu (make-sparse-keymap "Search"))diredp-menu-bar-operate-search-menu3328,178016
(define-key diredp-menu-bar-operate-menu [search]diredp-menu-bar-operate-menu3329,178091
(define-key diredp-menu-bar-operate-search-menu [query-replace]diredp-menu-bar-operate-search-menu3338,178617
(define-key diredp-menu-bar-operate-search-menu [search]diredp-menu-bar-operate-search-menu3343,178888
(define-key diredp-menu-bar-operate-search-menu [grep]diredp-menu-bar-operate-search-menu3345,179034
(defvar diredp-menu-bar-operate-bookmarks-menu (make-sparse-keymap "Bookmark"))diredp-menu-bar-operate-bookmarks-menu3351,179216
(define-key diredp-menu-bar-operate-menu [bookmark]diredp-menu-bar-operate-menu3352,179296
(define-key diredp-menu-bar-operate-bookmarks-menudiredp-menu-bar-operate-bookmarks-menu3376,180759
(define-key diredp-menu-bar-operate-bookmarks-menudiredp-menu-bar-operate-bookmarks-menu3381,181069
(define-key diredp-menu-bar-operate-bookmarks-menu [diredp-do-bookmark-dirs-recursive]diredp-menu-bar-operate-bookmarks-menu3386,181398
(define-key diredp-menu-bar-operate-bookmarks-menu [diredp-do-bookmark-recursive]diredp-menu-bar-operate-bookmarks-menu3389,181666
(define-key diredp-menu-bar-operate-bookmarks-menu [separator-book-1] '("--")) ; ---------------diredp-menu-bar-operate-bookmarks-menu3392,181897
(define-key diredp-menu-bar-operate-bookmarks-menu [diredp-do-bookmark-in-bookmark-file]diredp-menu-bar-operate-bookmarks-menu3394,181995
(define-key diredp-menu-bar-operate-bookmarks-menu [diredp-set-bookmark-file-bookmark-for-marked]diredp-menu-bar-operate-bookmarks-menu3397,182245
(define-key diredp-menu-bar-operate-bookmarks-menu [diredp-do-bookmark]diredp-menu-bar-operate-bookmarks-menu3400,182520
(defvar diredp-menu-bar-operate-recursive-menu (make-sparse-keymap "Marked Here and Below"))diredp-menu-bar-operate-recursive-menu3406,182736
(define-key diredp-menu-bar-operate-menu [operate-recursive]diredp-menu-bar-operate-menu3407,182829
(define-key diredp-menu-bar-operate-recursive-menu [chmod]diredp-menu-bar-operate-recursive-menu3419,183463
(define-key diredp-menu-bar-operate-recursive-menu [separator-change] '("--")) ; ----------------diredp-menu-bar-operate-recursive-menu3426,183941
(define-key diredp-menu-bar-operate-recursive-menu [diredp-do-shell-command-recursive]diredp-menu-bar-operate-recursive-menu3432,184376
(define-key diredp-menu-bar-operate-recursive-menu [diredp-do-apply-function-recursive]diredp-menu-bar-operate-recursive-menu3435,184621
(define-key diredp-menu-bar-operate-recursive-menu [diredp-do-print-recursive]diredp-menu-bar-operate-recursive-menu3438,184878
(define-key diredp-menu-bar-operate-recursive-menu [separator-misc] '("--")) ; ------------------diredp-menu-bar-operate-recursive-menu3441,185084
(define-key diredp-menu-bar-operate-recursive-menu [diredp-do-delete-recursive]diredp-menu-bar-operate-recursive-menu3443,185183
(define-key diredp-menu-bar-operate-recursive-menu [separator-delete] '("--")) ; ----------------diredp-menu-bar-operate-recursive-menu3446,185415
(define-key diredp-menu-bar-operate-recursive-menu [diredp-do-hardlink-recursive]diredp-menu-bar-operate-recursive-menu3448,185514
(define-key diredp-menu-bar-operate-recursive-menu [diredp-do-copy-recursive]diredp-menu-bar-operate-recursive-menu3462,186572
(define-key diredp-menu-bar-operate-recursive-menu [diredp-do-move-recursive]diredp-menu-bar-operate-recursive-menu3465,186789
(define-key diredp-menu-bar-operate-recursive-menu [separator-copy-move] '("--")) ; -------------diredp-menu-bar-operate-recursive-menu3468,187006
(define-key diredp-menu-bar-operate-recursive-menu [diredp-capitalize-recursive]diredp-menu-bar-operate-recursive-menu3470,187105
(define-key diredp-menu-bar-operate-recursive-menu [diredp-downcase-recursive]diredp-menu-bar-operate-recursive-menu3474,187406
(define-key diredp-menu-bar-operate-recursive-menu [diredp-upcase-recursive]diredp-menu-bar-operate-recursive-menu3478,187700
(define-key diredp-menu-bar-operate-recursive-menu [separator-lettercase] '("--")) ; ------------diredp-menu-bar-operate-recursive-menu3482,187988
(define-key diredp-menu-bar-operate-recursive-menu [diredp-list-marked-recursive]diredp-menu-bar-operate-recursive-menu3484,188087
(define-key diredp-menu-bar-operate-recursive-menu [diredp-copy-filename-as-kill-recursive]diredp-menu-bar-operate-recursive-menu3487,188312
(define-key diredp-menu-bar-operate-recursive-menu [diredp-insert-subdirs-recursive]diredp-menu-bar-operate-recursive-menu3490,188574
(define-key diredp-menu-bar-operate-recursive-menu [separator-dirs] '("--")) ; ------------------diredp-menu-bar-operate-recursive-menu3493,188791
(define-key diredp-menu-bar-operate-recursive-menu [diredp-marked-recursive-other-window]diredp-menu-bar-operate-recursive-menu3495,188890
(define-key diredp-menu-bar-operate-recursive-menu [diredp-marked-recursive]diredp-menu-bar-operate-recursive-menu3498,189162
(define-key diredp-menu-bar-operate-recursive-menu [diredp-do-find-marked-files-recursive]diredp-menu-bar-operate-recursive-menu3506,189701
(defvar diredp-menu-bar-images-recursive-menu (make-sparse-keymap "Images"))diredp-menu-bar-images-recursive-menu3513,189999
(defalias 'diredp-menu-bar-images-recursive-menu diredp-menu-bar-images-recursive-menu)diredp-menu-bar-images-recursive-menu3514,190076
(define-key diredp-menu-bar-operate-recursive-menu [images]diredp-menu-bar-operate-recursive-menu3515,190164
(define-key diredp-menu-bar-images-recursive-menu [diredp-image-dired-delete-tag-recursive]diredp-menu-bar-images-recursive-menu3518,190333
(define-key diredp-menu-bar-images-recursive-menu [diredp-image-dired-tag-files-recursive]diredp-menu-bar-images-recursive-menu3521,190596
(define-key diredp-menu-bar-images-recursive-menu [diredp-image-dired-comment-files-recursive]diredp-menu-bar-images-recursive-menu3524,190848
(define-key diredp-menu-bar-images-recursive-menu [diredp-image-dired-display-thumbs-recursive]diredp-menu-bar-images-recursive-menu3527,191106
(defvar diredp-menu-bar-search-recursive-menu (make-sparse-keymap "Search"))diredp-menu-bar-search-recursive-menu3554,192620
(define-key diredp-menu-bar-operate-recursive-menu [search]diredp-menu-bar-operate-recursive-menu3555,192697
(define-key diredp-menu-bar-search-recursive-menu [diredp-do-query-replace-regexp-recursive]diredp-menu-bar-search-recursive-menu3564,193356
(define-key diredp-menu-bar-search-recursive-menu [diredp-do-search-recursive]diredp-menu-bar-search-recursive-menu3567,193603
(define-key diredp-menu-bar-search-recursive-menu [diredp-do-grep-recursive]diredp-menu-bar-search-recursive-menu3570,193817
(defvar diredp-menu-bar-bookmarks-recursive-menu (make-sparse-keymap "Bookmark"))diredp-menu-bar-bookmarks-recursive-menu3577,194087
(define-key diredp-menu-bar-operate-recursive-menu [bookmarks]diredp-menu-bar-operate-recursive-menu3578,194169
(define-key diredp-menu-bar-bookmarks-recursive-menudiredp-menu-bar-bookmarks-recursive-menu3580,194294
(define-key diredp-menu-bar-bookmarks-recursive-menudiredp-menu-bar-bookmarks-recursive-menu3584,194585
(define-key diredp-menu-bar-bookmarks-recursive-menu [diredp-do-bookmark-dirs-recursive]diredp-menu-bar-bookmarks-recursive-menu3589,194899
(define-key diredp-menu-bar-bookmarks-recursive-menu [diredp-do-bookmark-recursive]diredp-menu-bar-bookmarks-recursive-menu3592,195152
(defvar diredp-menu-bar-regexp-menu (make-sparse-keymap "Regexp"))diredp-menu-bar-regexp-menu3602,195448
(define-key dired-mode-map [menu-bar regexp] (cons "Regexp" diredp-menu-bar-regexp-menu))dired-mode-map3603,195515
(define-key diredp-menu-bar-regexp-menu [hardlink]diredp-menu-bar-regexp-menu3605,195606
(define-key diredp-menu-bar-regexp-menu [copy]diredp-menu-bar-regexp-menu3621,196536
(define-key diredp-menu-bar-regexp-menu [rename]diredp-menu-bar-regexp-menu3623,196675
(define-key diredp-menu-bar-regexp-menu [flag]diredp-menu-bar-regexp-menu3625,196818
(define-key diredp-menu-bar-regexp-menu [image-dired-mark-tagged-files]diredp-menu-bar-regexp-menu3627,196963
(define-key diredp-menu-bar-regexp-menu [mark-cont]diredp-menu-bar-regexp-menu3631,197222
(define-key diredp-menu-bar-regexp-menu [mark]diredp-menu-bar-regexp-menu3634,197399
(defvar diredp-menu-bar-regexp-recursive-menu (make-sparse-keymap "Here and Below"))diredp-menu-bar-regexp-recursive-menu3641,197599
(define-key diredp-menu-bar-regexp-menu [mark-recursive]diredp-menu-bar-regexp-menu3642,197684
(define-key diredp-menu-bar-regexp-recursive-menu [diredp-mark-files-regexp-recursive]diredp-menu-bar-regexp-recursive-menu3644,197806
(defvar diredp-menu-bar-mark-menu (make-sparse-keymap "Mark"))diredp-menu-bar-mark-menu3653,198109
(define-key dired-mode-map [menu-bar mark] (cons "Mark" diredp-menu-bar-mark-menu))dired-mode-map3654,198172
(define-key diredp-menu-bar-mark-menu [garbage-files]diredp-menu-bar-mark-menu3660,198503
(define-key diredp-menu-bar-mark-menu [backup-files]diredp-menu-bar-mark-menu3663,198664
(define-key diredp-menu-bar-mark-menu [auto-save-files]diredp-menu-bar-mark-menu3666,198824
(define-key diredp-menu-bar-mark-menu [flag-region]diredp-menu-bar-mark-menu3669,198992
(define-key diredp-menu-bar-mark-menu [deletion]diredp-menu-bar-mark-menu3675,199339
(define-key diredp-menu-bar-mark-menu [separator-flag] '("--")) ; ------------------------------diredp-menu-bar-mark-menu3677,199482
(define-key diredp-menu-bar-mark-menu [prev]diredp-menu-bar-mark-menu3679,199580
(define-key diredp-menu-bar-mark-menu [next]diredp-menu-bar-mark-menu3681,199719
(define-key diredp-menu-bar-mark-menu [marks]diredp-menu-bar-mark-menu3683,199850
(define-key diredp-menu-bar-mark-menu [omit-unmarked]diredp-menu-bar-mark-menu3686,199999
(define-key diredp-menu-bar-mark-menu [omit-marked]diredp-menu-bar-mark-menu3688,200143
(define-key diredp-menu-bar-mark-menu [toggle-marks]diredp-menu-bar-mark-menu3690,200279
(define-key diredp-menu-bar-mark-menu [separator-mark] '("--")) ; ------------------------------diredp-menu-bar-mark-menu3696,200601
(define-key diredp-menu-bar-mark-menu [mark-autofiles]diredp-menu-bar-mark-menu3706,201140
(define-key diredp-menu-bar-mark-menu [mark-extension]diredp-menu-bar-mark-menu3710,201353
(define-key diredp-menu-bar-mark-menu [symlinks]diredp-menu-bar-mark-menu3713,201525
(define-key diredp-menu-bar-mark-menu [directories]diredp-menu-bar-mark-menu3716,201701
(define-key diredp-menu-bar-mark-menu [directory]diredp-menu-bar-mark-menu3719,201864
(define-key diredp-menu-bar-mark-menu [executables]diredp-menu-bar-mark-menu3722,202022
(define-key diredp-menu-bar-mark-menu [mark-region]diredp-menu-bar-mark-menu3724,202166
(define-key diredp-menu-bar-mark-menu [mark]diredp-menu-bar-mark-menu3730,202481
(define-key diredp-menu-bar-mark-menu [separator-unmark] '("--")) ; ----------------------------diredp-menu-bar-mark-menu3732,202615
(define-key diredp-menu-bar-mark-menu [unmark-autofiles]diredp-menu-bar-mark-menu3734,202713
(define-key diredp-menu-bar-mark-menu [unmark-all]diredp-menu-bar-mark-menu3738,202934
(define-key diredp-menu-bar-mark-menu [unmark-with]diredp-menu-bar-mark-menu3740,203077
(define-key diredp-menu-bar-mark-menu [unmark-region]diredp-menu-bar-mark-menu3743,203258
(define-key diredp-menu-bar-mark-menu [unmark]diredp-menu-bar-mark-menu3749,203576
(defvar diredp-menu-bar-subdir-menu (make-sparse-keymap "Dir"))diredp-menu-bar-subdir-menu3797,206283
(define-key dired-mode-map [menu-bar subdir] (cons "Dir" diredp-menu-bar-subdir-menu))dired-mode-map3798,206347
(defvar diredp-hide/show-menu (make-sparse-keymap "Hide/Show")diredp-hide/show-menu3803,206468
(define-key diredp-menu-bar-subdir-menu [hide-show] (cons "Hide/Show" diredp-hide/show-menu))diredp-menu-bar-subdir-menu3805,206587
(define-key diredp-hide/show-menu [hide-all]diredp-hide/show-menu3815,207146
(define-key diredp-hide/show-menu [hide-subdir]diredp-hide/show-menu3818,207307
(defvar diredp-bookmark-menu (make-sparse-keymap "Bookmark")diredp-bookmark-menu3825,207502
(define-key diredp-menu-bar-subdir-menu [bookmark] (cons "Bookmark" diredp-bookmark-menu))diredp-menu-bar-subdir-menu3827,207618
(define-key diredp-bookmark-menu [diredp-highlight-autofiles-mode]diredp-bookmark-menu3829,207710
(define-key diredp-bookmark-menu [diredp-do-bookmark-dirs-recursive]diredp-bookmark-menu3833,207979
(define-key diredp-bookmark-menu [bookmark-dired]diredp-bookmark-menu3836,208227
(defvar diredp-navigate-menu (make-sparse-keymap "Navigate")diredp-navigate-menu3842,208401
(define-key diredp-menu-bar-subdir-menu [navigate] (cons "Navigate" diredp-navigate-menu))diredp-menu-bar-subdir-menu3844,208517
(define-key diredp-navigate-menu [insert]diredp-navigate-menu3846,208609
(define-key diredp-navigate-menu [tree-down]diredp-navigate-menu3849,208764
(define-key diredp-navigate-menu [tree-up]diredp-navigate-menu3851,208907
(define-key diredp-navigate-menu [up]diredp-navigate-menu3853,209042
(define-key diredp-navigate-menu [prev-subdir]diredp-navigate-menu3855,209166
(define-key diredp-navigate-menu [next-subdir]diredp-navigate-menu3857,209310
(define-key diredp-navigate-menu [prev-dirline]diredp-navigate-menu3859,209450
(define-key diredp-navigate-menu [next-dirline]diredp-navigate-menu3861,209594
(define-key diredp-menu-bar-subdir-menu [separator-subdir] '("--")) ; --------------------------diredp-menu-bar-subdir-menu3864,209735
(define-key diredp-menu-bar-subdir-menu [image-dired-dired-toggle-marked-thumbs]diredp-menu-bar-subdir-menu3866,209833
(define-key diredp-menu-bar-subdir-menu [separator-dired-on-set] '("--")) ; --------------------diredp-menu-bar-subdir-menu3887,211232
(define-key diredp-menu-bar-subdir-menu [diredp-dired-recent-dirs]diredp-menu-bar-subdir-menu3889,211330
(define-key diredp-menu-bar-subdir-menu [diredp-dired-inserted-subdirs]diredp-menu-bar-subdir-menu3893,211626
(define-key diredp-menu-bar-subdir-menu [diredp-add-to-this-dired-buffer]diredp-menu-bar-subdir-menu3897,211937
(define-key diredp-menu-bar-subdir-menu [diredp-dired-union]diredp-menu-bar-subdir-menu3901,212166
(define-key diredp-menu-bar-subdir-menu [diredp-fileset-other-window]diredp-menu-bar-subdir-menu3904,212347
(define-key diredp-menu-bar-subdir-menu [diredp-marked-other-window]diredp-menu-bar-subdir-menu3907,212558
(define-key diredp-menu-bar-subdir-menu [diredp-marked]diredp-menu-bar-subdir-menu3913,212984
(define-key diredp-menu-bar-subdir-menu [dired]diredp-menu-bar-subdir-menu3919,213351
(define-key diredp-menu-bar-subdir-menu [separator-dired] '("--")) ; ---------------------diredp-menu-bar-subdir-menu3923,213516
(define-key diredp-menu-bar-subdir-menu [insert]diredp-menu-bar-subdir-menu3925,213608
(define-key diredp-menu-bar-subdir-menu [revert]diredp-menu-bar-subdir-menu3928,213777
(define-key diredp-menu-bar-subdir-menu [create-directory] ; Moved from "Immediate".diredp-menu-bar-subdir-menu3930,213919
(define-key dired-mode-map [down-mouse-3] 'diredp-mouse-3-menu)dired-mode-map3935,214117
(define-key dired-mode-map [mouse-3]      'ignore)dired-mode-map3936,214181
(define-key dired-mode-map "\C-x\M-o" (if (fboundp 'dired-omit-mode) 'dired-omit-mode 'dired-omit-toggle))dired-mode-map3942,214358
(define-key ctl-x-map   "D" 'diredp-dired-union)                           ; `C-x   D'ctl-x-map3946,214593
(define-key ctl-x-map   "E" 'diredp-add-to-dired-buffer)                   ; `C-x   E'ctl-x-map3947,214680
(define-key ctl-x-map   "\C-\M-f" 'diredp-fileset)                         ; `C-x   C-M-f'ctl-x-map3948,214767
(define-key ctl-x-4-map "\C-\M-f" 'diredp-fileset-other-window)            ; `C-x 4 C-M-f'ctl-x-4-map3949,214858
(define-key ctl-x-map   "R" 'diredp-dired-recent-dirs)                     ; `C-x   R'ctl-x-map3950,214949
(define-key ctl-x-4-map "R" 'diredp-dired-recent-dirs-other-window)        ; `C-x 4 R'ctl-x-4-map3951,215036
(define-key dired-mode-map [S-down-mouse-1] 'ignore) ; (normally `mouse-set-font')dired-mode-map3963,215720
(define-key dired-mode-map [S-mouse-1] 'diredp-mouse-mark-region-files)     ; `S-mouse-1'dired-mode-map3966,215908
(define-key dired-mode-map [mouse-2] 'dired-mouse-find-file-other-window)   ; `mouse-2'dired-mode-map3967,215998
(define-key dired-mode-map [S-down-mouse-2] 'diredp-mouse-find-file)        ; `S-mouse-2'dired-mode-map3968,216086
(define-key dired-mode-map [S-mouse-2] 'ignore)dired-mode-map3969,216176
(define-key dired-mode-map [M-mouse-2] 'diredp-mouse-find-file-other-frame) ; `M-mouse-2'dired-mode-map3970,216224
(define-key dired-mode-map "@"       'diredp-do-apply-function)                     ; `@'dired-mode-map3979,216667
(define-key dired-mode-map "\$"      'diredp-hide-subdir-nomove)                    ; `$'dired-mode-map3980,216757
(define-key dired-mode-map "\M-$"    'dired-hide-subdir)                            ; `M-$'dired-mode-map3981,216847
(define-key dired-mode-map "="       'diredp-ediff)                                 ; `='dired-mode-map3982,216939
(define-key dired-mode-map "*."      'diredp-mark/unmark-extension)                 ; `* .'dired-mode-map3984,217098
(define-key dired-mode-map [(control meta ?*)] 'diredp-marked-other-window)         ; `C-M-*'dired-mode-map3985,217190
(define-key dired-mode-map "\M-b"    'diredp-do-bookmark)                           ; `M-b'dired-mode-map3986,217284
(define-key dired-mode-map "\C-\M-b" 'diredp-set-bookmark-file-bookmark-for-marked) ; `C-M-b'dired-mode-map3987,217376
(define-key dired-mode-map [(control meta shift ?b)]                                ; `C-M-B' (aka `C-M-S-b')dired-mode-map3988,217470
(define-key dired-mode-map "\M-g"    'diredp-do-grep)                               ; `M-g'dired-mode-map3990,217620
(define-key dired-mode-map [(control meta shift ?r)]                                ; `C-M-R' (aka `C-M-S-r')dired-mode-map3993,217862
(define-key dired-mode-map "U"       'dired-unmark-all-marks)                       ; `U'dired-mode-map3995,218010
(define-key dired-mode-map "T"       nil) ; For Emacs20dired-mode-map4003,218406
(define-key dired-mode-map "T+"      'diredp-tag-this-file)                ; `T +'dired-mode-map4004,218462
(define-key dired-mode-map "T-"      'diredp-untag-this-file)              ; `T -'dired-mode-map4005,218545
(define-key dired-mode-map "T0"      'diredp-remove-all-tags-this-file)    ; `T 0'dired-mode-map4006,218628
(define-key dired-mode-map "Tc"      'diredp-copy-tags-this-file)          ; `T c'dired-mode-map4007,218711
(define-key dired-mode-map "Tp"      'diredp-paste-add-tags-this-file)     ; `T p'dired-mode-map4008,218794
(define-key dired-mode-map "Tq"      'diredp-paste-replace-tags-this-file) ; `T q'dired-mode-map4009,218877
(define-key dired-mode-map "Tv"      'diredp-set-tag-value-this-file)      ; `T v'dired-mode-map4010,218960
(define-key dired-mode-map "T\M-w"   'diredp-copy-tags-this-file)          ; `T M-w'dired-mode-map4011,219043
(define-key dired-mode-map "T\C-y"   'diredp-paste-add-tags-this-file)     ; `T C-y'dired-mode-map4012,219128
(define-key dired-mode-map "T>+"     'diredp-do-tag)                       ; `T > +'dired-mode-map4013,219213
(define-key dired-mode-map "T>-"     'diredp-do-untag)                     ; `T > -'dired-mode-map4014,219298
(define-key dired-mode-map "T>0"     'diredp-do-remove-all-tags)           ; `T > 0'dired-mode-map4015,219383
(define-key dired-mode-map "T>p"     'diredp-do-paste-add-tags)            ; `T > p'dired-mode-map4016,219468
(define-key dired-mode-map "T>q"     'diredp-do-paste-replace-tags)        ; `T > q'dired-mode-map4017,219553
(define-key dired-mode-map "T>v"     'diredp-do-set-tag-value)             ; `T > v'dired-mode-map4018,219638
(define-key dired-mode-map "T>\C-y"  'diredp-do-paste-add-tags)            ; `T > C-y'dired-mode-map4019,219723
(define-key dired-mode-map "Tm%"     'diredp-mark-files-tagged-regexp)     ; `T m %'dired-mode-map4020,219810
(define-key dired-mode-map "Tm*"     'diredp-mark-files-tagged-all)        ; `T m *'dired-mode-map4021,219895
(define-key dired-mode-map "Tm+"     'diredp-mark-files-tagged-some)       ; `T m +'dired-mode-map4022,219980
(define-key dired-mode-map "Tm~*"    'diredp-mark-files-tagged-not-all)    ; `T m ~ *'dired-mode-map4023,220065
(define-key dired-mode-map "Tm~+"    'diredp-mark-files-tagged-none)       ; `T m ~ +'dired-mode-map4024,220152
(define-key dired-mode-map "Tu%"     'diredp-unmark-files-tagged-regexp)   ; `T u %'dired-mode-map4025,220239
(define-key dired-mode-map "Tu*"     'diredp-unmark-files-tagged-all)      ; `T u *'dired-mode-map4026,220324
(define-key dired-mode-map "Tu+"     'diredp-unmark-files-tagged-some)     ; `T u +'dired-mode-map4027,220409
(define-key dired-mode-map "Tu~*"    'diredp-unmark-files-tagged-not-all)  ; `T u ~ *'dired-mode-map4028,220494
(define-key dired-mode-map "Tu~+"    'diredp-unmark-files-tagged-none)     ; `T u ~ +'dired-mode-map4029,220581
(define-key dired-mode-map "\r"      'dired-find-file)                      ; `RET'dired-mode-map4041,221241
(define-key dired-mode-map "%c"      'diredp-capitalize)                    ; `% c'dired-mode-map4045,221541
(define-key dired-mode-map "b"       'diredp-byte-compile-this-file)        ; `b'dired-mode-map4046,221625
(define-key dired-mode-map [(control shift ?b)] 'diredp-bookmark-this-file) ; `C-B'dired-mode-map4047,221707
(define-key dired-mode-map "\M-c"    'diredp-capitalize-this-file)          ; `M-c'dired-mode-map4048,221791
(define-key dired-mode-map "\M-i"    'diredp-insert-subdirs)                ; `M-i'dired-mode-map4051,222006
(define-key dired-mode-map "\M-l"    'diredp-downcase-this-file)            ; `M-l'dired-mode-map4052,222090
(define-key dired-mode-map "\C-\M-l" 'diredp-list-marked)                   ; `C-M-l'dired-mode-map4053,222174
(define-key dired-mode-map [(meta shift ?m)] 'diredp-chmod-this-file)       ; `M-M'dired-mode-map4054,222260
(define-key dired-mode-map "\C-o"    'diredp-find-file-other-frame)         ; `C-o'dired-mode-map4055,222344
(define-key dired-mode-map "\C-\M-o" 'dired-display-file)                   ; `C-M-o' (not `C-o')dired-mode-map4058,222552
(define-key dired-mode-map "\M-p"    'diredp-print-this-file)               ; `M-p'dired-mode-map4059,222650
(define-key dired-mode-map "r"       'diredp-rename-this-file)              ; `r'dired-mode-map4060,222734
(define-key dired-mode-map [(meta shift ?t)] 'diredp-touch-this-file)       ; `M-T'dired-mode-map4063,222951
(define-key dired-mode-map [(control meta shift ?t)] 'dired-do-touch)       ; `C-M-T'dired-mode-map4064,223035
(define-key dired-mode-map "\M-u"    'diredp-upcase-this-file)              ; `M-u'dired-mode-map4065,223121
(define-key dired-mode-map "y"       'diredp-relsymlink-this-file)          ; `y'dired-mode-map4066,223205
(define-key dired-mode-map "z"       'diredp-compress-this-file)            ; `z'dired-mode-map4067,223287
(define-prefix-command 'diredp-recursive-map)diredp-recursive-map4077,223766
(define-key dired-mode-map "\M-+"  diredp-recursive-map) ; `M-+'dired-mode-map4078,223812
(define-key diredp-recursive-map "@"           'diredp-do-apply-function-recursive)     ; `@'diredp-recursive-map4080,223878
(define-key diredp-recursive-map "%c"          'diredp-capitalize-recursive)            ; `% c'diredp-recursive-map4087,224393
(define-key diredp-recursive-map "%l"          'diredp-downcase-recursive)              ; `% l'diredp-recursive-map4088,224489
(define-key diredp-recursive-map "%m"          'diredp-mark-files-regexp-recursive)     ; `% m'diredp-recursive-map4089,224585
(define-key diredp-recursive-map "%u"          'diredp-upcase-recursive)                ; `% u'diredp-recursive-map4090,224681
(define-key diredp-recursive-map "!"           'diredp-do-shell-command-recursive)      ; `!'diredp-recursive-map4093,224931
(define-key diredp-recursive-map (kbd "C-M-*") 'diredp-marked-recursive-other-window)   ; `C-M-*'diredp-recursive-map4094,225025
(define-key diredp-recursive-map "A"           'diredp-do-search-recursive)             ; `A'diredp-recursive-map4095,225123
(define-key diredp-recursive-map "\M-b"        'diredp-do-bookmark-recursive)           ; `M-b'diredp-recursive-map4096,225217
(define-key diredp-recursive-map [(meta shift ?b)] 'diredp-do-bookmark-dirs-recursive)  ; `M-B'diredp-recursive-map4097,225313
(define-key diredp-recursive-map (kbd "C-M-b")                                          ; `C-M-b'diredp-recursive-map4098,225409
(define-key diredp-recursive-map [(control meta shift ?b)]                             ; `C-M-B' (aka `C-M-S-b')diredp-recursive-map4100,225566
(define-key diredp-recursive-map "C"           'diredp-do-copy-recursive)               ; `C'diredp-recursive-map4102,225729
(define-key diredp-recursive-map "D"           'diredp-do-delete-recursive)             ; `D'diredp-recursive-map4103,225823
(define-key diredp-recursive-map "F"           'diredp-do-find-marked-files-recursive)  ; `F'diredp-recursive-map4104,225917
(define-key diredp-recursive-map "\M-g"        'diredp-do-grep-recursive)               ; `M-g'diredp-recursive-map4107,226148
(define-key diredp-recursive-map "H"           'diredp-do-hardlink-recursive)           ; `H'diredp-recursive-map4108,226244
(define-key diredp-recursive-map "\M-i"        'diredp-insert-subdirs-recursive)        ; `M-i'diredp-recursive-map4109,226338
(define-key diredp-recursive-map "\C-\M-l"     'diredp-list-marked-recursive)           ; `C-M-l'diredp-recursive-map4110,226434
(define-key diredp-recursive-map "M"           'diredp-do-chmod-recursive)              ; `M'diredp-recursive-map4111,226532
(define-key diredp-recursive-map "P"           'diredp-do-print-recursive)              ; `P'diredp-recursive-map4114,226763
(define-key diredp-recursive-map "Q"         'diredp-do-query-replace-regexp-recursive) ; `Q'diredp-recursive-map4115,226857
(define-key diredp-recursive-map "R"           'diredp-do-move-recursive)               ; `R'diredp-recursive-map4116,226951
(define-key diredp-recursive-map "S"           'diredp-do-symlink-recursive)            ; `S'diredp-recursive-map4117,227045
(define-key diredp-recursive-map (kbd "M-s a C-s")                                ; `M-s a C-s'diredp-recursive-map4118,227139
(define-key diredp-recursive-map (kbd "M-s a C-M-s")                              ; `M-s a C-M-s'diredp-recursive-map4120,227267
(define-key diredp-recursive-map [(control meta shift ?t)] 'diredp-do-touch-recursive)  ; `C-M-T'diredp-recursive-map4122,227404
(define-key diredp-recursive-map "\C-tc"   'diredp-image-dired-comment-files-recursive) ; `C-t c'diredp-recursive-map4123,227502
(define-key diredp-recursive-map "\C-td"  'diredp-image-dired-display-thumbs-recursive) ; `C-t d'diredp-recursive-map4124,227600
(define-key diredp-recursive-map "\C-tr"      'diredp-image-dired-delete-tag-recursive) ; `C-t r'diredp-recursive-map4125,227698
(define-key diredp-recursive-map "\C-tt"       'diredp-image-dired-tag-files-recursive) ; `C-t t'diredp-recursive-map4126,227796
(define-key diredp-recursive-map "\M-w"        'diredp-copy-filename-as-kill-recursive) ; `M-w'diredp-recursive-map4127,227894
(define-key diredp-recursive-map "Y"           'diredp-do-relsymlink-recursive)         ; `Y'diredp-recursive-map4128,227990
(defgroup Dired-Plus nilDired-Plus4136,228336
(defface diredp-autofile-namediredp-autofile-name4154,229036
(defvar diredp-autofile-name 'diredp-autofile-name)diredp-autofile-name4159,229353
(defface diredp-compressed-file-namediredp-compressed-file-name4161,229406
(defvar diredp-compressed-file-name 'diredp-compressed-file-name)diredp-compressed-file-name4166,229644
(defface diredp-compressed-file-suffixdiredp-compressed-file-suffix4168,229711
(defvar diredp-compressed-file-suffix 'diredp-compressed-file-suffix)diredp-compressed-file-suffix4174,230034
(defface diredp-date-timediredp-date-time4176,230105
(defvar diredp-date-time 'diredp-date-time)diredp-date-time4181,230372
(defface diredp-deletiondiredp-deletion4183,230417
(defvar diredp-deletion 'diredp-deletion)diredp-deletion4187,230609
(defface diredp-deletion-file-namediredp-deletion-file-name4189,230652
(defvar diredp-deletion-file-name 'diredp-deletion-file-name)diredp-deletion-file-name4193,230837
(defface diredp-dir-headingdiredp-dir-heading4195,230900
(defvar diredp-dir-heading 'diredp-dir-heading)diredp-dir-heading4200,231206
(defface diredp-dir-namediredp-dir-name4202,231255
(defvar diredp-dir-name 'diredp-dir-name)diredp-dir-name4208,231547
(defface diredp-dir-privdiredp-dir-priv4210,231590
(defvar diredp-dir-priv 'diredp-dir-priv)diredp-dir-priv4216,231917
(defface diredp-exec-privdiredp-exec-priv4218,231960
(defvar diredp-exec-priv 'diredp-exec-priv)diredp-exec-priv4223,232247
(defface diredp-executable-tagdiredp-executable-tag4227,232435
(defvar diredp-executable-tag 'diredp-executable-tag)diredp-executable-tag4231,232626
(defface diredp-file-namediredp-file-name4233,232681
(defvar diredp-file-name 'diredp-file-name)diredp-file-name4239,232990
(defface diredp-file-suffixdiredp-file-suffix4241,233035
(defvar diredp-file-suffix 'diredp-file-suffix)diredp-file-suffix4247,233366
(defface diredp-flag-markdiredp-flag-mark4249,233415
(defvar diredp-flag-mark 'diredp-flag-mark)diredp-flag-mark4254,233734
(defface diredp-flag-mark-linediredp-flag-mark-line4256,233779
(defvar diredp-flag-mark-line 'diredp-flag-mark-line)diredp-flag-mark-line4261,234061
(defface diredp-ignored-file-namediredp-ignored-file-name4263,234116
(defvar diredp-ignored-file-name 'diredp-ignored-file-name)diredp-ignored-file-name4270,234574
(defface diredp-link-privdiredp-link-priv4272,234635
(defvar diredp-link-priv 'diredp-link-priv)diredp-link-priv4277,234909
(defface diredp-no-privdiredp-no-priv4290,235405
(defvar diredp-no-priv 'diredp-no-priv)diredp-no-priv4295,235679
(defface diredp-numberdiredp-number4297,235720
(defvar diredp-number 'diredp-number)diredp-number4303,236051
(defface diredp-other-privdiredp-other-priv4305,236090
(defvar diredp-other-priv 'diredp-other-priv)diredp-other-priv4310,236375
(defface diredp-rare-privdiredp-rare-priv4312,236422
(defvar diredp-rare-priv 'diredp-rare-priv)diredp-rare-priv4317,236754
(defface diredp-read-privdiredp-read-priv4319,236799
(defvar diredp-read-priv 'diredp-read-priv)diredp-read-priv4324,237098
(defface diredp-symlinkdiredp-symlink4326,237143
(defvar diredp-symlink 'diredp-symlink)diredp-symlink4331,237401
(defface diredp-tagged-autofile-namediredp-tagged-autofile-name4333,237442
(defvar diredp-tagged-autofile-name 'diredp-tagged-autofile-name)diredp-tagged-autofile-name4338,237765
(defface diredp-write-privdiredp-write-priv4340,237832
(defvar diredp-write-priv 'diredp-write-priv)diredp-write-priv4345,238110
(defvar diredp-font-lock-keywords-1diredp-font-lock-keywords-14355,238671
(defun diredp-refontify-buffer ()diredp-refontify-buffer4486,246060
(defun diredp-dired-for-files (arg &optional switches) ; Not bounddiredp-dired-for-files4529,247957
(defun diredp-dired-for-files-other-window (arg &optional switches) ; Not bounddiredp-dired-for-files-other-window4543,248546
(defun diredp-dired-recent-dirs (buffer &optional arg) ; Bound to `C-x R'diredp-dired-recent-dirs4550,248905
(defun diredp-dired-recent-dirs-other-window (buffer &optional arg) ; Bound to `C-x 4 R'diredp-dired-recent-dirs-other-window4572,249971
(defun diredp-recent-dirs (arg)diredp-recent-dirs4580,250591
(defun diredp-read-include/exclude (thing things &optional exclude)diredp-read-include/exclude4592,251238
(defun diredp-dired-union (dired-name dirbufs &optional switches extra) ; Bound to `C-x D'diredp-dired-union4666,255567
(defun diredp-add-to-dired-buffer (dired-name to-add &optional switches) ; Bound to `C-x E'diredp-add-to-dired-buffer4733,258866
(defun diredp-add-to-this-dired-buffer (dired-name to-add &optional switches) ; Not bound by defaultdiredp-add-to-this-dired-buffer4765,260356
(defun diredp-dired-union-1 (dired-name dirbufs switches extra)diredp-dired-union-14782,261497
(defun diredp-dired-union-interactive-spec (string &optional no-dired-bufs read-extra-files-p dired-buffer)diredp-dired-union-interactive-spec4832,264399
(defun diredp-fileset (flset-name)      ; Bound to `C-x F'diredp-fileset4903,268298
(defun diredp-fileset-other-window (flset-name) ; Bound to `C-x 4 F'diredp-fileset-other-window4912,268704
(defun diredp-fileset-1 (flset-name &optional other-window-p)diredp-fileset-14920,269154
(defun diredp-dired-this-subdir (&optional tear-off-p msgp)diredp-dired-this-subdir4940,270211
(defun diredp-dired-inserted-subdirs (&optional no-show-p msgp)diredp-dired-inserted-subdirs4965,271271
(defun diredp-get-subdirs (&optional ignore-marks-p predicate)diredp-get-subdirs4996,272627
(defun diredp-get-files (&optional ignore-marks-p predicate include-dirs-pdiredp-get-files5010,273344
(defun diredp-get-files-for-dir (directory accum askp &optional include-dirs-p only-marked-p)diredp-get-files-for-dir5073,276774
(defun diredp-marked-here (&optional only-marked-p)diredp-marked-here5107,278539
(defun diredp-y-or-n-files-p (prompt files &optional predicate)diredp-y-or-n-files-p5121,279391
(defvar diredp-list-files-mapdiredp-list-files-map5198,284002
(defun diredp-find-line-file-other-window ()diredp-find-line-file-other-window5208,284374
(defun diredp-mouse-find-line-file-other-window (e)diredp-mouse-find-line-file-other-window5216,284704
(defun diredp-list-marked (&optional arg predicate) ; Bound to `C-M-l'diredp-list-marked5223,284978
(defun diredp-list-files (files &optional dir bufname predicate)diredp-list-files5244,285918
(defvar diredp-files-within-dirs-done ()diredp-files-within-dirs-done5294,288364
(defun diredp-directories-within (&optional directory no-symlinks-p predicate)diredp-directories-within5299,288506
(defun diredp-files-within (file-list accum &optional no-symlinks-p include-dirs-p predicate)diredp-files-within5319,289568
(defun diredp-files-within-1 (file-list accum no-symlinks-p include-dirs-p predicate)diredp-files-within-15354,291400
(defun diredp-remove-if (pred xs)diredp-remove-if5387,293477
(defun diredp-remove-if-not (pred xs)diredp-remove-if-not5393,293688
(defun diredp-ancestor-dirs (dir)diredp-ancestor-dirs5443,296048
(defun diredp-maplist (function list)diredp-maplist5449,296333
(defun diredp-existing-dired-buffer-p (buffer-name)diredp-existing-dired-buffer-p5454,296550
(defun diredp-set-union (list1 list2)diredp-set-union5461,296901
(defun diredp-get-confirmation-recursive (&optional type)diredp-get-confirmation-recursive5481,297657
(defun diredp-insert-subdirs (&optional switches) ; Bound to `M-i'diredp-insert-subdirs5499,298398
(defun diredp-insert-subdirs-recursive (&optional ignore-marks-p) ; Bound to `M-+ M-i'diredp-insert-subdirs-recursive5514,299325
(defun diredp-do-shell-command-recursive (command &optional ignore-marks-p) ; Bound to `M-+ !'diredp-do-shell-command-recursive5529,300128
(defun diredp-do-symlink-recursive (&optional ignore-marks-p) ; Bound to `M-+ S'diredp-do-symlink-recursive5580,303104
(defun diredp-do-hardlink-recursive (&optional ignore-marks-p) ; Bound to `M-+ H'diredp-do-hardlink-recursive5613,304723
(defun diredp-do-print-recursive (&optional ignore-marks-p) ; Bound to `M-+ P'diredp-do-print-recursive5628,305449
(defun diredp-image-dired-display-thumbs-recursive (&optional ignore-marks-p append do-not-pop)diredp-image-dired-display-thumbs-recursive5651,306636
(defun diredp-image-dired-tag-files-recursive (&optional ignore-marks-p) ; Bound to `M-+ C-t t'diredp-image-dired-tag-files-recursive5692,308644
(defun diredp-image-dired-delete-tag-recursive (&optional ignore-marks-p) ; Bound to `M-+ C-t r'diredp-image-dired-delete-tag-recursive5709,309575
(defun diredp-image-dired-comment-files-recursive (&optional ignore-marks-p)diredp-image-dired-comment-files-recursive5724,310386
(defun diredp-do-bookmark-recursive (&optional ignore-marks-p prefix) ; Bound to `M-+ M-b'diredp-do-bookmark-recursive5813,314768
(defun diredp-do-bookmark-dirs-recursive (ignore-marks-p &optional msg-p)diredp-do-bookmark-dirs-recursive5830,315656
(defun diredp-do-bookmark-in-bookmark-file-recursive (bookmark-file ; Bound to `M-+ C-M-B')diredp-do-bookmark-in-bookmark-file-recursive5879,318118
(defun diredp-set-bookmark-file-bookmark-for-marked-recursive (bookmark-filediredp-set-bookmark-file-bookmark-for-marked-recursive5898,319204
(defun diredp-do-find-marked-files-recursive (&optional arg) ; Bound to `M-+ F'diredp-do-find-marked-files-recursive5918,320207
(defun diredp-do-search-recursive (regexp &optional ignore-marks-p) ; Bound to `M-+ A'diredp-do-search-recursive5946,321750
(defun diredp-do-query-replace-regexp-recursive (from to &optional ignore-marks-p)diredp-do-query-replace-regexp-recursive5956,322267
(defun diredp-do-grep-recursive (command-args &optional ignore-marks-p) ; Bound to `M+ M-g'diredp-do-grep-recursive5971,323091
(defun diredp-marked-recursive (dirname &optional ignore-marked-p) ; Not bound to a keydiredp-marked-recursive5990,324109
(defun diredp-marked-recursive-other-window (dirname &optional ignore-marked-p)diredp-marked-recursive-other-window6003,324761
(defun diredp-list-marked-recursive (&optional ignore-marks-p predicate) ; Bound to `M-+ C-M-l'diredp-list-marked-recursive6012,325229
(defun diredp-copy-filename-as-kill-recursive (&optional arg) ; Bound to `M-+ M-w'diredp-copy-filename-as-kill-recursive6049,327032
(defun diredp-mark-files-regexp-recursive (regexp &optional marker-char ignore-marks-p) ; Bound to `M-+ % m'diredp-mark-files-regexp-recursive6079,328604
(defun diredp-capitalize-recursive (&optional ignore-marks-p) ; Bound to `M-+ % c'diredp-capitalize-recursive6127,331034
(defun diredp-upcase-recursive (&optional ignore-marks-p) ; Bound to `M-+ % u'diredp-upcase-recursive6142,331781
(defun diredp-downcase-recursive (&optional ignore-marks-p) ; Bound to `M-+ % l'diredp-downcase-recursive6157,332513
(defun diredp-do-apply-function-recursive (function &optional arg) ; Bound to `M-+ @'diredp-do-apply-function-recursive6172,333251
(defun diredp-do-delete-recursive (arg) ; Bound to `M-+ D'diredp-do-delete-recursive6197,334442
(defun diredp-do-move-recursive (&optional ignore-marks-p) ; Bound to `M-+ R'diredp-do-move-recursive6250,337518
(defun diredp-do-copy-recursive (&optional ignore-marks-p) ; Bound to `M-+ C'diredp-do-copy-recursive6274,338545
(defun diredp-do-create-files-recursive (file-creator operation ignore-marks-p)diredp-do-create-files-recursive6302,339769
(defun diredp-create-files-non-directory-recursive (file-creator basename-constructordiredp-create-files-non-directory-recursive6339,342162
(defun diredp-do-chxxx-recursive (attribute-name program op-symboldiredp-do-chxxx-recursive6370,343762
(defun diredp-do-chmod-recursive (&optional ignore-marks-p) ; Bound to `M-+ M'diredp-do-chmod-recursive6407,346011
(defun diredp-do-touch-recursive (&optional ignore-marks-p)diredp-do-touch-recursive6448,348308
(defun diredp-do-redisplay-recursive (&optional msgp)diredp-do-redisplay-recursive6467,349296
(defun diredp-marked (dirname &optional n switches) ; Not bounddiredp-marked6501,351013
(defun diredp-marked-other-window (dirname &optional n switches) ; Bound to `C-M-*'diredp-marked-other-window6529,352416
(defun diredp-mark/unmark-extension (extension &optional unmark-p) ; Bound to `* .'diredp-mark/unmark-extension6553,353665
(defun diredp-mark-files-tagged-all/none (tags &optional none-p unmarkp prefix)diredp-mark-files-tagged-all/none6570,354612
(defun diredp-mark-files-tagged-some/not-all (tags &optional notallp unmarkp prefix)diredp-mark-files-tagged-some/not-all6597,356298
(defun diredp-mark-files-tagged-all (tags &optional none-p prefix) ; `T m *'diredp-mark-files-tagged-all6624,358008
(defun diredp-mark-files-tagged-none (tags &optional allp prefix) ; `T m ~ +'diredp-mark-files-tagged-none6639,358738
(defun diredp-mark-files-tagged-some (tags &optional somenotp prefix) ; `T m +'diredp-mark-files-tagged-some6654,359452
(defun diredp-mark-files-tagged-not-all (tags &optional somep prefix) ; `T m ~ *'diredp-mark-files-tagged-not-all6669,360191
(defun diredp-mark-files-tagged-regexp (regexp &optional notp prefix) ; `T m %'diredp-mark-files-tagged-regexp6684,360900
(defun diredp-unmark-files-tagged-regexp (regexp &optional notp prefix) ; `T u %'diredp-unmark-files-tagged-regexp6708,362334
(defun diredp-unmark-files-tagged-all (tags &optional none-p prefix) ; `T u *'diredp-unmark-files-tagged-all6732,363779
(defun diredp-unmark-files-tagged-none (tags &optional allp prefix) ; `T u ~ +'diredp-unmark-files-tagged-none6747,364521
(defun diredp-unmark-files-tagged-some (tags &optional somenotp prefix) ; `T u +'diredp-unmark-files-tagged-some6762,365249
(defun diredp-unmark-files-tagged-not-all (tags &optional somep prefix) ; `T u ~ *'diredp-unmark-files-tagged-not-all6777,365975
(defun diredp-do-tag (tags &optional prefix arg) ; `T > +'diredp-do-tag6792,366698
(defun diredp-tag (tags &optional prefix)diredp-tag6817,368012
(defun diredp-mouse-do-tag (event)      ; Not bounddiredp-mouse-do-tag6835,368756
(defun diredp-do-untag (tags &optional prefix arg) ; `T > -'diredp-do-untag6852,369497
(defun diredp-untag (tags &optional prefix)diredp-untag6878,370853
(defun diredp-mouse-do-untag (event)    ; Not bounddiredp-mouse-do-untag6896,371612
(defun diredp-do-remove-all-tags (&optional prefix arg) ; `T > 0'diredp-do-remove-all-tags6916,372550
(defun diredp-remove-all-tags (&optional prefix)diredp-remove-all-tags6937,373644
(defun diredp-mouse-do-remove-all-tags (event) ; Not bounddiredp-mouse-do-remove-all-tags6955,374417
(defun diredp-do-paste-add-tags (&optional prefix arg) ; `T > p', `T > C-y'diredp-do-paste-add-tags6972,375193
(defun diredp-paste-add-tags (&optional prefix)diredp-paste-add-tags6993,376392
(defun diredp-mouse-do-paste-add-tags (event) ; Not bounddiredp-mouse-do-paste-add-tags7012,377233
(defun diredp-do-paste-replace-tags (&optional prefix arg) ; `T > q'diredp-do-paste-replace-tags7030,378054
(defun diredp-paste-replace-tags (&optional prefix)diredp-paste-replace-tags7050,379224
(defun diredp-mouse-do-paste-replace-tags (event) ; Not bounddiredp-mouse-do-paste-replace-tags7070,380105
(defun diredp-do-set-tag-value (tag value &optional prefix arg) ; `T > v'diredp-do-set-tag-value7088,380953
(defun diredp-set-tag-value (tag value &optional prefix)diredp-set-tag-value7114,382350
(defun diredp-mouse-do-set-tag-value (event) ; Not bounddiredp-mouse-do-set-tag-value7133,383155
(defun diredp-mark-autofiles ()diredp-mark-autofiles7155,384182
(defun diredp-unmark-autofiles ()diredp-unmark-autofiles7163,384402
(defun diredp-mark/unmark-autofiles (&optional unmarkp)diredp-mark/unmark-autofiles7171,384628
(defun diredp-do-bookmark (&optional prefix arg) ; Bound to `M-b'diredp-do-bookmark7266,389557
(defun diredp-mouse-do-bookmark (event) ; Not bounddiredp-mouse-do-bookmark7290,390874
(defun diredp-bookmark (&optional prefix file no-msg-p)diredp-bookmark7302,391471
(defun diredp-set-bookmark-file-bookmark-for-marked (bookmark-file ; Bound to `C-M-b'diredp-set-bookmark-file-bookmark-for-marked7346,393780
(defun diredp-do-bookmark-in-bookmark-file (bookmark-file ; Bound to `C-M-B' (aka `C-M-S-b')diredp-do-bookmark-in-bookmark-file7396,396151
(defun diredp-read-bookmark-file-args ()diredp-read-bookmark-file-args7449,398904
(defun dired-buffers-for-dir (dir &optional file)dired-buffers-for-dir7470,399915
(defun diredp-find-file-reuse-dir-buffer () ; Not bounddiredp-find-file-reuse-dir-buffer7553,404137
(defun diredp-mouse-find-file-reuse-dir-buffer (event) ; Not bounddiredp-mouse-find-file-reuse-dir-buffer7563,404540
(defalias 'toggle-diredp-find-file-reuse-dir 'diredp-toggle-find-file-reuse-dir)toggle-diredp-find-file-reuse-dir7578,405229
(defun diredp-toggle-find-file-reuse-dir (force-p) ; Bound to `C-M-R' (aka `C-M-S-r')diredp-toggle-find-file-reuse-dir7580,405325
(defun diredp-make-find-file-keys-reuse-dirs ()diredp-make-find-file-keys-reuse-dirs7612,406675
(defun diredp-make-find-file-keys-not-reuse-dirs ()diredp-make-find-file-keys-not-reuse-dirs7626,407508
(defun diredp-omit-marked ()            ; Not bounddiredp-omit-marked7641,408385
(defun diredp-omit-unmarked ()          ; Not bounddiredp-omit-unmarked7652,408817
(defun diredp-ediff (file2)             ; Bound to `='diredp-ediff7665,409298
(defun diredp-fewer-than-2-files-p (arg)diredp-fewer-than-2-files-p7703,411271
(defun diredp-do-apply-function (function &optional arg) ; Bound to `@'diredp-do-apply-function7714,411765
(defun dired-do-compress (&optional arg) ; Bound to `Z'dired-do-compress7739,412825
(defun dired-do-byte-compile (&optional arg) ; Bound to `B'dired-do-byte-compile7757,413634
(defun dired-do-load (&optional arg)    ; Bound to `L'dired-do-load7778,414579
(defun dired-do-search (regexp &optional arg)dired-do-search7837,417089
(defun dired-do-query-replace-regexp (from to &optional arg)dired-do-query-replace-regexp7860,418062
(defun diredp-do-grep (command-args)    ; Bound to `M-g'diredp-do-grep7896,419837
(defun diredp-do-grep-1 (&optional files)diredp-do-grep-17910,420564
(defun diredp-all-files ()diredp-all-files7985,424160
(defun dired-maybe-insert-subdir (dirname &optional switches no-error-if-not-dir-p)dired-maybe-insert-subdir8019,425750
(defun diredp-this-subdir ()diredp-this-subdir8075,428551
(defun dired-insert-subdir-validate (dirname &optional switches))dired-insert-subdir-validate8094,429303
(defun dired-insert-subdir-newpos (new-dir)dired-insert-subdir-newpos8121,430577
(defun diredp-hide-subdir-nomove (arg &optional next)diredp-hide-subdir-nomove8147,431535
(defun dired-do-find-marked-files (&optional arg) ; Bound to `F'dired-do-find-marked-files8262,436310
(defun dired-simultaneous-find-file (file-list option)dired-simultaneous-find-file8290,437521
(defun dired-do-run-mail ()dired-do-run-mail8400,443322
(defun dired-insert-set-properties (beg end)dired-insert-set-properties8418,443926
(defun diredp-mouseover-help (window buffer pos)diredp-mouseover-help8448,445647
(defun diredp-up-directory (&optional other-window) ; Bound to `^'diredp-up-directory8548,451176
(defun diredp-up-directory-reuse-dir-buffer (&optional other-window) ; Not bounddiredp-up-directory-reuse-dir-buffer8568,452108
(defun diredp-next-line (arg)           ; Bound to `SPC', `n', `C-n', `down'diredp-next-line8585,452984
(defun diredp-previous-line (arg)       ; Bound to `p', `C-p', `up'diredp-previous-line8614,454434
(defun diredp-next-dirline (arg &optional opoint) ; Bound to `>'diredp-next-dirline8626,454943
(defun diredp-prev-dirline (arg)        ; Bound to `<'diredp-prev-dirline8647,455809
(defun diredp-next-subdir (arg &optional no-error-if-not-found no-skip) ; Bound to `C-M-n'diredp-next-subdir8653,455978
(defun diredp-prev-subdir (arg &optional no-error-if-not-found no-skip) ; Bound to `C-M-p'diredp-prev-subdir8681,457236
(defun dired-get-filename (&optional localp no-error-if-not-filep)dired-get-filename8698,458034
(defun dired-do-flagged-delete (&optional no-msg) ; Bound to `x'dired-do-flagged-delete8934,470930
(defun dired-do-delete (&optional arg)  ; Bound to `D'dired-do-delete8966,472255
(defun diredp-internal-do-deletions (file-alist arg &optional trash)diredp-internal-do-deletions8986,473150
(defun dired-mark-pop-up (buffer-or-name op-symbol files function &rest args)dired-mark-pop-up9031,475373
(defun dired-mark-files-regexp (regexp &optional marker-char localp)dired-mark-files-regexp9087,478104
(defun diredp-capitalize (&optional arg) ; Bound to `% c'diredp-capitalize9154,481224
(defun diredp-delete-this-file (&optional use-trash-can) ; Bound to `C-k', `delete'diredp-delete-this-file9162,481598
(defun diredp-capitalize-this-file ()   ; Bound to `M-c'diredp-capitalize-this-file9183,482604
(defun diredp-downcase-this-file ()     ; Bound to `M-l'diredp-downcase-this-file9189,482854
(defun diredp-upcase-this-file ()       ; Bound to `M-u'diredp-upcase-this-file9194,483027
(defun diredp-rename-this-file ()       ; Bound to `r'diredp-rename-this-file9199,483198
(defun diredp-copy-this-file ()         ; Not bounddiredp-copy-this-file9226,484110
(defun diredp-relsymlink-this-file ()   ; Bound to `y'diredp-relsymlink-this-file9232,484294
(defun diredp-symlink-this-file ()      ; Not bounddiredp-symlink-this-file9238,484545
(defun diredp-hardlink-this-file ()     ; Not bounddiredp-hardlink-this-file9244,484751
(defun diredp-print-this-file ()        ; Bound to `M-p'diredp-print-this-file9250,484960
(defun diredp-grep-this-file ()         ; Not bounddiredp-grep-this-file9255,485118
(defun diredp-compress-this-file ()     ; Bound to `z'diredp-compress-this-file9265,485521
(defun diredp-async-shell-command-this-file (command filelist) ; Not bounddiredp-async-shell-command-this-file9270,485697
(defun diredp-shell-command-this-file (command filelist) ; Not bounddiredp-shell-command-this-file9282,486321
(defun diredp-bookmark-this-file (&optional prefix) ; Bound to `C-B' (`C-S-b')diredp-bookmark-this-file9290,486667
(defun diredp-tag-this-file (tags &optional prefix) ; Bound to `T +'diredp-tag-this-file9299,487068
(defun diredp-untag-this-file (tags &optional prefix arg) ; Bound to `T -'diredp-untag-this-file9310,487598
(defun diredp-remove-all-tags-this-file (&optional prefix msgp) ; Bound to `T 0'diredp-remove-all-tags-this-file9327,488569
(defun diredp-paste-add-tags-this-file (&optional prefix msgp) ; Bound to `T p', `T C-y'diredp-paste-add-tags-this-file9339,489118
(defun diredp-paste-replace-tags-this-file (&optional prefix msgp) ; Bound to `T q'diredp-paste-replace-tags-this-file9352,489712
(defun diredp-set-tag-value-this-file (tag value &optional prefix msgp) ; Bound to `T v'diredp-set-tag-value-this-file9365,490320
(defun diredp-copy-tags-this-file (&optional prefix msgp) ; Bound to `T c', `T M-w'diredp-copy-tags-this-file9380,491036
(defun diredp-mouse-copy-tags (event)   ; Not bounddiredp-mouse-copy-tags9394,491725
(defalias 'diredp-show-metadata 'diredp-describe-autofile)diredp-show-metadata9432,493585
(defun diredp-describe-autofile (&optional internal-form-p)diredp-describe-autofile9434,493659
(defun diredp-mouse-describe-autofile (event &optional internal-form-p) ; Not bounddiredp-mouse-describe-autofile9452,494390
(defalias 'diredp-show-metadata-for-marked 'diredp-describe-marked-autofiles)diredp-show-metadata-for-marked9474,495354
(defun diredp-describe-marked-autofiles (&optional internal-form-p)diredp-describe-marked-autofiles9476,495447
(defun diredp-byte-compile-this-file () ; Bound to `b'diredp-byte-compile-this-file9508,497090
(defun diredp-load-this-file ()         ; Not bounddiredp-load-this-file9513,497274
(defun diredp-chmod-this-file ()        ; Bound to `M-m'diredp-chmod-this-file9518,497425
(defun dired-mark-sexp (predicate &optional unmark-p) ; Bound to `M-(', `* ('dired-mark-sexp9545,498409
(defun diredp-this-file-marked-p (&optional mark-char)diredp-this-file-marked-p9684,507007
(defun diredp-this-file-unmarked-p (&optional mark-char)diredp-this-file-unmarked-p9693,507557
(defun diredp-mark-region-files (&optional unmark-p) ; Not bounddiredp-mark-region-files9705,508230
(defun diredp-unmark-region-files (&optional mark-p) ; Not bounddiredp-unmark-region-files9719,508961
(defun diredp-flag-region-files-for-deletion () ; Not bounddiredp-flag-region-files-for-deletion9733,509688
(defun diredp-toggle-marks-in-region (start end) ; Not bounddiredp-toggle-marks-in-region9746,510360
(defvar diredp-file-line-overlay nil)diredp-file-line-overlay9772,511332
(defun diredp-mouse-3-menu (event)      ; Bound to `mouse-3'diredp-mouse-3-menu9775,511386
(defun diredp-find-file-other-frame ()  ; Bound to `C-o'diredp-find-file-other-frame9955,523087
(defun diredp-mouse-find-file-other-frame (event) ; Bound to `M-mouse-2'diredp-mouse-find-file-other-frame9961,523319
(defun dired-mouse-find-file-other-window (event) ; Bound to `mouse-2'dired-mouse-find-file-other-window9972,523686
(defun diredp-mouse-find-file (event)   ; Bound to `S-mouse-2'diredp-mouse-find-file9986,524328
(defun diredp-mouse-view-file (event)   ; Not bounddiredp-mouse-view-file9998,524856
(defun diredp-mouse-ediff (event)       ; Not bounddiredp-mouse-ediff10013,525559
(defun diredp-mouse-diff (event &optional switches) ; Not bounddiredp-mouse-diff10027,526143
(defun diredp-mouse-backup-diff (event) ; Not bounddiredp-mouse-backup-diff10058,528181
(defun diredp-mouse-mark (event)        ; Not bounddiredp-mouse-mark10083,529772
(defun diredp-mouse-unmark (event)      ; Not bounddiredp-mouse-unmark10100,530471
(defun diredp-mouse-mark/unmark (event) ; Not bounddiredp-mouse-mark/unmark10113,531029
(defun diredp-mouse-mark-region-files (event) ; Bound to `S-mouse-1'diredp-mouse-mark-region-files10134,532265
(defun diredp-mouse-mark/unmark-mark-region-files (event) ; Not bounddiredp-mouse-mark/unmark-mark-region-files10144,532696
(defun diredp-mouse-flag-file-deletion (event) ; Not bounddiredp-mouse-flag-file-deletion10164,533638
(defun diredp-mouse-do-copy (event)     ; Not bounddiredp-mouse-do-copy10175,534060
(defun diredp-mouse-do-rename (event)   ; Not bounddiredp-mouse-do-rename10186,534515
(defun diredp-mouse-upcase (event)      ; Not bounddiredp-mouse-upcase10195,534857
(defun diredp-mouse-downcase (event)    ; Not bounddiredp-mouse-downcase10204,535185
(defun diredp-mouse-do-delete (event)   ; Not bounddiredp-mouse-do-delete10213,535515
(defun diredp-mouse-do-shell-command (event) ; Not bounddiredp-mouse-do-shell-command10225,536017
(defun diredp-mouse-do-symlink (event)  ; Not bounddiredp-mouse-do-symlink10250,537184
(defun diredp-mouse-do-hardlink (event) ; Not bounddiredp-mouse-do-hardlink10259,537530
(defun diredp-mouse-do-print (event)    ; Not bounddiredp-mouse-do-print10268,537881
(defun diredp-mouse-do-grep (event)     ; Not bounddiredp-mouse-do-grep10283,538542
(defun diredp-mouse-do-compress (event) ; Not bounddiredp-mouse-do-compress10293,538895
(defun diredp-mouse-do-byte-compile (event) ; Not bounddiredp-mouse-do-byte-compile10304,539276
(defun diredp-mouse-do-load (event)     ; Not bounddiredp-mouse-do-load10315,539659
(defun diredp-mouse-do-chmod (event)    ; Not bounddiredp-mouse-do-chmod10326,540025
(defun diredp-describe-mode (&optional buffer)diredp-describe-mode10417,544172
(defun diredp-dired-plus-help ()diredp-dired-plus-help10438,545094
(defun diredp-dired-plus-description+links ()diredp-dired-plus-description+links10443,545245
(defun diredp-dired-plus-help-link ()diredp-dired-plus-help-link10465,546089
(defun diredp-dired-plus-description ()diredp-dired-plus-description10476,546685
(defun diredp-send-bug-report ()diredp-send-bug-report10856,563181

elpa/dired-hacks-utils-20160527.1436/dired-hacks-utils-autoloads.el,0

elpa/dired-hacks-utils-20160527.1436/dired-hacks-utils-pkg.el,167
(define-package "dired-hacks-utils" "20160527.1436" "Utilities and helpers for dired-hacks collection" '((dash "2.5.0")) :keywords '("files"))"dired-hacks-utils"1,0

elpa/dired-hacks-utils-20160527.1436/dired-hacks-utils.el,1183
(defgroup dired-hacks ()dired-hacks43,1463
(defun dired-utils-get-filename (&optional localp)dired-utils-get-filename48,1573
(defun dired-utils-get-all-files (&optional localp)dired-utils-get-all-files55,1802
(defconst dired-utils-file-attributes-keywordsdired-utils-file-attributes-keywords67,2156
(defconst dired-utils-info-keywordsdired-utils-info-keywords71,2344
(defun dired-utils--get-keyword-info (keyword)dired-utils--get-keyword-info75,2506
(defun dired-utils-get-info (&rest keywords)dired-utils-get-info87,2943
(defun dired-utils-goto-line (filename)dired-utils-goto-line102,3416
(defun dired-utils-match-filename-regexp (filename alist)dired-utils-match-filename-regexp116,3801
(defun dired-utils-match-filename-extension (filename alist)dired-utils-match-filename-extension128,4162
(defun dired-utils-is-file-p ()dired-utils-is-file-p141,4574
(defun dired-utils-is-dir-p ()dired-utils-is-dir-p145,4711
(defun dired-hacks-next-file (&optional arg)dired-hacks-next-file153,4918
(defun dired-hacks-previous-file (&optional arg)dired-hacks-previous-file173,5509
(defun dired-hacks-compare-files (file-a file-b)dired-hacks-compare-files192,6085

elpa/dired-open-20160205.1213/dired-open-autoloads.el,0

elpa/dired-open-20160205.1213/dired-open-pkg.el,181
(define-package "dired-open" "20160205.1213" "Open files from dired using using custom actions" '((dash "2.5.0") (dired-hacks-utils "0.0.1")) :keywords '("files"))"dired-open"1,0

elpa/dired-open-20160205.1213/dired-open.el,1119
(defgroup dired-open ()dired-open76,2954
(defcustom dired-open-functions '(dired-open-by-extension dired-open-subdir)dired-open-functions81,3080
(defcustom dired-open-find-file-function 'dired-find-filedired-open-find-file-function90,3425
(defcustom dired-open-extensions nildired-open-extensions96,3607
(defcustom dired-open-extensions-elisp nildired-open-extensions-elisp105,3883
(defcustom dired-open-use-nohup tdired-open-use-nohup114,4190
(defcustom dired-open-query-before-exit tdired-open-query-before-exit122,4406
(defun dired-open--start-process (file command)dired-open--start-process131,4655
(defun dired-open-xdg ()dired-open-xdg162,5754
(defun dired-open-by-extension ()dired-open-by-extension171,6057
(defun dired-open-guess-shell-alist ()dired-open-guess-shell-alist186,6603
(defun dired-open-call-function-by-extension ()dired-open-call-function-by-extension199,7093
(defun dired-open-subdir ()dired-open-subdir213,7572
(defun dired-open-file (&optional arg)dired-open-file234,8115
(define-key dired-mode-map [remap dired-find-file] 'dired-open-file)dired-mode-map247,8557

elpa/direx-20151023.1606/direx-autoloads.el,0

elpa/direx-20151023.1606/direx-pkg.el,95
(define-package "direx" "20151023.1606" "Simple Directory Explorer" 'nil :keywords"direx"1,0

elpa/direx-20151023.1606/direx-project.el,733
(defgroup direx-project nildirex-project30,888
(defcustom direx-project:project-root-predicate-functionsdirex-project:project-root-predicate-functions35,991
(defun direx-project:vc-root-p (dirname)direx-project:vc-root-p42,1221
(defun direx-project:project-root-p (dirname)direx-project:project-root-p46,1382
(defun direx-project:find-project-root-noselect (filename)direx-project:find-project-root-noselect50,1537
(defun direx-project:jump-to-project-root-noselect ()direx-project:jump-to-project-root-noselect59,2007
(defun direx-project:jump-to-project-root ()direx-project:jump-to-project-root69,2333
(defun direx-project:jump-to-project-root-other-window ()direx-project:jump-to-project-root-other-window74,2478

elpa/direx-20151023.1606/direx.el,11214
(defconst direx:version "1.0.0")direx:version34,972
(defgroup direx nildirex36,1006
(defcustom direx:leaf-icon "   "direx:leaf-icon41,1093
(defcustom direx:open-icon "[-]"direx:open-icon46,1167
(defcustom direx:closed-icon "[+]"direx:closed-icon51,1239
(defcustom direx:ignored-files-regexpdirex:ignored-files-regexp56,1313
(defmacro direx:aif (test then &rest else)direx:aif66,1481
(defmacro direx:awhen (test &rest body)direx:awhen70,1592
(defun direx:apply-partially (fun &rest args)direx:apply-partially74,1696
(defun direx:starts-with (x y)direx:starts-with82,1946
(defun direx:walk-tree (fun object)direx:walk-tree86,2058
(defun direx:canonical-filename (filename)direx:canonical-filename92,2222
(defun direx:canonical-dirname (dirname)direx:canonical-dirname95,2297
(defun direx:directory-basename (dirname)direx:directory-basename98,2394
(defun direx:directory-dirname (dirname)direx:directory-dirname103,2528
(defun direx:directory-parents (filename)direx:directory-parents108,2658
(defmacro direx:save-excursion-from-error (&rest body)direx:save-excursion-from-error114,2991
(defclass direx:tree ()direx:tree128,3314
(defgeneric direx:tree-equals (x y)direx:tree-equals132,3401
(defmethod direx:tree-equals (x y)direx:tree-equals135,3473
(defgeneric direx:tree-status (tree)direx:tree-status138,3521
(defmethod direx:tree-status (tree)direx:tree-status141,3600
(defclass direx:node (direx:tree)direx:node144,3643
(defgeneric direx:node-children (node)direx:node-children147,3684
(defmethod direx:node-children (node)direx:node-children150,3763
(defgeneric direx:node-contains (node descendant)direx:node-contains153,3809
(defmethod direx:node-contains (node descendant)direx:node-contains160,4138
(defclass direx:leaf (direx:tree)direx:leaf166,4411
(defclass direx:item ()direx:item173,4473
(defgeneric direx:generic-find-item (item not-this-window))direx:generic-find-item186,4878
(defgeneric direx:generic-view-item (item not-this-window))direx:generic-view-item188,4939
(defgeneric direx:generic-display-item (item))direx:generic-display-item190,5000
(defgeneric direx:make-item (tree parent)direx:make-item192,5048
(defmethod direx:make-item (tree parent)direx:make-item195,5124
(defun direx:make-item-children (item)direx:make-item-children198,5223
(defun direx:item-equals (x y)direx:item-equals202,5392
(defun direx:item-name (item)direx:item-name205,5487
(defun direx:item-leaf-p (item)direx:item-leaf-p208,5562
(defun direx:item-node-p (item)direx:item-node-p211,5644
(defun direx:item-depth (item)direx:item-depth214,5726
(defun direx:item-start (item)direx:item-start219,5837
(defun direx:item-end (item)direx:item-end222,5914
(defun direx:item-root (item)direx:item-root228,6104
(defun direx:item-buffer (item)direx:item-buffer233,6211
(defun direx:item-icon-part-offset (item)direx:item-icon-part-offset238,6304
(defun direx:item-name-part-offset (item)direx:item-name-part-offset241,6403
(defun direx:item-render-indent-part (item)direx:item-render-indent-part244,6513
(defun direx:item-render-icon-part (item)direx:item-render-icon-part247,6613
(defun direx:item-render-name-part (item)direx:item-render-name-part252,6733
(defun direx:item-render (item)direx:item-render259,6997
(defun direx:item-make-overlay (item start end)direx:item-make-overlay265,7184
(defun direx:item-insert (item)direx:item-insert272,7448
(defun direx:item-insert-children (item)direx:item-insert-children279,7635
(defun direx:item-ensure-children (item)direx:item-ensure-children287,7923
(defun direx:item-delete-recursively (item)direx:item-delete-recursively299,8295
(defun direx:item-change-icon (item new-icon)direx:item-change-icon305,8496
(defun direx:item-visible-p (item)direx:item-visible-p318,8988
(defun direx:item-show (item)direx:item-show321,9084
(defun direx:item-hide (item)direx:item-hide324,9173
(defun direx:item-show-children (item)direx:item-show-children327,9260
(defun direx:item-hide-children (item)direx:item-hide-children334,9500
(defun direx:item-expand (item)direx:item-expand340,9694
(defun direx:item-ensure-open (item)direx:item-ensure-open347,9924
(defun direx:item-expand-recursively (item)direx:item-expand-recursively351,10026
(defun direx:item-collapse (item)direx:item-collapse356,10187
(defun direx:item-ensure-closed (item)direx:item-ensure-closed362,10385
(defun direx:item-toggle (item)direx:item-toggle366,10489
(defmethod direx:item-refresh ((item direx:item))direx:item-refresh371,10615
(defun direx:item-refresh-recursively (item)direx:item-refresh-recursively394,11692
(defclass direx:file (direx:tree)direx:file409,12027
(defmethod direx:tree-equals ((x direx:file) y)direx:tree-equals413,12144
(defmethod direx:tree-status ((file direx:file))direx:tree-status418,12316
(defclass direx:regular-file (direx:file direx:leaf)direx:regular-file432,12975
(defun direx:make-regular-file (filename)direx:make-regular-file435,13035
(defclass direx:directory (direx:file direx:node)direx:directory440,13238
(defun direx:make-directory (dirname)direx:make-directory443,13295
(defmethod direx:node-children ((dir direx:directory))direx:node-children451,13614
(defmethod direx:node-contains ((dir direx:directory) file)direx:node-contains461,14069
(defclass direx:file-item (direx:item)direx:file-item468,14290
(defvar direx:file-keymapdirex:file-keymap471,14336
(defun direx:do-rename-file ()direx:do-rename-file485,14926
(defun direx:do-copy-files ()direx:do-copy-files494,15270
(defun direx:do-delete-files ()direx:do-delete-files503,15614
(defun direx:create-directory ()direx:create-directory512,15974
(defun direx:do-chmod-file ()direx:do-chmod-file528,16559
(defun direx:do-load-file ()direx:do-load-file540,17097
(defun direx:do-byte-compile-file ()direx:do-byte-compile-file553,17548
(defun direx:exec-command (program args)direx:exec-command572,18250
(defun direx:do-chxxx (program attr filename)direx:do-chxxx580,18588
(defun direx:do-chgrp ()direx:do-chgrp587,18872
(defun direx:do-chown ()direx:do-chown594,19089
(defun direx:do-touch ()direx:do-touch601,19306
(defclass direx:regular-file-item (direx:file-item)direx:regular-file-item616,19940
(defmethod direx:generic-find-item ((item direx:regular-file-item) not-this-window)direx:generic-find-item619,19999
(defmethod direx:generic-view-item ((item direx:regular-file-item) not-this-window)direx:generic-view-item625,20246
(defmethod direx:generic-display-item ((item direx:regular-file-item))direx:generic-display-item631,20493
(defmethod direx:make-item ((file direx:regular-file) parent)direx:make-item635,20684
(defclass direx:directory-item (direx:file-item)direx:directory-item645,21088
(defmethod direx:generic-find-item ((item direx:directory-item) not-this-window)direx:generic-find-item648,21144
(defmethod direx:generic-display-item ((item direx:directory-item))direx:generic-display-item654,21377
(defmethod direx:make-item ((dir direx:directory) parent)direx:make-item658,21559
(defvar direx:root-item nil)direx:root-item669,21822
(defun direx:item-at-point (&optional point)direx:item-at-point671,21852
(defun direx:item-at-point! (&optional point)direx:item-at-point!674,21952
(defun direx:item-at-event (event)direx:item-at-event678,22068
(defun direx:find-root-item-if (predicate)direx:find-root-item-if683,22242
(defun direx:find-root-item-for-root (root)direx:find-root-item-for-root688,22438
(defun direx:buffer-live-p (buffer)direx:buffer-live-p692,22579
(defun direx:buffer-list ()direx:buffer-list696,22718
(defgeneric direx:make-buffer (root))direx:make-buffer699,22804
(defmethod direx:make-buffer ((root direx:tree))direx:make-buffer701,22843
(defmethod direx:make-buffer ((dir direx:directory))direx:make-buffer709,23149
(defun direx:revert-buffer (ignore-auto noconfirm)direx:revert-buffer715,23353
(defun direx:make-buffer-for-root (root)direx:make-buffer-for-root718,23435
(defun direx:ensure-buffer-for-root (root)direx:ensure-buffer-for-root723,23578
(defun direx:find-buffer-for-root (root)direx:find-buffer-for-root727,23704
(defun direx:add-root-into-buffer (root buffer &optional noexpand)direx:add-root-into-buffer731,23827
(defun direx:goto-item-for-tree-1 (tree)direx:goto-item-for-tree-1742,24227
(defun direx:goto-item-for-tree (tree)direx:goto-item-for-tree756,24783
(defun direx:ensure-item-visible (item))direx:ensure-item-visible765,24938
(defun direx:move-to-item-name-part (&optional item)direx:move-to-item-name-part767,24980
(defun direx:next-item (&optional arg)direx:next-item775,25267
(defun direx:previous-item (&optional arg)direx:previous-item783,25597
(defun direx:up-item-1 (item)direx:up-item-1787,25709
(defun direx:up-item ()direx:up-item793,25953
(defun direx:down-item ()direx:down-item799,26086
(defun direx:next-sibling-item-1 (item arg)direx:next-sibling-item-1807,26338
(defun direx:next-sibling-item (&optional arg)direx:next-sibling-item823,27005
(defun direx:previous-sibling-item (&optional arg)direx:previous-sibling-item830,27226
(defun direx:refresh-whole-tree (&optional item)direx:refresh-whole-tree834,27363
(defun direx:echo-item ()direx:echo-item840,27588
(defun direx:find-item (&optional item)direx:find-item844,27709
(defun direx:find-item-other-window (&optional item)direx:find-item-other-window849,27851
(defun direx:view-item (&optional item)direx:view-item854,28004
(defun direx:view-item-other-window (&optional item)direx:view-item-other-window859,28146
(defun direx:display-item (&optional item)direx:display-item864,28299
(defun direx:maybe-find-item (&optional item)direx:maybe-find-item870,28490
(defun direx:expand-item (&optional item)direx:expand-item877,28691
(defun direx:expand-item-recursively (&optional item)direx:expand-item-recursively888,29083
(defun direx:collapse-item (&optional item)direx:collapse-item894,29279
(defun direx:toggle-item (&optional item)direx:toggle-item900,29455
(defun direx:mouse-1 (event)direx:mouse-1908,29692
(defun direx:mouse-2 (event)direx:mouse-2913,29818
(defvar direx:direx-mode-mapdirex:direx-mode-map918,29951
(define-derived-mode direx:direx-mode special-mode "Direx"direx:direx-mode950,31753
(defun direx:find-directory-noselect (dirname)direx:find-directory-noselect961,31980
(defun direx:find-directory (dirname)direx:find-directory965,32132
(defun direx:find-directory-other-window (dirname)direx:find-directory-other-window969,32272
(defun direx:find-directory-reuse-noselect (dirname)direx:find-directory-reuse-noselect973,32438
(defun direx:find-directory-reuse (dirname)direx:find-directory-reuse982,32879
(defun direx:find-directory-reuse-other-window (dirname)direx:find-directory-reuse-other-window986,33031
(defun direx:maybe-goto-current-buffer-item (buffer)direx:maybe-goto-current-buffer-item990,33209
(defun direx:jump-to-directory-noselect ()direx:jump-to-directory-noselect999,33563
(defun direx:jump-to-directory ()direx:jump-to-directory1006,33775
(defun direx:jump-to-directory-other-window ()direx:jump-to-directory-other-window1011,33898

elpa/ein-20160422.629/debug-ein.el,0

elpa/ein-20160422.629/ein-ac.el,1726
(defvar ein:ac-sources (and (boundp 'ac-sources)ein:ac-sources38,1047
(defcustom ein:ac-max-cache 1000ein:ac-max-cache43,1251
(defvar ein:ac-chunk-regexein:ac-chunk-regex52,1440
(defun ein:ac-chunk-beginning ()ein:ac-chunk-beginning66,1990
(defun ein:ac-chunk-candidates-from-list (chunk-list)ein:ac-chunk-candidates-from-list72,2188
(defvar ein:ac-direct-matches nilein:ac-direct-matches84,2528
(defun ein:ac-direct-get-matches ()ein:ac-direct-get-matches88,2676
(define-obsolete-function-alias 'ac-complete-ein-cached 'ac-complete-ein-asyncac-complete-ein-cached104,3344
(define-obsolete-variable-alias 'ac-source-ein-cached 'ac-source-ein-asyncac-source-ein-cached106,3434
(defun ein:ac-request-in-background ()ein:ac-request-in-background109,3521
(defun ein:ac-prepare-completion (matches)ein:ac-prepare-completion123,3904
(defun* ein:completer-finish-completing-acein:completer-finish-completing-ac129,4146
(defun ein:ac-request-document-for-selected-candidate ()ein:ac-request-document-for-selected-candidate151,4981
(defun ein:ac-set-document (candidate content -metadata-not-used-)ein:ac-set-document171,5900
(defadvice ac-next (after ein:ac-next-request)ac-next178,6211
(defadvice ac-previous (after ein:ac-previous-request)ac-previous183,6408
(defadvice ac-update (after ein:ac-update-request)ac-update188,6613
(defun ein:ac-superpack ()ein:ac-superpack197,6903
(defun ein:ac-setup ()ein:ac-setup209,7330
(defun ein:ac-setup-maybe ()ein:ac-setup-maybe213,7483
(defun ein:ac-config (&optional superpack)ein:ac-config235,8398
(defvar ein:ac-config-once-called nil)ein:ac-config-once-called245,8743
(defun ein:ac-config-once (&optional superpack)ein:ac-config-once247,8783

elpa/ein-20160422.629/ein-autoloads.el,250
(defalias 'ein:kernel-url-or-port 'ein:$kernel-url-or-port)ein:kernel-url-or-port191,5256
(defalias 'ein:kernel-id 'ein:$kernel-kernel-id)ein:kernel-id193,5317
(defalias 'ein:notebook-name 'ein:$notebook-notebook-name)ein:notebook-name212,5770

elpa/ein-20160422.629/ein-cell-output.el,1319
(defmethod ein:cell-to-json ((cell ein:codecell) &optional discard-output)ein:cell-to-json32,1018
(defvar ein:output-type-mapein:output-type-map42,1447
(defun ein:output-property (maybe-property)ein:output-property47,1651
(defmethod ein:cell-to-nb4-json ((cell ein:codecell) wsidx &optional discard-output)ein:cell-to-nb4-json50,1748
(defmethod ein:cell-to-json ((cell ein:textcell) &optional discard-output)ein:cell-to-json77,3000
(defmethod ein:cell-to-nb4-json ((cell ein:textcell) wsidx &optional discard-output)ein:cell-to-nb4-json81,3164
(defmethod ein:cell-to-nb4-json ((cell ein:headingcell) wsidx &optional discard-output)ein:cell-to-nb4-json86,3403
(defmethod ein:cell-to-json ((cell ein:headingcell) &optional discard-output)ein:cell-to-json92,3715
(defun ein:cell-stream-output-to-json (output)ein:cell-stream-output-to-json97,3917
(defun ein:cell-error-output-to-json (output)ein:cell-error-output-to-json102,4076
(defun ein:cell-execute-result-output-to-json (output)ein:cell-execute-result-output-to-json108,4286
(defun ein:maybe-get-output-mime-data (output)ein:maybe-get-output-mime-data118,4660
(defun ein:cell-display-data-output-to-json (output)ein:cell-display-data-output-to-json123,4879
(defun ein:find-and-make-outputs (output-plist)ein:find-and-make-outputs130,5122

elpa/ein-20160422.629/ein-cell.el,10856
(defface ein:cell-input-promptein:cell-input-prompt48,1359
(defface ein:cell-input-areaein:cell-input-area53,1467
(defface ein:cell-heading-1ein:cell-heading-161,1679
(defface ein:cell-heading-2ein:cell-heading-266,1802
(defface ein:cell-heading-3ein:cell-heading-371,1925
(defface ein:cell-heading-4ein:cell-heading-476,2048
(defface ein:cell-heading-5ein:cell-heading-581,2171
(defface ein:cell-heading-6ein:cell-heading-686,2294
(defface ein:cell-output-promptein:cell-output-prompt91,2436
(defface ein:cell-output-stderrein:cell-output-stderr96,2546
(defface ein:pos-tip-faceein:pos-tip-face104,2764
(defcustom ein:cell-traceback-level 1ein:cell-traceback-level112,2912
(defcustom ein:cell-max-num-outputs nilein:cell-max-num-outputs120,3233
(defcustom ein:cell-autoexec-prompt "⚡"ein:cell-autoexec-prompt127,3524
(defcustom ein:slice-image nilein:slice-image133,3712
(defmacro ein:oset-if-empty (obj slot value)ein:oset-if-empty149,4173
(defmacro ein:oref-safe (obj slot)ein:oref-safe153,4311
(defvar ein:mime-type-mapein:mime-type-map159,4418
(defun ein:insert-image (&rest args)ein:insert-image163,4570
(defclass ein:basecell ()ein:basecell174,4896
(defclass ein:codecell (ein:basecell)ein:codecell189,5597
(defclass ein:textcell (ein:basecell)ein:textcell221,7056
(defclass ein:htmlcell (ein:textcell)ein:htmlcell225,7203
(defclass ein:markdowncell (ein:textcell)ein:markdowncell228,7296
(defclass ein:rawcell (ein:textcell)ein:rawcell231,7397
(defclass ein:headingcell (ein:textcell)ein:headingcell234,7488
(defun ein:cell-class-from-type (type)ein:cell-class-from-type241,7646
(defun ein:preprocess-nb4-cell (cell-data)ein:preprocess-nb4-cell253,8031
(defun ein:cell-from-type (type &rest args)ein:cell-from-type264,8531
(defun ein:cell-from-json (data &rest args)ein:cell-from-json267,8631
(defmethod ein:cell-init ((cell ein:codecell) data)ein:cell-init276,9005
(defmethod ein:cell-init ((cell ein:textcell) data)ein:cell-init291,9744
(defmethod ein:cell-init ((cell ein:headingcell) data)ein:cell-init296,9870
(defmethod ein:cell-convert ((cell ein:basecell) type)ein:cell-convert302,10019
(defmethod ein:cell-convert ((cell ein:codecell) type)ein:cell-convert316,10569
(defmethod ein:cell-convert ((cell ein:headingcell) type)ein:cell-convert323,10800
(defmethod ein:cell-copy ((cell ein:basecell))ein:cell-copy329,10981
(defmethod ein:cell-convert-inplace ((cell ein:basecell) type)ein:cell-convert-inplace332,11079
(defmethod ein:cell-change-level ((cell ein:headingcell) level)ein:cell-change-level362,12306
(defmethod ein:cell-num-outputs ((cell ein:codecell))ein:cell-num-outputs375,12694
(defmethod ein:cell-num-outputs ((cell ein:textcell))ein:cell-num-outputs378,12782
(defmethod ein:cell-element-get ((cell ein:basecell) prop &rest args)ein:cell-element-get381,12842
(defmethod ein:cell-element-get ((cell ein:codecell) prop &optional index)ein:cell-element-get389,13199
(defmethod ein:cell-element-get ((cell ein:textcell) prop)ein:cell-element-get409,13908
(defmethod ein:cell-all-element ((cell ein:basecell))ein:cell-all-element416,14154
(defmethod ein:cell-all-element ((cell ein:codecell))ein:cell-all-element421,14342
(defmethod ein:cell-language ((cell ein:basecell))ein:cell-language425,14474
(defmethod ein:cell-language ((cell ein:codecell)) nil "python")ein:cell-language431,14639
(defmethod ein:cell-language ((cell ein:markdowncell)) nil "markdown")ein:cell-language432,14704
(defmethod ein:cell-language ((cell ein:htmlcell)) nil "html")ein:cell-language433,14775
(defmethod ein:cell-language ((cell ein:rawcell)) nil "rst")ein:cell-language434,14838
(defun ein:cell-make-element (make-node num-outputs)ein:cell-make-element439,14911
(defmethod ein:cell-enter-last ((cell ein:basecell))ein:cell-enter-last448,15273
(defmethod ein:cell-enter-first ((cell ein:basecell))ein:cell-enter-first462,15901
(defmethod ein:cell-insert-below ((base-cell ein:basecell) other-cell)ein:cell-insert-below477,16472
(defun ein:cell-pp (path data)ein:cell-pp489,16996
(defmethod ein:cell-insert-prompt ((cell ein:codecell))ein:cell-insert-prompt496,17232
(defmethod ein:cell-insert-prompt ((cell ein:textcell))ein:cell-insert-prompt506,17658
(defmethod ein:cell-insert-prompt ((cell ein:headingcell))ein:cell-insert-prompt511,17824
(defmethod ein:cell-insert-input ((cell ein:basecell))ein:cell-insert-input516,17990
(defmethod ein:cell-get-input-area-face ((cell ein:basecell))ein:cell-get-input-area-face530,18657
(defmethod ein:cell-get-input-area-face ((cell ein:headingcell))ein:cell-get-input-area-face534,18789
(defun ein:cell-insert-output (index cell)ein:cell-insert-output537,18917
(defmethod ein:cell-insert-footer ((cell ein:basecell))ein:cell-insert-footer576,21003
(defmethod ein:cell-insert-footer ((cell ein:codecell))ein:cell-insert-footer581,21205
(defun ein:cell-node-p (node &optional element-name)ein:cell-node-p593,21693
(defun ein:cell-ewoc-node-p (ewoc-node &optional element-name)ein:cell-ewoc-node-p600,21953
(defun ein:cell-from-ewoc-node (ewoc-node)ein:cell-from-ewoc-node603,22073
(defmethod ein:cell-input-pos-min ((cell ein:basecell))ein:cell-input-pos-min606,22176
(defmethod ein:cell-input-pos-max ((cell ein:basecell))ein:cell-input-pos-max613,22502
(defmethod ein:cell-get-text ((cell ein:basecell))ein:cell-get-text621,22879
(defmethod ein:cell-set-text ((cell ein:basecell) text)ein:cell-set-text629,23176
(defmethod ein:cell-save-text ((cell ein:basecell))ein:cell-save-text641,23641
(defmethod ein:cell-deactivate ((cell ein:basecell))ein:cell-deactivate644,23741
(defmethod ein:cell-active-p ((cell ein:basecell))ein:cell-active-p648,23830
(defmethod ein:cell-running-set ((cell ein:codecell) running)ein:cell-running-set651,23906
(defmethod ein:cell-set-collapsed ((cell ein:codecell) collapsed)ein:cell-set-collapsed655,24047
(defmethod ein:cell-collapse ((cell ein:codecell))ein:cell-collapse663,24375
(defmethod ein:cell-expand ((cell ein:codecell))ein:cell-expand666,24462
(defmethod ein:cell-toggle-output ((cell ein:codecell))ein:cell-toggle-output669,24549
(defmethod ein:cell-invalidate-prompt ((cell ein:codecell))ein:cell-invalidate-prompt673,24739
(defmethod ein:cell-set-input-prompt ((cell ein:codecell) &optional number)ein:cell-set-input-prompt679,24994
(defmethod ein:cell-set-autoexec ((cell ein:codecell) bool)ein:cell-set-autoexec683,25150
(defmethod ein:cell-autoexec-p ((cell ein:basecell))ein:cell-autoexec-p689,25358
(defmethod ein:cell-autoexec-p ((cell ein:codecell))ein:cell-autoexec-p694,25496
(defmethod ein:cell-toggle-autoexec ((cell ein:codecell))ein:cell-toggle-autoexec697,25575
(defmethod ein:cell-goto ((cell ein:basecell) &optional relpos prop)ein:cell-goto702,25783
(defmethod ein:cell-goto-line ((cell ein:basecell) &optional inputline prop)ein:cell-goto-line717,26355
(defmethod ein:cell-relative-point ((cell ein:basecell) &optional pos)ein:cell-relative-point734,26975
(defmethod ein:cell-location ((cell ein:basecell) &optional elm end)ein:cell-location740,27268
(defmethod ein:cell-buffer ((cell ein:basecell))ein:cell-buffer761,28033
(defmethod ein:cell-clear-output ((cell ein:codecell) stdout stderr other)ein:cell-clear-output768,28214
(defun ein:cell-output-json-to-class (json)ein:cell-output-json-to-class813,30414
(defmethod ein:cell-append-output ((cell ein:codecell) json dynamic)ein:cell-append-output829,30846
(defmethod ein:cell-actually-append-output ((cell ein:codecell) json dynamic)ein:cell-actually-append-output843,31506
(defmethod ein:cell-append-pyout ((cell ein:codecell) json)ein:cell-append-pyout863,32393
(defmethod ein:cell-append-pyerr ((cell ein:codecell) json)ein:cell-append-pyerr873,32860
(ein:deflocal ein:%cell-append-stream-last-cell% nilein:%cell-append-stream-last-cell%887,33438
(defmethod ein:cell-append-stream ((cell ein:codecell) json)ein:cell-append-stream890,33554
(defun ein:cell-append-stream-text-fontified (text json)ein:cell-append-stream-text-fontified907,34369
(defmethod ein:cell-append-display-data ((cell ein:codecell) json)ein:cell-append-display-data913,34642
(defcustom ein:output-type-preferenceein:output-type-preference919,34910
(defun ein:output-type-prefer-pretty-text-over-html (data)ein:output-type-prefer-pretty-text-over-html939,35690
(defun ein:fix-mime-type (type)ein:fix-mime-type950,36360
(defun ein:cell-append-mime-type (json dynamic)ein:cell-append-mime-type955,36461
(defun ein:cell-append-text (data &rest properties)ein:cell-append-text988,37910
(defun ein:cell-safe-read-eval-insert (text)ein:cell-safe-read-eval-insert992,38063
(defmethod ein:cell-to-json ((cell ein:codecell) &optional discard-output)ein:cell-to-json1003,38408
(defvar ein:output-type-mapein:output-type-map1013,38837
(defun ein:output-property-p (maybe-property)ein:output-property-p1018,39041
(defmethod ein:cell-to-nb4-json ((cell ein:codecell) wsidx &optional discard-output)ein:cell-to-nb4-json1021,39134
(defmethod ein:cell-to-json ((cell ein:textcell) &optional discard-output)ein:cell-to-json1087,42515
(defmethod ein:cell-to-nb4-json ((cell ein:textcell) wsidx &optional discard-output)ein:cell-to-nb4-json1091,42679
(defmethod ein:cell-to-nb4-json ((cell ein:headingcell) wsidx &optional discard-output)ein:cell-to-nb4-json1096,42918
(defmethod ein:cell-to-json ((cell ein:headingcell) &optional discard-output)ein:cell-to-json1102,43230
(defmethod ein:cell-next ((cell ein:basecell))ein:cell-next1106,43397
(defmethod ein:cell-prev ((cell ein:basecell))ein:cell-prev1114,43728
(defmethod ein:cell-set-kernel ((cell ein:codecell) kernel)ein:cell-set-kernel1125,44093
(defmethod ein:cell-execute ((cell ein:codecell))ein:cell-execute1129,44185
(defmethod ein:cell-execute-internal ((cell ein:codecell)ein:cell-execute-internal1135,44416
(defmethod ein:cell-make-callbacks ((cell ein:codecell))ein:cell-make-callbacks1143,44750
(defmethod ein:cell--handle-execute-reply ((cell ein:codecell) contentein:cell--handle-execute-reply1150,45078
(defmethod ein:cell--handle-set-next-input ((cell ein:codecell) text)ein:cell--handle-set-next-input1160,45635
(defmethod ein:cell--handle-output ((cell ein:codecell) msg-type contentein:cell--handle-output1174,46089
(defun ein:output-area-convert-mime-types (json data)ein:output-area-convert-mime-types1198,47297
(defmethod ein:cell--handle-clear-output ((cell ein:codecell) contentein:cell--handle-clear-output1213,48018
(defmethod ein:cell-has-image-ouput-p ((cell ein:codecell))ein:cell-has-image-ouput-p1224,48431
(defmethod ein:cell-has-image-ouput-p ((cell ein:textcell))ein:cell-has-image-ouput-p1235,48882
(defmethod ein:cell-get-tb-data ((cell ein:codecell))ein:cell-get-tb-data1238,48950

elpa/ein-20160422.629/ein-completer.el,659
(defun ein:completer-choose ()ein:completer-choose37,1051
(defun ein:completer-beginning (matched-text)ein:completer-beginning49,1436
(defun ein:completer-finish-completing (args content -metadata-not-used-)ein:completer-finish-completing53,1556
(defun ein:completer-finish-completing-default (matched-text matchesein:completer-finish-completing-default64,2108
(defun* ein:completer-completeein:completer-complete75,2556
(defun ein:completer-dot-complete ()ein:completer-dot-complete103,3621
(defcustom ein:complete-on-dot tein:complete-on-dot112,3923
(defun ein:complete-on-dot-install (map &optional func)ein:complete-on-dot-install120,4210

elpa/ein-20160422.629/ein-connect.el,2678
(defun ein:maybe-save-buffer (option)ein:maybe-save-buffer44,1453
(defcustom ein:connect-run-command "%run"ein:connect-run-command65,1996
(defcustom ein:connect-reload-command "%run -n"ein:connect-reload-command80,2690
(defun ein:connect-run-command-get ()ein:connect-run-command-get95,3356
(defcustom ein:connect-save-before-run 'yesein:connect-save-before-run99,3521
(defcustom ein:connect-aotoexec-lighter nilein:connect-aotoexec-lighter106,3810
(defcustom ein:connect-default-notebook nilein:connect-default-notebook114,4164
(ein:deflocal ein:%connect% nilein:%connect%138,5054
(define-obsolete-variable-alias 'ein:@connect 'ein:%connect% "0.1.2")ein:@connect140,5151
(defclass ein:connect ()ein:connect142,5222
(defun ein:connect-setup (notebook buffer)ein:connect-setup151,5528
(defun ein:connect-to-notebook-command (&optional not-yet-opened)ein:connect-to-notebook-command163,5805
(defun ein:connect-to-notebook (nbpath &optional buffer no-reconnection)ein:connect-to-notebook174,6256
(defun ein:connect-to-notebook-buffer (buffer-or-name)ein:connect-to-notebook-buffer188,6764
(defun ein:connect-buffer-to-notebook (notebook &optional bufferein:connect-buffer-to-notebook197,7180
(defun ein:connect-get-notebook ()ein:connect-get-notebook214,7878
(defun ein:connect-get-kernel ()ein:connect-get-kernel217,7948
(defun ein:connect-eval-buffer ()ein:connect-eval-buffer220,8035
(defun ein:connect-run-buffer (&optional ask-command)ein:connect-run-buffer228,8370
(defun ein:connect-run-or-eval-buffer (&optional eval)ein:connect-run-or-eval-buffer248,9426
(defun ein:connect-reload-buffer ()ein:connect-reload-buffer259,9851
(defun ein:connect-eval-region (start end)ein:connect-eval-region265,10091
(defun ein:connect-pop-to-notebook ()ein:connect-pop-to-notebook278,10518
(defun ein:get-url-or-port--connect ()ein:get-url-or-port--connect286,10696
(defun ein:get-notebook--connect ()ein:get-notebook--connect289,10809
(defun ein:get-kernel--connect ()ein:get-kernel--connect293,10921
(defun ein:get-traceback-data--connect ()ein:get-traceback-data--connect296,11024
(defun ein:connect-assert-connected ()ein:connect-assert-connected305,11337
(defun ein:connect-execute-autoexec-cells ()ein:connect-execute-autoexec-cells312,11655
(defun ein:connect-toggle-autoexec ()ein:connect-toggle-autoexec318,11914
(defun ein:connect-to-default-notebook ()ein:connect-to-default-notebook347,12806
(defvar ein:connect-mode-map (make-sparse-keymap))ein:connect-mode-map363,13321
(defun ein:connect-mode-get-lighter ()ein:connect-mode-get-lighter383,14322
(define-minor-mode ein:connect-modeein:connect-mode389,14528

elpa/ein-20160422.629/ein-console.el,676
(defcustom ein:console-security-dir ""ein:console-security-dir54,1667
(defcustom ein:console-executable (executable-find "ipython")ein:console-executable86,2963
(defcustom ein:console-args '("--profile" "nbserver")ein:console-args104,3799
(defun ein:console-security-dir-get (url-or-port)ein:console-security-dir-get147,5455
(defun ein:console-executable-get (url-or-port)ein:console-executable-get153,5670
(defun ein:console-args-get (url-or-port)ein:console-args-get156,5779
(defun ein:console-make-command ()ein:console-make-command163,6047
(defun ein:console-get-buffer ()ein:console-get-buffer182,6925
(defun ein:console-open ()ein:console-open188,7135

elpa/ein-20160422.629/ein-contents-api.el,2889
(defcustom ein:content-query-timeout (* 60 1000) ; 1 minein:content-query-timeout37,1138
(defstruct ein:$contentein:$content48,1603
(defun ein:content-url (content)ein:content-url99,2892
(defun ein:content-url-legacy (content)ein:content-url-legacy104,3092
(defun ein:content-query-contents (path &optional url-or-port force-sync callback)ein:content-query-contents110,3360
(defun ein:content-query-contents-legacy (path &optional url-or-port force-sync callback)ein:content-query-contents-legacy131,4381
(defun ein:fix-legacy-content-data (data)ein:fix-legacy-content-data149,5280
(defun* ein:query-contents-legacy-success (path content callback &key data &allow-other-keys)ein:query-contents-legacy-success158,5641
(defun* ein:new-content (content callback &key data &allow-other-keys)ein:new-content176,6543
(defun ein:content-to-json (content)ein:content-to-json190,7261
(defun ein:content-from-notebook (nb)ein:content-from-notebook203,7879
(defun* ein:content-query-contents-error (url &key symbol-status response &allow-other-keys)ein:content-query-contents-error213,8319
(defvar *ein:content-hierarchy* (make-hash-table))*ein:content-hierarchy*221,8594
(defun ein:get-content-hierarchy (url-or-port)ein:get-content-hierarchy223,8646
(defun ein:make-content-hierarchy (path url-or-port)ein:make-content-hierarchy227,8798
(defun ein:refresh-content-hierarchy (&optional url-or-port)ein:refresh-content-hierarchy244,9642
(defun ein:content-save-legacy (content &optional callback cbargs errcb errcbargs)ein:content-save-legacy250,9900
(defun ein:content-save (content &optional callback cbargs errcb errcbargs)ein:content-save261,10489
(defun* ein:content-save-success (callback cbargs &key status response &allow-other-keys)ein:content-save-success274,11168
(defun* ein:content-save-error (url errcb errcbargs &key response status-code &allow-other-keys)ein:content-save-error279,11374
(defun ein:content-legacy-rename (content new-path callback cbargs)ein:content-legacy-rename290,11707
(defun* update-content-path-legacy (content callback cbargs &key data &allow-other-keys)update-content-path-legacy303,12380
(defun ein:content-rename (content new-path &optional callback cbargs)ein:content-rename311,12824
(defun* update-content-path (content callback cbargs &key data &allow-other-keys)update-content-path323,13442
(defun* ein:content-rename-error (path &key symbol-status response &allow-other-keys)ein:content-rename-error330,13768
(defun ein:content-query-sessions (session-hash url-or-port &optional force-sync)ein:content-query-sessions339,14043
(defun* ein:content-query-sessions-success (session-hash url-or-port &key data &allow-other-keys)ein:content-query-sessions-success349,14442
(defun* ein:content-query-sessions-error (&key symbol-status response &allow-other-keys)ein:content-query-sessions-error361,15099

elpa/ein-20160422.629/ein-core.el,1790
(defgroup ein nilein41,1145
(defvar ein:version "0.7"ein:version46,1242
(defcustom ein:url-or-port '(8888)ein:url-or-port52,1344
(defcustom ein:default-url-or-port nilein:default-url-or-port61,1713
(defcustom ein:filename-translations nilein:filename-translations69,2026
(defvar ein:source-dir (file-name-directory load-file-name)ein:source-dir111,3555
(defun ein:default-url-or-port ()ein:default-url-or-port117,3688
(defun ein:version ()ein:version120,3782
(defvar *running-ipython-version* (make-hash-table))*running-ipython-version*130,4158
(defun ein:query-ipython-version (&optional url-or-port force)ein:query-ipython-version133,4296
(defun ein:force-ipython-version-check ()ein:force-ipython-version-check150,5210
(defun ein:filename-translations-get (url-or-port)ein:filename-translations-get163,5672
(defun ein:filename-to-python (url-or-port filename)ein:filename-to-python166,5787
(defun ein:filename-from-python (url-or-port filename)ein:filename-from-python171,5945
(defun ein:make-tramp-file-name (username remote-host python-filename)ein:make-tramp-file-name176,6106
(defun ein:tramp-create-filename-translator (remote-host &optional username)ein:tramp-create-filename-translator189,6667
(defun ein:generic-getter (func-list)ein:generic-getter222,7763
(defun ein:get-url-or-port ()ein:get-url-or-port240,8565
(defun ein:get-notebook ()ein:get-notebook247,8878
(defun ein:get-notebook-or-error ()ein:get-notebook-or-error252,9069
(defun ein:get-kernel ()ein:get-kernel256,9192
(defun ein:get-kernel-or-error ()ein:get-kernel-or-error262,9422
(defun ein:get-cell-at-point ()ein:get-cell-at-point266,9539
(defun ein:get-traceback-data ()ein:get-traceback-data270,9693
(defun ein:byte-compile-ein ()ein:byte-compile-ein279,9930

elpa/ein-20160422.629/ein-dev.el,1891
(defun ein:dev-insert-mode-map (map-string)ein:dev-insert-mode-map36,1008
(defun ein:load-files (&optional regex dir ignore-compiled)ein:load-files49,1426
(defun ein:dev-reload ()ein:dev-reload59,1801
(defun* ein:dev-require-all (&key (ignore-p #'ignore))ein:dev-require-all68,2099
(defadvice backtrace (around ein:dev-short-backtrace)backtrace76,2435
(defun ein:dev-patch-backtrace ()ein:dev-patch-backtrace86,2814
(defun ein:dev-depatch-backtrace ()ein:dev-depatch-backtrace92,3016
(defun ein:dev-show-debug-setting ()ein:dev-show-debug-setting100,3263
(defun ein:dev-start-debug (&optional ws-callback)ein:dev-start-debug112,3785
(defun ein:dev-stop-debug ()ein:dev-stop-debug128,4302
(defun ein:dev-pop-to-debug-shell ()ein:dev-pop-to-debug-shell140,4668
(defun ein:dev-pop-to-debug-iopub ()ein:dev-pop-to-debug-iopub148,4939
(defun ein:dev-notebook-plain-mode ()ein:dev-notebook-plain-mode156,5210
(defun ein:dev-notebook-python-mode ()ein:dev-notebook-python-mode161,5356
(defun ein:dev-notebook-mumamo-mode ()ein:dev-notebook-mumamo-mode166,5505
(defun ein:dev-notebook-multilang-mode ()ein:dev-notebook-multilang-mode171,5654
(defun ein:dev-sys-info--lib (name)ein:dev-sys-info--lib176,5812
(defun ein:dev-dump-vars (names)ein:dev-dump-vars188,6303
(defun ein:dev-stdout-program (command args)ein:dev-stdout-program193,6470
(defun ein:dev-sys-info ()ein:dev-sys-info201,6758
(defun ein:dev-show-sys-info (&optional show-in-buffer)ein:dev-show-sys-info228,8018
(defun ein:dev-bug-report-template ()ein:dev-bug-report-template241,8460
(defun ein:dev-print-sys-info (&optional stream)ein:dev-print-sys-info305,10278
(defun ein:dev--pp-to-string (object)ein:dev--pp-to-string309,10419
(defun ein:dev--prettify-sexp ()ein:dev--prettify-sexp321,10758
(defun ein:debug-notebook-to-json-buffer ()ein:debug-notebook-to-json-buffer345,11573

elpa/ein-20160422.629/ein-events.el,257
(defclass ein:events ()ein:events37,968
(defun ein:events-new ()ein:events-new42,1124
(defun ein:events-trigger (events event-type &optional data)ein:events-trigger46,1222
(defmethod ein:events-on ((events ein:events) event-typeein:events-on54,1575

elpa/ein-20160422.629/ein-helm.el,1261
(defmacro ein:helm-export-source (name)ein:helm-export-source38,1017
(defvar ein:helm-pattern 'helm-patternein:helm-pattern50,1497
(defvar ein:helm-kernel nilein:helm-kernel53,1608
(defcustom ein:helm-kernel-history-search-auto-pattern tein:helm-kernel-history-search-auto-pattern60,1703
(defun ein:helm-kernel-history-search-construct-pattern (pattern)ein:helm-kernel-history-search-construct-pattern71,2095
(defun ein:helm-kernel-history-search-get-candidates ()ein:helm-kernel-history-search-get-candidates81,2486
(defvar ein:helm-source-kernel-historyein:helm-source-kernel-history93,2967
(defun anything-ein-kernel-history ()anything-ein-kernel-history106,3344
(defun helm-ein-kernel-history ()helm-ein-kernel-history114,3656
(defvar ein:helm-source-notebook-buffersein:helm-source-notebook-buffers125,3962
(defvar ein:helm-source-modified-notebook-buffersein:helm-source-modified-notebook-buffers131,4180
(defvar ein:helm-source-saved-notebook-buffersein:helm-source-saved-notebook-buffers139,4464
(defvar ein:helm-notebook-buffer-sourcesein:helm-notebook-buffer-sources157,4995
(defun anything-ein-notebook-buffers ()anything-ein-notebook-buffers162,5143
(defun helm-ein-notebook-buffers ()helm-ein-notebook-buffers168,5348

elpa/ein-20160422.629/ein-iexec.el,400
(defcustom ein:iexec-delay 0.3ein:iexec-delay30,891
(defvar ein:iexec-timer nil)ein:iexec-timer35,1010
(defun ein:iexec-execute-cell (cell)ein:iexec-execute-cell37,1040
(defun ein:iexec-should-execute-p (cell beg end)ein:iexec-should-execute-p47,1459
(defun ein:iexec-after-change (beg end -ignore-len-)ein:iexec-after-change55,1760
(define-minor-mode ein:iexec-modeein:iexec-mode62,2024

elpa/ein-20160422.629/ein-ipdb.el,784
(defvar *ein:ipdb-sessions* (make-hash-table))*ein:ipdb-sessions*28,850
(defconst *ein:ipdb-prompt* "(Pdb) ")*ein:ipdb-prompt*29,897
(defstruct ein:$ipdb-sessionein:$ipdb-session34,1050
(defun ein:find-or-create-ipdb-session (kernel)ein:find-or-create-ipdb-session39,1117
(defun ein:pdb-session-id (session)ein:pdb-session-id48,1499
(defun ein:run-ipdb-session (kernel prompt)ein:run-ipdb-session51,1598
(defun ein:prepare-ipdb-session (session prompt)ein:prepare-ipdb-session57,1885
(defun ein:ipdb-on-stop ()ein:ipdb-on-stop81,3053
(defun ein:stop-ipdb-session (db-session)ein:stop-ipdb-session90,3498
(defun ein:ipdb--handle-iopub-reply (kernel packet)ein:ipdb--handle-iopub-reply94,3624
(defun ein:ipdb-input-sender (proc input)ein:ipdb-input-sender118,4600

elpa/ein-20160422.629/ein-ipynb-mode.el,247
(defvar ein:ipynb-parent-mode 'js-modeein:ipynb-parent-mode32,910
(defalias 'ein:ipynb-parent-mode ein:ipynb-parent-mode)ein:ipynb-parent-mode36,1078
(define-derived-mode ein:ipynb-mode ein:ipynb-parent-mode "ein:ipynb"ein:ipynb-mode39,1150

elpa/ein-20160422.629/ein-jedi.el,443
(defvar ein:jedi-dot-complete-sourcesein:jedi-dot-complete-sources35,946
(defun ein:jedi--completer-complete ()ein:jedi--completer-complete38,1034
(defun* ein:jedi-complete (&key (expand ac-expand-on-auto-complete))ein:jedi-complete53,1526
(defun ein:jedi-dot-complete ()ein:jedi-dot-complete74,2349
(defun ein:jedi-complete-on-dot-install (map)ein:jedi-complete-on-dot-install81,2536
(defun ein:jedi-setup ()ein:jedi-setup85,2659

elpa/ein-20160422.629/ein-junk.el,522
(define-obsolete-variable-alias 'ein:scratch-notebook-name-templateein:scratch-notebook-name-template32,893
(defcustom ein:junk-notebook-name-template "junk-%Y-%m-%d-%H%M%S"ein:junk-notebook-name-template35,1006
(defun ein:junk-notebook-name ()ein:junk-notebook-name43,1345
(define-obsolete-function-alias 'ein:notebooklist-new-scratch-notebookein:notebooklist-new-scratch-notebook49,1553
(defun ein:junk-new (name kernelspec url-or-port)ein:junk-new53,1657
(defun ein:junk-rename (name)ein:junk-rename76,2710

elpa/ein-20160422.629/ein-kernel.el,4087
(defstruct ein:$kernelein:$kernel41,1249
(defun ein:$kernel-session-url (kernel)ein:$kernel-session-url68,1889
(defalias 'ein:kernel-url-or-port 'ein:$kernel-url-or-port)ein:kernel-url-or-port72,2006
(defalias 'ein:kernel-id 'ein:$kernel-kernel-id)ein:kernel-id75,2082
(defun ein:kernel-new (url-or-port base-url events &optional api-version)ein:kernel-new80,2170
(defun ein:kernel-del (kernel)ein:kernel-del97,2593
(defun ein:kernel--get-msg (kernel msg-type content)ein:kernel--get-msg102,2694
(defun ein:kernel-start (kernel notebook)ein:kernel-start114,3037
(defun ein:kernel-start--legacy (kernel notebook-id path)ein:kernel-start--legacy140,4366
(defun ein:kernel-restart (kernel)ein:kernel-restart155,4911
(defun* ein:kernel--kernel-started (kernel &key data &allow-other-keys)ein:kernel--kernel-started173,5629
(defun ein:kernel--ws-url (url-or-port &optional securep)ein:kernel--ws-url206,7220
(defun ein:kernel--websocket-closed (kernel ws-url early)ein:kernel--websocket-closed223,7993
(defun ein:kernel-send-cookie (channel host)ein:kernel-send-cookie235,8492
(defun ein:kernel--ws-closed-callback (websocket kernel arg)ein:kernel--ws-closed-callback242,8753
(defun ein:start-channels-multiple-websocket (kernel)ein:start-channels-multiple-websocket254,9351
(defun ein:start-channels-single-websocket (kernel)ein:start-channels-single-websocket284,11036
(defun ein:kernel-start-channels (kernel)ein:kernel-start-channels307,12238
(defun ein:kernel-on-connect (kernel content -metadata-not-used-)ein:kernel-on-connect331,13219
(defun ein:kernel-run-after-start-hook (kernel)ein:kernel-run-after-start-hook334,13346
(defun ein:kernel-disconnect (kernel &optional callback)ein:kernel-disconnect339,13525
(defun ein:kernel-reconnect (kernel notebook)ein:kernel-reconnect358,14420
(defun ein:kernel-live-p (kernel)ein:kernel-live-p362,14538
(defmacro ein:kernel-if-ready (kernel &rest body)ein:kernel-if-ready372,14852
(defun ein:kernel-object-info-request (kernel objname callbacks)ein:kernel-object-info-request389,15497
(defun* ein:kernel-execute (kernel code &optional callbacksein:kernel-execute420,16711
(defun ein:kernel-complete (kernel line cursor-pos callbacks)ein:kernel-complete506,20244
(defun* ein:kernel-history-request (kernel callbacksein:kernel-history-request536,21261
(defun ein:kernel-connect-request (kernel callbacks)ein:kernel-connect-request584,23088
(defun ein:kernel-kernel-info-request (kernel callbacks)ein:kernel-kernel-info-request613,24030
(defun ein:kernel-interrupt (kernel)ein:kernel-interrupt643,24977
(defun ein:kernel-kill (kernel &optional callback cbargs)ein:kernel-kill656,25426
(defun ein:kernel-get-callbacks-for-msg (kernel msg-id)ein:kernel-get-callbacks-for-msg674,26093
(defun ein:kernel-set-callbacks-for-msg (kernel msg-id callbacks)ein:kernel-set-callbacks-for-msg677,26205
(defun ein:kernel--handle-channels-reply (kernel packet)ein:kernel--handle-channels-reply680,26337
(defun ein:kernel--handle-stdin-reply (kernel packet)ein:kernel--handle-stdin-reply691,26905
(defun ein:kernel--handle-shell-reply (kernel packet)ein:kernel--handle-shell-reply711,28023
(defun ein:kernel--handle-payload (kernel callbacks payload)ein:kernel--handle-payload735,29210
(defun ein:kernel--handle-iopub-reply (kernel packet)ein:kernel--handle-iopub-reply757,30198
(defun ein:kernel-filename-to-python (kernel filename)ein:kernel-filename-to-python794,31973
(defun ein:kernel-filename-from-python (kernel filename)ein:kernel-filename-from-python798,32134
(defun ein:kernel-construct-defstring (content)ein:kernel-construct-defstring802,32301
(defun ein:kernel-construct-help-string (content)ein:kernel-construct-help-string809,32581
(defun ein:kernel-request-stream (kernel code func &optional args)ein:kernel-request-stream830,33518
(defun* ein:kernel-history-request-synchronouslyein:kernel-history-request-synchronously846,34236
(defun ein:kernel-history-search-synchronously (kernel pattern &rest args)ein:kernel-history-search-synchronously871,35160

elpa/ein-20160422.629/ein-kernelinfo.el,446
(defclass ein:kernelinfo ()ein:kernelinfo32,942
(defun ein:kernelinfo-new (kernel get-buffers)ein:kernelinfo-new49,1575
(defun ein:kernelinfo-setup-hooks (kerinfo)ein:kernelinfo-setup-hooks57,1881
(defun ein:kernelinfo-update-all (kerinfo)ein:kernelinfo-update-all65,2231
(defun ein:kernelinfo-update-ccwd (kerinfo)ein:kernelinfo-update-ccwd73,2573
(defun ein:kernelinfo-update-hostname (kerinfo)ein:kernelinfo-update-hostname92,3391

elpa/ein-20160422.629/ein-kill-ring.el,309
(defvar ein:kill-ring nil)ein:kill-ring28,889
(defvar ein:kill-ring-yank-pointer nil)ein:kill-ring-yank-pointer29,916
(defvar ein:kill-ring-max kill-ring-max)ein:kill-ring-max30,956
(defun ein:kill-new (obj)ein:kill-new32,998
(defun ein:current-kill (n &optional do-not-move)ein:current-kill40,1332

elpa/ein-20160422.629/ein-loaddefs.el,250
(defalias 'ein:kernel-url-or-port 'ein:$kernel-url-or-port)ein:kernel-url-or-port191,5174
(defalias 'ein:kernel-id 'ein:$kernel-kernel-id)ein:kernel-id193,5235
(defalias 'ein:notebook-name 'ein:$notebook-notebook-name)ein:notebook-name212,5688

elpa/ein-20160422.629/ein-log.el,1072
(defvar ein:log-all-buffer-name "*ein:log-all*")ein:log-all-buffer-name32,904
(defvar ein:log-level-defein:log-level-def34,954
(defvar ein:log-level 30)ein:log-level44,1243
(defvar ein:log-message-level 20)ein:log-message-level45,1269
(defvar ein:log-print-level 1 "`print-level' for `ein:log'")ein:log-print-level47,1304
(defvar ein:log-print-length 10 "`print-length' for `ein:log'")ein:log-print-length48,1365
(defvar ein:log-max-string 1000)ein:log-max-string49,1429
(defun ein:log-set-level (level)ein:log-set-level52,1464
(defun ein:log-set-message-level (level)ein:log-set-message-level55,1556
(defun ein:log-level-int-to-name (int)ein:log-level-int-to-name58,1664
(defun ein:log-level-name-to-int (name)ein:log-level-name-to-int64,1811
(defun ein:log-wrapper (level func)ein:log-wrapper67,1891
(defmacro ein:log (level string &rest args)ein:log84,2650
(defvar ein:debug nilein:debug89,2841
(defmacro ein:log-ignore-errors (&rest body)ein:log-ignore-errors93,2977
(defun ein:log-pop-to-all-buffer ()ein:log-pop-to-all-buffer106,3382

elpa/ein-20160422.629/ein-multilang-fontify.el,162
(defun ein:mlf-get-lang-mode (lang)ein:mlf-get-lang-mode34,1109
(defun ein:mlf-font-lock-fontify-block (lang start end)ein:mlf-font-lock-fontify-block45,1454

elpa/ein-20160422.629/ein-multilang.el,1784
(defun ein:ml-fontify (limit)ein:ml-fontify35,1039
(defun ein:ml-current-or-next-input-cell (ewoc-node)ein:ml-current-or-next-input-cell42,1275
(defun ein:ml-fontify-1 (limit)ein:ml-fontify-153,1695
(defun ein:ml-back-to-prev-node ()ein:ml-back-to-prev-node72,2587
(defvar ein:ml-font-lock-keywordsein:ml-font-lock-keywords75,2684
(defun ein:ml-set-font-lock-defaults ()ein:ml-set-font-lock-defaults79,2810
(define-derived-mode ein:notebook-multilang-mode fundamental-mode "ein:ml"ein:notebook-multilang-mode88,3104
(defun ein:ml-lang-setup-python ()ein:ml-lang-setup-python109,3946
(defun ein:ml-lang-setup-markdown ()ein:ml-lang-setup-markdown125,4473
(defvar ein:ml-yasnippet-parents '(python-mode markdown-mode)ein:ml-yasnippet-parents137,4853
(defun ein:ml-setup-yasnippet ()ein:ml-setup-yasnippet140,4994
(defvar ein:imenu-format-item-label-functionein:imenu-format-item-label-function159,5612
(defvar ein:imenu-format-parent-item-label-functionein:imenu-format-parent-item-label-function164,5796
(defvar ein:imenu-format-parent-item-jump-label-functionein:imenu-format-parent-item-jump-label-function169,6000
(defun ein:imenu-format-item-label (type name)ein:imenu-format-item-label174,6219
(defun ein:imenu-format-parent-item-label (type name)ein:imenu-format-parent-item-label178,6359
(defun python-imenu-format-parent-item-jump-label (type _name)python-imenu-format-parent-item-jump-label182,6534
(defun ein:imenu--put-parent (type name pos tree)ein:imenu--put-parent188,6749
(defun ein:imenu--build-tree (&optional min-indent prev-indent tree)ein:imenu--build-tree198,7134
(defun ein:imenu-create-index ()ein:imenu-create-index240,9102
(defun ein:imenu-create-flat-index (&optional alist prefix)ein:imenu-create-flat-index253,9534

elpa/ein-20160422.629/ein-node.el,413
(defstruct ein:$nodeein:$node34,935
(defun ein:node-new (path data &optional class &rest args)ein:node-new40,1117
(defun ein:node-add-class (node &rest classes)ein:node-add-class43,1245
(defun ein:node-remove-class (node &rest classes)ein:node-remove-class46,1363
(defun ein:node-has-class (node class)ein:node-has-class51,1576
(defun ein:node-filter (ewoc-node-list &rest args)ein:node-filter54,1655

elpa/ein-20160422.629/ein-notebook.el,11331
(defcustom ein:notebook-discard-output-on-save 'noein:notebook-discard-output-on-save65,1996
(defun ein:notebook-cell-has-image-output-p (-ignore- cell)ein:notebook-cell-has-image-output-p87,2713
(defun ein:notebook-discard-output-p (notebook cell)ein:notebook-discard-output-p90,2811
(defcustom ein:notebook-querty-timeout-save (* 60 1000) ; 1 minein:notebook-querty-timeout-save100,3169
(defcustom ein:helm-kernel-history-search-key nilein:helm-kernel-history-search-key109,3535
(defcustom ein:anything-kernel-history-search-key nilein:anything-kernel-history-search-key120,3811
(defcustom ein:notebook-set-buffer-file-name nilein:notebook-set-buffer-file-name131,4099
(defvar ein:notebook-after-rename-hook nilein:notebook-after-rename-hook136,4265
(defvar ein:base-kernel-url "/api/")ein:base-kernel-url143,4459
(defvar ein:create-session-url "/api/sessions")ein:create-session-url144,4496
(defvar ein:notebook-pager-buffer-name-template "*ein:pager %s/%s*")ein:notebook-pager-buffer-name-template153,4883
(defvar ein:notebook-buffer-name-template "*ein: %s/%s*")ein:notebook-buffer-name-template154,4952
(defvar ein:notebook-save-retry-max 1ein:notebook-save-retry-max156,5011
(defstruct ein:$notebookein:$notebook159,5092
(ein:deflocal ein:%notebook% nilein:%notebook%228,6653
(define-obsolete-variable-alias 'ein:notebook 'ein:%notebook% "0.1.2")ein:notebook230,6754
(defun ein:notebook-new (url-or-port notebook-path kernelspec &rest args)ein:notebook-new236,6846
(defun ein:notebook-del (notebook)ein:notebook-del249,7307
(defun ein:notebook-close-worksheet (notebook ws)ein:notebook-close-worksheet254,7459
(defun ein:notebook-buffer (notebook)ein:notebook-buffer272,8192
(defun ein:notebook-buffer-list (notebook)ein:notebook-buffer-list282,8665
(defun ein:notebook--get-nb-or-error ()ein:notebook--get-nb-or-error291,9074
(defalias 'ein:notebook-name 'ein:$notebook-notebook-name)ein:notebook-name295,9187
(defun ein:notebook-name-getter (notebook)ein:notebook-name-getter297,9247
(defun ein:notebook-url (notebook)ein:notebook-url303,9351
(defun ein:notebook-url-from-url-and-id (url-or-port api-version path)ein:notebook-url-from-url-and-id308,9610
(defun ein:notebook-pop-to-current-buffer (&rest -ignore-)ein:notebook-pop-to-current-buffer314,9843
(defun ein:notebook-open (url-or-port path &optional kernelspec callback cbargs)ein:notebook-open320,10041
(defun ein:notebook-request-open (url-or-port path &optional kernelspec callback cbargs)ein:notebook-request-open346,11253
(defun ein:notebook-request-open-callback-with-callback (notebookein:notebook-request-open-callback-with-callback370,12396
(defun ein:notebook-maybe-set-kernelspec (notebook content-metadata)ein:notebook-maybe-set-kernelspec379,12842
(defun ein:notebook-request-open-callback (notebook content)ein:notebook-request-open-callback386,13179
(defun ein:notebook--different-number (n1 n2)ein:notebook--different-number402,14178
(defun ein:notebook--check-nbformat (data)ein:notebook--check-nbformat405,14276
(defun ein:notebook-bind-events (notebook events)ein:notebook-bind-events432,15368
(defstruct ein:$kernelspecein:$kernelspec451,16037
(defvar ein:available-kernelspecs (make-hash-table))ein:available-kernelspecs467,16438
(defun ein:kernelspec-for-nb-metadata (kernelspec)ein:kernelspec-for-nb-metadata469,16492
(defun ein:get-kernelspec (url-or-port name)ein:get-kernelspec474,16731
(defun ein:list-available-kernels (url-or-port)ein:list-available-kernels481,16986
(defun ein:query-kernelspecs (url-or-port)ein:query-kernelspecs487,17268
(defun* ein:query-kernelspecs-success (url-or-port &key data &allow-other-keys)ein:query-kernelspecs-success501,17787
(defun* ein:query-kernelspecs-error (&key symbol-status response &allow-other-keys)ein:query-kernelspecs-error513,18532
(defun ein:notebook-start-kernel (notebook)ein:notebook-start-kernel521,18953
(defun ein:notebook-restart-kernel (notebook)ein:notebook-restart-kernel531,19444
(defun ein:notebook-restart-kernel-command ()ein:notebook-restart-kernel-command534,19547
(defun ein:notebook-reconnect-kernel ()ein:notebook-reconnect-kernel542,19833
(defun ein:notebook-complete-dot ()ein:notebook-complete-dot552,20191
(defun ein:notebook-kernel-interrupt-command ()ein:notebook-kernel-interrupt-command559,20405
(defun ein:notebook-kernel-kill-command ()ein:notebook-kernel-kill-command565,20617
(defun ein:notebook-execute-autoexec-cells (notebook)ein:notebook-execute-autoexec-cells572,20793
(defun ein:notebook-set-notebook-name (notebook name)ein:notebook-set-notebook-name585,21206
(defun ein:notebook-test-notebook-name (name)ein:notebook-test-notebook-name593,21584
(defun* ein:notebook--worksheet-new (notebookein:notebook--worksheet-new598,21728
(defun ein:notebook--worksheet-render (notebook ws)ein:notebook--worksheet-render609,22180
(defun ein:notebook--notification-setup (notebook)ein:notebook--notification-setup618,22524
(defun ein:notebook-set-buffer-file-name-maybe (notebook)ein:notebook-set-buffer-file-name-maybe645,23381
(defun ein:notebook-from-json (notebook data)ein:notebook-from-json665,24178
(defun ein:read-nbformat3-worksheets (notebook data)ein:read-nbformat3-worksheets683,25066
(defun ein:read-nbformat4-worksheets (notebook data)ein:read-nbformat4-worksheets697,25684
(defun ein:notebook-to-json (notebook)ein:notebook-to-json707,26156
(defun ein:write-nbformat3-worksheets (notebook)ein:write-nbformat3-worksheets723,26864
(defun ein:write-nbformat4-worksheets (notebook)ein:write-nbformat4-worksheets730,27147
(defun ein:notebook-save-notebook (notebook retry &optional callback cbargs)ein:notebook-save-notebook746,27992
(defun ein:notebook-save-notebook-command ()ein:notebook-save-notebook-command756,28446
(defun* ein:notebook-save-notebook-workaroundein:notebook-save-notebook-workaround761,28580
(defun ein:notebook-save-notebook-success (notebook &rest ignore)ein:notebook-save-notebook-success786,29730
(defun* ein:notebook-save-notebook-error (notebook &key symbol-statusein:notebook-save-notebook-error804,30527
(defun ein:notebook-rename-command (path)ein:notebook-rename-command812,30915
(defun* ein:notebook-rename-success (notebook content)ein:notebook-rename-success836,32208
(defun ein:notebook-close (notebook)ein:notebook-close843,32570
(defun ein:notebook-kill-kernel-then-close-command ()ein:notebook-kill-kernel-then-close-command852,32973
(defmacro ein:notebook--worksheet-render-new (notebook type)ein:notebook--worksheet-render-new867,33501
(defun ein:notebook-worksheet-render-new (notebook)ein:notebook-worksheet-render-new876,33911
(defun ein:notebook-worksheet-open-next-or-new (notebook ws &optional show)ein:notebook-worksheet-open-next-or-new880,34061
(defun ein:notebook-worksheet-open-next-or-first (notebook ws &optional show)ein:notebook-worksheet-open-next-or-first900,34856
(defun ein:notebook-worksheet-open-prev-or-last (notebook ws &optional show)ein:notebook-worksheet-open-prev-or-last918,35536
(defun* ein:notebook-worksheet--render-maybeein:notebook-worksheet--render-maybe931,36108
(defun* ein:notebook-worksheet--open-newein:notebook-worksheet--open-new941,36578
(defun ein:notebook-worksheet-open-next (notebook ws &optional show)ein:notebook-worksheet-open-next952,37052
(defun ein:notebook-worksheet-open-prev (notebook ws &optional show)ein:notebook-worksheet-open-prev974,38006
(defun ein:notebook-worksheet-open-ith (notebook i &optional show)ein:notebook-worksheet-open-ith987,38627
(defmacro ein:notebook-worksheet--defun-open-nth (n)ein:notebook-worksheet--defun-open-nth993,38921
(defmacro ein:notebook-worksheet--defun-all-open-nth (min max)ein:notebook-worksheet--defun-all-open-nth1003,39402
(defun ein:notebook-worksheet-open-last (notebook &optional show)ein:notebook-worksheet-open-last1010,39630
(defun ein:notebook-worksheet-insert-new (notebook ws &optional render showein:notebook-worksheet-insert-new1018,39962
(defun* ein:notebook-worksheet-insert-nextein:notebook-worksheet-insert-next1029,40427
(defun* ein:notebook-worksheet-insert-prevein:notebook-worksheet-insert-prev1043,41108
(defun ein:notebook-worksheet-delete (notebook ws &optional confirm)ein:notebook-worksheet-delete1052,41560
(defun ein:notebook-worksheet-move-prev (notebook ws)ein:notebook-worksheet-move-prev1068,42249
(defun ein:notebook-worksheet-move-next (notebook ws)ein:notebook-worksheet-move-next1076,42636
(defun* ein:notebook-worksheet-indexein:notebook-worksheet-index1084,43024
(defun ein:notebook-scratchsheet-render-new (notebook)ein:notebook-scratchsheet-render-new1096,43340
(defun ein:notebook-scratchsheet-open (notebook &optional new popup)ein:notebook-scratchsheet-open1100,43499
(defvar ein:notebook--opened-map (make-hash-table :test 'equal)ein:notebook--opened-map1120,44230
(defun ein:notebook-get-opened-notebook (url-or-port path)ein:notebook-get-opened-notebook1123,44355
(defun ein:notebook-get-opened-buffer (url-or-port path)ein:notebook-get-opened-buffer1126,44477
(defun ein:notebook-put-opened-notebook (notebook)ein:notebook-put-opened-notebook1130,44638
(defun ein:notebook-opened-notebooks (&optional predicate)ein:notebook-opened-notebooks1136,44859
(defun ein:notebook-opened-buffers (&optional predicate)ein:notebook-opened-buffers1150,45462
(defun ein:notebook-opened-buffer-names (&optional predicate)ein:notebook-opened-buffer-names1154,45640
(defun ein:get-url-or-port--notebook ()ein:get-url-or-port--notebook1161,45840
(defun ein:get-notebook--notebook ()ein:get-notebook--notebook1164,45949
(defun ein:get-kernel--notebook ()ein:get-kernel--notebook1167,46005
(defun ein:notebook-buffer-p ()ein:notebook-buffer-p1174,46143
(defun ein:notebook-live-p (notebook)ein:notebook-live-p1178,46253
(defun ein:notebook-modified-p (&optional notebook)ein:notebook-modified-p1182,46392
(defcustom ein:notebook-modesein:notebook-modes1197,46920
(defcustom ein:notebook-mode-hook nilein:notebook-mode-hook1232,48045
(defun ein:notebook-choose-mode ()ein:notebook-choose-mode1238,48203
(defvar ein:notebook-mode-map (make-sparse-keymap))ein:notebook-mode-map1248,48501
(defun ein:notebook-mode ()ein:notebook-mode1431,57579
(define-minor-mode ein:notebook-minor-modeein:notebook-minor-mode1444,58104
(define-derived-mode ein:notebook-plain-mode fundamental-mode "ein:notebook"ein:notebook-plain-mode1453,58406
(define-derived-mode ein:notebook-python-mode python-mode "ein:python"ein:notebook-python-mode1457,58554
(defun ein:notebook-open-in-browser (&optional print)ein:notebook-open-in-browser1460,58676
(defun ein:notebook-fetch-data (notebook callback &optional cbargs)ein:notebook-fetch-data1472,59187
(defcustom ein:notebook-kill-buffer-ask tein:notebook-kill-buffer-ask1503,60369
(defun ein:notebook-ask-before-kill-buffer ()ein:notebook-ask-before-kill-buffer1510,60608
(defun ein:notebook-ask-before-kill-emacs ()ein:notebook-ask-before-kill-emacs1526,61341
(defun ein:notebook-kill-buffer-callback ()ein:notebook-kill-buffer-callback1549,62250
(defun ein:notebook-setup-kill-buffer-hook ()ein:notebook-setup-kill-buffer-hook1554,62483
(defun ein:notebook-kill-all-buffers ()ein:notebook-kill-all-buffers1559,62690

elpa/ein-20160422.629/ein-notebooklist.el,4445
(defcustom ein:notebooklist-first-open-hook nilein:notebooklist-first-open-hook37,1082
(defstruct ein:$notebooklistein:$notebooklist51,1442
(ein:deflocal ein:%notebooklist% nilein:%notebooklist%69,1830
(define-obsolete-variable-alias 'ein:notebooklist 'ein:%notebooklist% "0.1.2")ein:notebooklist71,1939
(defvar ein:notebooklist-buffer-name-template "*ein:notebooklist %s*")ein:notebooklist-buffer-name-template73,2019
(defvar ein:notebooklist-map (make-hash-table :test 'equal)ein:notebooklist-map75,2091
(defun ein:notebooklist-list ()ein:notebooklist-list79,2261
(defun ein:notebooklist-list-add (nblist)ein:notebooklist-list-add83,2380
(defun ein:notebooklist-list-get (url-or-port)ein:notebooklist-list-get90,2640
(defun ein:notebooklist-open-notebook-by-name (name &optional url-or-portein:notebooklist-open-notebook-by-name95,2835
(defun ein:notebooklist-url (url-or-port version &optional path)ein:notebooklist-url114,3828
(defun ein:notebooklist-new-url (url-or-port version &optional path)ein:notebooklist-new-url121,4117
(defun ein:notebooklist-get-buffer (url-or-port)ein:notebooklist-get-buffer129,4504
(defun ein:notebooklist-ask-url-or-port ()ein:notebooklist-ask-url-or-port133,4639
(defun ein:notebooklist-open (&optional url-or-port path no-popup)ein:notebooklist-open151,5471
(defun* ein:notebooklist-url-retrieve-callback (content)ein:notebooklist-url-retrieve-callback168,6227
(defun* ein:notebooklist-open-error (url-or-port pathein:notebooklist-open-error194,7438
(defun ein:notebooklist-reload (&optional notebooklist)ein:notebooklist-reload204,7845
(defun ein:notebooklist-refresh-related ()ein:notebooklist-refresh-related212,8156
(defun ein:notebooklist-open-notebook (nblist path &optional callback cbargs)ein:notebooklist-open-notebook220,8542
(defun ein:notebooklist-new-notebook (&optional url-or-port kernelspec path callback cbargs)ein:notebooklist-new-notebook228,8807
(defun* ein:notebooklist-new-notebook-callback (url-or-portein:notebooklist-new-notebook-callback260,10583
(defun* ein:notebooklist-new-notebook-errorein:notebooklist-new-notebook-error285,11816
(defun ein:notebooklist-new-notebook-with-name (name kernelspec url-or-port &optional path)ein:notebooklist-new-notebook-with-name302,12447
(defun ein:notebooklist-delete-notebook-ask (path)ein:notebooklist-delete-notebook-ask329,13783
(defun ein:notebooklist-delete-notebook (path)ein:notebooklist-delete-notebook333,13936
(defun ein:get-actual-path (path)ein:get-actual-path351,14762
(defun generate-breadcrumbs (path)generate-breadcrumbs356,14879
(defun ein:notebooklist-render-ipy2 ()ein:notebooklist-render-ipy2365,15257
(defun ein:notebooklist-render ()ein:notebooklist-render468,19174
(defun ein:notebooklist-list-notebooks ()ein:notebooklist-list-notebooks585,23653
(defun ein:notebooklist-open-notebook-global (nbpath &optional callback cbargs)ein:notebooklist-open-notebook-global611,25036
(defun ein:notebooklist-load (&optional url-or-port)ein:notebooklist-load630,25890
(defun ein:notebooklist-find-server-by-notebook-name (name)ein:notebooklist-find-server-by-notebook-name651,26568
(defun ein:notebooklist-open-notebook-by-file-nameein:notebooklist-open-notebook-by-file-name669,27477
(defvar ein:notebooklist-find-file-buffer-callback #'ignore)ein:notebooklist-find-file-buffer-callback696,28876
(defun ein:notebooklist-find-file-callback ()ein:notebooklist-find-file-callback698,28938
(defun ein:notebooklist-login (url-or-port password)ein:notebooklist-login711,29382
(defun ein:notebooklist-login--parser ()ein:notebooklist-login--parser725,30008
(defun ein:notebooklist-login--success-1 (url-or-port)ein:notebooklist-login--success-1729,30147
(defun ein:notebooklist-login--error-1 (url-or-port)ein:notebooklist-login--error-1733,30319
(defun* ein:notebooklist-login--success (url-or-port &keyein:notebooklist-login--success736,30428
(defun* ein:notebooklist-login--errorein:notebooklist-login--error743,30756
(defun ein:get-url-or-port--notebooklist ()ein:get-url-or-port--notebooklist766,31563
(define-derived-mode ein:notebooklist-mode fundamental-mode "ein:notebooklist"ein:notebooklist-mode773,31740
(defun ein:notebooklist-prev-item () (interactive) (move-beginning-of-line 0))ein:notebooklist-prev-item776,31853
(defun ein:notebooklist-next-item () (interactive) (move-beginning-of-line 2))ein:notebooklist-next-item777,31932

elpa/ein-20160422.629/ein-notification.el,2714
(ein:deflocal ein:%notification% nilein:%notification%37,1011
(define-obsolete-variable-alias 'ein:@notification 'ein:%notification% "0.1.2")ein:@notification39,1118
(defvar ein:header-line-format '(:eval (ein:header-line)))ein:header-line-format41,1199
(defvar ein:header-line-tab-map (make-sparse-keymap))ein:header-line-tab-map42,1258
(defvar ein:header-line-insert-tab-map (make-sparse-keymap))ein:header-line-insert-tab-map43,1312
(defvar ein:header-line-tab-helpein:header-line-tab-help44,1373
(defclass ein:notification-status ()ein:notification-status54,1751
(defclass ein:notification-tab ()ein:notification-tab60,1960
(defclass ein:notification ()ein:notification76,2662
(defmethod ein:notification-status-set ((ns ein:notification-status) status)ein:notification-status-set104,3617
(defmethod ein:notification-bind-events ((notification ein:notification)ein:notification-bind-events109,3813
(defun ein:notification--callback (packed data)ein:notification--callback142,5312
(defun ein:notification--set-execution-count (notification count)ein:notification--set-execution-count147,5464
(defun ein:notification--fadeout-callback (packed data)ein:notification--fadeout-callback150,5577
(defun ein:notification-setup (buffer events &rest tab-slots)ein:notification-setup169,6238
(defface ein:notification-tab-selectedein:notification-tab-selected211,7492
(defface ein:notification-tab-normalein:notification-tab-normal216,7634
(defmethod ein:notification-tab-create-line ((tab ein:notification-tab))ein:notification-tab-create-line221,7780
(define-key ein:header-line-insert-tab-mapein:header-line-insert-tab-map267,9770
(defmacro ein:with-destructuring-bind-key-event (key-event &rest body)ein:with-destructuring-bind-key-event270,9871
(defun ein:header-line-select-window (key-event)ein:header-line-select-window282,10258
(defun ein:header-line-key-event-get-worksheet (key-event)ein:header-line-key-event-get-worksheet285,10384
(defun ein:header-line-key-event-get-buffer (key-event)ein:header-line-key-event-get-buffer289,10562
(defun ein:header-line-switch-to-this-tab (key-event)ein:header-line-switch-to-this-tab293,10745
(defun ein:header-line-pop-to-this-tab (key-event)ein:header-line-pop-to-this-tab298,10935
(defun ein:header-line-do-slot-function (key-event slot)ein:header-line-do-slot-function303,11119
(defmacro ein:header-line-define-mouse-commands (&rest name-slot-list)ein:header-line-define-mouse-commands309,11415
(defun ein:header-line-insert-new-tab (key-event)ein:header-line-insert-new-tab327,12076
(defun ein:header-line ()ein:header-line335,12381
(defun ein:header-line-setup-maybe ()ein:header-line-setup-maybe348,12756

elpa/ein-20160422.629/ein-org.el,179
(defun* ein:org-goto-link (notebook createdein:org-goto-link35,1003
(defun ein:org-open (link-path)ein:org-open53,1662
(defun ein:org-store-link ()ein:org-store-link63,1990

elpa/ein-20160422.629/ein-output-area.el,674
(defun ein:xml-parse-html-string (html-string)ein:xml-parse-html-string38,968
(defalias 'ein:xml-node-p 'listp)ein:xml-node-p46,1223
(defun ein:xml-tree-apply (dom operation)ein:xml-tree-apply48,1258
(defun ein:xml-replace-attributes (dom tag attr replace-p replacer)ein:xml-replace-attributes56,1597
(defun ein:output-area-get-html-renderer ()ein:output-area-get-html-renderer73,2142
(defcustom ein:shr-envein:shr-env81,2374
(defun ein:shr-insert-document (dom)ein:shr-insert-document100,2810
(defun ein:insert-html-shr (html-string)ein:insert-html-shr104,2948
(defun ein:insert-html--fix-urls (dom &optional url-or-port)ein:insert-html--fix-urls121,3386

elpa/ein-20160422.629/ein-pager.el,568
(defun ein:pager-new (name events)ein:pager-new35,985
(defun ein:pager-bind-events (pager events)ein:pager-bind-events40,1096
(defun ein:pager--open-with-text (pager data)ein:pager--open-with-text47,1336
(defun ein:pager-clear (pager)ein:pager-clear54,1566
(defun ein:pager-expand (pager)ein:pager-expand58,1674
(defun ein:pager-append-text (pager text)ein:pager-append-text62,1778
(defun ein:pager-goto-docstring-bset-loc ()ein:pager-goto-docstring-bset-loc68,2002
(define-derived-mode ein:pager-mode fundamental-mode "ein:pager"ein:pager-mode76,2218

elpa/ein-20160422.629/ein-pkg.el,72
(define-package "ein" "20160422.629" "Emacs IPython Notebook""ein"1,0

elpa/ein-20160422.629/ein-pseudo-console.el,168
(defvar ein:pseudo-console-mode-map (make-sparse-keymap))ein:pseudo-console-mode-map29,887
(define-minor-mode ein:pseudo-console-modeein:pseudo-console-mode35,1075

elpa/ein-20160422.629/ein-python.el,230
(defvar ein:python-block-startein:python-block-start33,906
(defun ein:python-indent-calculate-levels ()ein:python-indent-calculate-levels40,1093
(defadvice python-indent-calculate-levelspython-indent-calculate-levels52,1573

elpa/ein-20160422.629/ein-pytools.el,1776
(defun ein:goto-file (filename lineno &optional other-window)ein:goto-file36,1048
(defun ein:goto-marker (marker &optional other-window)ein:goto-marker43,1349
(defcustom ein:propagate-connect tein:propagate-connect48,1526
(defun ein:pytools-setup-hooks (kernel notebook)ein:pytools-setup-hooks54,1724
(defun ein:pytools-add-sys-path (kernel)ein:pytools-add-sys-path61,1996
(defun ein:set-buffer-file-name (nb msg-type content -not-used-)ein:set-buffer-file-name66,2137
(defun ein:pytools-get-notebook-dir (packed)ein:pytools-get-notebook-dir76,2508
(defun ein:pytools-request-tooltip (kernel func)ein:pytools-request-tooltip89,2820
(defun ein:pytools-finish-tooltip (-ignore- content -metadata-not-used-)ein:pytools-finish-tooltip110,3687
(defun ein:pytools-request-help (kernel func)ein:pytools-request-help125,4325
(defun ein:pytools-request-tooltip-or-help (&optional pager)ein:pytools-request-tooltip-or-help135,4758
(defvar ein:pytools-jump-stack nil)ein:pytools-jump-stack147,5192
(defvar ein:pytools-jump-to-source-not-found-regexpein:pytools-jump-to-source-not-found-regexp149,5229
(defun ein:pytools-jump-to-source (kernel object &optionalein:pytools-jump-to-source156,5487
(defun ein:pytools-jump-to-source-command (&optional other-window)ein:pytools-jump-to-source-command199,7632
(defun ein:pytools-jump-back-command (&optional other-window)ein:pytools-jump-back-command213,8283
(defun ein:pytools-doctest ()ein:pytools-doctest229,8942
(defun ein:pytools-whos ()ein:pytools-whos237,9185
(defun ein:pytools-hierarchy (&optional ask)ein:pytools-hierarchy242,9332
(defun ein:pytools-pandas-to-ses (dataframe)ein:pytools-pandas-to-ses256,9916
(defun ein:pytools-export-buffer (buffer format)ein:pytools-export-buffer290,11300

elpa/ein-20160422.629/ein-query.el,513
(defun ein:safe-funcall-packed (packed &rest args)ein:safe-funcall-packed38,996
(defcustom ein:query-timeoutein:query-timeout45,1151
(defvar ein:query-running-process-table (make-hash-table :test 'equal))ein:query-running-process-table74,2287
(defun* ein:query-singleton-ajax (key url &rest settingsein:query-singleton-ajax76,2360
(defun ein:query-gc-running-process-table ()ein:query-gc-running-process-table93,3159
(defalias 'ein:query-get-cookie 'request-cookie-string)ein:query-get-cookie104,3463

elpa/ein-20160422.629/ein-scratchsheet.el,380
(defvar ein:scratchsheet-buffer-name-template "*ein:scratch %s/%s*")ein:scratchsheet-buffer-name-template31,920
(defclass ein:scratchsheet (ein:worksheet)ein:scratchsheet33,990
(defun ein:scratchsheet-new (nbformat get-notebook-name discard-output-pein:scratchsheet-new40,1241
(defmethod ein:worksheet--buffer-name ((ws ein:scratchsheet))ein:worksheet--buffer-name47,1577

elpa/ein-20160422.629/ein-shared-output.el,2084
(defclass ein:shared-output-cell (ein:codecell)ein:shared-output-cell38,1148
(defclass ein:shared-output ()ein:shared-output45,1440
(defvar ein:%shared-output% nilein:%shared-output%50,1610
(defconst ein:shared-output-buffer-name "*ein:shared-output*")ein:shared-output-buffer-name53,1689
(defmethod ein:cell-execute ((cell ein:shared-output-cell) kernel codeein:cell-execute58,1773
(defmethod ein:cell--handle-output ((cell ein:shared-output-cell)ein:cell--handle-output66,2100
(defun ein:shared-output-create-buffer ()ein:shared-output-create-buffer91,3026
(defun ein:shared-output-buffer ()ein:shared-output-buffer95,3166
(defun ein:shared-output-buffer-p (&optional buffer)ein:shared-output-buffer-p99,3310
(defun ein:shared-output-healthy-p ()ein:shared-output-healthy-p103,3506
(defun ein:shared-output-get-or-create ()ein:shared-output-get-or-create107,3646
(defun ein:shared-output-bind-events (events)ein:shared-output-bind-events133,4834
(defun ein:shared-output-get-cell ()ein:shared-output-get-cell138,5029
(defun ein:shared-output-get-kernel ()ein:shared-output-get-kernel143,5197
(defun ein:shared-output-pop-to-buffer ()ein:shared-output-pop-to-buffer149,5363
(defmethod ein:shared-output-show-code-cell ((cell ein:codecell))ein:shared-output-show-code-cell155,5542
(defun ein:shared-output-show-code-cell-at-point ()ein:shared-output-show-code-cell-at-point173,6341
(defvar ein:shared-output-eval-string-history nilein:shared-output-eval-string-history183,6724
(defun ein:shared-output-eval-string (code &optional popup verbose kernelein:shared-output-eval-string187,6850
(defun ein:get-url-or-port--shared-output ()ein:get-url-or-port--shared-output216,8092
(defun ein:get-kernel--shared-output ()ein:get-kernel--shared-output221,8259
(defun ein:get-cell-at-point--shared-output ()ein:get-cell-at-point--shared-output226,8443
(defun ein:get-traceback-data--shared-output ()ein:get-traceback-data--shared-output231,8628
(define-derived-mode ein:shared-output-mode fundamental-mode "ein:so"ein:shared-output-mode237,8786

elpa/ein-20160422.629/ein-smartrep.el,295
(defcustom ein:smartrep-notebook-mode-alistein:smartrep-notebook-mode-alist31,914
(defun ein:smartrep-config ()ein:smartrep-config47,1492
(defvar ein:smartrep-config-once-called nil)ein:smartrep-config-once-called55,1642
(defun ein:smartrep-config-once ()ein:smartrep-config-once57,1688

elpa/ein-20160422.629/ein-subpackages.el,384
(defcustom ein:use-auto-complete nilein:use-auto-complete35,1100
(defcustom ein:use-auto-complete-superpack nilein:use-auto-complete-superpack42,1311
(defcustom ein:use-smartrep nilein:use-smartrep48,1534
(defcustom ein:load-dev nilein:load-dev64,2167
(defun ein:subpackages-load ()ein:subpackages-load69,2257
(defun ein:subpackages-reload ()ein:subpackages-reload81,2630

elpa/ein-20160422.629/ein-traceback.el,1325
(defclass ein:traceback ()ein:traceback36,975
(ein:deflocal ein:%traceback% nilein:%traceback%43,1237
(defvar ein:tb-buffer-name-template "*ein:tb %s/%s*")ein:tb-buffer-name-template46,1340
(defun ein:tb-new (buffer-name notebook)ein:tb-new48,1395
(defmethod ein:tb-get-buffer ((traceback ein:traceback))ein:tb-get-buffer51,1519
(defun ein:tb-pp (ewoc-data)ein:tb-pp58,1813
(defmethod ein:tb-render ((traceback ein:traceback) tb-data)ein:tb-render61,1884
(defmethod ein:tb-popup ((traceback ein:traceback) tb-data)ein:tb-popup73,2334
(defun ein:tb-show ()ein:tb-show78,2495
(defmethod ein:tb-range-of-node-at-point ((traceback ein:traceback))ein:tb-range-of-node-at-point93,3092
(defmethod ein:tb-file-path-at-point ((traceback ein:traceback))ein:tb-file-path-at-point100,3376
(defmethod ein:tb-file-lineno-at-point ((traceback ein:traceback))ein:tb-file-lineno-at-point114,3975
(defmethod ein:tb-jump-to-source-at-point ((traceback ein:traceback)ein:tb-jump-to-source-at-point122,4287
(defun ein:tb-jump-to-source-at-point-command (&optional select)ein:tb-jump-to-source-at-point-command151,5670
(defun ein:tb-prev-item ()ein:tb-prev-item158,5841
(defun ein:tb-next-item ()ein:tb-next-item162,5936
(define-derived-mode ein:traceback-mode fundamental-mode "ein:tb"ein:traceback-mode166,6031

elpa/ein-20160422.629/ein-utils.el,4742
(defmacro ein:aif (test-form then-form &rest else-forms)ein:aif35,958
(defmacro ein:aand (test &rest rest)ein:aand42,1207
(defmacro ein:and-let* (bindings &rest form)ein:and-let*48,1417
(defmacro ein:deflocal (name &optional initvalue docstring)ein:deflocal64,2004
(defmacro ein:with-read-only-buffer (buffer &rest body)ein:with-read-only-buffer74,2353
(defmacro ein:with-live-buffer (buffer &rest body)ein:with-live-buffer82,2573
(defmacro ein:with-possibly-killed-buffer (buffer &rest body)ein:with-possibly-killed-buffer89,2789
(defvar ein:dotty-syntax-tableein:dotty-syntax-table98,3072
(defun ein:object-at-point ()ein:object-at-point105,3297
(defun ein:object-at-point-or-error ()ein:object-at-point-or-error126,4173
(defun ein:flatten (tree)ein:flatten129,4282
(defvar ein:url-localhost "127.0.0.1")ein:url-localhost146,4795
(defvar ein:url-localhost-template "http://127.0.0.1:%s")ein:url-localhost-template147,4834
(defun ein:url (url-or-port &rest paths)ein:url149,4893
(defun ein:url-no-cache (url)ein:url-no-cache159,5278
(defun ein:html-get-data-in-body-tag (key)ein:html-get-data-in-body-tag167,5456
(defmacro ein:with-json-setting (&rest body)ein:with-json-setting179,5760
(defun ein:json-read ()ein:json-read184,5889
(defun ein:json-read-from-string (string)ein:json-read-from-string195,6238
(defun ein:json-any-to-bool (obj)ein:json-any-to-bool199,6342
(defun ein:json-encode-char (char)ein:json-encode-char202,6434
(defadvice json-encode-char (around ein:json-encode-char (char) activate)json-encode-char217,6927
(defadvice json-encode (around encode-nil-as-json-empty-object activate)json-encode221,7116
(defun ein:ewoc-create (pretty-printer &optional header footer nosep)ein:ewoc-create229,7269
(defun ein:propertize-read-only (string &rest properties)ein:propertize-read-only243,7814
(defun ein:insert-read-only (string &rest properties)ein:insert-read-only246,7944
(defun ein:trim (string &optional regexp)ein:trim252,8091
(defun ein:trim-left (string &optional regexp)ein:trim-left255,8191
(defun ein:trim-right (string &optional regexp)ein:trim-right259,8340
(defun ein:trim-regexp (string regexp)ein:trim-regexp263,8490
(defun ein:trim-indent (string)ein:trim-indent268,8614
(defun ein:join-str (sep strings)ein:join-str286,9309
(defun ein:join-path (paths)ein:join-path289,9381
(defun ein:string-fill-paragraph (string &optional justify)ein:string-fill-paragraph292,9459
(defmacro ein:case-equal (str &rest clauses)ein:case-equal300,9658
(defun ein:find-leftmot-column (beg end)ein:find-leftmot-column319,10110
(defun ein:plist-iter (plist)ein:plist-iter337,10625
(defun ein:plist-exclude (plist keys)ein:plist-exclude347,10928
(defun ein:hash-keys (table)ein:hash-keys357,11175
(defun ein:hash-vals (table)ein:hash-vals362,11279
(defun ein:filter (predicate sequence)ein:filter367,11383
(defun ein:clip-list (list first last)ein:clip-list372,11513
(defun* ein:list-insert-after (list pivot new &key (test #'eq))ein:list-insert-after388,11953
(defun* ein:list-insert-before (list pivot new &key (test #'eq))ein:list-insert-before397,12392
(defun* ein:list-move-left (list elem &key (test #'eq))ein:list-move-left408,12915
(defun* ein:list-move-right (list elem &key (test #'eq))ein:list-move-right423,13473
(defun ein:get-value (obj)ein:get-value441,14128
(defun ein:choose-setting (symbol value &optional single-p)ein:choose-setting448,14313
(defmacro ein:setf-default (place val)ein:setf-default463,14999
(defun ein:funcall-packed (func-arg &rest args)ein:funcall-packed468,15149
(defun ein:eval-if-bound (symbol)ein:eval-if-bound474,15361
(defun ein:remove-by-index (list indices)ein:remove-by-index477,15434
(defun ein:min (x &rest xs)ein:min485,15672
(defun ein:do-nothing (&rest -ignore-)ein:do-nothing489,15752
(defun ein:ask-choice-char (prompt choices)ein:ask-choice-char492,15863
(defun ein:truncate-lines-on ()ein:truncate-lines-on517,16914
(defun ein:display-warning (message &optional level)ein:display-warning524,17042
(defvar ein:display-warning-once--dbein:display-warning-once--db533,17447
(defun ein:display-warning-once (message &optional level)ein:display-warning-once536,17519
(defun ein:get-docstring (function)ein:get-docstring543,17829
(defun ein:generate-menu (list-name-callback)ein:generate-menu556,18244
(defun ein:call-process (command &optional args)ein:call-process565,18528
(defun ein:git-root-p (&optional dir)ein:git-root-p575,18880
(defun ein:git-dirty-p ()ein:git-dirty-p579,19045
(defun ein:git-revision ()ein:git-revision585,19263
(defun ein:git-revision-dirty ()ein:git-revision-dirty590,19451
(defun ein:utils-uuid ()ein:utils-uuid599,19709

elpa/ein-20160422.629/ein-websocket.el,613
(defstruct ein:$websocketein:$websocket33,968
(defun ein:websocket--prepare-cookies (url)ein:websocket--prepare-cookies58,1793
(defun ein:websocket (url &optional onmessage onclose onopenein:websocket73,2634
(defun ein:websocket-open-p (websocket)ein:websocket-open-p109,4206
(defun ein:websocket-send (websocket text)ein:websocket-send113,4317
(defun ein:websocket-close (websocket)ein:websocket-close118,4471
(defun ein:websocket-send-shell-channel (kernel msg)ein:websocket-send-shell-channel123,4618
(defun ein:websocket-send-stdin-channel (kernel msg)ein:websocket-send-stdin-channel133,5002

elpa/ein-20160422.629/ein-worksheet.el,8574
(defcustom ein:worksheet-enable-undo 'yesein:worksheet-enable-undo43,1115
(defun ein:worksheet-empty-undo-maybe ()ein:worksheet-empty-undo-maybe69,2006
(defvar ein:worksheet-buffer-name-template "*ein: %s/%s*")ein:worksheet-buffer-name-template77,2222
(defclass ein:worksheet ()ein:worksheet79,2282
(ein:deflocal ein:%worksheet% nilein:%worksheet%97,3133
(defun ein:worksheet-new (nbformat get-notebook-name discard-output-pein:worksheet-new103,3279
(defmethod ein:worksheet-bind-events ((ws ein:worksheet))ein:worksheet-bind-events110,3606
(defun ein:worksheet-class-bind-events (events)ein:worksheet-class-bind-events116,3825
(defun ein:worksheet--set-next-input (-ignore- data)ein:worksheet--set-next-input127,4351
(defun ein:worksheet--set-dirty (-ignore- data)ein:worksheet--set-dirty136,4716
(defmethod ein:worksheet-notebook-name ((ws ein:worksheet))ein:worksheet-notebook-name142,4984
(defmethod ein:worksheet-url-or-port ((ws ein:worksheet))ein:worksheet-url-or-port145,5098
(defmethod ein:worksheet-name ((ws ein:worksheet))ein:worksheet-name148,5203
(defmethod ein:worksheet-set-name ((ws ein:worksheet) name)ein:worksheet-set-name151,5296
(defmethod ein:worksheet-full-name ((ws ein:worksheet))ein:worksheet-full-name158,5531
(defmethod ein:worksheet-buffer ((ws ein:worksheet))ein:worksheet-buffer164,5726
(defmethod ein:worksheet--buffer-name ((ws ein:worksheet))ein:worksheet--buffer-name171,5963
(defmethod ein:worksheet--get-buffer ((ws ein:worksheet))ein:worksheet--get-buffer176,6150
(defmethod ein:worksheet-set-buffer-name ((ws ein:worksheet))ein:worksheet-set-buffer-name180,6303
(defmethod ein:worksheet-set-modified-p ((ws ein:worksheet) dirty)ein:worksheet-set-modified-p184,6472
(defmethod ein:worksheet-render ((ws ein:worksheet))ein:worksheet-render189,6651
(defun ein:worksheet-pp (ewoc-data)ein:worksheet-pp213,7607
(defmethod ein:worksheet-from-json ((ws ein:worksheet) data)ein:worksheet-from-json222,7827
(defmethod ein:worksheet-from-cells ((ws ein:worksheet) cells)ein:worksheet-from-cells229,8090
(defmethod ein:worksheet-to-json ((ws ein:worksheet))ein:worksheet-to-json232,8158
(defmethod ein:worksheet-to-nb4-json ((ws ein:worksheet) wsidx)ein:worksheet-to-nb4-json245,8789
(defmethod ein:worksheet-save-cells ((ws ein:worksheet) &optional deactivate)ein:worksheet-save-cells254,9223
(defmethod ein:worksheet-dont-save-cells ((ws ein:worksheet))ein:worksheet-dont-save-cells284,10488
(defmethod ein:worksheet-cell-from-type ((ws ein:worksheet) type &rest args)ein:worksheet-cell-from-type294,10736
(defmethod ein:worksheet-get-cells ((ws ein:worksheet))ein:worksheet-get-cells303,11052
(defmethod ein:worksheet-ncells ((ws ein:worksheet))ein:worksheet-ncells311,11370
(defun ein:worksheet-get-ewoc (&optional ws)ein:worksheet-get-ewoc314,11465
(defun ein:worksheet-get-current-ewoc-node (&optional pos)ein:worksheet-get-current-ewoc-node317,11565
(defun ein:worksheet-get-nearest-cell-ewoc-node (&optional pos max cell-p)ein:worksheet-get-nearest-cell-ewoc-node320,11685
(defun* ein:worksheet-get-current-cell (&key pos noerrorein:worksheet-get-current-cell332,12258
(defun ein:worksheet-at-codecell-p ()ein:worksheet-at-codecell-p344,12808
(defun ein:worksheet-get-cells-in-region (beg end)ein:worksheet-get-cells-in-region347,12919
(defun* ein:worksheet-get-cells-in-region-or-at-pointein:worksheet-get-cells-in-region-or-at-point352,13164
(defun ein:worksheet--get-ws-or-error ()ein:worksheet--get-ws-or-error365,13641
(defun ein:worksheet-focus-cell ()ein:worksheet-focus-cell368,13742
(defun ein:worksheet-delete-cell (ws cell &optional focus)ein:worksheet-delete-cell371,13855
(defun ein:worksheet-kill-cell (ws cells &optional focus)ein:worksheet-kill-cell393,14682
(defun ein:worksheet-copy-cell (cells)ein:worksheet-copy-cell411,15324
(defun ein:worksheet-insert-clone-below (ws cell pivot)ein:worksheet-insert-clone-below423,15805
(defun ein:worksheet-yank-cell (ws &optional n)ein:worksheet-yank-cell430,16061
(defun ein:worksheet-maybe-new-cell (ws type-or-cell)ein:worksheet-maybe-new-cell445,16731
(defun ein:worksheet-insert-cell-below (ws type-or-cell pivot &optional focus)ein:worksheet-insert-cell-below457,17266
(defun ein:worksheet-insert-cell-above (ws type-or-cell pivot &optional focus)ein:worksheet-insert-cell-above480,18166
(defun ein:worksheet-toggle-cell-type (ws cell &optional focus)ein:worksheet-toggle-cell-type504,19127
(defun ein:worksheet-change-cell-type (ws cell type &optional level focus)ein:worksheet-change-cell-type531,20314
(defun ein:worksheet-split-cell-at-point (ws cell &optional no-trim focus)ein:worksheet-split-cell-at-point565,21627
(defun ein:worksheet-merge-cell (ws cell &optional next focus)ein:worksheet-merge-cell594,22879
(defun* ein:worksheet-next-input-cell (ewoc-node &optional up (nth 1))ein:worksheet-next-input-cell618,23712
(defun ein:worksheet-next-input-cell-1 (ewoc-node &optional up)ein:worksheet-next-input-cell-1636,24395
(defun ein:worksheet-goto-input (ewoc-node up)ein:worksheet-goto-input645,24758
(defun ein:worksheet-goto-next-input (ewoc-node)ein:worksheet-goto-next-input650,24942
(defun ein:worksheet-goto-prev-input (ewoc-node)ein:worksheet-goto-prev-input655,25162
(defun ein:worksheet-goto-next-cell-element (&optional nth up relpos prop)ein:worksheet-goto-next-cell-element660,25380
(defun ein:worksheet-beginning-of-cell-input (&optional arg)ein:worksheet-beginning-of-cell-input679,26290
(defun ein:worksheet-end-of-cell-input (&optional arg)ein:worksheet-end-of-cell-input686,26597
(defun ein:worksheet-move-cell (ws cell up)ein:worksheet-move-cell696,26917
(defun ein:worksheet-move-cell-up (ws cell)ein:worksheet-move-cell-up710,27444
(defun ein:worksheet-move-cell-down (ws cell)ein:worksheet-move-cell-down715,27638
(defun ein:worksheet-toggle-output (ws cell)ein:worksheet-toggle-output723,27879
(defun ein:worksheet-set-output-visibility-all (ws &optional collapsed)ein:worksheet-set-output-visibility-all733,28289
(defun ein:worksheet-clear-output (cell &optional preserve-input-prompt)ein:worksheet-clear-output743,28764
(defun ein:worksheet-clear-all-output (ws &optional preserve-input-prompt)ein:worksheet-clear-all-output754,29234
(defmethod ein:worksheet-set-kernel ((ws ein:worksheet))ein:worksheet-set-kernel764,29652
(defun ein:worksheet-execute-cell (ws cell)ein:worksheet-execute-cell768,29841
(defun ein:worksheet-execute-cell-and-goto-next (ws cell &optional insert)ein:worksheet-execute-cell-and-goto-next778,30174
(defun ein:worksheet-execute-cell-and-insert-below (ws cell)ein:worksheet-execute-cell-and-insert-below789,30657
(defun ein:worksheet-execute-all-cell (ws)ein:worksheet-execute-all-cell796,30958
(defun ein:worksheet-insert-last-input-history (ws cell index)ein:worksheet-insert-last-input-history802,31209
(defvar ein:worksheet--history-index 1)ein:worksheet--history-index824,31979
(defun ein:worksheet--get-history-index (inc)ein:worksheet--get-history-index826,32020
(defun ein:worksheet-previous-input-history (ws cell index)ein:worksheet-previous-input-history842,32762
(defun ein:worksheet-next-input-history (ws cell index)ein:worksheet-next-input-history852,33242
(defun ein:worksheet-rename-sheet (ws name)ein:worksheet-rename-sheet865,33731
(defun ein:get-url-or-port--worksheet ()ein:get-url-or-port--worksheet879,34226
(defun ein:get-kernel--worksheet ()ein:get-kernel--worksheet883,34360
(defun ein:get-cell-at-point--worksheet ()ein:get-cell-at-point--worksheet886,34472
(defun ein:get-traceback-data--worksheet ()ein:get-traceback-data--worksheet889,34563
(defun ein:worksheet-buffer-p ()ein:worksheet-buffer-p895,34700
(defmethod ein:worksheet-has-buffer-p ((ws ein:worksheet))ein:worksheet-has-buffer-p899,34819
(defmethod ein:worksheet-modified-p ((ws ein:worksheet))ein:worksheet-modified-p902,34938
(defun ein:worksheet-dedent-cell-text (cell)ein:worksheet-dedent-cell-text911,35170
(defun ein:worksheet-toggle-autoexec (cell)ein:worksheet-toggle-autoexec922,35484
(defun ein:worksheet-turn-on-autoexec (cells &optional off)ein:worksheet-turn-on-autoexec927,35690
(defun ein:worksheet-execute-autoexec-cells (ws)ein:worksheet-execute-autoexec-cells943,36343
(defun ein:worksheet-imenu-create-index ()ein:worksheet-imenu-create-index958,36877
(defun ein:worksheet-imenu-setup ()ein:worksheet-imenu-setup970,37506
(defadvice fill-paragraph (around ein:worksheet-fill-paragraph activate)fill-paragraph977,37671

elpa/ein-20160422.629/ein.el,0

elpa/ein-20160422.629/ein.py,1285
def export_nb(nb_json, format):export_nb24,732
    import IPython.nbconvert as nbconvertIPython25,764
    import IPython.nbconvert as nbconvertnbconvert25,764
    import IPython.nbformat as nbformatIPython26,806
    import IPython.nbformat as nbformatnbformat26,806
def _find_edit_target_012(*args, **kwds):_find_edit_target_01232,973
    from IPython.core.interactiveshell import InteractiveShellInteractiveShell33,1015
def _find_edit_target_013(*args, **kwds):_find_edit_target_01338,1168
    from IPython.core.interactiveshell import InteractiveShellInteractiveShell39,1210
    from IPython.core.magics import CodeMagicsCodeMagics44,1379
    _find_edit_target = _find_edit_target_013_find_edit_target45,1426
    _find_edit_target = _find_edit_target_012_find_edit_target47,1492
def find_source(name):find_source50,1540
def run_docstring_examples(obj, verbose=True):run_docstring_examples63,1967
    from IPython.core.interactiveshell import InteractiveShellInteractiveShell64,2014
    import doctestdoctest65,2077
def print_object_info_for(obj):print_object_info_for71,2233
    import IPython.core.oinspectIPython72,2265
    import IPython.core.oinspectcore72,2265
    import IPython.core.oinspectoinspect72,2265
    import jsonjson73,2298

elpa/ein-20160422.629/zeroein.el,211
(defvar zeroein:lisp-dirzeroein:lisp-dir35,974
(defvar zeroein:root-dirzeroein:root-dir39,1089
(defun zeroein:path (p &rest ps)zeroein:path43,1212
(defvar zeroein:dependencieszeroein:dependencies49,1383

elpa/elpy-1.8.0/elpy/__init__.py,132
__author__ = "Jorgen Schaefer"__author__39,1315
__version__ = "1.8.0"__version__40,1346
__license__ = "GPL"__license__41,1368

elpa/elpy-1.8.0/elpy/__main__.py,198
import osos12,199
import syssys13,209
import elpyelpy15,221
from elpy.server import ElpyRPCServerElpyRPCServer16,233
    stdin = sys.stdinstdin19,299
    stdout = sys.stdoutstdout20,321

elpa/elpy-1.8.0/elpy/compat.py,364
import syssys8,131
    PYTHON3 = TruePYTHON312,175
    from io import StringIOStringIO14,195
    def ensure_not_unicode(obj):ensure_not_unicode16,224
    PYTHON3 = FalsePYTHON319,282
    from StringIO import StringIO  # noqaStringIO21,303
    from StringIO import StringIO  # noqanoqa21,303
    def ensure_not_unicode(obj):ensure_not_unicode23,346

elpa/elpy-1.8.0/elpy/impmagic.py,1296
import osos5,45
import syssys6,55
import threadingthreading7,66
    import importmagic.indeximportmagic11,90
    import importmagic.indexindex11,90
    import importmagic.symbolsimportmagic12,119
    import importmagic.symbolssymbols12,119
    import importmagic.importerimportmagic13,150
    import importmagic.importerimporter13,150
    importmagic = Noneimportmagic15,222
class ImportMagic(object):ImportMagic18,247
    def __init__(self):__init__20,275
    def _build_symbol_index(self, project_root, custom_path, blacklist_re):_build_symbol_index30,620
    def build_index(self, project_root, custom_path=None, blacklist_re=None):build_index46,1293
    def get_import_symbols(self, symbol):get_import_symbols54,1678
        def sort_key(item):sort_key57,1778
        return ["from %s import %s" % (mod, var) if var else "import %s" % mods64,2006
        return ["from %s import %s" % (mod, var) if var else "import %s" % modimport64,2006
        return ["from %s import %s" % (mod, var) if var else "import %s" % mods64,2006
    def add_import(self, source, statement):add_import67,2131
    def get_unresolved_symbols(self, source):get_unresolved_symbols82,2771
    def remove_unreferenced_imports(self, source):remove_unreferenced_imports87,2979

elpa/elpy-1.8.0/elpy/jedibackend.py,1134
import syssys9,120
import tracebacktraceback10,131
import jedijedi12,149
from elpy import rpcrpc14,162
class JediBackend(object):JediBackend17,185
    name = "jedi"name25,381
    def __init__(self, project_root):__init__27,400
    def rpc_get_completions(self, filename, source, offset):rpc_get_completions32,548
    def rpc_get_completion_docstring(self, completion):rpc_get_completion_docstring47,1255
    def rpc_get_completion_location(self, completion):rpc_get_completion_location54,1481
    def rpc_get_docstring(self, filename, source, offset):rpc_get_docstring61,1713
    def rpc_get_definition(self, filename, source, offset):rpc_get_definition76,2371
    def rpc_get_calltip(self, filename, source, offset):rpc_get_calltip117,4168
    def rpc_get_usages(self, filename, source, offset):rpc_get_usages132,4745
def pos_to_linecol(text, pos):pos_to_linecol173,6237
def linecol_to_pos(text, line, col):linecol_to_pos187,6581
def run_with_debug(jedi, name, *args, **kwargs):run_with_debug209,7271
        from jedi import debugdebug287,9763
        def _debug(level, str_out):_debug291,9820

elpa/elpy-1.8.0/elpy/pydocutils.py,815
import syssys1,0
import typestypes2,11
from pydoc import safeimport, resolve, ErrorDuringImportsafeimport4,25
from pydoc import safeimport, resolve, ErrorDuringImportresolve4,25
from pydoc import safeimport, resolve, ErrorDuringImportErrorDuringImport4,25
from pkgutil import iter_modulesiter_modules5,82
from elpy import compatcompat7,116
CONTAINER_TYPES = (type, types.ModuleType)CONTAINER_TYPES10,182
PYDOC_TYPES = (type,PYDOC_TYPES12,286
    CONTAINER_TYPES = tuple(list(CONTAINER_TYPES) + [types.ClassType])CONTAINER_TYPES20,565
    PYDOC_TYPES = tuple(list(PYDOC_TYPES) + [types.ClassType])PYDOC_TYPES21,636
def get_pydoc_completions(modulename):get_pydoc_completions24,701
def get_completions(modulename):get_completions47,1422
def get_modules(modulename=None):get_modules64,1997

elpa/elpy-1.8.0/elpy/refactor.py,3473
from elpy.rpc import FaultFault53,1552
    from rope.base.exceptions import RefactoringErrorRefactoringError56,1585
    from rope.base.project import ProjectProject57,1639
    from rope.base.libutils import path_to_resourcepath_to_resource58,1681
    from rope.base import change as rope_changerope_change59,1733
    from rope.base import worderworder60,1781
    from rope.refactor.topackage import ModuleToPackageModuleToPackage62,1872
    from rope.refactor.rename import RenameRename63,1928
    from rope.refactor.move import create_movecreate_move64,1972
    from rope.refactor.inline import create_inlinecreate_inline65,2019
    from rope.refactor.extract import ExtractMethodExtractMethod66,2070
    from rope.refactor.usefunction import UseFunctionUseFunction67,2122
    ROPE_AVAILABLE = TrueROPE_AVAILABLE68,2176
    ROPE_AVAILABLE = FalseROPE_AVAILABLE70,2222
def options(description, **kwargs):options73,2251
    def set_notes(function):set_notes75,2340
class Refactor(object):Refactor87,2825
    def __init__(self, project_root, filename):__init__98,3196
    def get_refactor_options(self, start, end=None):get_refactor_options107,3545
            if requires_import and not self._is_on_import_statement(start):and136,4750
            if requires_import and not self._is_on_import_statement(start):not136,4750
            if requires_import and not self._is_on_import_statement(start):self136,4750
            if requires_import and not self._is_on_import_statement(start):_is_on_import_statement136,4750
            if requires_import and not self._is_on_import_statement(start):start136,4750
    def _is_on_import_statement(self, offset):_is_on_import_statement141,4923
        if line.startswith("import ") or line.startswith("from "):from150,5254
    def _is_on_symbol(self, offset):_is_on_symbol155,5385
    def get_changes(self, name, *args):get_changes170,5835
    @options("Convert from x import y to import x.y as y", category="Imports",y212,7337
    @options("Convert from x import y to import x.y as y", category="Imports",to212,7337
    @options("Convert from x import y to import x.y as y", category="Imports",import212,7337
    @options("Convert from x import y to import x.y as y", category="Imports",x212,7337
    @options("Convert from x import y to import x.y as y", category="Imports",y212,7337
    @options("Convert from x import y to import x.y as y", category="Imports",Imports212,7337
    def refactor_froms_to_imports(self, offset):refactor_froms_to_imports216,7538
    def refactor_organize_imports(self):refactor_organize_imports224,7918
    def refactor_module_to_package(self):refactor_module_to_package232,8271
    def refactor_rename_at_point(self, offset, new_name, in_hierarchy, docs):refactor_rename_at_point247,8954
    def refactor_rename_current_module(self, new_name):refactor_rename_current_module260,9558
    def refactor_move_module(self, new_name):refactor_move_module270,10014
    def refactor_create_inline(self, offset, only_this):refactor_create_inline281,10534
    def refactor_extract_method(self, start, end, name,refactor_extract_method296,11280
    def refactor_use_function(self, offset):refactor_use_function306,11787
def translate_changes(initial_change):translate_changes313,12044
class FakeResource(object):FakeResource358,14041
    def __init__(self, filename):__init__361,14121
    def read(self):read364,14190

elpa/elpy-1.8.0/elpy/ropebackend.py,2459
import osos9,113
import timetime10,123
import tracebacktraceback11,135
import rope.contrib.codeassistrope13,153
import rope.contrib.codeassistcontrib13,153
import rope.contrib.codeassistcodeassist13,153
import rope.base.projectrope14,184
import rope.base.projectbase14,184
import rope.base.projectproject14,184
import rope.base.libutilsrope15,209
import rope.base.libutilsbase15,209
import rope.base.libutilslibutils15,209
import rope.base.exceptionsrope16,235
import rope.base.exceptionsbase16,235
import rope.base.exceptionsexceptions16,235
import rope.contrib.finditrope17,263
import rope.contrib.finditcontrib17,263
import rope.contrib.finditfindit17,263
from elpy import rpcrpc19,291
import elpy.pydocutilselpy20,312
import elpy.pydocutilspydocutils20,312
VALIDATE_EVERY_SECONDS = 5VALIDATE_EVERY_SECONDS22,336
MAXFIXES = 5MAXFIXES23,363
class RopeBackend(object):RopeBackend26,378
    name = "rope"name34,592
    def __init__(self, project_root):__init__36,611
    def get_resource(self, filename):get_resource67,1976
    def validate(self):validate75,2312
    def call_rope(self, rope_function, filename, source, offset,call_rope90,2786
    def rpc_get_completions(self, filename, source, offset):rpc_get_completions133,4479
    def rpc_get_completion_docstring(self, completion):rpc_get_completion_docstring162,5642
    def rpc_get_completion_location(self, completion):rpc_get_completion_location169,5856
    def rpc_get_definition(self, filename, source, offset):rpc_get_definition182,6331
    def rpc_get_calltip(self, filename, source, offset):rpc_get_calltip192,6656
    def rpc_get_docstring(self, filename, source, offset):rpc_get_docstring220,7614
def find_called_name_offset(source, orig_offset):find_called_name_offset227,7798
def find_source_folders(self, folder):find_source_folders254,8732
import rope.base.pycorerope268,9166
import rope.base.pycorebase268,9166
import rope.base.pycorepycore268,9166
def get_files(self):get_files272,9259
def get_python_project_files(project):get_python_project_files280,9448
orig_code_completions = (rope.contrib.codeassist.orig_code_completions294,10064
def code_completions(self):code_completions298,10178
def get_import_completions(self):get_import_completions306,10349
class FakeProposal(object):FakeProposal318,10762
    def __init__(self, name):__init__319,10790
    def get_doc(self):get_doc323,10873

elpa/elpy-1.8.0/elpy/rpc.py,567
import jsonjson10,193
import syssys11,205
import tracebacktraceback12,216
class JSONRPCServer(object):JSONRPCServer15,235
    def __init__(self, stdin=None, stdout=None):__init__43,1030
    def read_json(self):read_json59,1454
    def write_json(self, **kwargs):write_json70,1734
    def handle_request(self):handle_request80,2052
    def handle(self, method_name, args):handle118,3589
    def serve_forever(self):serve_forever125,3805
class Fault(Exception):Fault138,4105
    def __init__(self, message, code=500, data=None):__init__147,4384

elpa/elpy-1.8.0/elpy/server.py,2434
import ioio8,204
import osos9,214
import pydocpydoc10,224
from elpy.pydocutils import get_pydoc_completionsget_pydoc_completions12,238
from elpy.rpc import JSONRPCServer, FaultJSONRPCServer13,288
from elpy.rpc import JSONRPCServer, FaultFault13,288
from elpy.impmagic import ImportMagicImportMagic14,330
    from elpy import jedibackendjedibackend18,375
    jedibackend = Nonejedibackend20,448
    from elpy import ropebackendropebackend23,477
    ropebackend = Noneropebackend25,550
class ElpyRPCServer(JSONRPCServer):ElpyRPCServer28,575
    def __init__(self, *args, **kwargs):__init__34,714
    def _call_backend(self, method, default, *args, **kwargs):_call_backend40,920
    def rpc_echo(self, *args):rpc_echo50,1250
    def rpc_init(self, options):rpc_init59,1429
    def rpc_get_calltip(self, filename, source, offset):rpc_get_calltip81,2246
    def rpc_get_completions(self, filename, source, offset):rpc_get_completions88,2507
    def rpc_get_completion_docstring(self, completion):rpc_get_completion_docstring100,3012
    def rpc_get_completion_location(self, completion):rpc_get_completion_location107,3270
    def rpc_get_definition(self, filename, source, offset):rpc_get_definition116,3583
    def rpc_get_docstring(self, filename, source, offset):rpc_get_docstring123,3867
    def rpc_get_pydoc_completions(self, name=None):rpc_get_pydoc_completions130,4132
    def rpc_get_pydoc_documentation(self, symbol):rpc_get_pydoc_documentation139,4407
    def rpc_get_refactor_options(self, filename, start, end=None):rpc_get_refactor_options157,5057
            from elpy import refactorrefactor166,5363
    def rpc_refactor(self, filename, method, args):rpc_refactor172,5609
            from elpy import refactorrefactor180,5872
    def rpc_get_usages(self, filename, source, offset):rpc_get_usages188,6159
    def _ensure_import_magic(self):  # pragma: no cover_ensure_import_magic199,6558
    def rpc_get_import_symbols(self, filename, source, symbol):rpc_get_import_symbols206,6901
    def rpc_add_import(self, filename, source, statement):rpc_add_import213,7156
    def rpc_get_unresolved_symbols(self, filename, source):rpc_get_unresolved_symbols221,7414
    def rpc_remove_unreferenced_imports(self, filename, source):rpc_remove_unreferenced_imports229,7688
def get_source(fileobj):get_source238,7953
def _pysymbol_key(name):_pysymbol_key263,8732

elpa/elpy-1.8.0/elpy-autoloads.el,0

elpa/elpy-1.8.0/elpy-pkg.el,42
(define-package "elpy" "1.8.0""elpy"1,0

elpa/elpy-1.8.0/elpy-refactor.el,923
(defvar elpy-refactor-changes nilelpy-refactor-changes31,1075
(defvar elpy-refactor-window-configuration nilelpy-refactor-window-configuration35,1234
(defun elpy-refactor ()elpy-refactor43,1543
(defun elpy-refactor-select (options)elpy-refactor-select55,1940
(defun elpy-refactor-build-arguments (args pos)elpy-refactor-build-arguments111,4326
(defun elpy-refactor-create-change-buffer (changes)elpy-refactor-create-change-buffer153,5813
(defun elpy-refactor-insert-changes (changes)elpy-refactor-insert-changes170,6450
(defvar elpy-refactor-mode-mapelpy-refactor-mode-map205,7946
(define-derived-mode elpy-refactor-mode diff-mode "Elpy Refactor"elpy-refactor-mode214,8261
(defun elpy-refactor-commit ()elpy-refactor-commit221,8464
(defun elpy-refactor-rpc-get-options ()elpy-refactor-rpc-get-options267,10462
(defun elpy-refactor-rpc-get-changes (method args)elpy-refactor-rpc-get-changes278,10862

elpa/elpy-1.8.0/elpy.el,15398
(defconst elpy-version "1.8.0"elpy-version49,1585
(defgroup elpy nilelpy55,1704
(defcustom elpy-mode-hook nilelpy-mode-hook60,1802
(defcustom elpy-modules '(elpy-module-sane-defaultselpy-modules68,2009
(defcustom elpy-project-ignored-directories ' (".bzr" "CVS" ".git" ".hg" ".svn"elpy-project-ignored-directories95,3291
(defcustom elpy-project-root nilelpy-project-root104,3664
(defcustom elpy-project-root-finder-functionselpy-project-root-finder-functions126,4414
(defcustom elpy-rpc-backend nilelpy-rpc-backend147,5311
(defcustom elpy-rpc-maximum-buffer-age (* 5 60)elpy-rpc-maximum-buffer-age162,5887
(defcustom elpy-rpc-large-buffer-size 4096elpy-rpc-large-buffer-size176,6435
(defcustom elpy-rpc-ignored-buffer-size 102400elpy-rpc-ignored-buffer-size187,6821
(defcustom elpy-rpc-python-command (if (equal system-type "windows-nt")elpy-rpc-python-command198,7221
(defcustom elpy-rpc-pythonpath (file-name-directory (locate-library "elpy"))elpy-rpc-pythonpath214,7910
(defcustom elpy-rpc-timeout 1elpy-rpc-timeout224,8287
(defcustom elpy-rpc-error-timeout 30elpy-rpc-error-timeout240,8825
(defcustom elpy-eldoc-show-current-function telpy-eldoc-show-current-function253,9284
(defcustom elpy-test-runner 'elpy-test-discover-runnerelpy-test-runner262,9629
(defcustom elpy-test-discover-runner-command '("python" "-m" "unittest")elpy-test-discover-runner-command272,10111
(defcustom elpy-test-django-runner-command '("django-admin.py" "test"elpy-test-django-runner-command277,10282
(defcustom elpy-test-nose-runner-command '("nosetests")elpy-test-nose-runner-command283,10506
(defcustom elpy-test-trial-runner-command '("trial")elpy-test-trial-runner-command288,10656
(defcustom elpy-test-pytest-runner-command '("py.test")elpy-test-pytest-runner-command293,10804
(defvar elpy-mode-mapelpy-mode-map301,10985
(defun elpy-enable (&optional ignored)elpy-enable409,15823
(defun elpy-disable ()elpy-disable427,16588
(define-minor-mode elpy-modeelpy-mode434,16765
(defun elpy-news ()elpy-news455,17314
(defvar elpy-config--related-custom-groupselpy-config--related-custom-groups469,17700
(defvar elpy-config--get-config "import jsonelpy-config--get-config484,18283
(defun elpy-config-error (&optional fmt &rest args)elpy-config-error552,20185
(defun elpy-config ()elpy-config563,20551
(defun elpy-version ()elpy-version593,21514
(defun elpy-config--insert-help ()elpy-config--insert-help598,21657
(defun elpy-config--insert-configuration-problems (&optional config)elpy-config--insert-configuration-problems631,22867
(defun elpy-config--get-config ()elpy-config--get-config794,29734
(defun elpy-config--insert-configuration-table (&optional config)elpy-config--insert-configuration-table852,32027
(defun elpy-config--package-link (name version latest)elpy-config--package-link944,36830
(defmacro elpy-insert--popup (buffer-name &rest body)elpy-insert--popup963,37365
(defun elpy-insert--para (&rest messages)elpy-insert--para970,37603
(defun elpy-insert--header (&rest text)elpy-insert--header980,37896
(define-widget 'elpy-insert--pip-button 'itemelpy-insert--pip-button989,38179
(defun elpy-insert--pip-button-value-create (widget)elpy-insert--pip-button-value-create997,38436
(defun elpy-insert--pip-button-action (widget &optional event)elpy-insert--pip-button-action1022,39491
(defvar elpy-project--variable-name-history nilelpy-project--variable-name-history1029,39686
(defun elpy-project-root ()elpy-project-root1032,39794
(defun elpy-set-project-root (new-root)elpy-set-project-root1048,40320
(defun elpy-project-find-python-root ()elpy-project-find-python-root1053,40479
(defun elpy-project-find-git-root ()elpy-project-find-git-root1060,40739
(defun elpy-project-find-hg-root ()elpy-project-find-hg-root1064,40882
(defun elpy-project-find-svn-root ()elpy-project-find-svn-root1068,41023
(defun elpy-project-find-projectile-root ()elpy-project-find-projectile-root1076,41424
(defun elpy-library-root ()elpy-library-root1083,41712
(defun elpy-project--read-project-variable (prompt)elpy-project--read-project-variable1094,42176
(defun elpy-project--read-variable-value (prompt variable)elpy-project--read-variable-value1112,42795
(defun elpy-set-project-variable (variable value)elpy-set-project-variable1128,43502
(defun elpy-rgrep-symbol (regexp)elpy-rgrep-symbol1156,44706
(defun elpy-find-file (&optional dwim)elpy-find-file1195,46008
(defun elpy-find--test-file ()elpy-find--test-file1244,47999
(defun elpy-find--module-path (module)elpy-find--module-path1274,49362
(defun elpy-find--resolve-module (module)elpy-find--resolve-module1302,50643
(defun elpy-use-ipython (&optional ipython)elpy-use-ipython1322,51335
(defun elpy-use-cpython (&optional cpython)elpy-use-cpython1366,53257
(defun elpy-shell-send-region-or-buffer (&optional arg)elpy-shell-send-region-or-buffer1418,55103
(defun elpy-shell-switch-to-shell ()elpy-shell-switch-to-shell1451,56504
(defun elpy-shell-get-or-create-process ()elpy-shell-get-or-create-process1456,56675
(defun elpy-shell--region-without-indentation (beg end)elpy-shell--region-without-indentation1465,57027
(defun elpy-check (&optional whole-project-p)elpy-check1493,57987
(defun elpy-goto-definition ()elpy-goto-definition1526,59410
(defun elpy-goto-location (filename offset)elpy-goto-location1534,59679
(defun elpy-nav-forward-block ()elpy-nav-forward-block1543,60000
(defun elpy-nav-backward-block ()elpy-nav-backward-block1563,60636
(defun elpy-nav-forward-indent ()elpy-nav-forward-indent1583,61279
(defun elpy-nav-backward-indent ()elpy-nav-backward-indent1597,61782
(defun elpy-nav-move-line-or-region-down (&optional beg end)elpy-nav-move-line-or-region-down1609,62239
(defun elpy-nav-move-line-or-region-up (&optional beg end)elpy-nav-move-line-or-region-up1616,62483
(defun elpy--nav-move-line-vertically (dir)elpy--nav-move-line-vertically1623,62727
(defun elpy--nav-move-region-vertically (beg end dir)elpy--nav-move-region-vertically1633,63021
(defun elpy-nav-move-region-or-line-left ()elpy-nav-move-region-or-line-left1656,63734
(defun elpy-nav-move-region-or-line-right ()elpy-nav-move-region-or-line-right1663,63948
(defun elpy--nav-move-line-left ()elpy--nav-move-line-left1670,64166
(defun elpy--nav-move-line-right ()elpy--nav-move-line-right1676,64338
(defun elpy--nav-move-region-left ()elpy--nav-move-region-left1681,64471
(defun elpy--nav-move-region-right ()elpy--nav-move-region-right1692,64771
(defun elpy-open-and-indent-line-below ()elpy-open-and-indent-line-below1703,65073
(defun elpy-open-and-indent-line-above ()elpy-open-and-indent-line-above1709,65242
(defvar elpy-set-test-runner-history nilelpy-set-test-runner-history1720,65495
(defun elpy-test (&optional test-whole-project)elpy-test1723,65587
(defun elpy-set-test-runner (test-runner)elpy-set-test-runner1738,66134
(defun elpy-test-at-point ()elpy-test-at-point1763,67227
(defun elpy-test--current-test-name ()elpy-test--current-test-name1798,68303
(defun elpy-test--module-name-for-file (top-level module-file)elpy-test--module-name-for-file1805,68511
(defun elpy-test-runner-p (obj)elpy-test-runner-p1819,69200
(defun elpy-test-run (working-directory command &rest args)elpy-test-run1825,69358
(defun elpy-test-discover-runner (top file module test)elpy-test-discover-runner1832,69655
(defun elpy-test-django-runner (top file module test)elpy-test-django-runner1847,70169
(defun elpy-test-nose-runner (top file module test)elpy-test-nose-runner1864,70770
(defun elpy-test-trial-runner (top file module test)elpy-test-trial-runner1881,71341
(defun elpy-test-pytest-runner (top file module test)elpy-test-pytest-runner1896,71909
(defvar elpy-doc-history nilelpy-doc-history1920,72726
(defun elpy-doc ()elpy-doc1923,72797
(defun elpy-doc--read-identifier-from-minibuffer (initial)elpy-doc--read-identifier-from-minibuffer1953,73847
(defun elpy-doc--show (documentation)elpy-doc--show1959,74128
(defun elpy-doc--symbol-at-point ()elpy-doc--symbol-at-point1971,74567
(defun elpy-importmagic--replace-block (spec)elpy-importmagic--replace-block1982,74856
(defun elpy-importmagic--add-import-read-args (&optional object prompt)elpy-importmagic--add-import-read-args1999,75516
(defun elpy-importmagic-add-import (statement)elpy-importmagic-add-import2023,76848
(defun elpy-importmagic-fixup ()elpy-importmagic-fixup2031,77225
(defvar elpy-multiedit-overlays nilelpy-multiedit-overlays2054,78282
(defun elpy-multiedit-add-overlay (beg end)elpy-multiedit-add-overlay2057,78365
(defun elpy-multiedit--overlays-in-p (beg end)elpy-multiedit--overlays-in-p2073,79075
(defun elpy-multiedit-stop ()elpy-multiedit-stop2081,79329
(defun elpy-multiedit--overlay-changed (ov after-change beg endelpy-multiedit--overlay-changed2088,79520
(defun elpy-multiedit ()elpy-multiedit2108,80365
(defun elpy-multiedit-python-symbol-at-point (&optional use-symbol-p)elpy-multiedit-python-symbol-at-point2128,81169
(defun elpy-multiedit--usages (usages)elpy-multiedit--usages2169,83021
(defun elpy-occur-definitions ()elpy-occur-definitions2233,85866
(defvar elpy-promise-marker (make-symbol "*elpy-promise*")elpy-promise-marker2248,86266
(defun elpy-promise (success &optional error)elpy-promise2251,86384
(defun elpy-promise-p (obj)elpy-promise-p2270,87115
(defsubst elpy-promise-success-callback (promise)elpy-promise-success-callback2276,87294
(defsubst elpy-promise-error-callback (promise)elpy-promise-error-callback2280,87410
(defsubst elpy-promise-buffer (promise)elpy-promise-buffer2284,87522
(defsubst elpy-promise-resolved-p (promise)elpy-promise-resolved-p2288,87618
(defsubst elpy-promise-set-resolved (promise)elpy-promise-set-resolved2292,87748
(defun elpy-promise-resolve (promise value)elpy-promise-resolve2296,87859
(defun elpy-promise-reject (promise reason)elpy-promise-reject2309,88381
(defun elpy-promise-wait (promise &optional timeout)elpy-promise-wait2322,88942
(defvar elpy-rpc--call-id 0elpy-rpc--call-id2351,90091
(defvar elpy-rpc--buffer-p nilelpy-rpc--buffer-p2357,90251
(defvar elpy-rpc--buffer nilelpy-rpc--buffer2361,90388
(defvar elpy-rpc--backend-library-root nilelpy-rpc--backend-library-root2365,90519
(defvar elpy-rpc--backend-python-command nilelpy-rpc--backend-python-command2369,90668
(defvar elpy-rpc--backend-callbacks nilelpy-rpc--backend-callbacks2373,90827
(defvar elpy-rpc--last-call nilelpy-rpc--last-call2379,91024
(defvar elpy-rpc--last-error-popup nilelpy-rpc--last-error-popup2383,91167
(defun elpy-rpc (method params &optional success error)elpy-rpc2386,91251
(defun elpy-rpc--call-blocking (method-name params)elpy-rpc--call-blocking2398,91687
(defun elpy-rpc--call (method-name params success error)elpy-rpc--call2423,92631
(defun elpy-rpc--register-callback (call-id promise)elpy-rpc--register-callback2444,93460
(defun elpy-rpc--get-rpc-buffer ()elpy-rpc--get-rpc-buffer2454,93861
(defun elpy-rpc--process-buffer-p (buffer)elpy-rpc--process-buffer-p2465,94320
(defun elpy-rpc--find-buffer (library-root python-command)elpy-rpc--find-buffer2486,94914
(defun elpy-rpc--open (library-root python-command)elpy-rpc--open2501,95603
(defun elpy-rpc--cleanup-buffers ()elpy-rpc--cleanup-buffers2544,97694
(defun elpy-rpc--sentinel (process event)elpy-rpc--sentinel2559,98281
(defun elpy-rpc--filter (process output)elpy-rpc--filter2577,98995
(defun elpy-rpc--check-backend-version (rpc-version)elpy-rpc--check-backend-version2619,100666
(defun elpy-rpc--handle-unexpected-line (line)elpy-rpc--handle-unexpected-line2633,101263
(defun elpy-rpc--handle-json (json)elpy-rpc--handle-json2652,101984
(defun elpy-rpc--default-error-callback (error-object)elpy-rpc--default-error-callback2665,102548
(defun elpy-rpc--environment ()elpy-rpc--environment2776,107501
(defun elpy-rpc--buffer-contents ()elpy-rpc--buffer-contents2793,108257
(defun elpy-rpc-restart ()elpy-rpc-restart2809,108780
(defun elpy-rpc-init (backend library-root &optional success error)elpy-rpc-init2819,109061
(defun elpy-rpc-get-calltip (&optional success error)elpy-rpc-get-calltip2832,109586
(defun elpy-rpc-get-completions (&optional success error)elpy-rpc-get-completions2844,110005
(defun elpy-rpc-get-completion-docstring (completion &optional success error)elpy-rpc-get-completion-docstring2857,110450
(defun elpy-rpc-get-completion-location (completion &optional success error)elpy-rpc-get-completion-location2863,110683
(defun elpy-rpc-get-definition (&optional success error)elpy-rpc-get-definition2869,110937
(defun elpy-rpc-get-docstring (&optional success error)elpy-rpc-get-docstring2880,111285
(defun elpy-rpc-get-pydoc-completions (prefix &optional success error)elpy-rpc-get-pydoc-completions2891,111650
(defun elpy-rpc-get-pydoc-documentation (symbol &optional success error)elpy-rpc-get-pydoc-documentation2896,111870
(defun elpy-rpc-get-usages (&optional success error)elpy-rpc-get-usages2903,112114
(defvar elpy-modules-initialized-p nilelpy-modules-initialized-p2914,112391
(defun elpy-modules-run (command &rest args)elpy-modules-run2917,112497
(defun elpy-modules-global-init ()elpy-modules-global-init2922,112670
(defun elpy-modules-global-stop ()elpy-modules-global-stop2930,112908
(defun elpy-modules-buffer-init ()elpy-modules-buffer-init2938,113163
(defun elpy-modules-buffer-stop ()elpy-modules-buffer-stop2945,113351
(defun elpy-modules-remove-modeline-lighter (mode-name)elpy-modules-remove-modeline-lighter2949,113470
(defun elpy-module-sane-defaults (command &rest args)elpy-module-sane-defaults2967,113930
(defun elpy-module-company (command &rest args)elpy-module-company2982,114476
(defvar elpy-company--cache nilelpy-company--cache3016,115791
(defun elpy-company--cache-clear ()elpy-company--cache-clear3020,115925
(defun elpy-company--cache-annotation (name)elpy-company--cache-annotation3027,116135
(defun elpy-company--cache-meta (name)elpy-company--cache-meta3032,116318
(defun elpy-company--cache-name (name)elpy-company--cache-name3037,116489
(defun elpy-company--cache-completions (prefix result)elpy-company--cache-completions3045,116771
(defun elpy-company-backend (command &optional arg &rest ignored)elpy-company-backend3055,117161
(defun elpy--sort-and-strip-duplicates (seq)elpy--sort-and-strip-duplicates3126,119842
(defun elpy-module-eldoc (command &rest args)elpy-module-eldoc3135,120040
(defun elpy-eldoc-documentation ()elpy-eldoc-documentation3149,120468
(defun elpy-module-flymake (command &rest args)elpy-module-flymake3190,121990
(defun elpy-flymake-python-init ()elpy-flymake-python-init3237,124037
(defun elpy-flymake-next-error ()elpy-flymake-next-error3247,124448
(defun elpy-flymake-previous-error ()elpy-flymake-previous-error3254,124623
(defun elpy-flymake-show-error ()elpy-flymake-show-error3261,124807
(defun elpy-flymake-error-at-point ()elpy-flymake-error-at-point3268,125020
(defun elpy-flymake--standard-value (var)elpy-flymake--standard-value3279,125441
(defun elpy-module-highlight-indentation (command &rest args)elpy-module-highlight-indentation3289,125716
(defun elpy-module-pyvenv (command &rest args)elpy-module-pyvenv3302,126058
(defun elpy-module-yasnippet (command &rest args)elpy-module-yasnippet3313,126314

elpa/elpy-1.8.0/snippets/python-mode/.yas-setup.el,392
(defun elpy-snippet-split-args (arg-string)elpy-snippet-split-args1,0
(defun elpy-snippet-current-method-and-args ()elpy-snippet-current-method-and-args7,262
(defun elpy-snippet-init-assignments (arg-string)elpy-snippet-init-assignments33,1288
(defun elpy-snippet-super-form ()elpy-snippet-super-form49,1949
(defun elpy-snippet-super-arguments ()elpy-snippet-super-arguments58,2277

elpa/elpy-20160613.1005/elpy/__init__.py,133
__author__ = "Jorgen Schaefer"__author__39,1320
__version__ = "1.12.0"__version__40,1351
__license__ = "GPL"__license__41,1374

elpa/elpy-20160613.1005/elpy/__main__.py,198
import osos12,199
import syssys13,209
import elpyelpy15,221
from elpy.server import ElpyRPCServerElpyRPCServer16,233
    stdin = sys.stdinstdin19,299
    stdout = sys.stdoutstdout20,321

elpa/elpy-20160613.1005/elpy/auto_pep8.py,144
from elpy.rpc import FaultFault5,42
    import autopep8autopep89,76
    autopep8 = Noneautopep811,136
def fix_code(code):fix_code14,158

elpa/elpy-20160613.1005/elpy/compat.py,364
import syssys8,131
    PYTHON3 = TruePYTHON312,175
    from io import StringIOStringIO14,195
    def ensure_not_unicode(obj):ensure_not_unicode16,224
    PYTHON3 = FalsePYTHON319,282
    from StringIO import StringIO  # noqaStringIO21,303
    from StringIO import StringIO  # noqanoqa21,303
    def ensure_not_unicode(obj):ensure_not_unicode23,346

elpa/elpy-20160613.1005/elpy/impmagic.py,1355
import osos5,45
import syssys6,55
import threadingthreading7,66
    import importmagic.indeximportmagic11,90
    import importmagic.indexindex11,90
    import importmagic.symbolsimportmagic12,119
    import importmagic.symbolssymbols12,119
    import importmagic.importerimportmagic13,150
    import importmagic.importerimporter13,150
    importmagic = Noneimportmagic15,222
class ImportMagicError(Exception):ImportMagicError18,247
class ImportMagic(object):ImportMagic22,357
    def __init__(self):__init__24,385
    def _build_symbol_index(self, project_root, custom_path, blacklist_re):_build_symbol_index34,730
    def build_index(self, project_root, custom_path=None, blacklist_re=None):build_index50,1403
    def get_import_symbols(self, symbol):get_import_symbols58,1788
        def sort_key(item):sort_key61,1888
        return ["from %s import %s" % (mod, var) if var else "import %s" % mods68,2116
        return ["from %s import %s" % (mod, var) if var else "import %s" % modimport68,2116
        return ["from %s import %s" % (mod, var) if var else "import %s" % mods68,2116
    def add_import(self, source, statement):add_import71,2241
    def get_unresolved_symbols(self, source):get_unresolved_symbols86,2881
    def remove_unreferenced_imports(self, source):remove_unreferenced_imports95,3258

elpa/elpy-20160613.1005/elpy/jedibackend.py,1136
import syssys9,120
import tracebacktraceback10,131
import jedijedi12,149
from elpy import rpcrpc14,162
class JediBackend(object):JediBackend17,185
    name = "jedi"name25,381
    def __init__(self, project_root):__init__27,400
    def rpc_get_completions(self, filename, source, offset):rpc_get_completions32,548
    def rpc_get_completion_docstring(self, completion):rpc_get_completion_docstring47,1279
    def rpc_get_completion_location(self, completion):rpc_get_completion_location54,1505
    def rpc_get_docstring(self, filename, source, offset):rpc_get_docstring61,1737
    def rpc_get_definition(self, filename, source, offset):rpc_get_definition76,2395
    def rpc_get_calltip(self, filename, source, offset):rpc_get_calltip117,4192
    def rpc_get_usages(self, filename, source, offset):rpc_get_usages143,5107
def pos_to_linecol(text, pos):pos_to_linecol184,6599
def linecol_to_pos(text, line, col):linecol_to_pos198,6943
def run_with_debug(jedi, name, *args, **kwargs):run_with_debug220,7633
        from jedi import debugdebug325,10965
        def _debug(level, str_out):_debug329,11022

elpa/elpy-20160613.1005/elpy/pydocutils.py,815
import syssys1,0
import typestypes2,11
from pydoc import safeimport, resolve, ErrorDuringImportsafeimport4,25
from pydoc import safeimport, resolve, ErrorDuringImportresolve4,25
from pydoc import safeimport, resolve, ErrorDuringImportErrorDuringImport4,25
from pkgutil import iter_modulesiter_modules5,82
from elpy import compatcompat7,116
CONTAINER_TYPES = (type, types.ModuleType)CONTAINER_TYPES10,182
PYDOC_TYPES = (type,PYDOC_TYPES12,286
    CONTAINER_TYPES = tuple(list(CONTAINER_TYPES) + [types.ClassType])CONTAINER_TYPES20,565
    PYDOC_TYPES = tuple(list(PYDOC_TYPES) + [types.ClassType])PYDOC_TYPES21,636
def get_pydoc_completions(modulename):get_pydoc_completions24,701
def get_completions(modulename):get_completions47,1422
def get_modules(modulename=None):get_modules64,1997

elpa/elpy-20160613.1005/elpy/refactor.py,3573
import osos53,1552
from elpy.rpc import FaultFault55,1563
    from rope.base.exceptions import RefactoringErrorRefactoringError58,1596
    from rope.base.project import ProjectProject59,1650
    from rope.base.libutils import path_to_resourcepath_to_resource60,1692
    from rope.base import change as rope_changerope_change61,1744
    from rope.base import worderworder62,1792
    from rope.refactor.topackage import ModuleToPackageModuleToPackage64,1883
    from rope.refactor.rename import RenameRename65,1939
    from rope.refactor.move import create_movecreate_move66,1983
    from rope.refactor.inline import create_inlinecreate_inline67,2030
    from rope.refactor.extract import ExtractMethodExtractMethod68,2081
    from rope.refactor.usefunction import UseFunctionUseFunction69,2133
    ROPE_AVAILABLE = TrueROPE_AVAILABLE70,2187
    ROPE_AVAILABLE = FalseROPE_AVAILABLE72,2233
def options(description, **kwargs):options75,2262
    def set_notes(function):set_notes77,2351
class Refactor(object):Refactor89,2836
    def __init__(self, project_root, filename):__init__100,3207
    def get_refactor_options(self, start, end=None):get_refactor_options113,3737
            if requires_import and not self._is_on_import_statement(start):and142,4942
            if requires_import and not self._is_on_import_statement(start):not142,4942
            if requires_import and not self._is_on_import_statement(start):self142,4942
            if requires_import and not self._is_on_import_statement(start):_is_on_import_statement142,4942
            if requires_import and not self._is_on_import_statement(start):start142,4942
    def _is_on_import_statement(self, offset):_is_on_import_statement147,5115
        if line.startswith("import ") or line.startswith("from "):from156,5446
    def _is_on_symbol(self, offset):_is_on_symbol161,5577
    def get_changes(self, name, *args):get_changes176,6027
    @options("Convert from x import y to import x.y as y", category="Imports",y218,7529
    @options("Convert from x import y to import x.y as y", category="Imports",to218,7529
    @options("Convert from x import y to import x.y as y", category="Imports",import218,7529
    @options("Convert from x import y to import x.y as y", category="Imports",x218,7529
    @options("Convert from x import y to import x.y as y", category="Imports",y218,7529
    @options("Convert from x import y to import x.y as y", category="Imports",Imports218,7529
    def refactor_froms_to_imports(self, offset):refactor_froms_to_imports222,7730
    def refactor_organize_imports(self):refactor_organize_imports230,8110
    def refactor_module_to_package(self):refactor_module_to_package238,8463
    def refactor_rename_at_point(self, offset, new_name, in_hierarchy, docs):refactor_rename_at_point252,9106
    def refactor_rename_current_module(self, new_name):refactor_rename_current_module264,9666
    def refactor_move_module(self, new_name):refactor_move_module273,10084
    def refactor_create_inline(self, offset, only_this):refactor_create_inline283,10566
    def refactor_extract_method(self, start, end, name,refactor_extract_method297,11278
    def refactor_use_function(self, offset):refactor_use_function308,11769
    def _get_changes(self, refactor, *args, **kwargs):_get_changes319,12155
def translate_changes(initial_change):translate_changes328,12458
class FakeResource(object):FakeResource373,14455
    def __init__(self, filename):__init__376,14535
    def read(self):read379,14604

elpa/elpy-20160613.1005/elpy/ropebackend.py,2419
import osos9,113
import timetime10,123
import rope.contrib.codeassistrope12,136
import rope.contrib.codeassistcontrib12,136
import rope.contrib.codeassistcodeassist12,136
import rope.base.projectrope13,167
import rope.base.projectbase13,167
import rope.base.projectproject13,167
import rope.base.libutilsrope14,192
import rope.base.libutilsbase14,192
import rope.base.libutilslibutils14,192
import rope.base.exceptionsrope15,218
import rope.base.exceptionsbase15,218
import rope.base.exceptionsexceptions15,218
import rope.contrib.finditrope16,246
import rope.contrib.finditcontrib16,246
import rope.contrib.finditfindit16,246
from elpy import rpcrpc18,274
import elpy.pydocutilselpy19,295
import elpy.pydocutilspydocutils19,295
VALIDATE_EVERY_SECONDS = 5VALIDATE_EVERY_SECONDS21,319
MAXFIXES = 5MAXFIXES22,346
class RopeBackend(object):RopeBackend25,361
    name = "rope"name33,575
    def __init__(self, project_root):__init__35,594
    def get_resource(self, filename):get_resource66,1959
    def validate(self):validate74,2295
    def call_rope(self, rope_function, filename, source, offset,call_rope89,2769
    def rpc_get_completions(self, filename, source, offset):rpc_get_completions102,3232
    def rpc_get_completion_docstring(self, completion):rpc_get_completion_docstring126,4169
    def rpc_get_completion_location(self, completion):rpc_get_completion_location133,4383
    def rpc_get_definition(self, filename, source, offset):rpc_get_definition146,4858
    def rpc_get_calltip(self, filename, source, offset):rpc_get_calltip156,5183
    def rpc_get_docstring(self, filename, source, offset):rpc_get_docstring184,6141
def find_called_name_offset(source, orig_offset):find_called_name_offset191,6325
def find_source_folders(self, folder):find_source_folders218,7259
import rope.base.pycorerope232,7693
import rope.base.pycorebase232,7693
import rope.base.pycorepycore232,7693
def get_files(self):get_files236,7786
def get_python_project_files(project):get_python_project_files244,7975
orig_code_completions = (rope.contrib.codeassist.orig_code_completions258,8591
def code_completions(self):code_completions262,8705
def get_import_completions(self):get_import_completions270,8876
class FakeProposal(object):FakeProposal282,9289
    def __init__(self, name):__init__283,9317
    def get_doc(self):get_doc287,9400

elpa/elpy-20160613.1005/elpy/rpc.py,567
import jsonjson10,193
import syssys11,205
import tracebacktraceback12,216
class JSONRPCServer(object):JSONRPCServer15,235
    def __init__(self, stdin=None, stdout=None):__init__43,1030
    def read_json(self):read_json59,1454
    def write_json(self, **kwargs):write_json70,1734
    def handle_request(self):handle_request80,2052
    def handle(self, method_name, args):handle118,3589
    def serve_forever(self):serve_forever125,3805
class Fault(Exception):Fault138,4105
    def __init__(self, message, code=500, data=None):__init__147,4384

elpa/elpy-20160613.1005/elpy/server.py,2804
import ioio8,204
import osos9,214
import pydocpydoc10,224
from elpy.pydocutils import get_pydoc_completionsget_pydoc_completions12,238
from elpy.rpc import JSONRPCServer, FaultJSONRPCServer13,288
from elpy.rpc import JSONRPCServer, FaultFault13,288
from elpy.impmagic import ImportMagic, ImportMagicErrorImportMagic14,330
from elpy.impmagic import ImportMagic, ImportMagicErrorImportMagicError14,330
from elpy.auto_pep8 import fix_codefix_code15,386
from elpy.yapfutil import fix_code as fix_code_with_yapffix_code_with_yapf16,422
    from elpy import jedibackendjedibackend20,486
    jedibackend = Nonejedibackend22,559
    from elpy import ropebackendropebackend25,588
    ropebackend = Noneropebackend27,661
class ElpyRPCServer(JSONRPCServer):ElpyRPCServer30,686
    def __init__(self, *args, **kwargs):__init__36,825
    def _call_backend(self, method, default, *args, **kwargs):_call_backend42,1031
    def rpc_echo(self, *args):rpc_echo52,1361
    def rpc_init(self, options):rpc_init61,1540
    def rpc_get_calltip(self, filename, source, offset):rpc_get_calltip83,2357
    def rpc_get_completions(self, filename, source, offset):rpc_get_completions90,2618
    def rpc_get_completion_docstring(self, completion):rpc_get_completion_docstring102,3123
    def rpc_get_completion_location(self, completion):rpc_get_completion_location109,3381
    def rpc_get_definition(self, filename, source, offset):rpc_get_definition118,3694
    def rpc_get_docstring(self, filename, source, offset):rpc_get_docstring125,3978
    def rpc_get_pydoc_completions(self, name=None):rpc_get_pydoc_completions132,4243
    def rpc_get_pydoc_documentation(self, symbol):rpc_get_pydoc_documentation141,4518
    def rpc_get_refactor_options(self, filename, start, end=None):rpc_get_refactor_options159,5168
            from elpy import refactorrefactor168,5474
    def rpc_refactor(self, filename, method, args):rpc_refactor174,5720
            from elpy import refactorrefactor182,5983
    def rpc_get_usages(self, filename, source, offset):rpc_get_usages190,6270
    def _ensure_import_magic(self):  # pragma: no cover_ensure_import_magic201,6669
    def rpc_get_import_symbols(self, filename, source, symbol):rpc_get_import_symbols208,7012
    def rpc_add_import(self, filename, source, statement):rpc_add_import218,7368
    def rpc_get_unresolved_symbols(self, filename, source):rpc_get_unresolved_symbols229,7727
    def rpc_remove_unreferenced_imports(self, filename, source):rpc_remove_unreferenced_imports240,8102
    def rpc_fix_code(self, source):rpc_fix_code251,8467
    def rpc_fix_code_with_yapf(self, source):rpc_fix_code_with_yapf258,8653
def get_source(fileobj):get_source266,8860
def _pysymbol_key(name):_pysymbol_key292,9681

elpa/elpy-20160613.1005/elpy/tests/__init__.py,60
    import unittest2unittest24,33
    import syssys5,54

elpa/elpy-20160613.1005/elpy/tests/compat.py,396
import syssys8,131
    PYTHON3 = TruePYTHON312,175
    import builtinsbuiltins13,194
    from io import StringIOStringIO14,214
    PYTHON3 = FalsePYTHON316,248
    import __builtin__ as builtins  # noqabuiltins17,268
    import __builtin__ as builtins  # noqanoqa17,268
    from StringIO import StringIO  # noqaStringIO18,311
    from StringIO import StringIO  # noqanoqa18,311

elpa/elpy-20160613.1005/elpy/tests/support.py,9462
import osos15,469
import shutilshutil16,479
import syssys17,493
import tempfiletempfile18,504
import unittestunittest19,520
from elpy.tests import compatcompat21,537
class BackendTestCase(unittest.TestCase):BackendTestCase24,569
    def setUp(self):setUp32,777
    def project_file(self, relname, contents):project_file38,1045
class GenericRPCTests(object):GenericRPCTests58,1596
    METHOD = NoneMETHOD66,1822
    def rpc(self, filename, source, offset):rpc68,1841
    def test_should_not_fail_on_inexisting_file(self):test_should_not_fail_on_inexisting_file72,1987
    def test_should_not_fail_on_empty_file(self):test_should_not_fail_on_empty_file76,2135
    def test_should_not_fail_if_file_is_none(self):test_should_not_fail_if_file_is_none80,2272
    def test_should_not_fail_for_module_syntax_errors(self):test_should_not_fail_for_module_syntax_errors83,2355
    def test_should_not_fail_for_bad_indentation(self):test_should_not_fail_for_bad_indentation112,3116
    def test_should_not_fail_for_relative_import(self):test_should_not_fail_for_relative_import124,3553
    def test_should_not_fail_on_keyword(self):test_should_not_fail_on_keyword133,3843
    def test_should_not_fail_with_bad_encoding(self):test_should_not_fail_with_bad_encoding143,4134
    def test_should_not_fail_with_form_feed_characters(self):test_should_not_fail_with_form_feed_characters152,4411
    def test_should_not_fail_for_dictionaries_in_weird_places(self):test_should_not_fail_for_dictionaries_in_weird_places163,4741
    def test_should_not_break_with_binary_characters_in_docstring(self):test_should_not_break_with_binary_characters_in_docstring180,5284
    def test_should_not_fail_for_def_without_name(self):test_should_not_fail_for_def_without_name205,6201
    def test_should_not_fail_on_lambda(self):test_should_not_fail_on_lambda218,6593
    def test_should_not_fail_on_literals(self):test_should_not_fail_on_literals227,6865
    def test_should_not_fail_with_args_as_args(self):test_should_not_fail_with_args_as_args235,7137
    def test_should_not_fail_for_unicode_chars_in_string(self):test_should_not_fail_for_unicode_chars_in_string245,7446
    def test_should_not_fail_for_bad_escape_sequence(self):test_should_not_fail_for_bad_escape_sequence258,7816
    def test_should_not_fail_for_coding_declarations_in_strings(self):test_should_not_fail_for_coding_declarations_in_strings266,8058
    def test_should_not_fail_if_root_vanishes(self):test_should_not_fail_if_root_vanishes274,8359
    def test_should_not_fail_for_key_error(self):test_should_not_fail_for_key_error299,9112
    def test_should_not_fail_for_badly_defined_global_variable(self):test_should_not_fail_for_badly_defined_global_variable309,9438
    def test_should_not_fail_with_mergednamesdict(self):test_should_not_fail_with_mergednamesdict325,9866
            u'from email import message_|_'message_328,9997
            u'from email import message_|_'_328,9997
class RPCGetCompletionsTests(GenericRPCTests):RPCGetCompletionsTests335,10156
    METHOD = "rpc_get_completions"METHOD336,10203
    def test_should_complete_builtin(self):test_should_complete_builtin338,10239
    def test_should_complete_imports(self):test_should_complete_imports354,10824
        source, offset = source_and_offset("import json\n"json355,10868
        source, offset = source_and_offset("import json\n"n355,10868
    def test_should_complete_top_level_modules_for_import(self):test_should_complete_top_level_modules_for_import365,11362
        source, offset = source_and_offset("import multi_|_")multi_366,11427
        source, offset = source_and_offset("import multi_|_")_366,11427
    def test_should_complete_packages_for_import(self):test_should_complete_packages_for_import378,11980
        source, offset = source_and_offset("import email.mi_|_")email379,12036
        source, offset = source_and_offset("import email.mi_|_")mi_379,12036
        source, offset = source_and_offset("import email.mi_|_")_379,12036
    def test_should_not_complete_for_import(self):test_should_not_complete_for_import387,12449
        source, offset = source_and_offset("import foo.Conf_|_")foo388,12500
        source, offset = source_and_offset("import foo.Conf_|_")Conf_388,12500
        source, offset = source_and_offset("import foo.Conf_|_")_388,12500
    def test_should_not_fail_for_short_module(self):test_should_not_fail_for_short_module398,13018
        source, offset = source_and_offset("from .. import foo_|_")foo_399,13071
        source, offset = source_and_offset("from .. import foo_|_")_399,13071
    def test_should_complete_sys(self):test_should_complete_sys406,13429
        source, offset = source_and_offset("import sys\nsys._|_")sys407,13469
        source, offset = source_and_offset("import sys\nsys._|_")nsys407,13469
        source, offset = source_and_offset("import sys\nsys._|_")_407,13469
        source, offset = source_and_offset("import sys\nsys._|_")_407,13469
    def test_should_find_with_trailing_text(self):test_should_find_with_trailing_text414,13855
    def test_should_find_completion_different_package(self):test_should_find_completion_different_package425,14270
class RPCGetCompletionDocstringTests(object):RPCGetCompletionDocstringTests446,15177
    def test_should_return_docstring(self):test_should_return_docstring447,15223
        source, offset = source_and_offset("import json\n"json448,15267
        source, offset = source_and_offset("import json\n"n448,15267
    def test_should_return_none_if_unknown(self):test_should_return_none_if_unknown462,15891
class RPCGetCompletionLocationTests(object):RPCGetCompletionLocationTests468,16040
    def test_should_return_location(self):test_should_return_location469,16085
    def test_should_return_none_if_unknown(self):test_should_return_none_if_unknown483,16710
class RPCGetDefinitionTests(GenericRPCTests):RPCGetDefinitionTests489,16858
    METHOD = "rpc_get_definition"METHOD490,16904
    def test_should_return_definition_location_same_file(self):test_should_return_definition_location_same_file492,16939
        source, offset = source_and_offset("import threading\n"threading493,17003
        source, offset = source_and_offset("import threading\n"n493,17003
    def test_should_return_location_in_same_file_if_not_saved(self):test_should_return_location_in_same_file_if_not_saved508,17689
    def test_should_return_location_in_different_file(self):test_should_return_location_in_different_file529,18417
        source2, offset = source_and_offset("from test1 import test_function\n"test_function533,18622
        source2, offset = source_and_offset("from test1 import test_function\n"n533,18622
    def test_should_return_none_if_location_not_found(self):test_should_return_none_if_location_not_found545,19159
    def test_should_return_none_if_outside_of_symbol(self):test_should_return_none_if_outside_of_symbol555,19569
    def test_should_return_definition_location_different_package(self):test_should_return_definition_location_different_package565,19978
    def test_should_find_variable_definition(self):test_should_find_variable_definition587,20896
class RPCGetCalltipTests(GenericRPCTests):RPCGetCalltipTests598,21427
    METHOD = "rpc_get_calltip"METHOD599,21470
    def test_should_get_calltip(self):test_should_get_calltip603,21593
    def test_should_get_calltip_even_after_parens(self):test_should_get_calltip_even_after_parens617,22130
    def test_should_get_calltip_at_closing_paren(self):test_should_get_calltip_at_closing_paren630,22658
    def test_should_not_missing_attribute_get_definition(self):test_should_not_missing_attribute_get_definition641,23090
    def test_should_return_none_for_bad_identifier(self):test_should_return_none_for_bad_identifier649,23404
    def test_should_remove_self_argument(self):test_should_remove_self_argument658,23793
    def test_should_remove_package_prefix(self):test_should_remove_package_prefix670,24213
    def test_should_return_none_outside_of_all(self):test_should_return_none_outside_of_all683,24683
        source, offset = source_and_offset("import thr_|_eading\n")thr_685,24789
        source, offset = source_and_offset("import thr_|_eading\n")_eading685,24789
        source, offset = source_and_offset("import thr_|_eading\n")n685,24789
    def test_should_find_calltip_different_package(self):test_should_find_calltip_different_package690,25013
class RPCGetDocstringTests(GenericRPCTests):RPCGetDocstringTests712,25846
    METHOD = "rpc_get_docstring"METHOD713,25891
    def check_docstring(self, docstring):check_docstring715,25925
        def first_line(s):first_line717,25968
    def test_should_get_docstring(self):test_should_get_docstring723,26134
    def test_should_return_none_for_bad_identifier(self):test_should_return_none_for_bad_identifier732,26538
class RPCGetUsagesTests(GenericRPCTests):RPCGetUsagesTests742,26944
    METHOD = "rpc_get_usages"METHOD743,26986
    def test_should_return_uses_in_same_file(self):test_should_return_uses_in_same_file745,27017
    def test_should_return_uses_in_other_file(self):test_should_return_uses_in_other_file766,27821
    def test_should_not_fail_without_symbol(self):test_should_not_fail_without_symbol785,28540
def source_and_offset(source):source_and_offset795,28836

elpa/elpy-20160613.1005/elpy/tests/test_auto_pep8.py,290
import unittestunittest5,59
from elpy import auto_pep8auto_pep87,76
from elpy.tests.support import BackendTestCaseBackendTestCase8,103
class Autopep8TestCase(BackendTestCase):Autopep8TestCase11,152
    def setUp(self):setUp13,194
    def test_fix_code(self):test_fix_code17,287

elpa/elpy-20160613.1005/elpy/tests/test_impmagic.py,985
import rere5,59
import syssys6,69
import unittestunittest7,80
from elpy import impmagicimpmagic9,97
from elpy.tests.support import BackendTestCaseBackendTestCase10,123
class ImportMagicTestCase(BackendTestCase):ImportMagicTestCase23,334
    def setUp(self):setUp24,378
    def build_index(self):build_index30,572
    def test_get_symbols(self):test_get_symbols37,906
        self.assertEqual(candidates, ['from mymod import AnUncommonName'])AnUncommonName40,1040
        self.assertEqual(candidates, ['import mymod'])mymod42,1181
    def test_add_import(self):test_add_import44,1237
            TEST_SOURCE, 'from mymod import AnUncommonName')AnUncommonName47,1355
            TEST_SOURCE, 'import mymod')mymod56,1734
    def test_get_unresolved_symbols(self):test_get_unresolved_symbols62,1957
    def test_remove_unreferenced_imports(self):test_remove_unreferenced_imports67,2169
        self.assertEqual(newblock.strip(), 'import time')time73,2415

elpa/elpy-20160613.1005/elpy/tests/test_jedibackend.py,4475
import syssys3,46
import unittestunittest4,57
import jedijedi6,74
import mockmock7,86
from elpy import jedibackendjedibackend9,99
from elpy import rpcrpc10,128
from elpy.tests import compatcompat11,149
from elpy.tests.support import BackendTestCaseBackendTestCase12,179
from elpy.tests.support import RPCGetCompletionsTestsRPCGetCompletionsTests13,226
from elpy.tests.support import RPCGetCompletionDocstringTestsRPCGetCompletionDocstringTests14,280
from elpy.tests.support import RPCGetCompletionLocationTestsRPCGetCompletionLocationTests15,342
from elpy.tests.support import RPCGetDocstringTestsRPCGetDocstringTests16,403
from elpy.tests.support import RPCGetDefinitionTestsRPCGetDefinitionTests17,455
from elpy.tests.support import RPCGetCalltipTestsRPCGetCalltipTests18,508
from elpy.tests.support import RPCGetUsagesTestsRPCGetUsagesTests19,558
class JediBackendTestCase(BackendTestCase):JediBackendTestCase22,609
    def setUp(self):setUp23,653
class TestInit(JediBackendTestCase):TestInit28,791
    def test_should_have_jedi_as_name(self):test_should_have_jedi_as_name29,828
                            JediBackendTestCase):TestRPCGetCompletions34,979
                                    JediBackendTestCase):TestRPCGetCompletionDocstring39,1108
                                   JediBackendTestCase):TestRPCGetCompletionLocation44,1243
                          JediBackendTestCase):TestRPCGetDocstring49,1359
    JSON_LOADS_DOCSTRING = (JSON_LOADS_DOCSTRING50,1407
    def check_docstring(self, docstring):check_docstring55,1534
                           JediBackendTestCase):TestRPCGetDefinition62,1797
    def test_should_not_fail_if_module_path_is_none(self, Script):test_should_not_fail_if_module_path_is_none64,1877
                        JediBackendTestCase):TestRPCGetCalltip84,2474
    KEYS_CALLTIP = {'index': 0,KEYS_CALLTIP85,2520
        RADIX_CALLTIP = {'index': 0,RADIX_CALLTIP89,2660
        RADIX_CALLTIP = {'index': None,RADIX_CALLTIP93,2793
    ADD_CALLTIP = {'index': 0,ADD_CALLTIP96,2915
        THREAD_CALLTIP = {"name": "Thread",THREAD_CALLTIP100,3047
        THREAD_CALLTIP = {"name": "Thread",THREAD_CALLTIP109,3445
    def test_should_not_fail_with_get_subscope_by_name(self):test_should_not_fail_with_get_subscope_by_name118,3835
                       JediBackendTestCase):TestRPCGetUsages133,4276
    def test_should_not_fail_for_missing_module(self):test_should_not_fail_for_missing_module134,4321
class TestPosToLinecol(unittest.TestCase):TestPosToLinecol143,4608
    def test_should_handle_beginning_of_string(self):test_should_handle_beginning_of_string144,4651
    def test_should_handle_end_of_line(self):test_should_handle_end_of_line148,4802
    def test_should_handle_end_of_string(self):test_should_handle_end_of_string152,4960
class TestLinecolToPos(unittest.TestCase):TestLinecolToPos157,5122
    def test_should_handle_beginning_of_string(self):test_should_handle_beginning_of_string158,5165
    def test_should_handle_end_of_string(self):test_should_handle_end_of_string162,5314
    def test_should_return_offset(self):test_should_return_offset167,5524
    def test_should_fail_for_line_past_text(self):test_should_fail_for_line_past_text172,5728
    def test_should_fail_for_column_past_text(self):test_should_fail_for_column_past_text176,5887
class TestRunWithDebug(unittest.TestCase):TestRunWithDebug181,6050
    def test_should_call_method(self, Script):test_should_call_method183,6124
    def test_should_re_raise(self, Script):test_should_re_raise192,6447
    def test_should_keep_debug_info(self, set_debug_function, Script):test_should_keep_debug_info201,6793
    def test_should_keep_error_text(self, set_debug_function, Script):test_should_keep_error_text222,7700
    def test_should_handle_source_special(self, set_debug_function, Script):test_should_handle_source_special235,8181
    def test_should_set_debug_info(self, set_debug_function, Script):test_should_set_debug_info249,8740
        def my_set_debug_function(debug_function, **kwargs):my_set_debug_function252,8847
        def my_script(*args, **kwargs):my_script255,8960
    def test_should_not_fail_with_bad_data(self, Script, set_debug_function):test_should_not_fail_with_bad_data276,9780
        import jedi.debugjedi277,9858
        import jedi.debugdebug277,9858
        def set_debug(function, speed=True):set_debug279,9885

elpa/elpy-20160613.1005/elpy/tests/test_pydocutils.py,1576
import osos1,0
import unittestunittest2,10
import shutilshutil3,26
import syssys4,40
import tempfiletempfile5,51
import mockmock7,68
import elpy.pydocutilselpy9,81
import elpy.pydocutilspydocutils9,81
class TestGetPydocCompletions(unittest.TestCase):TestGetPydocCompletions12,106
    def test_should_return_top_level_modules(self):test_should_return_top_level_modules13,156
    def test_should_return_submodules(self):test_should_return_submodules18,346
    def test_should_find_objects_in_module(self):test_should_find_objects_in_module25,649
    def test_should_find_attributes_of_objects(self):test_should_find_attributes_of_objects30,890
    def test_should_return_none_for_inexisting_module(self):test_should_return_none_for_inexisting_module37,1239
    def test_should_work_for_unicode_strings(self):test_should_work_for_unicode_strings42,1438
    def test_should_find_partial_completions(self):test_should_find_partial_completions46,1597
    def test_should_ignore_trailing_dot(self):test_should_ignore_trailing_dot54,1943
class TestGetModules(unittest.TestCase):TestGetModules60,2126
    def test_should_return_top_level_modules(self):test_should_return_top_level_modules61,2167
    def test_should_return_submodules(self):test_should_return_submodules66,2345
    def test_should_catch_import_errors(self, safeimport):test_should_catch_import_errors72,2578
        def raise_function(message):raise_function73,2637
    def test_should_not_fail_for_permission_denied(self):test_should_not_fail_for_permission_denied79,2925

elpa/elpy-20160613.1005/elpy/tests/test_refactor.py,3323
import unittestunittest1,0
import tempfiletempfile2,16
import shutilshutil3,32
import osos4,46
import mockmock5,56
import syssys6,68
from elpy import refactorrefactor8,80
from textwrap import dedentdedent9,106
class RefactorTestCase(unittest.TestCase):RefactorTestCase12,136
    def setUp(self):setUp13,179
    def create_file(self, name, contents=""):create_file18,377
    def assertSourceEqual(self, first, second, msg=None):assertSourceEqual28,745
class TestGetRefactorOptions(RefactorTestCase):TestGetRefactorOptions33,943
    def test_should_only_return_importsmodule_if_not_on_symbol(self):test_should_only_return_importsmodule_if_not_on_symbol34,991
    def test_should_return_all_if_on_symbol(self):test_should_return_all_if_on_symbol54,2038
    def test_should_return_only_region_if_endoffset(self):test_should_return_only_region_if_endoffset65,2599
    def test_should_treat_from_import_special(self):test_should_treat_from_import_special74,3058
class TestGetChanges(RefactorTestCase):TestGetChanges91,3904
    def test_should_fail_if_method_is_not_refactoring(self):test_should_fail_if_method_is_not_refactoring92,3944
    def test_should_return_method_results(self):test_should_return_method_results97,4188
class TestIsOnSymbol(RefactorTestCase):TestIsOnSymbol109,4733
    def test_should_find_symbol(self):test_should_find_symbol110,4773
    def test_should_find_symbol_with_underscores(self):test_should_find_symbol_with_underscores116,5011
    def test_should_not_find_weird_places(self):test_should_not_find_weird_places121,5249
class TestFromsToImports(RefactorTestCase):TestFromsToImports128,5548
    def test_should_refactor(self):test_should_refactor129,5592
class TestOrganizeImports(RefactorTestCase):TestOrganizeImports150,6351
    def test_should_refactor(self):test_should_refactor151,6396
class TestModuleToPackage(RefactorTestCase):TestModuleToPackage177,7282
    def test_should_refactor(self):test_should_refactor178,7327
class TestRenameAtPoint(RefactorTestCase):TestRenameAtPoint202,8345
    def test_should_refactor(self):test_should_refactor203,8388
    def test_should_refactor_in_hierarchy(self):test_should_refactor_in_hierarchy251,10009
    def test_should_refactor_in_docstrings(self):test_should_refactor_in_docstrings319,12298
class TestRenameCurrentModule(RefactorTestCase):TestRenameCurrentModule348,13438
    def test_should_refactor(self):test_should_refactor349,13487
class TestMoveModule(RefactorTestCase):TestMoveModule376,14404
    def test_should_refactor(self):test_should_refactor377,14444
class TestCreateInline(RefactorTestCase):TestCreateInline410,15595
    def setUp(self):setUp411,15637
    def test_should_refactor_single_occurrenc(self):test_should_refactor_single_occurrenc423,15929
    def test_should_refactor_all_occurrencs(self):test_should_refactor_all_occurrencs438,16530
class TestExtractMethod(RefactorTestCase):TestExtractMethod452,17095
    def setUp(self):setUp453,17138
    def test_should_refactor_local(self):test_should_refactor_local466,17562
    def test_should_refactor_global(self):test_should_refactor_global493,18822
class TestUseFunction(RefactorTestCase):TestUseFunction520,19973
    def test_should_refactor(self):test_should_refactor521,20014

elpa/elpy-20160613.1005/elpy/tests/test_ropebackend.py,3255
import osos3,35
import shutilshutil4,45
import syssys5,59
import tempfiletempfile6,70
import mockmock8,87
from elpy import ropebackendropebackend10,100
from elpy import rpcrpc11,129
from elpy.tests import compatcompat12,150
from elpy.tests.support import BackendTestCaseBackendTestCase13,180
from elpy.tests.support import RPCGetCompletionsTestsRPCGetCompletionsTests14,227
from elpy.tests.support import RPCGetCompletionDocstringTestsRPCGetCompletionDocstringTests15,281
from elpy.tests.support import RPCGetCompletionLocationTestsRPCGetCompletionLocationTests16,343
from elpy.tests.support import RPCGetDefinitionTestsRPCGetDefinitionTests17,404
from elpy.tests.support import RPCGetCalltipTestsRPCGetCalltipTests18,457
from elpy.tests.support import RPCGetDocstringTestsRPCGetDocstringTests19,507
class RopeBackendTestCase(BackendTestCase):RopeBackendTestCase22,561
    def setUp(self):setUp23,605
class ShouldCallValidateTest(object):ShouldCallValidateTest28,743
    def test_should_call_validate(self):test_should_call_validate29,781
class TestInit(RopeBackendTestCase):TestInit36,974
    def test_should_have_rope_as_name(self):test_should_have_rope_as_name37,1011
    def test_should_patch_project_files(self):test_should_patch_project_files40,1109
    def test_should_fail_for_inexisting_project_root(self):test_should_fail_for_inexisting_project_root51,1493
class TestValidate(RopeBackendTestCase):TestValidate56,1654
    def test_should_call_validate_after_timeout(self):test_should_call_validate_after_timeout57,1695
    def test_should_not_call_validate_before_timeout(self):test_should_not_call_validate_before_timeout67,2109
    def test_should_not_fail_if_root_vanishes(self):test_should_not_fail_if_root_vanishes77,2529
                            RopeBackendTestCase):TestRPCGetCompletions88,2864
                                    RopeBackendTestCase):TestRPCGetCompletionDocstring93,2993
                                   RopeBackendTestCase):TestRPCGetCompletionLocation98,3128
                           RopeBackendTestCase):TestRPCGetDefinition104,3297
                        RopeBackendTestCase):TestRPCGetCalltip110,3449
    ADD_CALLTIP = 'Add.add(a, b)'ADD_CALLTIP111,3495
    RADIX_CALLTIP = "Decimal.radix()"RADIX_CALLTIP112,3529
        THREAD_CALLTIP = (THREAD_CALLTIP114,3590
        KEYS_CALLTIP = "builtins.keys()"KEYS_CALLTIP118,3747
        THREAD_CALLTIP = (THREAD_CALLTIP120,3798
        KEYS_CALLTIP = "__builtin__.keys()"KEYS_CALLTIP124,3953
                          RopeBackendTestCase):TestRPCGetDocstring129,4097
        JSON_LOADS_DOCSTRING = (JSON_LOADS_DOCSTRING131,4179
        JSON_LOADS_DOCSTRING = (JSON_LOADS_DOCSTRING137,4390
class TestGetPythonProjectFiles(RopeBackendTestCase):TestGetPythonProjectFiles144,4617
    def test(self):test145,4671
class TestPatchProjectFiles(RopeBackendTestCase):TestPatchProjectFiles162,5300
    def test(self):test163,5350
class TestCallRope(RopeBackendTestCase):TestCallRope178,5926
    def test_should_return_value(self):test_should_return_value179,5967
    def test_should_raise_fault_with_data_on_exception(self):test_should_raise_fault_with_data_on_exception189,6195

elpa/elpy-20160613.1005/elpy/tests/test_rpc.py,2880
import jsonjson3,27
import unittestunittest4,39
import syssys5,55
from elpy import rpcrpc7,67
from elpy.tests.compat import StringIOStringIO8,88
class TestFault(unittest.TestCase):TestFault11,129
    def test_should_have_code_and_data(self):test_should_have_code_and_data12,165
    def test_should_have_defaults_for_code_and_data(self):test_should_have_defaults_for_code_and_data18,405
class TestJSONRPCServer(unittest.TestCase):TestJSONRPCServer25,627
    def setUp(self):setUp26,671
    def write(self, s):write31,820
    def read(self):read39,1016
class TestInit(TestJSONRPCServer):TestInit48,1214
    def test_should_use_arguments(self):test_should_use_arguments49,1249
    def test_should_default_to_sys(self):test_should_default_to_sys53,1399
class TestReadJson(TestJSONRPCServer):TestReadJson59,1585
    def test_should_read_json(self):test_should_read_json60,1624
    def test_should_raise_eof_on_eof(self):test_should_raise_eof_on_eof70,2015
    def test_should_fail_on_malformed_json(self):test_should_fail_on_malformed_json73,2116
class TestWriteJson(TestJSONRPCServer):TestWriteJson79,2291
    def test_should_write_json_line(self):test_should_write_json_line80,2331
class TestHandleRequest(TestJSONRPCServer):TestHandleRequest90,2646
    def test_should_fail_if_json_does_not_contain_a_method(self):test_should_fail_if_json_does_not_contain_a_method91,2690
    def test_should_call_right_method(self):test_should_call_right_method97,2936
    def test_should_pass_defaults_for_missing_parameters(self):test_should_pass_defaults_for_missing_parameters107,3348
        def test_method(*params):test_method108,3412
    def test_should_return_error_for_missing_method(self):test_should_return_error_for_missing_method117,3685
    def test_should_return_error_for_exception_in_method(self):test_should_return_error_for_exception_in_method127,4057
        def test_method():test_method128,4121
    def test_should_not_include_traceback_for_faults(self):test_should_not_include_traceback_for_faults142,4590
        def test_method():test_method143,4650
    def test_should_add_data_for_faults(self):test_should_add_data_for_faults157,5105
        def test_method():test_method158,5152
    def test_should_call_handle_for_unknown_method(self):test_should_call_handle_for_unknown_method170,5522
        def test_handle(method_name, args):test_handle171,5580
class TestServeForever(TestJSONRPCServer):TestServeForever182,5967
    def handle_request(self):handle_request183,6010
    def setUp(self):setUp188,6132
    def test_should_call_handle_request_repeatedly(self):test_should_call_handle_request_repeatedly194,6320
    def test_should_return_on_some_errors(self):test_should_return_on_some_errors198,6457
    def test_should_fail_on_most_errors(self):test_should_fail_on_most_errors206,6707

elpa/elpy-20160613.1005/elpy/tests/test_server.py,6452
import osos5,57
import tempfiletempfile6,67
import unittestunittest7,83
import mockmock9,100
from elpy import rpcrpc11,113
from elpy import serverserver12,134
from elpy.tests import compatcompat13,158
from elpy.tests.support import BackendTestCaseBackendTestCase14,188
import elpy.refactorelpy15,235
import elpy.refactorrefactor15,235
class ServerTestCase(unittest.TestCase):ServerTestCase18,258
    def setUp(self):setUp19,299
class BackendCallTestCase(ServerTestCase):BackendCallTestCase23,364
    def assert_calls_backend(self, method):assert_calls_backend24,407
class TestInit(ServerTestCase):TestInit37,923
    def test_should_not_select_a_backend_by_default(self):test_should_not_select_a_backend_by_default38,955
class TestRPCEcho(ServerTestCase):TestRPCEcho42,1060
    def test_should_return_arguments(self):test_should_return_arguments43,1095
class TestRPCInit(ServerTestCase):TestRPCInit48,1248
    def test_should_set_project_root(self, RopeBackend, JediBackend):test_should_set_project_root51,1379
    def test_should_initialize_rope(self, RopeBackend, JediBackend):test_should_initialize_rope59,1719
    def test_should_initialize_jedi(self, RopeBackend, JediBackend):test_should_initialize_jedi67,2049
    def test_should_use_rope_if_available_and_requested(test_should_use_rope_if_available_and_requested75,2379
    def test_should_use_jedi_if_available_and_requested(test_should_use_jedi_if_available_and_requested87,2837
    def test_should_use_rope_if_available_and_nothing_requested(test_should_use_rope_if_available_and_nothing_requested99,3295
    def test_should_use_jedi_if_rope_not_available_and_nothing_requested(test_should_use_jedi_if_rope_not_available_and_nothing_requested111,3759
    def test_should_use_none_if_nothing_available(test_should_use_none_if_nothing_available128,4384
class TestRPCGetCalltip(BackendCallTestCase):TestRPCGetCalltip147,4993
    def test_should_call_backend(self):test_should_call_backend148,5039
    def test_should_handle_no_backend(self):test_should_handle_no_backend151,5133
class TestRPCGetCompletions(BackendCallTestCase):TestRPCGetCompletions157,5346
    def test_should_call_backend(self):test_should_call_backend158,5396
    def test_should_handle_no_backend(self):test_should_handle_no_backend161,5494
    def test_should_sort_results(self):test_should_sort_results167,5741
    def test_should_uniquify_results(self):test_should_uniquify_results183,6336
class TestRPCGetCompletionDocs(ServerTestCase):TestRPCGetCompletionDocs197,6799
    def test_should_call_backend(self):test_should_call_backend198,6847
    def test_should_handle_no_backend(self):test_should_handle_no_backend205,7115
class TestRPCGetCompletionLocation(ServerTestCase):TestRPCGetCompletionLocation210,7266
    def test_should_call_backend(self):test_should_call_backend211,7318
    def test_should_handle_no_backend(self):test_should_handle_no_backend218,7584
class TestRPCGetDefinition(BackendCallTestCase):TestRPCGetDefinition223,7734
    def test_should_call_backend(self):test_should_call_backend224,7783
    def test_should_handle_no_backend(self):test_should_handle_no_backend227,7880
class TestRPCGetDocstring(BackendCallTestCase):TestRPCGetDocstring233,8099
    def test_should_call_backend(self):test_should_call_backend234,8147
    def test_should_handle_no_backend(self):test_should_handle_no_backend237,8243
class TestRPCGetPydocCompletions(ServerTestCase):TestRPCGetPydocCompletions243,8460
    def test_should_call_pydoc_completions(self, get_pydoc_completions):test_should_call_pydoc_completions245,8566
class TestGetPydocDocumentation(ServerTestCase):TestGetPydocDocumentation253,8874
    def test_should_find_documentation(self, render_doc):test_should_find_documentation255,8959
    def test_should_return_none_for_unknown_module(self):test_should_return_none_for_unknown_module265,9336
    def test_should_return_valid_unicode(self):test_should_return_valid_unicode270,9497
        import jsonjson271,9545
class TestRPCGetRefactorOptions(BackendTestCase):TestRPCGetRefactorOptions278,9667
    def test_should_fail_if_rope_is_not_available(self, import_):test_should_fail_if_rope_is_not_available280,9771
    def test_should_initialize_and_call_refactor_object(self, Refactor):test_should_initialize_and_call_refactor_object288,10126
class TestRPCRefactor(BackendTestCase):TestRPCRefactor299,10540
    def test_should_fail_if_rope_is_not_available(self, import_):test_should_fail_if_rope_is_not_available301,10634
    def test_should_initialize_and_call_refactor_object_with_args(test_should_initialize_and_call_refactor_object_with_args309,10985
    def test_should_initialize_and_call_refactor_object_without_args(test_should_initialize_and_call_refactor_object_without_args321,11472
class TestRPCGetUsages(BackendCallTestCase):TestRPCGetUsages333,11899
    def test_should_call_backend(self):test_should_call_backend334,11944
    def test_should_handle_no_backend(self):test_should_handle_no_backend337,12037
class TestRPCImportMagic(ServerTestCase):TestRPCImportMagic344,12299
    def test_should_call_importmagic(self):test_should_call_importmagic345,12341
class TestGetSource(unittest.TestCase):TestGetSource357,13035
    def test_should_return_string_by_default(self):test_should_return_string_by_default358,13075
    def test_should_return_file_contents(self):test_should_return_file_contents362,13211
    def test_should_clean_up_tempfile(self):test_should_clean_up_tempfile373,13580
    def test_should_support_utf8(self):test_should_support_utf8385,13997
class TestPysymbolKey(BackendTestCase):TestPysymbolKey396,14333
    def keyLess(self, a, b):keyLess397,14373
    def test_should_be_case_insensitive(self):test_should_be_case_insensitive402,14531
    def test_should_sort_private_symbols_after_public_symbols(self):test_should_sort_private_symbols_after_public_symbols405,14614
    def test_should_sort_private_symbols_after_dunder_symbols(self):test_should_sort_private_symbols_after_dunder_symbols408,14720
    def test_should_sort_dunder_symbols_after_public_symbols(self):test_should_sort_dunder_symbols_after_public_symbols412,14901
class Autopep8TestCase(ServerTestCase):Autopep8TestCase416,15008
    def test_rpc_fix_code_should_return_formatted_string(self):test_rpc_fix_code_should_return_formatted_string418,15049

elpa/elpy-20160613.1005/elpy/tests/test_support.py,457
import unittestunittest3,61
from elpy.tests.support import source_and_offsetsource_and_offset5,78
class TestSourceAndOffset(unittest.TestCase):TestSourceAndOffset8,129
    def test_should_return_source_and_offset(self):test_should_return_source_and_offset9,175
    def test_should_handle_beginning_of_string(self):test_should_handle_beginning_of_string13,337
    def test_should_handle_end_of_string(self):test_should_handle_end_of_string17,501

elpa/elpy-20160613.1005/elpy/tests/test_yapf.py,507
import unittestunittest4,54
from elpy import yapfutilyapfutil6,71
from elpy.rpc import FaultFault7,97
from elpy.tests.support import BackendTestCaseBackendTestCase8,124
class YAPFTestCase(BackendTestCase):YAPFTestCase13,285
    def setUp(self):setUp14,322
    def test_fix_code_should_throw_error_for_invalid_code(self):test_fix_code_should_throw_error_for_invalid_code18,420
    def test_fix_code(self):test_fix_code22,564
    def _assert_format(self, src, expected):_assert_format30,805

elpa/elpy-20160613.1005/elpy/yapfutil.py,393
import osos5,38
import syssys6,48
from elpy.rpc import FaultFault8,60
YAPF_NOT_SUPPORTED = sys.version_info < (2, 7) or (YAPF_NOT_SUPPORTED10,88
        yapf_api = Noneyapf_api15,235
        from yapf.yapflib import yapf_apiyapf_api17,269
        from yapf.yapflib import file_resourcesfile_resources18,311
    yapf_api = Noneyapf_api20,399
def fix_code(code):fix_code23,421

elpa/elpy-20160613.1005/elpy-autoloads.el,0

elpa/elpy-20160613.1005/elpy-pkg.el,89
(define-package "elpy" "20160613.1005" "Emacs Python Development Environment""elpy"1,0

elpa/elpy-20160613.1005/elpy-refactor.el,993
(defvar elpy-refactor-changes nilelpy-refactor-changes31,1080
(defvar elpy-refactor-window-configuration nilelpy-refactor-window-configuration35,1239
(defun elpy-refactor ()elpy-refactor43,1548
(defun elpy-refactor-select (options)elpy-refactor-select55,1945
(defun elpy-refactor-build-arguments (args pos)elpy-refactor-build-arguments111,4331
(defun elpy-refactor-create-change-buffer (changes)elpy-refactor-create-change-buffer153,5818
(defun elpy-refactor-insert-changes (changes)elpy-refactor-insert-changes170,6455
(defvar elpy-refactor-mode-mapelpy-refactor-mode-map205,7951
(define-derived-mode elpy-refactor-mode diff-mode "Elpy Refactor"elpy-refactor-mode214,8266
(defun elpy-refactor-commit ()elpy-refactor-commit221,8469
(defun elpy-refactor-rpc-get-options ()elpy-refactor-rpc-get-options267,10467
(defun elpy-refactor-rpc-get-changes (method args)elpy-refactor-rpc-get-changes278,10867
(defun elpy-refactor-options (option)elpy-refactor-options284,11089

elpa/elpy-20160613.1005/elpy.el,17053
(defconst elpy-version "1.12.0"elpy-version49,1586
(defgroup elpy nilelpy55,1706
(defcustom elpy-mode-hook nilelpy-mode-hook60,1804
(defcustom elpy-modules '(elpy-module-sane-defaultselpy-modules68,2011
(defcustom elpy-project-ignored-directories ' (".bzr" "CVS" ".git" ".hg" ".svn"elpy-project-ignored-directories95,3293
(defcustom elpy-project-root nilelpy-project-root104,3666
(defcustom elpy-project-root-finder-functionselpy-project-root-finder-functions126,4416
(defcustom elpy-remove-modeline-lighter telpy-remove-modeline-lighter148,5396
(defcustom elpy-dedicated-shells nilelpy-dedicated-shells157,5709
(defcustom elpy-rpc-backend nilelpy-rpc-backend166,6016
(defcustom elpy-rpc-maximum-buffer-age (* 5 60)elpy-rpc-maximum-buffer-age181,6592
(defcustom elpy-rpc-large-buffer-size 4096elpy-rpc-large-buffer-size195,7140
(defcustom elpy-rpc-ignored-buffer-size 102400elpy-rpc-ignored-buffer-size206,7526
(defcustom elpy-rpc-python-command (if (equal system-type 'windows-nt)elpy-rpc-python-command217,7926
(defcustom elpy-rpc-pythonpath (file-name-directory (locate-library "elpy"))elpy-rpc-pythonpath233,8614
(defcustom elpy-rpc-timeout 1elpy-rpc-timeout243,8991
(defcustom elpy-rpc-error-timeout 30elpy-rpc-error-timeout259,9529
(defcustom elpy-company-post-completion-function 'ignoreelpy-company-post-completion-function272,9988
(defcustom elpy-eldoc-show-current-function telpy-eldoc-show-current-function288,10631
(defcustom elpy-test-runner 'elpy-test-discover-runnerelpy-test-runner297,10976
(defcustom elpy-test-discover-runner-command '("python" "-m" "unittest")elpy-test-discover-runner-command307,11458
(defcustom elpy-test-django-runner-command '("django-admin.py" "test"elpy-test-django-runner-command312,11629
(defcustom elpy-test-nose-runner-command '("nosetests")elpy-test-nose-runner-command318,11853
(defcustom elpy-test-trial-runner-command '("trial")elpy-test-trial-runner-command323,12003
(defcustom elpy-test-pytest-runner-command '("py.test")elpy-test-pytest-runner-command328,12151
(defcustom elpy-rgrep-file-pattern "*.py"elpy-rgrep-file-pattern333,12303
(defcustom elpy-disable-backend-error-display telpy-disable-backend-error-display338,12420
(defcustom elpy-syntax-check-command "flake8"elpy-syntax-check-command343,12559
(defvar elpy-refactor-mapelpy-refactor-map351,12708
(defvar elpy-mode-mapelpy-mode-map365,13397
(defun elpy-enable (&optional ignored)elpy-enable475,18291
(defun elpy-disable ()elpy-disable495,19204
(define-minor-mode elpy-modeelpy-mode502,19381
(defun elpy-news ()elpy-news523,19931
(defvar elpy-config--related-custom-groupselpy-config--related-custom-groups537,20335
(defvar elpy-config--get-config "import jsonelpy-config--get-config552,20918
(defun elpy-config-error (&optional fmt &rest args)elpy-config-error636,23296
(defun elpy-config ()elpy-config647,23662
(defun elpy-version ()elpy-version677,24625
(defun elpy-config--insert-help ()elpy-config--insert-help682,24768
(defun elpy-config--insert-configuration-problems (&optional config)elpy-config--insert-configuration-problems715,25978
(defun elpy-config--get-config ()elpy-config--get-config918,34230
(defun elpy-config--insert-configuration-table (&optional config)elpy-config--insert-configuration-table976,36523
(defun elpy-config--package-link (name version latest)elpy-config--package-link1078,41960
(defmacro elpy-insert--popup (buffer-name &rest body)elpy-insert--popup1097,42495
(defun elpy-insert--para (&rest messages)elpy-insert--para1104,42733
(defun elpy-insert--header (&rest text)elpy-insert--header1114,43026
(define-widget 'elpy-insert--pip-button 'itemelpy-insert--pip-button1123,43309
(defun elpy-insert--pip-button-value-create (widget)elpy-insert--pip-button-value-create1131,43566
(defun elpy-insert--pip-button-action (widget &optional event)elpy-insert--pip-button-action1162,44885
(defvar elpy-project--variable-name-history nilelpy-project--variable-name-history1169,45080
(defun elpy-project-root ()elpy-project-root1172,45188
(defun elpy-set-project-root (new-root)elpy-set-project-root1188,45714
(defun elpy-project-find-python-root ()elpy-project-find-python-root1193,45873
(defun elpy-project-find-git-root ()elpy-project-find-git-root1200,46133
(defun elpy-project-find-hg-root ()elpy-project-find-hg-root1204,46276
(defun elpy-project-find-svn-root ()elpy-project-find-svn-root1208,46417
(defun elpy-project-find-projectile-root ()elpy-project-find-projectile-root1216,46818
(defun elpy-library-root ()elpy-library-root1223,47106
(defun elpy-project--read-project-variable (prompt)elpy-project--read-project-variable1234,47570
(defun elpy-project--read-variable-value (prompt variable)elpy-project--read-variable-value1252,48189
(defun elpy-set-project-variable (variable value)elpy-set-project-variable1268,48896
(defun elpy-rgrep-symbol (regexp)elpy-rgrep-symbol1296,50100
(defun elpy-find-file (&optional dwim)elpy-find-file1335,51419
(defun elpy-find--test-file ()elpy-find--test-file1385,53466
(defun elpy-find--module-path (module)elpy-find--module-path1415,54829
(defun elpy-find--resolve-module (module)elpy-find--resolve-module1443,56110
(defun elpy-use-ipython (&optional ipython)elpy-use-ipython1463,56802
(defun elpy-use-cpython (&optional cpython)elpy-use-cpython1507,58724
(defun elpy-shell-display-buffer ()elpy-shell-display-buffer1559,60570
(defun elpy-shell-send-region-or-buffer (&optional arg)elpy-shell-send-region-or-buffer1565,60772
(defun elpy-shell-send-current-statement ()elpy-shell-send-current-statement1596,62079
(defun elpy-shell-switch-to-shell ()elpy-shell-switch-to-shell1606,62441
(defun elpy-shell-switch-to-buffer ()elpy-shell-switch-to-buffer1611,62612
(defun elpy-shell-get-or-create-process ()elpy-shell-get-or-create-process1616,62792
(defun elpy-shell--region-without-indentation (beg end)elpy-shell--region-without-indentation1634,63488
(defun elpy-check (&optional whole-project-p)elpy-check1663,64481
(defvar elpy-nav-expand--initial-position nilelpy-nav-expand--initial-position1699,66020
(defun elpy-goto-definition ()elpy-goto-definition1703,66186
(defun elpy-goto-definition-other-window ()elpy-goto-definition-other-window1711,66455
(defun elpy-goto-location (filename offset &optional other-window-p)elpy-goto-location1719,66767
(defun elpy-nav-forward-block ()elpy-nav-forward-block1731,67176
(defun elpy-nav-backward-block ()elpy-nav-backward-block1755,67936
(defun elpy-nav-forward-indent ()elpy-nav-forward-indent1779,68702
(defun elpy-nav-backward-indent ()elpy-nav-backward-indent1793,69205
(defun elpy-nav-move-line-or-region-down (&optional beg end)elpy-nav-move-line-or-region-down1805,69662
(defun elpy-nav-move-line-or-region-up (&optional beg end)elpy-nav-move-line-or-region-up1812,69906
(defun elpy--nav-move-line-vertically (dir)elpy--nav-move-line-vertically1819,70150
(defun elpy--nav-move-region-vertically (beg end dir)elpy--nav-move-region-vertically1829,70444
(defun elpy-open-and-indent-line-below ()elpy-open-and-indent-line-below1852,71157
(defun elpy-open-and-indent-line-above ()elpy-open-and-indent-line-above1858,71326
(defun elpy-nav-expand-to-indentation ()elpy-nav-expand-to-indentation1866,71544
(defadvice keyboard-quit (before collapse-region activate)keyboard-quit1881,72044
(defun elpy-nav-normalize-region ()elpy-nav-normalize-region1885,72214
(defun elpy-nav-indent-shift-right (&optional count)elpy-nav-indent-shift-right1896,72561
(defun elpy-nav-indent-shift-left (&optional count)elpy-nav-indent-shift-left1908,73038
(defvar elpy-set-test-runner-history nilelpy-set-test-runner-history1924,73547
(defun elpy-test (&optional test-whole-project)elpy-test1927,73639
(defun elpy-set-test-runner (test-runner)elpy-set-test-runner1942,74186
(defun elpy-test-at-point ()elpy-test-at-point1967,75279
(defun elpy-test--current-test-name ()elpy-test--current-test-name2002,76363
(defun elpy-test--module-name-for-file (top-level module-file)elpy-test--module-name-for-file2009,76571
(defun elpy-test-runner-p (obj)elpy-test-runner-p2023,77260
(defun elpy-test-run (working-directory command &rest args)elpy-test-run2029,77418
(defun elpy-test-discover-runner (top file module test)elpy-test-discover-runner2036,77715
(defun elpy-test-django-runner (top file module test)elpy-test-django-runner2051,78229
(defun elpy-test-nose-runner (top file module test)elpy-test-nose-runner2068,78830
(defun elpy-test-trial-runner (top file module test)elpy-test-trial-runner2085,79401
(defun elpy-test-pytest-runner (top file module test)elpy-test-pytest-runner2100,79969
(defvar elpy-doc-history nilelpy-doc-history2124,80786
(defun elpy-doc ()elpy-doc2127,80857
(defun elpy-doc--read-identifier-from-minibuffer (initial)elpy-doc--read-identifier-from-minibuffer2157,81907
(defun elpy-doc--show (documentation)elpy-doc--show2163,82188
(defun elpy-doc--symbol-at-point ()elpy-doc--symbol-at-point2175,82627
(defun elpy-buffer--replace-block (spec)elpy-buffer--replace-block2186,82916
(defun elpy-buffer--replace-region (beg end rep)elpy-buffer--replace-region2203,83563
(defun elpy-importmagic--add-import-read-args (&optional object prompt)elpy-importmagic--add-import-read-args2215,83870
(defun elpy-importmagic-add-import (statement)elpy-importmagic-add-import2239,85202
(defun elpy-importmagic-fixup ()elpy-importmagic-fixup2248,85658
(defun elpy-format-code ()elpy-format-code2271,86724
(defun elpy-yapf-fix-code ()elpy-yapf-fix-code2282,87004
(defun elpy-autopep8-fix-code ()elpy-autopep8-fix-code2287,87155
(defun elpy--fix-code-with-formatter (method)elpy--fix-code-with-formatter2292,87326
(defvar elpy-multiedit-overlays nilelpy-multiedit-overlays2315,88217
(defun elpy-multiedit-add-overlay (beg end)elpy-multiedit-add-overlay2318,88300
(defun elpy-multiedit--overlays-in-p (beg end)elpy-multiedit--overlays-in-p2334,89010
(defun elpy-multiedit-stop ()elpy-multiedit-stop2342,89264
(defun elpy-multiedit--overlay-changed (ov after-change beg endelpy-multiedit--overlay-changed2349,89455
(defun elpy-multiedit ()elpy-multiedit2369,90300
(defun elpy-multiedit-python-symbol-at-point (&optional use-symbol-p)elpy-multiedit-python-symbol-at-point2389,91104
(defun elpy-multiedit--usages (usages)elpy-multiedit--usages2432,93003
(defun elpy-occur-definitions ()elpy-occur-definitions2496,95848
(defvar elpy-promise-marker (make-symbol "*elpy-promise*")elpy-promise-marker2511,96248
(defun elpy-promise (success &optional error)elpy-promise2514,96366
(defun elpy-promise-p (obj)elpy-promise-p2533,97097
(defsubst elpy-promise-success-callback (promise)elpy-promise-success-callback2539,97276
(defsubst elpy-promise-error-callback (promise)elpy-promise-error-callback2543,97392
(defsubst elpy-promise-buffer (promise)elpy-promise-buffer2547,97504
(defsubst elpy-promise-resolved-p (promise)elpy-promise-resolved-p2551,97600
(defsubst elpy-promise-set-resolved (promise)elpy-promise-set-resolved2555,97730
(defun elpy-promise-resolve (promise value)elpy-promise-resolve2559,97841
(defun elpy-promise-reject (promise reason)elpy-promise-reject2572,98363
(defun elpy-promise-wait (promise &optional timeout)elpy-promise-wait2585,98924
(defvar elpy-rpc--call-id 0elpy-rpc--call-id2614,100073
(defvar elpy-rpc--buffer-p nilelpy-rpc--buffer-p2620,100233
(defvar elpy-rpc--buffer nilelpy-rpc--buffer2624,100370
(defvar elpy-rpc--backend-library-root nilelpy-rpc--backend-library-root2628,100501
(defvar elpy-rpc--backend-python-command nilelpy-rpc--backend-python-command2632,100650
(defvar elpy-rpc--backend-callbacks nilelpy-rpc--backend-callbacks2636,100809
(defvar elpy-rpc--last-call nilelpy-rpc--last-call2642,101006
(defvar elpy-rpc--last-error-popup nilelpy-rpc--last-error-popup2646,101149
(defun elpy-rpc (method params &optional success error)elpy-rpc2649,101233
(defun elpy-rpc--call-blocking (method-name params)elpy-rpc--call-blocking2661,101669
(defun elpy-rpc--call (method-name params success error)elpy-rpc--call2686,102613
(defun elpy-rpc--register-callback (call-id promise)elpy-rpc--register-callback2707,103442
(defun elpy-rpc--get-rpc-buffer ()elpy-rpc--get-rpc-buffer2717,103843
(defun elpy-rpc--process-buffer-p (buffer)elpy-rpc--process-buffer-p2728,104302
(defun elpy-rpc--find-buffer (library-root python-command)elpy-rpc--find-buffer2749,104896
(defun elpy-rpc--open (library-root python-command)elpy-rpc--open2764,105585
(defun elpy-rpc--cleanup-buffers ()elpy-rpc--cleanup-buffers2809,107792
(defun elpy-rpc--sentinel (process event)elpy-rpc--sentinel2824,108379
(defun elpy-rpc--filter (process output)elpy-rpc--filter2842,109093
(defun elpy-rpc--check-backend-version (rpc-version)elpy-rpc--check-backend-version2887,110887
(defun elpy-rpc--handle-unexpected-line (line)elpy-rpc--handle-unexpected-line2901,111486
(defun elpy-rpc--handle-json (json)elpy-rpc--handle-json2920,112207
(defun elpy-rpc--default-error-callback (error-object)elpy-rpc--default-error-callback2933,112771
(defun elpy-rpc--environment ()elpy-rpc--environment3044,117763
(defun elpy-rpc--buffer-contents ()elpy-rpc--buffer-contents3061,118519
(defun elpy-rpc--region-contents ()elpy-rpc--region-contents3075,119020
(defun elpy-rpc--disconnect ()elpy-rpc--disconnect3080,119181
(defun elpy-rpc-restart ()elpy-rpc-restart3089,119426
(defun elpy-rpc-init (backend library-root &optional success error)elpy-rpc-init3099,119707
(defun elpy-rpc-get-calltip (&optional success error)elpy-rpc-get-calltip3112,120232
(defun elpy-rpc-get-completions (&optional success error)elpy-rpc-get-completions3124,120651
(defun elpy-rpc-get-completion-docstring (completion &optional success error)elpy-rpc-get-completion-docstring3137,121096
(defun elpy-rpc-get-completion-location (completion &optional success error)elpy-rpc-get-completion-location3143,121329
(defun elpy-rpc-get-definition (&optional success error)elpy-rpc-get-definition3149,121583
(defun elpy-rpc-get-docstring (&optional success error)elpy-rpc-get-docstring3160,121931
(defun elpy-rpc-get-pydoc-completions (prefix &optional success error)elpy-rpc-get-pydoc-completions3171,122296
(defun elpy-rpc-get-pydoc-documentation (symbol &optional success error)elpy-rpc-get-pydoc-documentation3176,122516
(defun elpy-rpc-get-usages (&optional success error)elpy-rpc-get-usages3183,122756
(defvar elpy-modules-initialized-p nilelpy-modules-initialized-p3194,123033
(defun elpy-modules-run (command &rest args)elpy-modules-run3197,123139
(defun elpy-modules-global-init ()elpy-modules-global-init3202,123312
(defun elpy-modules-global-stop ()elpy-modules-global-stop3210,123550
(defun elpy-modules-buffer-init ()elpy-modules-buffer-init3218,123805
(defun elpy-modules-buffer-stop ()elpy-modules-buffer-stop3225,123993
(defun elpy-modules-remove-modeline-lighter (mode-name)elpy-modules-remove-modeline-lighter3229,124112
(defun elpy-module-sane-defaults (command &rest args)elpy-module-sane-defaults3252,124717
(defun elpy-module-company (command &rest args)elpy-module-company3267,125263
(defvar elpy-company--cache nilelpy-company--cache3301,126581
(defun elpy-company--cache-clear ()elpy-company--cache-clear3305,126715
(defun elpy-company--cache-annotation (name)elpy-company--cache-annotation3312,126925
(defun elpy-company--cache-meta (name)elpy-company--cache-meta3317,127108
(defun elpy-company--cache-name (name)elpy-company--cache-name3322,127279
(defun elpy-company--cache-completions (prefix result)elpy-company--cache-completions3330,127561
(defun elpy-company--python-exception-p (name)elpy-company--python-exception-p3340,127951
(defun elpy-company-post-complete-parens (annotation name)elpy-company-post-complete-parens3405,130160
(defun elpy-company-backend (command &optional arg &rest ignored)elpy-company-backend3439,131696
(defun elpy--sort-and-strip-duplicates (seq)elpy--sort-and-strip-duplicates3515,134606
(defun elpy-module-eldoc (command &rest args)elpy-module-eldoc3524,134804
(defun elpy-eldoc-documentation ()elpy-eldoc-documentation3538,135232
(defun elpy-module-flymake (command &rest args)elpy-module-flymake3579,136754
(defun elpy-flymake-python-init ()elpy-flymake-python-init3625,138744
(defun elpy-flymake-next-error ()elpy-flymake-next-error3635,139155
(defun elpy-flymake-previous-error ()elpy-flymake-previous-error3642,139330
(defun elpy-flymake-show-error ()elpy-flymake-show-error3649,139514
(defun elpy-flymake-error-at-point ()elpy-flymake-error-at-point3656,139727
(defun elpy-flymake--standard-value (var)elpy-flymake--standard-value3667,140148
(defun elpy-module-highlight-indentation (command &rest args)elpy-module-highlight-indentation3677,140423
(defun elpy-module-pyvenv (command &rest args)elpy-module-pyvenv3690,140765
(defun elpy-module-yasnippet (command &rest args)elpy-module-yasnippet3701,141021

elpa/elpy-20160613.1005/snippets/python-mode/.yas-setup.el,392
(defun elpy-snippet-split-args (arg-string)elpy-snippet-split-args1,0
(defun elpy-snippet-current-method-and-args ()elpy-snippet-current-method-and-args7,262
(defun elpy-snippet-init-assignments (arg-string)elpy-snippet-init-assignments33,1288
(defun elpy-snippet-super-form ()elpy-snippet-super-form49,1949
(defun elpy-snippet-super-arguments ()elpy-snippet-super-arguments64,2643

elpa/epl-20150517.433/epl-autoloads.el,0

elpa/epl-20150517.433/epl-pkg.el,151
(define-package "epl" "20150517.433" "Emacs Package Library" '((cl-lib "0.3")) :url "http://github.com/cask/epl" :keywords '("convenience"))"epl"1,0

elpa/epl-20150517.433/epl.el,3820
(defsubst epl--package-desc-p (package)epl--package-desc-p145,4954
(define-error 'epl-error "EPL error")epl-error154,5208
(define-error 'epl-invalid-package "Invalid EPL package" 'epl-error)epl-invalid-package156,5247
(define-error 'epl-invalid-package-file "Invalid EPL package file"epl-invalid-package-file158,5317
(defun epl-package-dir ()epl-package-dir163,5433
(defun epl-default-package-dir ()epl-default-package-dir167,5515
(defun epl-change-package-dir (directory)epl-change-package-dir171,5649
(defvar epl--load-path-before-initialize nilepl--load-path-before-initialize178,5831
(defun epl-initialize (&optional no-activate)epl-initialize181,5922
(defalias 'epl-refresh 'package-refresh-contents)epl-refresh188,6158
(defun epl-add-archive (name url)epl-add-archive190,6209
(defun epl-reset ()epl-reset194,6340
(defun epl-requirement-version-string (requirement)epl-requirement-version-string221,7099
(defmacro epl-package-as-description (var &rest body)epl-package-as-description244,7770
(defsubst epl-package--package-desc-p (package)epl-package--package-desc-p258,8290
(defun epl-package-version (package)epl-package-version262,8458
(defun epl-package-version-string (package)epl-package-version-string273,8890
(defun epl-package-summary (package)epl-package-summary277,9038
(defsubst epl-requirement--from-req (req)epl-requirement--from-req285,9369
(defun epl-package-requirements (package)epl-package-requirements292,9679
(defun epl-package-directory (package)epl-package-directory299,9927
(defun epl-package-->= (pkg1 pkg2)epl-package-->=312,10429
(defun epl-package--from-package-desc (package-desc)epl-package--from-package-desc317,10622
(defun epl-package--parse-info (info)epl-package--parse-info328,11082
(defun epl-package-from-buffer (&optional buffer)epl-package-from-buffer340,11646
(defun epl-package-from-lisp-file (file-name)epl-package-from-lisp-file353,12117
(defun epl-package-from-tar-file (file-name)epl-package-from-tar-file367,12633
(defun epl-package-from-file (file-name)epl-package-from-file392,13890
(defun epl-package--parse-descriptor-requirement (requirement)epl-package--parse-descriptor-requirement401,14193
(defun epl-package-from-descriptor-file (descriptor-file)epl-package-from-descriptor-file408,14542
(defun epl-package-installed-p (package)epl-package-installed-p442,16072
(defun epl--parse-built-in-entry (entry)epl--parse-built-in-entry453,16479
(defun epl-built-in-packages ()epl-built-in-packages463,16934
(defun epl-find-built-in-package (name)epl-find-built-in-package473,17300
(defun epl-package-outdated-p (package)epl-package-outdated-p486,17768
(defun epl--parse-package-list-entry (entry)epl--parse-package-list-entry507,18670
(defun epl-installed-packages ()epl-installed-packages528,19530
(defsubst epl--filter-outdated-packages (packages)epl--filter-outdated-packages534,19706
(defun epl-outdated-packages ()epl-outdated-packages542,19941
(defsubst epl--find-package-in-list (name list)epl--find-package-in-list548,20132
(defun epl-find-installed-package (name)epl-find-installed-package556,20379
(defun epl-find-installed-packages (name)epl-find-installed-packages567,20760
(defun epl-available-packages ()epl-available-packages577,21077
(defun epl-find-available-packages (name)epl-find-available-packages584,21307
(defun epl-find-upgrades (&optional packages)epl-find-upgrades605,21872
(defalias 'epl-built-in-p 'package-built-in-p)epl-built-in-p628,22816
(defalias 'epl-install-file 'package-install-file)epl-install-file633,22890
(defun epl-package-install (package &optional force)epl-package-install635,22942
(defun epl-package-delete (package)epl-package-delete647,23449
(defun epl-upgrade (&optional packages preserve-obsolete)epl-upgrade675,24899

elpa/eproject-20151205.2130/eproject-android.el,52
(define-project-type android (generic)android4,67

elpa/eproject-20151205.2130/eproject-anything.el,304
(defvar anything-c-source-eproject-filesanything-c-source-eproject-files34,1123
(defvar anything-c-source-eproject-buffersanything-c-source-eproject-buffers47,1698
(defun anything-eproject-files ()anything-eproject-files63,2428
(defun anything-eproject-buffers ()anything-eproject-buffers72,2717

elpa/eproject-20151205.2130/eproject-arduino.el,52
(define-project-type arduino (generic)arduino4,67

elpa/eproject-20151205.2130/eproject-autoloads.el,824
(defvar anything-c-source-eproject-files '((name . "Files in eProject") (init lambda nil (if (buffer-file-name) (setq anything-eproject-root-dir (eproject-maybe-turn-on)) (setq anything-eproject-root-dir 'nil))) (candidates lambda nil (if anything-eproject-root-dir (eproject-list-project-files anything-eproject-root-dir))) (type . file)) "\anything-c-source-eproject-files10,293
(defvar anything-c-source-eproject-buffers '((name . "Buffers in this eProject") (init lambda nil (if (buffer-file-name) (setq anything-eproject-root-dir (eproject-maybe-turn-on)) (setq anything-eproject-root-dir 'nil))) (candidates lambda nil (if anything-eproject-root-dir (mapcar 'buffer-name (cdr (assoc anything-eproject-root-dir (eproject--project-buffers)))))) (volatile) (type . buffer)) "\anything-c-source-eproject-buffers13,681

elpa/eproject-20151205.2130/eproject-clojure-leiningen.el,72
(define-project-type clojure-leiningen (generic)clojure-leiningen4,68

elpa/eproject-20151205.2130/eproject-compile.el,320
(defun* eproject--build-new-history (&optional (buffer (current-buffer)))eproject--build-new-history47,1508
(defun eproject-compile ()eproject-compile61,2003
(defun eproject-compile-repeat ()eproject-compile-repeat78,2613
(define-key eproject-mode-map (kbd "C-c C-k") #'eproject-compile)eproject-mode-map85,2827

elpa/eproject-20151205.2130/eproject-extras.el,3459
(defalias 'eproject-ifind-file 'eproject-find-file)  ;; ifind is deperecatedeproject-ifind-file40,1267
(defun eproject--shorten-filename (filename)eproject--shorten-filename42,1345
(defun eproject-find-file ()eproject-find-file54,1787
(defun eproject--completing-read (prompt choices)eproject--completing-read62,2106
(defun eproject--icompleting-read (prompt choices)eproject--icompleting-read66,2248
(defun eproject--ido-completing-read (prompt choices)eproject--ido-completing-read79,2749
(defcustom eproject-completing-read-functioneproject-completing-read-function83,2887
(defun eproject--do-completing-read (&rest args)eproject--do-completing-read96,3518
(defun eproject--icomplete-read-with-alist (prompt alist)eproject--icomplete-read-with-alist100,3694
(defun eproject--project-buffers ()eproject--project-buffers105,3889
(defun* eproject--get-name-root-alist (&key live-only)eproject--get-name-root-alist119,4449
(defun* eproject--read-project-name (&key live-only)eproject--read-project-name130,4792
(defun* eproject--handle-root-prefix-arg (prefix &key live-only)eproject--handle-root-prefix-arg134,4960
(defun eproject--generic-switch-to-buffer (prefix switch-func)eproject--generic-switch-to-buffer139,5124
(defun eproject-switch-to-buffer (&optional prefix)eproject-switch-to-buffer153,5637
(defun eproject-switch-to-buffer-other-window (&optional prefix)eproject-switch-to-buffer-other-window161,5909
(defun eproject-switch-to-buffer-other-frame (&optional prefix)eproject-switch-to-buffer-other-frame169,6224
(define-ibuffer-filter eproject-rooteproject-root178,6541
(define-ibuffer-filter eprojecteproject186,6889
(define-ibuffer-column eproject (:name "Project" :inline t)eproject194,7190
(defun eproject-ibuffer (prefix)eproject-ibuffer198,7301
(defun eproject--ibuffer-byname (project-name)eproject--ibuffer-byname206,7641
(defmacro* with-each-buffer-in-projectwith-each-buffer-in-project216,8019
(defun eproject-kill-project-buffers (prefix)eproject-kill-project-buffers230,8575
(defun eproject-open-all-project-files (prefix)eproject-open-all-project-files240,8923
(defun eproject-project-root (project)eproject-project-root256,9450
(defun eproject-revisit-project (prefix)eproject-revisit-project262,9647
(defun eproject-grep (regexp)eproject-grep277,10157
(defcustom eproject-todo-expressionseproject-todo-expressions286,10493
(defun eproject-todo ()eproject-todo293,10711
(defun eproject-multi-isearch-buffers ()eproject-multi-isearch-buffers302,11019
(defun eproject-eshell-cd-here (&optional look-in-invisible-buffers)eproject-eshell-cd-here312,11357
(defun eproject-current-working-directory ()eproject-current-working-directory340,12708
(define-key eproject-mode-map (read-kbd-macro (concat eproject-keybind-prefix " C-f")) #'eproject-find-file)eproject-mode-map352,13219
(define-key eproject-mode-map (read-kbd-macro (concat eproject-keybind-prefix " C-b")) #'eproject-ibuffer)eproject-mode-map353,13328
(define-key eproject-mode-map (read-kbd-macro (concat eproject-keybind-prefix " b")) #'eproject-switch-to-buffer)eproject-mode-map354,13435
(define-key eproject-mode-map (read-kbd-macro (concat eproject-keybind-prefix " 4 b")) #'eproject-switch-to-buffer-other-window)eproject-mode-map355,13549
(define-key eproject-mode-map (read-kbd-macro (concat eproject-keybind-prefix " 5 b")) #'eproject-switch-to-buffer-other-frame)eproject-mode-map356,13678

elpa/eproject-20151205.2130/eproject-javascript-bower.el,70
(define-project-type javascript-bower (generic)javascript-bower4,67

elpa/eproject-20151205.2130/eproject-javascript-grunt.el,70
(define-project-type javascript-grunt (generic)javascript-grunt4,67

elpa/eproject-20151205.2130/eproject-javascript-npm.el,66
(define-project-type javascript-npm (generic)javascript-npm4,65

elpa/eproject-20151205.2130/eproject-perl.el,335
(define-project-type perl (generic)perl3,44
(defun cperl-xs-project-p ()cperl-xs-project-p20,844
(defun cperl--tests ()cperl--tests24,980
(defun cperl--base-find-tests (find-function)cperl--base-find-tests28,1068
(defun cperl-find-tests ()cperl-find-tests31,1157
(defun perl-project-includes ()perl-project-includes36,1293

elpa/eproject-20151205.2130/eproject-php-composer.el,62
(define-project-type php-composer (generic)php-composer4,63

elpa/eproject-20151205.2130/eproject-pkg.el,102
(define-package "eproject" "20151205.2130" "assign files to projects, programatically""eproject"1,0

elpa/eproject-20151205.2130/eproject-python.el,391
(define-project-type python (generic)python6,112
(defvar eproject-python-doc-dirs '("doc" "docs" "Doc" "Docs"))eproject-python-doc-dirs21,692
(defvar eproject-python-doc-makefiles '("Makefile" "make.py"))eproject-python-doc-makefiles22,755
(defun eproject-python--find-doc ()eproject-python--find-doc24,819
(defun eproject-python--doc-compile ()eproject-python--doc-compile32,1196

elpa/eproject-20151205.2130/eproject-ruby-on-rails.el,64
(define-project-type ruby-on-rails (generic)ruby-on-rails4,73

elpa/eproject-20151205.2130/eproject-ruby.el,46
(define-project-type ruby (generic)ruby3,48

elpa/eproject-20151205.2130/eproject-tags.el,803
(defvar eproject-tags-etags "etags"eproject-tags-etags32,961
(defvar eproject-tags-verbose teproject-tags-verbose38,1145
(defvar eproject-tags-callback nil)eproject-tags-callback43,1350
(defvar eproject-tags-state nil)eproject-tags-state44,1386
(defun eproject-tags--buffer (root)eproject-tags--buffer48,1523
(defun eproject-tags--debug-message (root format &rest rest)eproject-tags--debug-message53,1693
(defun eproject-tags--generate (cb &optional state root)eproject-tags--generate60,1951
(defun eproject-tags--sentinel (process event)eproject-tags--sentinel81,2878
(defun eproject-tags (&optional root)eproject-tags94,3404
(defun eproject-tags--visit-table (root &rest state)eproject-tags--visit-table101,3657
(defun eproject-tags--from-hook ()eproject-tags--from-hook108,3967

elpa/eproject-20151205.2130/eproject-tasks.el,1656
(defvar eproject-tasks-sourceseproject-tasks-sources35,1012
(defun eproject-tasks-available-p (task)eproject-tasks-available-p63,1883
(defun eproject-tasks-process-task-source (task-source)eproject-tasks-process-task-source70,2119
(defun eproject-tasks-get (&optional sources)eproject-tasks-get77,2362
(defvar eproject-tasks-source-attributeeproject-tasks-source-attribute85,2609
(defun eproject-tasks-source-attribute-generate ()eproject-tasks-source-attribute-generate89,2724
(defvar eproject-tasks-source-metadataeproject-tasks-source-metadata92,2807
(defun eproject-tasks-source-metadata-generate ()eproject-tasks-source-metadata-generate96,2919
(defvar eproject-tasks-source-compileeproject-tasks-source-compile99,3029
(defun eproject-tasks-source-compile-generate ()eproject-tasks-source-compile-generate103,3138
(defvar eproject-tasks-source-patheproject-tasks-source-path109,3356
(defvar eproject-tasks-source-path-alist nileproject-tasks-source-path-alist113,3465
(defun eproject-tasks-source-path-generate ()eproject-tasks-source-path-generate118,3649
(defun eproject-tasks-run (task)eproject-tasks-run129,3976
(defun eproject-tasks--run-shell (shell)eproject-tasks--run-shell148,4731
(defun eproject-tasks-read ()eproject-tasks-read153,4892
(defvar eproject-tasks--current-buffer nileproject-tasks--current-buffer167,5323
(defun eproject-tasks-helm-candidates (sources)eproject-tasks-helm-candidates171,5490
(defun eproject-tasks-helm-sources ()eproject-tasks-helm-sources176,5688
(defun helm-eproject-tasks ()helm-eproject-tasks189,6191
(defun anything-eproject-tasks ()anything-eproject-tasks195,6400

elpa/eproject-20151205.2130/eproject.el,4834
(defgroup eproject nileproject217,7611
(defcustom eproject-keybind-prefixeproject-keybind-prefix225,7976
(defvar eproject-root nileproject-root231,8092
(defvar eproject-project-types nileproject-project-types240,8443
(defvar eproject-extra-attributes nileproject-extra-attributes243,8561
(defvar eproject-attributes-alist nileproject-attributes-alist260,9130
(defvar eproject-first-buffer-hook nileproject-first-buffer-hook263,9229
(defvar eproject-projects-hook nileproject-projects-hook268,9422
(defvar eproject-project-change-hook nileproject-project-change-hook271,9609
(defun define-project-attribute (key attributes)define-project-attribute274,9757
(defmacro define-project-type (type supertypes selector &rest metadata)define-project-type283,10079
(defun eproject--build-parent-candidates (start-at)eproject--build-parent-candidates301,10878
(defun eproject--scan-parents-for (start-at predicate)eproject--scan-parents-for309,11321
(defun eproject--find-file-named (start-at filename)eproject--find-file-named314,11624
(define-project-type generic () nilgeneric321,12081
(define-project-type generic-eproject (generic) (look-for ".eproject"))generic-eproject328,12326
(define-project-type generic-git (generic) (look-for ".git")generic-git330,12399
(define-project-type generic-hg (generic) (look-for ".hg")generic-hg333,12506
(define-project-type generic-bzr (generic) (look-for ".bzr")generic-bzr336,12610
(define-project-type generic-darcs (generic) (look-for "_darcs")generic-darcs339,12717
(defun eproject--type-info (type)eproject--type-info342,12830
(defun eproject--project-supertypes (type)eproject--project-supertypes347,12941
(defun eproject--project-selector (type)eproject--project-selector350,13023
(defun* eproject--look-for-impl (file expression &optional (type :filename))eproject--look-for-impl353,13103
(defun eproject--buffer-file-name ()eproject--buffer-file-name370,13943
(defun* eproject--run-project-selector (type &optional (file (eproject--buffer-file-name)))eproject--run-project-selector376,14261
(defun eproject--linearized-isa (type &optional include-self)eproject--linearized-isa384,14680
(defun eproject--all-types ()eproject--all-types392,14962
(defun eproject--compute-all-applicable-metadata (type)eproject--compute-all-applicable-metadata400,15283
(defun eproject-get-project-metadatum (type key)eproject-get-project-metadatum404,15456
(defun eproject-add-project-metadatum (type key value)eproject-add-project-metadatum407,15569
(defmacro* eproject--do-in-buffer ((buffer) &body forms)eproject--do-in-buffer410,15696
(defun* eproject-root (&optional (buffer (current-buffer)))eproject-root416,15884
(defun* eproject-attribute (key &optional (root (eproject-root)))eproject-attribute421,16086
(defun eproject--known-project-roots ()eproject--known-project-roots426,16315
(defmacro define-eproject-accessor (variable)define-eproject-accessor430,16499
(define-eproject-accessor type)type438,16957
(define-eproject-accessor name)name439,16989
(defun eproject-reinitialize-project ()eproject-reinitialize-project441,17022
(defun eproject--maybe-reinitialize ()eproject--maybe-reinitialize453,17516
(defun eproject--eval-user-data (project-name root)eproject--eval-user-data459,17787
(defun eproject--interpret-metadata (data root)eproject--interpret-metadata475,18497
(defun eproject--init-attributes (root type)eproject--init-attributes482,18744
(defvar eproject-mode-map (make-sparse-keymap)eproject-mode-map540,21429
(define-minor-mode eproject-modeeproject-mode543,21517
(defun eproject-maybe-turn-on ()eproject-maybe-turn-on549,21773
(defun eproject--setup-local-variables ()eproject--setup-local-variables598,23947
(defun eproject--search-directory-tree (directory file-regexp ignore-regexp)eproject--search-directory-tree610,24563
(defun eproject-assert-type (type)eproject-assert-type626,25351
(defun eproject--combine-regexps (regexp-list)eproject--combine-regexps632,25624
(defun eproject--file-check-regexps (root)eproject--file-check-regexps640,25971
(defun* eproject-classify-file (file &optional (root (eproject-root)))eproject-classify-file650,26419
(defun* eproject-list-project-files (&optional (root (eproject-root)))eproject-list-project-files663,26968
(defun* eproject-list-project-files-relative (&optional (root (eproject-root)))eproject-list-project-files-relative668,27233
(define-derived-mode dot-eproject-mode emacs-lisp-mode "dot-eproject"dot-eproject-mode675,27453
(defun eproject-projects ()eproject-projects680,27715
(defun eproject-project-names ()eproject-project-names693,28276
(defun eproject--after-change-major-mode-hook ()eproject--after-change-major-mode-hook698,28415
(defun eproject--after-save-hook ()eproject--after-save-hook703,28562

elpa/eproject-20151205.2130/helm-eproject.el,170
(defvar helm-eproject-sourcehelm-eproject-source61,2014
(defun helm-eproject ()helm-eproject73,2453
(defun eproject-helm-configure ()eproject-helm-configure79,2617

elpa/etags-select-20130824.500/etags-select-autoloads.el,671
(defvar etags-select-no-select-for-one-match t "\etags-select-no-select-for-one-match12,446
(defvar etags-select-mode-hook nil "\etags-select-mode-hook18,653
(defvar etags-select-highlight-tag-after-jump t "\etags-select-highlight-tag-after-jump23,817
(defvar etags-select-highlight-delay 1.0 "\etags-select-highlight-delay28,1011
(defface etags-select-highlight-tag-face '((t (:foreground "white" :background "cadetblue4" :bold t))) "\etags-select-highlight-tag-face33,1156
(defvar etags-select-use-short-name-completion nil "\etags-select-use-short-name-completion36,1342
(defvar etags-select-go-if-unambiguous nil "\etags-select-go-if-unambiguous48,1877

elpa/etags-select-20130824.500/etags-select-pkg.el,142
(define-package "etags-select" "20130824.500" "Select from multiple tags" 'nil :keywords '("etags" "tags" "tag" "select"))"etags-select"1,0

elpa/etags-select-20130824.500/etags-select.el,2861
(defgroup etags-select-mode niletags-select-mode88,3163
(defcustom etags-select-no-select-for-one-match tetags-select-no-select-for-one-match93,3252
(defcustom etags-select-mode-hook niletags-select-mode-hook100,3448
(defcustom etags-select-highlight-tag-after-jump tetags-select-highlight-tag-after-jump106,3612
(defcustom etags-select-highlight-delay 1.0etags-select-highlight-delay112,3794
(defface etags-select-highlight-tag-faceetags-select-highlight-tag-face118,3935
(defcustom etags-select-use-short-name-completion niletags-select-use-short-name-completion124,4133
(defcustom etags-select-go-if-unambiguous niletags-select-go-if-unambiguous137,4655
(defvar etags-select-buffer-name "*etags-select*"etags-select-buffer-name144,4822
(defvar etags-select-mode-font-lock-keywords niletags-select-mode-font-lock-keywords147,4904
(defvar etags-select-source-buffer niletags-select-source-buffer150,4992
(defvar etags-select-opened-window niletags-select-opened-window153,5084
(defconst etags-select-non-tag-regexp "\\(\\s-*$\\|In:\\|Finding tag:\\)"etags-select-non-tag-regexp156,5166
(defvar etags-select-use-xemacs-etags-p (fboundp 'get-tag-table-buffer)etags-select-use-xemacs-etags-p167,5532
(defun etags-select-case-fold-search ()etags-select-case-fold-search170,5628
(defun etags-select-insert-matches (tagname tag-file tag-count)etags-select-insert-matches177,5837
(defun etags-select-get-tag-table-buffer (tag-file)etags-select-get-tag-table-buffer214,7542
(defun etags-select-find-tag-at-point ()etags-select-find-tag-at-point222,7799
(defun etags-select-find-tag ()etags-select-find-tag230,8080
(defun etags-select-complete-tag (string predicate what)etags-select-complete-tag242,8592
(defun etags-select-build-completion-table ()etags-select-build-completion-table249,8881
(defun etags-select-get-tag-files ()etags-select-get-tag-files256,9167
(defun etags-select-get-completion-table ()etags-select-get-completion-table262,9347
(defun etags-select-tags-completion-table-function ()etags-select-tags-completion-table-function268,9521
(defun etags-select-find (tagname)etags-select-find291,10542
(defun etags-select-goto-tag (&optional arg other-window)etags-select-goto-tag324,11869
(defun etags-select-highlight (beg end)etags-select-highlight373,14069
(defun etags-select-goto-tag-other-window (&optional arg)etags-select-goto-tag-other-window385,14545
(defun etags-select-next-tag ()etags-select-next-tag391,14793
(defun etags-select-previous-tag ()etags-select-previous-tag402,15054
(defun etags-select-quit ()etags-select-quit413,15329
(defun etags-select-by-tag-number (first-digit)etags-select-by-tag-number419,15443
(defvar etags-select-mode-map nil "'etags-select-mode' keymap.")etags-select-mode-map434,16008
(defun etags-select-mode (tagname)etags-select-mode458,17450

elpa/exec-path-from-shell-1.7/exec-path-from-shell-autoloads.el,0

elpa/exec-path-from-shell-1.7/exec-path-from-shell-pkg.el,135
(define-package "exec-path-from-shell" "1.7" "Get environment variables such as $PATH from the shell" 'nil)"exec-path-from-shell"1,0

elpa/exec-path-from-shell-1.7/exec-path-from-shell.el,992
(defgroup exec-path-from-shell nilexec-path-from-shell66,2276
(defcustom exec-path-from-shell-variablesexec-path-from-shell-variables71,2424
(defun exec-path-from-shell--double-quote (s)exec-path-from-shell--double-quote76,2588
(defun exec-path-from-shell--tcsh-p (shell)exec-path-from-shell--tcsh-p80,2772
(defun exec-path-from-shell--login-arg (shell)exec-path-from-shell--login-arg83,2849
(defun exec-path-from-shell-printf (str &optional args)exec-path-from-shell-printf87,3002
(defun exec-path-from-shell-getenvs (names)exec-path-from-shell-getenvs113,4065
(defun exec-path-from-shell-getenv (name)exec-path-from-shell-getenv136,5050
(defun exec-path-from-shell-setenv (name value)exec-path-from-shell-setenv143,5333
(defun exec-path-from-shell-copy-envs (names)exec-path-from-shell-copy-envs153,5710
(defun exec-path-from-shell-copy-env (name)exec-path-from-shell-copy-env164,6159
(defun exec-path-from-shell-initialize ()exec-path-from-shell-initialize174,6569

elpa/f-20160426.527/f-autoloads.el,0

elpa/f-20160426.527/f-pkg.el,198
(define-package "f" "20160426.527" "Modern API for working with files and directories" '((s "1.7.0") (dash "2.2.0")) :url "http://github.com/rejeep/f.el" :keywords '("files" "directories"))"f"1,0

elpa/f-20160426.527/f.el,3721
(defvar f--guard-paths nilf--guard-paths42,1372
(defmacro f--destructive (path &rest body)f--destructive47,1481
(defun f-join (&rest args)f-join62,1898
(defun f-split (path)f-split71,2131
(defun f-expand (path &optional dir)f-expand78,2348
(defun f-filename (path)f-filename83,2533
(defalias 'f-parent 'f-dirname)f-parent87,2643
(defun f-dirname (path)f-dirname88,2675
(defun f-common-parent (paths)f-common-parent96,2949
(defun f-ext (path)f-ext116,3585
(defun f-no-ext (path)f-no-ext123,3793
(defun f-swap-ext (path ext)f-swap-ext127,3906
(defun f-base (path)f-base134,4127
(defun f-relative (path &optional dir)f-relative138,4243
(defalias 'f-abbrev 'f-short)f-abbrev142,4349
(defun f-short (path)f-short143,4379
(defun f-long (path)f-long147,4488
(defun f-canonical (path)f-canonical151,4562
(defun f-slash (path)f-slash155,4652
(defun f-full (path)f-full164,4865
(defun f--uniquify (paths)f--uniquify168,4967
(defun f-uniquify (files)f-uniquify184,5740
(defun f-uniquify-alist (files)f-uniquify-alist190,5882
(defun f-read-bytes (path)f-read-bytes199,6066
(defalias 'f-read 'f-read-text)f-read209,6370
(defun f-read-text (path &optional coding)f-read-text210,6402
(defalias 'f-write 'f-write-text)f-write218,6625
(defun f-write-text (text coding path)f-write-text219,6659
(defun f-unibyte-string-p (s)f-unibyte-string-p226,6905
(defun f-write-bytes (data path)f-write-bytes230,7013
(defun f-mkdir (&rest dirs)f-mkdir247,7512
(defun f-delete (path &optional force)f-delete257,7763
(defun f-symlink (source path)f-symlink266,8044
(defun f-move (from to)f-move270,8180
(defun f-copy (from to)f-copy274,8283
(defun f-touch (path)f-touch292,8980
(defun f-exists? (path)f-exists?302,9202
(defalias 'f-dir? 'f-directory?)f-dir?306,9297
(defun f-directory? (path)f-directory?307,9330
(defun f-file? (path)f-file?311,9437
(defun f-symlink? (path)f-symlink?315,9532
(defun f-readable? (path)f-readable?319,9645
(defun f-writable? (path)f-writable?323,9749
(defun f-executable? (path)f-executable?327,9853
(defun f-absolute? (path)f-absolute?331,9963
(defun f-relative? (path)f-relative?335,10072
(defun f-root? (path)f-root?339,10178
(defun f-ext? (path &optional ext)f-ext?343,10283
(defalias 'f-equal? 'f-same?)f-equal?355,10653
(defun f-same? (path-a path-b)f-same?356,10683
(defun f-parent-of? (path-a path-b)f-parent-of?362,10859
(defun f-child-of? (path-a path-b)f-child-of?367,10998
(defun f-ancestor-of? (path-a path-b)f-ancestor-of?372,11135
(defun f-descendant-of? (path-a path-b)f-descendant-of?378,11329
(defun f-size (path)f-size387,11540
(defun f-depth (path)f-depth396,11800
(defun f-this-file ()f-this-file407,12064
(defun f-path-separator ()f-path-separator415,12297
(defun f-glob (pattern &optional path)f-glob419,12388
(defun f--collect-entries (path recursive)f--collect-entries424,12529
(defmacro f--entries (path body &optional recursive)f--entries445,13198
(defun f-entries (path &optional fn recursive)f-entries454,13389
(defmacro f--directories (path body &optional recursive)f--directories463,13750
(defun f-directories (path &optional fn recursive)f-directories472,13953
(defmacro f--files (path body &optional recursive)f--files477,14190
(defun f-files (path &optional fn recursive)f-files486,14375
(defmacro f--up (body &optional dir)f--up491,14577
(defun f-up (fn &optional dir)f-up501,14778
(defmacro f--traverse-upwards (body &optional path)f--traverse-upwards516,15217
(defun f-traverse-upwards (fn &optional path)f-traverse-upwards524,15408
(defun f-root ()f-root541,15949
(defmacro f-with-sandbox (path-or-paths &rest body)f-with-sandbox545,16026

elpa/find-file-in-project-20160625.619/find-file-in-project-autoloads.el,53
(defalias 'ffip 'find-file-in-project)ffip120,4053

elpa/find-file-in-project-20160625.619/find-file-in-project-pkg.el,255
(define-package "find-file-in-project" "20160625.619" "Find files in a project quickly, on any OS" '((ivy "0.7.0") (emacs "24.3")) :url "https://github.com/technomancy/find-file-in-project" :keywords '("project" "convenience"))"find-file-in-project"1,0

elpa/find-file-in-project-20160625.619/find-file-in-project.el,3665
(defvar ffip-filename-rulesffip-filename-rules125,5296
(defvar ffip-diff-find-file-before-hook nilffip-diff-find-file-before-hook130,5479
(defvar ffip-diff-backendsffip-diff-backends133,5605
(defvar ffip-find-executable nil "Path of GNU find.  If nil, `ffip--guess-gnu-find' is called.")ffip-find-executable157,6807
(defvar ffip-project-file '(".svn" ".hg" ".git")ffip-project-file159,6905
(defvar ffip-prefer-ido-mode (not (require 'ivy nil t))ffip-prefer-ido-mode163,7078
(defvar ffip-patterns nilffip-patterns166,7200
(defvar ffip-match-path-instead-of-filename nilffip-match-path-instead-of-filename169,7290
(defvar ffip-prune-patternsffip-prune-patterns172,7429
(defvar ffip-find-options ""ffip-find-options238,8460
(defvar ffip-project-root nilffip-project-root243,8642
(defvar ffip-project-root-function nilffip-project-root-function246,8737
(defvar ffip-full-paths tffip-full-paths251,8904
(defvar ffip-debug nil "Print debug information.")ffip-debug254,8983
(defun ffip-project-root ()ffip-project-root257,9050
(defun ffip--read-file-text (file)ffip--read-file-text272,9832
(defun ffip--find-rule-to-execute (keyword f)ffip--find-rule-to-execute280,10143
(defun ffip-filename-identity (keyword)ffip-filename-identity304,10737
(defun ffip-filename-camelcase-to-dashes (keyword &optional check-only)ffip-filename-camelcase-to-dashes309,10834
(defun ffip-filename-dashes-to-camelcase (keyword &optional check-only)ffip-filename-dashes-to-camelcase330,11666
(defun ffip--create-filename-pattern-for-gnufind (keyword)ffip--create-filename-pattern-for-gnufind346,12414
(defun ffip--guess-gnu-find-on-windows (driver path)ffip--guess-gnu-find-on-windows374,13446
(defun ffip--guess-gnu-find ()ffip--guess-gnu-find380,13611
(defun ffip--join-patterns (patterns)ffip--join-patterns401,14907
(defun ffip--prune-patterns ()ffip--prune-patterns408,15166
(defun ffip-completing-read (prompt collection action)ffip-completing-read413,15369
(defun ffip-project-search (keyword find-directory)ffip-project-search426,15767
(defun ffip--forward-line (lnum)ffip--forward-line476,18162
(defun ffip-find-files (keyword open-another-window &optional find-directory fn)ffip-find-files484,18390
(defun ffip--prepare-root-data-for-project-file (root)ffip--prepare-root-data-for-project-file525,19908
(defun ffip-create-project-file ()ffip-create-project-file529,20013
(defun ffip-current-full-filename-match-pattern-p (regex)ffip-current-full-filename-match-pattern-p573,21987
(defun find-file-in-project (&optional open-another-window)find-file-in-project579,22224
(defun ffip-get-project-root-directory ()ffip-get-project-root-directory593,22708
(defun find-file-in-current-directory (&optional open-another-window)find-file-in-current-directory599,22904
(defun find-file-in-project-by-selected (&optional open-another-window)find-file-in-project-by-selected609,23285
(defun find-file-in-current-directory-by-selected (&optional open-another-window)find-file-in-current-directory-by-selected631,24155
(defun find-directory-in-project-by-selected (&optional open-another-window)find-directory-in-project-by-selected641,24572
(defalias 'ffip 'find-file-in-project)ffip660,25336
(defun ffip-diff-quit ()ffip-diff-quit664,25392
(defun ffip-diff-find-file (&optional open-another-window)ffip-diff-find-file670,25504
(defvar ffip-diff-mode-mapffip-diff-mode-map703,26897
(define-derived-mode ffip-diff-mode diff-mode "ffip"ffip-diff-mode714,27282
(defun ffip-show-content-in-diff-mode (content)ffip-show-content-in-diff-mode720,27449
(defun ffip-show-diff (&optional num)ffip-show-diff735,27897

elpa/flx-20151030.1112/flx-autoloads.el,0

elpa/flx-20151030.1112/flx-pkg.el,139
(define-package "flx" "20151030.1112" "fuzzy matching with good sorting" '((cl-lib "0.3")) :url "https://github.com/lewang/flx")"flx"1,0

elpa/flx-20151030.1112/flx.el,1322
(defgroup flx nilflx56,1717
(defcustom flx-word-separators '(?\  ?- ?_ ?: ?. ?/ ?\\)flx-word-separators61,1813
(defface flx-highlight-face  '((t (:inherit font-lock-variable-name-face :bold t :underline t)))flx-highlight-face66,1972
(defsubst flx-word-p (char)flx-word-p71,2190
(defsubst flx-capital-p (char)flx-capital-p76,2317
(defsubst flx-boundary-p (last-char char)flx-boundary-p82,2463
(defsubst flx-inc-vec (vec &optional inc beg end)flx-inc-vec92,2789
(defun flx-get-hash-for-string (str heatmap-func)flx-get-hash-for-string106,3122
(defun flx-get-heatmap-str (str &optional group-separator)flx-get-heatmap-str126,3961
(defun flx-get-heatmap-file (filename)flx-get-heatmap-file218,8355
(defsubst flx-bigger-sublist (sorted-list val)flx-bigger-sublist223,8473
(defun flx-make-filename-cache ()flx-make-filename-cache233,8760
(defun flx-make-string-cache (&optional heat-func)flx-make-string-cache237,8906
(defun flx-process-cache (str cache)flx-process-cache244,9187
(defun flx-find-best-match (str-infoflx-find-best-match258,9638
(defun flx-score (str query &optional cache)flx-score340,13159
(defun flx-propertize (obj score &optional add-score)flx-propertize379,14681
(defvar flx-file-cache nilflx-file-cache405,15542
(defvar flx-strings-cache nilflx-strings-cache411,15695

elpa/flx-ido-20151030.1112/flx-ido-autoloads.el,47
(defvar flx-ido-mode nil "\flx-ido-mode9,254

elpa/flx-ido-20151030.1112/flx-ido-pkg.el,150
(define-package "flx-ido" "20151030.1112" "flx integration for ido" '((flx "0.1") (cl-lib "0.3")) :url "https://github.com/lewang/flx")"flx-ido"1,0

elpa/flx-ido-20151030.1112/flx-ido.el,1587
(defcustom flx-ido-threshold 6000flx-ido-threshold66,1865
(defcustom flx-ido-use-faces tflx-ido-use-faces74,2066
(defvar flx-ido-narrowed-matches-hash (make-hash-table :test 'equal)flx-ido-narrowed-matches-hash95,2775
(defvar flx-ido-debug nil)flx-ido-debug98,2911
(defun flx-ido-debug (&rest args)flx-ido-debug100,2939
(defun flx-ido-is-prefix-match (str prefix)flx-ido-is-prefix-match106,3079
(defun flx-ido-narrowed (query items)flx-ido-narrowed113,3317
(defun flx-ido-undecorate (strings)flx-ido-undecorate141,4550
(defun flx-ido-decorate (things &optional clear)flx-ido-decorate146,4657
(defun flx-ido-match-internal (query items)flx-ido-match-internal165,5354
(defun flx-ido-key-for-query (query)flx-ido-key-for-query186,6402
(defun flx-ido-cache (query items)flx-ido-cache190,6516
(defun flx-ido-reset ()flx-ido-reset196,6722
(defun flx-ido-match (query items)flx-ido-match200,6839
(defun flx-ido-query-to-regexp (query)flx-ido-query-to-regexp209,7252
(defun flx-flex-match (query items)flx-flex-match221,7812
(define-minor-mode flx-ido-modeflx-ido-mode238,8356
(defadvice ido-exit-minibuffer (around flx-ido-reset activate)ido-exit-minibuffer245,8472
(defadvice ido-read-internal (before flx-ido-reset activate)ido-read-internal258,8858
(defadvice ido-restrict-to-matches (before flx-ido-reset activate)ido-restrict-to-matches263,9003
(defadvice ido-set-matches-1 (around flx-ido-set-matches-1 activate compile)ido-set-matches-1268,9143
(defadvice ido-kill-buffer-at-head (before flx-ido-reset activate)ido-kill-buffer-at-head279,9711

elpa/flx-isearch-20160105.1217/flx-isearch-autoloads.el,0

elpa/flx-isearch-20160105.1217/flx-isearch-pkg.el,243
(define-package "flx-isearch" "20160105.1217" "Fuzzy incremental searching for emacs" '((emacs "24") (flx "20140821") (cl-lib "0.5")) :url "https://github.com/pythonnut/flx-isearch" :keywords '("convenience" "search" "flx"))"flx-isearch"1,0

elpa/flx-isearch-20160105.1217/flx-isearch.el,2756
(defgroup flx-isearch nilflx-isearch58,2182
(defcustom flx-isearch-message-prefix "[flx] "flx-isearch-message-prefix66,2440
(defvar flx-isearch-index 0flx-isearch-index72,2639
(defvar flx-isearch-point 0flx-isearch-point75,2724
(defvar flx-isearch-last-search ""flx-isearch-last-search78,2798
(defvar flx-isearch-was-wrapped nilflx-isearch-was-wrapped81,2866
(defvar flx-isearch-lazy-flag nilflx-isearch-lazy-flag84,2975
(defvar flx-isearch-last-lazy-flag nilflx-isearch-last-lazy-flag86,3074
(defvar flx-isearch-lazy-index nilflx-isearch-lazy-index89,3174
(defvar flx-isearch-lazy-point nilflx-isearch-lazy-point93,3284
(defvar flx-isearch-original-search-fun nilflx-isearch-original-search-fun97,3394
(defvar flx-isearch-activated nilflx-isearch-activated101,3531
(defun flx-isearch-collect-symbols ()flx-isearch-collect-symbols104,3606
(defun flx-isearch-fuse-alist (pairs)flx-isearch-fuse-alist117,3965
(defun flx-isearch-hash-table-to-alist (hash-table)flx-isearch-hash-table-to-alist130,4418
(defun flx-isearch-sort (str symbols &optional cache)flx-isearch-sort138,4672
(defvar flx-isearch-cache-level-1 nilflx-isearch-cache-level-1152,5190
(defvar flx-isearch-cache-level-2 nilflx-isearch-cache-level-2156,5336
(defvar flx-isearch-cache-level-3 nilflx-isearch-cache-level-3159,5444
(defun flx-isearch-heatmap (symbol-name)flx-isearch-heatmap163,5623
(defun flx-isearch-make-cache ()flx-isearch-make-cache167,5770
(defun flx-isearch-initialize-state ()flx-isearch-initialize-state171,5919
(defun flx-isearch-resolve-last-state ()flx-isearch-resolve-last-state186,6561
(defun flx-isearch-compute-matches (string)flx-isearch-compute-matches215,7622
(defun flx-search-forward (string &optional bound noerror count)flx-search-forward229,8151
(defun flx-search-backward (string &optional bound noerror count)flx-search-backward250,8963
(defadvice isearch-lazy-highlight-search (around flx-isearch-set-lazy-flag)isearch-lazy-highlight-search271,9781
(defadvice isearch-message-prefix (after flx-isearch-message-prefix activate)isearch-message-prefix278,10030
(defun flx-isearch-search-fun ()flx-isearch-search-fun284,10272
(defun flx-isearch-activate ()flx-isearch-activate305,10785
(defun flx-isearch-deactivate ()flx-isearch-deactivate309,10867
(define-minor-mode flx-isearch-modeflx-isearch-mode315,11000
(defun flx-isearch-activate-maybe (regexp-p)flx-isearch-activate-maybe335,11958
(defun flx-isearch-forward (&optional regexp-p no-recursive-edit)flx-isearch-forward343,12158
(defun flx-isearch-backward (&optional regexp-p no-recursive-edit)flx-isearch-backward351,12439
(defadvice isearch-forwardisearch-forward357,12677
(defadvice isearch-backwardisearch-backward365,12895

elpa/flycheck-0.23/flycheck-autoloads.el,64
(defvar global-flycheck-mode nil "\global-flycheck-mode34,994

elpa/flycheck-0.23/flycheck-ert.el,2333
(defvar flycheck-ert--resource-directory nilflycheck-ert--resource-directory66,2035
(defmacro flycheck-ert-with-temp-buffer (&rest body)flycheck-ert-with-temp-buffer72,2176
(defmacro flycheck-ert-with-file-buffer (file-name &rest body)flycheck-ert-with-file-buffer88,2832
(defmacro flycheck-ert-with-help-buffer (&rest body)flycheck-ert-with-help-buffer106,3498
(defmacro flycheck-ert-with-global-mode (&rest body)flycheck-ert-with-global-mode116,3831
(defmacro flycheck-ert-with-env (env &rest body)flycheck-ert-with-env128,4208
(defun flycheck-ert-resource-filename (resource-file)flycheck-ert-resource-filename145,4721
(defmacro flycheck-ert-with-resource-buffer (resource-file &rest body)flycheck-ert-with-resource-buffer152,4980
(defun flycheck-ert-locate-config-file (filename _checker)flycheck-ert-locate-config-file162,5336
(defun flycheck-ert-initialize (resource-dir)flycheck-ert-initialize174,5685
(defconst flycheck-ert-user-error-typeflycheck-ert-user-error-type200,6721
(defun flycheck-ert-travis-ci-p ()flycheck-ert-travis-ci-p206,6874
(defun flycheck-ert-check-gpg ()flycheck-ert-check-gpg210,6999
(defun flycheck-ert-extract-version-command (re executable &rest args)flycheck-ert-extract-version-command214,7125
(defmacro flycheck-ert-def-checker-test (checker language nameflycheck-ert-def-checker-test230,7724
(defun flycheck-ert-syntax-check-timed-out-p (result)flycheck-ert-syntax-check-timed-out-p289,10330
(defvar-local flycheck-ert-syntax-checker-finished nilflycheck-ert-syntax-checker-finished300,10637
(defconst flycheck-ert-checker-wait-time 10flycheck-ert-checker-wait-time306,10857
(defun flycheck-ert-wait-for-syntax-checker ()flycheck-ert-wait-for-syntax-checker316,11227
(defun flycheck-ert-buffer-sync ()flycheck-ert-buffer-sync327,11740
(defun flycheck-ert-ensure-clear ()flycheck-ert-ensure-clear341,12431
(defun flycheck-ert-should-overlay (error)flycheck-ert-should-overlay353,12781
(defun flycheck-ert-should-errors (&rest errors)flycheck-ert-should-errors380,14176
(defun flycheck-ert-should-syntax-check (resource-file modes &rest errors)flycheck-ert-should-syntax-check401,15067
(defun flycheck-ert-at-nth-error (n)flycheck-ert-at-nth-error444,17001
(defun flycheck-ert-explain--at-nth-error (n)flycheck-ert-explain--at-nth-error455,17461

elpa/flycheck-0.23/flycheck-pkg.el,99
(define-package "flycheck" "0.23" "Modern on-the-fly syntax checking for GNU Emacs""flycheck"1,0

elpa/flycheck-0.23/flycheck.el,27199
(defgroup flycheck nilflycheck143,5679
(defgroup flycheck-config-files nilflycheck-config-files152,6023
(defgroup flycheck-options nilflycheck-options158,6230
(defgroup flycheck-executables nilflycheck-executables164,6408
(defgroup flycheck-faces nilflycheck-faces170,6586
(defcustom flycheck-checkersflycheck-checkers176,6753
(defcustom flycheck-disabled-checkers nilflycheck-disabled-checkers270,8570
(defvar-local flycheck-checker nilflycheck-checker292,9426
(defcustom flycheck-locate-config-file-functions nilflycheck-locate-config-file-functions315,10396
(defcustom flycheck-checker-error-threshold 400flycheck-checker-error-threshold334,11084
(defcustom flycheck-process-error-functions nilflycheck-process-error-functions352,11843
(defcustom flycheck-display-errors-delay 0.9flycheck-display-errors-delay376,12710
(defcustom flycheck-display-errors-function #'flycheck-display-error-messagesflycheck-display-errors-function385,12967
(defcustom flycheck-indication-mode 'left-fringeflycheck-indication-mode402,13679
(defcustom flycheck-highlighting-mode 'symbolsflycheck-highlighting-mode419,14389
(defcustom flycheck-check-syntax-automatically '(saveflycheck-check-syntax-automatically454,15646
(defcustom flycheck-idle-change-delay 0.5flycheck-idle-change-delay493,17151
(defcustom flycheck-standard-error-navigation tflycheck-standard-error-navigation508,17660
(defcustom flycheck-navigation-minimum-level nilflycheck-navigation-minimum-level527,18367
(defcustom flycheck-completion-system nilflycheck-completion-system541,18938
(defcustom flycheck-temp-prefix "flycheck"flycheck-temp-prefix573,19999
(defcustom flycheck-mode-hook nilflycheck-mode-hook580,20182
(defcustom flycheck-after-syntax-check-hook nilflycheck-after-syntax-check-hook586,20302
(defcustom flycheck-before-syntax-check-hook nilflycheck-before-syntax-check-hook606,20960
(defcustom flycheck-syntax-check-failed-hook nilflycheck-syntax-check-failed-hook623,21450
(defcustom flycheck-status-changed-functions nilflycheck-status-changed-functions638,21879
(defcustom flycheck-error-list-after-refresh-hook nilflycheck-error-list-after-refresh-hook652,22305
(defface flycheck-errorflycheck-error663,22622
(defface flycheck-warningflycheck-warning672,22873
(defface flycheck-infoflycheck-info681,23136
(defface flycheck-fringe-errorflycheck-fringe-error690,23411
(defface flycheck-fringe-warningflycheck-fringe-warning696,23580
(defface flycheck-fringe-infoflycheck-fringe-info702,23755
(defface flycheck-error-list-errorflycheck-error-list-error710,24022
(defface flycheck-error-list-warningflycheck-error-list-warning716,24204
(defface flycheck-error-list-infoflycheck-error-list-info722,24392
(defface flycheck-error-list-line-numberflycheck-error-list-line-number729,24653
(defface flycheck-error-list-column-numberflycheck-error-list-column-number735,24848
(defface flycheck-error-list-idflycheck-error-list-id741,25045
(defface flycheck-error-list-checker-nameflycheck-error-list-checker-name747,25227
(defface flycheck-error-list-highlightflycheck-error-list-highlight753,25439
(defvar flycheck-command-mapflycheck-command-map759,25630
(defcustom flycheck-keymap-prefix (kbd "C-c !")flycheck-keymap-prefix778,26543
(defcustom flycheck-mode-line '(:eval (flycheck-mode-line-status-text))flycheck-mode-line803,27455
(defcustom flycheck-error-list-mode-lineflycheck-error-list-mode-line829,28431
(defcustom flycheck-global-modes tflycheck-global-modes849,29160
(defvar flycheck-mode-menu-mapflycheck-mode-menu-map887,31008
(defun flycheck-version (&optional show-version)flycheck-version919,32351
(defun flycheck-unload-function ()flycheck-unload-function937,32989
(defun flycheck-info ()flycheck-info946,33341
(defun flycheck-sexp-to-string (sexp)flycheck-sexp-to-string953,33457
(defun flycheck-string-to-number-safe (string)flycheck-string-to-number-safe963,33707
(defun flycheck-string-list-p (obj)flycheck-string-list-p972,34088
(defun flycheck-symbol-list-p (obj)flycheck-symbol-list-p976,34211
(defun flycheck-same-files-p (file-a file-b)flycheck-same-files-p980,34334
(defvar-local flycheck-temporaries nilflycheck-temporaries993,35076
(defun flycheck-temp-dir-system ()flycheck-temp-dir-system996,35174
(defun flycheck-temp-file-system (filename)flycheck-temp-file-system1007,35496
(defun flycheck-temp-file-inplace (filename)flycheck-temp-file-inplace1030,36341
(defun flycheck-save-buffer-to-file (file-name)flycheck-save-buffer-to-file1049,37026
(defun flycheck-save-buffer-to-temp (temp-file-fn)flycheck-save-buffer-to-temp1055,37262
(defun flycheck-prepend-with-option (option items &optional prepend-fn)flycheck-prepend-with-option1065,37633
(defun flycheck-find-in-buffer (pattern)flycheck-find-in-buffer1093,38810
(defun flycheck-ephemeral-buffer-p ()flycheck-ephemeral-buffer-p1105,39164
(defun flycheck-encrypted-buffer-p ()flycheck-encrypted-buffer-p1112,39385
(defun flycheck-autoloads-file-p ()flycheck-autoloads-file-p1123,39871
(defun flycheck-in-user-emacs-directory-p (filename)flycheck-in-user-emacs-directory-p1129,40081
(defun flycheck-safe-delete (file-or-dir)flycheck-safe-delete1134,40313
(defun flycheck-safe-delete-temporaries ()flycheck-safe-delete-temporaries1141,40528
(defun flycheck-current-load-file ()flycheck-current-load-file1197,42504
(defun flycheck-module-root-directory (module &optional file-name)flycheck-module-root-directory1215,43289
(defvar read-flycheck-checker-history nilread-flycheck-checker-history1252,44936
(defun read-flycheck-checker (prompt &optional default property candidates)read-flycheck-checker1255,45038
(defun flycheck-defined-checkers (&optional property)flycheck-defined-checkers1302,47404
(defun flycheck-registered-checker-p (checker)flycheck-registered-checker-p1317,47988
(defun flycheck-disabled-checker-p (checker)flycheck-disabled-checker-p1325,48233
(defun flycheck-possibly-suitable-checkers ()flycheck-possibly-suitable-checkers1332,48442
(defconst flycheck-generic-checker-version 2flycheck-generic-checker-version1356,49330
(defun flycheck-validate-next-checker (next &optional strict)flycheck-validate-next-checker1362,49531
(defun flycheck-define-generic-checker (symbol docstring &rest properties)flycheck-define-generic-checker1388,50471
(defun flycheck-valid-checker-p (checker)flycheck-valid-checker-p1619,60283
(defun flycheck-checker-modes (checker)flycheck-checker-modes1628,60587
(defun flycheck-checker-predicate (checker)flycheck-checker-predicate1632,60691
(defun flycheck-checker-next-checkers (checker)flycheck-checker-next-checkers1636,60816
(defun flycheck-checker-error-filter (checker)flycheck-checker-error-filter1640,60945
(defun flycheck-checker-documentation (checker)flycheck-checker-documentation1644,61070
(defun flycheck-checker-file (checker)flycheck-checker-file1648,61217
(defun flycheck-may-use-checker (checker)flycheck-may-use-checker1654,61376
(defun flycheck-may-use-next-checker (next-checker)flycheck-may-use-next-checker1666,61830
(define-button-type 'help-flycheck-checker-defhelp-flycheck-checker-def1679,62294
(defconst flycheck-find-checker-regexpflycheck-find-checker-regexp1684,62481
(defun flycheck-goto-checker-definition (checker file)flycheck-goto-checker-definition1697,62933
(defun flycheck-checker-at-point ()flycheck-checker-at-point1706,63295
(defun flycheck-describe-checker (checker)flycheck-describe-checker1715,63565
(defun flycheck-verify-generic-checker (checker)flycheck-verify-generic-checker1792,66673
(define-button-type 'help-flycheck-checker-dochelp-flycheck-checker-doc1809,67329
(defun flycheck-verify-setup ()flycheck-verify-setup1814,67502
(defun flycheck-buffer-saved-p (&optional buffer)flycheck-buffer-saved-p1885,70617
(defun flycheck-add-next-checker (checker next &optional append)flycheck-add-next-checker1897,70991
(defun flycheck-add-mode (checker mode)flycheck-add-mode1922,72000
(defun flycheck-syntax-check-start (syntax-check callback)flycheck-syntax-check-start1954,72798
(defun flycheck-syntax-check-interrupt (syntax-check)flycheck-syntax-check-interrupt1960,73087
(defvar flycheck-mode-mapflycheck-mode-map1971,73458
(defvar-local flycheck-old-next-error-function nilflycheck-old-next-error-function1982,73939
(defconst flycheck-hooks-alistflycheck-hooks-alist1985,74036
(define-minor-mode flycheck-modeflycheck-mode2013,75538
(defvar-local flycheck-last-checker nilflycheck-last-checker2057,77075
(defun flycheck-get-checker-for-buffer ()flycheck-get-checker-for-buffer2060,77167
(defun flycheck-get-next-checker-for-buffer (checker)flycheck-get-next-checker-for-buffer2078,77844
(defun flycheck-select-checker (checker)flycheck-select-checker2089,78310
(defun flycheck-disable-checker (checker &optional enable)flycheck-disable-checker2119,79467
(defvar-local flycheck-current-syntax-check nilflycheck-current-syntax-check2152,81009
(defun flycheck-start-current-syntax-check (checker)flycheck-start-current-syntax-check2156,81164
(defun flycheck-running-p ()flycheck-running-p2171,81888
(defun flycheck-stop ()flycheck-stop2175,82035
(defun flycheck-buffer-status-callback (syntax-check)flycheck-buffer-status-callback2185,82510
(defun flycheck-buffer ()flycheck-buffer2191,82740
(defun flycheck-report-buffer-checker-statusflycheck-report-buffer-checker-status2218,83836
(defun flycheck-finish-current-syntax-check (errors)flycheck-finish-current-syntax-check2289,86708
(defun flycheck-disable-excessive-checker (checker errors)flycheck-disable-excessive-checker2324,88421
(defun flycheck-clear (&optional shall-interrupt)flycheck-clear2341,89147
(defun flycheck-teardown ()flycheck-teardown2354,89516
(defun flycheck-may-check-automatically (&optional condition)flycheck-may-check-automatically2367,89924
(defun flycheck-buffer-automatically (&optional condition force-deferred)flycheck-buffer-automatically2379,90395
(defvar-local flycheck-idle-change-timer nilflycheck-idle-change-timer2393,90977
(defun flycheck-clear-idle-change-timer ()flycheck-clear-idle-change-timer2396,91079
(defun flycheck-handle-change (beg end _len)flycheck-handle-change2402,91281
(defun flycheck-handle-idle-change ()flycheck-handle-idle-change2421,92037
(defun flycheck-handle-save ()flycheck-handle-save2426,92216
(defvar-local flycheck-deferred-syntax-check nilflycheck-deferred-syntax-check2432,92353
(defun flycheck-must-defer-check ()flycheck-must-defer-check2435,92456
(defun flycheck-deferred-check-p ()flycheck-deferred-check-p2452,93218
(defun flycheck-buffer-deferred ()flycheck-buffer-deferred2458,93387
(defun flycheck-clean-deferred-check ()flycheck-clean-deferred-check2462,93513
(defun flycheck-perform-deferred-syntax-check ()flycheck-perform-deferred-syntax-check2466,93644
(defun flycheck-may-enable-mode ()flycheck-may-enable-mode2474,93881
(defun flycheck-mode-on-safe ()flycheck-mode-on-safe2500,94868
(define-globalized-minor-mode global-flycheck-mode flycheck-modeglobal-flycheck-mode2509,95098
(defun flycheck-global-teardown ()flycheck-global-teardown2520,95462
(defmacro flycheck-error-with-buffer (err &rest forms)flycheck-error-with-buffer2578,97471
(defun flycheck-error-line-region (err)flycheck-error-line-region2587,97799
(defun flycheck-error-column-region (err)flycheck-error-column-region2611,98781
(defun flycheck-error-thing-region (thing err)flycheck-error-thing-region2643,100160
(defun flycheck-error-region-for-mode (err mode)flycheck-error-region-for-mode2661,100797
(defun flycheck-error-pos (err)flycheck-error-pos2692,101816
(defun flycheck-error-format-message-and-id (err)flycheck-error-format-message-and-id2702,102152
(defun flycheck-error-format (err)flycheck-error-format2708,102403
(defun flycheck-error-< (err1 err2)flycheck-error-<2724,103067
(defun flycheck-error-level-< (err1 err2)flycheck-error-level-<2738,103573
(defun flycheck-assert-error-list-p (errors)flycheck-assert-error-list-p2754,104193
(defvar-local flycheck-current-errors nilflycheck-current-errors2769,104687
(defun flycheck-report-current-errors (errors)flycheck-report-current-errors2772,104792
(defun flycheck-clear-errors ()flycheck-clear-errors2784,105290
(defun flycheck-relevant-error-p (err)flycheck-relevant-error-p2789,105459
(defun flycheck-relevant-errors (errors)flycheck-relevant-errors2803,105951
(defvar-local flycheck-last-status-change 'not-checkedflycheck-last-status-change2812,106210
(defun flycheck-report-failed-syntax-check (&optional status)flycheck-report-failed-syntax-check2815,106317
(defun flycheck-report-status (status)flycheck-report-status2828,106768
(defun flycheck-mode-line-status-text (&optional status)flycheck-mode-line-status-text2862,107613
(defun flycheck-define-error-level (level &rest properties)flycheck-define-error-level2884,108372
(defun flycheck-error-level-p (level)flycheck-error-level-p2936,110412
(defun flycheck-error-level-severity (level)flycheck-error-level-severity2940,110543
(defun flycheck-error-level-overlay-category (level)flycheck-error-level-overlay-category2944,110675
(defun flycheck-error-level-fringe-bitmap (level)flycheck-error-level-fringe-bitmap2948,110811
(defun flycheck-error-level-fringe-face (level)flycheck-error-level-fringe-face2952,110938
(defun flycheck-error-level-error-list-face (level)flycheck-error-level-error-list-face2956,111059
(defun flycheck-error-level-make-fringe-icon (level side)flycheck-error-level-make-fringe-icon2960,111192
(defun flycheck-filter-errors (errors checker)flycheck-filter-errors3020,113276
(defun flycheck-sanitize-errors (errors)flycheck-sanitize-errors3030,113638
(defun flycheck-increment-error-columns (errors &optional offset)flycheck-increment-error-columns3053,114429
(defun flycheck-collapse-error-message-whitespace (errors)flycheck-collapse-error-message-whitespace3066,114841
(defun flycheck-dedent-error-messages (errors)flycheck-dedent-error-messages3077,115250
(defun flycheck-fold-include-levels (errors sentinel-message)flycheck-fold-include-levels3108,116522
(defun flycheck-dequalify-error-ids (errors)flycheck-dequalify-error-ids3153,119030
(defun flycheck-remove-error-ids (errors)flycheck-remove-error-ids3177,119954
(defun flycheck-count-errors (errors)flycheck-count-errors3184,120132
(defun flycheck-has-max-errors-p (errors level)flycheck-has-max-errors-p3199,120637
(defun flycheck-has-max-current-errors-p (level)flycheck-has-max-current-errors-p3208,121009
(defun flycheck-has-errors-p (errors level)flycheck-has-errors-p3212,121183
(defun flycheck-has-current-errors-p (&optional level)flycheck-has-current-errors-p3219,121408
(defun flycheck-add-overlay (err)flycheck-add-overlay3229,121742
(defun flycheck-filter-overlays (overlays)flycheck-filter-overlays3257,123066
(defun flycheck-overlays-at (pos)flycheck-overlays-at3261,123224
(defun flycheck-overlays-in (beg end)flycheck-overlays-in3265,123345
(defun flycheck-overlay-errors-at (pos)flycheck-overlay-errors-at3269,123487
(defun flycheck-overlay-errors-in (beg end)flycheck-overlay-errors-in3274,123681
(defvar-local flycheck-overlays-to-delete nilflycheck-overlays-to-delete3279,123896
(defun flycheck-delete-all-overlays ()flycheck-delete-all-overlays3283,124064
(defun flycheck-mark-all-overlays-for-deletion ()flycheck-mark-all-overlays-for-deletion3290,124305
(defun flycheck-delete-marked-overlays ()flycheck-delete-marked-overlays3296,124546
(defun flycheck-error-level-interesting-at-pos-p (pos)flycheck-error-level-interesting-at-pos-p3303,124775
(defun flycheck-error-level-interesting-p (err)flycheck-error-level-interesting-p3307,124991
(defun flycheck-next-error-pos (n &optional reset)flycheck-next-error-pos3315,125336
(defun flycheck-next-error-function (n reset)flycheck-next-error-function3361,127420
(defun flycheck-next-error (&optional n reset)flycheck-next-error3370,127695
(defun flycheck-previous-error (&optional n)flycheck-previous-error3382,128095
(defun flycheck-first-error (&optional n)flycheck-first-error3390,128339
(defconst flycheck-error-list-buffer "*Flycheck errors*"flycheck-error-list-buffer3400,128617
(defvar flycheck-error-list-mode-mapflycheck-error-list-mode-map3403,128724
(defconst flycheck-error-list-formatflycheck-error-list-format3412,129118
(define-derived-mode flycheck-error-list-mode tabulated-list-mode "Flycheck errors"flycheck-error-list-mode3421,129388
(defvar-local flycheck-error-list-source-buffer nilflycheck-error-list-source-buffer3435,130028
(defun flycheck-error-list-set-source (buffer)flycheck-error-list-set-source3441,130279
(defun flycheck-error-list-update-source ()flycheck-error-list-update-source3450,130686
(defun flycheck-error-list-check-source ()flycheck-error-list-check-source3457,131011
(define-button-type 'flycheck-error-listflycheck-error-list3465,131300
(defun flycheck-error-list-button-goto-error (button)flycheck-error-list-button-goto-error3469,131433
(defsubst flycheck-error-list-make-cell (text &optional face)flycheck-error-list-make-cell3473,131577
(defsubst flycheck-error-list-make-number-cell (number face)flycheck-error-list-make-number-cell3478,131779
(defun flycheck-error-list-make-entry (error)flycheck-error-list-make-entry3487,132085
(defun flycheck-error-list-entries ()flycheck-error-list-entries3514,133361
(defun flycheck-error-list-entry-< (entry1 entry2)flycheck-error-list-entry-<3521,133697
(defun flycheck-error-list-entry-level-< (entry1 entry2)flycheck-error-list-entry-level-<3527,133881
(defvar flycheck-error-list-mode-line-mapflycheck-error-list-mode-line-map3533,134086
(defun flycheck-error-list-propertized-source-name ()flycheck-error-list-propertized-source-name3540,134304
(defun flycheck-error-list-mouse-switch-to-source (event)flycheck-error-list-mouse-switch-to-source3554,134928
(defun flycheck-get-error-list-window-list (&optional all-frames)flycheck-get-error-list-window-list3563,135299
(defun flycheck-get-error-list-window (&optional all-frames)flycheck-get-error-list-window3571,135600
(defun flycheck-error-list-recenter-at (pos)flycheck-error-list-recenter-at3579,135895
(defun flycheck-error-list-refresh ()flycheck-error-list-refresh3586,136111
(defun flycheck-error-list-goto-error (&optional pos)flycheck-error-list-goto-error3606,136992
(defun flycheck-error-list-next-error-pos (pos &optional n)flycheck-error-list-next-error-pos3628,137908
(defun flycheck-error-list-previous-error (n)flycheck-error-list-previous-error3652,138806
(defun flycheck-error-list-next-error (n)flycheck-error-list-next-error3657,138975
(defvar-local flycheck-error-list-highlight-overlays nilflycheck-error-list-highlight-overlays3669,139460
(defun flycheck-error-list-highlight-errors (&optional preserve-pos)flycheck-error-list-highlight-errors3673,139639
(defun flycheck-list-errors ()flycheck-list-errors3716,141954
(defalias 'list-flycheck-errors 'flycheck-list-errors)list-flycheck-errors3731,142585
(defun flycheck-display-errors (errors)flycheck-display-errors3735,142687
(defvar-local flycheck-display-error-at-point-timer nilflycheck-display-error-at-point-timer3740,142886
(defun flycheck-cancel-error-display-error-at-point-timer ()flycheck-cancel-error-display-error-at-point-timer3743,143010
(defun flycheck-display-error-at-point ()flycheck-display-error-at-point3749,143289
(defun flycheck-display-error-at-point-soon ()flycheck-display-error-at-point-soon3759,143727
(defconst flycheck-error-message-buffer "*Flycheck error messages*"flycheck-error-message-buffer3768,144113
(defun flycheck-error-message-buffer ()flycheck-error-message-buffer3771,144242
(defun flycheck-may-use-echo-area-p ()flycheck-may-use-echo-area-p3778,144491
(defun flycheck-display-error-messages (errors)flycheck-display-error-messages3785,144765
(defun flycheck-display-error-messages-unless-error-list (errors)flycheck-display-error-messages-unless-error-list3801,145475
(defun flycheck-hide-error-buffer ()flycheck-hide-error-buffer3810,145857
(defun flycheck-copy-errors-as-kill (pos &optional formatter)flycheck-copy-errors-as-kill3821,146212
(define-obsolete-function-alias 'flycheck-copy-messages-as-killflycheck-copy-messages-as-kill3842,147201
(defun flycheck-command-argument-p (arg)flycheck-command-argument-p3847,147352
(defun flycheck-define-command-checker (symbol docstring &rest properties)flycheck-define-command-checker3880,148542
(defun flycheck-checker-default-executable (checker)flycheck-checker-default-executable4016,154366
(defun flycheck-checker-executable (checker)flycheck-checker-executable4020,154504
(defun flycheck-checker-arguments (checker)flycheck-checker-arguments4030,154931
(defun flycheck-checker-error-patterns (checker)flycheck-checker-error-patterns4034,155059
(defun flycheck-checker-error-parser (checker)flycheck-checker-error-parser4041,155318
(defun flycheck-substitute-argument (arg checker)flycheck-substitute-argument4045,155443
(defun flycheck-checker-substituted-arguments (checker)flycheck-checker-substituted-arguments4228,163328
(defun flycheck-start-command-checker (checker callback)flycheck-start-command-checker4238,163709
(defun flycheck-interrupt-command-checker (_checker process)flycheck-interrupt-command-checker4283,166132
(defun flycheck-command-checker-print-doc (checker)flycheck-command-checker-print-doc4289,166345
(defun flycheck-verify-command-checker (checker)flycheck-verify-command-checker4320,167610
(defun flycheck-receive-checker-output (process output)flycheck-receive-checker-output4334,168120
(defun flycheck-get-output (process)flycheck-get-output4338,168287
(defun flycheck-handle-signal (process _event)flycheck-handle-signal4344,168559
(defun flycheck-finish-checker-processflycheck-finish-checker-process4369,169576
(defmacro flycheck-def-executable-var (checker default-executable)flycheck-def-executable-var4395,170827
(defun flycheck-set-checker-executable (checker &optional executable)flycheck-set-checker-executable4420,171799
(defmacro flycheck-def-config-file-var (symbol checker &optional file-nameflycheck-def-config-file-var4459,173598
(defun flycheck-checker-config-file-var (checker)flycheck-checker-config-file-var4493,174957
(defun flycheck-checker-option-vars (checker)flycheck-checker-option-vars4500,175184
(defun flycheck-locate-config-file (filename checker)flycheck-locate-config-file4506,175375
(defun flycheck-locate-config-file-absolute-path (filepath _checker)flycheck-locate-config-file-absolute-path4520,175876
(defun flycheck-locate-config-file-ancestor-directories (filename _checker)flycheck-locate-config-file-ancestor-directories4531,176288
(defun flycheck-locate-config-file-home (filename _checker)flycheck-locate-config-file-home4544,176833
(defmacro flycheck-def-option-var (symbol init-value checker docstringflycheck-def-option-var4560,177420
(defun flycheck-option-int (value)flycheck-option-int4585,178415
(defun flycheck-option-comma-separated-list (value &optional separator filter)flycheck-option-comma-separated-list4593,178623
(defmacro flycheck-def-args-var (symbol checker &rest custom-args)flycheck-def-args-var4613,179408
(defun flycheck-checker-pattern-to-error-regexp (pattern)flycheck-checker-pattern-to-error-regexp4635,180156
(defun flycheck-checker-compilation-error-regexp-alist (checker)flycheck-checker-compilation-error-regexp-alist4647,180565
(defun flycheck-checker-shell-command (checker)flycheck-checker-shell-command4655,180908
(defun flycheck-compile-name (_name)flycheck-compile-name4676,181833
(defun flycheck-compile (checker)flycheck-compile4682,181987
(defun flycheck-parse-output (output checker buffer)flycheck-parse-output4712,183385
(defun flycheck-fix-error-filename (err buffer-files)flycheck-fix-error-filename4721,183727
(defun flycheck-parse-xml-region (beg end)flycheck-parse-xml-region4738,184386
(defvar flycheck-xml-parserflycheck-xml-parser4747,184705
(defun flycheck-parse-xml-string (xml)flycheck-parse-xml-string4755,185002
(defun flycheck-parse-checkstyle (output checker buffer)flycheck-parse-checkstyle4767,185486
(defun flycheck-parse-cppcheck (output checker buffer)flycheck-parse-cppcheck4801,186892
(defun flycheck-parse-phpmd (output checker buffer)flycheck-parse-phpmd4839,188445
(defun flycheck-get-regexp (patterns)flycheck-get-regexp4870,189622
(defun flycheck-tokenize-output-with-patterns (output patterns)flycheck-tokenize-output-with-patterns4875,189821
(defun flycheck-try-parse-error-with-pattern (err pattern checker)flycheck-try-parse-error-with-pattern4893,190495
(defun flycheck-parse-error-with-patterns (err patterns checker)flycheck-parse-error-with-patterns4917,191406
(defun flycheck-parse-with-patterns (output checker buffer)flycheck-parse-with-patterns4932,191989
(defmacro flycheck-define-checker (symbol docstring &rest properties)flycheck-define-checker4952,192776
(defun flycheck-c/c++-quoted-include-directory ()flycheck-c/c++-quoted-include-directory5196,202077
(defconst flycheck-d-module-reflycheck-d-module-re5578,217487
(defun flycheck-d-base-directory ()flycheck-d-base-directory5585,217731
(defconst flycheck-this-emacs-executableflycheck-this-emacs-executable5645,220247
(defconst flycheck-emacs-args '("-Q" "--batch")flycheck-emacs-args5649,220394
(defmacro flycheck-prepare-emacs-lisp-form (&rest body)flycheck-prepare-emacs-lisp-form5652,220487
(defconst flycheck-emacs-lisp-check-formflycheck-emacs-lisp-check-form5670,221289
(defconst flycheck-emacs-lisp-package-initialize-formflycheck-emacs-lisp-package-initialize-form5725,223553
(defun flycheck-option-emacs-lisp-package-initialize (value)flycheck-option-emacs-lisp-package-initialize5731,223770
(defun flycheck-option-emacs-lisp-package-user-dir (value)flycheck-option-emacs-lisp-package-user-dir5762,225224
(defconst flycheck-emacs-lisp-checkdoc-formflycheck-emacs-lisp-checkdoc-form5825,228325
(defun flycheck-option-gfortran-layout (value)flycheck-option-gfortran-layout5929,232167
(defun flycheck-go-package-name (&optional file-name gopath)flycheck-go-package-name6082,238389
(defconst flycheck-haskell-module-reflycheck-haskell-module-re6167,241852
(define-obsolete-variable-alias 'flycheck-perlcritic-verbosityflycheck-perlcritic-verbosity6474,253273
(defun flycheck-flake8-fix-error-level (err)flycheck-flake8-fix-error-level6652,260765
(defun flycheck-locate-sphinx-source-directory ()flycheck-locate-sphinx-source-directory6809,266590
(defvar flycheck-sass-scss-cache-directory nilflycheck-sass-scss-cache-directory7043,275980
(defun flycheck-sass-scss-cache-location ()flycheck-sass-scss-cache-location7046,276076
(defconst flycheck-scss-lint-checkstyle-reflycheck-scss-lint-checkstyle-re7134,279422
(defun flycheck-parse-scss-lint (output checker buffer)flycheck-parse-scss-lint7138,279605
(defconst flycheck-shellcheck-supported-shells '(bash ksh88 sh)flycheck-shellcheck-supported-shells7252,283920

elpa/flymake-cursor-20130822.332/flymake-cursor-autoloads.el,0

elpa/flymake-cursor-20130822.332/flymake-cursor-pkg.el,228
(define-package "flymake-cursor" "20130822.332" "displays flymake error msg in minibuffer after delay" 'nil :url "http://www.emacswiki.org/emacs/flymake-cursor.el" :keywords '("languages" "mode" "flymake"))"flymake-cursor"1,0

elpa/flymake-cursor-20130822.332/flymake-cursor.el,518
(defvar flyc--e-at-point nilflyc--e-at-point70,2568
(defvar flyc--e-display-timer nilflyc--e-display-timer73,2638
(defun flyc/maybe-fixup-message (errore)flyc/maybe-fixup-message76,2740
(defun flyc/show-stored-error-now ()flyc/show-stored-error-now86,3204
(defun flyc/-get-error-at-point ()flyc/-get-error-at-point96,3522
(defun flyc/show-fly-error-at-point-now ()flyc/show-fly-error-at-point-now107,3813
(defun flyc/show-fly-error-at-point-pretty-soon ()flyc/show-fly-error-at-point-pretty-soon123,4296

elpa/flymake-easy-20140818.55/flymake-easy-autoloads.el,0

elpa/flymake-easy-20140818.55/flymake-easy-pkg.el,202
(define-package "flymake-easy" "20140818.55" "Helpers for easily building flymake checkers" 'nil :url "https://github.com/purcell/flymake-easy" :keywords '("convenience" "internal"))"flymake-easy"1,0

elpa/flymake-easy-20140818.55/flymake-easy.el,990
(defvar flymake-easy--active nilflymake-easy--active36,1249
(defvar flymake-easy--command-fn nilflymake-easy--command-fn38,1357
(defvar flymake-easy--location nilflymake-easy--location40,1461
(defvar flymake-easy--extension nilflymake-easy--extension43,1594
(defun flymake-easy--tempfile-in-temp-dir (file-name prefix)flymake-easy--tempfile-in-temp-dir52,1861
(defun flymake-easy--flymake-init ()flymake-easy--flymake-init59,2191
(defun flymake-easy-exclude-buffer-p ()flymake-easy-exclude-buffer-p75,2914
(defun flymake-easy-load (command-fn &optional err-line-patterns location extension warning-re info-re)flymake-easy-load81,3118
(defun flymake-easy--find-all-matches (str)flymake-easy--find-all-matches112,4981
(defadvice flymake-split-output (around flymake-easy--split-output (output) activate protect)flymake-split-output131,5698
(defadvice flymake-post-syntax-check (before flymake-easy--force-check-was-interrupted activate)flymake-post-syntax-check138,6022

elpa/flymake-google-cpplint-20140205.525/flymake-google-cpplint-autoloads.el,0

elpa/flymake-google-cpplint-20140205.525/flymake-google-cpplint-pkg.el,254
(define-package "flymake-google-cpplint" "20140205.525" "Help to comply with the Google C++ Style Guide" '((flymake-easy "0.9")) :url "https://github.com/senda-akiha/flymake-google-cpplint/" :keywords '("flymake" "c" "c++"))"flymake-google-cpplint"1,0

elpa/flymake-google-cpplint-20140205.525/flymake-google-cpplint.el,1004
(defconst flymake-google-cpplint-err-line-patternsflymake-google-cpplint-err-line-patterns44,1632
(defcustom flymake-google-cpplint-verbose ""flymake-google-cpplint-verbose48,1753
(defcustom flymake-google-cpplint-filter ""flymake-google-cpplint-filter54,1937
(defcustom flymake-google-cpplint-counting ""flymake-google-cpplint-counting72,2751
(defcustom flymake-google-cpplint-root ""flymake-google-cpplint-root82,3192
(defcustom flymake-google-cpplint-linelength ""flymake-google-cpplint-linelength101,3952
(defcustom flymake-google-cpplint-extensions ""flymake-google-cpplint-extensions111,4208
(defcustom flymake-google-cpplint-command (executable-find "cpplint.py")flymake-google-cpplint-command120,4447
(defcustom flymake-google-cpplint-location 'inplaceflymake-google-cpplint-location125,4611
(defun flymake-google-cpplint-build-command-line (filename)flymake-google-cpplint-build-command-line132,4889
(defun flymake-google-cpplint-load ()flymake-google-cpplint-load144,5328

elpa/ggtags-20160617.1840/ggtags-autoloads.el,0

elpa/ggtags-20160617.1840/ggtags-pkg.el,219
(define-package "ggtags" "20160617.1840" "emacs frontend to GNU Global source code tagging system" '((emacs "24") (cl-lib "0.5")) :url "https://github.com/leoliu/ggtags" :keywords '("tools" "convenience"))"ggtags"1,0

elpa/ggtags-20160617.1840/ggtags.el,15244
(defgroup ggtags nilggtags97,3459
(defface ggtags-highlight '((t (:underline t)))ggtags-highlight101,3541
(defface ggtags-global-line '((t (:inherit secondary-selection)))ggtags-global-line105,3657
(defcustom ggtags-executable-directory nilggtags-executable-directory109,3800
(defcustom ggtags-oversize-limit (* 10 1024 1024)ggtags-oversize-limit115,3985
(defcustom ggtags-include-patternggtags-include-pattern128,4491
(defcustom ggtags-use-project-gtagsconf tggtags-use-project-gtagsconf140,4979
(defcustom ggtags-project-duration 600ggtags-project-duration151,5322
(defcustom ggtags-process-environment nilggtags-process-environment156,5452
(defcustom ggtags-auto-jump-to-match 'historyggtags-auto-jump-to-match168,5970
(defcustom ggtags-global-window-height 8 ; ggtags-global-modeggtags-global-window-height179,6380
(defcustom ggtags-global-abbreviate-filename 40ggtags-global-abbreviate-filename185,6599
(defcustom ggtags-split-window-function split-window-preferred-functionggtags-split-window-function193,6898
(defcustom ggtags-use-idutils (and (executable-find "mkid") t)ggtags-use-idutils198,7074
(defcustom ggtags-use-sqlite3 nilggtags-use-sqlite3203,7218
(defcustom ggtags-sort-by-nearness nilggtags-sort-by-nearness211,7458
(defcustom ggtags-update-on-save tggtags-update-on-save218,7626
(defcustom ggtags-global-output-format 'grepggtags-global-output-format226,7910
(defcustom ggtags-global-use-color tggtags-global-use-color235,8195
(defcustom ggtags-global-ignore-case nilggtags-global-ignore-case243,8438
(defcustom ggtags-global-treat-text nilggtags-global-treat-text249,8597
(defcustom ggtags-global-search-libpath-for-reference tggtags-global-search-libpath-for-reference257,8859
(defcustom ggtags-global-large-output 1000ggtags-global-large-output265,9116
(defcustom ggtags-global-history-length history-lengthggtags-global-history-length270,9261
(defcustom ggtags-enable-navigation-keys tggtags-enable-navigation-keys275,9423
(defcustom ggtags-find-tag-hook nilggtags-find-tag-hook281,9588
(defcustom ggtags-get-definition-function #'ggtags-get-definition-defaultggtags-get-definition-function287,9744
(defcustom ggtags-print-definition-functionggtags-print-definition-function299,10129
(defcustom ggtags-mode-sticky tggtags-mode-sticky305,10343
(defcustom ggtags-mode-prefix-key "\C-c"ggtags-mode-prefix-key311,10481
(defcustom ggtags-completing-read-function nilggtags-completing-read-function326,11099
(define-obsolete-variable-alias 'ggtags-highlight-tag-delay 'ggtags-highlight-tagggtags-highlight-tag-delay333,11374
(defcustom ggtags-highlight-tag 0.25ggtags-highlight-tag336,11469
(defcustom ggtags-bounds-of-tag-function (lambda ()ggtags-bounds-of-tag-function346,11863
(defvar ggtags-global-error "match"ggtags-global-error353,12130
(defconst ggtags-bug-url "https://github.com/leoliu/ggtags/issues")ggtags-bug-url356,12224
(defvar ggtags-global-last-buffer nil)ggtags-global-last-buffer358,12293
(defvar ggtags-global-continuation nil)ggtags-global-continuation360,12333
(defvar ggtags-current-tag-name nil)ggtags-current-tag-name362,12374
(defvar ggtags-highlight-tag-overlay nil)ggtags-highlight-tag-overlay364,12412
(defvar ggtags-highlight-tag-timer nil)ggtags-highlight-tag-timer366,12455
(defmacro ggtags-with-temp-message (message &rest body)ggtags-with-temp-message368,12496
(defmacro ggtags-delay-finish-functions (&rest body)ggtags-delay-finish-functions379,12922
(defmacro ggtags-ensure-global-buffer (&rest body)ggtags-ensure-global-buffer395,13651
(defun ggtags-list-of-string-p (xs)ggtags-list-of-string-p404,14023
(defun ggtags-ensure-localname (file)ggtags-ensure-localname408,14134
(defun ggtags-echo (format-string &rest args)ggtags-echo411,14229
(defun ggtags-forward-to-line (line)ggtags-forward-to-line415,14379
(defun ggtags-kill-window ()ggtags-kill-window423,14591
(defun ggtags-program-path (name)ggtags-program-path428,14702
(defun ggtags-process-succeed-p (program &rest args)ggtags-process-succeed-p433,14840
(defun ggtags-process-string (program &rest args)ggtags-process-string441,15190
(defun ggtags-tag-at-point ()ggtags-tag-at-point453,15648
(defvar ggtags-projects (make-hash-table :size 7 :test #'equal))ggtags-projects459,15819
(defun ggtags-make-project (root)ggtags-make-project467,16154
(defun ggtags-project-expired-p (project)ggtags-project-expired-p496,17657
(defun ggtags-project-update-mtime-maybe (&optional project)ggtags-project-update-mtime-maybe502,17856
(defun ggtags-project-oversize-p (&optional project)ggtags-project-oversize-p514,18400
(defvar-local ggtags-last-default-directory nil)ggtags-last-default-directory521,18646
(defvar-local ggtags-project-root 'unsetggtags-project-root522,18695
(defun ggtags-find-project ()ggtags-find-project526,18803
(defun ggtags-current-project-root ()ggtags-current-project-root564,20682
(defun ggtags-check-project ()ggtags-check-project568,20803
(defun ggtags-ensure-project ()ggtags-ensure-project571,20896
(defvar delete-trailing-lines)          ;new in 24.3delete-trailing-lines578,21160
(defun ggtags-save-project-settings (&optional noconfirm)ggtags-save-project-settings580,21214
(defun ggtags-toggle-project-read-only ()ggtags-toggle-project-read-only618,23084
(defun ggtags-visit-project-root (&optional project)ggtags-visit-project-root633,23618
(defmacro ggtags-with-current-project (&rest body)ggtags-with-current-project643,24117
(defun ggtags-get-libpath ()ggtags-get-libpath664,25261
(defun ggtags-project-relative-file (file)ggtags-project-relative-file669,25522
(defun ggtags-project-file-p (file)ggtags-project-file-p679,25966
(defun ggtags-invalidate-buffer-project-root (root)ggtags-invalidate-buffer-project-root692,26588
(defun ggtags-create-tags (root)ggtags-create-tags700,26884
(defun ggtags-explain-tags ()ggtags-explain-tags745,29280
(defun ggtags-update-tags (&optional force)ggtags-update-tags755,29761
(defun ggtags-update-tags-finish (&optional buf how)ggtags-update-tags-finish784,31134
(defun ggtags-update-tags-single (file &optional nowait)ggtags-update-tags-single790,31410
(defun ggtags-delete-tags ()ggtags-delete-tags801,31949
(defvar-local ggtags-completion-cache nil)ggtags-completion-cache828,33261
(defvar ggtags-completion-flag "")      ;internal useggtags-completion-flag832,33392
(defvar ggtags-completion-tableggtags-completion-table834,33447
(defun ggtags-completion-at-point ()ggtags-completion-at-point854,34423
(defun ggtags-read-tag (&optional type confirm prompt require-match default)ggtags-read-tag860,34647
(defun ggtags-sort-by-nearness-p ()ggtags-sort-by-nearness-p884,35890
(defun ggtags-global-build-command (cmd &rest args)ggtags-global-build-command888,36025
(defvar ggtags-global-start-marker nil)ggtags-global-start-marker916,37560
(defvar ggtags-global-start-file nil)ggtags-global-start-file917,37600
(defvar ggtags-tag-ring-index nil)ggtags-tag-ring-index918,37638
(defvar ggtags-global-search-history nil)ggtags-global-search-history919,37673
(defvar ggtags-auto-jump-to-match-target nil)ggtags-auto-jump-to-match-target921,37716
(defvar-local ggtags-global-exit-info nil) ; (EXIT-STATUS COUNT DB)ggtags-global-exit-info923,37763
(defun ggtags-global-save-start-marker ()ggtags-global-save-start-marker925,37832
(defun ggtags-global-start (command &optional directory)ggtags-global-start931,38065
(defun ggtags-find-tag-continue ()ggtags-find-tag-continue951,39117
(defun ggtags-find-tag (cmd &rest args)ggtags-find-tag959,39385
(defun ggtags-include-file ()ggtags-include-file964,39598
(defun ggtags-find-tag-dwim (name &optional what)ggtags-find-tag-dwim979,40048
(defun ggtags-find-tag-mouse (event)ggtags-find-tag-mouse1013,41438
(defun ggtags-find-definition (name)ggtags-find-definition1021,41707
(defun ggtags-setup-libpath-search (type name)ggtags-setup-libpath-search1025,41878
(defun ggtags-find-reference (name)ggtags-find-reference1042,42683
(defun ggtags-find-other-symbol (name)ggtags-find-other-symbol1047,42899
(defun ggtags-quote-pattern (pattern)ggtags-quote-pattern1053,43169
(defun ggtags-idutils-query (pattern)ggtags-idutils-query1056,43263
(defun ggtags-grep (pattern &optional invert-match)ggtags-grep1060,43415
(defun ggtags-find-file (pattern &optional invert-match)ggtags-find-file1070,43939
(defun ggtags-find-tag-regexp (regexp directory)ggtags-find-tag-regexp1082,44598
(defvar ggtags-navigation-mode)ggtags-navigation-mode1097,45195
(defun ggtags-foreach-file (fn)ggtags-foreach-file1099,45228
(defun ggtags-query-replace (from to &optional delimited)ggtags-query-replace1113,45769
(defun ggtags-global-normalise-command (cmd)ggtags-global-normalise-command1138,46822
(defun ggtags-global-search-id (cmd directory)ggtags-global-search-id1145,47033
(defun ggtags-global-current-search ()ggtags-global-current-search1149,47182
(defun ggtags-global-rerun-search (data)ggtags-global-rerun-search1159,47551
(defvar-local ggtags-global-search-ewoc nil)ggtags-global-search-ewoc1176,48321
(defvar ggtags-view-search-history-last nil)ggtags-view-search-history-last1177,48366
(defvar ggtags-view-search-history-mode-mapggtags-view-search-history-mode-map1179,48412
(defun ggtags-view-search-history-remember ()ggtags-view-search-history-remember1193,49089
(defun ggtags-view-search-history-next (&optional arg)ggtags-view-search-history-next1199,49289
(defun ggtags-view-search-history-prev (&optional arg)ggtags-view-search-history-prev1206,49570
(defun ggtags-view-search-history-kill (&optional append)ggtags-view-search-history-kill1210,49698
(defun ggtags-view-search-history-update (&optional noconfirm)ggtags-view-search-history-update1238,50981
(defun ggtags-view-search-history-action ()ggtags-view-search-history-action1248,51396
(defvar bookmark-make-record-function)bookmark-make-record-function1256,51701
(define-derived-mode ggtags-view-search-history-mode special-mode "SearchHist"ggtags-view-search-history-mode1258,51741
(defun ggtags-view-search-history-restore-last ()ggtags-view-search-history-restore-last1266,52105
(defun ggtags-view-search-history ()ggtags-view-search-history1274,52492
(defun ggtags-save-to-register (r)ggtags-save-to-register1312,54197
(defun ggtags-make-bookmark-record ()ggtags-make-bookmark-record1328,55004
(defun ggtags-bookmark-jump (bmk)ggtags-bookmark-jump1337,55406
(defun ggtags-browse-file-as-hypertext (file line)ggtags-browse-file-as-hypertext1340,55512
(defun ggtags-next-mark (&optional arg)ggtags-next-mark1363,56712
(defun ggtags-prev-mark ()ggtags-prev-mark1389,57873
(defvar ggtags-view-tag-history-mode-mapggtags-view-tag-history-mode-map1394,58011
(define-derived-mode ggtags-view-tag-history-mode tabulated-list-mode "TagHist"ggtags-view-tag-history-mode1401,58241
(defun ggtags-view-tag-history ()ggtags-view-tag-history1404,58358
(defun ggtags-view-tag-history-next-error (&optional arg reset)ggtags-view-tag-history-next-error1472,61879
(defun ggtags-global-exit-message-1 ()ggtags-global-exit-message-11487,62436
(defun ggtags-global-exit-message-function (_process-status exit-status msg)ggtags-global-exit-message-function1503,63050
(defun ggtags-global-column (start)ggtags-global-column1527,64245
(defvar ggtags-global-error-regexp-alist-alistggtags-global-error-regexp-alist-alist1536,64662
(defun ggtags-abbreviate-file (start end)ggtags-abbreviate-file1554,65721
(defun ggtags-abbreviate-files (start end)ggtags-abbreviate-files1572,66594
(defvar-local ggtags-global-output-lines 0)ggtags-global-output-lines1587,67419
(defun ggtags-global--display-buffer (&optional buffer desired-point)ggtags-global--display-buffer1589,67464
(defun ggtags-global-filter ()ggtags-global-filter1599,67942
(defun ggtags-global-handle-exit (buf how)ggtags-global-handle-exit1652,70489
(defvar ggtags-global-mode-font-lock-keywordsggtags-global-mode-font-lock-keywords1687,72007
(defvar compilation-always-kill)        ;new in 24.3compilation-always-kill1693,72288
(define-compilation-mode ggtags-global-mode "Global"ggtags-global-mode1695,72342
(defvar ggtags-navigation-mapggtags-navigation-map1732,74305
(defvar ggtags-mode-map-alistggtags-mode-map-alist1756,75431
(defvar ggtags-navigation-mode-mapggtags-navigation-mode-map1759,75525
(defun ggtags-move-to-tag (&optional name)ggtags-move-to-tag1789,76922
(defun ggtags-navigation-mode-cleanup (&optional buf time)ggtags-navigation-mode-cleanup1808,77872
(defun ggtags-navigation-mode-done ()ggtags-navigation-mode-done1819,78359
(defun ggtags-navigation-mode-abort ()ggtags-navigation-mode-abort1826,78560
(defun ggtags-navigation-next-file (n)ggtags-navigation-next-file1838,79017
(defun ggtags-navigation-previous-file (n)ggtags-navigation-previous-file1844,79165
(defun ggtags-navigation-start-file ()ggtags-navigation-start-file1848,79268
(defun ggtags-navigation-last-error ()ggtags-navigation-last-error1862,79832
(defun ggtags-navigation-isearch-forward (&optional regexp-p)ggtags-navigation-isearch-forward1869,80009
(defun ggtags-navigation-visible-mode (&optional arg)ggtags-navigation-visible-mode1880,80378
(defvar ggtags-global-line-overlay nil)ggtags-global-line-overlay1885,80544
(defun ggtags-global-next-error-function ()ggtags-global-next-error-function1887,80585
(defvar ggtags-navigation-mode-lighterggtags-navigation-mode-lighter1915,81959
(define-minor-mode ggtags-navigation-mode nilggtags-navigation-mode1944,83225
(defun ggtags-minibuffer-setup-function ()ggtags-minibuffer-setup-function1964,84233
(defun ggtags-kill-file-buffers (&optional interactive)ggtags-kill-file-buffers1968,84378
(defun ggtags-after-save-function ()ggtags-after-save-function1987,85257
(defun ggtags-global-output (buffer cmds callback &optional cutoff)ggtags-global-output1993,85478
(defun ggtags-get-definition-default (defs)ggtags-get-definition-default2048,88298
(defun ggtags-show-definition (name)ggtags-show-definition2053,88457
(defvar ggtags-mode-prefix-mapggtags-mode-prefix-map2082,89911
(defvar ggtags-mode-mapggtags-mode-map2103,90818
(defvar ggtags-mode-line-project-keymapggtags-mode-line-project-keymap2189,94876
(defvar ggtags-mode-line-project-nameggtags-mode-line-project-name2195,95092
(define-minor-mode ggtags-mode nilggtags-mode2213,95947
(defvar ggtags-highlight-tag-mapggtags-highlight-tag-map2240,97406
(defun ggtags-setup-highlight-tag-at-point (flag)ggtags-setup-highlight-tag-at-point2258,98138
(defun ggtags-cancel-highlight-tag-at-point (&optional keep-timer)ggtags-cancel-highlight-tag-at-point2265,98491
(defun ggtags-highlight-tag-at-point ()ggtags-highlight-tag-at-point2274,98861
(defvar-local ggtags-eldoc-cache nil)ggtags-eldoc-cache2304,100202
(defun ggtags-eldoc-function ()ggtags-eldoc-function2307,100282
(defun ggtags-goto-imenu-index (name line &rest _args)ggtags-goto-imenu-index2332,101361
(defun ggtags-build-imenu-index ()ggtags-build-imenu-index2337,101493
(defun ggtags-try-complete-tag (old)ggtags-try-complete-tag2355,102397
(defun ggtags-reload (&optional force)ggtags-reload2375,103125

elpa/git-commit-20160519.950/git-commit-autoloads.el,66
(defvar global-git-commit-mode t "\global-git-commit-mode10,274

elpa/git-commit-20160519.950/git-commit-pkg.el,228
(define-package "git-commit" "20160519.950" "Edit Git commit messages" '((emacs "24.4") (dash "20151021.113") (with-editor "20160408.201")) :url "https://github.com/magit/magit" :keywords '("git" "tools" "vc"))"git-commit"1,0

elpa/git-commit-20160519.950/git-commit.el,3838
(defvar flyspell-generic-check-word-predicate)flyspell-generic-check-word-predicate126,5383
(defgroup git-commit nilgit-commit133,5517
(define-minor-mode global-git-commit-modeglobal-git-commit-mode139,5629
(defcustom git-commit-major-mode 'text-modegit-commit-major-mode157,6361
(defcustom git-commit-setup-hookgit-commit-setup-hook171,7043
(defcustom git-commit-finish-query-functionsgit-commit-finish-query-functions188,7584
(defcustom git-commit-summary-max-length 50git-commit-summary-max-length205,8261
(defcustom git-commit-fill-column 72git-commit-fill-column211,8431
(defcustom git-commit-known-pseudo-headersgit-commit-known-pseudo-headers217,8588
(defgroup git-commit-faces nilgit-commit-faces227,8902
(defface git-commit-summarygit-commit-summary233,9044
(defface git-commit-overlong-summarygit-commit-overlong-summary238,9189
(defface git-commit-nonempty-second-linegit-commit-nonempty-second-line243,9361
(defface git-commit-notegit-commit-note248,9544
(defface git-commit-pseudo-headergit-commit-pseudo-header253,9682
(defface git-commit-known-pseudo-headergit-commit-known-pseudo-header258,9838
(defface git-commit-comment-branchgit-commit-comment-branch263,10023
(defface git-commit-comment-detachedgit-commit-comment-detached268,10193
(defface git-commit-comment-headinggit-commit-comment-heading273,10365
(defface git-commit-comment-filegit-commit-comment-file278,10534
(defface git-commit-comment-actiongit-commit-comment-action283,10696
(defvar git-commit-mode-mapgit-commit-mode-map290,10870
(defconst git-commit-filename-regexp "/\\(\git-commit-filename-regexp342,12871
(defun git-commit-setup-font-lock-in-buffer ()git-commit-setup-font-lock-in-buffer349,13099
(defun git-commit-setup-check-buffer ()git-commit-setup-check-buffer356,13357
(defun git-commit-setup ()git-commit-setup361,13518
(defun git-commit-setup-font-lock ()git-commit-setup-font-lock402,15188
(define-minor-mode git-commit-modegit-commit-mode421,15978
(defun git-commit-setup-changelog-support ()git-commit-setup-changelog-support429,16264
(defun git-commit-turn-on-auto-fill ()git-commit-turn-on-auto-fill433,16423
(defun git-commit-turn-on-flyspell ()git-commit-turn-on-flyspell439,16625
(defun git-commit-flyspell-verify ()git-commit-flyspell-verify449,16939
(defun git-commit-finish-query-functions (force)git-commit-finish-query-functions452,17032
(defun git-commit-check-style-conventions (force)git-commit-check-style-conventions456,17164
(defun git-commit-cancel-message ()git-commit-cancel-message472,17917
(defun git-commit-prev-message (arg)git-commit-prev-message480,18149
(defun git-commit-next-message (arg)git-commit-next-message496,18786
(defun git-commit-save-message ()git-commit-save-message502,19007
(defun git-commit-buffer-message ()git-commit-buffer-message509,19252
(defun git-commit-ack (name mail)git-commit-ack532,20040
(defun git-commit-review (name mail)git-commit-review537,20236
(defun git-commit-signoff (name mail)git-commit-signoff542,20437
(defun git-commit-test (name mail)git-commit-test547,20616
(defun git-commit-cc (name mail)git-commit-cc552,20811
(defun git-commit-reported (name mail)git-commit-reported557,20994
(defun git-commit-suggested (name mail)git-commit-suggested562,21194
(defun git-commit-self-ident ()git-commit-self-ident567,21398
(defun git-commit-read-ident ()git-commit-read-ident579,21881
(defun git-commit-insert-header (header name email)git-commit-insert-header583,21979
(defconst git-commit-comment-headingsgit-commit-comment-headings602,22600
(defun git-commit-summary-regexp ()git-commit-summary-regexp609,22785
(defun git-commit-mode-font-lock-keywords ()git-commit-mode-font-lock-keywords618,23121
(defun git-commit-propertize-diff ()git-commit-propertize-diff650,24349

elpa/git-gutter+-20151204.923/git-gutter+-autoloads.el,70
(defvar global-git-gutter+-mode nil "\global-git-gutter+-mode15,369

elpa/git-gutter+-20151204.923/git-gutter+-pkg.el,217
(define-package "git-gutter+" "20151204.923" "Manage Git hunks straight from the buffer" '((git-commit "0") (dash "0")) :url "https://github.com/nonsequitur/git-gutter-plus" :keywords '("git" "vc"))"git-gutter+"1,0

elpa/git-gutter+-20151204.923/git-gutter+.el,12469
(defgroup git-gutter+ nilgit-gutter+38,1223
(defcustom git-gutter+-window-width nilgit-gutter+-window-width43,1335
(defcustom git-gutter+-git-executable "git"git-gutter+-git-executable50,1667
(defcustom git-gutter+-diff-options nilgit-gutter+-diff-options55,1787
(defcustom git-gutter+-separator-sign nilgit-gutter+-separator-sign60,1953
(defcustom git-gutter+-modified-sign "="git-gutter+-modified-sign65,2054
(defcustom git-gutter+-added-sign "+"git-gutter+-added-sign70,2153
(defcustom git-gutter+-deleted-sign "-"git-gutter+-deleted-sign75,2246
(defcustom git-gutter+-unchanged-sign nilgit-gutter+-unchanged-sign80,2343
(defcustom git-gutter+-hide-gutter nilgit-gutter+-hide-gutter86,2511
(defcustom git-gutter+-lighter " GitGutter"git-gutter+-lighter91,2631
(defface git-gutter+-separatorgit-gutter+-separator96,2751
(defface git-gutter+-modifiedgit-gutter+-modified101,2875
(defface git-gutter+-addedgit-gutter+-added106,3003
(defface git-gutter+-deletedgit-gutter+-deleted111,3123
(defface git-gutter+-unchangedgit-gutter+-unchanged116,3245
(defcustom git-gutter+-disabled-modes nilgit-gutter+-disabled-modes121,3361
(defvar git-gutter+-mode-mapgit-gutter+-mode-map126,3528
(defvar git-gutter+-view-diff-function nilgit-gutter+-view-diff-function129,3582
(defvar git-gutter+-clear-function nilgit-gutter+-clear-function132,3669
(defvar git-gutter+-window-config-change-function nilgit-gutter+-window-config-change-function135,3761
(defvar git-gutter+-diffinfos nil)git-gutter+-diffinfos138,3895
(defvar git-gutter+-diff-header nil)git-gutter+-diff-header139,3930
(defvar git-gutter+-popup-buffer "*git-gutter+-diff*")git-gutter+-popup-buffer143,4074
(defvar git-gutter+-buffers-to-reenable nil)git-gutter+-buffers-to-reenable144,4129
(defconst git-gutter+-hunk-header-regexgit-gutter+-hunk-header-regex146,4175
(defalias 'git-gutter+-popup-hunk 'git-gutter+-show-hunk)git-gutter+-popup-hunk150,4347
(defalias 'git-gutter+-revert-hunk 'git-gutter+-revert-hunks)git-gutter+-revert-hunk151,4405
(defun git-gutter+-enable-default-display-mode ()git-gutter+-enable-default-display-mode153,4468
(defun git-gutter+-call-git (args &optional file output-destination)git-gutter+-call-git161,4818
(defun git-gutter+-insert-git-output (args &optional file)git-gutter+-insert-git-output167,5196
(defun git-gutter+-in-git-repository-p (file)git-gutter+-in-git-repository-p172,5414
(defun git-gutter+-root-directory (file)git-gutter+-root-directory179,5707
(defsubst git-gutter+-diff-args (file)git-gutter+-diff-args187,6039
(defun git-gutter+-diff (curfile)git-gutter+-diff191,6202
(defun git-gutter+-get-diff-header ()git-gutter+-get-diff-header203,6711
(defsubst git-gutter+-make-diffinfo (type content start end)git-gutter+-make-diffinfo208,6894
(defun git-gutter+-get-diffinfos ()git-gutter+-get-diffinfos211,7026
(defun git-gutter+-diff-content ()git-gutter+-diff-content231,8016
(defun git-gutter+-line-to-pos (line)git-gutter+-line-to-pos242,8428
(defun git-gutter+-before-string (sign)git-gutter+-before-string248,8556
(defsubst git-gutter+-select-face (type)git-gutter+-select-face255,8851
(defsubst git-gutter+-select-sign (type)git-gutter+-select-sign261,9014
(defun git-gutter+-propertized-sign (type)git-gutter+-propertized-sign267,9189
(defun git-gutter+-view-region (sign start-line end-line)git-gutter+-view-region272,9361
(defun git-gutter+-view-at-pos (sign pos)git-gutter+-view-at-pos279,9628
(defun git-gutter+-view-diff-info (diffinfo)git-gutter+-view-diff-info284,9815
(defun git-gutter+-sign-width (sign)git-gutter+-sign-width294,10260
(defun git-gutter+-longest-sign-width ()git-gutter+-longest-sign-width298,10359
(defun git-gutter+-view-for-unchanged ()git-gutter+-view-for-unchanged307,10746
(defun git-gutter+-set-window-margin (width)git-gutter+-set-window-margin318,11131
(defsubst git-gutter+-file-buffer-p ()git-gutter+-file-buffer-p322,11285
(define-minor-mode git-gutter+-modegit-gutter+-mode328,11437
(defun git-gutter+-add-local-hooks ()git-gutter+-add-local-hooks349,12234
(defun git-gutter+-remove-local-hooks ()git-gutter+-remove-local-hooks359,12767
(defmacro git-gutter+-in-all-buffers (&rest body)git-gutter+-in-all-buffers367,13191
(define-minor-mode global-git-gutter+-mode ()global-git-gutter+-mode379,13695
(defun git-gutter+-turn-on ()git-gutter+-turn-on395,14376
(defun git-gutter+-turn-off ()git-gutter+-turn-off401,14567
(defun git-gutter+-reenable-after-major-mode-change ()git-gutter+-reenable-after-major-mode-change404,14646
(defun git-gutter+-reenable-buffers ()git-gutter+-reenable-buffers408,14804
(defsubst git-gutter+-show-gutter-p (diffinfos)git-gutter+-show-gutter-p414,14997
(defun git-gutter+-show-gutter (&optional diffinfos)git-gutter+-show-gutter419,15196
(defun git-gutter+-view-diff-infos (diffinfos)git-gutter+-view-diff-infos425,15485
(defsubst git-gutter+-reset-window-margin-p ()git-gutter+-reset-window-margin-p434,15780
(defun git-gutter+-clear-diff-infos ()git-gutter+-clear-diff-infos438,15896
(defun git-gutter+-process-diff (curfile)git-gutter+-process-diff443,16079
(defun git-gutter+-search-near-diff-index (diffinfos is-reverse)git-gutter+-search-near-diff-index454,16478
(defun git-gutter+-diffinfo-at-point ()git-gutter+-diffinfo-at-point465,16993
(defun git-gutter+-collect-deleted-line (str)git-gutter+-collect-deleted-line475,17403
(defun git-gutter+-delete-added-lines (start-line end-line)git-gutter+-delete-added-lines483,17677
(defun git-gutter+-insert-deleted-lines (content)git-gutter+-insert-deleted-lines489,17892
(defun git-gutter+-do-revert-hunk (diffinfo)git-gutter+-do-revert-hunk493,18037
(defun git-gutter+-revert-hunks ()git-gutter+-revert-hunks508,18702
(defun git-gutter+-show-hunk (&optional diffinfo)git-gutter+-show-hunk528,19619
(defun git-gutter+-show-hunk-inline-at-point ()git-gutter+-show-hunk-inline-at-point542,20109
(defun git-gutter+-next-hunk (arg)git-gutter+-next-hunk555,20672
(defun git-gutter+-previous-hunk (arg)git-gutter+-previous-hunk577,21603
(defun git-gutter+-remote-default-directory (dir file)git-gutter+-remote-default-directory582,21729
(defun git-gutter+-remote-file-path (dir file)git-gutter+-remote-file-path589,21997
(defun git-gutter+-local-file-path (file)git-gutter+-local-file-path593,22161
(defun git-gutter+-refresh ()git-gutter+-refresh599,22352
(defun git-gutter+-clear ()git-gutter+-clear609,22828
(defun git-gutter+-stage-hunks ()git-gutter+-stage-hunks618,22982
(defun git-gutter+-stage-hunks-between-lines (line-range)git-gutter+-stage-hunks-between-lines625,23355
(defun git-gutter+-selected-diffinfos (&optional line-range)git-gutter+-selected-diffinfos633,23691
(defsubst git-gutter+-diffinfo-between-lines-p (diffinfo start-line end-line)git-gutter+-diffinfo-between-lines-p643,24093
(defun git-gutter+-diffinfos-between-lines (line-range)git-gutter+-diffinfos-between-lines649,24350
(defun git-gutter+-stage-diffinfos (diffinfos line-range)git-gutter+-stage-diffinfos661,24780
(defun git-gutter+-insert-diffinfo (diffinfo line-range)git-gutter+-insert-diffinfo673,25291
(defun git-gutter+-call-git-on-current-buffer (args)git-gutter+-call-git-on-current-buffer699,26419
(defsubst git-gutter+-read-hunk-header (hunk)git-gutter+-read-hunk-header712,27043
(defun git-gutter+-insert-hunk (hunk type &optional start end)git-gutter+-insert-hunk720,27413
(defun git-gutter+-delete-hunk-header ()git-gutter+-delete-hunk-header751,28783
(defun git-gutter+-modify-hunk (type num-lines-selected del-len start)git-gutter+-modify-hunk756,28917
(defun git-gutter+-make-hunk-header (type num-lines-selected del-line del-len add-line)git-gutter+-make-hunk-header771,29592
(defvar git-gutter+-pre-commit-window-config nil)git-gutter+-pre-commit-window-config787,30146
(defvar git-gutter+-commit-origin-buffer nilgit-gutter+-commit-origin-buffer788,30196
(defconst git-gutter+-commit-buffer-name "*Commit Message*")git-gutter+-commit-buffer-name791,30278
(defconst git-gutter+-staged-changes-buffer-name "*Staged Changes*")git-gutter+-staged-changes-buffer-name792,30339
(defun git-gutter+-commit ()git-gutter+-commit795,30424
(defun git-gutter+-stage-and-commit ()git-gutter+-stage-and-commit811,31014
(defun git-gutter+-stage-and-commit-whole-buffer ()git-gutter+-stage-and-commit-whole-buffer816,31122
(defun git-gutter+-save-window-config-if-needed ()git-gutter+-save-window-config-if-needed821,31250
(defun git-gutter+-open-commit-edit-buffer (dir)git-gutter+-open-commit-edit-buffer831,31824
(defun git-gutter+-pop-to-staged-changes-buffer ()git-gutter+-pop-to-staged-changes-buffer838,32113
(defun git-gutter+-show-staged-changes (file dir)git-gutter+-show-staged-changes845,32402
(defsubst git-gutter+-abort-commit-when-no-changes (allow-empty amend)git-gutter+-abort-commit-when-no-changes856,32737
(defsubst git-gutter+-buffer-is-whitespace ()git-gutter+-buffer-is-whitespace867,33235
(defun git-gutter+-publish-commit ()git-gutter+-publish-commit872,33363
(defun git-gutter+-close-commit-edit-buffer ()git-gutter+-close-commit-edit-buffer906,34821
(defun git-gutter+-update-vc-modeline ()git-gutter+-update-vc-modeline912,35027
(defun git-gutter+-stage-whole-buffer ()git-gutter+-stage-whole-buffer920,35413
(defun git-gutter+-unstage-whole-buffer ()git-gutter+-unstage-whole-buffer924,35617
(defun git-gutter+-anything-staged-p ()git-gutter+-anything-staged-p930,35835
(defun git-gutter+-commit-toggle-amending ()git-gutter+-commit-toggle-amending934,35991
(defun git-gutter+-commit-toggle-allow-empty ()git-gutter+-commit-toggle-allow-empty955,36807
(defun git-gutter+-format-author (author email)git-gutter+-format-author961,37041
(defun git-gutter+-commit-toggle-author ()git-gutter+-commit-toggle-author964,37125
(defun git-gutter+-commit-toggle-date ()git-gutter+-commit-toggle-date972,37463
(defun git-gutter+-push-to-comment-ring (comment)git-gutter+-push-to-comment-ring979,37760
(defun git-gutter+-get-last-commit-msg ()git-gutter+-get-last-commit-msg984,37980
(defun git-gutter+-get-cfg (&rest keys)git-gutter+-get-cfg987,38110
(defun git-gutter+-git-output (args)git-gutter+-git-output990,38226
(defconst git-gutter+-commit-header-end "-- End of commit options header --\n")git-gutter+-commit-header-end1002,38507
(defun git-gutter+-commit-get-field (name &optional fields)git-gutter+-commit-get-field1004,38588
(defun git-gutter+-commit-set-field (name value)git-gutter+-commit-set-field1007,38714
(defun git-gutter+-commit-toggle-field (name default)git-gutter+-commit-toggle-field1019,39124
(defun git-gutter+-commit-toggle-input (name default)git-gutter+-commit-toggle-input1029,39558
(defun git-gutter+-commit-get-fields ()git-gutter+-commit-get-fields1040,39987
(defun git-gutter+-commit-set-fields (fields)git-gutter+-commit-set-fields1051,40404
(defvar save-place) ; Silence byte-compilersave-place1070,41132
(define-derived-mode git-gutter+-commit-mode text-mode "Git-Gutter-Commit"git-gutter+-commit-mode1072,41177
(defface git-gutter+-commit-header-facegit-gutter+-commit-header-face1115,43238
(defconst git-gutter+-commit-header-regexgit-gutter+-commit-header-regex1120,43390
(defconst git-gutter+-skip-commit-header-regexgit-gutter+-skip-commit-header-regex1123,43509
(defadvice git-commit-summary-regexpgit-commit-summary-regexp1127,43683
(defun git-gutter+-commit-font-lock-keywords ()git-gutter+-commit-font-lock-keywords1135,44011
(defvar git-gutter+-orig-vc-find-file-hook)git-gutter+-orig-vc-find-file-hook1145,44455
(defvar git-gutter+-vc-find-file-hook-with-refreshgit-gutter+-vc-find-file-hook-with-refresh1147,44500
(defadvice magit-update-vc-modeline (around refresh-git-gutter+ compile activate)magit-update-vc-modeline1152,44664
(defvar git-gutter+-last-magit-head nil)git-gutter+-last-magit-head1168,45567
(defvar git-gutter+-previously-staged-files nil)git-gutter+-previously-staged-files1169,45608
(defvar git-gutter+-staged-files nil)git-gutter+-staged-files1170,45657
(defun git-gutter+-on-magit-refresh-status ()git-gutter+-on-magit-refresh-status1178,45929
(defun git-gutter+-get-magit-head ()git-gutter+-get-magit-head1189,46405
(defun git-gutter+-get-magit-staged-files ()git-gutter+-get-magit-staged-files1195,46593
(defun git-gutter+-magit-refresh ()git-gutter+-magit-refresh1204,46927

elpa/github-theme-0.0.3/github-theme-autoloads.el,0

elpa/github-theme-0.0.3/github-theme-pkg.el,102
(define-package "github-theme" "0.0.3" "Github color theme for GNU Emacs 24" 'nil)"github-theme"1,0

elpa/github-theme-0.0.3/github-theme.el,69
(deftheme github "Port of Github Theme for Emacs 24")github33,1097

elpa/google-c-style-20140929.1118/google-c-style-autoloads.el,1654
(defconst google-c-style `((c-recognize-knr-p) (c-enable-xemacs-performance-kludge-p . t) (c-basic-offset . 2) (indent-tabs-mode) (c-comment-only-line-offset . 0) (c-hanging-braces-alist (defun-open after) (defun-close before after) (class-open after) (class-close before after) (inexpr-class-open after) (inexpr-class-close before) (namespace-open after) (inline-open after) (inline-close before after) (block-open after) (block-close . c-snug-do-while) (extern-lang-open after) (extern-lang-close after) (statement-case-open after) (substatement-open after)) (c-hanging-colons-alist (case-label) (label after) (access-label after) (member-init-intro before) (inher-intro)) (c-hanging-semi&comma-criteria c-semi&comma-no-newlines-for-oneline-inliners c-semi&comma-inside-parenlist c-semi&comma-no-newlines-before-nonblanks) (c-indent-comments-syntactically-p . t) (comment-column . 40) (c-indent-comment-alist (other space . 2)) (c-cleanup-list brace-else-brace brace-elseif-brace brace-catch-brace empty-defun-braces defun-close-semi list-close-comma scope-operator) (c-offsets-alist (arglist-intro google-c-lineup-expression-plus-4) (func-decl-cont . ++) (member-init-intro . ++) (inher-intro . ++) (comment-intro . 0) (arglist-close . c-lineup-arglist) (topmost-intro . 0) (block-open . 0) (inline-open . 0) (substatement-open . 0) (statement-cont ,(when (fboundp 'c-no-indent-after-java-annotations) 'c-no-indent-after-java-annotations) ,(when (fboundp 'c-lineup-assignments) 'c-lineup-assignments) ++) (label . /) (case-label . +) (statement-case-open . +) (statement-case-intro . +) (access-label . /) (innamespace . 0))) "\google-c-style10,290

elpa/google-c-style-20140929.1118/google-c-style-pkg.el,135
(define-package "google-c-style" "20140929.1118" "Google's C/C++ style for c-mode" 'nil :keywords '("c" "tools"))"google-c-style"1,0

elpa/google-c-style-20140929.1118/google-c-style.el,272
(defun google-c-lineup-expression-plus-4 (langelem)google-c-lineup-expression-plus-438,1295
(defconst google-c-stylegoogle-c-style69,2519
(defun google-set-c-style ()google-set-c-style135,5602
(defun google-make-newline-indent ()google-make-newline-indent144,5899

elpa/graphviz-dot-mode-0.3.7/graphviz-dot-mode-autoloads.el,0

elpa/graphviz-dot-mode-0.3.7/graphviz-dot-mode-pkg.el,126
(define-package "graphviz-dot-mode" "0.3.7" "Mode for the dot-language used by graphviz (att)." 'nil)"graphviz-dot-mode"1,0

elpa/graphviz-dot-mode-0.3.7/graphviz-dot-mode.el,4042
(defconst graphviz-dot-mode-version "0.3.6"graphviz-dot-mode-version138,6554
(defgroup graphviz nilgraphviz141,6639
(defun graphviz-dot-customize ()graphviz-dot-customize145,6726
(defvar graphviz-dot-mode-abbrev-table nilgraphviz-dot-mode-abbrev-table150,6861
(define-abbrev-table 'graphviz-dot-mode-abbrev-table ())graphviz-dot-mode-abbrev-table152,6959
(defcustom graphviz-dot-dot-program "dot"graphviz-dot-dot-program154,7017
(defcustom graphviz-dot-view-command "doted %s"graphviz-dot-view-command159,7157
(defcustom graphviz-dot-view-edit-command nilgraphviz-dot-view-edit-command165,7366
(defcustom graphviz-dot-save-before-view tgraphviz-dot-save-before-view171,7528
(defcustom graphviz-dot-auto-indent-on-newline tgraphviz-dot-auto-indent-on-newline177,7701
(defcustom graphviz-dot-indent-width default-tab-widthgraphviz-dot-indent-width182,7881
(defcustom graphviz-dot-auto-indent-on-braces nilgraphviz-dot-auto-indent-on-braces187,8027
(defcustom graphviz-dot-auto-indent-on-semi tgraphviz-dot-auto-indent-on-semi192,8242
(defcustom graphviz-dot-preview-extension "png"graphviz-dot-preview-extension197,8408
(defcustom graphviz-dot-toggle-completions nilgraphviz-dot-toggle-completions204,8653
(defcustom graphviz-dot-delete-completions nilgraphviz-dot-delete-completions212,8991
(defcustom graphviz-dot-attr-keywords graphviz-dot-attr-keywords218,9170
(defcustom graphviz-dot-value-keywords graphviz-dot-value-keywords243,10709
(defvar graphviz-dot-colors-listgraphviz-dot-colors-list262,11747
(defvar graphviz-dot-color-keywordsgraphviz-dot-color-keywords391,18864
(defvar graphviz-attr-keywordsgraphviz-attr-keywords394,18951
(defvar graphviz-value-keywordsgraphviz-value-keywords397,19051
(defvar graphviz-color-keywordsgraphviz-color-keywords400,19153
(defvar graphviz-dot-mode-map ()graphviz-dot-mode-map404,19267
(defvar graphviz-dot-mode-syntax-table nilgraphviz-dot-mode-syntax-table425,20110
(defvar graphviz-dot-font-lock-keywordsgraphviz-dot-font-lock-keywords444,20744
(defun graphviz-dot-mode ()graphviz-dot-mode466,21639
(defvar dot-menu nildot-menu545,25115
(defun graphviz-dot-compilation-parse-errors (limit-search find-at-least)graphviz-dot-compilation-parse-errors591,27178
(defun graphviz-dot-uncomment-region (begin end)graphviz-dot-uncomment-region628,28292
(defun graphviz-dot-indent-line ()graphviz-dot-indent-line633,28427
(defun graphviz-dot-get-indendation()graphviz-dot-get-indendation641,28628
(defun graphviz-dot-real-indent-line ()graphviz-dot-real-indent-line648,28822
(defun graphviz-dot-indent-graph ()graphviz-dot-indent-graph693,30904
(defun graphviz-dot-comment-or-string-p ()graphviz-dot-comment-or-string-p722,31942
(defun graphviz-dot-newline-and-indent ()graphviz-dot-newline-and-indent726,32084
(defun electric-graphviz-dot-terminate-line ()electric-graphviz-dot-terminate-line735,32302
(defun electric-graphviz-dot-open-brace ()electric-graphviz-dot-open-brace742,32505
(defun electric-graphviz-dot-close-brace ()electric-graphviz-dot-close-brace750,32762
(defun electric-graphviz-dot-semi ()electric-graphviz-dot-semi764,33176
(defun graphviz-dot-preview ()graphviz-dot-preview775,33448
(defun graphviz-dot-view ()graphviz-dot-view817,35316
(defvar graphviz-dot-str nil)graphviz-dot-str840,36377
(defvar graphviz-dot-all nil)graphviz-dot-all841,36407
(defvar graphviz-dot-pred nil)graphviz-dot-pred842,36437
(defvar graphviz-dot-buffer-to-use nil)graphviz-dot-buffer-to-use843,36468
(defvar graphviz-dot-flag nil)graphviz-dot-flag844,36508
(defun graphviz-dot-get-state ()graphviz-dot-get-state846,36540
(defun graphviz-dot-get-keywords ()graphviz-dot-get-keywords865,37209
(defvar graphviz-dot-last-word-numb 0)graphviz-dot-last-word-numb877,37691
(defvar graphviz-dot-last-word-shown nil)graphviz-dot-last-word-shown878,37730
(defvar graphviz-dot-last-completions nil)graphviz-dot-last-completions879,37772
(defun graphviz-dot-complete-word ()graphviz-dot-complete-word881,37816

elpa/helm-20160616.217/emacs-helm.sh,0

elpa/helm-20160616.217/helm-adaptive.el,1008
(defgroup helm-adapt nilhelm-adapt27,929
(defcustom helm-adaptive-history-filehelm-adaptive-history-file31,1018
(defcustom helm-adaptive-history-length 50helm-adaptive-history-length37,1186
(defvar helm-adaptive-done nilhelm-adaptive-done44,1336
(defvar helm-adaptive-history nilhelm-adaptive-history48,1445
(defun helm-adaptive-done-reset ()helm-adaptive-done-reset52,1609
(define-minor-mode helm-adaptive-modehelm-adaptive-mode56,1693
(defun helm-adapt-use-adaptive-p (&optional source-name)helm-adapt-use-adaptive-p79,2784
(defun helm-adaptive-store-selection ()helm-adaptive-store-selection95,3778
(defun helm-adaptive-maybe-load-history ()helm-adaptive-maybe-load-history150,6893
(defun helm-adaptive-save-history (&optional arg)helm-adaptive-save-history156,7171
(defun helm-adaptive-sort (candidates source)helm-adaptive-sort169,7673
(defun helm-reset-adaptive-history ()helm-reset-adaptive-history217,10524
(defun helm-adaptive-compare (x y)helm-adaptive-compare225,10856

elpa/helm-20160616.217/helm-apt.el,2274
(defgroup helm-apt nilhelm-apt32,1100
(defcustom helm-apt-cache-show-function 'helm-apt-cache-show-1helm-apt-cache-show-function36,1193
(defcustom helm-apt-actionshelm-apt-actions44,1534
(defface helm-apt-installedhelm-apt-installed54,1905
(defface helm-apt-deinstalledhelm-apt-deinstalled59,2031
(defvar helm-apt-maphelm-apt-map65,2165
(defvar helm-source-apthelm-source-apt75,2527
(defvar helm-apt-search-command "apt-cache search '%s'")helm-apt-search-command88,2971
(defvar helm-apt-show-command "apt-cache show '%s'")helm-apt-show-command89,3028
(defvar helm-apt-installed-packages nil)helm-apt-installed-packages90,3081
(defvar helm-apt-all-packages nil)helm-apt-all-packages91,3122
(defvar helm-apt-input-history nil)helm-apt-input-history92,3157
(defvar helm-apt-show-only 'all)helm-apt-show-only93,3193
(defvar helm-apt-term-buffer nil)helm-apt-term-buffer94,3226
(defvar helm-apt-default-archs nil)helm-apt-default-archs95,3260
(defun helm-apt-refresh ()helm-apt-refresh97,3297
(defun helm-apt-persistent-action (candidate)helm-apt-persistent-action102,3441
(defun helm-apt--installed-package-name (name)helm-apt--installed-package-name106,3561
(defun helm-apt-candidate-transformer (candidates)helm-apt-candidate-transformer114,3896
(defun helm-apt-show-only-installed ()helm-apt-show-only-installed135,4966
(defun helm-apt-show-only-not-installed ()helm-apt-show-only-not-installed142,5153
(defun helm-apt-show-only-deinstalled ()helm-apt-show-only-deinstalled149,5350
(defun helm-apt-show-all ()helm-apt-show-all156,5543
(defun helm-apt-init ()helm-apt-init163,5702
(defun helm-apt-display-to-real (line)helm-apt-display-to-real187,6649
(defvar helm-apt-show-current-package nil)helm-apt-show-current-package193,6818
(define-derived-mode helm-apt-show-modehelm-apt-show-mode194,6861
(defun helm-apt-cache-show (package)helm-apt-cache-show198,6981
(defun helm-apt-cache-show-1 (package)helm-apt-cache-show-1208,7366
(defun helm-apt-install (_package)helm-apt-install222,7882
(defun helm-apt-reinstall (_package)helm-apt-reinstall226,8016
(defun helm-apt-uninstall (_package)helm-apt-uninstall230,8166
(defun helm-apt-purge (_package)helm-apt-purge234,8303
(defun helm-apt (arg)helm-apt268,9658

elpa/helm-20160616.217/helm-autoloads.el,1098
(defvar helm-adaptive-mode nil "\helm-adaptive-mode10,277
(defvar helm-comp-read-mode-line "\\<helm-comp-read-map>C/\\[helm-cr-empty-string]:Empty \\<helm-map>\\[helm-help]:Help \\[helm-select-action]:Act \\[helm-maybe-exit-minibuffer]/f1/f2/f-n:NthAct \\[helm-toggle-suspend-update]:Tog.suspend")helm-comp-read-mode-line391,10567
(defvar helm-read-file-name-mode-line-string "\\<helm-read-file-map>\\[helm-help]:Help C/\\[helm-cr-empty-string]:Empty \\<helm-map>\\[helm-select-action]:Act \\[helm-maybe-exit-minibuffer]/f1/f2/f-n:NthAct \\[helm-toggle-suspend-update]:Tog.suspend" "\helm-read-file-name-mode-line-string393,10808
(defvar helm-top-mode-line "\\<helm-top-map>\\[helm-help]:Help \\<helm-map>\\[helm-select-action]:Act \\[helm-maybe-exit-minibuffer]/f1/f2/f-n:NthAct \\[helm-toggle-suspend-update]:Tog.suspend")helm-top-mode-line396,11124
(defvar helm-mode nil "\helm-mode669,20292
(defvar helm-push-mark-mode nil "\helm-push-mark-mode796,23626
(defvar helm-top-poll-mode nil "\helm-top-poll-mode876,25944
(defvar helm-popup-tip-mode nil "\helm-popup-tip-mode930,27467

elpa/helm-20160616.217/helm-bookmark.el,6313
(defgroup helm-bookmark nilhelm-bookmark35,1274
(defcustom helm-bookmark-show-location nilhelm-bookmark-show-location39,1364
(defcustom helm-bookmark-default-filtered-sourceshelm-bookmark-default-filtered-sources44,1492
(defcustom helm-bookmark-addressbook-actionshelm-bookmark-addressbook-actions60,2151
(defface helm-bookmark-infohelm-bookmark-info118,4497
(defface helm-bookmark-w3mhelm-bookmark-w3m123,4643
(defface helm-bookmark-gnushelm-bookmark-gnus128,4789
(defface helm-bookmark-manhelm-bookmark-man133,4912
(defface helm-bookmark-filehelm-bookmark-file138,5039
(defface helm-bookmark-directoryhelm-bookmark-directory143,5167
(defface helm-bookmark-addressbookhelm-bookmark-addressbook148,5300
(defvar helm-bookmark-maphelm-bookmark-map154,5438
(defclass helm-source-basic-bookmarks (helm-source-in-buffer helm-type-bookmark)helm-source-basic-bookmarks164,5853
(defvar helm-source-bookmarkshelm-source-bookmarks172,6235
(defun helm-bookmark-transformer (candidates _source)helm-bookmark-transformer176,6366
(defun helm-bookmark-toggle-filename-1 (_candidate)helm-bookmark-toggle-filename-1190,6973
(defun helm-bookmark-toggle-filename ()helm-bookmark-toggle-filename204,7670
(defun helm-bookmark-jump (candidate)helm-bookmark-jump213,7998
(defun helm-bookmark-jump-other-window (candidate)helm-bookmark-jump-other-window219,8181
(defvar helm-source-bookmark-sethelm-source-bookmark-set226,8323
(defconst helm-bookmark--non-file-filename "   - no file -"helm-bookmark--non-file-filename242,8936
(defun helm-bookmark-gnus-bookmark-p (bookmark)helm-bookmark-gnus-bookmark-p245,9060
(defun helm-bookmark-w3m-bookmark-p (bookmark)helm-bookmark-w3m-bookmark-p252,9408
(defun helm-bookmark-woman-bookmark-p (bookmark)helm-bookmark-woman-bookmark-p259,9752
(defun helm-bookmark-man-bookmark-p (bookmark)helm-bookmark-man-bookmark-p266,10097
(defun helm-bookmark-woman-man-bookmark-p (bookmark)helm-bookmark-woman-man-bookmark-p273,10432
(defun helm-bookmark-info-bookmark-p (bookmark)helm-bookmark-info-bookmark-p279,10691
(defun helm-bookmark-image-bookmark-p (bookmark)helm-bookmark-image-bookmark-p284,10902
(defun helm-bookmark-file-p (bookmark)helm-bookmark-file-p290,11126
(defun helm-bookmark-helm-find-files-p (bookmark)helm-bookmark-helm-find-files-p298,11553
(defun helm-bookmark-addressbook-p (bookmark)helm-bookmark-addressbook-p303,11787
(defun helm-bookmark-uncategorized-bookmark-p (bookmark)helm-bookmark-uncategorized-bookmark-p311,12147
(defun helm-bookmark-filter-setup-alist (fn)helm-bookmark-filter-setup-alist324,12795
(defvar w3m-async-exec)w3m-async-exec333,13099
(defun helm-bookmark-jump-w3m (bookmark)helm-bookmark-jump-w3m334,13123
(defalias 'bookmark-w3m-bookmark-jump 'helm-bookmark-jump-w3m)bookmark-w3m-bookmark-jump353,14004
(defalias 'bmkext-jump-woman 'woman-bookmark-jump)bmkext-jump-woman357,14182
(defalias 'bmkext-jump-man 'Man-bookmark-jump)bmkext-jump-man358,14233
(defalias 'bmkext-jump-w3m 'helm-bookmark-jump-w3m)bmkext-jump-w3m359,14280
(defalias 'bmkext-jump-gnus 'gnus-summary-bookmark-jump)bmkext-jump-gnus360,14332
(defalias 'bookmarkp-jump-gnus 'gnus-summary-bookmark-jump)bookmarkp-jump-gnus361,14389
(defalias 'bookmarkp-jump-w3m 'helm-bookmark-jump-w3m)bookmarkp-jump-w3m362,14449
(defalias 'bookmarkp-jump-woman 'woman-bookmark-jump)bookmarkp-jump-woman363,14504
(defalias 'bookmarkp-jump-man 'Man-bookmark-jump)bookmarkp-jump-man364,14558
(defclass helm-source-filtered-bookmarks (helm-source-in-buffer helm-type-bookmark)helm-source-filtered-bookmarks370,14648
(defun helm-bookmark-w3m-setup-alist ()helm-bookmark-w3m-setup-alist377,14869
(defvar helm-source-bookmark-w3mhelm-source-bookmark-w3m381,15029
(defun helm-bookmark-images-setup-alist ()helm-bookmark-images-setup-alist390,15316
(defvar helm-source-bookmark-imageshelm-source-bookmark-images394,15484
(defun helm-bookmark-man-setup-alist ()helm-bookmark-man-setup-alist403,15783
(defvar helm-source-bookmark-manhelm-source-bookmark-man407,15949
(defun helm-bookmark-gnus-setup-alist ()helm-bookmark-gnus-setup-alist416,16240
(defvar helm-source-bookmark-gnushelm-source-bookmark-gnus420,16403
(defun helm-bookmark-info-setup-alist ()helm-bookmark-info-setup-alist429,16691
(defvar helm-source-bookmark-infohelm-source-bookmark-info433,16854
(defun helm-bookmark-local-files-setup-alist ()helm-bookmark-local-files-setup-alist442,17159
(defvar helm-source-bookmark-files&dirshelm-source-bookmark-files&dirs446,17328
(defun helm-bookmark-helm-find-files-setup-alist ()helm-bookmark-helm-find-files-setup-alist455,17663
(defvar helm-source-bookmark-helm-find-fileshelm-source-bookmark-helm-find-files459,17852
(defun helm-bookmark-uncategorized-setup-alist ()helm-bookmark-uncategorized-setup-alist470,18301
(defvar helm-source-bookmark-uncategorizedhelm-source-bookmark-uncategorized474,18491
(defclass helm-bookmark-addressbook-class (helm-source-in-buffer)helm-bookmark-addressbook-class484,18817
(defun helm-bookmark-addressbook-send-mail-1 (_candidate &optional cc)helm-bookmark-addressbook-send-mail-1503,19813
(defun helm-bookmark-addressbook-setup-alist ()helm-bookmark-addressbook-setup-alist516,20409
(defvar helm-source-bookmark-addressbookhelm-source-bookmark-addressbook520,20584
(defun helm-highlight-bookmark (bookmarks _source)helm-highlight-bookmark526,20725
(defun helm-bookmark-edit-bookmark (bookmark-name)helm-bookmark-edit-bookmark606,25139
(defun helm-bookmark-edit-bookmark-1 (bookmark-name handler)helm-bookmark-edit-bookmark-1616,25635
(defun helm-bookmark-maybe-save-bookmark ()helm-bookmark-maybe-save-bookmark642,27006
(defun helm-bookmark-rename (old &optional new batch)helm-bookmark-rename647,27245
(defun helm-bookmark-run-edit ()helm-bookmark-run-edit674,28513
(defun helm-bookmark-run-jump-other-window ()helm-bookmark-run-jump-other-window682,28748
(defun helm-bookmark-run-delete ()helm-bookmark-run-delete689,28989
(defun helm-bookmark-get-bookmark-from-name (bmk)helm-bookmark-get-bookmark-from-name697,29255
(defun helm-delete-marked-bookmarks (_ignore)helm-delete-marked-bookmarks703,29514
(defun helm-bookmarks ()helm-bookmarks711,29762
(defun helm-filtered-bookmarks ()helm-filtered-bookmarks720,30033

elpa/helm-20160616.217/helm-buffers.el,7047
(defgroup helm-buffers nilhelm-buffers36,1217
(defcustom helm-boring-buffer-regexp-listhelm-boring-buffer-regexp-list40,1318
(defcustom helm-white-buffer-regexp-list nilhelm-white-buffer-regexp-list49,1694
(defcustom helm-buffers-favorite-modes '(lisp-interaction-modehelm-buffers-favorite-modes56,1933
(defcustom helm-buffer-max-length 20helm-buffer-max-length64,2269
(defcustom helm-buffer-details-flag thelm-buffer-details-flag71,2539
(defcustom helm-buffers-fuzzy-matching nilhelm-buffers-fuzzy-matching76,2673
(defcustom helm-buffer-skip-remote-checking nilhelm-buffer-skip-remote-checking83,2910
(defcustom helm-buffers-truncate-lines thelm-buffers-truncate-lines88,3057
(defcustom helm-mini-default-sources '(helm-source-buffers-listhelm-mini-default-sources93,3197
(defcustom helm-buffers-end-truncated-string "..."helm-buffers-end-truncated-string100,3494
(defgroup helm-buffers-faces nilhelm-buffers-faces109,3664
(defface helm-buffer-saved-outhelm-buffer-saved-out115,3807
(defface helm-buffer-not-savedhelm-buffer-not-saved120,3978
(defface helm-buffer-sizehelm-buffer-size125,4136
(defface helm-buffer-processhelm-buffer-process131,4330
(defface helm-buffer-directoryhelm-buffer-directory136,4469
(defface helm-buffer-filehelm-buffer-file141,4644
(defvar helm-buffer-maphelm-buffer-map149,4823
(defvar helm-buffers-ido-virtual-maphelm-buffers-ido-virtual-map177,6464
(defvar helm-buffers-list-cache nil)helm-buffers-list-cache189,6970
(defvar helm-buffer-max-len-mode nil)helm-buffer-max-len-mode190,7007
(defvar helm-buffers-in-project-p nil)helm-buffers-in-project-p191,7045
(defun helm-buffers-list--init ()helm-buffers-list--init193,7085
(defclass helm-source-buffers (helm-source-sync helm-type-buffer)helm-source-buffers207,7862
(defvar helm-source-buffers-list nil)helm-source-buffers-list232,8856
(defvar helm-source-buffer-not-foundhelm-source-buffer-not-found234,8895
(defvar ido-temp-list)ido-temp-list253,9773
(defvar ido-ignored-list)ido-ignored-list254,9796
(defvar ido-process-ignore-lists)ido-process-ignore-lists255,9822
(defvar ido-use-virtual-buffers)ido-use-virtual-buffers256,9856
(defvar ido-virtual-buffers)ido-virtual-buffers257,9889
(defvar helm-source-ido-virtual-buffershelm-source-ido-virtual-buffers259,9919
(defvar ido-use-virtual-buffers)ido-use-virtual-buffers283,11037
(defvar ido-ignore-buffers)ido-ignore-buffers284,11070
(defun helm-buffer-list ()helm-buffer-list285,11098
(defun helm-buffer-size (buffer)helm-buffer-size296,11439
(defun helm-buffer--show-details (buf-name prefix help-echohelm-buffer--show-details305,11677
(defun helm-buffer--details (buffer &optional details)helm-buffer--details324,12328
(defun helm-highlight-buffers (buffers _source)helm-highlight-buffers374,14850
(defun helm-buffer--get-preselection (buffer)helm-buffer--get-preselection405,16489
(defun helm-toggle-buffers-details ()helm-toggle-buffers-details420,17123
(defun helm-buffers-sort-transformer (candidates _source)helm-buffers-sort-transformer429,17453
(defun helm-buffers-mark-similar-buffers-1 ()helm-buffers-mark-similar-buffers-1436,17666
(defun helm-buffers-mark-similar-buffers ()helm-buffers-mark-similar-buffers461,18784
(defun helm-buffer--match-mjm (pattern mjm)helm-buffer--match-mjm476,19254
(defun helm-buffer--match-pattern (pattern candidate)helm-buffer--match-pattern491,19944
(defun helm-buffers--match-from-mjm (candidate)helm-buffers--match-from-mjm504,20518
(defun helm-buffers--match-from-pat (candidate)helm-buffers--match-from-pat518,21067
(defun helm-buffers--match-from-inside (candidate)helm-buffers--match-from-inside529,21533
(defun helm-buffers--match-from-directory (candidate)helm-buffers--match-from-directory545,22189
(defun helm-buffers-match-function (candidate)helm-buffers-match-function561,22825
(defun helm-buffer-query-replace-1 (&optional regexp-flag buffers)helm-buffer-query-replace-1569,23117
(defun helm-buffer-query-replace-regexp (_candidate)helm-buffer-query-replace-regexp588,23985
(defun helm-buffer-query-replace (_candidate)helm-buffer-query-replace591,24080
(defun helm-buffer-toggle-diff (candidate)helm-buffer-toggle-diff594,24160
(defun helm-buffer-diff-persistent ()helm-buffer-diff-persistent602,24501
(defun helm-revert-buffer (candidate)helm-revert-buffer610,24780
(defun helm-revert-marked-buffers (_ignore)helm-revert-marked-buffers615,24941
(defun helm-buffer-revert-and-update (_candidate)helm-buffer-revert-and-update618,25041
(defun helm-buffer-revert-persistent ()helm-buffer-revert-persistent626,25382
(defun helm-buffer-save-and-update (_candidate)helm-buffer-save-and-update634,25686
(defun helm-buffer-save-persistent ()helm-buffer-save-persistent644,26104
(defun helm-buffer-run-kill-persistent ()helm-buffer-run-kill-persistent652,26396
(defun helm-kill-marked-buffers (_ignore)helm-kill-marked-buffers660,26697
(defun helm-buffer-run-kill-buffers ()helm-buffer-run-kill-buffers668,26993
(defun helm-buffer-run-grep ()helm-buffer-run-grep675,27242
(defun helm-buffer-run-zgrep ()helm-buffer-run-zgrep682,27461
(defun helm-buffer-run-query-replace-regexp ()helm-buffer-run-query-replace-regexp689,27683
(defun helm-buffer-run-query-replace ()helm-buffer-run-query-replace696,27965
(defun helm-buffer-switch-other-window ()helm-buffer-switch-other-window703,28219
(defun helm-buffer-switch-other-frame ()helm-buffer-switch-other-frame710,28496
(defun helm-buffer-switch-to-elscreen ()helm-buffer-switch-to-elscreen717,28763
(defun helm-buffer-run-ediff ()helm-buffer-run-ediff724,29028
(defun helm-buffer-run-ediff-merge ()helm-buffer-run-ediff-merge731,29258
(defun helm-buffers-persistent-kill-1 (buffer)helm-buffers-persistent-kill-1738,29506
(defun helm-buffers--quote-truncated-buffer (buffer)helm-buffers--quote-truncated-buffer750,30019
(defun helm-buffers-persistent-kill (_buffer)helm-buffers-persistent-kill761,30349
(defun helm-buffers-list-persistent-action (candidate)helm-buffers-list-persistent-action777,31056
(defun helm-ediff-marked-buffers (_candidate &optional merge)helm-ediff-marked-buffers784,31387
(defun helm-ediff-marked-buffers-merge (candidate)helm-ediff-marked-buffers-merge804,32097
(defun helm-multi-occur-as-action (_candidate)helm-multi-occur-as-action809,32279
(defun helm-buffers-run-multi-occur ()helm-buffers-run-multi-occur822,32890
(defun helm-buffers-toggle-show-hidden-buffers ()helm-buffers-toggle-show-hidden-buffers829,33126
(defun helm-buffers-browse-project (buf)helm-buffers-browse-project848,34048
(defun helm-buffers-run-browse-project ()helm-buffers-run-browse-project853,34201
(defun helm-skip-boring-buffers (buffers _source)helm-skip-boring-buffers864,34535
(defun helm-shadow-boring-buffers (buffers _source)helm-shadow-boring-buffers869,34720
(defun helm-buffers-list ()helm-buffers-list876,34968
(defun helm-mini ()helm-mini890,35465
(defun helm-quit-and-helm-mini ()helm-quit-and-helm-mini902,35900

elpa/helm-20160616.217/helm-color.el,1024
(defun helm-custom-faces-init ()helm-custom-faces-init26,879
(defvar helm-source-customize-facehelm-source-customize-face40,1321
(defun helm-colors-init ()helm-colors-init55,1786
(defun helm-color-insert-name (candidate)helm-color-insert-name66,2083
(defun helm-color-kill-name (candidate)helm-color-kill-name70,2202
(defun helm-color-insert-rgb (candidate)helm-color-insert-rgb73,2290
(defun helm-color-kill-rgb (candidate)helm-color-kill-rgb77,2407
(defun helm-color-run-insert-name ()helm-color-run-insert-name80,2493
(defun helm-color-run-kill-name ()helm-color-run-kill-name86,2723
(defun helm-color-run-insert-rgb ()helm-color-run-insert-rgb92,2945
(defun helm-color-run-kill-rgb ()helm-color-run-kill-rgb98,3171
(defvar helm-color-maphelm-color-map104,3389
(defvar helm-source-colorshelm-source-colors113,3742
(defun helm-colors-get-name (candidate)helm-colors-get-name127,4257
(defun helm-colors-get-rgb (candidate)helm-colors-get-rgb138,4552
(defun helm-colors ()helm-colors150,4861

elpa/helm-20160616.217/helm-command.el,1414
(defgroup helm-command nilhelm-command27,915
(defcustom helm-M-x-requires-pattern 0helm-M-x-requires-pattern31,1022
(defcustom helm-M-x-always-save-history nilhelm-M-x-always-save-history37,1198
(defcustom helm-M-x-reverse-history nilhelm-M-x-reverse-history42,1362
(defcustom helm-M-x-fuzzy-match nilhelm-M-x-fuzzy-match47,1522
(defgroup helm-command-faces nilhelm-command-faces56,1673
(defface helm-M-x-key '((t (:foreground "orange" :underline t)))helm-M-x-key62,1816
(defvar helm-M-x-input-history nil)helm-M-x-input-history67,1960
(defun helm-get-mode-map-from-mode (mode)helm-get-mode-map-from-mode78,2354
(defun helm-M-x-current-mode-map-alist ()helm-M-x-current-mode-map-alist95,3181
(defun helm-M-x-transformer-1 (candidates &optional sort)helm-M-x-transformer-1102,3449
(defun helm-M-x-transformer (candidates _source)helm-M-x-transformer130,4831
(defun helm-M-x-transformer-hist (candidates _source)helm-M-x-transformer-hist134,4994
(defun helm-M-x--notify-prefix-arg ()helm-M-x--notify-prefix-arg138,5140
(defun helm-cmd--get-current-function-name ()helm-cmd--get-current-function-name144,5335
(defun helm-cmd--get-preconfigured-commands (&optional dir)helm-cmd--get-preconfigured-commands150,5541
(defun helm-M-x-read-extended-command (&optional collection history)helm-M-x-read-extended-command161,6036
(defun helm-M-x (arg &optional command-name)helm-M-x223,8844

elpa/helm-20160616.217/helm-config.el,441
(defgroup helm-config nilhelm-config30,1037
(defcustom helm-command-prefix-key "C-x c"helm-command-prefix-key34,1117
(defcustom helm-minibuffer-history-key "C-r"helm-minibuffer-history-key48,1605
(defvar helm-command-maphelm-command-map74,2688
(defvar helm-command-prefix)helm-command-prefix117,4997
(define-prefix-command 'helm-command-prefix)helm-command-prefix118,5026
(defun helm-configuration ()helm-configuration129,5217

elpa/helm-20160616.217/helm-dabbrev.el,1597
(defgroup helm-dabbrev nilhelm-dabbrev25,920
(defcustom helm-dabbrev-always-search-all thelm-dabbrev-always-search-all29,1021
(defcustom helm-dabbrev-max-length-result 20helm-dabbrev-max-length-result37,1286
(defcustom helm-dabbrev-ignored-buffers-regexpshelm-dabbrev-ignored-buffers-regexps45,1587
(defcustom helm-dabbrev-related-buffer-fn #'helm-dabbrev--same-major-mode-phelm-dabbrev-related-buffer-fn51,1828
(defcustom helm-dabbrev-major-mode-assoc nil helm-dabbrev-major-mode-assoc62,2312
(defcustom helm-dabbrev-lineno-around 30helm-dabbrev-lineno-around77,3019
(defcustom helm-dabbrev-cycle-threshold nilhelm-dabbrev-cycle-threshold82,3166
(defcustom helm-dabbrev-case-fold-search 'smarthelm-dabbrev-case-fold-search88,3401
(defvar helm-dabbrev-maphelm-dabbrev-map99,3819
(defvar helm-dabbrev--exclude-current-buffer-flag nil)helm-dabbrev--exclude-current-buffer-flag107,4042
(defvar helm-dabbrev--cache nil)helm-dabbrev--cache108,4097
(defvar helm-dabbrev--data nil)helm-dabbrev--data109,4130
(defvar helm-dabbrev--regexp "\\s-\\|\t\\|[(\[\{\"'`=<$;.]\\|\\s\\\\|^")helm-dabbrev--regexp110,4162
(defun helm-dabbrev--buffer-list ()helm-dabbrev--buffer-list114,4295
(defun helm-dabbrev--same-major-mode-p (start-buffer)helm-dabbrev--same-major-mode-p122,4628
(defun helm-dabbrev--collect (str limit ignore-case all)helm-dabbrev--collect126,4811
(defun helm-dabbrev--get-candidates (abbrev)helm-dabbrev--get-candidates201,8809
(defun helm-dabbrev-default-action (candidate)helm-dabbrev-default-action219,9743
(defun helm-dabbrev ()helm-dabbrev231,10094

elpa/helm-20160616.217/helm-easymenu.el,0

elpa/helm-20160616.217/helm-elisp-package.el,3209
(defgroup helm-el-package nilhelm-el-package24,894
(defcustom helm-el-package-initial-filter 'allhelm-el-package-initial-filter28,966
(defvar helm-el-package--show-only 'all)helm-el-package--show-only38,1408
(defvar helm-el-package--initialized-p nil)helm-el-package--initialized-p39,1449
(defvar helm-el-package--tabulated-list nil)helm-el-package--tabulated-list40,1493
(defvar helm-el-package--upgrades nil)helm-el-package--upgrades41,1538
(defvar helm-el-package--removable-packages nil)helm-el-package--removable-packages42,1577
(defvar package-menu-async) ; Only available on emacs-25.package-menu-async45,1664
(defun helm-el-package--init ()helm-el-package--init48,1797
(defun helm-el-package-describe (candidate)helm-el-package-describe81,3308
(defun helm-el-package-visit-homepage (candidate)helm-el-package-visit-homepage87,3559
(defun helm-el-run-visit-homepage ()helm-el-run-visit-homepage100,4143
(defun helm-el-package-install-1 (pkg-list)helm-el-package-install-1106,4334
(defun helm-el-package-install (_candidate)helm-el-package-install123,5282
(defun helm-el-run-package-install ()helm-el-run-package-install126,5383
(defun helm-el-package-uninstall-1 (pkg-list)helm-el-package-uninstall-1132,5569
(defun helm-el-package-uninstall (_candidate)helm-el-package-uninstall172,7626
(defun helm-el-run-package-uninstall ()helm-el-run-package-uninstall175,7731
(defun helm-el-package-menu--find-upgrades ()helm-el-package-menu--find-upgrades181,7923
(defun helm-el-package-upgrade-1 (pkg-list)helm-el-package-upgrade-1200,8819
(defun helm-el-package-upgrade (_candidate)helm-el-package-upgrade221,9661
(defun helm-el-run-package-upgrade ()helm-el-run-package-upgrade229,9959
(defun helm-el-package-upgrade-all ()helm-el-package-upgrade-all235,10145
(defun helm-el-package-upgrade-all-action (_candidate)helm-el-package-upgrade-all-action244,10576
(defun helm-el-run-package-upgrade-all ()helm-el-run-package-upgrade-all247,10665
(defun helm-el-package--transformer (candidates _source)helm-el-package--transformer253,10870
(defun helm-el-package-show-upgrade ()helm-el-package-show-upgrade279,12252
(defun helm-el-package-show-installed ()helm-el-package-show-installed286,12445
(defun helm-el-package-show-all ()helm-el-package-show-all293,12644
(defun helm-el-package-show-uninstalled ()helm-el-package-show-uninstalled300,12825
(defvar helm-el-package-maphelm-el-package-map307,13030
(defvar helm-source-list-el-package nil)helm-source-list-el-package322,13795
(defclass helm-list-el-package-source (helm-source-in-buffer)helm-list-el-package-source323,13836
(defun helm-el-package--action-transformer (actions candidate)helm-el-package--action-transformer335,14471
(defun helm-el-package--update ()helm-el-package--update356,15694
(defun helm-el-package-recompile (_pkg)helm-el-package-recompile359,15774
(defun helm-el-package-reinstall (_pkg)helm-el-package-reinstall369,16300
(defun helm-el-run-package-reinstall ()helm-el-run-package-reinstall390,17398
(defun helm-list-elisp-packages (arg)helm-list-elisp-packages397,17605
(defun helm-list-elisp-packages-no-fetch ()helm-list-elisp-packages-no-fetch408,18037

elpa/helm-20160616.217/helm-elisp.el,5666
(defgroup helm-elisp nilhelm-elisp36,1184
(defcustom helm-turn-on-show-completion thelm-turn-on-show-completion40,1281
(defcustom helm-show-completion-use-special-display thelm-show-completion-use-special-display45,1434
(defcustom helm-show-completion-min-window-height 7helm-show-completion-min-window-height52,1682
(defcustom helm-lisp-quoted-function-listhelm-lisp-quoted-function-list58,1888
(defcustom helm-lisp-unquoted-function-listhelm-lisp-unquoted-function-list67,2227
(defcustom helm-apropos-fuzzy-match nilhelm-apropos-fuzzy-match74,2464
(defcustom helm-lisp-fuzzy-completion nilhelm-lisp-fuzzy-completion79,2603
(defcustom helm-apropos-function-list '(helm-def-source--emacs-commandshelm-apropos-function-list87,2936
(defgroup helm-elisp-faces nilhelm-elisp-faces102,3588
(defface helm-lisp-show-completionhelm-lisp-show-completion108,3725
(defface helm-lisp-completion-infohelm-lisp-completion-info113,3894
(defcustom helm-elisp-help-functionhelm-elisp-help-function118,4047
(defvar helm-show-completion-overlay nil)helm-show-completion-overlay132,4486
(defun helm-show-completion ()helm-show-completion135,4577
(defun helm-show-completion-init-overlay (beg end)helm-show-completion-init-overlay141,4786
(defun helm-show-completion-display-function (buffer &rest _args)helm-show-completion-display-function147,5051
(defmacro with-helm-show-completion (beg end &rest body)with-helm-show-completion166,6080
(defun helm-lisp-completion--predicate-at-point (beg)helm-lisp-completion--predicate-at-point201,7466
(defun helm-thing-before-point (&optional limits regexp)helm-thing-before-point238,9172
(defun helm-bounds-of-thing-before-point (&optional regexp)helm-bounds-of-thing-before-point256,9843
(defun helm-insert-completion-at-point (beg end str)helm-insert-completion-at-point261,10046
(defvar helm-lisp-completion--cache nil)helm-lisp-completion--cache276,10627
(defvar helm-lgst-len nil)helm-lgst-len277,10668
(defun helm-lisp-completion-at-point ()helm-lisp-completion-at-point279,10710
(defun helm-lisp-completion-persistent-action (candidate &optional name)helm-lisp-completion-persistent-action325,13042
(defun helm-lisp-completion-persistent-help ()helm-lisp-completion-persistent-help331,13338
(defun helm-elisp--show-help-1 (candidate &optional name)helm-elisp--show-help-1337,13637
(defun helm-elisp-show-help (candidate &optional name)helm-elisp-show-help350,14188
(defun helm-elisp-show-doc-modeline (candidate &optional name)helm-elisp-show-doc-modeline357,14480
(defun helm-lisp-completion-transformer (candidates _source)helm-lisp-completion-transformer367,14844
(defun helm-get-first-line-documentation (sym &optional name)helm-get-first-line-documentation382,15490
(defun helm-complete-file-name-at-point (&optional force)helm-complete-file-name-at-point407,16516
(defun helm-lisp-indent ()helm-lisp-indent435,17691
(defun helm-lisp-completion-or-file-name-at-point ()helm-lisp-completion-or-file-name-at-point445,18092
(defun helm-apropos-init (test default)helm-apropos-init461,18637
(defun helm-apropos-init-faces (default)helm-apropos-init-faces472,19078
(defun helm-apropos-default-sort-fn (candidates _source)helm-apropos-default-sort-fn489,19729
(defun helm-def-source--emacs-variables (&optional default)helm-def-source--emacs-variables494,19885
(defun helm-def-source--emacs-faces (&optional default)helm-def-source--emacs-faces528,21442
(defun helm-def-source--helm-attributes (&optional _default)helm-def-source--helm-attributes551,22469
(defun helm-def-source--emacs-commands (&optional default)helm-def-source--emacs-commands569,23290
(defun helm-def-source--emacs-functions (&optional default)helm-def-source--emacs-functions585,24040
(defun helm-def-source--eieio-classes (&optional default)helm-def-source--eieio-classes606,25062
(defun helm-def-source--eieio-generic (&optional default)helm-def-source--eieio-generic624,25891
(defun helm-info-lookup-symbol-1 (c)helm-info-lookup-symbol-1642,26741
(defun helm-info-lookup-symbol (candidate)helm-info-lookup-symbol654,27158
(defun helm-elisp--persistent-help (candidate fun &optional name)helm-elisp--persistent-help657,27269
(defun helm-apropos (default)helm-apropos675,28094
(defvar helm-source-advicehelm-source-advice691,28651
(defun helm-advice-candidates ()helm-advice-candidates700,28968
(defun helm-advice-persistent-action (func-class-advice)helm-advice-persistent-action715,29680
(defun helm-advice-toggle (func-class-advice)helm-advice-toggle720,29858
(defun helm-advice-update-current-display-string ()helm-advice-update-current-display-string732,30298
(defun helm-manage-advice ()helm-manage-advice741,30637
(defun helm-locate-library-scan-list ()helm-locate-library-scan-list750,30836
(defun helm-locate-library ()helm-locate-library759,31176
(defun helm-set-variable (var)helm-set-variable775,32008
(defclass helm-absolute-time-timers-class (helm-source-sync helm-type-timers)helm-absolute-time-timers-class788,32467
(defvar helm-source-absolute-time-timershelm-source-absolute-time-timers797,32789
(defclass helm-idle-time-timers-class (helm-source-sync helm-type-timers)helm-idle-time-timers-class800,32909
(defvar helm-source-idle-time-timershelm-source-idle-time-timers809,33232
(defun helm-elisp--format-timer (timer)helm-elisp--format-timer812,33340
(defun helm-timers ()helm-timers825,33900
(defun helm-btf--usable-p ()helm-btf--usable-p836,34147
(defvar helm-source-complex-command-historyhelm-source-complex-command-history877,35779
(defun helm-complex-command-history ()helm-complex-command-history899,36875

elpa/helm-20160616.217/helm-elscreen.el,593
(defun helm-find-buffer-on-elscreen (candidate)helm-find-buffer-on-elscreen27,1124
(defun helm-elscreen-find-file (file)helm-elscreen-find-file39,1687
(defclass helm-source-elscreen (helm-source-sync)helm-source-elscreen43,1816
(defclass helm-source-elscreen-history (helm-source-elscreen)helm-source-elscreen-history66,2657
(defvar helm-source-elscreen-listhelm-source-elscreen-list76,3054
(defvar helm-source-elscreen-history-listhelm-source-elscreen-history-list79,3144
(defun helm-elscreen ()helm-elscreen83,3273
(defun helm-elscreen-history ()helm-elscreen-history89,3438

elpa/helm-20160616.217/helm-eshell.el,625
(defgroup helm-eshell nilhelm-eshell43,1617
(defvar helm-eshell-history-maphelm-eshell-history-map48,1702
(defvar helm-esh-completion-maphelm-esh-completion-map55,1905
(defclass helm-esh-source (helm-source-sync)helm-esh-source63,2109
(defvar helm-ec-target "")helm-ec-target91,3194
(defun helm-ec-insert (candidate)helm-ec-insert92,3221
(defun helm-esh-get-candidates ()helm-esh-get-candidates110,4067
(defclass helm-eshell-history-source (helm-source-sync)helm-eshell-history-source165,6807
(defun helm-esh-pcomplete ()helm-esh-pcomplete187,7552
(defun helm-eshell-history ()helm-eshell-history235,9763

elpa/helm-20160616.217/helm-eval.el,1104
(defgroup helm-eval nilhelm-eval26,901
(defcustom helm-eldoc-in-minibuffer-show-fnhelm-eldoc-in-minibuffer-show-fn30,996
(defcustom helm-show-info-in-mode-line-delay 12helm-show-info-in-mode-line-delay37,1192
(defvar helm-eldoc-active-minibuffers-list nil)helm-eldoc-active-minibuffers-list68,2382
(defvar helm-eval-expression-maphelm-eval-expression-map70,2431
(defun helm-build-evaluation-result-source ()helm-build-evaluation-result-source84,3071
(defun helm-eval-new-line-and-indent ()helm-eval-new-line-and-indent108,4506
(defun helm-eldoc-store-minibuffer ()helm-eldoc-store-minibuffer112,4595
(defun helm-eldoc-show-in-eval ()helm-eldoc-show-in-eval117,4817
(defun helm-show-info-in-mode-line (str)helm-show-info-in-mode-line134,5706
(defvar helm-source-calculation-resulthelm-source-calculation-result146,6044
(defun helm-eval-expression (arg)helm-eval-expression163,6990
(defvar eldoc-idle-delay)eldoc-idle-delay173,7363
(defun helm-eval-expression-with-eldoc ()helm-eval-expression-with-eldoc175,7404
(defun helm-calcul-expression ()helm-calcul-expression190,7978

elpa/helm-20160616.217/helm-external.el,953
(defgroup helm-external nilhelm-external26,921
(defcustom helm-raise-command nilhelm-raise-command30,1025
(defcustom helm-external-programs-associations nilhelm-external-programs-associations37,1270
(defcustom helm-default-external-file-browser "nautilus"helm-default-external-file-browser44,1578
(defvar helm-external-command-history nil)helm-external-command-history56,1971
(defvar helm-external-commands-list nilhelm-external-commands-list57,2014
(defun helm-external-commands-list-1 (&optional sort)helm-external-commands-list-162,2192
(defun helm-run-or-raise (exe &optional file)helm-run-or-raise83,3278
(defun helm-get-mailcap-for-file (filename)helm-get-mailcap-for-file118,4887
(defun helm-get-default-program-for-file (filename)helm-get-default-program-for-file128,5359
(defun helm-open-file-externally (file)helm-open-file-externally139,5942
(defun helm-run-external-command (program)helm-run-external-command185,8279

elpa/helm-20160616.217/helm-files.el,22643
(defvar recentf-list)recentf-list55,2175
(defvar helm-mm-matching-method)helm-mm-matching-method56,2197
(defvar dired-async-mode)dired-async-mode57,2230
(defgroup helm-files nilhelm-files60,2259
(defcustom helm-boring-file-regexp-listhelm-boring-file-regexp-list64,2348
(defcustom helm-for-files-preferred-listhelm-for-files-preferred-list75,2674
(defcustom helm-tramp-verbose 0helm-tramp-verbose86,2981
(defcustom helm-ff-auto-update-initial-value nilhelm-ff-auto-update-initial-value93,3214
(defcustom helm-ff-lynx-style-map thelm-ff-lynx-style-map103,3618
(defcustom helm-ff-history-max-length 100helm-ff-history-max-length110,3859
(defcustom helm-ff-fuzzy-matching thelm-ff-fuzzy-matching115,4000
(defcustom helm-ff-tramp-not-fancy thelm-ff-tramp-not-fancy121,4202
(defcustom helm-ff-exif-data-program "exiftran"helm-ff-exif-data-program127,4401
(defcustom helm-ff-exif-data-program-args "-d"helm-ff-exif-data-program-args132,4544
(defcustom helm-ff-newfile-prompt-p thelm-ff-newfile-prompt-p137,4682
(defcustom helm-ff-avfs-directory "~/.avfs"helm-ff-avfs-directory143,4843
(defcustom helm-ff-file-compressed-list '("gz" "bz2" "zip" "7z")helm-ff-file-compressed-list151,5144
(defcustom helm-ff-printer-list nilhelm-ff-printer-list156,5315
(defcustom helm-ff-transformer-show-only-basename thelm-ff-transformer-show-only-basename165,5718
(defcustom helm-ff-signal-error-on-dot-files thelm-ff-signal-error-on-dot-files172,5986
(defcustom helm-ff-search-library-in-sexp nilhelm-ff-search-library-in-sexp179,6248
(defcustom helm-tooltip-hide-delay 25helm-tooltip-hide-delay184,6400
(defcustom helm-ff-file-name-history-use-recentf nilhelm-ff-file-name-history-use-recentf189,6535
(defcustom helm-ff-skip-boring-files nilhelm-ff-skip-boring-files194,6704
(defcustom helm-ff-candidate-number-limit 5000helm-ff-candidate-number-limit201,6970
(defcustom helm-findutils-skip-boring-files thelm-findutils-skip-boring-files206,7148
(defcustom helm-findutils-search-full-path nilhelm-findutils-search-full-path211,7305
(defcustom helm-files-save-history-extra-sourceshelm-files-save-history-extra-sources217,7521
(defcustom helm-find-files-before-init-hook nilhelm-find-files-before-init-hook224,7768
(defcustom helm-find-files-after-init-hook nilhelm-find-files-after-init-hook229,7915
(defcustom helm-multi-files-toggle-locate-binding "C-c p"helm-multi-files-toggle-locate-binding234,8060
(defcustom helm-find-files-bookmark-prefix "Helm-find-files: "helm-find-files-bookmark-prefix239,8232
(defcustom helm-ff-guess-ffap-filenames nilhelm-ff-guess-ffap-filenames244,8390
(defcustom helm-ff-guess-ffap-urls thelm-ff-guess-ffap-urls251,8626
(defcustom helm-ff-no-preselect nilhelm-ff-no-preselect258,8862
(defcustom helm-substitute-in-filename-stay-on-remote nilhelm-substitute-in-filename-stay-on-remote263,9011
(defgroup helm-files-faces nilhelm-files-faces272,9206
(defface helm-ff-prefixhelm-ff-prefix278,9343
(defface helm-ff-executablehelm-ff-executable283,9518
(defface helm-ff-directoryhelm-ff-directory288,9665
(defface helm-ff-dotted-directoryhelm-ff-dotted-directory293,9832
(defface helm-ff-dotted-symlink-directoryhelm-ff-dotted-symlink-directory298,10009
(defface helm-ff-symlinkhelm-ff-symlink303,10209
(defface helm-ff-invalid-symlinkhelm-ff-invalid-symlink308,10350
(defface helm-ff-filehelm-ff-file313,10520
(defface helm-ff-dirshelm-ff-dirs318,10667
(defface helm-history-deletedhelm-history-deleted323,10849
(defface helm-history-remotehelm-history-remote328,11010
(defvar helm-find-files-maphelm-find-files-map337,11222
(defvar helm-read-file-maphelm-read-file-map398,15261
(defvar helm-find-files-doc-header " (\\<helm-find-files-map>\\[helm-find-files-up-one-level]: Go up one level)"helm-find-files-doc-header422,16554
(defvar helm-ff-auto-update-flag nilhelm-ff-auto-update-flag424,16750
(defvar helm-ff-last-expanded nilhelm-ff-last-expanded427,16928
(defvar helm-ff-default-directory nil)helm-ff-default-directory429,17006
(defvar helm-ff-history nil)helm-ff-history430,17045
(defvar helm-ff-cand-to-mark nil)helm-ff-cand-to-mark431,17074
(defvar helm-ff-url-regexphelm-ff-url-regexp432,17108
(defvar helm-tramp-file-name-regexp "\\`/\\([^[/:]+\\|[^/]+]\\):")helm-tramp-file-name-regexp435,17313
(defvar helm-marked-buffer-name "*helm marked*")helm-marked-buffer-name436,17380
(defvar helm-ff--auto-update-state nil)helm-ff--auto-update-state437,17429
(defvar helm-ff--deleting-char-backward nil)helm-ff--deleting-char-backward438,17469
(defvar helm-multi-files--toggle-locate nil)helm-multi-files--toggle-locate439,17514
(defvar helm-ff--move-to-first-real-candidate t)helm-ff--move-to-first-real-candidate440,17559
(defvar helm-find-files--toggle-bookmark nil)helm-find-files--toggle-bookmark441,17608
(defcustom helm-find-files-actionshelm-find-files-actions447,17683
(defvar helm-source-find-files nilhelm-source-find-files498,20391
(defclass helm-source-ffiles (helm-source-sync)helm-source-ffiles502,20505
(defun helm-ff-make-bookmark-record ()helm-ff-make-bookmark-record536,22074
(defun helm-ff-bookmark-jump (bookmark)helm-ff-bookmark-jump543,22325
(defun helm-ff-bookmark-set ()helm-ff-bookmark-set551,22692
(defun helm-dwim-target-directory ()helm-dwim-target-directory562,23064
(defun helm-ff--count-and-collect-dups (files)helm-ff--count-and-collect-dups579,23827
(defun helm-find-files-do-action (action)helm-find-files-do-action595,24566
(defun helm-find-files-copy (_candidate)helm-find-files-copy622,25983
(defun helm-find-files-backup (_candidate)helm-find-files-backup626,26101
(defun helm-find-files-rename (_candidate)helm-find-files-rename633,26431
(defun helm-find-files-symlink (_candidate)helm-find-files-symlink637,26555
(defun helm-find-files-relsymlink (_candidate)helm-find-files-relsymlink641,26682
(defun helm-find-files-hardlink (_candidate)helm-find-files-hardlink645,26818
(defun helm-find-files-other-window (_candidate)helm-find-files-other-window649,26948
(defun helm-find-files-byte-compile (_candidate)helm-find-files-byte-compile661,27439
(defun helm-find-files-load-files (_candidate)helm-find-files-load-files668,27726
(defun helm-find-files-ediff-files-1 (candidate &optional merge)helm-find-files-ediff-files-1674,27942
(defun helm-find-files-ediff-files (candidate)helm-find-files-ediff-files694,28893
(defun helm-find-files-ediff-merge-files (candidate)helm-find-files-ediff-merge-files697,28986
(defun helm-find-files-grep (_candidate)helm-find-files-grep700,29092
(defun helm-ff-git-grep (_candidate)helm-ff-git-grep705,29295
(defun helm-find-files-ag (_candidate)helm-find-files-ag709,29464
(defun helm-ff-zgrep (_candidate)helm-ff-zgrep713,29588
(defun helm-ff-pdfgrep (_candidate)helm-ff-pdfgrep717,29768
(defun helm-ff-etags-select (candidate)helm-ff-etags-select727,30233
(defun helm-find-files-switch-to-hist (_candidate)helm-find-files-switch-to-hist737,30723
(defvar eshell-command-aliases-list nil)eshell-command-aliases-list741,30837
(defvar helm-eshell-command-on-file-input-history nil)helm-eshell-command-on-file-input-history742,30878
(defun helm-find-files-eshell-command-on-file-1 (&optional map)helm-find-files-eshell-command-on-file-1743,30933
(defun helm-find-files-eshell-command-on-file (_candidate)helm-find-files-eshell-command-on-file846,35963
(defun helm-ff-switch-to-eshell (_candidate)helm-ff-switch-to-eshell851,36215
(defun helm-ff-serial-rename-action (method)helm-ff-serial-rename-action862,36634
(defun helm-ff-member-directory-p (file directory)helm-ff-member-directory-p901,38465
(defun helm-ff-serial-rename (_candidate)helm-ff-serial-rename955,41258
(defun helm-ff-serial-rename-by-symlink (_candidate)helm-ff-serial-rename-by-symlink962,41529
(defun helm-ff-serial-rename-by-copying (_candidate)helm-ff-serial-rename-by-copying969,41812
(defvar helm-ff-query-replace-fnames-history-from nil)helm-ff-query-replace-fnames-history-from976,42089
(defvar helm-ff-query-replace-fnames-history-to nil)helm-ff-query-replace-fnames-history-to977,42144
(defun helm-ff-query-replace-on-filenames (candidates)helm-ff-query-replace-on-filenames978,42197
(defun helm-ff-query-replace-on-marked (_candidate)helm-ff-query-replace-on-marked1044,45729
(defun helm-ff-run-query-replace-on-marked ()helm-ff-run-query-replace-on-marked1049,45934
(defun helm-ff-query-replace (_candidate)helm-ff-query-replace1055,46144
(defun helm-ff-query-replace-regexp (_candidate)helm-ff-query-replace-regexp1060,46377
(defun helm-ff-run-query-replace ()helm-ff-run-query-replace1065,46621
(defun helm-ff-run-query-replace-regexp ()helm-ff-run-query-replace-regexp1071,46801
(defun helm-ff-toggle-auto-update (_candidate)helm-ff-toggle-auto-update1077,47002
(defun helm-ff-run-toggle-auto-update ()helm-ff-run-toggle-auto-update1083,47273
(defun helm-ff-delete-char-backward ()helm-ff-delete-char-backward1090,47545
(defun helm-ff-delete-char-backward--exit-fn ()helm-ff-delete-char-backward--exit-fn1101,47928
(defun helm-ff-run-switch-to-history ()helm-ff-run-switch-to-history1105,48084
(defun helm-ff-run-grep ()helm-ff-run-grep1113,48390
(defun helm-ff-run-git-grep ()helm-ff-run-git-grep1120,48602
(defun helm-ff-run-grep-ag ()helm-ff-run-grep-ag1127,48822
(defun helm-ff-run-pdfgrep ()helm-ff-run-pdfgrep1133,48987
(defun helm-ff-run-zgrep ()helm-ff-run-zgrep1140,49203
(defun helm-ff-run-copy-file ()helm-ff-run-copy-file1147,49410
(defun helm-ff-run-rename-file ()helm-ff-run-rename-file1154,49637
(defun helm-ff-run-byte-compile-file ()helm-ff-run-byte-compile-file1161,49872
(defun helm-ff-run-load-file ()helm-ff-run-load-file1168,50131
(defun helm-ff-run-eshell-command-on-file ()helm-ff-run-eshell-command-on-file1175,50364
(defun helm-ff-run-ediff-file ()helm-ff-run-ediff-file1183,50653
(defun helm-ff-run-ediff-merge-file ()helm-ff-run-ediff-merge-file1190,50890
(defun helm-ff-run-symlink-file ()helm-ff-run-symlink-file1198,51156
(defun helm-ff-run-hardlink-file ()helm-ff-run-hardlink-file1205,51395
(defun helm-ff-run-delete-file ()helm-ff-run-delete-file1212,51638
(defun helm-ff-run-complete-fn-at-point ()helm-ff-run-complete-fn-at-point1219,51875
(defun helm-ff-run-switch-to-eshell ()helm-ff-run-switch-to-eshell1227,52159
(defun helm-ff-run-switch-other-window ()helm-ff-run-switch-other-window1234,52411
(defun helm-ff-run-switch-other-frame ()helm-ff-run-switch-other-frame1241,52679
(defun helm-ff-run-open-file-externally ()helm-ff-run-open-file-externally1248,52937
(defun helm-ff-run-open-file-with-default-tool ()helm-ff-run-open-file-with-default-tool1255,53210
(defun helm-ff-locate (candidate)helm-ff-locate1262,53504
(defun helm-ff-run-locate ()helm-ff-run-locate1276,54138
(defun helm-files-insert-as-org-link (candidate)helm-files-insert-as-org-link1283,54350
(defun helm-ff-run-insert-org-link ()helm-ff-run-insert-org-link1287,54470
(defun helm-ff-run-find-file-as-root ()helm-ff-run-find-file-as-root1293,54662
(defun helm-ff-run-find-alternate-file ()helm-ff-run-find-alternate-file1299,54851
(defun helm-ff-run-gnus-attach-files ()helm-ff-run-gnus-attach-files1305,55041
(defun helm-ff-run-etags ()helm-ff-run-etags1312,55305
(defvar lpr-printer-switch)lpr-printer-switch1319,55528
(defun helm-ff-print (_candidate)helm-ff-print1320,55556
(defun helm-ff-run-print-file ()helm-ff-run-print-file1370,57591
(defun helm-ff-checksum (file)helm-ff-checksum1377,57814
(defun helm-ff-toggle-basename (_candidate)helm-ff-toggle-basename1388,58249
(defun helm-ff-run-toggle-basename ()helm-ff-run-toggle-basename1397,58631
(defun helm-reduce-file-name (fname level)helm-reduce-file-name1404,58828
(defun helm-iter-reduce-fname (fname)helm-iter-reduce-fname1411,59137
(defvar helm-find-files--level-tree nil)helm-find-files--level-tree1422,59582
(defvar helm-find-files--level-tree-iterator nil)helm-find-files--level-tree-iterator1423,59623
(defun helm-find-files-up-one-level (arg)helm-find-files-up-one-level1424,59673
(defun helm-find-files-down-last-level ()helm-find-files-down-last-level1455,61144
(defun helm-find-files--reset-level-tree ()helm-find-files--reset-level-tree1470,61817
(defun helm-ff-retrieve-last-expanded ()helm-ff-retrieve-last-expanded1478,62169
(defun helm-ff-move-to-first-real-candidate ()helm-ff-move-to-first-real-candidate1493,62833
(defun helm-ff-update-when-only-one-matched ()helm-ff-update-when-only-one-matched1511,63590
(defun helm-ff-auto-expand-to-home-or-root ()helm-ff-auto-expand-to-home-or-root1593,68270
(defun helm-substitute-in-filename (fname)helm-substitute-in-filename1633,70616
(defun helm-point-file-in-dired (file)helm-point-file-in-dired1661,71944
(defun helm-create-tramp-name (fname)helm-create-tramp-name1669,72268
(defun helm-ff-before-action-hook-fn ()helm-ff-before-action-hook-fn1691,73307
(defun helm-ff-set-pattern (pattern)helm-ff-set-pattern1706,74021
(defun helm-find-files-get-candidates (&optional require-match)helm-find-files-get-candidates1756,76517
(defun helm-ff-directory-files (directory &optional full)helm-ff-directory-files1851,81700
(defun helm-ff-handle-backslash (fname)helm-ff-handle-backslash1879,83022
(defun helm-ff-fuzzy-matching-p ()helm-ff-fuzzy-matching-p1887,83284
(defun helm-ff--transform-pattern-for-completion (pattern)helm-ff--transform-pattern-for-completion1891,83414
(defun helm-dir-is-dot (dir)helm-dir-is-dot1939,85858
(defun helm-ff-save-history ()helm-ff-save-history1942,85943
(defun helm-files-save-file-name-history (&optional force)helm-files-save-file-name-history1953,86473
(defun helm-ff-valid-symlink-p (file)helm-ff-valid-symlink-p1973,87423
(defun helm-get-default-mode-for-file (filename)helm-get-default-mode-for-file1981,87696
(defun helm-ff-properties (candidate)helm-ff-properties1987,87962
(defun helm-ff-properties-persistent ()helm-ff-properties-persistent2029,90102
(defun helm-ff-persistent-delete ()helm-ff-persistent-delete2037,90405
(defun helm-ff-dot-file-p (file)helm-ff-dot-file-p2045,90696
(defun helm-ff-quick-delete (_candidate)helm-ff-quick-delete2049,90809
(defun helm-ff-kill-buffer-fname (candidate)helm-ff-kill-buffer-fname2074,91999
(defun helm-ff-kill-or-find-buffer-fname (candidate)helm-ff-kill-or-find-buffer-fname2083,92413
(defun helm-ff-run-kill-buffer-persistent ()helm-ff-run-kill-buffer-persistent2105,93377
(defun helm-ff-prefix-filename (fname &optional file-or-symlinkp new-file)helm-ff-prefix-filename2113,93696
(defun helm-ff-score-candidate-for-pattern (str pattern)helm-ff-score-candidate-for-pattern2131,94583
(defun helm-ff-sort-candidates (candidates _source)helm-ff-sort-candidates2136,94737
(defun helm-ff-filter-candidate-one-by-one (file)helm-ff-filter-candidate-one-by-one2166,96406
(defun helm-find-files-action-transformer (actions candidate)helm-find-files-action-transformer2240,99846
(defun helm-ff-goto-linum (candidate)helm-ff-goto-linum2275,101679
(defun helm-ff-gnus-attach-files (_candidate)helm-ff-gnus-attach-files2288,102272
(defvar image-dired-display-image-buffer)image-dired-display-image-buffer2294,102504
(defun helm-ff-rotate-current-image-1 (file &optional num-arg)helm-ff-rotate-current-image-12295,102546
(defun helm-ff-rotate-image-left (candidate)helm-ff-rotate-image-left2313,103410
(defun helm-ff-rotate-image-right (candidate)helm-ff-rotate-image-right2318,103581
(defun helm-ff-rotate-left-persistent ()helm-ff-rotate-left-persistent2323,103750
(defun helm-ff-rotate-right-persistent ()helm-ff-rotate-right-persistent2331,104040
(defun helm-ff-exif-data (candidate)helm-ff-exif-data2339,104334
(defun helm-find-files-persistent-action (candidate)helm-find-files-persistent-action2350,104869
(defun helm-find-files-recursive-dirs (directory &optional input)helm-find-files-recursive-dirs2439,109693
(defun helm-ff-recursive-dirs (_candidate)helm-ff-recursive-dirs2471,111181
(defun helm-ff-file-compressed-p (candidate)helm-ff-file-compressed-p2478,111461
(defun helm-insert-file-name-completion-at-point (candidate)helm-insert-file-name-completion-at-point2483,111641
(defun helm-find-files-1 (fname &optional preselect)helm-find-files-12537,114140
(defun helm-find-files-cleanup ()helm-find-files-cleanup2577,116015
(defun helm-find-files-toggle-to-bookmark ()helm-find-files-toggle-to-bookmark2584,116270
(defun helm-find-files-initial-input (&optional input)helm-find-files-initial-input2600,116952
(defun helm-find-files-input (file-at-pt thing-at-pt)helm-find-files-input2612,117496
(defun helm-ff-find-url-at-point ()helm-ff-find-url-at-point2642,118912
(defun helm-find-library-at-point ()helm-find-library-at-point2656,119594
(defun helm-ff--valid-default-directory ()helm-ff--valid-default-directory2684,120741
(defun helm-get-dest-fnames-from-list (flist dest-cand rename-dir-flag)helm-get-dest-fnames-from-list2761,124622
(defun helm-ff-maybe-mark-candidates ()helm-ff-maybe-mark-candidates2779,125439
(defun helm-file-buffers (filename)helm-file-buffers2801,126219
(defun helm-delete-file (file &optional error-if-dot-file-p synchro)helm-delete-file2809,126521
(defun helm-delete-marked-files (_ignore)helm-delete-marked-files2838,127830
(defun helm-find-file-or-marked (candidate)helm-find-file-or-marked2851,128381
(defun helm-shadow-boring-files (files)helm-shadow-boring-files2900,130823
(defun helm-skip-boring-files (files)helm-skip-boring-files2905,131034
(defun helm-skip-current-file (files)helm-skip-current-file2909,131193
(defun helm-w32-pathname-transformer (args)helm-w32-pathname-transformer2913,131323
(defun helm-transform-file-load-el (actions candidate)helm-transform-file-load-el2925,131709
(defun helm-transform-file-browse-url (actions candidate)helm-transform-file-browse-url2932,132007
(defun helm-multi-files-toggle-to-locate ()helm-multi-files-toggle-to-locate2942,132452
(defun helm-files-in-all-dired-candidates ()helm-files-in-all-dired-candidates2963,133249
(defclass helm-files-dired-source (helm-source-sync helm-type-file)helm-files-dired-source2973,133641
(defvar helm-source-files-in-all-diredhelm-source-files-in-all-dired2976,133775
(defvar file-cache-alist)file-cache-alist2983,133914
(defclass helm-file-cache (helm-source-in-buffer helm-type-file)helm-file-cache2985,133941
(defun helm-file-cache-get-candidates ()helm-file-cache-get-candidates2988,134062
(defvar helm-source-file-cache nil)helm-source-file-cache2994,134298
(defcustom helm-file-cache-fuzzy-match nilhelm-file-cache-fuzzy-match2996,134335
(defun helm-ff-cache-add-file (_candidate)helm-ff-cache-add-file3018,135129
(defun helm-ff-file-cache-remove-file-1 (file)helm-ff-file-cache-remove-file-13023,135291
(defun helm-ff-file-cache-remove-file (_file)helm-ff-file-cache-remove-file3034,135685
(defun helm-transform-file-cache (actions _candidate)helm-transform-file-cache3039,135872
(defvar helm-source-file-name-historyhelm-source-file-name-history3051,136216
(defvar helm-source--ff-file-name-history nilhelm-source--ff-file-name-history3058,136479
(defun helm-file-name-history-transformer (candidates _source)helm-file-name-history-transformer3062,136664
(defun helm-ff-file-name-history ()helm-ff-file-name-history3070,137033
(defvar helm-recentf--basename-flag nil)helm-recentf--basename-flag3107,138647
(defun helm-recentf-pattern-transformer (pattern)helm-recentf-pattern-transformer3109,138689
(defcustom helm-turn-on-recentf thelm-turn-on-recentf3121,139203
(defclass helm-recentf-source (helm-source-sync helm-type-file)helm-recentf-source3126,139332
(defmethod helm--setup-source :after ((source helm-recentf-source))helm--setup-source3139,140002
(defvar helm-source-recentf nilhelm-source-recentf3147,140411
(defcustom helm-recentf-fuzzy-match nilhelm-recentf-fuzzy-match3151,140563
(defvar helm--browse-project-cache (make-hash-table :test 'equal))helm--browse-project-cache3166,141090
(defvar helm-buffers-in-project-p)helm-buffers-in-project-p3167,141157
(defun helm-browse-project-get-buffers (root-directory)helm-browse-project-get-buffers3169,141193
(defun helm-browse-project-build-buffers-source (directory)helm-browse-project-build-buffers-source3180,141729
(defun helm-browse-project-find-files (directory &optional refresh)helm-browse-project-find-files3188,142076
(defun helm-browse-project (arg)helm-browse-project3220,143757
(defun helm-browse-project-get--root-dir (directory)helm-browse-project-get--root-dir3263,145604
(defun helm-ff-browse-project (_candidate)helm-ff-browse-project3271,146023
(defun helm-ff-run-browse-project ()helm-ff-run-browse-project3277,146246
(defun helm-ff-gid (_candidate)helm-ff-gid3283,146429
(defun helm-ff-run-gid ()helm-ff-run-gid3287,146538
(defvar session-file-alist)session-file-alist3297,146843
(defvar helm-source-sessionhelm-source-session3298,146871
(defun helm-highlight-files (files)helm-highlight-files3314,147424
(defclass helm-files-in-current-dir-source (helm-source-sync helm-type-file)helm-files-in-current-dir-source3345,148829
(defvar helm-source-files-in-current-dirhelm-source-files-in-current-dir3359,149573
(defvar helm-source-tracker-cand-incomplete nil "Contains incomplete candidate")helm-source-tracker-cand-incomplete3367,149773
(defun helm-source-tracker-transformer (candidates _source)helm-source-tracker-transformer3368,149854
(defvar helm-source-tracker-searchhelm-source-tracker-search3392,151165
(defclass helm-mac-spotlight-source (helm-source-async helm-type-file)helm-mac-spotlight-source3412,151971
(defvar helm-source-mac-spotlighthelm-source-mac-spotlight3419,152258
(defvar helm-source-findutilshelm-source-findutils3428,152449
(defun helm-findutils-transformer (candidates _source)helm-findutils-transformer3441,152974
(defun helm-find--build-cmd-line ()helm-find--build-cmd-line3461,153979
(defun helm-find-shell-command-fn ()helm-find-shell-command-fn3491,155540
(defun helm-find-1 (dir)helm-find-13521,156902
(defun helm-ff-find-sh-command (_candidate)helm-ff-find-sh-command3529,157204
(defun helm-ff-run-find-sh-command ()helm-ff-run-find-sh-command3533,157336
(defun helm-find (arg)helm-find3545,157639
(defvar org-directory)org-directory3570,158554
(defun helm-find-files (arg)helm-find-files3572,158592
(defun helm-for-files ()helm-for-files3602,160374
(defun helm-multi-files ()helm-multi-files3614,160798
(defun helm-recentf ()helm-recentf3639,161869

elpa/helm-20160616.217/helm-font.el,1518
(defgroup helm-font nilhelm-font24,866
(defvar helm-ucs-maphelm-ucs-map28,958
(defface helm-ucs-charhelm-ucs-char38,1377
(defvar helm-xfonts-cache nil)helm-xfonts-cache46,1552
(defvar helm-previous-font nil)helm-previous-font47,1583
(defvar helm-source-xfontshelm-source-xfonts48,1615
(defvar helm-ucs--max-len nil)helm-ucs--max-len74,2758
(defvar helm-ucs--names nil)helm-ucs--names75,2789
(defvar helm-ucs-history nil)helm-ucs-history76,2818
(defun helm-calculate-ucs-max-len ()helm-calculate-ucs-max-len78,2849
(defun helm-ucs-init ()helm-ucs-init85,3157
(defun helm-ucs-forward-char (_candidate)helm-ucs-forward-char103,3915
(defun helm-ucs-backward-char (_candidate)helm-ucs-backward-char107,4009
(defun helm-ucs-delete-backward (_candidate)helm-ucs-delete-backward111,4105
(defun helm-ucs-insert (candidate n)helm-ucs-insert115,4202
(defun helm-ucs-insert-char (candidate)helm-ucs-insert-char122,4413
(defun helm-ucs-insert-code (candidate)helm-ucs-insert-code125,4487
(defun helm-ucs-insert-name (candidate)helm-ucs-insert-name128,4561
(defun helm-ucs-persistent-insert ()helm-ucs-persistent-insert131,4635
(defun helm-ucs-persistent-forward ()helm-ucs-persistent-forward138,4867
(defun helm-ucs-persistent-backward ()helm-ucs-persistent-backward145,5104
(defun helm-ucs-persistent-delete ()helm-ucs-persistent-delete152,5338
(defvar helm-source-ucshelm-source-ucs159,5574
(defun helm-select-xfont ()helm-select-xfont176,6365
(defun helm-ucs ()helm-ucs183,6544

elpa/helm-20160616.217/helm-grep.el,7717
(defvar helm--ansi-color-regexp)helm--ansi-color-regexp33,1272
(defgroup helm-grep nilhelm-grep36,1308
(defcustom helm-grep-default-commandhelm-grep-default-command40,1403
(defcustom helm-grep-default-recurse-commandhelm-grep-default-recurse-command103,4050
(defcustom helm-default-zgrep-commandhelm-default-zgrep-command110,4329
(defcustom helm-pdfgrep-default-commandhelm-pdfgrep-default-command120,4694
(defcustom helm-grep-use-ioccur-style-keys thelm-grep-use-ioccur-style-keys128,4983
(defcustom helm-pdfgrep-default-read-command nilhelm-pdfgrep-default-read-command133,5110
(defcustom helm-grep-max-length-history 100helm-grep-max-length-history144,5456
(defcustom helm-zgrep-file-extension-regexphelm-zgrep-file-extension-regexp149,5598
(defcustom helm-grep-preferred-ext nilhelm-grep-preferred-ext155,5775
(defcustom helm-grep-save-buffer-name-no-confirm nilhelm-grep-save-buffer-name-no-confirm160,5907
(defcustom helm-grep-ignored-fileshelm-grep-ignored-files165,6051
(defcustom helm-grep-ignored-directorieshelm-grep-ignored-directories174,6419
(defcustom helm-grep-truncate-lines thelm-grep-truncate-lines180,6617
(defcustom helm-grep-file-path-style 'basenamehelm-grep-file-path-style185,6757
(defcustom helm-grep-actionshelm-grep-actions196,7227
(defgroup helm-grep-faces nilhelm-grep-faces213,7712
(defface helm-grep-matchhelm-grep-match219,7846
(defface helm-grep-filehelm-grep-file225,8037
(defface helm-grep-linenohelm-grep-lineno231,8201
(defface helm-grep-finishhelm-grep-finish236,8340
(defface helm-grep-cmd-linehelm-grep-cmd-line241,8475
(defvar helm-grep-maphelm-grep-map250,8646
(defvar helm-pdfgrep-maphelm-pdfgrep-map265,9376
(defvar helm-grep-mode-maphelm-grep-mode-map274,9699
(defvar helm-rzgrep-cache (make-hash-table :test 'equal))helm-rzgrep-cache292,10491
(defvar helm-grep-default-function 'helm-grep-init)helm-grep-default-function293,10549
(defvar helm-zgrep-recurse-flag nil)helm-zgrep-recurse-flag294,10601
(defvar helm-grep-history nil)helm-grep-history295,10638
(defvar helm-grep-last-targets nil)helm-grep-last-targets296,10669
(defvar helm-grep-include-files nil)helm-grep-include-files297,10705
(defvar helm-grep-in-recurse nil)helm-grep-in-recurse298,10742
(defvar helm-grep-use-zgrep nil)helm-grep-use-zgrep299,10776
(defvar helm-grep-default-directory-fn nilhelm-grep-default-directory-fn300,10809
(defvar helm-pdfgrep-targets nil)helm-pdfgrep-targets303,10994
(defvar helm-grep-last-cmd-line nil)helm-grep-last-cmd-line304,11028
(defvar helm-grep-split-line-regexp "^\\([[:lower:][:upper:]]?:?.*?\\):\\([0-9]+\\):\\(.*\\)")helm-grep-split-line-regexp305,11065
(defun helm-grep-prepare-candidates (candidates in-directory)helm-grep-prepare-candidates311,11178
(defun helm-grep-command (&optional recursive grep)helm-grep-command367,14304
(defun helm-grep--prepare-cmd-line (only-files &optional include zgrep)helm-grep--prepare-cmd-line389,15287
(defun helm-grep-init (cmd-line)helm-grep-init450,18510
(defun helm-grep-collect-candidates ()helm-grep-collect-candidates522,22503
(defun helm-grep-action (candidate &optional where mark)helm-grep-action534,22855
(defun helm-grep-persistent-action (candidate)helm-grep-persistent-action579,25091
(defun helm-grep-other-window (candidate)helm-grep-other-window587,25371
(defun helm-grep-other-frame (candidate)helm-grep-other-frame591,25511
(defun helm-grep-jump-elscreen (candidate)helm-grep-jump-elscreen595,25648
(defun helm-goto-next-or-prec-file (n)helm-goto-next-or-prec-file599,25781
(defun helm-goto-precedent-file ()helm-goto-precedent-file638,27579
(defun helm-goto-next-file ()helm-goto-next-file647,27829
(defun helm-grep-run-default-action ()helm-grep-run-default-action653,27987
(defun helm-grep-run-other-window-action ()helm-grep-run-other-window-action660,28219
(defun helm-grep-run-other-frame-action ()helm-grep-run-other-frame-action667,28477
(defun helm-grep-run-save-buffer ()helm-grep-run-save-buffer674,28731
(defun helm-grep-save-results (candidate)helm-grep-save-results685,28995
(defun helm-grep-save-results-1 ()helm-grep-save-results-1688,29076
(define-derived-mode helm-grep-modehelm-grep-mode723,30732
(defun helm-grep-mode--revert-buffer-function (&optional _ignore-auto _noconfirm)helm-grep-mode--revert-buffer-function735,31154
(defun helm-grep-mode--sentinel (process event)helm-grep-mode--sentinel749,31797
(defun helm-gm-next-file ()helm-gm-next-file767,32693
(defun helm-gm-precedent-file ()helm-gm-precedent-file771,32773
(defun helm-grep-mode-jump ()helm-grep-mode-jump775,32859
(defun helm-grep-mode-jump-other-window-1 (arg)helm-grep-mode-jump-other-window-1780,32980
(defun helm-grep-mode-jump-other-window-forward ()helm-grep-mode-jump-other-window-forward790,33300
(defun helm-grep-mode-jump-other-window-backward ()helm-grep-mode-jump-other-window-backward794,33410
(defun helm-grep-mode-jump-other-window ()helm-grep-mode-jump-other-window798,33522
(defun helm-grep-hack-types ()helm-grep-hack-types809,33775
(defun helm-grep-ack-types-transformer (candidates _source)helm-grep-ack-types-transformer829,34728
(defvar helm-grep-ack-types-cache nil)helm-grep-ack-types-cache836,34929
(defun helm-grep-read-ack-type ()helm-grep-read-ack-type837,34968
(defun helm-grep-guess-extensions (files)helm-grep-guess-extensions856,35620
(defun helm-grep-get-file-extensions (files)helm-grep-get-file-extensions876,36577
(defclass helm-grep-class (helm-source-async)helm-grep-class897,37561
(defvar helm-source-grep nil)helm-source-grep911,38173
(defun helm-do-grep-1 (targets &optional recurse grep exts default-input input)helm-do-grep-1913,38204
(defun helm-ff-zgrep-1 (flist recursive)helm-ff-zgrep-11006,42315
(defun helm-grep-split-line (line)helm-grep-split-line1028,43123
(defun helm-grep--filter-candidate-1 (candidate &optional dir)helm-grep--filter-candidate-11039,43601
(defun helm-grep-filter-one-by-one (candidate)helm-grep-filter-one-by-one1066,44920
(defun helm-grep-highlight-match (str &optional multi-match)helm-grep-highlight-match1080,45550
(defun helm-grep-buffers-1 (candidate &optional zgrep)helm-grep-buffers-11112,46912
(defun helm-grep-buffers (candidate)helm-grep-buffers1147,48516
(defun helm-zgrep-buffers (candidate)helm-zgrep-buffers1151,48617
(defvar helm-pdfgrep-default-function 'helm-pdfgrep-init)helm-pdfgrep-default-function1160,48861
(defun helm-pdfgrep-init (only-files)helm-pdfgrep-init1161,48919
(defun helm-do-pdfgrep-1 (only)helm-do-pdfgrep-11201,50844
(defun helm-pdfgrep-action (candidate)helm-pdfgrep-action1233,52372
(defun helm-pdfgrep-action-1 (_split pageno fname)helm-pdfgrep-action-11236,52449
(defcustom helm-grep-ag-commandhelm-grep-ag-command1248,52826
(defun helm-grep--ag-command ()helm-grep--ag-command1265,53359
(defun helm-grep-ag-get-types ()helm-grep-ag-get-types1268,53437
(defun helm-grep-ag-prepare-cmd-line (pattern directory &optional type)helm-grep-ag-prepare-cmd-line1278,53850
(defun helm-grep-ag-init (directory &optional type)helm-grep-ag-init1296,54771
(defclass helm-grep-ag-class (helm-source-async)helm-grep-ag-class1344,57269
(defvar helm-source-grep-ag nil)helm-source-grep-ag1355,57705
(defun helm-grep-ag-1 (directory &optional type)helm-grep-ag-11357,57739
(defun helm-grep-ag (directory with-types)helm-grep-ag1371,58389
(defcustom helm-grep-git-grep-commandhelm-grep-git-grep-command1387,58943
(defun helm-grep-git-1 (directory &optional all default input)helm-grep-git-11402,59604
(defun helm-do-grep-ag (arg)helm-do-grep-ag1422,60577
(defun helm-grep-do-git-grep (arg)helm-grep-do-git-grep1430,60841

elpa/helm-20160616.217/helm-help.el,2101
(defvar helm-org-headings--nofilename)helm-org-headings--nofilename21,821
(defgroup helm-help nilhelm-help25,931
(defface helm-helperhelm-helper29,1002
(defcustom helm-documentation-file "~/.emacs.d/helm-doc.org"helm-documentation-file34,1122
(defvar helm-help--string-list '(helm-help-messagehelm-help--string-list39,1278
(defun helm-documentation (arg)helm-documentation63,2522
(defvar helm-buffer-help-messagehelm-buffer-help-message92,3553
(defvar helm-ff-help-messagehelm-ff-help-message207,8282
(defvar helm-read-file-name-help-messagehelm-read-file-name-help-message516,22088
(defvar helm-generic-file-help-messagehelm-generic-file-help-message597,25086
(defvar helm-grep-help-messagehelm-grep-help-message657,27280
(defvar helm-pdfgrep-help-messagehelm-pdfgrep-help-message741,30711
(defvar helm-etags-help-messagehelm-etags-help-message753,30976
(defvar helm-ucs-help-messagehelm-ucs-help-message765,31233
(defvar helm-bookmark-help-messagehelm-bookmark-help-message783,31636
(defvar helm-esh-help-messagehelm-esh-help-message796,32001
(defvar helm-buffers-ido-virtual-help-messagehelm-buffers-ido-virtual-help-message837,33067
(defvar helm-moccur-help-messagehelm-moccur-help-message852,33510
(defvar helm-top-help-messagehelm-top-help-message916,35522
(defvar helm-apt-help-messagehelm-apt-help-message931,35838
(defvar helm-el-package-help-messagehelm-el-package-help-message946,36225
(defvar helm-M-x-help-messagehelm-M-x-help-message1003,38590
(defvar helm-imenu-help-messagehelm-imenu-help-message1021,39041
(defvar helm-colors-help-messagehelm-colors-help-message1034,39265
(defvar helm-semantic-help-messagehelm-semantic-help-message1047,39604
(defvar helm-kmacro-help-messagehelm-kmacro-help-message1058,39727
(defvar helm-comp-read-mode-line "\helm-comp-read-mode-line1081,40263
(defvar helm-read-file-name-mode-line-string "\helm-read-file-name-mode-line-string1092,40535
(defvar helm-top-mode-line "\helm-top-mode-line1104,40882
(defun helm-describe-helm-attribute (helm-attribute)helm-describe-helm-attribute1118,41143

elpa/helm-20160616.217/helm-id-utils.el,472
(defgroup helm-id-utils nilhelm-id-utils23,857
(defcustom helm-gid-program "gid"helm-gid-program27,960
(defcustom helm-gid-db-file-name "ID"helm-gid-db-file-name36,1318
(defun helm-gid-candidates-process ()helm-gid-candidates-process41,1469
(defun helm-gid-filtered-candidate-transformer (candidates _source)helm-gid-filtered-candidate-transformer72,3047
(defclass helm-gid-source (helm-source-async)helm-gid-source77,3286
(defun helm-gid ()helm-gid105,4486

elpa/helm-20160616.217/helm-imenu.el,1993
(defgroup helm-imenu nilhelm-imenu28,924
(defcustom helm-imenu-delimiter " / "helm-imenu-delimiter32,1021
(defcustom helm-imenu-execute-action-at-once-if-onehelm-imenu-execute-action-at-once-if-one37,1162
(defcustom helm-imenu-lynx-style-map thelm-imenu-lynx-style-map43,1347
(defcustom helm-imenu-all-buffer-assoc nilhelm-imenu-all-buffer-assoc48,1469
(defvar helm-imenu-maphelm-imenu-map58,1889
(defun helm-imenu-next-or-previous-section (n)helm-imenu-next-or-previous-section68,2312
(defun helm-imenu-next-section ()helm-imenu-next-section84,2944
(defun helm-imenu-previous-section ()helm-imenu-previous-section88,3038
(defvar helm-cached-imenu-alist nil)helm-cached-imenu-alist94,3153
(defvar helm-cached-imenu-candidates nil)helm-cached-imenu-candidates97,3245
(defvar helm-cached-imenu-tick nil)helm-cached-imenu-tick100,3347
(defvar helm-source-imenu nil "See (info \"(emacs)Imenu\")")helm-source-imenu104,3439
(defvar helm-source-imenu-all nil)helm-source-imenu-all105,3500
(defclass helm-imenu-source (helm-source-sync)helm-imenu-source107,3536
(defcustom helm-imenu-fuzzy-match nilhelm-imenu-fuzzy-match116,3939
(defun helm-imenu--maybe-switch-to-buffer (candidate)helm-imenu--maybe-switch-to-buffer126,4266
(defun helm-imenu--execute-action-at-once-p ()helm-imenu--execute-action-at-once-p130,4395
(defun helm-imenu-action (candidate)helm-imenu-action142,4749
(defun helm-imenu-persistent-action (candidate)helm-imenu-persistent-action155,5262
(defun helm-imenu-candidates (&optional buffer)helm-imenu-candidates161,5468
(defun helm-imenu-candidates-in-all-buffers ()helm-imenu-candidates-in-all-buffers173,6014
(defun helm-imenu--candidates-1 (alist)helm-imenu--candidates-1192,6850
(defun helm-imenu--get-prop (item)helm-imenu--get-prop208,7762
(defun helm-imenu-transformer (candidates)helm-imenu-transformer221,8226
(defun helm-imenu ()helm-imenu241,9113
(defun helm-imenu-in-all-buffers ()helm-imenu-in-all-buffers258,9687

elpa/helm-20160616.217/helm-info.el,1425
(defvar Info-history)Info-history29,1109
(defvar Info-directory-list)Info-directory-list30,1131
(defgroup helm-info nilhelm-info34,1177
(defcustom helm-info-default-sourceshelm-info-default-sources38,1272
(defun helm-info-goto (node-line)helm-info-goto83,3108
(defun helm-info-display-to-real (line)helm-info-display-to-real87,3214
(defclass helm-info-source (helm-source-in-buffer)helm-info-source94,3578
(defmacro helm-build-info-source (fname &rest args)helm-build-info-source103,3920
(defun helm-build-info-index-command (name doc source buffer)helm-build-info-index-command107,4075
(defun helm-define-info-index-sources (var-value &optional commands)helm-define-info-index-sources119,4502
(defun helm-info-index-set (var value)helm-info-index-set132,5167
(defvar helm-info-searched (make-ring 32)helm-info-searched141,5424
(defun helm-get-info-files ()helm-get-info-files144,5512
(defcustom helm-default-info-index-listhelm-default-info-index-list160,6161
(defun helm-info-search-index (candidate)helm-info-search-index167,6358
(defun helm-def-source--info-files ()helm-def-source--info-files176,6700
(defun helm-info ()helm-info189,7109
(defvar helm-info--pages-cache nilhelm-info--pages-cache205,7709
(defvar helm-source-info-pageshelm-source-info-pages208,7790
(defun helm-info-pages-init ()helm-info-pages-init218,8190
(defun helm-info-at-point ()helm-info-at-point233,8706

elpa/helm-20160616.217/helm-locate.el,2123
(defgroup helm-locate nilhelm-locate30,1031
(defcustom helm-locate-db-file-regexp "m?locate\.db$"helm-locate-db-file-regexp34,1130
(defcustom helm-ff-locate-db-filename "locate.db"helm-ff-locate-db-filename40,1298
(defcustom helm-locate-command nilhelm-locate-command49,1686
(defcustom helm-locate-create-db-commandhelm-locate-create-db-command71,2462
(defcustom helm-locate-case-fold-search helm-case-fold-searchhelm-locate-case-fold-search77,2625
(defcustom helm-locate-fuzzy-match nilhelm-locate-fuzzy-match88,3068
(defcustom helm-locate-project-list nilhelm-locate-project-list93,3192
(defcustom helm-locate-recursive-dirs-command "locate -i -e -A --regex ^%s %s.*$"helm-locate-recursive-dirs-command100,3431
(defvar helm-generic-files-maphelm-generic-files-map107,3691
(defface helm-locate-finishhelm-locate-finish137,5289
(defun helm-ff-find-locatedb (&optional from-ff)helm-ff-find-locatedb143,5434
(defun helm-locate-create-db-default-function (db-name directory)helm-locate-create-db-default-function165,6347
(defvar helm-locate-create-db-functionhelm-locate-create-db-function171,6629
(defun helm-locate-1 (&optional localdb init from-ff default)helm-locate-1177,6848
(defun helm-locate-set-command ()helm-locate-set-command220,9150
(defvar helm-file-name-history nil)helm-file-name-history230,9496
(defun helm-locate-with-db (&optional db initial-input default)helm-locate-with-db231,9532
(defun helm-locate-init ()helm-locate-init261,10774
(defclass helm-locate-source (helm-source-async helm-type-file)helm-locate-source318,13685
(defvar helm-source-locatehelm-source-locate326,14041
(defun helm-locate-pattern-transformer (pattern)helm-locate-pattern-transformer330,14178
(defun helm-locate-find-dbs-in-projects (&optional update)helm-locate-find-dbs-in-projects340,14579
(defclass helm-locate-subdirs-source (helm-source-in-buffer)helm-locate-subdirs-source359,15372
(defun helm-locate-init-subdirs ()helm-locate-init-subdirs368,15648
(defun helm-projects-find-files (update)helm-projects-find-files382,16092
(defun helm-locate (arg)helm-locate396,16661

elpa/helm-20160616.217/helm-man.el,733
(defvar woman-topic-all-completions)woman-topic-all-completions24,853
(defvar woman-manpath)woman-manpath25,890
(defvar woman-path)woman-path26,913
(defvar woman-expanded-directory-path)woman-expanded-directory-path27,933
(defgroup helm-man nilhelm-man35,1390
(defcustom helm-man-or-woman-function 'Man-getpage-in-backgroundhelm-man-or-woman-function39,1471
(defcustom helm-man-format-switches "-l %s"helm-man-format-switches46,1756
(defvar helm-man--pages nilhelm-man--pages56,2112
(defun helm-man-default-action (candidate)helm-man-default-action61,2239
(defun helm-man--init ()helm-man--init78,3040
(defvar helm-source-man-pageshelm-source-man-pages89,3480
(defun helm-man-woman (arg)helm-man-woman99,3815

elpa/helm-20160616.217/helm-misc.el,2572
(defvar display-time-world-list)display-time-world-list25,941
(defgroup helm-misc nilhelm-misc28,977
(defcustom helm-time-zone-home-location "Paris"helm-time-zone-home-location32,1067
(defcustom helm-timezone-actionshelm-timezone-actions37,1184
(defcustom helm-mini-default-sources '(helm-source-buffers-listhelm-mini-default-sources44,1436
(defface helm-time-zone-currenthelm-time-zone-current51,1730
(defface helm-time-zone-homehelm-time-zone-home56,1878
(defvar LaTeX-math-menu)LaTeX-math-menu64,2042
(defun helm-latex-math-candidates ()helm-latex-math-candidates65,2067
(defvar helm-source-latex-mathhelm-source-latex-math72,2336
(defun helm-jabber-online-contacts ()helm-jabber-online-contacts84,2702
(defvar helm-source-jabber-contactshelm-source-jabber-contacts94,3019
(defun helm-time-zone-transformer (candidates _source)helm-time-zone-transformer106,3422
(defvar helm-source-time-worldhelm-source-time-world118,3910
(defun helm-lacarte-candidate-transformer (cands)helm-lacarte-candidate-transformer132,4350
(defclass helm-lacarte (helm-source-sync helm-type-command)helm-lacarte142,4726
(defun helm-lacarte-get-candidates (&optional maps)helm-lacarte-get-candidates148,5019
(defun helm-browse-menubar ()helm-browse-menubar159,5550
(defun helm-call-interactively (cmd-or-name)helm-call-interactively171,6049
(defvar helm-source-minibuffer-historyhelm-source-minibuffer-history188,6683
(defun helm-comint-input-ring-action (candidate)helm-comint-input-ring-action209,7358
(defvar helm-source-comint-input-ringhelm-source-comint-input-ring215,7565
(defvar helm-source-ratpoison-commandshelm-source-ratpoison-commands227,7914
(defun helm-ratpoison-commands-init ()helm-ratpoison-commands-init235,8223
(defun helm-ratpoison-commands-display-to-real (display)helm-ratpoison-commands-display-to-real250,8852
(defun helm-ratpoison-commands-execute (candidate)helm-ratpoison-commands-execute254,8988
(defvar helm-source-stumpwm-commandshelm-source-stumpwm-commands260,9124
(defun helm-stumpwm-commands-init ()helm-stumpwm-commands-init267,9361
(defun helm-stumpwm-commands-execute (candidate)helm-stumpwm-commands-execute277,9738
(defun helm-world-time ()helm-world-time281,9855
(defun helm-insert-latex-math ()helm-insert-latex-math288,10089
(defun helm-ratpoison-commands ()helm-ratpoison-commands294,10274
(defun helm-stumpwm-commands()helm-stumpwm-commands301,10500
(defun helm-minibuffer-history ()helm-minibuffer-history308,10708
(defun helm-comint-input-ring ()helm-comint-input-ring316,10967

elpa/helm-20160616.217/helm-mode.el,2403
(defgroup helm-mode nilhelm-mode25,875
(defcustom helm-completing-read-handlers-alisthelm-completing-read-handlers-alist29,944
(defcustom helm-comp-read-case-fold-search helm-case-fold-searchhelm-comp-read-case-fold-search80,3135
(defcustom helm-mode-handle-completion-in-region thelm-mode-handle-completion-in-region86,3356
(defcustom helm-mode-reverse-history thelm-mode-reverse-history93,3601
(defcustom helm-mode-no-completion-in-region-in-modes nilhelm-mode-no-completion-in-region-in-modes98,3760
(defcustom helm-completion-in-region-fuzzy-match nilhelm-completion-in-region-fuzzy-match103,3927
(defcustom helm-mode-fuzzy-match nilhelm-mode-fuzzy-match109,4157
(defcustom helm-mode-minibuffer-setup-hook-black-list '(minibuffer-completion-help)helm-mode-minibuffer-setup-hook-black-list119,4547
(defvar helm-comp-read-maphelm-comp-read-map128,4890
(defvar helm-comp-read-must-match-maphelm-comp-read-must-match-map136,5155
(defvar helm-cr-unknown-pattern-flag nil)helm-cr-unknown-pattern-flag149,5506
(defun helm-cr-empty-string ()helm-cr-empty-string155,5596
(defun helm-mode--keyboard-quit ()helm-mode--keyboard-quit164,5818
(defun helm-cr-default-transformer (candidates _source)helm-cr-default-transformer251,10272
(defun helm-comp-read--move-to-first-real-candidate ()helm-comp-read--move-to-first-real-candidate271,11119
(defun helm-cr-default (default cands)helm-cr-default276,11312
(defvar helm-completion-mode-string " Helm")helm-completion-mode-string542,23097
(defvar helm-completion-mode-quit-messagehelm-completion-mode-quit-message544,23143
(defvar helm-completion-mode-start-messagehelm-completion-mode-start-message547,23216
(defun helm-completing-read-symbolshelm-completing-read-symbols553,23320
(defun helm-completing-read-default-1helm-completing-read-default-1585,24465
(defun helm-completing-read-with-cands-in-bufferhelm-completing-read-with-cands-in-buffer629,26358
(defun helm-mode--default-filename (fname dir initial)helm-mode--default-filename902,38505
(defun helm-mode--advice-lisp--local-variables (old--fn &rest args)helm-mode--advice-lisp--local-variables999,43168
(defun helm--completion-in-region (start end collection &optional predicate)helm--completion-in-region1003,43281
(defun helm-mode--in-file-completion-p ()helm-mode--in-file-completion-p1118,49814
(define-minor-mode helm-modehelm-mode1126,50102

elpa/helm-20160616.217/helm-multi-match.el,3043
(defgroup helm-multi-match nilhelm-multi-match30,1043
(defcustom helm-mm-matching-method 'multi3helm-mm-matching-method34,1113
(defconst helm-mm-default-match-functionshelm-mm-default-match-functions57,2186
(defconst helm-mm-default-search-functionshelm-mm-default-search-functions59,2268
(defvar helm-mm-space-regexp "[\\ ] "helm-mm-space-regexp66,2380
(defun helm-mm-split-pattern (pattern)helm-mm-split-pattern69,2483
(defun helm-mm-1-make-regexp (pattern)helm-mm-1-make-regexp82,3028
(defvar helm-mm-exact-pattern-str nil)helm-mm-exact-pattern-str91,3212
(defvar helm-mm-exact-pattern-real nil)helm-mm-exact-pattern-real92,3251
(defun helm-mm-exact-get-pattern (pattern)helm-mm-exact-get-pattern94,3292
(defun helm-mm-exact-search (pattern &rest _ignore)helm-mm-exact-search109,3771
(defvar helm-mm-prefix-pattern-str nil)helm-mm-prefix-pattern-str118,3954
(defvar helm-mm-prefix-pattern-real nil)helm-mm-prefix-pattern-real119,3994
(defun helm-mm-prefix-get-pattern (pattern)helm-mm-prefix-get-pattern121,4036
(defun helm-mm-prefix-match (str &optional pattern)helm-mm-prefix-match127,4272
(defun helm-mm-prefix-search (pattern &rest _ignore)helm-mm-prefix-search136,4657
(defvar helm-mm-1-pattern-str nil)helm-mm-1-pattern-str144,4856
(defvar helm-mm-1-pattern-real nil)helm-mm-1-pattern-real145,4891
(defun helm-mm-1-get-pattern (pattern)helm-mm-1-get-pattern147,4928
(defun helm-mm-1-search (pattern &rest _ignore)helm-mm-1-search157,5292
(defvar helm-mm-2-pattern-str nil)helm-mm-2-pattern-str165,5485
(defvar helm-mm-2-pattern-real nil)helm-mm-2-pattern-real166,5520
(defun helm-mm-2-get-pattern (pattern)helm-mm-2-get-pattern168,5557
(defun helm-mm-2-search (pattern &rest _ignore)helm-mm-2-search178,5923
(defvar helm-mm-3-pattern-str nil)helm-mm-3-pattern-str186,6099
(defvar helm-mm-3-pattern-list nil)helm-mm-3-pattern-list187,6134
(defun helm-mm-3-get-patterns (pattern)helm-mm-3-get-patterns189,6171
(defun helm-mm-3-get-patterns-internal (pattern)helm-mm-3-get-patterns-internal199,6603
(defun helm-mm-3-search-base (pattern searchfn1 searchfn2)helm-mm-3-search-base229,8081
(defun helm-mm-3-search (pattern &rest _ignore)helm-mm-3-search256,9422
(defvar helm-mm--previous-migemo-info nilhelm-mm--previous-migemo-info265,9654
(define-minor-mode helm-migemo-modehelm-migemo-mode272,9911
(defun helm-mm-migemo-get-pattern (pattern)helm-mm-migemo-get-pattern282,10241
(defun helm-mm-migemo-search-pattern-get (pattern)helm-mm-migemo-search-pattern-get287,10430
(defun helm-mm-migemo-string-match (pattern str)helm-mm-migemo-string-match292,10633
(defun helm-mm-migemo-forward (word &optional bound noerror count)helm-mm-migemo-forward306,11282
(defun helm-mm-3-migemo-search (pattern &rest _ignore)helm-mm-3-migemo-search317,11802
(defun helm-mm-3p-match (str &optional pattern)helm-mm-3p-match326,12045
(defun helm-mm-3p-search (pattern &rest _ignore)helm-mm-3p-search337,12581
(defun helm-mm-search (pattern &rest _ignore)helm-mm-search355,13155

elpa/helm-20160616.217/helm-net.el,4473
(defgroup helm-net nilhelm-net28,922
(defcustom helm-google-suggest-default-browser-function nilhelm-google-suggest-default-browser-function32,1015
(defcustom helm-home-url "http://www.google.fr"helm-home-url39,1275
(defcustom helm-surfraw-default-browser-function nilhelm-surfraw-default-browser-function44,1396
(defcustom helm-google-suggest-urlhelm-google-suggest-url50,1599
(defcustom helm-google-suggest-search-urlhelm-google-suggest-search-url56,1775
(defcustom helm-net-prefer-curl nilhelm-net-prefer-curl62,1945
(defvaralias 'helm-google-suggest-use-curl-p 'helm-net-prefer-curl)helm-google-suggest-use-curl-p68,2126
(defcustom helm-surfraw-duckduckgo-urlhelm-surfraw-duckduckgo-url71,2282
(defcustom helm-wikipedia-suggest-urlhelm-wikipedia-suggest-url80,2588
(defcustom helm-search-suggest-action-wikipedia-urlhelm-search-suggest-action-wikipedia-url86,2779
(defcustom helm-wikipedia-summary-urlhelm-wikipedia-summary-url93,3005
(defcustom helm-wikipedia-follow-delay 2helm-wikipedia-follow-delay99,3223
(defcustom helm-search-suggest-action-youtube-urlhelm-search-suggest-action-youtube-url104,3343
(defcustom helm-search-suggest-action-imdb-urlhelm-search-suggest-action-imdb-url111,3562
(defcustom helm-search-suggest-action-google-maps-urlhelm-search-suggest-action-google-maps-url118,3759
(defcustom helm-search-suggest-action-google-news-urlhelm-search-suggest-action-google-news-url125,3982
(defcustom helm-google-suggest-actionshelm-google-suggest-actions132,4234
(defcustom helm-browse-url-firefox-new-window "-new-tab"helm-browse-url-firefox-new-window158,5459
(defun helm-search-suggest-perform-additional-action (url query)helm-search-suggest-perform-additional-action172,5824
(defun helm-net--url-retrieve-sync (request parser)helm-net--url-retrieve-sync176,5998
(defun helm-google-suggest-parser ()helm-google-suggest-parser188,6299
(defun helm-google-suggest-fetch (input)helm-google-suggest-fetch197,6614
(defun helm-google-suggest-set-candidates (&optional request-prefix)helm-google-suggest-set-candidates204,6886
(defun helm-ggs-set-number-result (num)helm-ggs-set-number-result220,7602
(defun helm-google-suggest-action (candidate)helm-google-suggest-action235,8104
(defvar helm-google-suggest-default-functionhelm-google-suggest-default-function243,8432
(defvar helm-source-google-suggesthelm-source-google-suggest247,8569
(defun helm-google-suggest-emacs-lisp ()helm-google-suggest-emacs-lisp256,8845
(defun helm-wikipedia-suggest-fetch ()helm-wikipedia-suggest-fetch264,9085
(defun helm-wikipedia--parse-buffer ()helm-wikipedia--parse-buffer272,9395
(defvar helm-wikipedia--summary-cache (make-hash-table :test 'equal))helm-wikipedia--summary-cache284,9946
(defun helm-wikipedia-persistent-action (candidate)helm-wikipedia-persistent-action285,10016
(defun helm-wikipedia-fetch-summary (input)helm-wikipedia-fetch-summary315,11305
(defun helm-wikipedia--parse-summary ()helm-wikipedia--parse-summary321,11539
(defvar helm-source-wikipedia-suggesthelm-source-wikipedia-suggest354,12961
(defvar helm-browse-url-chromium-program "chromium-browser")helm-browse-url-chromium-program376,13711
(defvar helm-browse-url-uzbl-program "uzbl-browser")helm-browse-url-uzbl-program377,13772
(defvar helm-browse-url-conkeror-program "conkeror")helm-browse-url-conkeror-program378,13825
(defvar helm-browse-url-default-browser-alisthelm-browse-url-default-browser-alist379,13878
(defun helm-browse-url-firefox (url &optional _ignore)helm-browse-url-firefox408,15193
(defun helm-browse-url-chromium (url &optional _ignore)helm-browse-url-chromium423,15794
(defun helm-browse-url-uzbl (url &optional _ignore)helm-browse-url-uzbl429,15985
(defun helm-browse-url-conkeror (url &optional _ignore)helm-browse-url-conkeror434,16161
(defun helm-browse-url-default-browser (url &rest args)helm-browse-url-default-browser439,16344
(defun helm-browse-url (url &rest args)helm-browse-url448,16752
(defvar helm-surfraw-engines-history nil)helm-surfraw-engines-history461,17042
(defvar helm-surfraw-input-history nil)helm-surfraw-input-history462,17084
(defvar helm-surfraw--elvi-cache nil)helm-surfraw--elvi-cache463,17124
(defun helm-build-elvi-list ()helm-build-elvi-list465,17163
(defun helm-surfraw (pattern engine)helm-surfraw474,17503
(defun helm-google-suggest ()helm-google-suggest505,19023
(defun helm-wikipedia-suggest ()helm-wikipedia-suggest511,19216

elpa/helm-20160616.217/helm-org.el,2216
(defgroup helm-org nilhelm-org26,955
(defcustom helm-org-headings-fontify nilhelm-org-headings-fontify30,1031
(defcustom helm-org-format-outline-path nilhelm-org-format-outline-path37,1258
(defcustom helm-org-show-filename nilhelm-org-show-filename42,1372
(defcustom helm-org-headings-min-depth 1helm-org-headings-min-depth48,1581
(defcustom helm-org-headings-max-depth 8helm-org-headings-max-depth53,1709
(defcustom helm-org-headings-actionshelm-org-headings-actions58,1839
(defcustom helm-org-truncate-lines thelm-org-truncate-lines68,2305
(defvar org-capture-templates)org-capture-templates76,2455
(defun helm-source-org-capture-templates ()helm-source-org-capture-templates77,2486
(defun helm-org-goto-marker (marker)helm-org-goto-marker87,2874
(defun helm-org--open-heading-in-indirect-buffer (marker)helm-org--open-heading-in-indirect-buffer94,3074
(defun helm-org--run-open-heading-in-indirect-buffer ()helm-org--run-open-heading-in-indirect-buffer103,3471
(defvar helm-org-headings-maphelm-org-headings-map110,3765
(defclass helm-org-headings-class (helm-source-sync)helm-org-headings-class119,4153
(defmethod helm--setup-source :after ((source helm-org-headings-class))helm--setup-source134,4601
(defun helm-source-org-headings-for-files (filenames &optional parents)helm-source-org-headings-for-files141,4933
(defun helm-org-get-candidates (filenames &optional parents)helm-org-get-candidates146,5115
(defun helm-org--get-candidates-in-file (filename &optional fontify nofname parents)helm-org--get-candidates-in-file156,5482
(defun helm-org-insert-link-to-heading-at-marker (marker)helm-org-insert-link-to-heading-at-marker212,8528
(defun helm-org-heading-refile (marker)helm-org-heading-refile221,8954
(defun helm-org-agenda-files-headings ()helm-org-agenda-files-headings234,9424
(defun helm-org-in-buffer-headings ()helm-org-in-buffer-headings243,9743
(defun helm-org-parent-headings ()helm-org-parent-headings254,10132
(defun helm-org-capture-templates ()helm-org-capture-templates268,10669
(defvar crm-separator)crm-separator281,11114
(defun helm-org-completing-read-tags (prompt collection pred req initialhelm-org-completing-read-tags284,11153

elpa/helm-20160616.217/helm-pkg.el,104
(define-package "helm" "20160616.217" "Helm is an Emacs incremental and narrowing framework""helm"1,0

elpa/helm-20160616.217/helm-plugin.el,505
(defun helm-make-info-source (source file)helm-make-info-source28,887
(defun helm-compile-source--info-index (source)helm-compile-source--info-index38,1196
(defun helm-compile-source--candidates-file (source)helm-compile-source--candidates-file56,1692
(defun helm-p-candidates-file-init ()helm-p-candidates-file-init68,2205
(defun helm-compile-source--persistent-help (source)helm-compile-source--persistent-help98,3118
(defun helm-persistent-help-string ()helm-persistent-help-string104,3373

elpa/helm-20160616.217/helm-regexp.el,3894
(defgroup helm-regexp nilhelm-regexp29,1000
(defcustom helm-moccur-always-search-in-current nilhelm-moccur-always-search-in-current33,1099
(defcustom helm-moccur-use-ioccur-style-keys thelm-moccur-use-ioccur-style-keys38,1260
(defcustom helm-moccur-auto-update-on-resume nilhelm-moccur-auto-update-on-resume43,1418
(defcustom helm-source-multi-occur-actionshelm-source-multi-occur-actions56,2102
(defcustom helm-moccur-truncate-lines thelm-moccur-truncate-lines64,2425
(defface helm-moccur-bufferhelm-moccur-buffer70,2575
(defface helm-resume-need-updatehelm-resume-need-update75,2729
(defvar helm-moccur-maphelm-moccur-map81,2878
(defvar helm-build-regexp-history nil)helm-build-regexp-history98,3627
(defvar helm-occur-history nil)helm-occur-history99,3666
(defun helm-query-replace-regexp (_candidate)helm-query-replace-regexp101,3699
(defun helm-kill-regexp-as-sexp (_candidate)helm-kill-regexp-as-sexp109,4043
(defun helm-kill-regexp (_candidate)helm-kill-regexp114,4196
(defun helm-query-replace-args (regexp)helm-query-replace-args118,4315
(defvar helm-source-regexphelm-source-regexp132,4884
(defun helm-regexp-get-line (s e)helm-regexp-get-line151,5643
(defun helm-regexp-persistent-action (pt)helm-regexp-persistent-action163,6101
(defun helm-regexp-kill-new (input)helm-regexp-kill-new167,6199
(defvar helm-source-occur nil)helm-source-occur175,6305
(defun helm-occur-init-source ()helm-occur-init-source176,6336
(defvar helm-multi-occur-buffer-list nil)helm-multi-occur-buffer-list187,6528
(defvar helm-multi-occur-buffer-tick nil)helm-multi-occur-buffer-tick188,6570
(defun helm-moccur-init ()helm-moccur-init189,6612
(defun helm-moccur--next-or-previous-char ()helm-moccur--next-or-previous-char202,7083
(defun helm-moccur-get-line (beg end)helm-moccur-get-line207,7229
(defun helm-moccur-persistent-action (candidate)helm-moccur-persistent-action260,9684
(defun helm-moccur-goto-line (candidate)helm-moccur-goto-line264,9803
(defun helm-moccur-goto-line-ow (candidate)helm-moccur-goto-line-ow270,10064
(defun helm-moccur-goto-line-of (candidate)helm-moccur-goto-line-of278,10353
(defun helm-moccur-run-goto-line-ow ()helm-moccur-run-goto-line-ow286,10635
(defun helm-moccur-run-goto-line-of ()helm-moccur-run-goto-line-of293,10889
(defun helm-moccur-run-default-action ()helm-moccur-run-default-action300,11140
(defvar helm-source-moccur nil)helm-source-moccur306,11330
(defclass helm-source-multi-occur (helm-source-in-buffer)helm-source-multi-occur307,11362
(defun helm-moccur-resume-fn ()helm-moccur-resume-fn326,12143
(defun helm-moccur-filter-one-by-one (candidate)helm-moccur-filter-one-by-one372,15101
(defun helm-multi-occur-1 (buffers &optional input)helm-multi-occur-1391,15793
(defun helm-moccur-run-save-buffer ()helm-moccur-run-save-buffer415,16819
(defvar helm-moccur-mode-maphelm-moccur-mode-map426,17090
(defun helm-moccur-mode-goto-line ()helm-moccur-mode-goto-line440,17849
(defun helm-moccur-mode-goto-line-ow ()helm-moccur-mode-goto-line-ow445,17992
(defun helm-moccur-mode-goto-line-ow-forward-1 (arg)helm-moccur-mode-goto-line-ow-forward-1450,18141
(defun helm-moccur-mode-goto-line-ow-forward ()helm-moccur-mode-goto-line-ow-forward459,18370
(defun helm-moccur-mode-goto-line-ow-backward ()helm-moccur-mode-goto-line-ow-backward463,18482
(defun helm-moccur-save-results (_candidate)helm-moccur-save-results467,18596
(define-derived-mode helm-moccur-modehelm-moccur-mode495,19774
(defun helm-moccur-mode--revert-buffer-function (&optional _ignore-auto _noconfirm)helm-moccur-mode--revert-buffer-function507,20218
(defun helm-regexp ()helm-regexp555,22070
(defun helm-occur ()helm-occur570,22642
(defun helm-occur-from-isearch ()helm-occur-from-isearch590,23470
(defun helm-multi-occur-from-isearch (&optional _arg)helm-multi-occur-from-isearch612,24265

elpa/helm-20160616.217/helm-ring.el,1982
(defgroup helm-ring nilhelm-ring29,1025
(defcustom helm-kill-ring-threshold 3helm-kill-ring-threshold33,1120
(defcustom helm-kill-ring-max-lines-number 5helm-kill-ring-max-lines-number38,1272
(defcustom helm-register-max-offset 160helm-register-max-offset45,1565
(defcustom helm-kill-ring-actionshelm-kill-ring-actions50,1704
(defvar helm-kill-ring-maphelm-kill-ring-map64,2128
(defvar helm-source-kill-ringhelm-source-kill-ring72,2379
(defun helm-kill-ring-candidates ()helm-kill-ring-candidates85,2864
(defun helm-kill-ring-transformer (candidates _source)helm-kill-ring-transformer91,3119
(defun helm-kill-ring-action (str)helm-kill-ring-action112,4068
(defun helm-mark-ring-line-string-at-pos (pos)helm-mark-ring-line-string-at-pos152,5851
(defun helm-mark-ring-get-candidates ()helm-mark-ring-get-candidates162,6139
(defvar helm-source-mark-ringhelm-source-mark-ring175,6771
(defvar helm-source-global-mark-ringhelm-source-global-mark-ring187,7252
(defun helm-global-mark-ring-format-buffer (marker)helm-global-mark-ring-format-buffer202,7994
(defun helm-global-mark-ring-get-candidates ()helm-global-mark-ring-get-candidates214,8492
(defun helm--push-mark (&optional location nomsg activate)helm--push-mark226,8979
(defadvice push-mark (around helm-push-mark-mode)push-mark252,10364
(define-minor-mode helm-push-mark-modehelm-push-mark-mode256,10475
(defvar helm-source-registerhelm-source-register272,11015
(defun helm-register-candidates ()helm-register-candidates287,11642
(defun helm-register-action-transformer (actions register-and-functions)helm-register-action-transformer354,14502
(defun helm-mark-ring ()helm-mark-ring387,15959
(defun helm-global-mark-ring ()helm-global-mark-ring395,16168
(defun helm-all-mark-rings ()helm-all-mark-rings403,16405
(defun helm-register ()helm-register413,16711
(defun helm-show-kill-ring ()helm-show-kill-ring421,16914
(defun helm-execute-kmacro ()helm-execute-kmacro434,17304

elpa/helm-20160616.217/helm-semantic.el,983
(defgroup helm-semantic nilhelm-semantic32,1071
(defcustom helm-semantic-lynx-style-map thelm-semantic-lynx-style-map36,1179
(defcustom helm-semantic-display-stylehelm-semantic-display-style41,1307
(defvar helm-semantic-maphelm-semantic-map62,2169
(defvar helm-semantic--tags-cache nil)helm-semantic--tags-cache71,2486
(defun helm-semantic--fetch-candidates (tags depth &optional class)helm-semantic--fetch-candidates73,2526
(defun helm-semantic-default-action (_candidate &optional persistent)helm-semantic-default-action112,4075
(defun helm-semantic--maybe-set-needs-update ()helm-semantic--maybe-set-needs-update125,4637
(defvar helm-source-semantic nil)helm-source-semantic130,4809
(defclass helm-semantic-source (helm-source-in-buffer)helm-semantic-source132,4844
(defcustom helm-semantic-fuzzy-match nilhelm-semantic-fuzzy-match148,5738
(defun helm-semantic (arg)helm-semantic159,6105
(defun helm-semantic-or-imenu (arg)helm-semantic-or-imenu179,6945

elpa/helm-20160616.217/helm-sys.el,2673
(defgroup helm-sys nilhelm-sys26,895
(defface helm-top-columnshelm-top-columns30,968
(defcustom helm-top-commandhelm-top-command36,1094
(defcustom helm-top-poll-delay 1.5helm-top-poll-delay52,1845
(defcustom helm-top-poll-delay-post-command 1.0helm-top-poll-delay-post-command58,2065
(defcustom helm-top-poll-preselection 'linumhelm-top-poll-preselection65,2273
(defvar helm-top-sort-fn nil)helm-top-sort-fn76,2652
(defvar helm-top-maphelm-top-map77,2682
(defvar helm-top-after-init-hook nilhelm-top-after-init-hook86,3032
(defvar helm-top--poll-timer nil)helm-top--poll-timer89,3100
(defun helm-top-poll (&optional no-update delay)helm-top-poll91,3135
(defun helm-top--poll-delay ()helm-top--poll-delay118,4259
(defun helm-top-poll-no-update ()helm-top-poll-no-update121,4324
(defun helm-top-initialize-poll-hooks ()helm-top-initialize-poll-hooks125,4462
(define-minor-mode helm-top-poll-modehelm-top-poll-mode138,5014
(defvar helm-source-tophelm-source-top149,5479
(defvar helm-top--line nil)helm-top--line172,6441
(defun helm-top-transformer (candidates _source)helm-top-transformer173,6469
(defun helm-top--skip-top-line ()helm-top--skip-top-line185,6989
(defun helm-top-action-transformer (actions _candidate)helm-top-action-transformer193,7295
(defun helm-top-sh (sig pid)helm-top-sh215,8531
(defun helm-top-sh-persistent-action (pid)helm-top-sh-persistent-action220,8741
(defun helm-top-init ()helm-top-init225,8860
(defun helm-top-display-to-real (line)helm-top-display-to-real234,9189
(defun helm-top-set-mode-line (str)helm-top-set-mode-line240,9310
(defun helm-top-sort-transformer (candidates source)helm-top-sort-transformer245,9577
(defun helm-top-sort-by-com (s1 s2)helm-top-sort-by-com258,10036
(defun helm-top-sort-by-mem (s1 s2)helm-top-sort-by-mem265,10244
(defun helm-top-sort-by-user (s1 s2)helm-top-sort-by-user272,10482
(defun helm-top-run-sort-by-com ()helm-top-run-sort-by-com279,10693
(defun helm-top-run-sort-by-cpu ()helm-top-run-sort-by-cpu287,10962
(defun helm-top-run-sort-by-mem ()helm-top-run-sort-by-mem295,11213
(defun helm-top-run-sort-by-user ()helm-top-run-sort-by-user303,11482
(defun helm-xrandr-info ()helm-xrandr-info317,11832
(defun helm-xrandr-screen ()helm-xrandr-screen331,12357
(defun helm-xrandr-output ()helm-xrandr-output335,12451
(defvar helm-source-xrandr-change-resolutionhelm-source-xrandr-change-resolution339,12545
(defvar helm-source-emacs-processhelm-source-emacs-process365,13403
(defun helm-top ()helm-top378,13922
(defun helm-list-emacs-process ()helm-list-emacs-process392,14420
(defun helm-xrandr-set ()helm-xrandr-set398,14597

elpa/helm-20160616.217/helm-tags.el,1860
(defgroup helm-tags nilhelm-tags27,898
(defcustom helm-etags-tag-file-name "TAGS"helm-etags-tag-file-name31,993
(defcustom helm-etags-tag-file-search-limit 10helm-etags-tag-file-search-limit36,1100
(defcustom helm-etags-match-part-only 'taghelm-etags-match-part-only42,1291
(defcustom helm-etags-execute-action-at-once-if-one thelm-etags-execute-action-at-once-if-one53,1723
(defgroup helm-tags-faces nilhelm-tags-faces60,1894
(defface helm-etags-filehelm-etags-file66,2034
(defun helm-etags-run-switch-other-window ()helm-etags-run-switch-other-window76,2215
(defun helm-etags-run-switch-other-frame ()helm-etags-run-switch-other-frame85,2537
(defvar helm-etags-maphelm-etags-map94,2855
(defvar helm-etags-mtime-alist nilhelm-etags-mtime-alist105,3321
(defvar helm-etags-cache (make-hash-table :test 'equal)helm-etags-cache107,3415
(defun helm-etags-get-tag-file (&optional directory)helm-etags-get-tag-file110,3535
(defun helm-etags-all-tag-files ()helm-etags-all-tag-files121,4018
(defun helm-etags-find-tag-file-directory (current-dir)helm-etags-find-tag-file-directory133,4514
(defun helm-etags-get-header-name (_x)helm-etags-get-header-name154,5486
(defun helm-etags-create-buffer (file)helm-etags-create-buffer160,5677
(defun helm-etags-init ()helm-etags-init188,7059
(defvar helm-source-etags-select nilhelm-source-etags-select210,8072
(defun helm-etags-build-source ()helm-etags-build-source213,8138
(defcustom helm-etags-fuzzy-match nilhelm-etags-fuzzy-match242,9549
(defvar find-tag-marker-ring)find-tag-marker-ring251,9805
(defun helm-etags-action-goto (switcher candidate)helm-etags-action-goto253,9836
(defun helm-etags-mtime (file)helm-etags-mtime273,10693
(defun helm-etags-file-modified-p (file)helm-etags-file-modified-p277,10812
(defun helm-etags-select (reinit)helm-etags-select286,11128

elpa/helm-20160616.217/helm-types.el,2894
(defclass helm-type-file (helm-source) ()helm-type-file29,966
(defmethod helm-source-get-action-from-type ((object helm-type-file))helm-source-get-action-from-type32,1048
(defun helm-actions-from-type-file ()helm-actions-from-type-file35,1150
(defcustom helm-type-file-actionshelm-type-file-actions40,1319
(defmethod helm--setup-source :primary ((_source helm-type-file)))helm--setup-source71,3170
(defmethod helm--setup-source :before ((source helm-type-file))helm--setup-source73,3238
(defclass helm-type-bookmark (helm-source) ()helm-type-bookmark90,3979
(defcustom helm-type-bookmark-actionshelm-type-bookmark-actions93,4065
(defmethod helm-source-get-action-from-type ((object helm-type-bookmark))helm-source-get-action-from-type108,4668
(defmethod helm--setup-source :primary ((_source helm-type-bookmark)))helm--setup-source111,4774
(defmethod helm--setup-source :before ((source helm-type-bookmark))helm--setup-source113,4846
(defclass helm-type-buffer (helm-source) ()helm-type-buffer122,5242
(defcustom helm-type-buffer-actionshelm-type-buffer-actions125,5323
(defmethod helm-source-get-action-from-type ((object helm-type-buffer))helm-source-get-action-from-type160,6711
(defmethod helm--setup-source :primary ((_source helm-type-buffer)))helm--setup-source163,6815
(defmethod helm--setup-source :before ((source helm-type-buffer))helm--setup-source165,6885
(defclass helm-type-function (helm-source) ()helm-type-function175,7346
(defcustom helm-type-function-actionshelm-type-function-actions178,7436
(defmethod helm-source-get-action-from-type ((object helm-type-function))helm-source-get-action-from-type192,7971
(defun helm-actions-from-type-function ()helm-actions-from-type-function195,8077
(defmethod helm--setup-source :primary ((_source helm-type-function)))helm--setup-source200,8254
(defmethod helm--setup-source :before ((source helm-type-function))helm--setup-source202,8326
(defclass helm-type-command (helm-source) ()helm-type-command212,8722
(defun helm-actions-from-type-command ()helm-actions-from-type-command215,8810
(defcustom helm-type-command-actionshelm-type-command-actions220,8985
(defmethod helm--setup-source :primary ((_source helm-type-command)))helm--setup-source228,9272
(defmethod helm--setup-source :before ((source helm-type-command))helm--setup-source230,9343
(defclass helm-type-timers (helm-source) ()helm-type-timers236,9606
(defcustom helm-type-timers-actionshelm-type-timers-actions239,9692
(defmethod helm--setup-source :primary ((_source helm-type-timers)))helm--setup-source255,10462
(defmethod helm--setup-source :before ((source helm-type-timers))helm--setup-source257,10532
(defun helm-build-type-file ()helm-build-type-file265,10864
(defun helm-build-type-function ()helm-build-type-function268,10932
(defun helm-build-type-command ()helm-build-type-command271,11008

elpa/helm-20160616.217/helm-utils.el,4118
(defvar winner-boring-buffers)winner-boring-buffers28,1051
(defgroup helm-utils nilhelm-utils31,1085
(defcustom helm-su-or-sudo "sudo"helm-su-or-sudo35,1160
(defcustom helm-default-kbsize 1024.0helm-default-kbsize40,1274
(defcustom helm-highlight-matches-around-point-max-lines 15helm-highlight-matches-around-point-max-lines51,1607
(defcustom helm-buffers-to-resize-on-pa nilhelm-buffers-to-resize-on-pa56,1777
(defcustom helm-resize-on-pa-text-height 12helm-resize-on-pa-text-height61,1968
(defcustom helm-sources-using-help-echo-popup '("Moccur" "Imenu in all buffers"helm-sources-using-help-echo-popup66,2120
(defcustom helm-html-decode-entities-function #'helm-html-decode-entities-stringhelm-html-decode-entities-function72,2405
(defvar helm-goto-line-before-hook '(helm-save-current-pos-to-mark-ring)helm-goto-line-before-hook83,2862
(defvar helm-save-pos-before-jump-register ?_helm-save-pos-before-jump-register94,3451
(defconst helm-html-entities-alisthelm-html-entities-alist97,3577
(defface helm-selection-linehelm-selection-line204,6700
(defface helm-match-itemhelm-match-item209,6882
(defadvice cua-delete-region (around helm-avoid-cua activate)cua-delete-region216,7040
(defadvice copy-region-as-kill (around helm-avoid-cua activate)copy-region-as-kill219,7131
(defun helm-switch-to-buffers (buffer-or-name &optional other-window)helm-switch-to-buffers228,7285
(defun helm-switch-to-buffers-other-window (buffer-or-name)helm-switch-to-buffers-other-window251,8245
(defun helm-goto-char (loc)helm-goto-char266,8824
(defun helm-goto-line (lineno &optional noanim)helm-goto-line275,9123
(defun helm-save-pos-to-register-before-jump ()helm-save-pos-to-register-before-jump284,9467
(defun helm-save-current-pos-to-mark-ring ()helm-save-current-pos-to-mark-ring291,9772
(defun helm-show-all-in-this-source-only (arg)helm-show-all-in-this-source-only299,10060
(defun helm-display-all-sources ()helm-display-all-sources311,10603
(defun helm-displaying-source-names ()helm-displaying-source-names318,10827
(defun helm-handle-winner-boring-buffers ()helm-handle-winner-boring-buffers328,11231
(defun helm-quit-and-find-file ()helm-quit-and-find-file336,11615
(defun helm-generic-sort-fn (s1 s2)helm-generic-sort-fn403,14466
(defun helm-ff-get-host-from-tramp-invalid-fname (fname)helm-ff-get-host-from-tramp-invalid-fname435,16063
(defun helm-split-mode-file-attributes (str &optional string)helm-split-mode-file-attributes547,21688
(defmacro with-helm-display-marked-candidates (buffer-or-name candidates &rest body)with-helm-display-marked-candidates565,22396
(defvar helm-match-line-overlay nil)helm-match-line-overlay591,23423
(defvar helm--match-item-overlays nil)helm--match-item-overlays592,23460
(defun helm-highlight-current-line (&optional start end buf face pulse)helm-highlight-current-line594,23500
(defun helm-match-line-cleanup ()helm-match-line-cleanup642,25857
(defun helm-match-line-update ()helm-match-line-update649,26098
(defun helm-persistent-autoresize-hook ()helm-persistent-autoresize-hook654,26245
(defvar helm--show-help-echo-timer nil)helm--show-help-echo-timer666,26789
(defun helm-cancel-help-echo-timer ()helm-cancel-help-echo-timer668,26830
(defun helm-show-help-echo ()helm-show-help-echo673,26994
(define-minor-mode helm-popup-tip-modehelm-popup-tip-mode692,27767
(defun helm-open-file-with-default-tool (file)helm-open-file-with-default-tool705,28370
(defun helm-open-dired (file)helm-open-dired719,28972
(defun helm-require-or-error (feature function)helm-require-or-error727,29212
(defun helm-find-file-as-root (candidate)helm-find-file-as-root731,29347
(defun helm-find-many-files (_ignore)helm-find-many-files748,30002
(defun helm-read-repeat-string (prompt &optional count)helm-read-repeat-string752,30134
(defun helm-html-bookmarks-to-alist (file url-regexp bmk-regexp)helm-html-bookmarks-to-alist763,30560
(defun helm-html-entity-to-string (entity)helm-html-entity-to-string780,31282
(defun helm-html-decode-entities-string (str)helm-html-decode-entities-string789,31620

elpa/helm-ag-20160629.2017/helm-ag-autoloads.el,0

elpa/helm-ag-20160629.2017/helm-ag-pkg.el,179
(define-package "helm-ag" "20160629.2017" "the silver searcher with helm interface" '((emacs "24.3") (helm "1.7.7")) :url "https://github.com/syohex/emacs-helm-ag")"helm-ag"1,0

elpa/helm-ag-20160629.2017/helm-ag.el,9475
(defgroup helm-ag nilhelm-ag46,1533
(defsubst helm-ag--windows-p ()helm-ag--windows-p50,1616
(defcustom helm-ag-base-commandhelm-ag-base-command53,1692
(defcustom helm-ag-command-option nilhelm-ag-command-option60,1845
(defcustom helm-ag-insert-at-point nilhelm-ag-insert-at-point64,1980
(defcustom helm-ag-ignore-patterns nilhelm-ag-ignore-patterns69,2128
(defcustom helm-ag-use-grep-ignore-list nilhelm-ag-use-grep-ignore-list73,2266
(defcustom helm-ag-always-set-extra-option nilhelm-ag-always-set-extra-option78,2460
(defcustom helm-ag-fuzzy-match nilhelm-ag-fuzzy-match82,2571
(defcustom helm-ag-edit-save thelm-ag-edit-save86,2648
(defcustom helm-ag-use-emacs-lisp-regexp nilhelm-ag-use-emacs-lisp-regexp90,2738
(defcustom helm-ag-use-agignore nilhelm-ag-use-agignore94,2860
(defcustom helm-ag-use-temp-buffer nilhelm-ag-use-temp-buffer98,2972
(defcustom helm-ag-show-status-function 'helm-ag-show-status-default-mode-linehelm-ag-show-status-function102,3078
(defface helm-ag-edit-deleted-linehelm-ag-edit-deleted-line107,3309
(defvar helm-ag--command-history '())helm-ag--command-history111,3446
(defvar helm-ag--context-stack nil)helm-ag--context-stack112,3484
(defvar helm-ag--default-directory nil)helm-ag--default-directory113,3520
(defvar helm-ag--last-default-directory nil)helm-ag--last-default-directory114,3560
(defvar helm-ag--last-query nil)helm-ag--last-query115,3605
(defvar helm-ag--last-command nil)helm-ag--last-command116,3638
(defvar helm-ag--elisp-regexp-query nil)helm-ag--elisp-regexp-query117,3673
(defvar helm-ag--valid-regexp-for-emacs nil)helm-ag--valid-regexp-for-emacs118,3714
(defvar helm-ag--extra-options nil)helm-ag--extra-options119,3759
(defvar helm-ag--extra-options-history nil)helm-ag--extra-options-history120,3795
(defvar helm-ag--original-window nil)helm-ag--original-window121,3839
(defvar helm-ag--search-this-file-p nil)helm-ag--search-this-file-p122,3877
(defvar helm-ag--default-target nil)helm-ag--default-target123,3918
(defvar helm-ag--buffer-search nil)helm-ag--buffer-search124,3955
(defvar helm-ag--command-feature nil)helm-ag--command-feature125,3991
(defvar helm-ag--ignore-case nil)helm-ag--ignore-case126,4029
(defvar helm-do-ag--extensions nil)helm-do-ag--extensions127,4063
(defvar helm-do-ag--commands nil)helm-do-ag--commands128,4099
(defun helm-ag--ignore-case-p (cmds input)helm-ag--ignore-case-p130,4134
(defun helm-ag--save-current-context ()helm-ag--save-current-context142,4485
(defsubst helm-ag--insert-thing-at-point (thing)helm-ag--insert-thing-at-point149,4814
(defun helm-ag--searched-word ()helm-ag--searched-word154,4943
(defun helm-ag--construct-ignore-option (pattern)helm-ag--construct-ignore-option159,5079
(defun helm-ag--grep-ignore-list-to-options ()helm-ag--grep-ignore-list-to-options162,5162
(defun helm-ag--parse-options-and-query (input)helm-ag--parse-options-and-query168,5412
(defun helm-ag--parse-query (input)helm-ag--parse-query183,5961
(defsubst helm-ag--file-visited-buffers ()helm-ag--file-visited-buffers197,6531
(defun helm-ag--construct-targets (targets)helm-ag--construct-targets202,6674
(defun helm-ag--root-agignore ()helm-ag--root-agignore207,6862
(defun helm-ag--construct-command (this-file)helm-ag--construct-command214,7104
(defun helm-ag--remove-carrige-returns ()helm-ag--remove-carrige-returns238,8224
(defun helm-ag--init ()helm-ag--init245,8422
(defun helm-ag--search-only-one-file-p ()helm-ag--search-only-one-file-p268,9528
(defun helm-ag--find-file-action (candidate find-func this-file &optional persistent)helm-ag--find-file-action274,9757
(defun helm-ag--open-file-with-temp-buffer (filename)helm-ag--open-file-with-temp-buffer296,10733
(defsubst helm-ag--vimgrep-option ()helm-ag--vimgrep-option305,11039
(defun helm-ag--search-this-file-p ()helm-ag--search-this-file-p308,11123
(defun helm-ag--persistent-action (candidate)helm-ag--persistent-action314,11337
(defun helm-ag--validate-regexp (regexp)helm-ag--validate-regexp321,11648
(defun helm-ag--pcre-to-elisp-regexp (pcre)helm-ag--pcre-to-elisp-regexp328,11798
(defun helm-ag--elisp-regexp-to-pcre (regexp)helm-ag--elisp-regexp-to-pcre349,12432
(defun helm-ag--highlight-candidate (candidate)helm-ag--highlight-candidate363,12822
(defun helm-ag--candidate-transform-for-this-file (candidate)helm-ag--candidate-transform-for-this-file378,13416
(defun helm-ag--candidate-transform-for-files (candidate)helm-ag--candidate-transform-for-files384,13707
(defun helm-ag--candidate-transformer (candidate)helm-ag--candidate-transformer391,14031
(defun helm-ag--action-find-file (candidate)helm-ag--action-find-file397,14265
(defun helm-ag--action-find-file-other-window (candidate)helm-ag--action-find-file-other-window400,14393
(defvar helm-ag--actionshelm-ag--actions403,14547
(defvar helm-ag-maphelm-ag-map410,14823
(defvar helm-ag-sourcehelm-ag-source425,15472
(defun helm-ag-pop-stack ()helm-ag-pop-stack436,15842
(defun helm-ag-clear-stack ()helm-ag-clear-stack450,16287
(defsubst helm-ag--marked-input ()helm-ag--marked-input454,16371
(defun helm-ag--query ()helm-ag--query459,16533
(defsubst helm-ag--init-state ()helm-ag--init-state467,16859
(defun helm-ag--get-default-directory ()helm-ag--get-default-directory471,16990
(defsubst helm-ag--helm-header (dir)helm-ag--helm-header483,17584
(defun helm-ag--run-other-window-action ()helm-ag--run-other-window-action488,17729
(defun helm-ag--exit-from-edit-mode ()helm-ag--exit-from-edit-mode493,17888
(defun helm-ag--match-line-regexp ()helm-ag--match-line-regexp498,18070
(defun helm-ag--edit-commit ()helm-ag--edit-commit510,18510
(defun helm-ag--edit-abort ()helm-ag--edit-abort553,20370
(defun helm-ag--mark-line-deleted ()helm-ag--mark-line-deleted559,20520
(defun helm-ag--unmark ()helm-ag--unmark567,20784
(defvar helm-ag-edit-maphelm-ag-edit-map573,20975
(defun helm-ag--edit (_candidate)helm-ag--edit581,21283
(defun helm-ag-edit ()helm-ag-edit631,23894
(defconst helm-ag--help-messagehelm-ag--help-message635,23983
(defun helm-ag-help ()helm-ag-help647,24336
(defun helm-ag-mode-jump ()helm-ag-mode-jump652,24445
(defun helm-ag-mode-jump-other-window ()helm-ag-mode-jump-other-window657,24613
(defvar helm-ag-mode-maphelm-ag-mode-map662,24807
(define-derived-mode helm-ag-mode special-mode "helm-ag"helm-ag-mode670,25072
(defun helm-ag--put-result-in-save-buffer (result search-this-file-p)helm-ag--put-result-in-save-buffer676,25232
(defun helm-ag--save-results (use-other-buf)helm-ag--save-results689,25713
(defun helm-ag--update-save-results ()helm-ag--update-save-results707,26528
(defun helm-ag--action-save-buffer (_arg)helm-ag--action-save-buffer719,27081
(defun helm-ag--run-save-buffer ()helm-ag--run-save-buffer722,27155
(defun helm-ag--file-of-current-file ()helm-ag--file-of-current-file730,27388
(defun helm-ag--move-file-common (pred move-fn wrap-fn)helm-ag--move-file-common735,27577
(defun helm-ag--previous-file ()helm-ag--previous-file744,27899
(defun helm-ag--next-file ()helm-ag--next-file749,28054
(defsubst helm-ag--root-directory-p ()helm-ag--root-directory-p754,28201
(defun helm-ag--up-one-level ()helm-ag--up-one-level758,28325
(defun helm-ag-this-file ()helm-ag-this-file774,29050
(defun helm-ag (&optional basedir)helm-ag787,29572
(defun helm-ag--split-string (str)helm-ag--split-string802,30155
(defsubst helm-ag--convert-invert-pattern (pattern)helm-ag--convert-invert-pattern821,30940
(defun helm-ag--join-patterns (input)helm-ag--join-patterns826,31157
(defun helm-ag--do-ag-highlight-patterns (input)helm-ag--do-ag-highlight-patterns840,31751
(defun helm-ag--propertize-candidates (input)helm-ag--propertize-candidates848,32085
(defun helm-ag-show-status-default-mode-line ()helm-ag-show-status-default-mode-line882,33927
(defun helm-ag--do-ag-propertize (input)helm-ag--do-ag-propertize891,34260
(defun helm-ag--construct-extension-options ()helm-ag--construct-extension-options899,34521
(defun helm-ag--construct-do-ag-command (pattern)helm-ag--construct-do-ag-command907,34827
(defun helm-ag--do-ag-set-command ()helm-ag--do-ag-set-command919,35350
(defun helm-ag--do-ag-candidate-process ()helm-ag--do-ag-candidate-process944,36471
(defconst helm-do-ag--help-messagehelm-do-ag--help-message965,37438
(defun helm-ag--do-ag-help ()helm-ag--do-ag-help977,37813
(defvar helm-do-ag-maphelm-do-ag-map982,37932
(defvar helm-source-do-aghelm-source-do-ag990,38189
(defun helm-ag--do-ag-up-one-level ()helm-ag--do-ag-up-one-level1001,38568
(defun helm-ag--set-do-ag-option ()helm-ag--set-do-ag-option1019,39386
(defun helm-ag--set-command-feature ()helm-ag--set-command-feature1026,39720
(defun helm-ag--do-ag-searched-extensions ()helm-ag--do-ag-searched-extensions1033,39953
(defsubst helm-do-ag--target-one-directory-p (targets)helm-do-ag--target-one-directory-p1037,40148
(defun helm-do-ag--helm ()helm-do-ag--helm1040,40285
(defun helm-do-ag-this-file ()helm-do-ag-this-file1053,40933
(defun helm-do-ag (&optional basedir targets)helm-do-ag1060,41130
(defun helm-ag--project-root ()helm-ag--project-root1092,42821
(defun helm-ag-project-root ()helm-ag-project-root1098,43003
(defun helm-do-ag-project-root ()helm-do-ag-project-root1106,43253
(defun helm-ag-buffers ()helm-ag-buffers1114,43509
(defun helm-do-ag-buffers ()helm-do-ag-buffers1120,43619

elpa/helm-ag-r-20131123.731/helm-ag-r-autoloads.el,0

elpa/helm-ag-r-20131123.731/helm-ag-r.el,2371
(defvar helm-ag-r-option-list '()helm-ag-r-option-list59,2188
(defvar helm-ag-r-requires-pattern 3helm-ag-r-requires-pattern66,2360
(defvar helm-ag-r-histfilehelm-ag-r-histfile69,2445
(defvar helm-ag-r-google-contacts-userhelm-ag-r-google-contacts-user74,2615
(defvar helm-ag-r-google-contacts-lang (getenv "LANG")helm-ag-r-google-contacts-lang81,2823
(defvar helm-ag-r-input-idle-delay 0.5helm-ag-r-input-idle-delay86,2996
(defvar helm-ag-r-use-no-highlight nilhelm-ag-r-use-no-highlight89,3073
(defvar helm-ag-r-candidate-limit helm-candidate-number-limithelm-ag-r-candidate-limit92,3168
(defvar helm-ag-r-dir-or-file '())helm-ag-r-dir-or-file96,3274
(defvar helm-ag-r-current-command '())helm-ag-r-current-command97,3309
(defvar helm-ag-r-base-command nil)helm-ag-r-base-command98,3348
(defvar helm-ag-r-user-option nil)helm-ag-r-user-option99,3384
(defvar helm-ag-r-buffer "*helm-ag-r*")helm-ag-r-buffer100,3419
(defvar helm-ag-r-sourcehelm-ag-r-source102,3460
(defun helm-ag-r-replace-dir-name (line)helm-ag-r-replace-dir-name111,3841
(defun helm-ag-r-find-file-action (candidate find-func)helm-ag-r-find-file-action122,4295
(defvar helm-ag-r-actionshelm-ag-r-actions139,5080
(defvar helm-ag-r-get-commandhelm-ag-r-get-command153,5687
(defun helm-ag-r-create-command (patterns)helm-ag-r-create-command173,6485
(defun helm-ag-r-format-pattern (pattern)helm-ag-r-format-pattern191,7376
(defun helm-ag-r-pype (command &optional source buffer)helm-ag-r-pype201,7798
(defun helm-ag-r-google-contacts-list ()helm-ag-r-google-contacts-list218,8496
(defun helm-ag-r-shell-history ()helm-ag-r-shell-history235,9118
(defun helm-ag-r-git-logs (&optional options)helm-ag-r-git-logs246,9495
(defvar helm-ag-r-functionhelm-ag-r-function256,9855
(defvar helm-ag-r-maphelm-ag-r-map262,10018
(defun helm-ag-r-override-source (source)helm-ag-r-override-source269,10256
(defun helm-ag-r (&optional file-or-directory source buffer)helm-ag-r279,10595
(defun helm-ag-r-current-file ()helm-ag-r-current-file306,11804
(defun helm-ag-r-change-option (&optional reverse)helm-ag-r-change-option311,11916
(defun helm-ag-r-change-option-reverse ()helm-ag-r-change-option-reverse326,12450
(defun helm-ag-r-from-git-repo ()helm-ag-r-from-git-repo332,12596
(defun helm-ag-r-get-top-dir (&optional cwd)helm-ag-r-get-top-dir337,12718

elpa/helm-core-20160617.307/helm-core-autoloads.el,0

elpa/helm-core-20160617.307/helm-core-pkg.el,88
(define-package "helm-core" "20160617.307" "Development files for Helm""helm-core"1,0

elpa/helm-core-20160617.307/helm-lib.el,5380
(defcustom helm-file-globstar thelm-file-globstar32,1047
(defcustom helm-yank-text-at-point-function nilhelm-yank-text-at-point-function39,1271
(defcustom helm-scroll-amount nilhelm-scroll-amount48,1666
(defcustom helm-help-full-frame thelm-help-full-frame57,1937
(defvar helm-yank-point nil)helm-yank-point69,2255
(defvar helm-pattern ""helm-pattern70,2284
(defvar helm-buffer "*helm*"helm-buffer72,2363
(defvar helm-current-buffer nilhelm-current-buffer74,2425
(defvar helm-suspend-update-flag nil)helm-suspend-update-flag76,2501
(defvar helm-action-buffer "*helm action*"helm-action-buffer77,2539
(defun helm-add-face-text-properties (beg end face &optional append object)helm-add-face-text-properties83,2635
(defmacro helm-with-gensyms (symbols &rest body)helm-with-gensyms94,3146
(defun helm-iter-list (seq)helm-iter-list109,3745
(defun helm-iter-next (iterator)helm-iter-next117,3922
(defun helm-make-actions (&rest args)helm-make-actions121,4011
(defmacro helm-aif (test-form then-form &rest else-forms)helm-aif137,4503
(defmacro helm-awhile (sexp &rest body)helm-awhile145,4831
(defmacro helm-acond (&rest clauses)helm-acond160,5320
(defun helm-current-line-contents ()helm-current-line-contents170,5625
(defsubst helm--mapconcat-pattern (pattern)helm--mapconcat-pattern176,5805
(defsubst helm--collect-pairs-in-string (string)helm--collect-pairs-in-string197,6606
(defun helm-help-internal (bufname insert-content-fn)helm-help-internal204,6811
(defun helm-help-scroll-up (amount)helm-help-scroll-up224,7578
(defun helm-help-scroll-down (amount)helm-help-scroll-down230,7727
(defun helm-help-next-line ()helm-help-next-line236,7880
(defun helm-help-previous-line ()helm-help-previous-line242,8029
(defun helm-help-toggle-mark ()helm-help-toggle-mark248,8186
(defun helm-help-event-loop ()helm-help-event-loop255,8429
(defun helm-flatten-list (seq &optional omit-nulls)helm-flatten-list286,9682
(defun helm-mklist (obj)helm-mklist304,10407
(defun helm-skip-entries (seq black-regexp-list &optional white-regexp-list)helm-skip-entries336,11601
(defun helm-boring-directory-p (directory black-list)helm-boring-directory-p348,12192
(defun helm-shadow-entries (seq regexp-list)helm-shadow-entries359,12650
(defun helm-remove-if-not-match (regexp seq)helm-remove-if-not-match369,13044
(defun helm-remove-if-match (regexp seq)helm-remove-if-match380,13431
(defun helm-transform-mapcar (function args)helm-transform-mapcar391,13810
(defun helm-stringify (elm)helm-stringify409,14354
(defun helm-substring (str width)helm-substring417,14581
(defun helm-substring-by-width (str width &optional endstr)helm-substring-by-width426,14857
(defun helm-string-multibyte-p (str)helm-string-multibyte-p437,15340
(defun helm-get-pid-from-process-name (process-name)helm-get-pid-from-process-name442,15500
(defun helm-ff-find-printers ()helm-ff-find-printers450,15841
(defun helm-region-active-p ()helm-region-active-p461,16281
(defun helm-quote-whitespace (candidate)helm-quote-whitespace464,16374
(defun helm-symbolify (str-or-sym)helm-symbolify471,16546
(defun helm-symbol-name (obj)helm-symbol-name477,16682
(defun helm-describe-function (func)helm-describe-function483,16839
(defun helm-describe-variable (var)helm-describe-variable488,16968
(defun helm-describe-face (face)helm-describe-face493,17094
(defun helm-find-function (func)helm-find-function498,17214
(defun helm-find-variable (var)helm-find-variable502,17319
(defun helm-find-face-definition (face)helm-find-face-definition506,17421
(defun helm-kill-new (candidate &optional replace)helm-kill-new510,17540
(defun helm-same-major-mode-p (start-buffer alist)helm-same-major-mode-p518,17728
(defun helm-file-name-sans-extension (filename)helm-file-name-sans-extension559,19579
(defun helm-basename (fname &optional ext)helm-basename567,19931
(defun helm-basedir (fname)helm-basedir583,20691
(defun helm-current-directory ()helm-current-directory590,20942
(defun helm-w32-prepare-filename (file)helm-w32-prepare-filename598,21192
(defun helm-w32-shell-execute-open-file (file)helm-w32-shell-execute-open-file606,21473
(defvar helm-walk-ignore-directorieshelm-walk-ignore-directories611,21649
(defsubst helm--dir-file-name (file dir)helm--dir-file-name615,21795
(defsubst helm--dir-name-p (str)helm--dir-name-p619,21904
(defun helm-file-expand-wildcards (pattern &optional full)helm-file-expand-wildcards672,24508
(defun helm-set-pattern (pattern &optional noupdate)helm-set-pattern693,25419
(defun helm-minibuffer-completion-contents ()helm-minibuffer-completion-contents702,25756
(defmacro with-helm-buffer (&rest body)with-helm-buffer707,25964
(defmacro with-helm-current-buffer (&rest body)with-helm-current-buffer713,26130
(defun helm-buffer-get ()helm-buffer-get722,26500
(defun helm-window ()helm-window728,26663
(defun helm-action-window ()helm-action-window732,26758
(defmacro with-helm-window (&rest body)with-helm-window736,26875
(defun helm-yank-text-at-point ()helm-yank-text-at-point746,27081
(defun helm-reset-yank-point ()helm-reset-yank-point764,27784
(defvar helm--ansi-color-regexphelm--ansi-color-regexp773,27978
(defvar helm--ansi-color-drop-regexphelm--ansi-color-drop-regexp775,28041
(defun helm--ansi-color-apply (string)helm--ansi-color-apply777,28145

elpa/helm-core-20160617.307/helm-multi-match.el,3043
(defgroup helm-multi-match nilhelm-multi-match30,1043
(defcustom helm-mm-matching-method 'multi3helm-mm-matching-method34,1113
(defconst helm-mm-default-match-functionshelm-mm-default-match-functions57,2186
(defconst helm-mm-default-search-functionshelm-mm-default-search-functions59,2268
(defvar helm-mm-space-regexp "[\\ ] "helm-mm-space-regexp66,2380
(defun helm-mm-split-pattern (pattern)helm-mm-split-pattern69,2483
(defun helm-mm-1-make-regexp (pattern)helm-mm-1-make-regexp82,3028
(defvar helm-mm-exact-pattern-str nil)helm-mm-exact-pattern-str91,3212
(defvar helm-mm-exact-pattern-real nil)helm-mm-exact-pattern-real92,3251
(defun helm-mm-exact-get-pattern (pattern)helm-mm-exact-get-pattern94,3292
(defun helm-mm-exact-search (pattern &rest _ignore)helm-mm-exact-search109,3771
(defvar helm-mm-prefix-pattern-str nil)helm-mm-prefix-pattern-str118,3954
(defvar helm-mm-prefix-pattern-real nil)helm-mm-prefix-pattern-real119,3994
(defun helm-mm-prefix-get-pattern (pattern)helm-mm-prefix-get-pattern121,4036
(defun helm-mm-prefix-match (str &optional pattern)helm-mm-prefix-match127,4272
(defun helm-mm-prefix-search (pattern &rest _ignore)helm-mm-prefix-search136,4657
(defvar helm-mm-1-pattern-str nil)helm-mm-1-pattern-str144,4856
(defvar helm-mm-1-pattern-real nil)helm-mm-1-pattern-real145,4891
(defun helm-mm-1-get-pattern (pattern)helm-mm-1-get-pattern147,4928
(defun helm-mm-1-search (pattern &rest _ignore)helm-mm-1-search157,5292
(defvar helm-mm-2-pattern-str nil)helm-mm-2-pattern-str165,5485
(defvar helm-mm-2-pattern-real nil)helm-mm-2-pattern-real166,5520
(defun helm-mm-2-get-pattern (pattern)helm-mm-2-get-pattern168,5557
(defun helm-mm-2-search (pattern &rest _ignore)helm-mm-2-search178,5923
(defvar helm-mm-3-pattern-str nil)helm-mm-3-pattern-str186,6099
(defvar helm-mm-3-pattern-list nil)helm-mm-3-pattern-list187,6134
(defun helm-mm-3-get-patterns (pattern)helm-mm-3-get-patterns189,6171
(defun helm-mm-3-get-patterns-internal (pattern)helm-mm-3-get-patterns-internal199,6603
(defun helm-mm-3-search-base (pattern searchfn1 searchfn2)helm-mm-3-search-base229,8081
(defun helm-mm-3-search (pattern &rest _ignore)helm-mm-3-search256,9422
(defvar helm-mm--previous-migemo-info nilhelm-mm--previous-migemo-info265,9654
(define-minor-mode helm-migemo-modehelm-migemo-mode272,9911
(defun helm-mm-migemo-get-pattern (pattern)helm-mm-migemo-get-pattern282,10241
(defun helm-mm-migemo-search-pattern-get (pattern)helm-mm-migemo-search-pattern-get287,10430
(defun helm-mm-migemo-string-match (pattern str)helm-mm-migemo-string-match292,10633
(defun helm-mm-migemo-forward (word &optional bound noerror count)helm-mm-migemo-forward306,11282
(defun helm-mm-3-migemo-search (pattern &rest _ignore)helm-mm-3-migemo-search317,11802
(defun helm-mm-3p-match (str &optional pattern)helm-mm-3p-match326,12045
(defun helm-mm-3p-search (pattern &rest _ignore)helm-mm-3p-search337,12581
(defun helm-mm-search (pattern &rest _ignore)helm-mm-search355,13155

elpa/helm-core-20160617.307/helm-source.el,2578
(defvar helm-fuzzy-sort-fn)helm-fuzzy-sort-fn35,1294
(defvar helm-fuzzy-match-fn)helm-fuzzy-match-fn36,1322
(defvar helm-fuzzy-search-fn)helm-fuzzy-search-fn37,1351
(defgeneric helm--setup-source (source)helm--setup-source44,1553
(defgeneric helm-setup-user-source (source)helm-setup-user-source47,1667
(defclass helm-source ()helm-source54,1809
(defclass helm-source-sync (helm-source)helm-source-sync542,18573
(defclass helm-source-async (helm-source)helm-source-async585,20236
(defclass helm-source-in-buffer (helm-source)helm-source-in-buffer608,21068
(defclass helm-source-dummy (helm-source)helm-source-dummy697,24416
(defclass helm-source-in-file (helm-source-in-buffer)helm-source-in-file721,24860
(defun helm-default-init-source-in-buffer-function ()helm-default-init-source-in-buffer-function738,25361
(defun helm--create-source (object)helm--create-source746,25593
(defun helm-make-source (name class &rest args)helm-make-source754,25904
(defun helm-make-type (class &rest args)helm-make-type767,26473
(defvar helm-mm-default-search-functions)helm-mm-default-search-functions773,26676
(defvar helm-mm-default-match-functions)helm-mm-default-match-functions774,26718
(defun helm-source-mm-get-search-or-match-fns (source method)helm-source-mm-get-search-or-match-fns776,26760
(defun helm-source--persistent-help-string (string source)helm-source--persistent-help-string833,29570
(defun helm-source--header-line (source)helm-source--header-line839,29825
(defmethod helm--setup-source :primary ((_source helm-source)))helm--setup-source869,31207
(defmethod helm--setup-source :before ((source helm-source))helm--setup-source871,31272
(defmethod helm-setup-user-source ((_source helm-source)))helm-setup-user-source897,32663
(defmethod helm--setup-source ((source helm-source-sync))helm--setup-source899,32723
(defmethod helm--setup-source ((source helm-source-in-buffer))helm--setup-source916,33519
(defmethod helm--setup-source ((source helm-source-async))helm--setup-source952,35107
(defmethod helm--setup-source ((source helm-source-dummy))helm--setup-source958,35420
(defmacro helm-build-sync-source (name &rest args)helm-build-sync-source974,36043
(defmacro helm-build-async-source (name &rest args)helm-build-async-source980,36279
(defmacro helm-build-in-buffer-source (name &rest args)helm-build-in-buffer-source986,36519
(defmacro helm-build-dummy-source (name &rest args)helm-build-dummy-source992,36794
(defmacro helm-build-in-file-source (name file &rest args)helm-build-in-file-source998,37042

elpa/helm-core-20160617.307/helm.el,32470
(defun helm-define-multi-key (keymap key functions &optional delay)helm-define-multi-key42,1465
(defmacro helm-multi-key-defun (name docstring funs &optional delay)helm-multi-key-defun64,2258
(defun helm-make-multi-command (functions &optional delay)helm-make-multi-command73,2685
(defun helm-run-multi-key-command (functions iterator delay)helm-run-multi-key-command83,3118
(defun helm-define-key-with-subkeys (map key subkey commandhelm-define-key-with-subkeys108,4280
(defvar helm-maphelm-map168,6501
(defgroup helm nilhelm270,12091
(defcustom helm-completion-window-scroll-margin 5helm-completion-window-scroll-margin274,12165
(defcustom helm-display-source-at-screen-top thelm-display-source-at-screen-top282,12410
(defcustom helm-candidate-number-limit 100helm-candidate-number-limit289,12681
(defcustom helm-input-idle-delay 0.01helm-input-idle-delay301,13151
(defcustom helm-exit-idle-delay 0helm-exit-idle-delay306,13274
(defcustom helm-full-frame nilhelm-full-frame313,13495
(defvaralias 'helm-samewindow 'helm-full-frame)helm-samewindow319,13651
(defcustom helm-candidate-separatorhelm-candidate-separator322,13769
(defcustom helm-save-configuration-functionshelm-save-configuration-functions328,13911
(defcustom helm-persistent-action-use-special-display nilhelm-persistent-action-use-special-display343,14519
(defcustom helm-display-function 'helm-default-display-bufferhelm-display-function348,14682
(defcustom helm-case-fold-search 'smarthelm-case-fold-search355,14898
(defcustom helm-file-name-case-fold-searchhelm-file-name-case-fold-search373,15535
(defcustom helm-reuse-last-window-split-state nilhelm-reuse-last-window-split-state384,15830
(defcustom helm-split-window-preferred-function 'helm-split-window-default-fnhelm-split-window-preferred-function392,16149
(defcustom helm-split-window-default-side 'belowhelm-split-window-default-side397,16310
(defcustom helm-display-buffer-default-size nilhelm-display-buffer-default-size418,17105
(defcustom helm-split-window-in-side-p nilhelm-split-window-in-side-p426,17435
(defcustom helm-always-two-windows nilhelm-always-two-windows437,17759
(defcustom helm-sources-using-default-as-input '(helm-source-imenuhelm-sources-using-default-as-input453,18279
(defcustom helm-delete-minibuffer-contents-from-point thelm-delete-minibuffer-contents-from-point466,18987
(defcustom helm-follow-mode-persistent nilhelm-follow-mode-persistent473,19257
(defcustom helm-prevent-escaping-from-minibuffer thelm-prevent-escaping-from-minibuffer480,19527
(defcustom helm-move-to-line-cycle-in-source nilhelm-move-to-line-cycle-in-source485,19672
(defcustom helm-fuzzy-match-fn 'helm-fuzzy-matchhelm-fuzzy-match-fn491,19887
(defcustom helm-fuzzy-search-fn 'helm-fuzzy-searchhelm-fuzzy-search-fn496,20044
(defcustom helm-fuzzy-sort-fn 'helm-fuzzy-matching-default-sort-fnhelm-fuzzy-sort-fn501,20208
(defcustom helm-fuzzy-matching-highlight-fn 'helm-fuzzy-default-highlight-matchhelm-fuzzy-matching-highlight-fn507,20400
(defcustom helm-autoresize-max-height 40helm-autoresize-max-height513,20595
(defcustom helm-autoresize-min-height 10helm-autoresize-min-height520,20798
(defcustom helm-input-method-verbose-flag nilhelm-input-method-verbose-flag528,21035
(defcustom helm-display-header-line thelm-display-header-line541,21741
(defcustom helm-inherit-input-method thelm-inherit-input-method546,21851
(defcustom helm-echo-input-in-header-line nilhelm-echo-input-in-header-line553,22077
(defcustom helm-tramp-connection-min-time-diff 5helm-tramp-connection-min-time-diff558,22196
(defcustom helm-debug-root-directory nilhelm-debug-root-directory571,22808
(defgroup helm-faces nilhelm-faces585,23179
(defface helm-source-headerhelm-source-header591,23293
(defface helm-visible-markhelm-visible-mark603,23657
(defface helm-headerhelm-header615,24029
(defface helm-candidate-numberhelm-candidate-number620,24151
(defface helm-selectionhelm-selection625,24384
(defface helm-separatorhelm-separator633,24656
(defface helm-actionhelm-action639,24838
(defface helm-prefarghelm-prefarg644,24959
(defface helm-matchhelm-match650,25142
(defface helm-header-line-left-marginhelm-header-line-left-margin656,25318
(defvar helm-type-attributes nilhelm-type-attributes665,25514
(defvar helm-source-filter nilhelm-source-filter675,25931
(defvar helm-selection-overlay nilhelm-selection-overlay681,26123
(defvar helm-async-processes nilhelm-async-processes684,26219
(defvar helm-before-initialize-hook nilhelm-before-initialize-hook687,26324
(defvar helm-after-initialize-hook nilhelm-after-initialize-hook694,26612
(defvar helm-update-hook nilhelm-update-hook699,26813
(defvar helm-after-update-hook nilhelm-after-update-hook705,27021
(defvar helm-cleanup-hook nilhelm-cleanup-hook711,27279
(defvar helm-select-action-hook nilhelm-select-action-hook718,27476
(defvar helm-before-action-hook nilhelm-before-action-hook721,27555
(defvar helm-after-action-hook nilhelm-after-action-hook726,27742
(defvar helm-exit-minibuffer-hook nilhelm-exit-minibuffer-hook729,27812
(defvar helm-after-persistent-action-hook nilhelm-after-persistent-action-hook736,28075
(defvar helm-move-selection-before-hook nilhelm-move-selection-before-hook739,28167
(defvar helm-move-selection-after-hook nilhelm-move-selection-after-hook742,28264
(defvar helm-after-preselection-hook nilhelm-after-preselection-hook745,28359
(defvar helm-window-configuration-hook nilhelm-window-configuration-hook748,28449
(defconst helm-restored-variableshelm-restored-variables751,28549
(defvar helm-execute-action-at-once-if-one nilhelm-execute-action-at-once-if-one758,28722
(defvar helm-quit-if-no-candidate nilhelm-quit-if-no-candidate763,28929
(defvar helm-debug-variables nilhelm-debug-variables767,29057
(defvar helm-debug-buffer "*Debug Helm Log*")helm-debug-buffer772,29233
(defvar helm-debug nilhelm-debug774,29280
(defvar helm-compile-source-functionshelm-compile-source-functions779,29474
(defvar helm-mode-line-string "\helm-mode-line-string785,29685
(defvar helm-minibuffer-set-up-hook nilhelm-minibuffer-set-up-hook797,30121
(defvar helm-help-messagehelm-help-message810,30562
(defvar helm-autoresize-mode) ;; Undefined in `helm-default-display-buffer'.helm-autoresize-mode907,35215
(defvar helm-current-prefix-arg nilhelm-current-prefix-arg913,35324
(defvar helm-saved-action nilhelm-saved-action915,35418
(defvar helm-saved-current-source nilhelm-saved-current-source917,35506
(defvar helm-compiled-sources nilhelm-compiled-sources919,35608
(defvar helm-in-persistent-action nilhelm-in-persistent-action921,35683
(defvar helm-last-buffer nilhelm-last-buffer923,35768
(defvar helm-saved-selection nilhelm-saved-selection925,35846
(defvar helm-sources nilhelm-sources927,35954
(defvar helm-buffer-file-name nilhelm-buffer-file-name929,36036
(defvar helm-candidate-cache (make-hash-table :test 'equal)helm-candidate-cache931,36127
(defvar helm-input ""helm-input933,36255
(defvar helm-input-local nilhelm-input-local935,36323
(defvar helm-source-name nil)helm-source-name937,36434
(defvar helm-current-source nil)helm-current-source938,36464
(defvar helm-candidate-buffer-alist nil)helm-candidate-buffer-alist939,36497
(defvar helm-tick-hash (make-hash-table :test 'equal))helm-tick-hash940,36538
(defvar helm-issued-errors nil)helm-issued-errors941,36593
(defvar helm--last-log-file nilhelm--last-log-file942,36625
(defvar helm-follow-mode nil)helm-follow-mode944,36713
(defvar helm--local-variables nil)helm--local-variables945,36743
(defvar helm-split-window-state nil)helm-split-window-state946,36778
(defvar helm--window-side-state nil)helm--window-side-state947,36815
(defvar helm-selection-point nil)helm-selection-point948,36852
(defvar helm-alive-p nil)helm-alive-p949,36886
(defvar helm-visible-mark-overlays nil)helm-visible-mark-overlays950,36912
(defvar helm-update-blacklist-regexps '("^" "^ *" "$" "!" " " "\\b"helm-update-blacklist-regexps951,36952
(defvar helm-force-updating-p nil)helm-force-updating-p953,37093
(defvar helm-exit-status 0helm-exit-status954,37128
(defvar helm-minibuffer-confirm-state nil)helm-minibuffer-confirm-state961,37456
(defvar helm-quit nil)helm-quit962,37499
(defvar helm-attributes nil "List of all `helm' attributes.")helm-attributes963,37522
(defvar helm-buffers nilhelm-buffers964,37584
(defvar helm-current-position nilhelm-current-position966,37666
(defvar helm-last-frame-or-window-configuration nilhelm-last-frame-or-window-configuration970,37842
(defvar helm-onewindow-p nil)helm-onewindow-p972,37958
(defvar helm-types nil)helm-types973,37988
(defvar helm--mode-line-string-real nil) ; The string to display in mode-line.helm--mode-line-string-real974,38012
(defvar helm-persistent-action-display-window nil)helm-persistent-action-display-window975,38091
(defvar helm-marked-candidates nilhelm-marked-candidates976,38142
(defvar helm--mode-line-display-prefarg nil)helm--mode-line-display-prefarg978,38234
(defvar helm--temp-follow-flag nilhelm--temp-follow-flag979,38279
(defvar helm--reading-passwd-or-string nil)helm--reading-passwd-or-string981,38390
(defvar helm--in-update nil)helm--in-update982,38434
(defvar helm--in-fuzzy nil)helm--in-fuzzy983,38463
(defvar helm--maybe-use-default-as-input nilhelm--maybe-use-default-as-input984,38491
(defvar helm--temp-hooks nilhelm--temp-hooks990,38760
(defvar helm-truncate-lines nilhelm-truncate-lines992,38848
(defvar helm--prompt nil)helm--prompt994,38948
(defvar helm--file-completion-sourceshelm--file-completion-sources995,38974
(defvar helm--url-regexp "\\(news\\(post\\)?:\\|mailto:\\|file:\\|\\(ftp\\|https?\\|telnet\\|gopher\\|www\\|wais\\)://\\)")helm--url-regexp1003,39398
(defvar helm--ignore-errors nilhelm--ignore-errors1004,39522
(defun helm-log (format-string &rest args)helm-log1010,39730
(defun helm-log-run-hook (hook)helm-log-run-hook1031,40641
(defun helm-log-get-current-function ()helm-log-get-current-function1038,40946
(defun helm-log-error (&rest args)helm-log-error1049,41443
(defun helm-log-save-maybe ()helm-log-save-maybe1058,41816
(defun helm-debug-open-last-log ()helm-debug-open-last-log1079,42779
(defun helm-print-error-messages ()helm-print-error-messages1089,43106
(defun helm-this-command ()helm-this-command1098,43359
(defmacro with-helm-time-after-update (&rest body)with-helm-time-after-update1124,44283
(defmacro with-helm-restore-variables (&rest body)with-helm-restore-variables1141,44876
(defmacro with-helm-default-directory (directory &rest body)with-helm-default-directory1153,45385
(defun helm-default-directory ()helm-default-directory1160,45669
(defmacro with-helm-temp-hook (hook &rest body)with-helm-temp-hook1164,45839
(defmacro with-helm-after-update-hook (&rest body)with-helm-after-update-hook1177,46304
(defmacro with-helm-alive-p (&rest body)with-helm-alive-p1182,46488
(defun helm-attr (attribute-name &optional source compute)helm-attr1190,46732
(defun helm-get-attribute-from-source-type (attribute source)helm-get-attribute-from-source-type1231,48572
(defun helm-get-attribute-from-type (attribute type)helm-get-attribute-from-type1238,48815
(defun helm-get-actions-from-type (source)helm-get-actions-from-type1243,49015
(defun helm-inherit-attribute-from-source (attribute source)helm-inherit-attribute-from-source1248,49198
(defun helm-append-at-nth (seq elm index)helm-append-at-nth1254,49399
(defun helm-add-action-to-source (name fn source &optional index)helm-add-action-to-source1267,49815
(defun helm-delete-action-from-source (action-or-name source)helm-delete-action-from-source1286,50710
(defun helm-set-source-filter (sources)helm-set-source-filter1339,53511
(defun helm--normalize-filter-sources (sources)helm--normalize-filter-sources1376,54860
(defun helm-set-sources (sources &optional no-init no-update)helm-set-sources1383,55105
(defun helm-get-sources ()helm-get-sources1395,55636
(defun helm-get-selection (&optional buffer force-display-part)helm-get-selection1418,56212
(defun helm-get-actions-from-current-source ()helm-get-actions-from-current-source1451,57926
(defun helm-get-current-source ()helm-get-current-source1474,58994
(defun helm-buffer-is-modified (buffer)helm-buffer-is-modified1496,59996
(defun helm-current-buffer-is-modified ()helm-current-buffer-is-modified1508,60506
(defun helm-run-after-exit (function &rest args)helm-run-after-exit1512,60671
(defun helm-exit-and-execute-action (action)helm-exit-and-execute-action1528,61279
(defalias 'helm-run-after-quit 'helm-run-after-exit)helm-run-after-quit1540,61747
(defalias 'helm-quit-and-execute-action 'helm-exit-and-execute-action)helm-quit-and-execute-action1542,61866
(defun helm-interpret-value (value &optional source compute)helm-interpret-value1545,62022
(defun helm-set-local-variable (&rest args)helm-set-local-variable1565,62911
(defun helm-empty-source-p ()helm-empty-source-p1595,63998
(defun helm-funcall-with-source (source functions &rest args)helm-funcall-with-source1613,64535
(defun helm-funcall-foreach (sym &optional sources)helm-funcall-foreach1636,65659
(defun helm-normalize-sources (sources)helm-normalize-sources1643,65956
(defun helm-get-candidate-number (&optional in-current-source)helm-get-candidate-number1651,66232
(defmacro with-helm-quittable (&rest body)with-helm-quittable1684,67814
(defconst helm-argument-keyshelm-argument-keys1699,68319
(defun helm (&rest plist)helm1704,68451
(defun helm-alive-p ()helm-alive-p1834,73112
(defun helm-parse-keys (keys)helm-parse-keys1844,73468
(defun helm-internal (&optionalhelm-internal1868,74479
(defun helm-resume (arg)helm-resume1960,78670
(defun helm-resume-previous-session-after-quit (arg)helm-resume-previous-session-after-quit1998,80325
(defun helm-resume-list-buffers-after-quit ()helm-resume-list-buffers-after-quit2007,80726
(defun helm-resume-p (any-resume)helm-resume-p2016,81084
(defun helm-resume-select-buffer ()helm-resume-select-buffer2020,81192
(defun helm-other-buffer (any-sources any-buffer)helm-other-buffer2032,81600
(defun helm-nest (&rest same-as-helm)helm-nest2037,81817
(defun helm-current-position (save-or-restore)helm-current-position2093,84429
(defun helm-frame-or-window-configuration (save-or-restore)helm-frame-or-window-configuration2115,85459
(defun helm-split-window-default-fn (window)helm-split-window-default-fn2137,86693
(defun helm-window-in-direction (direction)helm-window-in-direction2167,88184
(defun helm-display-buffer (buffer)helm-display-buffer2176,88420
(defun helm-default-display-buffer (buffer)helm-default-display-buffer2206,89678
(defun helm-initialize (any-resume any-input any-default any-sources)helm-initialize2232,90904
(defun helm-initialize-overlays (buffer)helm-initialize-overlays2267,92422
(defun helm-restore-position-on-quit ()helm-restore-position-on-quit2281,92981
(defun helm--recent-push (elm sym)helm--recent-push2285,93119
(defun helm--current-buffer ()helm--current-buffer2292,93345
(defun helm--run-init-hooks (hook)helm--run-init-hooks2311,94352
(defun helm-initial-setup (any-default)helm-initial-setup2325,94943
(define-derived-mode helm-major-modehelm-major-mode2375,97113
(defun helm-create-helm-buffer ()helm-create-helm-buffer2382,97364
(define-minor-mode helm--minor-modehelm--minor-mode2415,98955
(defun helm--reset-default-pattern ()helm--reset-default-pattern2426,99296
(defun helm-read-pattern-maybe (any-prompt any-inputhelm-read-pattern-maybe2430,99407
(defun helm-toggle-suspend-update ()helm-toggle-suspend-update2535,105167
(defadvice tramp-read-passwd (around disable-helm-update)tramp-read-passwd2548,105673
(defun helm--advice-tramp-read-passwd (old--fn &rest args)helm--advice-tramp-read-passwd2562,106165
(defun helm--advice-ange-ftp-get-passwd (old--fn &rest args)helm--advice-ange-ftp-get-passwd2574,106618
(defadvice ange-ftp-get-passwd (around disable-helm-update)ange-ftp-get-passwd2584,106991
(defun helm--maybe-update-keymap (&optional map)helm--maybe-update-keymap2594,107351
(defvar helm--remap-mouse-mode-maphelm--remap-mouse-mode-map2616,108375
(define-minor-mode helm--remap-mouse-modehelm--remap-mouse-mode2626,108844
(defun helm-cleanup ()helm-cleanup2640,109261
(defun helm-clean-up-minibuffer ()helm-clean-up-minibuffer2674,110647
(defun helm-check-minibuffer-input ()helm-check-minibuffer-input2687,111022
(defun helm-check-new-input (input)helm-check-new-input2694,111276
(defun helm--reset-update-flag ()helm--reset-update-flag2705,111656
(defun helm-compile-sources (sources funcs)helm-compile-sources2716,111882
(defun helm-get-candidates (source)helm-get-candidates2733,112404
(defmacro helm-while-no-input (&rest body)helm-while-no-input2781,114870
(defun helm-get-cached-candidates (source)helm-get-cached-candidates2790,115175
(defun helm-process-candidate-transformer (candidates source)helm-process-candidate-transformer2814,116204
(defun helm-process-filtered-candidate-transformer (candidates source)helm-process-filtered-candidate-transformer2820,116469
(defmacro helm--maybe-process-filter-one-by-one-candidate (candidate source)helm--maybe-process-filter-one-by-one-candidate2826,116768
(defun helm--initialize-one-by-one-candidates (candidates source)helm--initialize-one-by-one-candidates2837,117275
(defun helm-process-filtered-candidate-transformer-maybehelm-process-filtered-candidate-transformer-maybe2846,117703
(defun helm-process-real-to-display (candidates source)helm-process-real-to-display2856,118151
(defun helm-transform-candidates (candidates source &optional process-p)helm-transform-candidates2869,118765
(defun helm-candidate-number-limit (source)helm-candidate-number-limit2885,119422
(defun helm-candidate-get-display (candidate)helm-candidate-get-display2896,119853
(defun helm-process-pattern-transformer (pattern source)helm-process-pattern-transformer2907,120207
(defun helm-default-match-function (candidate)helm-default-match-function2913,120462
(defvar helm--fuzzy-regexp-cache (make-hash-table :test 'eq))helm--fuzzy-regexp-cache2922,120689
(defun helm--fuzzy-match-maybe-set-pattern ()helm--fuzzy-match-maybe-set-pattern2923,120751
(defun helm-fuzzy-match (candidate)helm-fuzzy-match2949,121940
(defun helm-fuzzy-search (pattern)helm-fuzzy-search2960,122460
(defun helm-score-candidate-for-pattern (candidate pattern)helm-score-candidate-for-pattern2994,124171
(defun helm-fuzzy-matching-default-sort-fn (candidates _source &optional use-real)helm-fuzzy-matching-default-sort-fn3017,125379
(defun helm--maybe-get-migemo-pattern (pattern)helm--maybe-get-migemo-pattern3059,127441
(defun helm-fuzzy-default-highlight-match (candidate)helm-fuzzy-default-highlight-match3064,127600
(defun helm-fuzzy-highlight-matches (candidates _source)helm-fuzzy-highlight-matches3126,130799
(defun helm-match-functions (source)helm-match-functions3132,131072
(defun helm-search-functions (source)helm-search-functions3139,131370
(defun helm-take-first-elements (seq n)helm-take-first-elements3144,131559
(defun helm-set-case-fold-search-1 (pattern)helm-set-case-fold-search-13167,132531
(defun helm-match-from-candidates (cands matchfns match-part-fn limit source)helm-match-from-candidates3173,132746
(defun helm-compute-matches (source)helm-compute-matches3219,135314
(defun helm--candidates-in-buffer-p (matchfns)helm--candidates-in-buffer-p3246,136586
(defun helm-render-source (source matches)helm-render-source3249,136666
(defmacro helm--maybe-use-while-no-input (&rest body)helm--maybe-use-while-no-input3269,137404
(defun helm--collect-matches (src-list)helm--collect-matches3279,137828
(defun helm-update (&optional preselect source)helm-update3288,138096
(defun helm-update-source-p (source)helm-update-source-p3335,140232
(defun helm-update-move-first-line (&optional without-hook)helm-update-move-first-line3354,141122
(defun helm-force-update (&optional preselect)helm-force-update3361,141350
(defun helm-refresh ()helm-refresh3382,142121
(defun helm-force-update--reinit (source)helm-force-update--reinit3389,142291
(defun helm-remove-candidate-cache (source)helm-remove-candidate-cache3399,142664
(defun helm-insert-match (match insert-function &optional num)helm-insert-match3403,142819
(defun helm-insert-header-from-source (source)helm-insert-header-from-source3423,143763
(defun helm-insert-header (name &optional display-string)helm-insert-header3433,144145
(defun helm-insert-candidate-separator ()helm-insert-candidate-separator3451,144861
(defun helm-output-filter (process output-string)helm-output-filter3461,145179
(defun helm-output-filter-1 (process-assoc output-string)helm-output-filter-13466,145391
(defun helm-output-filter--process-source (process output-string source limit)helm-output-filter--process-source3482,146057
(defun helm-output-filter--collect-candidates (lines incomplete-line-info)helm-output-filter--collect-candidates3503,147098
(defun helm-output-filter--post-process ()helm-output-filter--post-process3529,148569
(defun helm-process-deferred-sentinel-hook (process event file)helm-process-deferred-sentinel-hook3539,148962
(defun helm-kill-async-processes ()helm-kill-async-processes3568,150466
(defun helm-kill-async-process (process)helm-kill-async-process3574,150726
(defun helm-execute-selection-action ()helm-execute-selection-action3582,150924
(defun helm-execute-selection-action-1 (&optionalhelm-execute-selection-action-13591,151288
(defun helm-coerce-selection (selection source)helm-coerce-selection3617,152459
(defun helm-get-default-action (action)helm-get-default-action3624,152716
(defun helm-select-action ()helm-select-action3630,152899
(defun helm-show-action-buffer (actions)helm-show-action-buffer3661,154484
(defun helm-display-source-at-screen-top-maybe (unit)helm-display-source-at-screen-top-maybe3694,155844
(defun helm-skip-noncandidate-line (direction)helm-skip-noncandidate-line3701,156182
(defun helm-skip-header-and-separator-line (direction)helm-skip-header-and-separator-line3710,156621
(defun helm-display-mode-line (source &optional force)helm-display-mode-line3723,157181
(defun helm--set-header-line (&optional update)helm--set-header-line3786,160494
(defun helm--update-header-line ()helm--update-header-line3812,161708
(defun helm-hide-minibuffer-maybe ()helm-hide-minibuffer-maybe3818,161902
(defun helm-show-candidate-number (&optional name)helm-show-candidate-number3829,162476
(defun helm-move--beginning-of-multiline-candidate ()helm-move--beginning-of-multiline-candidate3887,165101
(defun helm-move--previous-multi-line-fn ()helm-move--previous-multi-line-fn3897,165494
(defun helm-move--previous-line-fn ()helm-move--previous-line-fn3903,165698
(defun helm-move--next-multi-line-fn ()helm-move--next-multi-line-fn3918,166230
(defun helm-move--next-line-fn ()helm-move--next-line-fn3927,166581
(defun helm-move--previous-page-fn ()helm-move--previous-page-fn3939,167104
(defun helm-move--next-page-fn ()helm-move--next-page-fn3944,167237
(defun helm-move--beginning-of-buffer-fn ()helm-move--beginning-of-buffer-fn3949,167358
(defun helm-move--end-of-buffer-fn ()helm-move--end-of-buffer-fn3952,167430
(defun helm-move--end-of-source ()helm-move--end-of-source3955,167496
(defun helm-move--beginning-of-source ()helm-move--beginning-of-source3959,167643
(defun helm-move--previous-source-fn ()helm-move--previous-source-fn3963,167750
(defun helm-move--next-source-fn ()helm-move--next-source-fn3971,167972
(defun helm-move--goto-source-fn (source-or-name)helm-move--goto-source-fn3980,168343
(defun helm-candidate-number-at-point ()helm-candidate-number-at-point3989,168710
(defun helm--next-or-previous-line (direction &optional arg)helm--next-or-previous-line3995,168912
(defun helm-previous-line (&optional arg)helm-previous-line4011,169714
(defun helm-next-line (&optional arg)helm-next-line4019,170008
(defun helm-previous-page ()helm-previous-page4029,170357
(defun helm-next-page ()helm-next-page4036,170572
(defun helm-beginning-of-buffer ()helm-beginning-of-buffer4043,170778
(defun helm-end-of-buffer ()helm-end-of-buffer4050,170996
(defun helm-previous-source ()helm-previous-source4057,171201
(defun helm-next-source ()helm-next-source4064,171425
(defun helm-goto-source (source-or-name)helm-goto-source4071,171633
(defun helm--follow-action (arg)helm--follow-action4075,171801
(defun helm-follow-action-forward ()helm-follow-action-forward4085,172178
(defun helm-follow-action-backward ()helm-follow-action-backward4091,172377
(defun helm-mark-current-line (&optional resumep)helm-mark-current-line4097,172583
(defun helm-confirm-and-exit-minibuffer ()helm-confirm-and-exit-minibuffer4119,173444
(defun helm-confirm-and-exit-hook ()helm-confirm-and-exit-hook4166,175882
(defun helm-read-string (prompt &optional initial-input historyhelm-read-string4173,176167
(defun helm--updating-p ()helm--updating-p4180,176505
(defun helm-maybe-exit-minibuffer ()helm-maybe-exit-minibuffer4188,176810
(defun helm-exit-minibuffer ()helm-exit-minibuffer4198,177141
(defun helm-keyboard-quit ()helm-keyboard-quit4206,177420
(defun helm-get-next-header-pos ()helm-get-next-header-pos4217,177752
(defun helm-get-previous-header-pos ()helm-get-previous-header-pos4221,177897
(defun helm-pos-multiline-p ()helm-pos-multiline-p4225,178054
(defun helm-get-next-candidate-separator-pos ()helm-get-next-candidate-separator-pos4229,178213
(defun helm-get-previous-candidate-separator-pos ()helm-get-previous-candidate-separator-pos4243,178776
(defun helm-pos-header-line-p ()helm-pos-header-line-p4247,178972
(defun helm-pos-candidate-separator-p ()helm-pos-candidate-separator-p4252,179177
(defun helm-debug-output ()helm-debug-output4260,179364
(defun helm-debug-output-function (&optional vars)helm-debug-output-function4267,179589
(defun helm-debug-toggle ()helm-debug-toggle4280,180122
(defun helm-enable-or-switch-to-debug ()helm-enable-or-switch-to-debug4287,180352
(defun helm-kill-buffer-hook ()helm-kill-buffer-hook4301,180777
(defun helm-preselect (candidate-or-regexp &optional source)helm-preselect4310,181199
(defun helm-delete-current-selection ()helm-delete-current-selection4342,182789
(defun helm-end-of-source-p (&optional at-point)helm-end-of-source-p4366,183834
(defun helm-beginning-of-source-p (&optional at-point)helm-beginning-of-source-p4376,184206
(defun helm-edit-current-selection-internal (func)helm-edit-current-selection-internal4386,184595
(defmacro helm-edit-current-selection (&rest forms)helm-edit-current-selection4401,185163
(defun helm--delete-minibuffer-contents-from (from-str)helm--delete-minibuffer-contents-from4408,185420
(defun helm-delete-minibuffer-contents (&optional arg)helm-delete-minibuffer-contents4419,185848
(defun helm-compile-source--multi-match (source)helm-compile-source--multi-match4442,186803
(defun helm-compile-source--type (source)helm-compile-source--type4468,188150
(defun define-helm-type-attribute (type definition &optional doc)define-helm-type-attribute4473,188313
(defun helm-document-attribute (attribute short-doc &optional long-doc)helm-document-attribute4486,188808
(defun helm-add-type-attribute (type definition)helm-add-type-attribute4500,189370
(defun helm-document-type-attribute (type doc)helm-document-type-attribute4505,189587
(defun helm-dummy-candidate (_candidate _source)helm-dummy-candidate4511,189785
(defun helm-compile-source--dummy (source)helm-compile-source--dummy4516,189964
(defun helm-candidates-in-buffer (&optional source)helm-candidates-in-buffer4531,190469
(defun helm-candidates-in-buffer-search-default-fn (pattern)helm-candidates-in-buffer-search-default-fn4616,193695
(defun helm-candidates-in-buffer-1 (buffer pattern get-line-fnhelm-candidates-in-buffer-14622,193920
(defun helm-search-from-candidate-buffer (pattern get-line-fn search-fnshelm-search-from-candidate-buffer4640,194658
(defun helm-search-match-part (candidate pattern)helm-search-match-part4696,197799
(defun helm-initial-candidates-from-candidate-buffer (get-line-fn limit)helm-initial-candidates-from-candidate-buffer4720,199020
(defun helm--search-from-candidate-buffer-1 (search-fn)helm--search-from-candidate-buffer-14727,199334
(defun helm-candidate-buffer (&optional create-or-buffer)helm-candidate-buffer4746,199950
(defun helm-init-candidates-in-buffer (buffer data)helm-init-candidates-in-buffer4805,202400
(defun helm-compile-source--candidates-in-buffer (source)helm-compile-source--candidates-in-buffer4828,203356
(defun helm-toggle-resplit-window ()helm-toggle-resplit-window4841,203741
(defun helm-enlarge-window-1 (n)helm-enlarge-window-14879,205769
(defun helm-narrow-window ()helm-narrow-window4887,206045
(defun helm-enlarge-window ()helm-enlarge-window4894,206208
(defun helm-swap-windows ()helm-swap-windows4901,206373
(defun helm--get-window-side-state ()helm--get-window-side-state4944,208535
(defun helm-replace-buffer-in-window (window buffer1 buffer2)helm-replace-buffer-in-window4955,209016
(defun helm-select-nth-action (n)helm-select-nth-action4962,209303
(defun helm-get-nth-action (n action)helm-get-nth-action4975,209802
(defun helm-execute-selection-action-at-nth (linum)helm-execute-selection-action-at-nth4986,210141
(defmacro with-helm-display-same-window (&rest body)with-helm-display-same-window4996,210490
(defun helm-initialize-persistent-action ()helm-initialize-persistent-action5003,210795
(defun helm-persistent-action-display-window (&optional split-onewindow)helm-persistent-action-display-window5055,213328
(defun helm-select-persistent-action-window (&optional split-onewindow)helm-select-persistent-action-window5068,214048
(defun helm-persistent-action-display-buffer (buf &optional  action)helm-persistent-action-display-buffer5076,214435
(defun helm-other-window-base (command &optional scroll-amount)helm-other-window-base5115,216629
(defun helm-scroll-other-window ()helm-scroll-other-window5121,216900
(defun helm-scroll-other-window-down ()helm-scroll-other-window-down5127,217108
(defun helm-recenter-top-bottom-other-window ()helm-recenter-top-bottom-other-window5133,217330
(defun helm-reposition-window-other-window ()helm-reposition-window-other-window5139,217595
(defun helm-clear-visible-mark ()helm-clear-visible-mark5149,217886
(defun helm-this-visible-mark ()helm-this-visible-mark5154,218082
(defun helm-delete-visible-mark (overlay)helm-delete-visible-mark5159,218236
(defun helm-make-visible-mark ()helm-make-visible-mark5168,218537
(defun helm-toggle-visible-mark ()helm-toggle-visible-mark5183,219266
(defun helm-file-completion-source-p ()helm-file-completion-source-p5199,219864
(defun helm-mark-all ()helm-mark-all5206,220191
(defun helm-unmark-all ()helm-unmark-all5263,223253
(defun helm-toggle-all-marks ()helm-toggle-all-marks5275,223629
(defun helm--compute-marked (real source wildcard)helm--compute-marked5288,224097
(defun helm-current-source-name= (name)helm-current-source-name=5326,225895
(defun helm-revive-visible-mark ()helm-revive-visible-mark5331,226049
(defun helm-next-point-in-list (curpos points &optional prev)helm-next-point-in-list5362,227568
(defun helm-next-visible-mark (&optional prev)helm-next-visible-mark5382,228228
(defun helm-prev-visible-mark ()helm-prev-visible-mark5396,228687
(defun helm-yank-selection (arg)helm-yank-selection5405,228903
(defun helm-kill-selection-and-quit (arg)helm-kill-selection-and-quit5415,229253
(defun helm-copy-to-buffer ()helm-copy-to-buffer5432,229964
(defun helm-follow-mode (&optional arg)helm-follow-mode5451,230525
(defvar helm-follow-input-idle-delay nilhelm-follow-input-idle-delay5514,233473
(defun helm-follow-execute-persistent-action-maybe ()helm-follow-execute-persistent-action-maybe5518,233685
(defun helm--autoresize-hook (&optional max-height min-height)helm--autoresize-hook5536,234365
(define-minor-mode helm-autoresize-modehelm-autoresize-mode5546,234796
(defun helm-help ()helm-help5562,235468
(defun helm-toggle-truncate-line ()helm-toggle-truncate-line5580,236100

elpa/helm-projectile-20161008.45/helm-projectile-autoloads.el,76
(defvar helm-projectile-fuzzy-match t "\helm-projectile-fuzzy-match10,293

elpa/helm-projectile-20161008.45/helm-projectile-pkg.el,247
(define-package "helm-projectile" "20161008.45" "Helm integration for Projectile" '((helm "1.7.7") (projectile "0.14.0") (cl-lib "0.3")) :url "https://github.com/bbatsov/helm-projectile" :keywords '("project" "convenience"))"helm-projectile"1,0

elpa/helm-projectile-20161008.45/helm-projectile.el,5214
(defvar helm-ag-base-command)helm-ag-base-command54,1792
(defvar grep-find-ignored-directories)grep-find-ignored-directories56,1823
(defvar grep-find-ignored-files)grep-find-ignored-files57,1862
(defgroup helm-projectile nilhelm-projectile59,1896
(defvar helm-projectile-current-project-root)helm-projectile-current-project-root65,2090
(defcustom helm-projectile-fuzzy-match thelm-projectile-fuzzy-match68,2152
(defun helm-projectile-coerce-file (candidate)helm-projectile-coerce-file74,2347
(defmacro helm-projectile-define-key (keymap key def &rest bindings)helm-projectile-define-key78,2503
(defun helm-projectile-hack-actions (actions &rest prescription)helm-projectile-hack-actions93,2943
(defun helm-projectile-vc (dir)helm-projectile-vc142,4805
(defun helm-projectile-compile-project (dir)helm-projectile-compile-project148,5016
(defun helm-projectile-test-project (dir)helm-projectile-test-project155,5267
(defun helm-projectile-run-project (dir)helm-projectile-run-project162,5505
(defun helm-projectile-remove-known-project (_ignore)helm-projectile-remove-known-project169,5740
(defvar helm-projectile-projects-maphelm-projectile-projects-map187,6450
(defvar helm-source-projectile-projectshelm-source-projectile-projects202,7016
(define-key helm-etags-map (kbd "C-c p f")helm-etags-map225,8235
(defun helm-projectile-find-files-eshell-command-on-file-action (_candidate)helm-projectile-find-files-eshell-command-on-file-action230,8369
(defun helm-projectile-ff-etags-select-action (_candidate)helm-projectile-ff-etags-select-action235,8592
(defun helm-projectile-switch-to-eshell (dir)helm-projectile-switch-to-eshell240,8779
(defun helm-projectile-files-in-current-dired-buffer ()helm-projectile-files-in-current-dired-buffer246,9015
(defun helm-projectile-all-dired-buffers ()helm-projectile-all-dired-buffers262,9629
(defvar helm-projectile-virtual-dired-remote-enable nilhelm-projectile-virtual-dired-remote-enable273,9982
(defun helm-projectile-dired-files-new-action (candidate)helm-projectile-dired-files-new-action277,10110
(defun helm-projectile-dired-files-add-action (candidate)helm-projectile-dired-files-add-action307,11871
(defun helm-projectile-dired-files-delete-action (candidate)helm-projectile-dired-files-delete-action348,14474
(defvar helm-projectile-find-file-maphelm-projectile-find-file-map380,16384
(defvar helm-projectile-file-actionshelm-projectile-file-actions393,16995
(defun helm-projectile-build-dwim-source (candidates)helm-projectile-build-dwim-source415,17840
(defvar helm-source-projectile-files-listhelm-source-projectile-files-list428,18395
(defvar helm-source-projectile-files-in-all-projects-listhelm-source-projectile-files-in-all-projects-list443,18937
(defvar helm-projectile-dired-file-actionshelm-projectile-dired-file-actions457,19495
(defvar helm-source-projectile-dired-files-listhelm-source-projectile-dired-files-list463,19717
(defun helm-projectile-dired-find-dir (dir)helm-projectile-dired-find-dir490,21120
(defun helm-projectile-dired-find-dir-other-window (dir)helm-projectile-dired-find-dir-other-window495,21324
(defvar helm-source-projectile-directories-listhelm-source-projectile-directories-list500,21554
(defvar helm-projectile-buffers-list-cache nil)helm-projectile-buffers-list-cache532,23292
(defclass helm-source-projectile-buffer (helm-source-sync helm-type-buffer)helm-source-projectile-buffer534,23341
(defvar helm-source-projectile-buffers-list (helm-make-source "Project buffers" 'helm-source-projectile-buffer))helm-source-projectile-buffers-list562,25051
(defvar helm-source-projectile-recentf-listhelm-source-projectile-recentf-list564,25165
(defvar helm-source-projectile-files-and-dired-listhelm-source-projectile-files-and-dired-list579,25723
(defvar helm-source-projectile-directories-and-dired-listhelm-source-projectile-directories-and-dired-list583,25860
(defcustom helm-projectile-sources-listhelm-projectile-sources-list587,26009
(defmacro helm-projectile-command (command source prompt &optional not-require-root)helm-projectile-command595,26240
(defun helm-projectile-find-file-dwim ()helm-projectile-find-file-dwim626,27981
(defun helm-projectile-find-other-file (&optional flex-matching)helm-projectile-find-other-file640,28652
(defcustom helm-projectile-grep-or-ack-actionshelm-projectile-grep-or-ack-actions667,30340
(defcustom helm-projectile-set-input-automatically thelm-projectile-set-input-automatically679,30865
(defun helm-projectile-grep-or-ack (&optional dir use-ack-p ack-ignored-pattern ack-executable)helm-projectile-grep-or-ack690,31372
(defun helm-projectile-on ()helm-projectile-on749,34452
(defun helm-projectile-off ()helm-projectile-off756,34636
(defun helm-projectile-grep (&optional dir)helm-projectile-grep763,34824
(defun helm-projectile-ack (&optional dir)helm-projectile-ack772,35200
(defun helm-projectile-ag (&optional options)helm-projectile-ag792,36425
(defun helm-projectile-commander-bindings ()helm-projectile-commander-bindings810,37525
(defun helm-projectile-toggle (toggle)helm-projectile-toggle844,38432
(defun helm-projectile (&optional arg)helm-projectile878,40833

elpa/helm-themes-20151008.2321/helm-themes-autoloads.el,0

elpa/helm-themes-20151008.2321/helm-themes-pkg.el,183
(define-package "helm-themes" "20151008.2321" "Color theme selection with helm interface" '((helm-core "1.7.7")) :url "https://github.com/syohex/emacs-helm-themes")"helm-themes"1,0

elpa/helm-themes-20151008.2321/helm-themes.el,310
(defsubst helm-themes--delete-theme ()helm-themes--delete-theme35,1179
(defun helm-themes--load-theme (theme-str)helm-themes--load-theme38,1266
(defun helm-themes--candidates ()helm-themes--candidates44,1424
(defvar helm-themes-sourcehelm-themes-source47,1504
(defun helm-themes ()helm-themes54,1719

elpa/highlight-indentation-20150307.208/highlight-indentation-autoloads.el,0

elpa/highlight-indentation-20150307.208/highlight-indentation-pkg.el,197
(define-package "highlight-indentation" "20150307.208" "Minor modes for highlighting indentation" 'nil :url "https://github.com/antonj/Highlight-Indentation-for-Emacs")"highlight-indentation"1,0

elpa/highlight-indentation-20150307.208/highlight-indentation.el,2092
(defgroup highlight-indentation nilhighlight-indentation24,947
(defface highlight-indentation-facehighlight-indentation-face29,1068
(defcustom highlight-indentation-offset 4highlight-indentation-offset35,1272
(defconst highlight-indentation-hookshighlight-indentation-hooks42,1569
(defun highlight-indentation-get-buffer-windows (&optional all-frames)highlight-indentation-get-buffer-windows57,2312
(defun highlight-indentation-delete-overlays-buffer (overlay)highlight-indentation-delete-overlays-buffer61,2512
(defun highlight-indentation-delete-overlays-region (start end overlay)highlight-indentation-delete-overlays-region67,2739
(defun highlight-indentation-redraw-window (win overlay func &optional start)highlight-indentation-redraw-window73,2972
(defun highlight-indentation-redraw-region (start end overlay func)highlight-indentation-redraw-region77,3190
(defun highlight-indentation-redraw-all-windows (overlay func &optional all-frames)highlight-indentation-redraw-all-windows86,3591
(defun highlight-indentation-put-overlays-region (start end overlay)highlight-indentation-put-overlays-region91,3862
(defun highlight-indentation-guess-offset ()highlight-indentation-guess-offset113,4690
(define-minor-mode highlight-indentation-modehighlight-indentation-mode147,6089
(defun highlight-indentation-set-offset (offset)highlight-indentation-set-offset167,6970
(defface highlight-indentation-current-column-facehighlight-indentation-current-column-face182,7669
(defvar highlight-indentation-overlay-priority 1)highlight-indentation-overlay-priority188,7894
(defvar highlight-indentation-current-column-overlay-priority 2)highlight-indentation-current-column-overlay-priority189,7944
(defconst highlight-indentation-current-column-hookshighlight-indentation-current-column-hooks191,8010
(defun highlight-indentation-current-column-put-overlays-region (start end overlay)highlight-indentation-current-column-put-overlays-region196,8348
(define-minor-mode highlight-indentation-current-column-modehighlight-indentation-current-column-mode221,9321

elpa/htmlize-20130207.1202/htmlize-autoloads.el,0

elpa/htmlize-20130207.1202/htmlize-pkg.el,148
(define-package "htmlize" "20130207.1202" "Convert buffer text and decorations to HTML." 'nil :keywords '("hypermedia" "extensions"))"htmlize"1,0

elpa/htmlize-20130207.1202/htmlize.el,7497
(defconst htmlize-version "1.47")htmlize-version103,4448
(defgroup htmlize nilhtmlize105,4483
(defcustom htmlize-head-tags ""htmlize-head-tags109,4571
(defcustom htmlize-output-type 'csshtmlize-output-type114,4708
(defcustom htmlize-use-images thtmlize-use-images135,5657
(defcustom htmlize-force-inline-images nilhtmlize-force-inline-images140,5802
(defcustom htmlize-max-alt-text 100htmlize-max-alt-text149,6193
(defcustom htmlize-transform-image 'htmlize-default-transform-imagehtmlize-transform-image157,6532
(defcustom htmlize-generate-hyperlinks thtmlize-generate-hyperlinks169,7008
(defcustom htmlize-hyperlink-style "htmlize-hyperlink-style179,7453
(defcustom htmlize-replace-form-feeds thtmlize-replace-form-feeds194,7778
(defcustom htmlize-html-charset nilhtmlize-html-charset210,8540
(defcustom htmlize-convert-nonascii-to-entities thtmlize-convert-nonascii-to-entities235,9649
(defcustom htmlize-ignore-face-size 'absolutehtmlize-ignore-face-size262,10955
(defcustom htmlize-css-name-prefix ""htmlize-css-name-prefix272,11412
(defcustom htmlize-use-rgb-txt thtmlize-use-rgb-txt281,11793
(defcustom htmlize-html-major-mode nilhtmlize-html-major-mode299,12551
(defvar htmlize-before-hook nilhtmlize-before-hook307,12863
(defvar htmlize-after-hook nilhtmlize-after-hook312,13018
(defvar htmlize-file-hook nilhtmlize-file-hook318,13240
(defvar htmlize-buffer-places)htmlize-buffer-places321,13349
(defconst htmlize-running-xemacs (string-match "XEmacs" emacs-version))htmlize-running-xemacs327,13551
(defmacro htmlize-lexlet (&rest letforms)htmlize-lexlet370,15493
(defvar htmlize-basic-character-tablehtmlize-basic-character-table397,16418
(defvar htmlize-extended-character-cache (make-hash-table :test 'eq))htmlize-extended-character-cache432,17892
(defun htmlize-protect-string (string)htmlize-protect-string434,17963
(defun htmlize-attr-escape (string)htmlize-attr-escape470,19418
(defsubst htmlize-concat (list)htmlize-concat482,19839
(defun htmlize-format-link (linkprops text)htmlize-format-link489,20068
(defun htmlize-escape-or-link (string)htmlize-escape-or-link498,20389
(defun htmlize-display-prop-to-html (display text)htmlize-display-prop-to-html518,21171
(defun htmlize-string-to-html (string)htmlize-string-to-html533,21752
(defun htmlize-default-transform-image (imgprops _text)htmlize-default-transform-image552,22571
(defun htmlize-alt-text (_imgprops origtext)htmlize-alt-text582,23863
(defun htmlize-generate-image (imgprops origtext)htmlize-generate-image588,24059
(defconst htmlize-ellipsis "...")htmlize-ellipsis607,24982
(defun htmlize-match-inv-spec (inv)htmlize-match-inv-spec610,25102
(defun htmlize-decode-invisibility-spec (invisible)htmlize-decode-invisibility-spec615,25255
(defun htmlize-add-before-after-strings (beg end text)htmlize-add-before-after-strings638,26273
(defun htmlize-copy-prop (prop beg end string)htmlize-copy-prop667,27383
(defun htmlize-get-text-with-display (beg end)htmlize-get-text-with-display681,27989
(defun htmlize-buffer-substring-no-invisible (beg end)htmlize-buffer-substring-no-invisible691,28418
(defun htmlize-trim-ellipsis (text)htmlize-trim-ellipsis714,29508
(defconst htmlize-tab-spaceshtmlize-tab-spaces723,29869
(defun htmlize-untabify (text start-column)htmlize-untabify731,30138
(defun htmlize-extract-text (beg end trailing-ellipsis)htmlize-extract-text772,31865
(defun htmlize-despam-address (string)htmlize-despam-address787,32543
(defun htmlize-make-tmp-overlay (beg end props)htmlize-make-tmp-overlay795,32840
(defun htmlize-delete-tmp-overlays ()htmlize-delete-tmp-overlays802,33088
(defun htmlize-make-link-overlay (beg end uri)htmlize-make-link-overlay807,33296
(defun htmlize-create-auto-links ()htmlize-create-auto-links810,33410
(defun htmlize-shadow-form-feeds ()htmlize-shadow-form-feeds836,34430
(defun htmlize-defang-local-variables ()htmlize-defang-local-variables843,34706
(defvar htmlize-x-library-search-pathhtmlize-x-library-search-path855,35165
(defun htmlize-get-color-rgb-hash (&optional rgb-file)htmlize-get-color-rgb-hash881,35904
(defvar htmlize-color-rgb-hash (htmlize-get-color-rgb-hash))htmlize-color-rgb-hash920,37250
(defun htmlize-face-specifies-property (face prop)htmlize-face-specifies-property924,37333
(defun htmlize-face-color-internal (face fg)htmlize-face-color-internal935,37895
(defun htmlize-face-foreground (face)htmlize-face-foreground956,38779
(defun htmlize-face-background (face)htmlize-face-background967,39163
(defun htmlize-color-to-rgb (color)htmlize-color-to-rgb981,39651
(defstruct htmlize-fstructhtmlize-fstruct1022,41269
(defun htmlize-face-set-from-keyword-attr (fstruct attr value)htmlize-face-set-from-keyword-attr1034,41647
(defun htmlize-face-size (face)htmlize-face-size1060,42613
(defun htmlize-face-css-name (face)htmlize-face-css-name1083,43423
(defun htmlize-face-to-fstruct (face)htmlize-face-to-fstruct1108,44522
(defmacro htmlize-copy-attr-if-set (attr-list dest source)htmlize-copy-attr-if-set1140,46092
(defun htmlize-merge-size (merged next)htmlize-merge-size1153,46614
(defun htmlize-merge-two-faces (merged next)htmlize-merge-two-faces1161,46883
(defun htmlize-merge-faces (fstruct-list)htmlize-merge-faces1170,47179
(defun htmlize-attrlist-to-fstruct (attrlist)htmlize-attrlist-to-fstruct1190,47865
(defun htmlize-decode-face-prop (prop)htmlize-decode-face-prop1211,48694
(defun htmlize-make-face-map (faces)htmlize-make-face-map1245,49981
(defun htmlize-unstringify-face (face)htmlize-unstringify-face1271,50944
(defun htmlize-faces-in-buffer ()htmlize-faces-in-buffer1277,51112
(defmacro htmlize-method (method &rest args)htmlize-method1400,56259
(defun htmlize-method-function (method)htmlize-method-function1405,56472
(defvar htmlize-memoization-table (make-hash-table :test 'equal))htmlize-memoization-table1417,56914
(defmacro htmlize-memoize (key generator)htmlize-memoize1419,56981
(defun htmlize-default-doctype ()htmlize-default-doctype1433,57488
(defun htmlize-default-body-tag (face-map)htmlize-default-body-tag1440,57743
(defun htmlize-css-specs (fstruct)htmlize-css-specs1448,57932
(defun htmlize-css-insert-head (buffer-faces face-map)htmlize-css-insert-head1475,59070
(defun htmlize-css-text-markup (fstruct-list buffer)htmlize-css-text-markup1508,60326
(defun htmlize-inline-css-body-tag (face-map)htmlize-inline-css-body-tag1526,61025
(defun htmlize-inline-css-text-markup (fstruct-list buffer)htmlize-inline-css-text-markup1531,61191
(defun htmlize-font-body-tag (face-map)htmlize-font-body-tag1549,61741
(defun htmlize-font-text-markup (fstruct-list buffer)htmlize-font-text-markup1555,61971
(defun htmlize-buffer-1 ()htmlize-buffer-11580,63084
(defmacro htmlize-with-fontify-message (&rest body)htmlize-with-fontify-message1709,69507
(defun htmlize-ensure-fontified ()htmlize-ensure-fontified1722,69981
(defun htmlize-buffer (&optional buffer)htmlize-buffer1752,71250
(defun htmlize-region (beg end)htmlize-region1773,72157
(defun htmlize-region-for-paste (beg end)htmlize-region-for-paste1787,72610
(defun htmlize-make-file-name (file)htmlize-make-file-name1800,73170
(defun htmlize-file (file &optional target)htmlize-file1824,74078
(defun htmlize-many-files (files &optional target-directory)htmlize-many-files1887,76750
(defun htmlize-many-files-dired (arg &optional target-directory)htmlize-many-files-dired1921,78064

elpa/ido-completing-read+-20160623.815/ido-completing-read+-autoloads.el,385
(defvar ido-cr+-enable-next-call nil "\ido-cr+-enable-next-call10,314
(defvar ido-cr+-enable-this-call nil "\ido-cr+-enable-this-call13,443
(defvar ido-cr+-replace-completely nil "\ido-cr+-replace-completely16,574
(defadvice ido-completing-read (around ido-cr+ activate) "\ido-completing-read38,1498
(defvar ido-context-switch-command nil "\ido-context-switch-command50,2337

elpa/ido-completing-read+-20160623.815/ido-completing-read+-pkg.el,259
(define-package "ido-completing-read+" "20160623.815" "A completing-read-function using ido" '((emacs "24.1") (cl-lib "0.5")) :url "https://github.com/DarwinAwardWinner/ido-ubiquitous" :keywords '("ido" "completion" "convenience"))"ido-completing-read+"1,0

elpa/ido-completing-read+-20160623.815/ido-completing-read+.el,1299
(defconst ido-completing-read+-version "3.15"ido-completing-read+-version45,1692
(define-minor-mode ido-cr+-debug-modeido-cr+-debug-mode56,1950
(defmacro ido-cr+--debug-message (format-string &rest args)ido-cr+--debug-message66,2228
(defvar ido-cr+-enable-next-call nilido-cr+-enable-next-call73,2420
(defvar ido-cr+-enable-this-call nilido-cr+-enable-this-call76,2563
(defgroup ido-completing-read-plus nilido-completing-read-plus79,2694
(defcustom ido-cr+-fallback-functionido-cr+-fallback-function83,2813
(defcustom ido-cr+-max-items 30000ido-cr+-max-items108,3899
(defcustom ido-cr+-replace-completely nilido-cr+-replace-completely128,4695
(defun ido-cr+--explain-fallback (arg)ido-cr+--explain-fallback141,5221
(defun ido-completing-read+ (prompt collection &optional predicateido-completing-read+152,5611
(defadvice ido-completing-read (around ido-cr+ activate)ido-completing-read230,9165
(defvar ido-context-switch-command nilido-context-switch-command256,10235
(defadvice ido-magic-forward-char (before ido-cr+-fallback activate)ido-magic-forward-char268,10812
(defadvice ido-magic-backward-char (before ido-cr+-fallback activate)ido-magic-backward-char275,11105
(defadvice ido-select-text (around fix-require-match-behavior activate)ido-select-text284,11481

elpa/ido-ubiquitous-20160623.815/ido-ubiquitous-autoloads.el,362
(defvar ido-ubiquitous-debug-mode nil "\ido-ubiquitous-debug-mode10,290
(define-obsolete-variable-alias 'ido-ubiquitous 'ido-ubiquitous-mode "ido-ubiquitous 0.8")ido-ubiquitous23,718
(define-obsolete-function-alias 'ido-ubiquitous 'ido-ubiquitous-mode "ido-ubiquitous 0.8")ido-ubiquitous25,810
(defvar ido-ubiquitous-mode nil "\ido-ubiquitous-mode27,902

elpa/ido-ubiquitous-20160623.815/ido-ubiquitous-pkg.el,269
(define-package "ido-ubiquitous" "20160623.815" "Use ido (nearly) everywhere." '((emacs "24.1") (ido-completing-read+ "3.15") (cl-lib "0.5")) :url "https://github.com/DarwinAwardWinner/ido-ubiquitous" :keywords '("convenience" "completion" "ido"))"ido-ubiquitous"1,0

elpa/ido-ubiquitous-20160623.815/ido-ubiquitous.el,5946
(defconst ido-ubiquitous-version "3.15"ido-ubiquitous-version73,3217
(define-minor-mode ido-ubiquitous-debug-modeido-ubiquitous-debug-mode98,4093
(defmacro ido-ubiquitous--debug-message (format-string &rest args)ido-ubiquitous--debug-message108,4375
(defun ido-ubiquitous--explain-fallback (arg)ido-ubiquitous--explain-fallback112,4545
(defun ido-ubiquitous--as-string (sym-or-str)ido-ubiquitous--as-string124,4987
(defun ido-ubiquitous--as-symbol (sym-or-str)ido-ubiquitous--as-symbol130,5157
(define-widget 'lazy-notag 'lazylazy-notag141,5440
(defvar ido-ubiquitous-match-spec-widget-types nilido-ubiquitous-match-spec-widget-types146,5623
(defvar ido-ubiquitous-spec-matchers nilido-ubiquitous-spec-matchers148,5717
(define-widget 'ido-ubiquitous-match-spec 'lazy-notagido-ubiquitous-match-spec166,6699
(define-widget 'ido-ubiquitous-command-override-spec 'lazy-notagido-ubiquitous-command-override-spec171,6895
(define-widget 'ido-ubiquitous-function-override-spec 'lazy-notagido-ubiquitous-function-override-spec186,7661
(defgroup ido-ubiquitous nilido-ubiquitous204,8504
(define-obsolete-variable-alias 'ido-ubiquitousido-ubiquitous210,8640
(define-obsolete-function-alias 'ido-ubiquitousido-ubiquitous213,8748
(define-minor-mode ido-ubiquitous-modeido-ubiquitous-mode217,8857
(defcustom ido-ubiquitous-default-state 'enableido-ubiquitous-default-state249,9902
(defconst ido-ubiquitous-default-command-overridesido-ubiquitous-default-command-overrides309,12625
(defconst ido-ubiquitous-default-function-overridesido-ubiquitous-default-function-overrides342,14305
(defcustom ido-ubiquitous-command-overrides ido-ubiquitous-default-command-overridesido-ubiquitous-command-overrides373,15861
(defmacro ido-ubiquitous-with-override (override &rest body)ido-ubiquitous-with-override419,17758
(defun ido-ubiquitous-apply-function-override (func override)ido-ubiquitous-apply-function-override431,18136
(defun ido-ubiquitous-set-function-overrides (sym newval)ido-ubiquitous-set-function-overrides458,19395
(defcustom ido-ubiquitous-auto-update-overrides 'notifyido-ubiquitous-auto-update-overrides503,21200
(defcustom ido-ubiquitous-function-overrides ido-ubiquitous-default-function-overridesido-ubiquitous-function-overrides543,23050
(defcustom ido-ubiquitous-allow-on-functional-collection nilido-ubiquitous-allow-on-functional-collection568,24112
(defvar ido-ubiquitous-enable-next-call nilido-ubiquitous-enable-next-call589,25119
(defvar ido-ubiquitous-enable-this-call nilido-ubiquitous-enable-this-call591,25246
(defvar ido-ubiquitous-next-override nilido-ubiquitous-next-override593,25376
(defvar ido-ubiquitous-active-override nilido-ubiquitous-active-override601,25683
(defvar ido-ubiquitous-active-state nilido-ubiquitous-active-state609,25995
(defadvice ido-completing-read (around ido-ubiquitous activate)ido-completing-read617,26262
(defun completing-read-ido-ubiquitouscompleting-read-ido-ubiquitous635,27169
(define-obsolete-function-alias 'completing-read-ido 'completing-read-ido-ubiquitouscompleting-read-ido694,30172
(defvar ido-ubiquitous-initial-item nilido-ubiquitous-initial-item699,30313
(defmacro ido-ubiquitous-set-initial-item (item)ido-ubiquitous-set-initial-item709,30779
(defadvice ido-read-internal (before ido-ubiquitous-clear-initial-item activate)ido-read-internal728,31533
(defadvice ido-make-choice-list (after ido-ubiquitous-set-initial-item activate)ido-make-choice-list731,31656
(defadvice ido-next-match (after ido-ubiquitous-clear-initial-item activate)ido-next-match736,31858
(defadvice ido-prev-match (after ido-ubiquitous-clear-initial-item activate)ido-prev-match739,31977
(defun ido-ubiquitous-post-insert-hook ()ido-ubiquitous-post-insert-hook743,32146
(defun ido-ubiquitous-ido-minibuffer-setup-hook ()ido-ubiquitous-ido-minibuffer-setup-hook746,32238
(defun ido-ubiquitous-should-use-old-style-default ()ido-ubiquitous-should-use-old-style-default756,32476
(defadvice ido-exit-minibuffer (around ido-ubiquitous-old-style-default-compat activate)ido-exit-minibuffer794,33974
(defadvice ido-select-text (around ido-ubiquitous-old-style-default-compat activate)ido-select-text813,34722
(defun ido-ubiquitous--overrides-have-same-target-p (o1 o2)ido-ubiquitous--overrides-have-same-target-p834,35481
(defun ido-ubiquitous--combine-override-lists (olist1 olist2)ido-ubiquitous--combine-override-lists842,35768
(defun ido-ubiquitous-update-overrides (&optional save quiet)ido-ubiquitous-update-overrides855,36196
(defun ido-ubiquitous--find-override-updates (current-value available-updates)ido-ubiquitous--find-override-updates941,39948
(defun ido-ubiquitous--maybe-update-overrides ()ido-ubiquitous--maybe-update-overrides946,40179
(defun ido-ubiquitous-spec-match (spec symbol)ido-ubiquitous-spec-match978,41714
(defun ido-ubiquitous-get-command-override (cmd)ido-ubiquitous-get-command-override1000,42712
(defsubst ido-ubiquitous--looks-like-advised-orig (func)ido-ubiquitous--looks-like-advised-orig1030,44034
(defsubst ido-ubiquitous--looks-like-call-interactively (func)ido-ubiquitous--looks-like-call-interactively1038,44353
(defun ido-ubiquitous--backtrace-from (fun)ido-ubiquitous--backtrace-from1055,44995
(defun ido-ubiquitous--clean-advice-from-backtrace (stack)ido-ubiquitous--clean-advice-from-backtrace1073,45568
(defsubst ido-ubiquitous--interactive-internal ()ido-ubiquitous--interactive-internal1097,46666
(defun ido-ubiquitous--interactive-p-internal ()ido-ubiquitous--interactive-p-internal1107,46965
(defadvice call-interactively (around ido-ubiquitous activate)call-interactively1132,48002
(defsubst ido-ubiquitous--fixup-old-advice ()ido-ubiquitous--fixup-old-advice1174,49713
(defsubst ido-ubiquitous--fixup-old-magit-overrides ()ido-ubiquitous--fixup-old-magit-overrides1183,50282
(defun ido-ubiquitous-initialize ()ido-ubiquitous-initialize1206,51367

elpa/ido-vertical-mode-20160429.1037/ido-vertical-mode-autoloads.el,58
(defvar ido-vertical-mode nil "\ido-vertical-mode10,302

elpa/ido-vertical-mode-20160429.1037/ido-vertical-mode-pkg.el,203
(define-package "ido-vertical-mode" "20160429.1037" "Makes ido-mode display vertically." 'nil :url "https://github.com/creichert/ido-vertical-mode.el" :keywords '("convenience"))"ido-vertical-mode"1,0

elpa/ido-vertical-mode-20160429.1037/ido-vertical-mode.el,1844
(defvar ido-show-confirm-message)ido-show-confirm-message38,1300
(defvar ido-directory-nonreadable)ido-directory-nonreadable41,1414
(defvar ido-directory-too-big)ido-directory-too-big44,1530
(defcustom ido-vertical-indicator "->"ido-vertical-indicator46,1562
(defvar ido-vertical-decorationsido-vertical-decorations51,1716
(defvar ido-vertical-old-decorations nilido-vertical-old-decorations72,2788
(defvar ido-vertical-old-completions nilido-vertical-old-completions78,2978
(defgroup ido-vertical-mode nilido-vertical-mode84,3189
(defcustom ido-vertical-show-count nilido-vertical-show-count88,3269
(defvar ido-vertical-count-active nilido-vertical-count-active93,3420
(defcustom ido-vertical-define-keys nilido-vertical-define-keys96,3529
(defcustom ido-vertical-pad-list tido-vertical-pad-list105,4029
(defcustom ido-vertical-disable-if-short nilido-vertical-disable-if-short110,4204
(defface ido-vertical-first-match-faceido-vertical-first-match-face115,4404
(defface ido-vertical-only-match-faceido-vertical-only-match-face120,4569
(defface ido-vertical-match-faceido-vertical-match-face125,4731
(defun ido-vertical-or-horizontal-completions (name)ido-vertical-or-horizontal-completions130,4916
(defun ido-vertical-completions (name)ido-vertical-completions146,5541
(defun ido-vertical-disable-line-truncation ()ido-vertical-disable-line-truncation285,12067
(defun turn-on-ido-vertical ()turn-on-ido-vertical289,12230
(defun turn-off-ido-vertical ()turn-off-ido-vertical302,12767
(defun ido-vertical-next-match ()ido-vertical-next-match309,13050
(defun ido-vertical-prev-match ()ido-vertical-prev-match322,13363
(defun ido-vertical-define-keys () ;; C-n/p is more intuitive in vertical layoutido-vertical-define-keys335,13679
(define-minor-mode ido-vertical-modeido-vertical-mode348,14453

elpa/iedit-0.97/iedit-autoloads.el,0

elpa/iedit-0.97/iedit-lib.el,5246
(defgroup iedit niliedit42,1417
(defface iedit-occurrenceiedit-occurrence48,1556
(defcustom iedit-case-sensitive-default tiedit-case-sensitive-default53,1680
(defcustom iedit-unmatched-lines-invisible-default niliedit-unmatched-lines-invisible-default58,1800
(defcustom iedit-transient-mark-sensitive tiedit-transient-mark-sensitive63,1962
(defvar iedit-occurrences-overlays niliedit-occurrences-overlays71,2246
(defvar iedit-case-sensitive iedit-case-sensitive-defaultiedit-case-sensitive78,2554
(defvar iedit-unmatched-lines-invisible niliedit-unmatched-lines-invisible82,2688
(defvar iedit-forward-success tiedit-forward-success86,2819
(defvar iedit-before-modification-string ""iedit-before-modification-string90,2945
(defvar iedit-before-modification-undo-list niliedit-before-modification-undo-list94,3084
(defvar iedit-skip-modification-once tiedit-skip-modification-once100,3360
(defvar iedit-aborting niliedit-aborting104,3503
(defvar iedit-aborting-hook niliedit-aborting-hook107,3606
(defvar iedit-post-undo-hook-installed niliedit-post-undo-hook-installed110,3725
(defvar iedit-buffering niliedit-buffering114,3883
(defvar iedit-occurrence-context-lines 1iedit-occurrence-context-lines119,4096
(defconst iedit-occurrence-overlay-name 'iedit-occurrence-overlay-name)iedit-occurrence-overlay-name134,4812
(defconst iedit-invisible-overlay-name 'iedit-invisible-overlay-name)iedit-invisible-overlay-name135,4884
(defvar iedit-lib-keymapiedit-lib-keymap138,4981
(defvar iedit-occurrence-keymap-defaultiedit-occurrence-keymap-default149,5443
(defvar iedit-occurrence-keymap 'iedit-occurrence-keymap-defaultiedit-occurrence-keymap166,6282
(defun iedit-help-for-occurrences ()iedit-help-for-occurrences171,6495
(defun iedit-make-occurrences-overlays (occurrence-regexp beg end)iedit-make-occurrences-overlays186,7486
(defun iedit-add-next-occurrence-overlay (occurrence-exp &optional point)iedit-add-next-occurrence-overlay207,8467
(defun iedit-add-previous-occurrence-overlay (occurrence-exp &optional point)iedit-add-previous-occurrence-overlay211,8656
(defun iedit-add-occurrence-overlay (occurrence-exp point forward)iedit-add-occurrence-overlay215,8855
(defun iedit-add-region-as-occurrence (beg end)iedit-add-region-as-occurrence239,10049
(defun iedit-cleanup ()iedit-cleanup260,10911
(defun iedit-make-occurrence-overlay (begin end)iedit-make-occurrence-overlay269,11250
(defun iedit-make-unmatched-lines-overlay (begin end)iedit-make-unmatched-lines-overlay283,12010
(defun iedit-post-undo-hook ()iedit-post-undo-hook291,12467
(defun iedit-reset-aborting ()iedit-reset-aborting302,12832
(defun iedit-occurrence-update (occurrence after beg end &optional change)iedit-occurrence-update316,13482
(defun iedit-next-occurrence ()iedit-next-occurrence389,17731
(defun iedit-prev-occurrence ()iedit-prev-occurrence416,18952
(defun iedit-first-occurrence ()iedit-first-occurrence445,20442
(defun iedit-last-occurrence ()iedit-last-occurrence456,20850
(defun iedit-toggle-unmatched-lines-visible (&optional arg)iedit-toggle-unmatched-lines-visible466,21308
(defun iedit-show-all()iedit-show-all492,22472
(defun iedit-hide-unmatched-lines (context-lines)iedit-hide-unmatched-lines498,22689
(defun iedit-apply-on-occurrences (function &rest args)iedit-apply-on-occurrences522,23856
(defun iedit-upcase-occurrences ()iedit-upcase-occurrences529,24158
(defun iedit-downcase-occurrences()iedit-downcase-occurrences534,24299
(defun iedit-replace-occurrences(to-string)iedit-replace-occurrences539,24443
(defun iedit-blank-occurrences()iedit-blank-occurrences556,25117
(defun iedit-delete-occurrences()iedit-delete-occurrences569,25579
(defun iedit-toggle-buffering ()iedit-toggle-buffering575,25744
(defun iedit-start-buffering ()iedit-start-buffering591,26354
(defun iedit-stop-buffering ()iedit-stop-buffering603,26836
(defun iedit-move-conjoined-overlays (occurrence)iedit-move-conjoined-overlays640,28762
(defvar iedit-number-line-counter 1iedit-number-line-counter660,29748
(defun iedit-default-occurrence-number-format (start-at)iedit-default-occurrence-number-format663,29839
(defun iedit-number-occurrences (start-at &optional format-string)iedit-number-occurrences670,30064
(defun iedit-find-current-occurrence-overlay ()iedit-find-current-occurrence-overlay699,31300
(defun iedit-find-overlay-at-point (point property)iedit-find-overlay-at-point705,31630
(defun iedit-same-column ()iedit-same-column716,31992
(defun iedit-same-length ()iedit-same-length732,32593
(defun iedit-current-occurrence-string ()iedit-current-occurrence-string747,33116
(defun iedit-occurrence-string-length ()iedit-occurrence-string-length758,33515
(defun iedit-find-overlay (beg end property &optional exclusive)iedit-find-overlay763,33702
(defun iedit-find-overlay-in-region (beg end property)iedit-find-overlay-in-region770,34063
(defun iedit-cleanup-occurrences-overlays (beg end &optional inclusive)iedit-cleanup-occurrences-overlays783,34533
(defun iedit-printable (string)iedit-printable795,35093
(defun iedit-region-active ()iedit-region-active809,35638
(defun iedit-barf-if-lib-active()iedit-barf-if-lib-active819,36012

elpa/iedit-0.97/iedit-pkg.el,104
(define-package "iedit" "0.97" "Edit multiple regions in the same way simultaneously." '())"iedit"1,0

elpa/iedit-0.97/iedit-rect.el,534
(defvar iedit-rectangle-mode nil) ;; Name of the minor modeiedit-rectangle-mode47,1641
(define-key global-map [C-return] 'iedit-rectangle-mode)global-map56,1924
(defvar iedit-rectangle niliedit-rectangle58,1982
(defvar iedit-rect-keymapiedit-rect-keymap67,2307
(defun iedit-rectangle-mode ()iedit-rectangle-mode84,2881
(defun iedit-rectangle-start (beg end)iedit-rectangle-start104,3448
(defun iedit-rectangle-done ()iedit-rectangle-done137,4902
(defun iedit-kill-rectangle(&optional fill)iedit-kill-rectangle150,5374

elpa/iedit-0.97/iedit-tests.el,318
(defun with-iedit-test-fixture (input-buffer-string body)with-iedit-test-fixture40,1256
(defun foo (foo bar foo)foo472,11843
(defun bar (bar foo bar)bar474,11892
(defun foo (foo bar foo)foo496,12478
(defun bar (bar foo bar)bar498,12527
(defvar iedit-printable-test-listsiedit-printable-test-lists519,13118

elpa/iedit-0.97/iedit.el,2357
(defcustom iedit-current-symbol-default tiedit-current-symbol-default84,3282
(defcustom iedit-only-at-symbol-boundaries tiedit-only-at-symbol-boundaries89,3424
(defcustom iedit-toggle-key-default (kbd "C-;")iedit-toggle-key-default97,3712
(defvar iedit-mode-hook niliedit-mode-hook102,3886
(defvar iedit-mode-end-hook niliedit-mode-end-hook105,3968
(defvar iedit-mode nil) ;; Name of the minor modeiedit-mode108,4054
(defvar iedit-only-complete-symbol-local niliedit-only-complete-symbol-local110,4105
(defvar iedit-only-complete-symbol-global niliedit-only-complete-symbol-global114,4247
(defvar iedit-last-occurrence-local niliedit-last-occurrence-local118,4396
(defvar iedit-last-occurrence-global niliedit-last-occurrence-global122,4537
(defvar iedit-last-initial-string-global niliedit-last-initial-string-global126,4673
(defvar iedit-initial-string-local niliedit-initial-string-local129,4795
(defvar iedit-initial-region niliedit-initial-region131,4918
(defvar iedit-help-mapiedit-help-map150,5506
(defun iedit-help-for-help ()iedit-help-for-help178,6616
(defun iedit-describe-bindings ()iedit-describe-bindings184,6783
(defun iedit-describe-key ()iedit-describe-key196,7274
(defun iedit-describe-mode ()iedit-describe-mode202,7484
(defvar iedit-mode-occurrence-keymapiedit-mode-occurrence-keymap222,8230
(defvar iedit-mode-keymapiedit-mode-keymap230,8541
(defun iedit-mode (&optional arg)iedit-mode249,9176
(defun iedit-mode-from-isearch (regexp)iedit-mode-from-isearch346,13234
(defun iedit-start (occurrence-regexp beg end)iedit-start369,14068
(defun iedit-regexp-quote (exp)iedit-regexp-quote379,14555
(defun iedit-start2 (occurrence-regexp beg end)iedit-start2385,14728
(defun iedit-done ()iedit-done397,15122
(defun iedit-mode-on-action (&optional arg)iedit-mode-on-action417,15827
(defun iedit-mode-toggle-on-function ()iedit-mode-toggle-on-function431,16296
(defun iedit-execute-last-modification (&optional arg)iedit-execute-last-modification436,16414
(defun iedit-apply-global-modification ()iedit-apply-global-modification456,17365
(defun iedit-restrict-function(&optional arg)iedit-restrict-function466,17795
(defun iedit-restrict-region (beg end &optional inclusive)iedit-restrict-region475,18116
(defun iedit-toggle-case-sensitive ()iedit-toggle-case-sensitive492,18825

elpa/impatient-mode-20150501.247/impatient-mode-autoloads.el,0

elpa/impatient-mode-20150501.247/impatient-mode-pkg.el,100
(define-package "impatient-mode" "20150501.247" "Serve buffers live over HTTP""impatient-mode"1,0

elpa/impatient-mode-20150501.247/impatient-mode.el,1487
(defgroup impatient-mode nilimpatient-mode43,1462
(defvar impatient-mode-map (make-sparse-keymap)impatient-mode-map47,1542
(defvar imp-default-user-filtersimp-default-user-filters66,2064
(define-minor-mode impatient-modeimpatient-mode72,2225
(defvar imp-shim-root (file-name-directory load-file-name)imp-shim-root82,2551
(defun imp-set-user-filter (function)imp-set-user-filter85,2665
(defun imp-remove-user-filter ()imp-remove-user-filter95,3009
(defun imp-htmlize-filter (buffer)imp-htmlize-filter105,3343
(defun imp-toggle-htmlize ()imp-toggle-htmlize111,3572
(defun imp-visit-buffer ()imp-visit-buffer118,3775
(defun imp-buffer-enabled-p (buffer)imp-buffer-enabled-p126,3999
(defun imp--buffer-list ()imp--buffer-list130,4161
(defun imp--should-not-cache-p (path)imp--should-not-cache-p134,4299
(defun httpd/imp/static (proc path query req)httpd/imp/static140,4582
(defun imp-serve-buffer-list (proc)imp-serve-buffer-list148,4861
(defun imp--private (proc buffer-name)imp--private164,5560
(defun httpd/imp/live (proc path query req)httpd/imp/live168,5703
(defun httpd/imp (proc path &rest args)httpd/imp201,7402
(defun imp--send-state (proc)imp--send-state207,7623
(defun imp--send-state-ignore-errors (proc)imp--send-state-ignore-errors219,8041
(defun imp--notify-clients ()imp--notify-clients224,8162
(defun imp--on-change (&rest args)imp--on-change228,8278
(defun httpd/imp/buffer (proc path query &rest args)httpd/imp/buffer242,8720

elpa/impatient-mode-20150501.247/index.html,0

elpa/impatient-mode-20150501.247/jquery.js,0

elpa/impatient-mode-20150501.247/loading.html,0

elpa/irony-20160611.417/.dir-locals.el,0

elpa/irony-20160611.417/irony-autoloads.el,83
(defvar irony-additional-clang-options nil "\irony-additional-clang-options9,246

elpa/irony-20160611.417/irony-cdb-clang-complete.el,379
(defun irony-cdb-clang-complete (command &rest args)irony-cdb-clang-complete33,1009
(defun irony-cdb-clang-complete--get-compile-options ()irony-cdb-clang-complete--get-compile-options37,1158
(defun irony-cdb-clang-complete--locate-db ()irony-cdb-clang-complete--locate-db41,1314
(defun irony-cdb-clang-complete--load-db (cc-file)irony-cdb-clang-complete--load-db46,1528

elpa/irony-20160611.417/irony-cdb-json.el,2558
(defvar irony-cdb-json--project-alist nilirony-cdb-json--project-alist36,1064
(defconst irony-cdb-json--project-alist-fileirony-cdb-json--project-alist-file42,1258
(defun irony-cdb-json (command &rest args)irony-cdb-json46,1366
(defun irony-cdb-json-add-compile-commands-path (project-rootirony-cdb-json-add-compile-commands-path51,1510
(defun irony-cdb-json--put-first (pos target-list)irony-cdb-json--put-first74,2470
(defun irony-cdb-json--choose-cdb ()irony-cdb-json--choose-cdb80,2669
(defun irony-cdb-json-select ()irony-cdb-json-select91,3198
(defun irony-cdb-json--last-mod (file)irony-cdb-json--last-mod110,3987
(defun irony-cdb-json-select-most-recent ()irony-cdb-json-select-most-recent116,4161
(defun irony-cdb-json--get-compile-options ()irony-cdb-json--get-compile-options127,4591
(defsubst irony-cdb-json--target-path ()irony-cdb-json--target-path135,4912
(defun irony-cdb-json--ensure-project-alist-loaded ()irony-cdb-json--ensure-project-alist-loaded138,5016
(defun irony-cdb-json--save-project-alist ()irony-cdb-json--save-project-alist142,5154
(defun irony-cdb-json--load-project-alist ()irony-cdb-json--load-project-alist153,5477
(defun irony-cdb-json--find-best-prefix-path (file prefixes)irony-cdb-json--find-best-prefix-path160,5760
(defun irony-cdb-json--locate-db ()irony-cdb-json--locate-db169,6097
(defun irony-cdb-json--load-db (json-file)irony-cdb-json--load-db184,6738
(defun irony-cdb-json--exact-flags (file-cdb)irony-cdb-json--exact-flags189,6939
(defun irony-cdb-json--guess-flags (dir-cdb)irony-cdb-json--guess-flags195,7141
(defsubst irony-cdb-json--compile-command-directory (compile-command)irony-cdb-json--compile-command-directory206,7563
(defsubst irony-cdb-json--compile-command-file (compile-command)irony-cdb-json--compile-command-file209,7677
(defun irony-cdb-json--compile-command-options (compile-command)irony-cdb-json--compile-command-options212,7781
(defun irony-cdb-json--adjust-compile-options (compile-options file default-dir)irony-cdb-json--adjust-compile-options217,8020
(defun irony-cdb-json--transform-compile-command (compile-command)irony-cdb-json--transform-compile-command253,9289
(defun irony-cdb-json--compute-directory-cdb (file-cdb)irony-cdb-json--compute-directory-cdb274,10196
(defun irony-cdb-json--collect-compile-options-by-dir (file-cdb)irony-cdb-json--collect-compile-options-by-dir282,10629
(defun irony-cdb-json--collect-compile-options-for-include-dirs (dir-cdb)irony-cdb-json--collect-compile-options-for-include-dirs299,11451

elpa/irony-20160611.417/irony-cdb-libclang.el,412
(defun irony-cdb-libclang (command &rest args)irony-cdb-libclang34,1091
(defun irony-cdb-libclang--get-compile-options ()irony-cdb-libclang--get-compile-options38,1228
(defun irony-cdb-libclang--server-exact-flags (db-file)irony-cdb-libclang--server-exact-flags42,1373
(defun irony-cdb-libclang--adjust-options-and-remove-compiler (file cmds)irony-cdb-libclang--adjust-options-and-remove-compiler51,1742

elpa/irony-20160611.417/irony-cdb.el,977
(defgroup irony-cdb nilirony-cdb46,1480
(defcustom irony-cdb-compilation-databases '(irony-cdb-clang-completeirony-cdb-compilation-databases50,1566
(defcustom irony-cdb-search-directory-list '("." "build")irony-cdb-search-directory-list66,2275
(defvar-local irony-cdb--compilation-database nil)irony-cdb--compilation-database85,2936
(defun irony-cdb-autosetup-compile-options ()irony-cdb-autosetup-compile-options93,3052
(defun irony-cdb-menu ()irony-cdb-menu100,3304
(defun irony-cdb--choose-closest-path (file paths)irony-cdb--choose-closest-path131,4496
(defun irony-cdb--locate-dominating-file-with-dirs (fileirony-cdb--locate-dominating-file-with-dirs164,6051
(defun irony-cdb--update-compile-options (compile-optionsirony-cdb--update-compile-options182,6977
(defun irony-cdb--autodetect-compile-options ()irony-cdb--autodetect-compile-options187,7207
(defun irony-cdb--remove-compiler-from-flags (flags)irony-cdb--remove-compiler-from-flags196,7625

elpa/irony-20160611.417/irony-completion.el,3135
(defgroup irony-completion nilirony-completion38,1099
(defcustom irony-completion-trigger-commands '(self-insert-commandirony-completion-trigger-commands42,1182
(defvar-local irony-completion--context nil)irony-completion--context65,2257
(defvar-local irony-completion--context-tick 0)irony-completion--context-tick66,2302
(defvar-local irony-completion--request-callbacks nil)irony-completion--request-callbacks67,2350
(defvar-local irony-completion--request-tick 0)irony-completion--request-tick68,2405
(defvar-local irony-completion--candidates nil)irony-completion--candidates69,2453
(defvar-local irony-completion--candidates-tick 0)irony-completion--candidates-tick70,2501
(defun irony-completion-symbol-bounds ()irony-completion-symbol-bounds77,2583
(defun irony-completion-beginning-of-symbol ()irony-completion-beginning-of-symbol98,3453
(defun irony-completion-end-of-symbol ()irony-completion-end-of-symbol101,3543
(defsubst irony-completion--skip-whitespace-backwards ()irony-completion--skip-whitespace-backwards104,3627
(defun irony-completion--context-pos ()irony-completion--context-pos108,3787
(defun irony-completion--enter ()irony-completion--enter120,4015
(defun irony-completion--exit ()irony-completion--exit124,4198
(defun irony-completion--post-command ()irony-completion--post-command134,4632
(defun irony-completion--update-context ()irony-completion--update-context140,4880
(defun irony-completion--post-complete-yas-snippet (str placeholders)irony-completion--post-complete-yas-snippet159,5724
(defun irony-completion--send-request ()irony-completion--send-request183,6505
(defun irony-completion--request-handler (candidates tick)irony-completion--request-handler201,7259
(defun irony-completion--still-completing-p ()irony-completion--still-completing-p208,7526
(defun irony-completion-typed-text (candidate)irony-completion-typed-text217,7738
(defun irony-completion-priority (candidate)irony-completion-priority220,7807
(defun irony-completion-type (candidate)irony-completion-type223,7874
(defun irony-completion-brief (candidate)irony-completion-brief226,7937
(defun irony-completion-annotation (candidate)irony-completion-annotation229,8001
(defun irony-completion-post-comp-str (candidate)irony-completion-post-comp-str232,8100
(defun irony-completion-post-comp-placeholders (candidate)irony-completion-post-comp-placeholders235,8178
(defun irony-completion-candidates-available-p ()irony-completion-candidates-available-p238,8265
(defun irony-completion-candidates ()irony-completion-candidates242,8465
(defun irony-completion-candidates-async (callback)irony-completion-candidates-async266,9477
(defun irony-completion-post-complete (candidate)irony-completion-post-complete283,10127
(defun irony-completion-at-trigger-point-p ()irony-completion-at-trigger-point-p291,10524
(defun irony-completion--at-point-annotate (candidate)irony-completion--at-point-annotate337,12614
(defun irony-completion-at-point ()irony-completion-at-point342,12765
(defun irony-completion-at-point-async ()irony-completion-at-point-async354,13292

elpa/irony-20160611.417/irony-diagnostics.el,593
(defun irony-diagnostics-file (diagnostic)irony-diagnostics-file38,1117
(defun irony-diagnostics-line (diagnostic)irony-diagnostics-line41,1183
(defun irony-diagnostics-column (diagnostic)irony-diagnostics-column44,1249
(defun irony-diagnostics-severity (diagnostic)irony-diagnostics-severity47,1317
(defun irony-diagnostics-message (diagnostic)irony-diagnostics-message50,1387
(defun irony-diagnostics--request-handler (diagnostics callback buffer)irony-diagnostics--request-handler53,1456
(defun irony-diagnostics-async (callback &optional force)irony-diagnostics-async62,1777

elpa/irony-20160611.417/irony-pkg.el,90
(define-package "irony" "20160611.417" "C/C++ minor mode powered by libclang""irony"1,0

elpa/irony-20160611.417/irony-snippet.el,769
(defvar irony-snippet--expand-function nilirony-snippet--expand-function37,1191
(defun irony-snippet-available-p ()irony-snippet-available-p50,1511
(defun irony-snippet-expand (snippet-str &optional pos)irony-snippet-expand55,1679
(defun irony-snippet--get-expand-function ()irony-snippet--get-expand-function65,1952
(defun irony-snippet--init-yas ()irony-snippet--init-yas70,2104
(defun irony-snippet--yas-disabled-p ()irony-snippet--yas-disabled-p93,3248
(defun irony-snippet--expand-yas-1 (snippet-str &optional pos)irony-snippet--expand-yas-1106,3772
(defun irony-snippet--expand-yas-2 (snippet-str &optional pos)irony-snippet--expand-yas-2114,4114
(defun irony-snippet--expand-yas-3 (snippet-str &optional pos)irony-snippet--expand-yas-3124,4448

elpa/irony-20160611.417/irony.el,5049
(defgroup irony nilirony93,3008
(defcustom irony-lighter " Irony"irony-lighter97,3084
(defcustom irony-user-dir (locate-user-emacs-file "irony/")irony-user-dir102,3212
(defcustom irony-supported-major-modes '(c++-modeirony-supported-major-modes110,3407
(defcustom irony-additional-clang-options nilirony-additional-clang-options118,3668
(defcustom irony-lang-compile-option-alistirony-lang-compile-option-alist131,4093
(defcustom irony-cmake-executable "cmake"irony-cmake-executable139,4361
(defcustom irony-server-source-dirirony-server-source-dir144,4479
(defcustom irony-server-build-dir nilirony-server-build-dir153,4784
(defcustom irony-server-install-prefix irony-user-dirirony-server-install-prefix161,5023
(defvar-local irony--compile-options nilirony--compile-options181,5531
(defvar-local irony--working-directory nilirony--working-directory188,5756
(defconst irony--eot "\n;;EOT\n"irony--eot200,6083
(defmacro irony--aif (test if-expr &rest else-body)irony--aif208,6220
(defmacro irony--awhen (test &rest body)irony--awhen215,6377
(defun irony--assoc-all (key list)irony--assoc-all221,6502
(defmacro irony--without-narrowing (&rest body)irony--without-narrowing227,6680
(defun irony--buffer-size-in-bytes ()irony--buffer-size-in-bytes237,6969
(defun irony--read-char-choice (prompt chars)irony--read-char-choice241,7083
(defun irony--shorten-path (path)irony--shorten-path253,7520
(defun irony--split-command-line-1 (quoted-str)irony--split-command-line-1265,7949
(defun irony--split-command-line (cmd-line)irony--split-command-line290,8761
(defvar irony-mode-map (make-sparse-keymap)irony-mode-map345,10746
(define-minor-mode irony-modeirony-mode349,10848
(defun irony--mode-enter ()irony--mode-enter359,11066
(defun irony--mode-exit ()irony--mode-exit375,11772
(defun irony-version (&optional show-version)irony-version379,11843
(defun irony--lang-compile-option ()irony--lang-compile-option397,12292
(defun irony--extract-working-directory-option (flags)irony--extract-working-directory-option401,12428
(defun irony--adjust-compile-options ()irony--adjust-compile-options415,12898
(defun irony--extract-user-search-paths (compile-options work-dir)irony--extract-user-search-paths428,13456
(defvar irony--server-install-command-history nil)irony--server-install-command-history461,14616
(defun irony--install-server-read-command (command)irony--install-server-read-command462,14667
(defun irony-install-server (command)irony-install-server469,14939
(defun irony--server-install-finish-function (buffer msg)irony--server-install-finish-function501,16578
(defun irony--locate-server-executable ()irony--locate-server-executable506,16800
(defvar irony--server-executable nil)irony--server-executable540,18263
(defvar irony--server-process nil)irony--server-process541,18301
(defvar irony--server-buffer " *Irony*"irony--server-buffer542,18336
(defun irony--start-server-process ()irony--start-server-process548,18545
(defun irony-server-kill ()irony-server-kill570,19551
(defun irony--get-server-process-create ()irony--get-server-process-create577,19802
(defun irony--server-process-sentinel (process event)irony--server-process-sentinel583,20023
(defun irony--process-server-response (process response)irony--process-server-response588,20191
(defun irony--server-process-filter (process output)irony--server-process-filter594,20436
(defun irony--server-process-push-callback (p cb)irony--server-process-push-callback618,21456
(defun irony--server-process-pop-callback (p)irony--server-process-pop-callback624,21677
(defun irony--get-buffer-path-for-server ()irony--get-buffer-path-for-server634,21891
(defun irony--send-request (request callback &rest args)irony--send-request643,22181
(defvar irony--sync-id 0 "ID of next sync request.")irony--sync-id654,22686
(defvar irony--sync-result '(-1 . nil)irony--sync-result655,22739
(defun irony--sync-request-callback (response id)irony--sync-request-callback658,22857
(defun irony--send-request-sync (request &rest args)irony--send-request-sync661,22956
(defun irony--send-parse-request (request callback &rest args)irony--send-parse-request673,23478
(defvar-local irony--parse-buffer-state nilirony--parse-buffer-state712,25385
(defvar-local irony--parse-buffer-callbacks nil)irony--parse-buffer-callbacks718,25595
(defvar-local irony--parse-buffer-last-results nilirony--parse-buffer-last-results719,25644
(defun irony--parse-buffer-context ()irony--parse-buffer-context722,25733
(defun irony--buffer-parsed-p ()irony--buffer-parsed-p728,26016
(defun irony--buffer-parsing-in-progress-p ()irony--buffer-parsing-in-progress-p732,26139
(defun irony--parse-request-handler (result context buffer)irony--parse-request-handler736,26280
(defun irony--parse-buffer-async (callback &optional force)irony--parse-buffer-async754,27033
(defun irony-get-type--request-handler (types)irony-get-type--request-handler792,28687
(defun irony-get-type ()irony-get-type801,28968

elpa/irony-20160611.417/server/build/CMakeFiles/3.5.0/CompilerIdC/CMakeCCompilerId.c,10138
# define ID_VOID_MAINID_VOID_MAIN6,98
# define COMPILER_ID COMPILER_ID14,303
#  define SIMULATE_ID SIMULATE_ID16,355
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR19,423
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR20,481
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH22,581
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH24,650
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK28,809
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR32,931
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR33,984
# define COMPILER_ID COMPILER_ID37,1072
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR38,1105
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR39,1153
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH41,1243
# define COMPILER_ID COMPILER_ID45,1374
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR46,1409
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR47,1481
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH48,1553
# define COMPILER_ID COMPILER_ID51,1654
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR53,1714
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR54,1767
# define COMPILER_ID COMPILER_ID57,1874
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR59,1932
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR60,1987
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH62,2076
# define COMPILER_ID COMPILER_ID66,2167
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR68,2236
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR69,2300
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH71,2389
# define COMPILER_ID COMPILER_ID75,2479
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR78,2564
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR79,2617
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH80,2676
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR83,2770
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR84,2822
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH85,2880
# define COMPILER_ID COMPILER_ID89,2970
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR91,3021
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR92,3072
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH93,3127
# define COMPILER_ID COMPILER_ID96,3205
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR98,3266
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR99,3323
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH100,3385
# define COMPILER_ID COMPILER_ID103,3503
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR105,3553
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR106,3603
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH107,3657
# define COMPILER_ID COMPILER_ID110,3785
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR112,3834
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR113,3884
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH114,3938
# define COMPILER_ID COMPILER_ID117,4065
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR119,4121
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR120,4171
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH121,4225
# define COMPILER_ID COMPILER_ID124,4301
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR125,4328
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR126,4374
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH128,4460
# define COMPILER_ID COMPILER_ID132,4549
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR133,4577
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR134,4629
# define COMPILER_ID COMPILER_ID137,4721
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR139,4791
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR140,4860
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH141,4935
# define COMPILER_ID COMPILER_ID144,5088
# define COMPILER_ID COMPILER_ID147,5145
# define COMPILER_ID COMPILER_ID150,5207
# define COMPILER_ID COMPILER_ID153,5296
#  define SIMULATE_ID SIMULATE_ID155,5353
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR157,5390
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR158,5443
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH159,5496
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR162,5602
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR163,5655
# define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK165,5716
# define COMPILER_ID COMPILER_ID168,5803
#  define SIMULATE_ID SIMULATE_ID170,5855
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR172,5892
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR173,5945
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH174,5998
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR177,6104
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR178,6157
# define COMPILER_ID COMPILER_ID182,6243
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR183,6270
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR185,6345
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH188,6440
# define COMPILER_ID COMPILER_ID192,6531
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR194,6583
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR195,6635
#   define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH199,6774
#   define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH202,6879
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK206,6982
# define COMPILER_ID COMPILER_ID210,7154
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR213,7258
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR214,7320
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH215,7389
# define COMPILER_ID COMPILER_ID219,7532
# define COMPILER_ID COMPILER_ID222,7591
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR225,7685
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR226,7748
  # define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH227,7815
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR230,7921
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR231,7983
  # define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH232,8049
# define COMPILER_ID COMPILER_ID237,8144
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR239,8191
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR240,8238
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH241,8289
# define COMPILER_ID COMPILER_ID244,8408
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR247,8511
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR248,8575
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH249,8643
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR252,8750
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR253,8810
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH254,8874
# define COMPILER_ID COMPILER_ID262,9135
# define COMPILER_ID COMPILER_ID265,9208
# define COMPILER_ID COMPILER_ID268,9264
char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";info_compiler275,9562
char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";info_simulate277,9649
char const* qnxnto = "INFO" ":" "qnxnto[]";qnxnto281,9743
char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";info_cray285,9838
#define STRINGIFY_HELPER(STRINGIFY_HELPER288,9913
#define STRINGIFY(STRINGIFY289,9944
# define PLATFORM_ID PLATFORM_ID293,10088
# define PLATFORM_ID PLATFORM_ID296,10144
# define PLATFORM_ID PLATFORM_ID299,10202
# define PLATFORM_ID PLATFORM_ID302,10257
# define PLATFORM_ID PLATFORM_ID305,10350
# define PLATFORM_ID PLATFORM_ID308,10431
# define PLATFORM_ID PLATFORM_ID311,10510
# define PLATFORM_ID PLATFORM_ID314,10590
# define PLATFORM_ID PLATFORM_ID317,10659
# define PLATFORM_ID PLATFORM_ID320,10785
# define PLATFORM_ID PLATFORM_ID323,10871
# define PLATFORM_ID PLATFORM_ID326,10943
# define PLATFORM_ID PLATFORM_ID329,10998
# define PLATFORM_ID PLATFORM_ID332,11089
# define PLATFORM_ID PLATFORM_ID335,11164
# define PLATFORM_ID PLATFORM_ID338,11256
# define PLATFORM_ID PLATFORM_ID341,11333
# define PLATFORM_ID PLATFORM_ID344,11431
# define PLATFORM_ID PLATFORM_ID347,11488
# define PLATFORM_ID PLATFORM_ID350,11545
# define PLATFORM_ID PLATFORM_ID353,11615
# define PLATFORM_ID PLATFORM_ID356,11687
# define PLATFORM_ID PLATFORM_ID359,11777
# define PLATFORM_ID PLATFORM_ID362,11875
# define PLATFORM_ID PLATFORM_ID365,11968
#  define PLATFORM_ID PLATFORM_ID369,12049
#  define PLATFORM_ID PLATFORM_ID372,12104
#  define PLATFORM_ID PLATFORM_ID375,12157
#  define PLATFORM_ID PLATFORM_ID378,12214
#  define PLATFORM_ID PLATFORM_ID381,12279
# define PLATFORM_ID PLATFORM_ID385,12342
#  define ARCHITECTURE_ID ARCHITECTURE_ID396,12685
#  define ARCHITECTURE_ID ARCHITECTURE_ID399,12763
#  define ARCHITECTURE_ID ARCHITECTURE_ID402,12820
#   define ARCHITECTURE_ID ARCHITECTURE_ID406,12894
#   define ARCHITECTURE_ID ARCHITECTURE_ID408,12950
#   define ARCHITECTURE_ID ARCHITECTURE_ID410,12994
#  define ARCHITECTURE_ID ARCHITECTURE_ID414,13080
#  define ARCHITECTURE_ID ARCHITECTURE_ID417,13136
#  define ARCHITECTURE_ID ARCHITECTURE_ID420,13203
#  define ARCHITECTURE_ID ARCHITECTURE_ID425,13289
#  define ARCHITECTURE_ID ARCHITECTURE_ID428,13346
#  define ARCHITECTURE_ID ARCHITECTURE_ID431,13413
#  define ARCHITECTURE_ID ARCHITECTURE_ID435,13457
#define DEC(DEC439,13544
#define HEX(HEX450,13893
char const info_version[] = {info_version462,14255
char const info_simulate_version[] = {info_simulate_version480,14752
char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";info_platform500,15421
char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";info_arch501,15489
const char* info_language_dialect_default = "INFO" ":" "dialect_default["info_language_dialect_default506,15557
void main() {}main520,15870
int main(int argc, char* argv[])main522,15891

elpa/irony-20160611.417/server/build/CMakeFiles/3.5.0/CompilerIdCXX/CMakeCXXCompilerId.cpp,9959
# define COMPILER_ID COMPILER_ID13,390
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR15,451
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR16,511
# define COMPILER_ID COMPILER_ID19,622
#  define SIMULATE_ID SIMULATE_ID21,674
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR24,742
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR25,800
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH27,900
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH29,969
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK33,1128
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR37,1250
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR38,1303
# define COMPILER_ID COMPILER_ID42,1391
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR43,1424
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR44,1472
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH46,1562
# define COMPILER_ID COMPILER_ID50,1693
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR51,1728
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR52,1800
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH53,1872
# define COMPILER_ID COMPILER_ID56,1973
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR58,2033
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR59,2086
# define COMPILER_ID COMPILER_ID62,2193
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR64,2251
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR65,2306
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH67,2395
# define COMPILER_ID COMPILER_ID71,2486
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR73,2555
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR74,2619
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH76,2708
# define COMPILER_ID COMPILER_ID80,2799
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR83,2886
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR84,2940
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH85,3000
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR88,3095
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR89,3148
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH90,3207
# define COMPILER_ID COMPILER_ID94,3299
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR96,3351
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR97,3403
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH98,3459
# define COMPILER_ID COMPILER_ID101,3540
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR103,3603
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR104,3662
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH105,3726
# define COMPILER_ID COMPILER_ID108,3848
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR110,3900
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR111,3952
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH112,4008
# define COMPILER_ID COMPILER_ID115,4142
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR117,4193
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR118,4245
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH119,4301
# define COMPILER_ID COMPILER_ID122,4434
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR124,4492
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR125,4544
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH126,4600
# define COMPILER_ID COMPILER_ID129,4678
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR130,4705
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR131,4751
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH133,4837
# define COMPILER_ID COMPILER_ID137,4926
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR138,4954
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR139,5006
# define COMPILER_ID COMPILER_ID142,5098
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR144,5168
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR145,5237
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH146,5312
# define COMPILER_ID COMPILER_ID149,5465
# define COMPILER_ID COMPILER_ID152,5528
# define COMPILER_ID COMPILER_ID155,5617
#  define SIMULATE_ID SIMULATE_ID157,5674
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR159,5711
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR160,5764
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH161,5817
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR164,5923
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR165,5976
# define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK167,6037
# define COMPILER_ID COMPILER_ID170,6124
#  define SIMULATE_ID SIMULATE_ID172,6176
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR174,6213
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR175,6266
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH176,6319
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR179,6425
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR180,6478
# define COMPILER_ID COMPILER_ID184,6564
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR185,6591
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR187,6666
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH190,6761
# define COMPILER_ID COMPILER_ID194,6852
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR196,6904
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR197,6956
#   define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH201,7095
#   define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH204,7200
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK208,7303
# define COMPILER_ID COMPILER_ID212,7475
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR215,7579
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR216,7641
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH217,7710
# define COMPILER_ID COMPILER_ID221,7853
# define COMPILER_ID COMPILER_ID224,7912
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR227,8006
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR228,8069
  # define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH229,8136
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR232,8242
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR233,8304
  # define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH234,8370
# define COMPILER_ID COMPILER_ID239,8512
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR242,8615
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR243,8679
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH244,8747
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR247,8854
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR248,8914
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH249,8978
# define COMPILER_ID COMPILER_ID257,9239
# define COMPILER_ID COMPILER_ID260,9312
# define COMPILER_ID COMPILER_ID263,9368
char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";info_compiler270,9666
char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";info_simulate272,9753
char const* qnxnto = "INFO" ":" "qnxnto[]";qnxnto276,9847
char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";info_cray280,9942
#define STRINGIFY_HELPER(STRINGIFY_HELPER283,10017
#define STRINGIFY(STRINGIFY284,10048
# define PLATFORM_ID PLATFORM_ID288,10192
# define PLATFORM_ID PLATFORM_ID291,10248
# define PLATFORM_ID PLATFORM_ID294,10306
# define PLATFORM_ID PLATFORM_ID297,10361
# define PLATFORM_ID PLATFORM_ID300,10454
# define PLATFORM_ID PLATFORM_ID303,10535
# define PLATFORM_ID PLATFORM_ID306,10614
# define PLATFORM_ID PLATFORM_ID309,10694
# define PLATFORM_ID PLATFORM_ID312,10763
# define PLATFORM_ID PLATFORM_ID315,10889
# define PLATFORM_ID PLATFORM_ID318,10975
# define PLATFORM_ID PLATFORM_ID321,11047
# define PLATFORM_ID PLATFORM_ID324,11102
# define PLATFORM_ID PLATFORM_ID327,11193
# define PLATFORM_ID PLATFORM_ID330,11268
# define PLATFORM_ID PLATFORM_ID333,11360
# define PLATFORM_ID PLATFORM_ID336,11437
# define PLATFORM_ID PLATFORM_ID339,11535
# define PLATFORM_ID PLATFORM_ID342,11592
# define PLATFORM_ID PLATFORM_ID345,11649
# define PLATFORM_ID PLATFORM_ID348,11719
# define PLATFORM_ID PLATFORM_ID351,11791
# define PLATFORM_ID PLATFORM_ID354,11881
# define PLATFORM_ID PLATFORM_ID357,11979
# define PLATFORM_ID PLATFORM_ID360,12072
#  define PLATFORM_ID PLATFORM_ID364,12153
#  define PLATFORM_ID PLATFORM_ID367,12208
#  define PLATFORM_ID PLATFORM_ID370,12261
#  define PLATFORM_ID PLATFORM_ID373,12318
#  define PLATFORM_ID PLATFORM_ID376,12383
# define PLATFORM_ID PLATFORM_ID380,12446
#  define ARCHITECTURE_ID ARCHITECTURE_ID391,12789
#  define ARCHITECTURE_ID ARCHITECTURE_ID394,12867
#  define ARCHITECTURE_ID ARCHITECTURE_ID397,12924
#   define ARCHITECTURE_ID ARCHITECTURE_ID401,12998
#   define ARCHITECTURE_ID ARCHITECTURE_ID403,13054
#   define ARCHITECTURE_ID ARCHITECTURE_ID405,13098
#  define ARCHITECTURE_ID ARCHITECTURE_ID409,13184
#  define ARCHITECTURE_ID ARCHITECTURE_ID412,13240
#  define ARCHITECTURE_ID ARCHITECTURE_ID415,13307
#  define ARCHITECTURE_ID ARCHITECTURE_ID420,13393
#  define ARCHITECTURE_ID ARCHITECTURE_ID423,13450
#  define ARCHITECTURE_ID ARCHITECTURE_ID426,13517
#  define ARCHITECTURE_ID ARCHITECTURE_ID430,13561
#define DEC(DEC434,13648
#define HEX(HEX445,13997
char const info_version[] = {info_version457,14359
char const info_simulate_version[] = {info_simulate_version475,14856
char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";info_platform495,15525
char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";info_arch496,15593
const char* info_language_dialect_default = "INFO" ":" "dialect_default["info_language_dialect_default501,15661
int main(int argc, char* argv[])main513,15911

elpa/irony-20160611.417/server/build/CMakeFiles/feature_tests.c,128
  const char features[] = {"\n"features2,1
int main(int argc, char** argv) { (void)argv; return features[argc]; }main34,657

elpa/irony-20160611.417/server/build/CMakeFiles/feature_tests.cxx,130
  const char features[] = {"\n"features2,1
int main(int argc, char** argv) { (void)argv; return features[argc]; }main405,8773

elpa/irony-20160611.417/server/build/DartConfiguration.tcl,0

elpa/irony-20160611.417/server/build/docs/Makefile,432
SUFFIXES =SUFFIXES21,544
SHELL = /bin/shSHELL39,902
CMAKE_COMMAND = /usr/local/Cellar/cmake/3.5.0/bin/cmakeCMAKE_COMMAND42,943
RM = /usr/local/Cellar/cmake/3.5.0/bin/cmake -E remove -fRM45,1032
EQUALS = =EQUALS48,1126
CMAKE_SOURCE_DIR = /Users/zhangli/.emacs.d/elpa/irony-20160611.417/serverCMAKE_SOURCE_DIR51,1195
CMAKE_BINARY_DIR = /Users/zhangli/.emacs.d/elpa/irony-20160611.417/server/buildCMAKE_BINARY_DIR54,1326

elpa/irony-20160611.417/server/build/Makefile,432
SUFFIXES =SUFFIXES21,544
SHELL = /bin/shSHELL39,902
CMAKE_COMMAND = /usr/local/Cellar/cmake/3.5.0/bin/cmakeCMAKE_COMMAND42,943
RM = /usr/local/Cellar/cmake/3.5.0/bin/cmake -E remove -fRM45,1032
EQUALS = =EQUALS48,1126
CMAKE_SOURCE_DIR = /Users/zhangli/.emacs.d/elpa/irony-20160611.417/serverCMAKE_SOURCE_DIR51,1195
CMAKE_BINARY_DIR = /Users/zhangli/.emacs.d/elpa/irony-20160611.417/server/buildCMAKE_BINARY_DIR54,1326

elpa/irony-20160611.417/server/build/src/irony.el,5049
(defgroup irony nilirony93,3008
(defcustom irony-lighter " Irony"irony-lighter97,3084
(defcustom irony-user-dir (locate-user-emacs-file "irony/")irony-user-dir102,3212
(defcustom irony-supported-major-modes '(c++-modeirony-supported-major-modes110,3407
(defcustom irony-additional-clang-options nilirony-additional-clang-options118,3668
(defcustom irony-lang-compile-option-alistirony-lang-compile-option-alist131,4093
(defcustom irony-cmake-executable "cmake"irony-cmake-executable139,4361
(defcustom irony-server-source-dirirony-server-source-dir144,4479
(defcustom irony-server-build-dir nilirony-server-build-dir153,4784
(defcustom irony-server-install-prefix irony-user-dirirony-server-install-prefix161,5023
(defvar-local irony--compile-options nilirony--compile-options181,5531
(defvar-local irony--working-directory nilirony--working-directory188,5756
(defconst irony--eot "\n;;EOT\n"irony--eot200,6083
(defmacro irony--aif (test if-expr &rest else-body)irony--aif208,6220
(defmacro irony--awhen (test &rest body)irony--awhen215,6377
(defun irony--assoc-all (key list)irony--assoc-all221,6502
(defmacro irony--without-narrowing (&rest body)irony--without-narrowing227,6680
(defun irony--buffer-size-in-bytes ()irony--buffer-size-in-bytes237,6969
(defun irony--read-char-choice (prompt chars)irony--read-char-choice241,7083
(defun irony--shorten-path (path)irony--shorten-path253,7520
(defun irony--split-command-line-1 (quoted-str)irony--split-command-line-1265,7949
(defun irony--split-command-line (cmd-line)irony--split-command-line290,8761
(defvar irony-mode-map (make-sparse-keymap)irony-mode-map345,10746
(define-minor-mode irony-modeirony-mode349,10848
(defun irony--mode-enter ()irony--mode-enter359,11066
(defun irony--mode-exit ()irony--mode-exit375,11772
(defun irony-version (&optional show-version)irony-version379,11843
(defun irony--lang-compile-option ()irony--lang-compile-option397,12292
(defun irony--extract-working-directory-option (flags)irony--extract-working-directory-option401,12428
(defun irony--adjust-compile-options ()irony--adjust-compile-options415,12898
(defun irony--extract-user-search-paths (compile-options work-dir)irony--extract-user-search-paths428,13456
(defvar irony--server-install-command-history nil)irony--server-install-command-history461,14616
(defun irony--install-server-read-command (command)irony--install-server-read-command462,14667
(defun irony-install-server (command)irony-install-server469,14939
(defun irony--server-install-finish-function (buffer msg)irony--server-install-finish-function501,16578
(defun irony--locate-server-executable ()irony--locate-server-executable506,16800
(defvar irony--server-executable nil)irony--server-executable540,18263
(defvar irony--server-process nil)irony--server-process541,18301
(defvar irony--server-buffer " *Irony*"irony--server-buffer542,18336
(defun irony--start-server-process ()irony--start-server-process548,18545
(defun irony-server-kill ()irony-server-kill570,19551
(defun irony--get-server-process-create ()irony--get-server-process-create577,19802
(defun irony--server-process-sentinel (process event)irony--server-process-sentinel583,20023
(defun irony--process-server-response (process response)irony--process-server-response588,20191
(defun irony--server-process-filter (process output)irony--server-process-filter594,20436
(defun irony--server-process-push-callback (p cb)irony--server-process-push-callback618,21456
(defun irony--server-process-pop-callback (p)irony--server-process-pop-callback624,21677
(defun irony--get-buffer-path-for-server ()irony--get-buffer-path-for-server634,21891
(defun irony--send-request (request callback &rest args)irony--send-request643,22181
(defvar irony--sync-id 0 "ID of next sync request.")irony--sync-id654,22686
(defvar irony--sync-result '(-1 . nil)irony--sync-result655,22739
(defun irony--sync-request-callback (response id)irony--sync-request-callback658,22857
(defun irony--send-request-sync (request &rest args)irony--send-request-sync661,22956
(defun irony--send-parse-request (request callback &rest args)irony--send-parse-request673,23478
(defvar-local irony--parse-buffer-state nilirony--parse-buffer-state712,25385
(defvar-local irony--parse-buffer-callbacks nil)irony--parse-buffer-callbacks718,25595
(defvar-local irony--parse-buffer-last-results nilirony--parse-buffer-last-results719,25644
(defun irony--parse-buffer-context ()irony--parse-buffer-context722,25733
(defun irony--buffer-parsed-p ()irony--buffer-parsed-p728,26016
(defun irony--buffer-parsing-in-progress-p ()irony--buffer-parsing-in-progress-p732,26139
(defun irony--parse-request-handler (result context buffer)irony--parse-request-handler736,26280
(defun irony--parse-buffer-async (callback &optional force)irony--parse-buffer-async754,27033
(defun irony-get-type--request-handler (types)irony-get-type--request-handler792,28687
(defun irony-get-type ()irony-get-type801,28968

elpa/irony-20160611.417/server/build/src/Makefile,432
SUFFIXES =SUFFIXES21,544
SHELL = /bin/shSHELL39,902
CMAKE_COMMAND = /usr/local/Cellar/cmake/3.5.0/bin/cmakeCMAKE_COMMAND42,943
RM = /usr/local/Cellar/cmake/3.5.0/bin/cmake -E remove -fRM45,1032
EQUALS = =EQUALS48,1126
CMAKE_SOURCE_DIR = /Users/zhangli/.emacs.d/elpa/irony-20160611.417/serverCMAKE_SOURCE_DIR51,1195
CMAKE_BINARY_DIR = /Users/zhangli/.emacs.d/elpa/irony-20160611.417/server/buildCMAKE_BINARY_DIR54,1326

elpa/irony-20160611.417/server/build/test/elisp/Makefile,432
SUFFIXES =SUFFIXES21,544
SHELL = /bin/shSHELL39,902
CMAKE_COMMAND = /usr/local/Cellar/cmake/3.5.0/bin/cmakeCMAKE_COMMAND42,943
RM = /usr/local/Cellar/cmake/3.5.0/bin/cmake -E remove -fRM45,1032
EQUALS = =EQUALS48,1126
CMAKE_SOURCE_DIR = /Users/zhangli/.emacs.d/elpa/irony-20160611.417/serverCMAKE_SOURCE_DIR51,1195
CMAKE_BINARY_DIR = /Users/zhangli/.emacs.d/elpa/irony-20160611.417/server/buildCMAKE_BINARY_DIR54,1326

elpa/irony-20160611.417/server/build/test/Makefile,432
SUFFIXES =SUFFIXES21,544
SHELL = /bin/shSHELL39,902
CMAKE_COMMAND = /usr/local/Cellar/cmake/3.5.0/bin/cmakeCMAKE_COMMAND42,943
RM = /usr/local/Cellar/cmake/3.5.0/bin/cmake -E remove -fRM45,1032
EQUALS = =EQUALS48,1126
CMAKE_SOURCE_DIR = /Users/zhangli/.emacs.d/elpa/irony-20160611.417/serverCMAKE_SOURCE_DIR51,1195
CMAKE_BINARY_DIR = /Users/zhangli/.emacs.d/elpa/irony-20160611.417/server/buildCMAKE_BINARY_DIR54,1326

elpa/irony-20160611.417/server/cmake/LibClangDiagnosticsChecker.cpp,53
int main(int argc, const char *argv[]) {main13,287

elpa/irony-20160611.417/server/src/Command.cpp,1166
struct StringConverter {StringConverter22,371
  StringConverter(std::string *dest) : dest_(dest) {StringConverter23,396
  bool operator()(const std::string &str) {operator ()26,454
  std::string *dest_;dest_32,547
struct UnsignedIntConverter {UnsignedIntConverter35,573
  UnsignedIntConverter(unsigned *dest) : dest_(dest) {UnsignedIntConverter36,603
  bool operator()(const std::string &str) {operator ()39,663
  unsigned *dest_;dest_61,1104
struct OptionConverter {OptionConverter65,1167
  OptionConverter(bool *dest) : dest_(dest) {OptionConverter66,1192
  bool operator()(const std::string &str) {operator ()69,1243
  bool *dest_;dest_81,1454
std::ostream &operator<<(std::ostream &os, const Command::Action &action) {operator <<86,1497
#define X(X90,1615
std::ostream &operator<<(std::ostream &os, const Command &command) {operator <<99,1913
static Command::Action actionFromString(const std::string &actionStr) {actionFromString120,2532
#define X(X121,2604
CommandParser::CommandParser() : tempFile_("irony-server") {CommandParser130,2847
Command *CommandParser::parse(const std::vector<std::string> &argv) {parse133,2911

elpa/irony-20160611.417/server/src/Command.h,719
#define IRONY_MODE_SERVER_COMMAND_H_IRONY_MODE_SERVER_COMMAND_H_12,259
struct Command {Command23,438
  Command() {Command24,455
  void clear() {clear28,487
#define X(X40,686
  enum Action {Action41,717
  } action;action43,757
  std::vector<std::string> flags;flags45,770
  std::string file;file46,804
  std::string dir;dir47,824
  unsigned line;line48,843
  unsigned column;column49,860
  std::vector<std::pair<std::string, std::vector<char>>> unsavedFiles;unsavedFiles51,912
  std::vector<CXUnsavedFile> cxUnsavedFiles;cxUnsavedFiles52,983
  bool opt;opt53,1028
class CommandParser {CommandParser59,1188
  Command command_;command_66,1304
  TemporaryFile tempFile_;tempFile_67,1324

elpa/irony-20160611.417/server/src/Irony.cpp,1114
static std::string cxStringToStd(CXString cxString) {cxStringToStd21,374
Irony::Irony() : activeTu_(nullptr), debug_(false) {Irony32,583
static const char *diagnosticSeverity(CXDiagnostic diagnostic) {diagnosticSeverity35,639
static void dumpDiagnostics(const CXTranslationUnit &tu) {dumpDiagnostics52,1026
void Irony::parse(const std::string &file,parse103,2529
void Irony::diagnostics() const {diagnostics111,2825
void Irony::getType(unsigned line, unsigned col) const {getType122,3025
class CompletionChunk {CompletionChunk162,3988
  explicit CompletionChunk(CXCompletionString completionString)CompletionChunk164,4020
  bool hasNext() const {hasNext170,4218
  void next() {next174,4283
  CXCompletionChunkKind kind() const {kind183,4417
  std::string text() const {text187,4532
  CXCompletionString completionString_;completionString_193,4670
  unsigned int numChunks_;numChunks_194,4710
  unsigned chunkIdx_;chunkIdx_195,4737
void Irony::complete(const std::string &file,complete200,4787
void Irony::getCompileOptions(const std::string &buildDir,getCompileOptions374,11221

elpa/irony-20160611.417/server/src/Irony.h,358
#define IRONY_MODE_SERVER_IRONY_H_IRONY_MODE_SERVER_IRONY_H_17,523
class Irony {Irony24,620
  bool isDebugEnabled() const {isDebugEnabled28,654
  void setDebug(bool enable) {setDebug36,791
  TUManager tuManager_;tuManager_120,2915
  CXTranslationUnit activeTu_;activeTu_121,2939
  std::string file_;file_122,2970
  bool debug_;debug_123,2991

elpa/irony-20160611.417/server/src/main.cpp,1118
static void printHelp() {printHelp24,433
#define X(X36,707
static void printVersion() {printVersion42,969
static void dumpUnsavedFiles(Command &command) {dumpUnsavedFiles52,1323
struct CommandProviderInterface {CommandProviderInterface64,1786
  virtual ~CommandProviderInterface() { }~CommandProviderInterface65,1820
struct CommandLineCommandProvider : CommandProviderInterface {CommandLineCommandProvider70,1921
  CommandLineCommandProvider(const std::vector<std::string> &argv)CommandLineCommandProvider71,1984
  std::vector<std::string> nextCommand() {nextCommand75,2094
  std::vector<std::string> argv_;argv_85,2274
  bool firstCall_;firstCall_86,2308
struct InteractiveCommandProvider : CommandProviderInterface {InteractiveCommandProvider89,2331
  std::vector<std::string> nextCommand() {nextCommand90,2394
struct RestoreClogOnExit {RestoreClogOnExit101,2603
  RestoreClogOnExit() : rdbuf_(std::clog.rdbuf()) {RestoreClogOnExit102,2630
  ~RestoreClogOnExit() {~RestoreClogOnExit105,2687
  std::streambuf *rdbuf_;rdbuf_114,2872
int main(int ac, const char *av[]) {main117,2902

elpa/irony-20160611.417/server/src/support/arraysize.h,180
#define IRONY_MODE_SERVER_SUPPORT_ARRAYSIZE_H_IRONY_MODE_SERVER_SUPPORT_ARRAYSIZE_H_12,294
#define arraysize(arraysize25,765
#define ARRAYSIZE_UNSAFE(ARRAYSIZE_UNSAFE35,1105

elpa/irony-20160611.417/server/src/support/CIndex.h,443
#define IRONY_MODE_SERVER_SUPPORT_CINDEXVERSION_H_IRONY_MODE_SERVER_SUPPORT_CINDEXVERSION_H_10,233
#define CINDEX_VERSION CINDEX_VERSION17,461
#define HAS_BRIEF_COMMENTS_IN_COMPLETION HAS_BRIEF_COMMENTS_IN_COMPLETION21,543
#define HAS_BRIEF_COMMENTS_IN_COMPLETION HAS_BRIEF_COMMENTS_IN_COMPLETION23,592
#define HAS_COMPILATION_DATABASE HAS_COMPILATION_DATABASE27,667
#define HAS_COMPILATION_DATABASE HAS_COMPILATION_DATABASE30,751

elpa/irony-20160611.417/server/src/support/CommandLineParser.cpp,940
class CommandLineArgumentParser {CommandLineArgumentParser17,388
  CommandLineArgumentParser(const std::string &CommandLine)CommandLineArgumentParser19,430
  std::vector<std::string> parse() {parse23,551
  bool parseStringInto(std::string &String) {parseStringInto36,899
  bool parseDoubleQuotedStringInto(std::string &String) {parseDoubleQuotedStringInto52,1313
  bool parseSingleQuotedStringInto(std::string &String) {parseSingleQuotedStringInto65,1601
  bool parseFreeStringInto(std::string &String) {parseFreeStringInto76,1834
  bool skipEscapeCharacter() {skipEscapeCharacter87,2120
  bool nextNonWhitespace() {nextNonWhitespace94,2229
  bool next() {next102,2362
  const std::string Input;Input108,2444
  std::string::const_iterator Position;Position109,2471
  std::vector<std::string> CommandLine;CommandLine110,2511
unescapeCommandLine(const std::string &EscapedCommandLine) {unescapeCommandLine116,2604

elpa/irony-20160611.417/server/src/support/CommandLineParser.h,113
#define IRONY_MODE_SERVER_SUPPORT_COMMAND_LINE_PARSER_H_IRONY_MODE_SERVER_SUPPORT_COMMAND_LINE_PARSER_H_13,343

elpa/irony-20160611.417/server/src/support/iomanip_quoted.h,500
#define IRONY_MODE_SERVER_SUPPORT_IOMANIP_QUOTED_H_IRONY_MODE_SERVER_SUPPORT_IOMANIP_QUOTED_H_11,262
namespace support {support16,353
namespace detail {detail17,373
struct quoted_string_proxy {quoted_string_proxy19,393
  quoted_string_proxy(const std::string &s) : s(s) {quoted_string_proxy20,422
  std::string s;s23,480
std::ostream &operator<<(std::ostream &os, const quoted_string_proxy &q) {operator <<26,501
detail::quoted_string_proxy quoted(const std::string &s) {quoted46,856

elpa/irony-20160611.417/server/src/support/NonCopyable.h,241
#define IRONY_MODE_SERVER_SUPPORT_NONCOPYABLE_H_IRONY_MODE_SERVER_SUPPORT_NONCOPYABLE_H_14,354
namespace util {util16,404
class NonCopyable {NonCopyable18,422
  NonCopyable() {NonCopyable20,453
  ~NonCopyable() {~NonCopyable24,514

elpa/irony-20160611.417/server/src/support/TemporaryFile.cpp,276
static std::string getTemporaryFileDirectory() {getTemporaryFileDirectory18,315
TemporaryFile::TemporaryFile(const std::string &prefix,TemporaryFile29,582
TemporaryFile::~TemporaryFile() {~TemporaryFile34,747
const std::string &TemporaryFile::getPath() {getPath41,875

elpa/irony-20160611.417/server/src/support/TemporaryFile.h,302
#define IRONY_MODE_SERVER_SUPPORT_TEMPORARY_FILE_H_IRONY_MODE_SERVER_SUPPORT_TEMPORARY_FILE_H_12,283
class TemporaryFile {TemporaryFile18,391
    MAX_ATTEMPS = 25MAX_ATTEMPS21,470
  std::string pathOrPattern_;pathOrPattern_32,694
  std::unique_ptr<std::fstream> openedFile_;openedFile_33,724

elpa/irony-20160611.417/server/src/TUManager.cpp,470
TUManager::TUManager()TUManager16,249
TUManager::~TUManager() {~TUManager63,2203
CXTranslationUnit &TUManager::tuRef(const std::string &filename,tuRef67,2262
TUManager::parse(const std::string &filename,parse86,2894
TUManager::getOrCreateTU(const std::string &filename,getOrCreateTU156,5297
void TUManager::invalidateCachedTU(const std::string &filename) {invalidateCachedTU165,5596
void TUManager::invalidateAllCachedTUs() {invalidateAllCachedTUs176,5898

elpa/irony-20160611.417/server/src/TUManager.h,593
#define IRONY_MODE_SERVER_TUMANAGER_H_IRONY_MODE_SERVER_TUMANAGER_H_15,346
class TUManager : public util::NonCopyable {TUManager24,500
  typedef std::map<const std::string, CXTranslationUnit> TranslationUnitsMap;TranslationUnitsMap99,2847
  typedef std::map<const std::string, std::vector<std::string>> FilenameFlagsMap;FilenameFlagsMap100,2925
  CXIndex index_;index_103,3017
  TranslationUnitsMap translationUnits_; // cache variabletranslationUnits_104,3035
  FilenameFlagsMap flagsPerFileCache_;flagsPerFileCache_105,3094
  unsigned parseTUOptions_;parseTUOptions_106,3133

elpa/irony-20160611.417/server/test/elisp/irony-cdb-json.el,68
(defconst irony-cdb/compile-commandirony-cdb/compile-command9,175

elpa/irony-20160611.417/server/test/elisp/irony.el,0

elpa/irony-20160611.417/server/test/elisp/support/ert.el,11212
(defgroup ert ()ert69,2620
(defface ert-test-result-expected '((((class color) (background light))ert-test-result-expected74,2720
(defface ert-test-result-unexpected '((((class color) (background light))ert-test-result-unexpected81,3060
(defun ert--cl-do-remf (plist tag)ert--cl-do-remf91,3454
(defun ert--remprop (sym tag)ert--remprop97,3711
(defun ert--remove-if-not (ert-pred ert-list)ert--remove-if-not104,3963
(defun ert--intersection (a b)ert--intersection112,4197
(defun ert--set-difference (a b)ert--set-difference120,4398
(defun ert--set-difference-eq (a b)ert--set-difference-eq128,4614
(defun ert--union (a b)ert--union136,4831
(defun ert--coerce-to-vector (x)ert--coerce-to-vector154,5389
(defun* ert--remove* (x list &key key test)ert--remove*161,5543
(defun ert--string-position (c s)ert--string-position169,5799
(defun ert--mismatch (a b)ert--mismatch175,5987
(defun ert--subseq (seq start &optional end)ert--subseq197,6792
(defun ert-equal-including-properties (a b)ert-equal-including-properties211,7398
(defstruct ert-testert-test228,8119
(defun ert-test-boundp (symbol)ert-test-boundp236,8272
(defun ert-get-test (symbol)ert-get-test240,8383
(defun ert-set-test (symbol definition)ert-set-test245,8581
(defun ert-make-test-unbound (symbol)ert-make-test-unbound259,9216
(defun ert--parse-keys-and-body (keys-and-body)ert--parse-keys-and-body264,9346
(defmacro* ert-deftest (name () &body docstring-keys-and-body)ert-deftest292,10485
(defvar ert--find-test-regexpert--find-test-regexp352,13047
(defun ert-pass ()ert-pass362,13373
(defun ert-fail (data)ert-fail366,13488
(defvar ert--should-execution-observer nil)ert--should-execution-observer374,13723
(defun ert--signal-should-execution (form-description)ert--signal-should-execution376,13768
(defun ert--special-operator-p (thing)ert--special-operator-p381,14004
(defun ert--expand-should-1 (whole form inner-expander)ert--expand-should-1388,14287
(defun ert--expand-should (whole form inner-expander)ert--expand-should439,16701
(defmacro* should (form)should468,18042
(defmacro* should-not (form)should-not477,18397
(defun ert--should-error-handle-error (form-description-fnert--should-error-handle-error486,18756
(defmacro* should-error (form &rest keys &key type exclude-subtypes)should-error515,20100
(defun ert--proper-list-p (x)ert--proper-list-p561,22087
(defun ert--explain-format-atom (x)ert--explain-format-atom573,22499
(defun ert--explain-not-equal (a b)ert--explain-not-equal579,22671
(defun ert--significant-plist-keys (plist)ert--significant-plist-keys632,25205
(defun ert--plist-difference-explanation (a b)ert--plist-difference-explanation639,25512
(defun ert--abbreviate-string (s len suffixp)ert--abbreviate-string672,27199
(defun ert--explain-not-equal-including-properties (a b)ert--explain-not-equal-including-properties684,27518
(defvar ert--infos '()ert--infos723,29183
(defmacro* ert-info ((message-form &key ((:prefix prefix-form) "Info: "))ert-info728,29329
(defvar ert-debug-on-error nilert-debug-on-error745,29961
(defstruct ert-test-resultert-test-result749,30142
(defun ert--record-backtrace ()ert--record-backtrace763,30639
(defun ert--print-backtrace (backtrace)ert--print-backtrace782,31496
(defstruct ert--test-execution-infoert--test-execution-info810,32555
(defun ert--run-test-debugger (info debugger-args)ert--run-test-debugger825,33183
(defun ert--run-test-internal (ert-test-execution-info)ert--run-test-internal867,35069
(defun ert--force-message-log-buffer-truncation ()ert--force-message-log-buffer-truncation893,36283
(defvar ert--running-tests nilert--running-tests913,37141
(defun ert-run-test (ert-test)ert-run-test923,37472
(defun ert-running-test ()ert-running-test959,39289
(defun ert-test-result-type-p (result result-type)ert-test-result-type-p966,39425
(defun ert-test-result-expected-p (test result)ert-test-result-expected-p1008,40953
(defun ert-select-tests (selector universe)ert-select-tests1012,41140
(defun ert--insert-human-readable-selector (selector)ert--insert-human-readable-selector1134,46663
(defstruct ert--statsert--stats1176,48584
(defun ert-stats-completed-expected (stats)ert-stats-completed-expected1203,49480
(defun ert-stats-completed-unexpected (stats)ert-stats-completed-unexpected1208,49674
(defun ert-stats-completed (stats)ert-stats-completed1213,49876
(defun ert-stats-total (stats)ert-stats-total1218,50051
(defvar ert--current-run-stats nil)ert--current-run-stats1224,50305
(defun ert--stats-test-key (test)ert--stats-test-key1226,50342
(defun ert--stats-set-test-and-result (stats pos test result)ert--stats-set-test-and-result1232,50550
(defun ert--make-stats (tests selector)ert--make-stats1264,52041
(defun ert-run-or-rerun-test (stats test listener)ert-run-or-rerun-test1282,52802
(defun ert-run-tests (selector listener)ert-run-tests1304,53929
(defun ert--stats-test-pos (stats test)ert--stats-test-pos1325,54814
(defun ert--format-time-iso8601 (time)ert--format-time-iso86011333,55067
(defun ert-char-for-test-result (result expectedp)ert-char-for-test-result1337,55223
(defun ert-string-for-test-result (result expectedp)ert-string-for-test-result1348,55611
(defun ert--pp-with-indentation-and-newline (object)ert--pp-with-indentation-and-newline1359,56066
(defun ert--insert-infos (result)ert--insert-infos1369,56386
(defvar ert-batch-backtrace-right-margin 70ert-batch-backtrace-right-margin1394,57233
(defun ert-run-tests-batch (&optional selector)ert-run-tests-batch1398,57373
(defun ert-run-tests-batch-and-exit (&optional selector)ert-run-tests-batch-and-exit1494,61969
(defun ert--activate-font-lock-keywords ()ert--activate-font-lock-keywords1513,62622
(defun* ert--remove-from-list (list-var element &key key test)ert--remove-from-list1521,62896
(defun ert-read-test-name (prompt &optional default historyert-read-test-name1536,63356
(defun ert-read-test-name-at-point (prompt)ert-read-test-name-at-point1568,64702
(defun ert-find-test-other-window (test-name)ert-find-test-other-window1575,65007
(defun ert-delete-test (test-name)ert-delete-test1580,65269
(defun ert-delete-all-tests ()ert-delete-all-tests1587,65518
(defstruct ert--ewoc-entryert--ewoc-entry1603,66098
(defvar ert--results-ewoc)ert--results-ewoc1623,66765
(defvar ert--results-stats)ert--results-stats1625,66813
(defvar ert--results-progress-bar-string)ert--results-progress-bar-string1629,67035
(defvar ert--results-progress-bar-button-begin)ert--results-progress-bar-button-begin1631,67131
(defvar ert--results-listener)ert--results-listener1633,67251
(defun ert-insert-test-name-button (test-name)ert-insert-test-name-button1635,67283
(defun ert--results-format-expected-unexpected (expected unexpected)ert--results-format-expected-unexpected1641,67522
(defun ert--results-update-ewoc-hf (ewoc stats)ert--results-update-ewoc-hf1647,67798
(defvar ert-test-run-redisplay-interval-secs .1ert-test-run-redisplay-interval-secs1737,71716
(defun ert--results-update-stats-display (ewoc stats)ert--results-update-stats-display1743,71974
(defun ert--results-update-stats-display-maybe (ewoc stats)ert--results-update-stats-display-maybe1752,72342
(defun ert--tests-running-mode-line-indicator ()ert--tests-running-mode-line-indicator1759,72656
(defun ert--make-xrefs-region (begin end)ert--make-xrefs-region1774,73308
(defun ert--string-first-line (s)ert--string-first-line1786,73769
(defun ert-face-for-test-result (expectedp)ert-face-for-test-result1792,73973
(defun ert-face-for-stats (stats)ert-face-for-stats1799,74284
(defun ert--print-test-for-ewoc (entry)ert--print-test-for-ewoc1808,74635
(defun ert--results-font-lock-function (enabledp)ert--results-font-lock-function1860,77192
(defun ert--setup-results-buffer (stats listener buffer-name)ert--setup-results-buffer1869,77536
(defvar ert--selector-history nilert--selector-history1904,79190
(defun ert-run-tests-interactively (selectorert-run-tests-interactively1911,79477
(defalias 'ert 'ert-run-tests-interactively)ert1994,83730
(define-derived-mode ert-simple-view-mode fundamental-mode "ERT-View"ert-simple-view-mode2000,83888
(define-derived-mode ert-results-mode fundamental-mode "ERT-Results"ert-results-mode2012,84205
(define-button-type 'ert--results-progress-bar-buttonert--results-progress-bar-button2058,86093
(define-button-type 'ert--test-name-buttonert--test-name-button2062,86249
(define-button-type 'ert--results-expand-collapse-buttonert--results-expand-collapse-button2066,86385
(defun ert--results-test-node-or-null-at-point ()ert--results-test-node-or-null-at-point2070,86556
(defun ert--results-test-node-at-point ()ert--results-test-node-at-point2088,87231
(defun ert-results-next-test ()ert-results-next-test2095,87472
(defun ert-results-previous-test ()ert-results-previous-test2103,87697
(defun ert--results-move (node ewoc-fn error-message)ert--results-move2111,87930
(defun ert--results-expand-collapse-button-action (button)ert--results-expand-collapse-button-action2125,88451
(defun ert-results-find-test-at-point-other-window ()ert-results-find-test-at-point-other-window2136,88910
(defun ert--test-name-button-action (button)ert--test-name-button-action2146,89211
(defun ert--ewoc-position (ewoc node)ert--ewoc-position2151,89422
(defun ert-results-jump-between-summary-and-result ()ert-results-jump-between-summary-and-result2160,89747
(defun ert-test-at-point ()ert-test-at-point2192,91316
(defun ert--results-test-at-point-no-redefinition ()ert--results-test-at-point-no-redefinition2202,91720
(defun ert--results-test-at-point-allow-redefinition ()ert--results-test-at-point-allow-redefinition2219,92453
(defun ert--results-update-after-test-redefinition (pos new-test)ert--results-update-after-test-redefinition2256,93837
(defun ert--button-action-position ()ert--button-action-position2272,94478
(defun ert--results-progress-bar-button-action (button)ert--results-progress-bar-button-action2280,94762
(defun ert-results-rerun-all-tests ()ert-results-rerun-all-tests2285,94993
(defun ert-results-rerun-test-at-point ()ert-results-rerun-test-at-point2294,95300
(defun ert-results-rerun-test-at-point-debugging-errors ()ert-results-rerun-test-at-point-debugging-errors2329,96914
(defun ert-results-pop-to-backtrace-for-test-at-point ()ert-results-pop-to-backtrace-for-test-at-point2337,97168
(defun ert-results-pop-to-messages-for-test-at-point ()ert-results-pop-to-messages-for-test-at-point2367,98396
(defun ert-results-pop-to-should-forms-for-test-at-point ()ert-results-pop-to-should-forms-for-test-at-point2389,99243
(defun ert-results-toggle-printer-limits-for-test-at-point ()ert-results-toggle-printer-limits-for-test-at-point2424,100789
(defun ert-results-pop-to-timings ()ert-results-pop-to-timings2436,101256
(defun ert-describe-test (test-or-test-name)ert-describe-test2474,102843
(defun ert-results-describe-test-at-point ()ert-results-describe-test-at-point2514,104805
(defun ert--unload-function ()ert--unload-function2530,105382
(defvar ert-unload-hook '())ert-unload-hook2538,105749

elpa/irony-20160611.417/server/test/elisp/test-config.el,50
(defvar test-dir (if load-file-nametest-dir2,30

elpa/ivy-20160624.23/colir.el,512
(defcustom colir-compose-method 'colir-compose-alphacolir-compose-method35,1163
(defun colir-compose-soft-light (a b)colir-compose-soft-light43,1422
(defun colir-compose-overlay (a b)colir-compose-overlay49,1598
(defun colir-compose-alpha (a b &optional alpha gamma)colir-compose-alpha55,1730
(defun colir-blend (c1 c2)colir-blend61,1939
(defun colir-color-parse (color)colir-color-parse72,2347
(defun colir-blend-face-background (start end face &optional object)colir-blend-face-background81,2839

elpa/ivy-20160624.23/ivy-autoloads.el,41
(defvar ivy-mode nil "\ivy-mode82,2840

elpa/ivy-20160624.23/ivy-pkg.el,80
(define-package "ivy" "20160624.23" "Incremental Vertical completYon""ivy"1,0

elpa/ivy-20160624.23/ivy.el,15703
(defgroup ivy nilivy44,1414
(defgroup ivy-faces nilivy-faces48,1493
(defface ivy-current-matchivy-current-match53,1580
(defface ivy-minibuffer-match-face-1ivy-minibuffer-match-face-160,1842
(defface ivy-minibuffer-match-face-2ivy-minibuffer-match-face-267,2071
(defface ivy-minibuffer-match-face-3ivy-minibuffer-match-face-374,2331
(defface ivy-minibuffer-match-face-4ivy-minibuffer-match-face-481,2591
(defface ivy-confirm-faceivy-confirm-face88,2851
(defface ivy-match-required-faceivy-match-required-face92,2989
(defface ivy-subdirivy-subdir96,3128
(defface ivy-modified-bufferivy-modified-buffer100,3251
(defface ivy-remoteivy-remote104,3378
(defface ivy-virtualivy-virtual108,3498
(defface ivy-actionivy-action112,3618
(defcustom ivy-height 10ivy-height118,3809
(defcustom ivy-count-format "%-4d "ivy-count-format122,3900
(defcustom ivy-add-newline-after-prompt nilivy-add-newline-after-prompt132,4333
(defcustom ivy-wrap nilivy-wrap136,4457
(defcustom ivy-display-style (unless (version< emacs-version "24.5") 'fancy)ivy-display-style140,4570
(defcustom ivy-on-del-error-function 'minibuffer-keyboard-quitivy-on-del-error-function155,5087
(defcustom ivy-extra-directories '("../" "./")ivy-extra-directories160,5274
(defcustom ivy-use-virtual-buffers nilivy-use-virtual-buffers168,5602
(defvar ivy--actions-list nilivy--actions-list172,5735
(defun ivy-set-actions (cmd actions)ivy-set-actions175,5808
(defun ivy-add-actions (cmd actions)ivy-add-actions180,5966
(defvar ivy--prompts-list nil)ivy--prompts-list189,6262
(defun ivy-set-prompt (caller prompt-fn)ivy-set-prompt191,6294
(defvar ivy--display-transformers-list nilivy--display-transformers-list197,6526
(defun ivy-set-display-transformer (cmd transformer)ivy-set-display-transformer200,6620
(defvar ivy--sources-list nilivy--sources-list212,7106
(defun ivy-set-sources (cmd sources)ivy-set-sources215,7179
(defvar ivy-current-prefix-arg nilivy-current-prefix-arg238,7720
(defvar ivy-minibuffer-mapivy-minibuffer-map245,7905
(defvar ivy-mode-mapivy-mode-map289,10208
(defvar ivy-last (make-ivy-state)ivy-last319,11018
(defsubst ivy-set-action (action)ivy-set-action325,11185
(defun ivy-thing-at-point ()ivy-thing-at-point329,11313
(defvar ivy-history nilivy-history345,11859
(defvar ivy--directory nilivy--directory351,12027
(defvar ivy--length 0ivy--length354,12106
(defvar ivy-text ""ivy-text357,12173
(defvar ivy--current ""ivy--current360,12242
(defvar ivy--index 0ivy--index363,12291
(defvar ivy-exit nilivy-exit366,12360
(defvar ivy--all-candidates nilivy--all-candidates370,12466
(defvar ivy--extra-candidates '((original-source))ivy--extra-candidates373,12547
(defcustom ivy-use-ignore-default tivy-use-ignore-default385,13000
(defvar ivy-use-ignore tivy-use-ignore392,13276
(defvar ivy--default nilivy--default397,13477
(defvar ivy--prompt nilivy--prompt400,13531
(defvar ivy--prompt-extra ""ivy--prompt-extra404,13641
(defvar ivy--old-re nilivy--old-re407,13715
(defvar ivy--old-cands nilivy--old-cands410,13767
(defvar ivy--regex-function 'ivy--regexivy--regex-function413,13847
(defvar ivy--subexps 0ivy--subexps416,13932
(defvar ivy--full-length nilivy--full-length419,14007
(defvar ivy--old-text ""ivy--old-text422,14123
(defvar ivy-case-fold-search 'autoivy-case-fold-search425,14199
(defvar Info-current-file)Info-current-file428,14289
(defmacro ivy-quit-and-run (&rest body)ivy-quit-and-run442,14858
(defun ivy-exit-with-action (action)ivy-exit-with-action452,15165
(defmacro with-ivy-window (&rest body)with-ivy-window461,15416
(defun ivy--done (text)ivy--done468,15631
(defun ivy-done ()ivy-done479,15996
(defvar ivy-read-action-format-function 'ivy-read-action-format-defaultivy-read-action-format-function505,17023
(defun ivy-read-action-format-default (actions)ivy-read-action-format-default508,17163
(defun ivy-read-action ()ivy-read-action527,17724
(defun ivy-dispatching-done ()ivy-dispatching-done552,18612
(defun ivy-dispatching-call ()ivy-dispatching-call558,18764
(defun ivy-build-tramp-name (x)ivy-build-tramp-name568,19095
(defun ivy-alt-done (&optional arg)ivy-alt-done580,19433
(defun ivy--directory-done ()ivy--directory-done601,20243
(defun ivy-expand-file-if-directory (file-name)ivy-expand-file-if-directory654,22287
(defcustom ivy-tab-space nilivy-tab-space666,22730
(defun ivy-partial-or-done ()ivy-partial-or-done670,22841
(defun ivy-partial ()ivy-partial689,23600
(defun ivy-immediate-done ()ivy-immediate-done716,24705
(defun ivy-resume ()ivy-resume728,25072
(defvar-local ivy-calling nilivy-calling756,26273
(defun ivy-set-index (index)ivy-set-index759,26374
(defun ivy-beginning-of-buffer ()ivy-beginning-of-buffer766,26517
(defun ivy-end-of-buffer ()ivy-end-of-buffer771,26632
(defun ivy-scroll-up-command ()ivy-scroll-up-command776,26755
(defun ivy-scroll-down-command ()ivy-scroll-down-command782,26958
(defun ivy-minibuffer-grow ()ivy-minibuffer-grow788,27150
(defun ivy-minibuffer-shrink ()ivy-minibuffer-shrink794,27313
(defun ivy-next-line (&optional arg)ivy-next-line802,27554
(defun ivy-next-line-or-history (&optional arg)ivy-next-line-or-history813,27889
(defun ivy-previous-line (&optional arg)ivy-previous-line821,28167
(defun ivy-previous-line-or-history (arg)ivy-previous-line-or-history832,28468
(defun ivy-toggle-calling ()ivy-toggle-calling840,28740
(defun ivy-toggle-ignore ()ivy-toggle-ignore846,28872
(defun ivy--get-action (state)ivy--get-action856,29124
(defun ivy--get-window (state)ivy--get-window864,29347
(defun ivy--actionp (x)ivy--actionp875,29665
(defcustom ivy-action-wrap nilivy-action-wrap879,29798
(defun ivy-next-action ()ivy-next-action883,29912
(defun ivy-prev-action ()ivy-prev-action895,30297
(defun ivy-action-name ()ivy-action-name905,30629
(defvar ivy-inhibit-action nilivy-inhibit-action915,30959
(defun ivy-call ()ivy-call925,31211
(defun ivy-next-line-and-call (&optional arg)ivy-next-line-and-call959,32646
(defun ivy-previous-line-and-call (&optional arg)ivy-previous-line-and-call967,32853
(defun ivy-previous-history-element (arg)ivy-previous-history-element975,33068
(defun ivy-next-history-element (arg)ivy-next-history-element983,33288
(defvar ivy-ffap-url-functions nilivy-ffap-url-functions1006,34149
(defun ivy--cd-maybe ()ivy--cd-maybe1009,34245
(defun ivy--maybe-scroll-history ()ivy--maybe-scroll-history1035,35244
(defun ivy--cd (dir)ivy--cd1045,35544
(defun ivy-backward-delete-char ()ivy-backward-delete-char1057,35902
(defun ivy-delete-char (arg)ivy-delete-char1074,36461
(defun ivy-forward-char (arg)ivy-forward-char1080,36611
(defun ivy-kill-word (arg)ivy-kill-word1086,36764
(defun ivy-kill-line ()ivy-kill-line1092,36908
(defun ivy-backward-kill-word ()ivy-backward-kill-word1099,37060
(defvar ivy--regexp-quote 'regexp-quoteivy--regexp-quote1114,37510
(defun ivy-toggle-regexp-quote ()ivy-toggle-regexp-quote1117,37588
(defvar avy-all-windows)avy-all-windows1123,37749
(defvar avy-action)avy-action1124,37774
(defvar avy-keys)avy-keys1125,37794
(defvar avy-keys-alist)avy-keys-alist1126,37812
(defvar avy-style)avy-style1127,37836
(defvar avy-styles-alist)avy-styles-alist1128,37855
(defun ivy-avy ()ivy-avy1135,38043
(defun ivy-sort-file-function-default (x y)ivy-sort-file-function-default1170,39233
(defun ivy-sort-file-function-using-ido (x y)ivy-sort-file-function-using-ido1183,39568
(defcustom ivy-sort-functions-alistivy-sort-functions-alist1192,39929
(defvar ivy-index-functions-alistivy-index-functions-alist1221,40965
(defvar ivy-re-builders-alistivy-re-builders-alist1232,41437
(defvar ivy-initial-inputs-alistivy-initial-inputs-alist1255,42188
(defcustom ivy-sort-max-size 30000ivy-sort-max-size1266,42478
(defun ivy--sorted-files (dir)ivy--sorted-files1270,42592
(defvar ivy-recursive-restore tivy-recursive-restore1294,43460
(defun ivy--reset-state (state)ivy--reset-state1447,49535
(defun ivy-add-prompt-count (prompt)ivy-add-prompt-count1598,56738
(defun ivy-completing-read (prompt collectionivy-completing-read1623,57642
(defvar ivy-completion-beg nilivy-completion-beg1671,59881
(defvar ivy-completion-end nilivy-completion-end1674,59943
(defun ivy-completion-in-region-action (str)ivy-completion-in-region-action1679,60071
(defun ivy-completion-common-length (str)ivy-completion-common-length1709,61322
(defun ivy-completion-in-region (start end collection &optional predicate)ivy-completion-in-region1726,62050
(defcustom ivy-do-completion-in-region tivy-do-completion-in-region1763,63774
(define-minor-mode ivy-modeivy-mode1768,63919
(defun ivy--preselect-index (preselect candidates)ivy--preselect-index1791,64589
(defvar ivy--regex-hashivy--regex-hash1805,65003
(defun ivy--split (str)ivy--split1809,65093
(defun ivy--regex (str &optional greedy)ivy--regex1848,66449
(defun ivy--regex-ignore-order--part (str &optional discard)ivy--regex-ignore-order--part1877,67616
(defun ivy--regex-ignore-order (str)ivy--regex-ignore-order1889,67956
(defun ivy--regex-plus (str)ivy--regex-plus1908,68632
(defun ivy--regex-fuzzy (str)ivy--regex-fuzzy1927,69244
(defcustom ivy-fixed-height-minibuffer nilivy-fixed-height-minibuffer1941,69732
(defun ivy--minibuffer-setup ()ivy--minibuffer-setup1950,70046
(defun ivy--input ()ivy--input1966,70669
(defun ivy--cleanup ()ivy--cleanup1973,70856
(defvar ivy-set-prompt-text-properties-functionivy-set-prompt-text-properties-function1979,71040
(defun ivy-set-prompt-text-properties-default (prompt std-props)ivy-set-prompt-text-properties-default1985,71297
(defun ivy-prompt ()ivy-prompt1992,71593
(defun ivy--insert-prompt ()ivy--insert-prompt2004,71966
(defun ivy--set-match-props (str match props &optional subexp)ivy--set-match-props2063,74626
(defvar inhibit-message)inhibit-message2075,75017
(defun ivy--sort-maybe (collection)ivy--sort-maybe2077,75043
(defun ivy--magic-file-slash ()ivy--magic-file-slash2094,75697
(defun ivy--exhibit ()ivy--exhibit2116,76671
(defun ivy--insert-minibuffer (text)ivy--insert-minibuffer2159,78656
(defun ivy--resize-minibuffer-to-fit ()ivy--resize-minibuffer-to-fit2177,79210
(defun ivy--add-face (str face)ivy--add-face2196,80179
(defvar ivy--flx-cache nil)ivy--flx-cache2219,80900
(defun ivy-toggle-case-fold ()ivy-toggle-case-fold2224,81002
(defun ivy--re-filter (re candidates)ivy--re-filter2240,81485
(defun ivy--filter (name candidates)ivy--filter2259,82104
(defun ivy--set-candidates (x)ivy--set-candidates2308,84265
(defcustom ivy-sort-matches-functions-alist '((t . nil))ivy-sort-matches-functions-alist2322,84706
(defun ivy--sort-files-by-date (_name candidates)ivy--sort-files-by-date2344,85537
(defun ivy--sort (name candidates)ivy--sort2353,85884
(defun ivy--prefix-sort (name candidates)ivy--prefix-sort2369,86553
(defun ivy--recompute-index (name re-str cands)ivy--recompute-index2385,87069
(defun ivy-recompute-index-swiper (_re-str cands)ivy-recompute-index-swiper2419,88510
(defun ivy-recompute-index-swiper-async (_re-str cands)ivy-recompute-index-swiper-async2442,89269
(defun ivy-recompute-index-zero (_re-str _cands)ivy-recompute-index-zero2464,90131
(defcustom ivy-minibuffer-facesivy-minibuffer-faces2467,90186
(defvar ivy-flx-limit 200ivy-flx-limit2481,90677
(defun ivy--flx-sort (name cands)ivy--flx-sort2487,90838
(defcustom ivy-format-function 'ivy-format-function-defaultivy-format-function2526,92456
(defun ivy--truncate-string (str width)ivy--truncate-string2534,92830
(defun ivy--format-function-generic (selected-fn other-fn strs separator)ivy--format-function-generic2541,93055
(defun ivy-format-function-default (cands)ivy-format-function-default2555,93504
(defun ivy-format-function-arrow (cands)ivy-format-function-arrow2564,93730
(defun ivy-format-function-line (cands)ivy-format-function-line2574,93995
(defun ivy-add-face-text-property (start end face str)ivy-add-face-text-property2584,94257
(defun ivy--format-minibuffer-line (str)ivy--format-minibuffer-line2591,94483
(defun ivy-read-file-transformer (str)ivy-read-file-transformer2639,96566
(defun ivy--format (cands)ivy--format2644,96691
(defvar ivy--virtual-buffers nilivy--virtual-buffers2671,97825
(defvar recentf-list)recentf-list2674,97897
(defcustom ivy-virtual-abbreviate 'nameivy-virtual-abbreviate2676,97920
(defun ivy--virtual-buffers ()ivy--virtual-buffers2684,98160
(defcustom ivy-ignore-buffers '("\\` ")ivy-ignore-buffers2717,99501
(defun ivy--buffer-list (str &optional virtual predicate)ivy--buffer-list2721,99652
(defvar ivy-views (and nilivy-views2737,100144
(defun ivy-default-view-name ()ivy-default-view-name2762,101122
(defun ivy-push-view ()ivy-push-view2794,102450
(defun ivy-pop-view-action (view)ivy-pop-view-action2822,103903
(defun ivy-pop-view ()ivy-pop-view2829,104121
(defun ivy-source-views ()ivy-source-views2837,104360
(defun ivy-set-view-recur (view)ivy-set-view-recur2845,104499
(defun ivy--switch-buffer-action (buffer)ivy--switch-buffer-action2881,105921
(defun ivy--switch-buffer-other-window-action (buffer)ivy--switch-buffer-other-window-action2903,106697
(defun ivy--rename-buffer-action (buffer)ivy--rename-buffer-action2914,107121
(defvar ivy-switch-buffer-map (make-sparse-keymap))ivy-switch-buffer-map2920,107315
(defun ivy--switch-buffer-matcher (regexp candidates)ivy--switch-buffer-matcher2936,107624
(defun ivy-switch-buffer-transformer (str)ivy-switch-buffer-transformer2960,108414
(defun ivy-switch-buffer-occur ()ivy-switch-buffer-occur2968,108638
(defun ivy-switch-buffer ()ivy-switch-buffer2976,108953
(defun ivy-switch-buffer-other-window ()ivy-switch-buffer-other-window2988,109408
(defun ivy-recentf ()ivy-recentf2998,109830
(defun ivy-yank-word ()ivy-yank-word3008,110083
(defun ivy-kill-ring-save ()ivy-kill-ring-save3022,110500
(defun ivy-insert-current ()ivy-insert-current3034,110811
(defun ivy-toggle-fuzzy ()ivy-toggle-fuzzy3044,111108
(defun ivy-reverse-i-search ()ivy-reverse-i-search3052,111403
(defun ivy-restrict-to-matches ()ivy-restrict-to-matches3069,112096
(defvar-local ivy-occur-last nilivy-occur-last3077,112329
(defvar ivy-occur-mode-mapivy-occur-mode-map3082,112498
(defun ivy-occur-toggle-calling ()ivy-occur-toggle-calling3099,113210
(defun ivy-occur-next-line (&optional arg)ivy-occur-next-line3109,113480
(defun ivy-occur-previous-line (&optional arg)ivy-occur-previous-line3117,113699
(define-derived-mode ivy-occur-mode fundamental-mode "Ivy-Occur"ivy-occur-mode3125,113924
(defvar ivy-occur-grep-mode-mapivy-occur-grep-mode-map3130,114061
(define-derived-mode ivy-occur-grep-mode grep-mode "Ivy-Occur"ivy-occur-grep-mode3136,114257
(defvar ivy--occurs-list nilivy--occurs-list3141,114397
(defun ivy-set-occur (cmd occur)ivy-set-occur3144,114479
(defun ivy--occur-insert-lines (cands)ivy--occur-insert-lines3152,114761
(defun ivy-occur ()ivy-occur3162,114982
(defun ivy-occur-revert-buffer ()ivy-occur-revert-buffer3200,116382
(defun ivy-wgrep-change-to-wgrep-mode ()ivy-wgrep-change-to-wgrep-mode3226,117428
(defun ivy-occur-read-action ()ivy-occur-read-action3233,117648
(defun ivy-occur-dispatch ()ivy-occur-dispatch3239,117816
(defun ivy-occur-click (event)ivy-occur-click3252,118270
(defvar ivy-occur-timer nil)ivy-occur-timer3264,118685
(defvar counsel-grep-last-line)counsel-grep-last-line3265,118714
(defun ivy-occur-press ()ivy-occur-press3267,118747
(defvar ivy-help-file (let ((default-directoryivy-help-file3311,120629
(defun ivy-help ()ivy-help3321,121134

elpa/let-alist-1.0.4/let-alist-autoloads.el,0

elpa/let-alist-1.0.4/let-alist-pkg.el,212
(define-package "let-alist" "1.0.4" "Easily let-bind values of an assoc-list by their names" '((emacs "24.1")) :url "http://elpa.gnu.org/packages/let-alist.html" :keywords '("extensions" "lisp"))"let-alist"1,0

elpa/let-alist-1.0.4/let-alist.el,355
(defun let-alist--deep-dot-search (data)let-alist--deep-dot-search64,2224
(defun let-alist--access-sexp (symbol variable)let-alist--access-sexp79,2886
(defun let-alist--list-to-sexp (list var)let-alist--list-to-sexp89,3241
(defun let-alist--remove-dot (symbol)let-alist--remove-dot95,3474
(defmacro let-alist (alist &rest body)let-alist105,3731

elpa/lua-mode-20160821.1216/init-tryout.el,48
(defmacro add-trace-for (fn)add-trace-for3,27

elpa/lua-mode-20160821.1216/lua-mode-autoloads.el,55
(defalias 'run-lua #'lua-start-process)run-lua18,458

elpa/lua-mode-20160821.1216/lua-mode-pkg.el,154
(define-package "lua-mode" "20160821.1216" "a major-mode for editing Lua scripts" 'nil :url "http://immerrr.github.com/lua-mode" :keywords"lua-mode"1,0

elpa/lua-mode-20160821.1216/lua-mode.el,9140
(defgroup lua nillua223,8432
(defcustom lua-indent-level 3lua-indent-level228,8526
(defcustom lua-comment-start "-- "lua-comment-start234,8661
(defcustom lua-comment-start-skip "---*[ \t]*"lua-comment-start-skip239,8766
(defcustom lua-default-application "lua"lua-default-application244,8888
(defcustom lua-default-command-switches (list "-i")lua-default-command-switches249,9011
(defcustom lua-always-show tlua-always-show256,9244
(defcustom lua-documentation-function 'browse-urllua-documentation-function261,9377
(defcustom lua-documentation-urllua-documentation-url269,9737
(defvar lua-process nillua-process278,10014
(defvar lua-process-buffer nillua-process-buffer281,10070
(defun lua--customize-set-prefix-key (prefix-key-sym prefix-key-val)lua--customize-set-prefix-key284,10157
(defcustom lua-prefix-key "\C-c"lua-prefix-key293,10648
(defvar lua-mode-menu (make-sparse-keymap "Lua")lua-mode-menu301,10895
(defvar lua-prefix-mode-maplua-prefix-mode-map304,10978
(defvar lua--electric-indent-charslua--electric-indent-chars316,11447
(defvar lua-mode-maplua-mode-map320,11528
(defvar lua-electric-flag tlua-electric-flag343,12451
(defcustom lua-prompt-regexp "[^\n]*\\(>[\t ]+\\)+$"lua-prompt-regexp348,12641
(defcustom lua-traceback-line-relua-traceback-line-re353,12778
(defvar lua--repl-buffer-p nillua--repl-buffer-p361,13119
(defadvice compilation-find-file (around lua--repl-find-filecompilation-find-file366,13261
(defadvice compilation-goto-locus (around lua--repl-goto-locuscompilation-goto-locus382,13914
(defcustom lua-indent-string-contents nillua-indent-string-contents397,14530
(defcustom lua-jump-on-traceback tlua-jump-on-traceback403,14734
(defcustom lua-mode-hook nillua-mode-hook411,15027
(defvar lua-region-start (make-marker)lua-region-start416,15127
(defvar lua-region-end (make-marker)lua-region-end419,15219
(defvar lua-emacs-menulua-emacs-menu422,15307
(defvar lua-font-lock-keywordslua-font-lock-keywords594,23527
(defvar lua-imenu-generic-expressionlua-imenu-generic-expression666,26105
(defvar lua-sexp-alist '(("then" . "end")lua-sexp-alist670,26306
(defvar lua-mode-abbrev-table nillua-mode-abbrev-table675,26474
(define-abbrev-table 'lua-mode-abbrev-tablelua-mode-abbrev-table678,26559
(defvar lua-mode-syntax-tablelua-mode-syntax-table692,27227
(define-derived-mode lua-mode prog-mode "Lua"lua-mode717,27964
(defun lua-electric-match (arg)lua-electric-match788,30988
(defun lua--fill-paragraph (&optional justify region)lua--fill-paragraph799,31265
(defun lua-prefix-key-update-bindings ()lua-prefix-key-update-bindings821,32136
(defun lua-set-prefix-key (new-key-str)lua-set-prefix-key834,32686
(defun lua-string-p (&optional pos)lua-string-p843,33091
(defun lua-comment-start-pos (parsing-state)lua-comment-start-pos847,33220
(defun lua-comment-or-string-p (&optional pos)lua-comment-or-string-p853,33437
(defun lua-comment-or-string-start-pos (&optional pos)lua-comment-or-string-start-pos858,33670
(defconst lua-ml-begin-regexplua-ml-begin-regexp868,33994
(defun lua-try-match-multiline-end (end)lua-try-match-multiline-end872,34083
(defun lua-try-match-multiline-begin (limit)lua-try-match-multiline-begin894,34981
(defun lua-match-multiline-literal-bounds (limit)lua-match-multiline-literal-bounds916,35919
(defun lua-remove-syntax-table-property (limit)lua-remove-syntax-table-property922,36203
(defvar lua-font-lock-syntactic-keywordslua-font-lock-syntactic-keywords934,36586
(defun lua--propertize-multiline-bounds (start end)lua--propertize-multiline-bounds941,36765
(defun lua-indent-line ()lua-indent-line956,37358
(defun lua-calculate-string-or-comment-indentation ()lua-calculate-string-or-comment-indentation979,38207
(defun lua-find-regexp (direction regexp &optional limit ignore-p)lua-find-regexp998,39082
(defconst lua-block-regexplua-block-regexp1016,39979
(defconst lua-block-token-alistlua-block-token-alist1025,40227
(defconst lua-indentation-modifier-regexplua-indentation-modifier-regexp1051,42284
(defun lua-get-block-token-info (token)lua-get-block-token-info1067,42776
(defun lua-get-token-match-re (token-info direction)lua-get-token-match-re1071,42932
(defun lua-get-token-type (token-info)lua-get-token-type1078,43157
(defun lua-backwards-to-block-begin-or-end ()lua-backwards-to-block-begin-or-end1082,43275
(defun lua-find-matching-token-word (token &optional direction)lua-find-matching-token-word1087,43468
(defun lua-goto-matching-block-token (&optional parse-start direction)lua-goto-matching-block-token1155,47254
(defun lua-goto-matching-block (&optional noreport)lua-goto-matching-block1168,47908
(defun lua-forward-line-skip-blanks (&optional back)lua-forward-line-skip-blanks1182,48491
(defconst lua-cont-eol-regexplua-cont-eol-regexp1202,49168
(defconst lua-cont-bol-regexplua-cont-bol-regexp1223,49920
(defun lua-last-token-continues-p ()lua-last-token-continues-p1243,50656
(defun lua-first-token-continues-p ()lua-first-token-continues-p1257,51211
(defconst lua-block-starter-regexplua-block-starter-regexp1267,51685
(defun lua-first-token-starts-block-p ()lua-first-token-starts-block-p1275,51907
(defun lua-is-continuing-statement-p (&optional parse-start)lua-is-continuing-statement-p1282,52192
(defun lua-make-indentation-info-pair (found-token found-pos)lua-make-indentation-info-pair1302,52989
(defun  lua-add-indentation-info-pair (pair info)lua-add-indentation-info-pair1377,56553
(defun lua-calculate-indentation-info-1 (indentation-info bound)lua-calculate-indentation-info-11404,57671
(defun lua-calculate-indentation-info (&optional parse-end)lua-calculate-indentation-info1421,58299
(defun lua-accumulate-indentation-info (info)lua-accumulate-indentation-info1463,60007
(defun lua-calculate-indentation-block-modifier (&optional parse-end)lua-calculate-indentation-block-modifier1478,60577
(defconst lua--left-shifter-regexplua--left-shifter-regexp1508,61668
(defun lua-point-is-after-left-shifter-p ()lua-point-is-after-left-shifter-p1559,63732
(defun lua-calculate-indentation-override (&optional parse-start)lua-calculate-indentation-override1574,64129
(defun lua-calculate-indentation (&optional parse-start)lua-calculate-indentation1604,65384
(defvar lua--beginning-of-defun-relua--beginning-of-defun-re1625,66311
(defun lua-beginning-of-proc (&optional arg)lua-beginning-of-proc1630,66500
(defun lua-end-of-proc (&optional arg)lua-end-of-proc1651,67107
(defvar lua-process-init-codelua-process-init-code1686,68069
(defun lua-make-lua-string (str)lua-make-lua-string1703,68490
(defalias 'run-lua #'lua-start-process)run-lua1720,68947
(defun lua-start-process (&optional name program startfile &rest switches)lua-start-process1723,69003
(defun lua-get-create-process ()lua-get-create-process1758,70546
(defun lua-kill-process ()lua-kill-process1765,70753
(defun lua-set-lua-region-start (&optional arg)lua-set-lua-region-start1771,70919
(defun lua-set-lua-region-end (&optional arg)lua-set-lua-region-end1776,71094
(defun lua-send-string (str)lua-send-string1781,71263
(defun lua-send-current-line ()lua-send-current-line1789,71538
(defun lua-send-defun (pos)lua-send-defun1795,71779
(defun lua-maybe-skip-shebang-line (start)lua-maybe-skip-shebang-line1817,72749
(defun lua-send-region (start end)lua-send-region1833,73236
(defun lua-prompt-line ()lua-prompt-line1849,73960
(defun lua-send-lua-region ()lua-send-lua-region1856,74121
(defalias 'lua-send-proc 'lua-send-defun)lua-send-proc1863,74349
(defun lua-send-buffer ()lua-send-buffer1865,74392
(defun lua-restart-with-whole-file ()lua-restart-with-whole-file1870,74521
(defun lua-show-process-buffer ()lua-show-process-buffer1876,74675
(defun lua-hide-process-buffer ()lua-hide-process-buffer1883,74895
(defun lua-funcname-at-point ()lua-funcname-at-point1889,75092
(defun lua-search-documentation ()lua-search-documentation1896,75343
(defun lua-toggle-electric-state (&optional arg)lua-toggle-electric-state1902,75576
(defun lua-forward-sexp (&optional count)lua-forward-sexp1915,76164
(define-key lua-mode-menu [restart-with-whole-file]lua-mode-menu1940,77038
(define-key lua-mode-menu [kill-process]lua-mode-menu1942,77153
(define-key lua-mode-menu [hide-process-buffer]lua-mode-menu1945,77235
(define-key lua-mode-menu [show-process-buffer]lua-mode-menu1947,77337
(define-key lua-mode-menu [end-of-proc]lua-mode-menu1950,77440
(define-key lua-mode-menu [beginning-of-proc]lua-mode-menu1952,77518
(define-key lua-mode-menu [send-lua-region]lua-mode-menu1955,77615
(define-key lua-mode-menu [set-lua-region-end]lua-mode-menu1957,77705
(define-key lua-mode-menu [set-lua-region-start]lua-mode-menu1959,77804
(define-key lua-mode-menu [send-current-line]lua-mode-menu1962,77910
(define-key lua-mode-menu [send-region]lua-mode-menu1964,78006
(define-key lua-mode-menu [send-proc]lua-mode-menu1966,78084
(define-key lua-mode-menu [send-buffer]lua-mode-menu1968,78156
(define-key lua-mode-menu [search-documentation]lua-mode-menu1970,78234

elpa/macrostep-20160925.505/macrostep-autoloads.el,0

elpa/macrostep-20160925.505/macrostep-c.el,777
(defvar macrostep-c-warning-buffer "*Macroexpansion Warnings*")macrostep-c-warning-buffer74,2671
(defun macrostep-c-mode-hook ()macrostep-c-mode-hook77,2751
(defun macrostep-c-mode-off (&rest ignore)macrostep-c-mode-off91,3221
(defun macrostep-c-sexp-bounds ()macrostep-c-sexp-bounds101,3520
(defun macrostep-c-sexp-bounds-1 ()macrostep-c-sexp-bounds-1118,4016
(defun macrostep-c-expandable-p (region)macrostep-c-expandable-p128,4374
(defun macrostep-c-sexp-at-point (start end)macrostep-c-sexp-at-point138,4787
(defun macrostep-c-expand-1 (region _ignore)macrostep-c-expand-1141,4853
(defun macrostep-c-expand-region (start end)macrostep-c-expand-region159,5553
(defun macrostep-c-print-function (expansion &rest _ignore)macrostep-c-print-function176,6245

elpa/macrostep-20160925.505/macrostep-pkg.el,88
(define-package "macrostep" "20160925.505" "interactive macro expander""macrostep"1,0

elpa/macrostep-20160925.505/macrostep.el,3836
(defvar macrostep-overlays nilmacrostep-overlays267,11231
(defvar macrostep-gensym-depth nilmacrostep-gensym-depth271,11375
(defvar macrostep-gensyms-this-level nilmacrostep-gensyms-this-level275,11539
(defvar macrostep-saved-undo-list nilmacrostep-saved-undo-list279,11721
(defvar macrostep-saved-read-only nilmacrostep-saved-read-only283,11883
(defvar macrostep-expansion-buffer nilmacrostep-expansion-buffer287,12045
(defvar macrostep-outer-environment nilmacrostep-outer-environment291,12206
(defgroup macrostep nilmacrostep300,12568
(defface macrostep-gensym-1macrostep-gensym-1307,12857
(defface macrostep-gensym-2macrostep-gensym-2314,13110
(defface macrostep-gensym-3macrostep-gensym-3321,13367
(defface macrostep-gensym-4macrostep-gensym-4328,13622
(defface macrostep-gensym-5macrostep-gensym-5335,13875
(defface macrostep-expansion-highlight-facemacrostep-expansion-highlight-face342,14131
(defface macrostep-macro-facemacrostep-macro-face348,14379
(defface macrostep-compiler-macro-facemacrostep-compiler-macro-face353,14497
(defcustom macrostep-expand-in-separate-buffer nilmacrostep-expand-in-separate-buffer358,14634
(defcustom macrostep-expand-compiler-macros tmacrostep-expand-compiler-macros363,14798
(defun macrostep-make-ring (&rest items)macrostep-make-ring369,15020
(defvar macrostep-gensym-facesmacrostep-gensym-faces375,15244
(defvar macrostep-sexp-bounds-functionmacrostep-sexp-bounds-function383,15566
(defvar macrostep-sexp-at-point-functionmacrostep-sexp-at-point-function395,16060
(defvar macrostep-environment-at-point-functionmacrostep-environment-at-point-function408,16638
(defvar macrostep-expand-1-functionmacrostep-expand-1-function422,17214
(defvar macrostep-print-functionmacrostep-print-function436,17779
(defvar macrostep-macro-form-p-functionmacrostep-macro-form-p-function451,18364
(defvar macrostep-keymapmacrostep-keymap470,19063
(define-minor-mode macrostep-modemacrostep-mode491,19782
(defun macrostep-command-hook ()macrostep-command-hook532,21609
(defun macrostep-expand (&optional toggle-separate-buffer)macrostep-expand539,21742
(defun macrostep-collapse ()macrostep-collapse618,25374
(defun macrostep-collapse-all ()macrostep-collapse-all633,25885
(defun macrostep-next-macro ()macrostep-next-macro646,26387
(defun macrostep-prev-macro ()macrostep-prev-macro658,26757
(defun macrostep-overlay-at-point ()macrostep-overlay-at-point678,27280
(defun macrostep-collapse-overlay (overlay &optional no-restore-p)macrostep-collapse-overlay684,27479
(defun macrostep-collapse-overlays-in (start end)macrostep-collapse-overlays-in713,28720
(defun macrostep-sexp-bounds ()macrostep-sexp-bounds726,29147
(defun macrostep-sexp-at-point (&rest ignore)macrostep-sexp-at-point752,30195
(defun macrostep-macro-form-p (form environment)macrostep-macro-form-p763,30667
(defun macrostep--macro-form-info (form environment &optional inhibit-autoload)macrostep--macro-form-info776,31129
(defun macrostep-expand-1 (form environment)macrostep-expand-1828,33390
(defun macrostep-environment-at-point ()macrostep-environment-at-point849,34116
(defun macrostep-environment-at-point-1 ()macrostep-environment-at-point-1882,35474
(defun macrostep-collect-macro-forms (form &optional environment)macrostep-collect-macro-forms922,37258
(defvar macrostep-collected-macro-form-alist nilmacrostep-collected-macro-form-alist968,39223
(defvar macrostep-collected-compiler-macro-forms nilmacrostep-collected-compiler-macro-forms972,39382
(defun macrostep-pp (sexp environment)macrostep-pp975,39517
(defmacro macrostep-propertize (form &rest plist)macrostep-propertize1000,40467
(defun macrostep-print-sexp (sexp)macrostep-print-sexp1012,40933
(defun macrostep-get-gensym-face (symbol)macrostep-get-gensym-face1104,44600

elpa/magit-2.4.1/git-rebase.el,2560
(defgroup git-rebase nilgit-rebase77,2660
(defcustom git-rebase-auto-advance tgit-rebase-auto-advance81,2734
(defcustom git-rebase-show-instructions tgit-rebase-show-instructions86,2867
(defcustom git-rebase-confirm-cancel tgit-rebase-confirm-cancel91,3014
(defgroup git-rebase-faces nilgit-rebase-faces98,3153
(defface git-rebase-hashgit-rebase-hash103,3258
(defface git-rebase-description nilgit-rebase-description109,3465
(defface git-rebase-killed-actiongit-rebase-killed-action113,3564
(defvar git-rebase-mode-mapgit-rebase-mode-map120,3747
(defvar git-rebase-command-descriptionsgit-rebase-command-descriptions166,5677
(defun git-rebase-pick ()git-rebase-pick179,6328
(defun git-rebase-reword ()git-rebase-reword184,6437
(defun git-rebase-edit ()git-rebase-edit189,6562
(defun git-rebase-squash ()git-rebase-squash194,6683
(defun git-rebase-fixup ()git-rebase-fixup199,6832
(defconst git-rebase-linegit-rebase-line204,6986
(defun git-rebase-set-action (action)git-rebase-set-action208,7124
(defun git-rebase-line-p (&optional pos)git-rebase-line-p218,7467
(defun git-rebase-region-bounds ()git-rebase-region-bounds224,7637
(defun git-rebase-move-line-down (n)git-rebase-move-line-down234,8042
(defun git-rebase-move-line-up (n)git-rebase-move-line-up267,9343
(defun git-rebase-highlight-region (start end window rol)git-rebase-highlight-region275,9632
(defun git-rebase-unhighlight-region (rol)git-rebase-unhighlight-region288,10242
(defun git-rebase-kill-line ()git-rebase-kill-line292,10417
(defun git-rebase-insert (rev)git-rebase-insert303,10732
(defun git-rebase-exec (arg)git-rebase-exec312,11064
(defun git-rebase-undo (&optional arg)git-rebase-undo341,12167
(defun git-rebase-show-commit ()git-rebase-show-commit348,12351
(defun git-rebase-backward-line (&optional n)git-rebase-backward-line358,12672
(define-derived-mode git-rebase-mode special-mode "Git Rebase"git-rebase-mode367,12898
(defun git-rebase-cancel-confirm (force)git-rebase-cancel-confirm388,13935
(defun git-rebase-autostash-save ()git-rebase-autostash-save391,14050
(defun git-rebase-autostash-apply ()git-rebase-autostash-apply395,14215
(defconst git-rebase-mode-font-lock-keywordsgit-rebase-mode-font-lock-keywords399,14341
(defun git-rebase-mode-show-keybindings ()git-rebase-mode-show-keybindings411,14800
(defun git-rebase-mode-disable-before-save-hook ()git-rebase-mode-disable-before-save-hook440,16217
(defconst git-rebase-filename-regexp "/git-rebase-todo\\'")git-rebase-filename-regexp446,16413

elpa/magit-2.4.1/magit-apply.el,2614
(defvar auto-revert-verbose)auto-revert-verbose43,1553
(defcustom magit-delete-by-moving-to-trash tmagit-delete-by-moving-to-trash49,1614
(defun magit-apply (&rest args)magit-apply58,1804
(defun magit-apply-diffs (sections &rest args)magit-apply-diffs74,2502
(defun magit-apply-diff (section &rest args)magit-apply-diff84,2950
(defun magit-apply-hunks (sections &rest args)magit-apply-hunks91,3313
(defun magit-apply-hunk (section &rest args)magit-apply-hunk103,3955
(defun magit-apply-region (section &rest args)magit-apply-region111,4426
(defun magit-apply-patch (section:s args patch)magit-apply-patch120,4930
(defun magit-apply--get-selection ()magit-apply--get-selection141,5858
(defun magit-apply--get-diffs (sections)magit-apply--get-diffs151,6293
(defun magit-stage ()magit-stage163,6658
(defun magit-stage-file (file)magit-stage-file180,7504
(defun magit-stage-modified (&optional all)magit-stage-modified199,8272
(defun magit-stage-1 (arg &optional files)magit-stage-1213,8910
(defun magit-stage-untracked ()magit-stage-untracked220,9220
(defun magit-unstage ()magit-unstage246,10172
(defun magit-unstage-file (file)magit-unstage-file265,11216
(defun magit-unstage-1 (files)magit-unstage-1282,11917
(defun magit-unstage-all ()magit-unstage-all290,12202
(defun magit-discard ()magit-discard302,12613
(defun magit-discard-region (section)magit-discard-region316,13225
(defun magit-discard-hunk (section)magit-discard-hunk320,13370
(defun magit-discard-apply (section apply)magit-discard-apply324,13509
(defun magit-discard-hunks (sections)magit-discard-hunks337,14088
(defun magit-discard-apply-n (sections apply)magit-discard-apply-n344,14362
(defun magit-discard-file (section)magit-discard-file358,15005
(defun magit-discard-files (sections)magit-discard-files361,15082
(defun magit-discard-files--resurrect (files)magit-discard-files--resurrect403,17162
(defun magit-discard-files--delete (files status)magit-discard-files--delete409,17388
(defun magit-discard-files--rename (files status)magit-discard-files--rename432,18583
(defun magit-discard-files--discard (sections new-files)magit-discard-files--discard445,19127
(defun magit-reverse (&rest args)magit-reverse476,20498
(defun magit-reverse-region (section args)magit-reverse-region490,21217
(defun magit-reverse-hunk (section args)magit-reverse-hunk494,21370
(defun magit-reverse-hunks (sections args)magit-reverse-hunks498,21517
(defun magit-reverse-file (section args)magit-reverse-file505,21790
(defun magit-reverse-files (sections args)magit-reverse-files508,21877

elpa/magit-2.4.1/magit-autoloads.el,594
(defconst git-rebase-filename-regexp "/git-rebase-todo\\'")git-rebase-filename-regexp20,622
(defvar global-magit-file-mode nil "\global-magit-file-mode441,13793
(defvar magit-revert-buffers t)magit-revert-buffers540,17012
(defvar magit-auto-revert-mode (and (not global-auto-revert-mode) magit-revert-buffers) "\magit-auto-revert-mode542,17045
(defvar magit-wip-after-save-mode nil "\magit-wip-after-save-mode1462,45776
(defvar magit-wip-after-apply-mode nil "\magit-wip-after-apply-mode1483,46686
(defvar magit-wip-before-change-mode nil "\magit-wip-before-change-mode1501,47368

elpa/magit-2.4.1/magit-autorevert.el,657
(defcustom magit-auto-revert-tracked-only tmagit-auto-revert-tracked-only33,1098
(defcustom magit-auto-revert-immediately (not file-notify--library)magit-auto-revert-immediately45,1517
(defun magit-turn-on-auto-revert-mode-if-desired (&optional file)magit-turn-on-auto-revert-mode-if-desired64,2289
(defvar magit-revert-buffers t)magit-revert-buffers77,2775
(define-globalized-minor-mode magit-auto-revert-mode auto-revert-modemagit-auto-revert-mode82,2932
(defun magit-auto-revert-mode--maybe-turn-off-after-init ()magit-auto-revert-mode--maybe-turn-off-after-init102,3895
(defun magit-auto-revert-buffers ()magit-auto-revert-buffers137,5359

elpa/magit-2.4.1/magit-bisect.el,1031
(defface magit-bisect-goodmagit-bisect-good32,1087
(defface magit-bisect-skipmagit-bisect-skip37,1212
(defface magit-bisect-badmagit-bisect-bad42,1339
(defun magit-bisect-start (bad good)magit-bisect-start62,2148
(defun magit-bisect-start-read-args ()magit-bisect-start-read-args75,2686
(defun magit-bisect-reset ()magit-bisect-reset80,2887
(defun magit-bisect-good ()magit-bisect-good88,3171
(defun magit-bisect-bad ()magit-bisect-bad96,3401
(defun magit-bisect-skip ()magit-bisect-skip104,3624
(defun magit-bisect-run (cmdline &optional bad good)magit-bisect-run112,3880
(defun magit-git-bisect (subcommand &optional args no-assert)magit-git-bisect125,4443
(defun magit-bisect-in-progress-p ()magit-bisect-in-progress-p135,4825
(defun magit-insert-bisect-output ()magit-insert-bisect-output138,4911
(defun magit-insert-bisect-rest ()magit-insert-bisect-rest158,5902
(defun magit-insert-bisect-log ()magit-insert-bisect-log167,6287
(defun magit-wash-bisect-log (_args)magit-wash-bisect-log175,6586

elpa/magit-2.4.1/magit-blame.el,3066
(defgroup magit-blame nilmagit-blame35,1148
(defcustom magit-blame-heading-format "%-20a %C %s"magit-blame-heading-format39,1232
(defcustom magit-blame-time-format "%F %H:%M"magit-blame-time-format56,1605
(defcustom magit-blame-show-headings tmagit-blame-show-headings61,1738
(defcustom magit-blame-disable-modes '(fci-mode yascroll-bar-mode)magit-blame-disable-modes68,1956
(defcustom magit-blame-mode-lighter " Blame"magit-blame-mode-lighter77,2316
(defcustom magit-blame-goto-chunk-hook '(magit-blame-maybe-update-revision-buffer)magit-blame-goto-chunk-hook84,2649
(defface magit-blame-headingmagit-blame-heading91,2938
(defface magit-blame-summarymagit-blame-summary101,3204
(defface magit-blame-hashmagit-blame-hash106,3347
(defface magit-blame-namemagit-blame-name111,3484
(defface magit-blame-datemagit-blame-date116,3636
(defvar magit-blame-mode-mapmagit-blame-mode-map123,3777
(defun magit-blame-put-keymap-before-view-mode ()magit-blame-put-keymap-before-view-mode139,4474
(defvar-local magit-blame-buffer-read-only nil)magit-blame-buffer-read-only149,4943
(defvar-local magit-blame-cache nil)magit-blame-cache150,4991
(defvar-local magit-blame-process nil)magit-blame-process151,5028
(defvar-local magit-blame-recursive-p nil)magit-blame-recursive-p152,5067
(defvar-local magit-blame-separator nil)magit-blame-separator153,5110
(define-minor-mode magit-blame-modemagit-blame-mode155,5152
(defun auto-revert-handler--unless-magit-blame-mode ()auto-revert-handler--unless-magit-blame-mode185,6387
(defun magit-blame (revision file &optional args line)magit-blame206,7184
(defun magit-blame-process-sentinel (process event)magit-blame-process-sentinel283,10637
(defvar magit-blame-log nilmagit-blame-log294,11064
(defun magit-blame-process-filter (process string)magit-blame-process-filter298,11190
(defun magit-blame-assert-buffer (process)magit-blame-assert-buffer349,13790
(defun magit-blame-make-overlay (chunk)magit-blame-make-overlay354,13979
(defun magit-blame-format-separator ()magit-blame-format-separator375,14874
(defun magit-blame-format-heading (chunk)magit-blame-format-heading381,15112
(defun magit-blame-format-time-string (format time tz)magit-blame-format-time-string413,16761
(defun magit-blame-quit ()magit-blame-quit417,16917
(defun magit-blame-next-chunk ()magit-blame-next-chunk426,17149
(defun magit-blame-previous-chunk ()magit-blame-previous-chunk434,17414
(defun magit-blame-next-chunk-same-commit (&optional previous)magit-blame-next-chunk-same-commit442,17691
(defun magit-blame-previous-chunk-same-commit ()magit-blame-previous-chunk-same-commit463,18645
(defun magit-blame-toggle-headings ()magit-blame-toggle-headings468,18842
(defun magit-blame-copy-hash ()magit-blame-copy-hash485,19518
(defun magit-blame-chunk-get (key &optional pos)magit-blame-chunk-get490,19688
(defun magit-blame-overlay-at (&optional pos)magit-blame-overlay-at494,19833
(defun magit-blame-maybe-update-revision-buffer ()magit-blame-maybe-update-revision-buffer498,19965

elpa/magit-2.4.1/magit-commit.el,2134
(defcustom magit-commit-arguments nilmagit-commit-arguments46,1580
(defcustom magit-commit-ask-to-stage 'verbosemagit-commit-ask-to-stage51,1728
(defcustom magit-commit-show-diff tmagit-commit-show-diff59,2059
(defcustom magit-commit-extend-override-date tmagit-commit-extend-override-date65,2247
(defcustom magit-commit-reword-override-date tmagit-commit-reword-override-date71,2444
(defcustom magit-commit-squash-confirm tmagit-commit-squash-confirm77,2641
(defun magit-commit-popup (&optional arg)magit-commit-popup90,3152
(defvar magit-commit-popupmagit-commit-popup97,3379
(defun magit-commit-arguments nilmagit-commit-arguments123,4765
(defun magit-commit-message-buffer ()magit-commit-message-buffer128,4911
(defun magit-commit (&optional args)magit-commit137,5289
(defun magit-commit-amend (&optional args)magit-commit-amend148,5717
(defun magit-commit-extend (&optional args override-date)magit-commit-extend155,5934
(defun magit-commit-reword (&optional args override-date)magit-commit-reword173,6775
(defun magit-commit-fixup (&optional commit args)magit-commit-fixup193,7616
(defun magit-commit-squash (&optional commit args)magit-commit-squash204,8048
(defun magit-commit-augment (&optional commit args)magit-commit-augment215,8519
(defun magit-commit-instant-fixup (&optional commit args)magit-commit-instant-fixup226,8989
(defun magit-commit-instant-squash (&optional commit args)magit-commit-instant-squash233,9279
(defun magit-commit-squash-internalmagit-commit-squash-internal239,9557
(defun magit-commit-assert (args &optional strict)magit-commit-assert265,10689
(defun magit-commit-diff ()magit-commit-diff298,12009
(defvar magit-gpg-secret-key-hist nil)magit-gpg-secret-key-hist315,12713
(defun magit-read-gpg-secret-key (prompt &optional _initial-input)magit-read-gpg-secret-key317,12753
(defvar magit-commit-add-log-insert-function 'magit-commit-add-log-insertmagit-commit-add-log-insert-function329,13451
(defun magit-commit-add-log ()magit-commit-add-log332,13588
(defun magit-commit-add-log-insert (buffer file defun)magit-commit-add-log-insert357,14523

elpa/magit-2.4.1/magit-core.el,234
(defgroup magit nilmagit41,1430
(defgroup magit-commands nilmagit-commands45,1500
(defgroup magit-modes nilmagit-modes49,1601
(defgroup magit-extensions nilmagit-extensions53,1682
(defgroup magit-faces nilmagit-faces57,1756

elpa/magit-2.4.1/magit-diff.el,10613
(defvar gravatar-size)gravatar-size45,1580
(defvar magit-blame-mode)magit-blame-mode49,1765
(defvar git-rebase-line)git-rebase-line50,1791
(defgroup magit-diff nilmagit-diff58,1890
(defcustom magit-diff-mode-hook nilmagit-diff-mode-hook65,2083
(defcustom magit-diff-sections-hookmagit-diff-sections-hook70,2201
(defcustom magit-diff-expansion-threshold 1.0magit-diff-expansion-threshold78,2434
(defcustom magit-diff-highlight-hunk-body tmagit-diff-highlight-hunk-body96,3133
(defcustom magit-diff-show-lines-boundary tmagit-diff-show-lines-boundary104,3422
(defcustom magit-diff-refine-hunk nilmagit-diff-refine-hunk116,3877
(defcustom magit-diff-paint-whitespace tmagit-diff-paint-whitespace130,4385
(defcustom magit-diff-highlight-trailing tmagit-diff-highlight-trailing141,4862
(defcustom magit-diff-highlight-indentation nilmagit-diff-highlight-indentation148,5087
(defgroup magit-revision nilmagit-revision169,6011
(defcustom magit-revision-mode-hook nilmagit-revision-mode-hook173,6104
(defcustom magit-revision-sections-hookmagit-revision-sections-hook178,6234
(defcustom magit-revision-headers-format "\magit-revision-headers-format190,6614
(defcustom magit-revision-insert-related-refs tmagit-revision-insert-related-refs207,7185
(defcustom magit-revision-show-gravatars nilmagit-revision-show-gravatars213,7369
(defcustom magit-revision-use-gravatar-kludge nilmagit-revision-use-gravatar-kludge234,8349
(defface magit-diff-file-headingmagit-diff-file-heading252,8993
(defface magit-diff-file-heading-highlightmagit-diff-file-heading-highlight257,9105
(defface magit-diff-file-heading-selectionmagit-diff-file-heading-selection262,9281
(defface magit-diff-hunk-headingmagit-diff-hunk-heading272,9627
(defface magit-diff-hunk-heading-highlightmagit-diff-hunk-heading-highlight282,9903
(defface magit-diff-hunk-heading-selectionmagit-diff-hunk-heading-selection292,10197
(defface magit-diff-lines-headingmagit-diff-lines-heading302,10543
(defface magit-diff-lines-boundarymagit-diff-lines-boundary313,10918
(defface magit-diff-conflict-headingmagit-diff-conflict-heading318,11072
(defface magit-diff-addedmagit-diff-added323,11206
(defface magit-diff-removedmagit-diff-removed333,11497
(defface magit-diff-ourmagit-diff-our343,11791
(defface magit-diff-basemagit-diff-base348,11933
(defface magit-diff-theirmagit-diff-their358,12234
(defface magit-diff-contextmagit-diff-context363,12378
(defface magit-diff-added-highlightmagit-diff-added-highlight369,12604
(defface magit-diff-removed-highlightmagit-diff-removed-highlight379,12905
(defface magit-diff-our-highlightmagit-diff-our-highlight389,13210
(defface magit-diff-base-highlightmagit-diff-base-highlight394,13372
(defface magit-diff-their-highlightmagit-diff-their-highlight404,13683
(defface magit-diff-context-highlightmagit-diff-context-highlight409,13847
(defface magit-diff-whitespace-warningmagit-diff-whitespace-warning419,14148
(defface magit-diffstat-addedmagit-diffstat-added424,14306
(defface magit-diffstat-removedmagit-diffstat-removed430,14523
(defconst magit-diff-popup-commonmagit-diff-popup-common438,14757
(defvar magit-diff-popupmagit-diff-popup448,15145
(defvar magit-diff-refresh-popupmagit-diff-refresh-popup466,16052
(defvar magit-diff-mode-refresh-popupmagit-diff-mode-refresh-popup478,16740
(defvar magit-revision-mode-refresh-popupmagit-revision-mode-refresh-popup493,17631
(defcustom magit-diff-arguments '("--stat" "--no-ext-diff")magit-diff-arguments511,18641
(defcustom magit-diff-section-arguments '("--no-ext-diff")magit-diff-section-arguments517,18874
(defvar magit-diff-section-file-args nil)magit-diff-section-file-args523,19099
(defun magit-diff-arguments (&optional refresh)magit-diff-arguments527,19252
(defun magit-diff-popup (arg)magit-diff-popup543,19966
(defun magit-diff-refresh-popup (arg)magit-diff-refresh-popup559,20778
(defun magit-diff-select-algorithm (&rest _ignore)magit-diff-select-algorithm575,21583
(defun magit-diff-dwim (&optional args files)magit-diff-dwim583,21817
(defun magit-diff--dwim ()magit-diff--dwim597,22327
(defun magit-diff-read-range-or-commit (prompt &optional secondary-default mbase)magit-diff-read-range-or-commit641,24015
(defun magit-diff-setup (rev-or-range const args files)magit-diff-setup673,25507
(defun magit-diff (rev-or-range &optional args files)magit-diff678,25668
(defun magit-diff-working-tree (&optional rev args files)magit-diff-working-tree697,26543
(defun magit-diff-staged (&optional rev args files)magit-diff-staged708,27001
(defun magit-diff-unstaged (&optional args files)magit-diff-unstaged719,27426
(defun magit-diff-while-committing (&optional args files)magit-diff-while-committing725,27629
(define-key git-commit-mode-mapgit-commit-mode-map748,28770
(defun magit-diff-while-amending (&optional args files)magit-diff-while-amending751,28851
(defun magit-diff-paths (a b)magit-diff-paths755,28982
(defun magit-show-commit (rev &optional args files module)magit-show-commit764,29354
(defun magit-diff-refresh (args files)magit-diff-refresh796,30844
(defun magit-diff-set-default-arguments (args files)magit-diff-set-default-arguments806,31232
(defun magit-diff-save-default-arguments (args files)magit-diff-save-default-arguments818,31774
(defun magit-diff-switch-range-type ()magit-diff-switch-range-type830,32328
(defun magit-diff-flip-revs ()magit-diff-flip-revs848,32988
(defun magit-diff-less-context (&optional count)magit-diff-less-context864,33538
(defun magit-diff-more-context (&optional count)magit-diff-more-context869,33738
(defun magit-diff-default-context ()magit-diff-default-context874,33930
(defun magit-diff-set-context (fn)magit-diff-set-context879,34077
(defun magit-diff-context-p ()magit-diff-context-p893,34713
(defun magit-diff-toggle-refine-hunk (&optional style)magit-diff-toggle-refine-hunk899,34893
(defun magit-diff-visit-file (file &optional other-window force-worktree)magit-diff-visit-file920,35757
(defvar magit-display-file-buffer-functionmagit-display-file-buffer-function977,38401
(defun magit-display-file-buffer (buffer)magit-display-file-buffer987,38823
(defun magit-display-file-buffer-traditional (buffer)magit-display-file-buffer-traditional990,38921
(defun magit-diff-visit-file-worktree (file &optional other-window)magit-diff-visit-file-worktree995,39094
(defun magit-diff-hunk-line (section)magit-diff-hunk-line1015,39950
(defun magit-diff-hunk-column (section)magit-diff-hunk-column1038,40794
(defun magit-diff-visit-directory (directory &optional other-window)magit-diff-visit-directory1045,41058
(defun magit-diff-show-or-scroll-up ()magit-diff-show-or-scroll-up1055,41444
(defun magit-diff-show-or-scroll-down ()magit-diff-show-or-scroll-down1066,41894
(defun magit-diff-show-or-scroll (fn)magit-diff-show-or-scroll1077,42350
(defvar magit-diff-mode-mapmagit-diff-mode-map1126,44220
(define-derived-mode magit-diff-mode magit-mode "Magit Diff"magit-diff-mode1138,44667
(defun magit-diff-refresh-buffer (rev-or-range const _args files)magit-diff-refresh-buffer1162,45454
(defun magit-insert-diff (rev-or-range)magit-insert-diff1188,46652
(defvar magit-file-section-mapmagit-file-section-map1197,47001
(defvar magit-hunk-section-mapmagit-hunk-section-map1213,47706
(defconst magit-diff-headline-remagit-diff-headline-re1227,48320
(defconst magit-diff-statline-remagit-diff-statline-re1231,48459
(defconst magit-diff-submodule-remagit-diff-submodule-re1239,48707
(defun magit-diff-wash-diffs (args &optional limit)magit-diff-wash-diffs1246,48988
(defun magit-jump-to-diffstat-or-diff ()magit-jump-to-diffstat-or-diff1254,49295
(defun magit-diff-wash-diffstat ()magit-diff-wash-diffstat1269,49955
(defun magit-diff-wash-diff (args)magit-diff-wash-diff1303,51551
(defun magit-diff-insert-file-section (file orig status modes header)magit-diff-insert-file-section1383,55262
(defun magit-diff-wash-submodule ()magit-diff-wash-submodule1401,56040
(defun magit-diff-wash-hunk ()magit-diff-wash-hunk1439,57728
(defun magit-diff-expansion-threshold (section)magit-diff-expansion-threshold1453,58334
(define-derived-mode magit-revision-mode magit-diff-mode "Magit Rev"magit-revision-mode1462,58653
(defun magit-revision-refresh-buffer (rev __const _args _files)magit-revision-refresh-buffer1486,59462
(defun magit-insert-revision-diff (rev)magit-insert-revision-diff1493,59777
(defun magit-insert-revision-tag (rev)magit-insert-revision-tag1506,60410
(defun magit-insert-revision-message (rev)magit-insert-revision-message1528,61321
(defun magit-insert-revision-notes (rev)magit-insert-revision-notes1542,61830
(defun magit-insert-revision-headers (rev)magit-insert-revision-headers1556,62294
(defun magit-insert-revision-gravatars (rev beg)magit-insert-revision-gravatars1621,65345
(defun magit-insert-revision-gravatar (beg email regexp)magit-insert-revision-gravatar1630,65793
(defvar magit-unstaged-section-mapmagit-unstaged-section-map1658,67178
(defun magit-insert-unstaged-changes ()magit-insert-unstaged-changes1669,67591
(defvar magit-staged-section-mapmagit-staged-section-map1677,67902
(defun magit-insert-staged-changes ()magit-insert-staged-changes1689,68378
(defun magit-diff-type (&optional section)magit-diff-type1699,68707
(defun magit-diff-unhighlight (section selection)magit-diff-unhighlight1800,73392
(defun magit-diff-highlight (section selection)magit-diff-highlight1806,73606
(defun magit-diff-highlight-recursive (section &optional selection)magit-diff-highlight-recursive1829,74576
(defun magit-diff-highlight-list (section &optional selection)magit-diff-highlight-list1837,74965
(defun magit-diff-highlight-file (section &optional selection)magit-diff-highlight-file1850,75596
(defun magit-diff-highlight-heading (section &optional selection)magit-diff-highlight-heading1856,75863
(defun magit-diff-paint-whitespace (merging)magit-diff-paint-whitespace1924,78998
(defun magit-diff-update-hunk-refinement (&optional section)magit-diff-update-hunk-refinement1952,80457
(defvar magit-diff-unmarked-lines-keep-foreground t)magit-diff-unmarked-lines-keep-foreground1980,81659
(defun magit-diff-update-hunk-region (section)magit-diff-update-hunk-region1982,81713
(defun magit-diff-file-header (section)magit-diff-file-header2020,83697
(defun magit-diff-hunk-region-header (section)magit-diff-hunk-region-header2026,83927
(defun magit-diff-hunk-region-patch (section &optional args)magit-diff-hunk-region-patch2031,84106

elpa/magit-2.4.1/magit-ediff.el,1352
(defvar smerge-ediff-buf)smerge-ediff-buf35,1113
(defvar smerge-ediff-windows)smerge-ediff-windows36,1139
(defgroup magit-ediff nilmagit-ediff38,1170
(defcustom magit-ediff-quit-hookmagit-ediff-quit-hook45,1472
(defcustom magit-ediff-dwim-show-on-hunks nilmagit-ediff-dwim-show-on-hunks59,2053
(defvar magit-ediff-previous-winconf nil)magit-ediff-previous-winconf69,2450
(defun magit-ediff-resolve (file)magit-ediff-resolve86,3149
(defun magit-ediff-stage (file)magit-ediff-stage123,4756
(defun magit-ediff-compare (revA revB fileA fileB)magit-ediff-compare167,6816
(defun magit-ediff-compare--read-revisions (&optional arg mbase)magit-ediff-compare--read-revisions208,8574
(defun magit-ediff-compare--read-files (revA revB &optional fileB)magit-ediff-compare--read-files220,9158
(defun magit-ediff-dwim ()magit-ediff-dwim239,10058
(defun magit-ediff-show-staged (file)magit-ediff-show-staged304,12989
(defun magit-ediff-show-unstaged (file)magit-ediff-show-unstaged332,14105
(defun magit-ediff-show-working-tree (file)magit-ediff-show-working-tree361,15255
(defun magit-ediff-show-commit (commit)magit-ediff-show-commit386,16304
(defun magit-ediff-cleanup-auxiliary-buffers ()magit-ediff-cleanup-auxiliary-buffers395,16651
(defun magit-ediff-restore-previous-winconf ()magit-ediff-restore-previous-winconf423,17935

elpa/magit-2.4.1/magit-extras.el,971
(defgroup magit-extras nilmagit-extras29,974
(defcustom magit-gitk-executablemagit-gitk-executable35,1090
(defun magit-run-git-gui ()magit-run-git-gui47,1488
(defun magit-run-git-gui-blame (commit filename &optional linenum)magit-run-git-gui-blame54,1679
(defun magit-run-gitk ()magit-run-gitk79,2819
(defun magit-run-gitk-branches ()magit-run-gitk-branches85,2964
(defun magit-run-gitk-all ()magit-run-gitk-all91,3146
(defun magit-clean (&optional arg)magit-clean99,3324
(defun magit-gitignore (file-or-pattern &optional local)magit-gitignore118,3974
(defun magit-gitignore-locally (file-or-pattern)magit-gitignore-locally142,4875
(defun magit-gitignore-read-pattern (local)magit-gitignore-read-pattern147,5072
(defun magit-add-change-log-entry (&optional whoami file-name other-window)magit-add-change-log-entry170,5929
(defun magit-add-change-log-entry-other-window (&optional whoami file-name)magit-add-change-log-entry-other-window188,6639

elpa/magit-2.4.1/magit-git.el,12054
(defvar magit-process-error-message-re)magit-process-error-message-re39,1320
(defvar magit-refresh-args) ; from `magit-mode' for `magit-current-file'magit-refresh-args40,1360
(defvar magit-branch-prefer-remote-upstream)magit-branch-prefer-remote-upstream41,1433
(defvar magit-tramp-process-environment nil)magit-tramp-process-environment43,1479
(defgroup magit-process nilmagit-process50,1621
(defvar magit-git-environment nilmagit-git-environment54,1719
(defcustom magit-git-executablemagit-git-executable57,1813
(defcustom magit-git-global-argumentsmagit-git-global-arguments96,3788
(define-obsolete-variable-alias 'magit-git-standard-optionsmagit-git-standard-options115,4571
(defcustom magit-git-debug nilmagit-git-debug118,4671
(defcustom magit-ref-namespacesmagit-ref-namespaces139,5486
(defun magit-process-git-arguments (args)magit-process-git-arguments173,7039
(defun magit-git-exit-code (&rest args)magit-git-exit-code184,7426
(defun magit-git-success (&rest args)magit-git-success189,7628
(defun magit-git-failure (&rest args)magit-git-failure193,7765
(defun magit-git-str (&rest args)magit-git-str197,7902
(defun magit-git-true (&rest args)magit-git-true209,8414
(defun magit-git-false (&rest args)magit-git-false215,8650
(defun magit-git-insert (&rest args)magit-git-insert221,8890
(defun magit-git-string (&rest args)magit-git-string254,10494
(defun magit-git-lines (&rest args)magit-git-lines264,10869
(defun magit-git-items (&rest args)magit-git-items274,11244
(defun magit-git-wash (washer &rest args)magit-git-wash284,11625
(defun magit--safe-default-directory (&optional file)magit--safe-default-directory308,12401
(defmacro magit--with-safe-default-directory (file &rest body)magit--with-safe-default-directory320,12855
(defun magit-git-dir (&optional path)magit-git-dir325,13048
(defun magit-toplevel (&optional directory)magit-toplevel336,13559
(defmacro magit-with-toplevel (&rest body)magit-with-toplevel407,17301
(defun magit-inside-gitdir-p ()magit-inside-gitdir-p416,17634
(defun magit-inside-worktree-p ()magit-inside-worktree-p420,17781
(defun magit-bare-repo-p ()magit-bare-repo-p424,17939
(defun magit-git-repo-p (directory &optional non-bare)magit-git-repo-p428,18062
(defvar-local magit-buffer-revision  nil)magit-buffer-revision439,18600
(defvar-local magit-buffer-refname   nil)magit-buffer-refname440,18642
(defvar-local magit-buffer-file-name nil)magit-buffer-file-name441,18684
(defun magit-file-relative-name (&optional file tracked)magit-file-relative-name446,18874
(defun magit-file-tracked-p (file)magit-file-tracked-p466,19729
(defun magit-list-files (&rest args)magit-list-files469,19822
(defun magit-tracked-files ()magit-tracked-files472,19924
(defun magit-untracked-files (&optional all files)magit-untracked-files475,19988
(defun magit-modified-files (&optional nomodules)magit-modified-files478,20117
(defun magit-staged-files (&optional nomodules files)magit-staged-files482,20278
(defun magit-unstaged-files (&optional nomodules files)magit-unstaged-files487,20500
(defun magit-staged-binary-files ()magit-staged-binary-files492,20713
(defun magit-unmerged-files ()magit-unmerged-files498,20966
(defun magit-revision-files (rev)magit-revision-files501,21069
(defun magit-changed-files (rev-or-range &optional other-rev)magit-changed-files505,21189
(defun magit-renamed-files (revA revB)magit-renamed-files513,21606
(defun magit-file-status (&rest args)magit-file-status519,21831
(defcustom magit-cygwin-mount-pointsmagit-cygwin-mount-points538,22534
(defun magit-expand-git-file-name (filename)magit-expand-git-file-name553,23279
(defun magit-convert-git-filename (filename)magit-convert-git-filename562,23636
(defun magit-decode-git-path (path)magit-decode-git-path569,23904
(defun magit-file-at-point ()magit-file-at-point574,24021
(defun magit-current-file ()magit-current-file579,24155
(defun magit-no-commit-p ()magit-no-commit-p587,24347
(defun magit-anything-staged-p (&optional ignore-submodules &rest files)magit-anything-staged-p591,24477
(defun magit-anything-unstaged-p (&optional ignore-submodules &rest files)magit-anything-unstaged-p599,24826
(defun magit-anything-modified-p (&optional ignore-submodules &rest files)magit-anything-modified-p607,25168
(defun magit-anything-unmerged-p (&rest files)magit-anything-unmerged-p614,25513
(defun magit-rev-parse (&rest args)magit-rev-parse622,25779
(defun magit-rev-parse-safe (&rest args)magit-rev-parse-safe627,25963
(defun magit-rev-parse-p (&rest args)magit-rev-parse-p633,26203
(defun magit-rev-verify (rev)magit-rev-verify639,26447
(defun magit-rev-verify-commit (rev)magit-rev-verify-commit642,26519
(defun magit-rev-equal (a b)magit-rev-equal646,26665
(defun magit-rev-eq (a b)magit-rev-eq649,26739
(defun magit-rev-ancestor-p (a b)magit-rev-ancestor-p653,26828
(defun magit-rev-head-p (rev)magit-rev-head-p657,26978
(defun magit-rev-name (rev &optional pattern)magit-rev-name664,27183
(defun magit-rev-branch (rev)magit-rev-branch669,27379
(defun magit-get-shortname (rev)magit-get-shortname673,27502
(defun magit-name-branch (rev &optional lax)magit-name-branch684,27999
(defun magit-name-local-branch (rev &optional lax)magit-name-local-branch690,28225
(defun magit-name-remote-branch (rev &optional lax)magit-name-remote-branch695,28464
(defun magit-name-tag (rev &optional lax)magit-name-tag701,28729
(defun magit-ref-fullname (name)magit-ref-fullname707,28981
(defun magit-ref-exists-p (ref)magit-ref-exists-p710,29064
(defun magit-headish ()magit-headish713,29146
(defun magit-branch-at-point ()magit-branch-at-point719,29317
(defun magit-local-branch-at-point ()magit-local-branch-at-point724,29470
(defun magit-remote-branch-at-point ()magit-remote-branch-at-point731,29744
(defun magit-commit-at-point ()magit-commit-at-point738,30021
(defun magit-branch-or-commit-at-point ()magit-branch-or-commit-at-point743,30176
(defun magit-tag-at-point ()magit-tag-at-point751,30485
(defun magit-stash-at-point ()magit-stash-at-point756,30632
(defun magit-remote-at-point ()magit-remote-at-point759,30694
(defun magit-get-current-branch ()magit-get-current-branch764,30834
(defun magit-get-previous-branch ()magit-get-previous-branch769,31034
(defun magit-get-indirect-upstream-branch (branch &optional force)magit-get-indirect-upstream-branch802,32444
(defun magit-get-@{push}-branch (&optional branch)magit-get-@{push}-branch832,33676
(defun magit-get-remote (&optional branch)magit-get-remote838,33926
(defun magit-split-branch-name (branch)magit-split-branch-name844,34140
(defun magit-get-current-tag (&optional rev with-distance)magit-get-current-tag853,34557
(defun magit-get-next-tag (&optional rev with-distance)magit-get-next-tag872,35399
(defvar magit-list-refs-namespacesmagit-list-refs-namespaces889,36147
(defun magit-list-refs (&rest args)magit-list-refs892,36241
(defun magit-list-branches ()magit-list-branches896,36392
(defun magit-list-local-branches ()magit-list-local-branches899,36472
(defun magit-list-remote-branches (&optional remote)magit-list-remote-branches902,36543
(defun magit-list-containing-branches (&optional commit)magit-list-containing-branches905,36650
(defun magit-list-merged-branches (&optional commit)magit-list-merged-branches910,36862
(defun magit-list-unmerged-branches (&optional commit)magit-list-unmerged-branches915,37068
(defun magit-list-unmerged-to-upstream-branches ()magit-list-unmerged-to-upstream-branches920,37279
(defun magit-list-refnames (&rest args)magit-list-refnames925,37509
(defun magit-list-branch-names ()magit-list-branch-names929,37670
(defun magit-list-local-branch-names ()magit-list-local-branch-names932,37758
(defun magit-list-remote-branch-names (&optional remote relative)magit-list-remote-branch-names935,37837
(defun magit-format-refs (format &rest args)magit-format-refs943,38211
(defun magit-list-remotes ()magit-list-remotes951,38521
(defun magit-list-tags ()magit-list-tags954,38581
(defun magit-list-notes-refnames ()magit-list-notes-refnames957,38635
(defun magit-remote-list-tags (remote)magit-remote-list-tags960,38735
(defun magit-remote-list-branches (remote)magit-remote-list-branches965,38924
(defun magit-get-submodules ()magit-get-submodules970,39118
(defun magit-ref-p (rev)magit-ref-p975,39328
(defun magit-branch-p (rev)magit-branch-p979,39446
(defun magit-local-branch-p (rev)magit-local-branch-p983,39575
(defun magit-branch-set-face (branch)magit-branch-set-face987,39722
(defun magit-tag-p (rev)magit-tag-p992,39926
(defun magit-remote-p (string)magit-remote-p995,39992
(defun magit-rev-diff-count (a b)magit-rev-diff-count998,40070
(defun magit-abbrev-length ()magit-abbrev-length1007,40443
(defun magit-abbrev-arg (&optional arg)magit-abbrev-arg1010,40531
(defun magit-rev-abbrev (rev)magit-rev-abbrev1013,40634
(defun magit-commit-children (commit &optional args)magit-commit-children1016,40717
(defun magit-commit-parents (commit)magit-commit-parents1025,41089
(defun magit-assert-one-parent (commit command)magit-assert-one-parent1029,41225
(defun magit-patch-id (rev)magit-patch-id1033,41381
(defun magit-reflog-enable (ref &optional stashish)magit-reflog-enable1041,41686
(defun magit-rev-format (format &optional rev args)magit-rev-format1052,42155
(defun magit-rev-insert-format (format &optional rev args)magit-rev-insert-format1059,42450
(defun magit-format-rev-summary (rev)magit-format-rev-summary1064,42671
(defun magit-format-ref-label (ref &optional head)magit-format-ref-label1070,42857
(defun magit-format-ref-labels (string)magit-format-ref-labels1078,43167
(defun magit-object-type (object)magit-object-type1100,44405
(defmacro magit-with-blob (commit file &rest body)magit-with-blob1103,44485
(defmacro magit-with-temp-index (tree arg &rest body)magit-with-temp-index1115,44904
(defun magit-commit-tree (message &optional tree &rest parents)magit-commit-tree1137,46039
(defun magit-commit-worktree (message &optional arg &rest other-parents)magit-commit-worktree1142,46280
(defun magit-update-files (files)magit-update-files1147,46516
(defconst magit-range-remagit-range-re1150,46619
(defvar magit-revision-history nil)magit-revision-history1157,46810
(defun magit-read-branch (prompt &optional default)magit-read-branch1159,46847
(defun magit-read-branch-or-commit (prompt &optional secondary-default)magit-read-branch-or-commit1165,47137
(defun magit-read-range-or-commit (prompt &optional secondary-default)magit-read-range-or-commit1173,47567
(defun magit-read-range (prompt &optional default)magit-read-range1183,47905
(defun magit-read-remote-branchmagit-read-remote-branch1200,48596
(defun magit-read-local-branch (prompt &optional secondary-default)magit-read-local-branch1215,49318
(defun magit-read-local-branch-or-commit (prompt)magit-read-local-branch-or-commit1222,49675
(defun magit-read-local-branch-or-ref (prompt &optional secondary-default)magit-read-local-branch-or-ref1231,50129
(defun magit-read-other-branchmagit-read-other-branch1239,50566
(defun magit-read-other-branch-or-commitmagit-read-other-branch-or-commit1252,51215
(defun magit-read-tag (prompt &optional require-match)magit-read-tag1280,52789
(defun magit-read-stash (prompt &optional use-at-point)magit-read-stash1285,53014
(defun magit-read-remote (prompt &optional default use-only)magit-read-remote1292,53348
(defun magit-get (&rest keys)magit-get1304,53775
(defun magit-get-all (&rest keys)magit-get-all1308,53925
(defun magit-get-boolean (&rest keys)magit-get-boolean1313,54132
(defun magit-set (val &rest keys)magit-set1317,54308
(define-obsolete-function-alias 'magit-get-tracked-refmagit-get-tracked-ref1325,54579
(define-obsolete-function-alias 'magit-get-tracked-branchmagit-get-tracked-branch1327,54675
(define-obsolete-function-alias 'magit-get-tracked-remotemagit-get-tracked-remote1329,54777

elpa/magit-2.4.1/magit-log.el,10226
(defvar magit-refs-indent-cherry-lines)magit-refs-indent-cherry-lines42,1569
(defvar magit-refs-show-commit-count)magit-refs-show-commit-count43,1609
(defgroup magit-log nilmagit-log51,1713
(defcustom magit-log-mode-hook nilmagit-log-mode-hook55,1801
(defcustom magit-log-arguments '("-n256" "--graph" "--decorate")magit-log-arguments60,1916
(defcustom magit-log-remove-graph-args '("--follow" "--grep" "-G" "-S" "-L")magit-log-remove-graph-args67,2165
(defcustom magit-log-revision-headers-format "\magit-log-revision-headers-format74,2465
(defcustom magit-log-auto-more nilmagit-log-auto-more83,2700
(defcustom magit-log-show-margin tmagit-log-show-margin90,2935
(defcustom magit-duration-specmagit-duration-spec102,3404
(defcustom magit-log-margin-spec '(28 7 magit-duration-spec)magit-log-margin-spec123,4398
(defcustom magit-log-show-refname-after-summary nilmagit-log-show-refname-after-summary149,5576
(defface magit-log-graphmagit-log-graph156,5810
(defface magit-log-authormagit-log-author162,6031
(defface magit-log-datemagit-log-date168,6257
(defcustom magit-log-select-arguments '("-n256" "--decorate")magit-log-select-arguments176,6494
(defcustom magit-log-select-show-usage 'bothmagit-log-select-show-usage182,6722
(defcustom magit-cherry-sections-hookmagit-cherry-sections-hook196,7323
(defcustom magit-reflog-arguments '("-n256")magit-reflog-arguments206,7574
(defcustom magit-reflog-show-margin tmagit-reflog-show-margin213,7806
(defface magit-reflog-commit '((t :foreground "green"))magit-reflog-commit223,8175
(defface magit-reflog-amend '((t :foreground "magenta"))magit-reflog-amend227,8296
(defface magit-reflog-merge '((t :foreground "green"))magit-reflog-merge231,8417
(defface magit-reflog-checkout '((t :foreground "blue"))magit-reflog-checkout235,8557
(defface magit-reflog-reset '((t :foreground "red"))magit-reflog-reset239,8681
(defface magit-reflog-rebase '((t :foreground "magenta"))magit-reflog-rebase243,8798
(defface magit-reflog-cherry-pick '((t :foreground "green"))magit-reflog-cherry-pick247,8921
(defface magit-reflog-remote '((t :foreground "cyan"))magit-reflog-remote251,9052
(defface magit-reflog-other '((t :foreground "cyan"))magit-reflog-other255,9180
(defcustom magit-log-section-commit-count 10magit-log-section-commit-count261,9317
(defcustom magit-log-section-arguments '("-n256" "--decorate")magit-log-section-arguments270,9672
(define-obsolete-variable-alias 'magit-log-section-argsmagit-log-section-args277,9936
(defvar magit-log-popupmagit-log-popup282,10047
(defvar magit-log-mode-refresh-popupmagit-log-mode-refresh-popup313,11727
(defvar magit-reflog-mode-refresh-popupmagit-reflog-mode-refresh-popup337,13011
(defvar magit-log-refresh-popupmagit-log-refresh-popup342,13170
(defun magit-read-file-trace (&rest ignored)magit-read-file-trace359,13931
(defun magit-log-arguments (&optional refresh)magit-log-arguments367,14288
(defun magit-log-popup (arg)magit-log-popup383,14970
(defun magit-log-refresh-popup (arg)magit-log-refresh-popup398,15615
(defun magit-log-refresh (args files)magit-log-refresh422,16717
(defun magit-log-set-default-arguments (args files)magit-log-set-default-arguments434,17164
(defun magit-log-save-default-arguments (args files)magit-log-save-default-arguments449,17829
(defun magit-log-refresh-assert ()magit-log-refresh-assert464,18508
(defvar magit-log-read-revs-mapmagit-log-read-revs-map470,18778
(defun magit-log-read-revs (&optional use-current)magit-log-read-revs476,18957
(defun magit-log-current (revs &optional args files)magit-log-current501,20148
(defun magit-log (revs &optional args files)magit-log510,20481
(defun magit-log-head (&optional args files)magit-log-head523,20991
(defun magit-log-branches (&optional args files)magit-log-branches529,21155
(defun magit-log-all-branches (&optional args files)magit-log-all-branches538,21456
(defun magit-log-all (&optional args files)magit-log-all547,21796
(defun magit-log-buffer-file (&optional follow beg end)magit-log-buffer-file556,22078
(defun magit-reflog-current ()magit-reflog-current583,23458
(defun magit-reflog (ref)magit-reflog589,23612
(defun magit-reflog-head ()magit-reflog-head595,23833
(defun magit-log-toggle-commit-limit ()magit-log-toggle-commit-limit600,23934
(defun magit-log-double-commit-limit ()magit-log-double-commit-limit607,24214
(defun magit-log-half-commit-limit ()magit-log-half-commit-limit612,24377
(defun magit-log-set-commit-limit (fn)magit-log-set-commit-limit617,24536
(defun magit-log-get-commit-limit ()magit-log-get-commit-limit629,24993
(defun magit-log-bury-buffer (&optional arg)magit-log-bury-buffer634,25191
(defvar magit-log-mode-mapmagit-log-mode-map652,25904
(define-derived-mode magit-log-mode magit-mode "Magit Log"magit-log-mode664,26369
(defvar magit-log-disable-graph-hack-argsmagit-log-disable-graph-hack-args683,27033
(defun magit-log-refresh-buffer (revs args files)magit-log-refresh-buffer687,27159
(defun magit-insert-log (revs &optional args files)magit-insert-log721,28821
(defvar magit-commit-section-mapmagit-commit-section-map741,29693
(defvar magit-module-commit-section-mapmagit-module-commit-section-map748,29918
(defconst magit-log-heading-remagit-log-heading-re754,30112
(defconst magit-log-cherry-remagit-log-cherry-re764,30565
(defconst magit-log-module-remagit-log-module-re770,30785
(defconst magit-log-bisect-vis-remagit-log-bisect-vis-re776,31003
(defconst magit-log-bisect-log-remagit-log-bisect-log-re782,31225
(defconst magit-log-reflog-remagit-log-reflog-re788,31451
(defconst magit-reflog-subject-remagit-reflog-subject-re795,31741
(defconst magit-log-stash-remagit-log-stash-re800,31955
(defvar magit-log-count nil)magit-log-count807,32236
(defun magit-log-wash-log (style args)magit-log-wash-log809,32266
(defun magit-log-wash-rev (style abbrev)magit-log-wash-rev838,33504
(defun magit-format-log-margin (&optional author date)magit-format-log-margin945,38541
(defun magit-format-duration (duration spec &optional width)magit-format-duration973,39911
(defun magit-log-maybe-show-more-commits (section)magit-log-maybe-show-more-commits984,40390
(defvar magit--update-revision-buffer nil)magit--update-revision-buffer994,40768
(defun magit-log-maybe-update-revision-buffer (&optional _)magit-log-maybe-update-revision-buffer996,40812
(defun magit-log-maybe-update-revision-buffer-1 ()magit-log-maybe-update-revision-buffer-11002,41093
(defvar magit--update-blob-buffer nil)magit--update-blob-buffer1017,41798
(defun magit-log-maybe-update-blob-buffer (&optional _)magit-log-maybe-update-blob-buffer1019,41838
(defun magit-log-maybe-update-blob-buffer-1 ()magit-log-maybe-update-blob-buffer-11025,42103
(defun magit-log-goto-same-commit ()magit-log-goto-same-commit1045,43119
(defvar magit-log-select-mode-mapmagit-log-select-mode-map1058,43701
(define-derived-mode magit-log-select-mode magit-log-mode "Magit Select"magit-log-select-mode1074,44357
(defun magit-log-select-refresh-buffer (rev args)magit-log-select-refresh-buffer1090,44939
(defvar-local magit-log-select-pick-function nil)magit-log-select-pick-function1094,45057
(defvar-local magit-log-select-quit-function nil)magit-log-select-quit-function1095,45107
(defun magit-log-select (pick &optional msg quit branch)magit-log-select1097,45158
(defun magit-log-select-pick ()magit-log-select-pick1120,46193
(defun magit-log-select-quit ()magit-log-select-quit1130,46507
(defvar magit-cherry-mode-mapmagit-cherry-mode-map1139,46747
(define-derived-mode magit-cherry-mode magit-mode "Magit Cherry"magit-cherry-mode1147,46997
(defun magit-cherry (head upstream)magit-cherry1162,47458
(defun magit-cherry-refresh-buffer (_upstream _head)magit-cherry-refresh-buffer1170,47833
(defun magit-insert-cherry-headers ()magit-insert-cherry-headers1174,47966
(defun magit-insert-cherry-commits ()magit-insert-cherry-commits1182,48333
(defvar magit-reflog-mode-mapmagit-reflog-mode-map1191,48650
(define-derived-mode magit-reflog-mode magit-log-mode "Magit Reflog"magit-reflog-mode1198,48856
(defun magit-reflog-refresh-buffer (ref args)magit-reflog-refresh-buffer1215,49403
(defvar magit-reflog-labelsmagit-reflog-labels1222,49723
(defun magit-reflog-format-subject (subject)magit-reflog-format-subject1237,50305
(defvar magit-unpulled-section-mapmagit-unpulled-section-map1258,51130
(defun magit-insert-unpulled-from-upstream ()magit-insert-unpulled-from-upstream1267,51435
(defun magit-insert-unpulled-from-pushremote ()magit-insert-unpulled-from-pushremote1281,52070
(defvar magit-unpushed-section-mapmagit-unpushed-section-map1293,52663
(defun magit-insert-unpushed-to-upstream ()magit-insert-unpushed-to-upstream1302,52964
(defun magit-insert-unpushed-to-pushremote ()magit-insert-unpushed-to-pushremote1316,53589
(defun magit-insert-recent-commits (&optional collapse)magit-insert-recent-commits1328,54176
(defun magit-insert-unpulled-from-upstream-or-recent ()magit-insert-unpulled-from-upstream-or-recent1340,54759
(defun magit-insert-unpulled-cherries ()magit-insert-unpulled-cherries1354,55380
(defun magit-insert-unpushed-cherries ()magit-insert-unpushed-cherries1367,55984
(defun magit-insert-submodule-commits (section range)magit-insert-submodule-commits1381,56593
(defun magit-insert-unpulled-module-commits ()magit-insert-unpulled-module-commits1391,57026
(defun magit-insert-unpushed-module-commits ()magit-insert-unpushed-module-commits1411,57965
(defvar-local magit-set-buffer-margin-refresh nil)magit-set-buffer-margin-refresh1433,58924
(defvar-local magit-show-margin nil)magit-show-margin1435,58976
(defun magit-toggle-margin ()magit-toggle-margin1438,59058
(defun magit-maybe-show-margin ()magit-maybe-show-margin1445,59329
(defun magit-set-buffer-margin (enable)magit-set-buffer-margin1454,59754
(defun magit-set-buffer-margin-1 ()magit-set-buffer-margin-11471,60509
(defun magit-make-margin-overlay (&rest strings)magit-make-margin-overlay1476,60696
(define-obsolete-function-alias 'magit-insert-unpulled-or-recent-commitsmagit-insert-unpulled-or-recent-commits1489,61211

elpa/magit-2.4.1/magit-mode.el,5421
(defvar magit-diff-show-xref-buttons)magit-diff-show-xref-buttons39,1346
(defvar magit-revision-show-xref-buttons)magit-revision-show-xref-buttons40,1384
(defcustom magit-mode-hookmagit-mode-hook49,1595
(defcustom magit-mode-setup-hookmagit-mode-setup-hook59,1879
(defcustom magit-pre-refresh-hook '(magit-maybe-save-repository-buffers)magit-pre-refresh-hook69,2180
(defcustom magit-post-refresh-hook nilmagit-post-refresh-hook83,2675
(defcustom magit-display-buffer-function 'magit-display-buffer-traditionalmagit-display-buffer-function96,3084
(defcustom magit-pre-display-buffer-hook '(magit-save-window-configuration)magit-pre-display-buffer-hook110,3741
(defcustom magit-post-display-buffer-hook '(magit-maybe-set-dedicated)magit-post-display-buffer-hook119,4158
(defcustom magit-generate-buffer-name-functionmagit-generate-buffer-name-function126,4413
(defcustom magit-buffer-name-format "*%M%v: %t"magit-buffer-name-format134,4752
(defcustom magit-uniquify-buffer-names tmagit-uniquify-buffer-names166,5854
(defcustom magit-bury-buffer-function 'magit-restore-window-configurationmagit-bury-buffer-function172,6026
(defcustom magit-region-highlight-hookmagit-region-highlight-hook181,6436
(defcustom magit-refresh-verbose nilmagit-refresh-verbose193,6980
(defcustom magit-refresh-buffer-hook nilmagit-refresh-buffer-hook199,7143
(defcustom magit-refresh-status-buffer tmagit-refresh-status-buffer205,7328
(defcustom magit-save-repository-buffers tmagit-save-repository-buffers218,7783
(defcustom magit-keep-region-overlay nilmagit-keep-region-overlay232,8418
(defvar magit-mode-mapmagit-mode-map281,10799
(defun magit-delete-thing ()magit-delete-thing367,14956
(defun magit-visit-thing ()magit-visit-thing374,15202
(defun magit-load-config-extensions ()magit-load-config-extensions431,16983
(define-derived-mode magit-mode special-mode "Magit"magit-mode438,17250
(defvar-local magit-region-overlays nil)magit-region-overlays458,18078
(defun magit-highlight-region (start end window rol)magit-highlight-region460,18120
(defun magit-unhighlight-region (rol)magit-unhighlight-region469,18588
(defvar-local magit-refresh-args nilmagit-refresh-args474,18794
(defvar-local magit-previous-section nil)magit-previous-section478,18932
(defun magit-mode-setup (mode &rest args)magit-mode-setup481,19024
(defvar magit-display-buffer-noselect nilmagit-display-buffer-noselect494,19495
(defun magit-display-buffer (buffer)magit-display-buffer497,19613
(defun magit-display-buffer-traditional (buffer)magit-display-buffer-traditional514,20267
(defun magit-maybe-set-dedicated ()magit-maybe-set-dedicated527,20859
(defvar-local magit--default-directory nilmagit--default-directory539,21376
(defun magit-mode-get-buffers ()magit-mode-get-buffers546,21710
(defvar-local magit-buffer-locked-p nil)magit-buffer-locked-p553,21961
(defun magit-mode-get-buffer (mode &optional create frame)magit-mode-get-buffer556,22051
(defun magit-generate-new-buffer (mode)magit-generate-new-buffer571,22716
(defun magit-generate-buffer-name-default-function (mode &optional value)magit-generate-buffer-name-default-function589,23497
(defun magit-toggle-buffer-lock ()magit-toggle-buffer-lock603,24073
(defun magit-mode-bury-buffer (&optional kill-buffer)magit-mode-bury-buffer650,26254
(defun magit-mode-quit-window (kill-buffer)magit-mode-quit-window657,26508
(defvar inhibit-magit-refresh nil)inhibit-magit-refresh682,27531
(defun magit-refresh ()magit-refresh684,27567
(defun magit-refresh-all ()magit-refresh-all702,28284
(defvar-local magit-refresh-start-time nil)magit-refresh-start-time714,28687
(defun magit-refresh-buffer ()magit-refresh-buffer716,28732
(defun magit-refresh-get-relative-position ()magit-refresh-get-relative-position755,30566
(defvar disable-magit-save-buffers nil)disable-magit-save-buffers777,31673
(defun magit-pre-command-hook ()magit-pre-command-hook779,31714
(defvar magit-after-save-refresh-buffers nil)magit-after-save-refresh-buffers783,31843
(defun magit-after-save-refresh-buffers ()magit-after-save-refresh-buffers785,31890
(defun magit-after-save-refresh-status ()magit-after-save-refresh-status793,32203
(defun magit-maybe-save-repository-buffers ()magit-maybe-save-repository-buffers810,32976
(defun magit-save-repository-buffers (&optional arg)magit-save-repository-buffers828,33811
(defvar magit-inhibit-save-previous-winconf nil)magit-inhibit-save-previous-winconf847,34699
(defvar-local magit-previous-window-configuration nil)magit-previous-window-configuration849,34749
(defun magit-save-window-configuration ()magit-save-window-configuration852,34867
(defun magit-restore-window-configuration (&optional kill-buffer)magit-restore-window-configuration864,35367
(defun magit-go-backward ()magit-go-backward878,35952
(defun magit-go-forward ()magit-go-forward885,36168
(defun magit-insert-xref-buttons (&optional _)magit-insert-xref-buttons892,36389
(defun magit-xref-insert-button (label type)magit-xref-insert-button902,36771
(define-button-type 'magit-xref-backwardmagit-xref-backward907,36959
(define-button-type 'magit-xref-forwardmagit-xref-forward912,37139
(defun magit-xref-setup ()magit-xref-setup917,37317
(defun magit-xref-restore (&rest args)magit-xref-restore934,38060
(defun magit-run-hook-with-benchmark (hook)magit-run-hook-with-benchmark942,38240

elpa/magit-2.4.1/magit-pkg.el,44
(define-package "magit" "2.4.1""magit"1,0

elpa/magit-2.4.1/magit-process.el,4770
(defcustom magit-process-connection-type (not (eq system-type 'cygwin))magit-process-connection-type48,1458
(defcustom magit-need-cygwin-noglobmagit-need-cygwin-noglob57,1829
(defcustom magit-process-popup-time -1magit-process-popup-time76,2675
(defcustom magit-process-log-max 32magit-process-log-max83,2965
(defcustom magit-credential-cache-daemon-socketmagit-credential-cache-daemon-socket93,3435
(defcustom magit-process-yes-or-no-prompt-regexpmagit-process-yes-or-no-prompt-regexp130,5328
(defcustom magit-process-password-prompt-regexpsmagit-process-password-prompt-regexps137,5586
(defcustom magit-process-find-password-functions nilmagit-process-find-password-functions149,6083
(defcustom magit-process-username-prompt-regexpsmagit-process-username-prompt-regexps168,6943
(defface magit-process-okmagit-process-ok175,7188
(defface magit-process-ngmagit-process-ng180,7329
(defvar magit-process-mode-mapmagit-process-mode-map187,7490
(define-derived-mode magit-process-mode magit-mode "Magit Process"magit-process-mode193,7648
(defun magit-process-buffer (&optional nodisplay)magit-process-buffer198,7830
(defun magit-process-kill ()magit-process-kill232,9234
(defvar magit-process-raise-error nil)magit-process-raise-error244,9590
(defun magit-git (&rest args)magit-git246,9630
(defun magit-run-git (&rest args)magit-run-git259,10082
(defvar magit-pre-call-git-hook nil)magit-pre-call-git-hook275,10649
(defun magit-call-git (&rest args)magit-call-git277,10687
(defun magit-call-process (program &rest args)magit-call-process291,11205
(defun magit-process-file (&rest args)magit-process-file301,11658
(defun magit-cygwin-env-vars ()magit-cygwin-env-vars309,12003
(defun magit-run-git-with-input (input &rest args)magit-run-git-with-input318,12363
(defvar magit-this-process nil)magit-this-process343,13345
(defun magit-run-git-with-logfile (file &rest args)magit-run-git-with-logfile345,13378
(defun magit-run-git-async (&rest args)magit-run-git-async357,13799
(defun magit-run-git-with-editor (&rest args)magit-run-git-with-editor374,14487
(defun magit-run-git-sequencer (&rest args)magit-run-git-sequencer390,15101
(defvar magit-pre-start-git-hook nil)magit-pre-start-git-hook410,15935
(defun magit-start-git (input &rest args)magit-start-git412,15974
(defun magit-start-process (program &optional input &rest args)magit-start-process433,16825
(defun magit-process-setup (program args)magit-process-setup485,19169
(defun magit-process-insert-section (pwd program args &optional errcode errlog)magit-process-insert-section493,19488
(defun magit-process-truncate-log ()magit-process-truncate-log522,20818
(defun magit-process-sentinel (process event)magit-process-sentinel543,21669
(defun magit-sequencer-process-sentinel (process event)magit-sequencer-process-sentinel561,22457
(defun magit-process-filter (proc string)magit-process-filter579,23289
(defun magit-process-logfile-filter (process string)magit-process-logfile-filter600,24237
(defmacro magit-process-kill-on-abort (proc &rest body)magit-process-kill-on-abort611,24637
(defun magit-process-yes-or-no-prompt (process string)magit-process-yes-or-no-prompt624,25079
(defun magit-process-password-auth-source (key)magit-process-password-auth-source639,25580
(defun magit-process-password-prompt (process string)magit-process-password-prompt650,26004
(defun magit-process-username-prompt (process string)magit-process-username-prompt665,26719
(defun magit-process-match-prompt (prompts string)magit-process-match-prompt673,27070
(defvar magit-credential-hook nilmagit-credential-hook682,27512
(defvar magit-credential-cache-daemon-process nil)magit-credential-cache-daemon-process685,27591
(defun magit-maybe-start-credential-cache-daemon ()magit-maybe-start-credential-cache-daemon687,27643
(defun magit-process-wait ()magit-process-wait718,29278
(defun tramp-sh-handle-start-file-process--magit-tramp-process-environmenttramp-sh-handle-start-file-process--magit-tramp-process-environment723,29426
(defun tramp-sh-handle-process-file--magit-tramp-process-environmenttramp-sh-handle-process-file--magit-tramp-process-environment735,29942
(defun magit-process-set-mode-line (program args)magit-process-set-mode-line746,30444
(defun magit-process-unset-mode-line ()magit-process-unset-mode-line753,30785
(defvar magit-process-error-message-remagit-process-error-message-re757,30928
(define-error 'magit-git-error "Git error")magit-git-error760,31040
(defvar-local magit-this-error nil)magit-this-error762,31085
(defun magit-process-finish (arg &optional process-buf command-bufmagit-process-finish764,31122
(defun magit-process-display-buffer (process)magit-process-display-buffer824,33893

elpa/magit-2.4.1/magit-remote.el,3005
(defcustom magit-clone-set-remote.pushDefault 'askmagit-clone-set-remote.pushDefault36,1184
(defun magit-clone (repository directory)magit-clone48,1586
(defcustom magit-remote-add-set-remote.pushDefault 'ask-if-unsetmagit-remote-add-set-remote.pushDefault73,2688
(defun magit-read-url (prompt &optional initial-input)magit-read-url98,3777
(defun magit-remote-add (remote url)magit-remote-add105,3985
(defun magit-remote-rename (old new)magit-remote-rename120,4677
(defun magit-remote-set-url (remote url)magit-remote-set-url129,4992
(defun magit-remote-remove (remote)magit-remote-remove138,5324
(defun magit-git-fetch (remote args)magit-git-fetch161,6177
(defun magit-fetch-from-pushremote (args)magit-fetch-from-pushremote166,6312
(defun magit-fetch-from-upstream (args)magit-fetch-from-upstream176,6691
(defun magit-fetch (remote args)magit-fetch186,7068
(defun magit-fetch-all (args)magit-fetch-all193,7288
(defun magit-fetch-all-prune ()magit-fetch-all-prune200,7494
(defun magit-fetch-all-no-prune ()magit-fetch-all-no-prune209,7780
(defun magit-pull-format-branch*rebase ()magit-pull-format-branch*rebase289,11190
(defun magit-git-pull (source args)magit-git-pull295,11476
(defun magit-pull-from-pushremote (args)magit-pull-from-pushremote302,11695
(defun magit-pull-from-upstream (args)magit-pull-from-upstream312,12070
(defun magit-pull (source args)magit-pull322,12441
(defcustom magit-push-current-set-remote-if-missing tmagit-push-current-set-remote-if-missing330,12678
(defun magit-git-push (branch target args)magit-git-push381,15044
(defun magit-push-current-to-pushremote (args &optional push-remote)magit-push-current-to-pushremote389,15329
(defun magit--push-current-set-pushremote-p (&optional change)magit--push-current-set-pushremote-p415,16691
(defun magit--push-current-to-pushremote-desc ()magit--push-current-to-pushremote-desc421,16914
(defun magit-push-current-to-upstream (args &optional upstream)magit-push-current-to-upstream429,17211
(defun magit--push-current-set-upstream-p (&optional change)magit--push-current-set-upstream-p449,18067
(defun magit--push-current-to-upstream-desc ()magit--push-current-to-upstream-desc455,18292
(defun magit-push-current (target args)magit-push-current463,18590
(defun magit-push (source target args)magit-push474,19032
(defun magit-push-matching (remote &optional args)magit-push-matching487,19563
(defun magit-push-tags (remote &optional args)magit-push-tags497,20012
(defun magit-push-tag (tag remote &optional args)magit-push-tag508,20465
(defun magit-push-implicitly (args)magit-push-implicitly518,20825
(defun magit-push-implicitly--desc ()magit-push-implicitly--desc542,21778
(defun magit-push-to-remote (remote args)magit-push-to-remote570,23109
(defun magit-push-to-remote--desc ()magit-push-to-remote--desc592,24021
(defun magit-format-patch (range args)magit-format-patch620,25143
(defun magit-request-pull (url start end)magit-request-pull637,25879

elpa/magit-2.4.1/magit-section.el,7022
(defvar magit-keep-region-overlay)magit-keep-region-overlay37,1258
(defgroup magit-section nilmagit-section41,1307
(defcustom magit-section-show-child-count tmagit-section-show-child-count45,1378
(defcustom magit-section-movement-hookmagit-section-movement-hook51,1569
(defcustom magit-section-highlight-hookmagit-section-highlight-hook67,2197
(defcustom magit-section-unhighlight-hookmagit-section-unhighlight-hook81,2677
(defcustom magit-section-set-visibility-hookmagit-section-set-visibility-hook93,3163
(defface magit-section-highlightmagit-section-highlight107,3755
(defface magit-section-headingmagit-section-heading113,3984
(defface magit-section-secondary-heading '((t :weight bold))magit-section-secondary-heading119,4238
(defface magit-section-heading-selectionmagit-section-heading-selection123,4381
(defvar-local magit-root-section nilmagit-root-section135,4756
(defun magit-current-section ()magit-current-section142,5029
(defun magit-section-ident (section)magit-section-ident146,5165
(defun magit-get-section (ident &optional root)magit-get-section154,5476
(defvar magit-insert-section--current nil "For internal use only.")magit-insert-section--current169,6111
(defvar magit-insert-section--parent  nil "For internal use only.")magit-insert-section--parent170,6179
(defvar magit-insert-section--oldroot nil "For internal use only.")magit-insert-section--oldroot171,6247
(defun magit-section-forward ()magit-section-forward176,6344
(defun magit-section-backward ()magit-section-backward194,7127
(defun magit-section-up ()magit-section-up230,8739
(defun magit-section-forward-sibling ()magit-section-forward-sibling237,8960
(defun magit-section-backward-sibling ()magit-section-backward-sibling248,9382
(defun magit-section-goto (arg)magit-section-goto259,9815
(defun magit-section-set-window-start (section)magit-section-set-window-start266,10050
(defun magit-hunk-set-window-start (section)magit-hunk-set-window-start271,10284
(defmacro magit-define-section-jumper (name heading type &optional value)magit-define-section-jumper277,10538
(defun magit-section-show (section)magit-section-show297,11339
(defun magit-section-hide (section)magit-section-hide322,12471
(defun magit-section-toggle (section)magit-section-toggle335,12997
(defun magit-section-toggle-children (section)magit-section-toggle-children345,13385
(defun magit-section-show-children (section &optional depth)magit-section-show-children355,13803
(defun magit-section-show-children-1 (section &optional depth)magit-section-show-children-1363,14133
(defun magit-section-hide-children (section)magit-section-hide-children372,14456
(defun magit-section-show-headings (section)magit-section-show-headings377,14680
(defun magit-section-show-headings-1 (section)magit-section-show-headings-1385,14983
(defun magit-section-cycle (section)magit-section-cycle392,15249
(defun magit-section-cycle-global ()magit-section-cycle-global408,15964
(defun magit-section-cycle-diffs ()magit-section-cycle-diffs420,16498
(defun magit-section-hidden-body (section &optional pred)magit-section-hidden-body448,17866
(defun magit-section-invisible-p (section)magit-section-invisible-p454,18118
(defun magit-section-show-level (level)magit-section-show-level462,18455
(defun magit-section-show-level-1 ()magit-section-show-level-1479,19244
(defun magit-section-show-level-1-all ()magit-section-show-level-1-all484,19376
(defun magit-section-show-level-2 ()magit-section-show-level-2489,19505
(defun magit-section-show-level-2-all ()magit-section-show-level-2-all494,19641
(defun magit-section-show-level-3 ()magit-section-show-level-3499,19774
(defun magit-section-show-level-3-all ()magit-section-show-level-3-all504,19909
(defun magit-section-show-level-4 ()magit-section-show-level-4509,20041
(defun magit-section-show-level-4-all ()magit-section-show-level-4-all514,20177
(defun magit-describe-section ()magit-describe-section521,20326
(defun magit-section-match (condition &optional section)magit-section-match534,20794
(defun magit-section-match-1 (l1 l2)magit-section-match-1563,22180
(defmacro magit-section-when (condition &rest body)magit-section-when573,22504
(defmacro magit-section-case (&rest clauses)magit-section-case589,23139
(defvar magit-insert-section-hook nilmagit-insert-section-hook616,24312
(defmacro magit-insert-section (&rest args)magit-insert-section621,24510
(defun magit-cancel-section ()magit-cancel-section712,28741
(defun magit-insert-heading (&rest args)magit-insert-heading721,29094
(defvar magit-insert-headers-hook nil "For internal use only.")magit-insert-headers-hook758,30813
(defun magit-insert-headers (hooks)magit-insert-headers760,30878
(defun magit-insert-remaining-headers ()magit-insert-remaining-headers772,31338
(defun magit-insert-child-count (section)magit-insert-child-count780,31610
(defvar-local magit-section-highlight-overlays nil)magit-section-highlight-overlays803,32478
(defvar-local magit-section-highlighted-section nil)magit-section-highlighted-section804,32530
(defvar-local magit-section-highlighted-sections nil)magit-section-highlighted-sections805,32583
(defvar-local magit-section-unhighlight-sections nil)magit-section-unhighlight-sections806,32637
(defun magit-section-update-region (_)magit-section-update-region808,32692
(defun magit-section-update-highlight ()magit-section-update-highlight812,32827
(defun magit-section-highlight (section selection)magit-section-highlight834,33867
(defun magit-section-highlight-selection (_ selection)magit-section-highlight-selection850,34657
(defun magit-section-make-overlay (start end face)magit-section-make-overlay871,35547
(defun magit-section-goto-successor (section line char arg)magit-section-goto-successor885,36166
(defun magit-section-goto-successor-1 (section)magit-section-goto-successor-1923,38122
(defvar-local magit-section-visibility-cache nil)magit-section-visibility-cache940,38845
(defun magit-section-set-visibility-from-cache (section)magit-section-set-visibility-from-cache943,38953
(defun magit-section-update-visibility-cache (section)magit-section-update-visibility-cache960,39705
(defun magit-section-visibility-ident (section)magit-section-visibility-ident965,39907
(defun magit-section-parent-value (section)magit-section-parent-value991,41129
(defun magit-section-siblings (section &optional direction)magit-section-siblings995,41271
(defun magit-region-values (&rest types)magit-region-values1009,41880
(defun magit-region-sections (&rest types)magit-region-sections1020,42408
(defun magit-section-position-in-heading-p (section pos)magit-section-position-in-heading-p1060,44329
(defun magit-section-internal-region-p (&optional section)magit-section-internal-region-p1067,44603
(defun magit-wash-sequence (function)magit-wash-sequence1079,45213
(defun magit-add-section-hook (hook function &optional at append local)magit-add-section-hook1084,45420

elpa/magit-2.4.1/magit-sequence.el,3540
(defface magit-sequence-pickmagit-sequence-pick37,1230
(defface magit-sequence-stopmagit-sequence-stop42,1345
(defface magit-sequence-partmagit-sequence-part48,1575
(defface magit-sequence-headmagit-sequence-head54,1802
(defface magit-sequence-dropmagit-sequence-drop60,2025
(defface magit-sequence-donemagit-sequence-done66,2245
(defface magit-sequence-ontomagit-sequence-onto71,2363
(defun magit-sequencer-continue ()magit-sequencer-continue79,2517
(defun magit-sequencer-skip ()magit-sequencer-skip90,2954
(defun magit-sequencer-abort ()magit-sequencer-abort99,3273
(defun magit-sequencer-in-progress-p ()magit-sequencer-in-progress-p108,3637
(defun magit-cherry-pick-read-args (prompt)magit-cherry-pick-read-args133,4730
(defun magit-cherry-pick (commit &optional args)magit-cherry-pick139,4939
(defun magit-cherry-apply (commit &optional args)magit-cherry-apply152,5485
(defun magit-cherry-pick-in-progress-p ()magit-cherry-pick-in-progress-p162,5967
(defun magit-revert-read-args (prompt)magit-revert-read-args182,6796
(defun magit-revert (commit &optional args)magit-revert188,6978
(defun magit-revert-no-commit (commit &optional args)magit-revert-no-commit198,7374
(defun magit-revert-in-progress-p ()magit-revert-in-progress-p207,7797
(defun magit-am-apply-patches (&optional files args)magit-am-apply-patches238,9187
(defun magit-am-apply-maildir (&optional maildir args)magit-am-apply-maildir251,9803
(defun magit-am-continue ()magit-am-continue258,10084
(defun magit-am-skip ()magit-am-skip268,10422
(defun magit-am-abort ()magit-am-abort276,10665
(defun magit-am-in-progress-p ()magit-am-in-progress-p284,10927
(defun magit-git-rebase (target args)magit-git-rebase325,12913
(defun magit-rebase-onto-pushremote (args)magit-rebase-onto-pushremote329,13017
(defun magit-rebase-onto-upstream (args)magit-rebase-onto-upstream342,13625
(defun magit-rebase (target args)magit-rebase352,14027
(defun magit-rebase-subset (newbase start args)magit-rebase-subset363,14454
(defun magit-rebase-interactive-1 (commit args message &optional editor)magit-rebase-interactive-1382,15302
(defun magit-rebase-interactive (commit args)magit-rebase-interactive412,16568
(defun magit-rebase-autosquash (args)magit-rebase-autosquash420,16874
(defun magit-rebase-edit-commit (commit args)magit-rebase-edit-commit428,17198
(defun magit-rebase-reword-commit (commit args)magit-rebase-reword-commit437,17535
(defun magit-rebase-continue ()magit-rebase-continue446,17889
(defun magit-rebase-skip ()magit-rebase-skip456,18242
(defun magit-rebase-edit ()magit-rebase-edit464,18500
(defun magit-rebase-abort ()magit-rebase-abort472,18749
(defun magit-rebase-in-progress-p ()magit-rebase-in-progress-p479,18985
(defun magit-insert-sequencer-sequence ()magit-insert-sequencer-sequence486,19191
(defun magit-insert-am-sequence ()magit-insert-am-sequence508,20374
(defun magit-sequence-insert-am-patch (type patch face)magit-sequence-insert-am-patch534,21480
(defun magit-insert-rebase-sequence ()magit-insert-rebase-sequence540,21712
(defun magit-rebase-insert-merge-sequence ()magit-rebase-insert-merge-sequence564,22921
(defun magit-rebase-insert-apply-sequence ()magit-rebase-insert-apply-sequence572,23285
(defun magit-rebase-patches ()magit-rebase-patches577,23505
(defun magit-sequence-insert-sequence (stop onto &optional orig)magit-sequence-insert-sequence580,23608
(defun magit-sequence-insert-commit (type hash face)magit-sequence-insert-commit641,26854

elpa/magit-2.4.1/magit-stash.el,2593
(defun magit-stash (message &optional include-untracked)magit-stash60,2339
(defun magit-stash-index (message)magit-stash-index69,2728
(defun magit-stash-worktree (message &optional include-untracked)magit-stash-worktree79,3155
(defun magit-stash-keep-index (message &optional include-untracked)magit-stash-keep-index88,3557
(defun magit-stash-read-args ()magit-stash-read-args96,3971
(defun magit-stash-read-untracked ()magit-stash-read-untracked100,4078
(defun magit-stash-read-message ()magit-stash-read-message106,4347
(defun magit-snapshot (&optional include-untracked)magit-snapshot115,4667
(defun magit-snapshot-index ()magit-snapshot-index124,5052
(defun magit-snapshot-worktree (&optional include-untracked)magit-snapshot-worktree131,5241
(defun magit-snapshot-read-args ()magit-snapshot-read-args139,5617
(defun magit-snapshot-save (index worktree untracked &optional refresh)magit-snapshot-save142,5692
(defun magit-stash-apply (stash)magit-stash-apply147,5898
(defun magit-stash-pop (stash)magit-stash-pop156,6280
(defun magit-stash-drop (stash)magit-stash-drop167,6741
(defun magit-stash-clear (ref)magit-stash-clear188,7692
(defun magit-stash-branch (stash branch)magit-stash-branch198,8037
(defun magit-stash-format-patch (stash)magit-stash-format-patch205,8309
(defun magit-stash-save (message index worktree untrackedmagit-stash-save214,8592
(defun magit-stash-store (message ref commit)magit-stash-store242,9961
(defun magit-stash-create (message index worktree untracked)magit-stash-create248,10217
(defun magit-stash-summary ()magit-stash-summary274,11628
(defvar magit-stashes-section-mapmagit-stashes-section-map280,11773
(defvar magit-stash-section-mapmagit-stash-section-map286,11955
(defun magit-stash-list ()magit-stash-list313,12996
(define-derived-mode magit-stashes-mode magit-reflog-mode "Magit Stashes"magit-stashes-mode318,13130
(defcustom magit-stash-sections-hookmagit-stash-sections-hook333,13677
(defun magit-stash-show (stash &optional args files)magit-stash-show343,13950
(define-derived-mode magit-stash-mode magit-diff-mode "Magit Stash"magit-stash-mode352,14403
(defun magit-stash-refresh-buffer (stash _const _args _files)magit-stash-refresh-buffer357,14583
(defun magit-stash-insert-section (commit range message &optional files)magit-stash-insert-section365,14887
(defun magit-insert-stash-index ()magit-insert-stash-index373,15203
(defun magit-insert-stash-worktree ()magit-insert-stash-worktree380,15501
(defun magit-insert-stash-untracked ()magit-insert-stash-untracked387,15795

elpa/magit-2.4.1/magit-utils.el,1658
(defvar magit-wip-before-change-mode)magit-wip-before-change-mode47,1728
(defcustom magit-completing-read-function 'magit-builtin-completing-readmagit-completing-read-function51,1780
(defcustom magit-no-confirm nilmagit-no-confirm59,2169
(defcustom magit-ellipsis ?…magit-ellipsis160,6428
(defcustom magit-update-other-window-delay 0.2magit-update-other-window-delay166,6579
(defun magit-completing-readmagit-completing-read185,7340
(defun magit-builtin-completing-readmagit-builtin-completing-read221,8781
(defun magit-ido-completing-readmagit-ido-completing-read228,9107
(defun magit-prompt-with-default (prompt def)magit-prompt-with-default247,9985
(defvar magit-minibuffer-local-ns-mapmagit-minibuffer-local-ns-map253,10199
(defun magit-whitespace-disallowed ()magit-whitespace-disallowed260,10443
(defun magit-read-string (prompt &optional initial-input history default-valuemagit-read-string268,10669
(defun magit-read-string-ns (prompt &optional initial-input historymagit-read-string-ns296,11923
(defmacro magit-read-char-case (prompt verbose &rest clauses)magit-read-char-case302,12231
(defun magit-confirm-files (action files &optional prompt)magit-confirm-files346,14230
(defun magit-confirm-make-prompt (action)magit-confirm-make-prompt355,14482
(defmacro magit-bind-match-strings (varlist string &rest body)magit-bind-match-strings362,14692
(defun magit-delete-line ()magit-delete-line376,15283
(defun magit-delete-match (&optional num)magit-delete-match380,15405
(defun magit-file-line (file)magit-file-line386,15637
(defun magit-file-lines (file &optional keep-empty-lines)magit-file-lines394,15913

elpa/magit-2.4.1/magit-version.el,0

elpa/magit-2.4.1/magit-wip.el,1859
(defgroup magit-wip nilmagit-wip38,1292
(defcustom magit-wip-after-save-local-mode-lighter " sWip"magit-wip-after-save-local-mode-lighter42,1396
(defcustom magit-wip-after-apply-mode-lighter " aWip"magit-wip-after-apply-mode-lighter48,1580
(defcustom magit-wip-before-change-mode-lighter " cWip"magit-wip-before-change-mode-lighter54,1754
(defcustom magit-wip-namespace "refs/wip/"magit-wip-namespace60,1932
(define-minor-mode magit-wip-after-save-local-modemagit-wip-after-save-local-mode72,2300
(defun magit-wip-after-save-local-mode-turn-on ()magit-wip-after-save-local-mode-turn-on90,3094
(define-globalized-minor-mode magit-wip-after-save-modemagit-wip-after-save-mode97,3323
(defun magit-wip-commit-buffer-file ()magit-wip-commit-buffer-file102,3513
(define-minor-mode magit-wip-after-apply-modemagit-wip-after-apply-mode117,4122
(defun magit-wip-commit-after-apply (&optional files msg)magit-wip-commit-after-apply131,4649
(define-minor-mode magit-wip-before-change-modemagit-wip-before-change-mode136,4793
(defun magit-wip-commit-before-change (&optional files msg)magit-wip-commit-before-change153,5488
(defun magit-wip-commit (&optional files msg)magit-wip-commit160,5659
(defun magit-wip-commit-index (ref files msg &optional cached-only)magit-wip-commit-index176,6297
(defun magit-wip-commit-worktree (ref files msg)magit-wip-commit-worktree185,6767
(defun magit-wip-update-wipref (wipref tree parent files msg start-msg)magit-wip-update-wipref197,7363
(defun magit-wip-get-ref ()magit-wip-get-ref219,8452
(defun magit-wip-get-parent (ref wipref)magit-wip-get-parent224,8595
(defun magit-wip-log-current (branch args files count)magit-wip-log-current233,8810
(defun magit-wip-log (branch args files count)magit-wip-log244,9299
(defun magit-wip-log-get-tips (wipref count)magit-wip-log-get-tips271,10480

elpa/magit-2.4.1/magit.el,16017
(defconst magit--minimal-git "1.9.4")magit--minimal-git71,2614
(defconst magit--minimal-emacs "24.4")magit--minimal-emacs72,2652
(defgroup magit-status nilmagit-status77,2722
(defcustom magit-status-mode-hook nilmagit-status-mode-hook81,2818
(defcustom magit-status-headers-hookmagit-status-headers-hook86,2942
(defcustom magit-status-sections-hookmagit-status-sections-hook110,3797
(defvar magit-status-refresh-hook nilmagit-status-refresh-hook132,4496
(defcustom magit-status-expand-stashes tmagit-status-expand-stashes155,5353
(defcustom magit-status-show-hashes-in-headers nilmagit-status-show-hashes-in-headers161,5529
(defgroup magit-refs nilmagit-refs173,5887
(defcustom magit-refs-mode-hook nilmagit-refs-mode-hook177,5986
(defcustom magit-refs-sections-hookmagit-refs-sections-hook183,6142
(defcustom magit-refs-show-commit-count nilmagit-refs-show-commit-count194,6465
(defcustom magit-refs-show-margin 'branchmagit-refs-show-margin209,7076
(defcustom magit-visit-ref-create nilmagit-visit-ref-create222,7648
(defcustom magit-branch-read-upstream-first tmagit-branch-read-upstream-first235,8050
(defcustom magit-branch-prefer-remote-upstream nilmagit-branch-prefer-remote-upstream241,8247
(defcustom magit-repository-directories nilmagit-repository-directories279,9803
(defcustom magit-repository-directories-depth 3magit-repository-directories-depth287,10066
(defface magit-header-linemagit-header-line297,10340
(defface magit-dimmedmagit-dimmed302,10463
(defface magit-hashmagit-hash308,10678
(defface magit-tagmagit-tag314,10893
(defface magit-branch-remotemagit-branch-remote320,11119
(defface magit-branch-localmagit-branch-local326,11373
(defface magit-branch-currentmagit-branch-current332,11588
(defface magit-headmagit-head338,11824
(defface magit-refnamemagit-refname344,12047
(defface magit-refname-stashmagit-refname-stash350,12267
(defface magit-refname-wipmagit-refname-wip355,12379
(defface magit-signature-goodmagit-signature-good360,12489
(defface magit-signature-badmagit-signature-bad365,12602
(defface magit-signature-untrustedmagit-signature-untrusted370,12711
(defface magit-cherry-unmatchedmagit-cherry-unmatched375,12838
(defface magit-cherry-equivalentmagit-cherry-equivalent380,12961
(defface magit-filenamemagit-filename385,13089
(defvar magit-status-mode-mapmagit-status-mode-map394,13233
(define-derived-mode magit-status-mode magit-mode "Magit"magit-status-mode412,13999
(defun magit-status (&optional directory)magit-status442,14947
(defun magit-status-internal (directory)magit-status-internal468,16128
(defvar magit-status-sections-hook-1 nil)magit-status-sections-hook-1475,16320
(defun magit-status-refresh-buffer ()magit-status-refresh-buffer477,16363
(defun magit-insert-status-headers ()magit-insert-status-headers490,16967
(defun magit-insert-error-header ()magit-insert-error-header498,17314
(defun magit-insert-tags-header ()magit-insert-tags-header576,20888
(defun magit-format-status-tag-sentence (tag count next)magit-format-status-tag-sentence596,21699
(defun magit-insert-diff-filter-header ()magit-insert-diff-filter-header603,22001
(defvar magit-untracked-section-mapmagit-untracked-section-map614,22470
(defun magit-insert-untracked-files ()magit-insert-untracked-files621,22694
(defun magit-insert-un/tracked-files-1 (files directory)magit-insert-un/tracked-files-1643,23706
(defun magit-insert-tracked-files ()magit-insert-tracked-files660,24395
(defun magit-insert-user-header ()magit-insert-user-header668,24669
(defun magit-insert-repo-header ()magit-insert-repo-header678,25043
(defun magit-insert-remote-header ()magit-insert-remote-header684,25303
(defun ido-enter-magit-status ()ido-enter-magit-status701,25981
(defun magit-status-maybe-update-revision-buffer (&optional _)magit-status-maybe-update-revision-buffer722,26677
(defun magit-status-maybe-update-blob-buffer (&optional _)magit-status-maybe-update-blob-buffer728,26967
(defvar magit-refs-mode-mapmagit-refs-mode-map736,27257
(define-derived-mode magit-refs-mode magit-mode "Magit Refs"magit-refs-mode743,27471
(defun magit-show-refs-head (&optional args)magit-show-refs-head785,29286
(defun magit-show-refs-current (&optional args)magit-show-refs-current792,29514
(defun magit-show-refs (&optional ref args)magit-show-refs800,29808
(defun magit-refs-refresh-buffer (&rest _ignore)magit-refs-refresh-buffer807,30122
(defun magit-insert-branch-description ()magit-insert-branch-description814,30428
(defconst magit-refs-branch-line-remagit-refs-branch-line-re828,31079
(defvar magit-refs-local-branch-format "%4c %-25n %U%m\n"magit-refs-local-branch-format845,31661
(defvar magit-refs-remote-branch-format "%4c %-25n %m\n"magit-refs-remote-branch-format847,31772
(defvar magit-refs-tags-format "%4c %-25n %m\n"magit-refs-tags-format849,31883
(defvar magit-refs-indent-cherry-lines 3magit-refs-indent-cherry-lines851,31974
(defvar magit-branch-section-mapmagit-branch-section-map854,32062
(defvar magit-remote-section-mapmagit-remote-section-map862,32356
(defun magit-refs-set-show-commit-count ()magit-refs-set-show-commit-count869,32585
(defun magit-visit-ref ()magit-visit-ref879,32945
(defun magit-insert-local-branches ()magit-insert-local-branches919,34592
(defun magit-insert-remote-branches ()magit-insert-remote-branches937,35406
(defun magit-insert-branch (branch format &rest args)magit-insert-branch958,36450
(defun magit-insert-branch-1magit-insert-branch-1968,36934
(defvar magit-tag-section-mapmagit-tag-section-map1015,39097
(defun magit-insert-tags ()magit-insert-tags1022,39336
(defun magit-refs-insert-cherry-commits (head ref section)magit-refs-insert-cherry-commits1053,40852
(defun magit-refs-insert-cherry-commits-1 (head ref section)magit-refs-insert-cherry-commits-11060,41166
(defun magit-refs-format-commit-count (ref head format &optional tag-p)magit-refs-format-commit-count1067,41468
(defun magit-refs-format-margin (commit)magit-refs-format-margin1076,41854
(defun magit-find-file (rev file)magit-find-file1086,42146
(defun magit-find-file-other-window (rev file)magit-find-file-other-window1094,42414
(defun magit-find-file-read-args (prompt)magit-find-file-read-args1101,42722
(defvar magit-read-file-hist nil)magit-read-file-hist1105,42892
(defun magit-read-file-from-rev (rev prompt &optional default)magit-read-file-from-rev1107,42927
(defun magit-read-changed-file (rev-or-range prompt &optional default)magit-read-changed-file1113,43175
(defun magit-get-revision-buffer (rev file &optional create)magit-get-revision-buffer1120,43381
(defun magit-get-revision-buffer-create (rev file)magit-get-revision-buffer-create1124,43567
(defvar magit-find-file-hook nil)magit-find-file-hook1127,43661
(defun magit-find-file-noselect (rev file)magit-find-file-noselect1129,43696
(defvar magit-find-index-hook nil)magit-find-index-hook1152,44723
(defun magit-find-file-index-noselect (file &optional revert)magit-find-file-index-noselect1154,44759
(defun magit-update-index ()magit-update-index1182,46009
(defun magit-dired-jump (&optional other-window)magit-dired-jump1212,47414
(defun magit-checkout-file (rev file)magit-checkout-file1222,47815
(defun magit-init (directory)magit-init1235,48181
(defun magit-branch-popup-setup (val def)magit-branch-popup-setup1308,51448
(defun magit-checkout (revision)magit-checkout1318,51799
(defun magit-branch (branch start-point &optional args)magit-branch1329,52243
(defun magit-branch-and-checkout (branch start-point &optional args)magit-branch-and-checkout1340,52732
(defun magit-branch-read-starting-point (prompt)magit-branch-read-starting-point1352,53380
(defun magit-branch-read-args (prompt)magit-branch-read-args1363,53962
(defun magit-branch-spinoff (branch &rest args)magit-branch-spinoff1379,54694
(defun magit-branch-reset (branch to &optional args)magit-branch-reset1415,56449
(defun magit-branch-delete (branches &optional force)magit-branch-delete1452,58090
(defun magit-branch-rename (old new &optional force)magit-branch-rename1524,61396
(defun magit-edit-branch*description (branch)magit-edit-branch*description1539,61897
(defun magit-edit-branch*description-check-buffers ()magit-edit-branch*description-check-buffers1551,62397
(defun magit-format-branch*description ()magit-format-branch*description1562,62828
(defun magit-set-branch*merge/remote (branch upstream)magit-set-branch*merge/remote1572,63290
(defun magit-format-branch*merge/remote ()magit-format-branch*merge/remote1604,64820
(defun magit-cycle-branch*rebase (branch)magit-cycle-branch*rebase1622,65666
(defun magit-format-branch*rebase ()magit-format-branch*rebase1643,66555
(defun magit-cycle-branch*pushRemote (branch)magit-cycle-branch*pushRemote1651,66900
(defun magit-format-branch*pushRemote ()magit-format-branch*pushRemote1670,67760
(defun magit-cycle-pull.rebase ()magit-cycle-pull.rebase1678,68119
(defun magit-format-pull.rebase ()magit-format-pull.rebase1690,68565
(defun magit-cycle-remote.pushDefault ()magit-cycle-remote.pushDefault1694,68696
(defun magit-format-remote.pushDefault ()magit-format-remote.pushDefault1703,69065
(defun magit-cycle-branch*autoSetupMerge ()magit-cycle-branch*autoSetupMerge1708,69240
(defun magit-format-branch*autoSetupMerge ()magit-format-branch*autoSetupMerge1730,70098
(defun magit-cycle-branch*autoSetupRebase ()magit-cycle-branch*autoSetupRebase1735,70288
(defun magit-format-branch*autoSetupRebase ()magit-format-branch*autoSetupRebase1756,71121
(defun magit-merge (rev &optional args nocommit)magit-merge1783,72208
(defun magit-merge-editmsg (rev &optional args)magit-merge-editmsg1800,72903
(defun magit-merge-nocommit (rev &optional args)magit-merge-nocommit1813,73397
(defun magit-merge-preview (rev)magit-merge-preview1824,73862
(define-derived-mode magit-merge-preview-mode magit-diff-mode "Magit Merge"magit-merge-preview-mode1829,74083
(defun magit-merge-preview-refresh-buffer (rev)magit-merge-preview-refresh-buffer1834,74260
(defun magit-merge-abort ()magit-merge-abort1846,74773
(defun magit-checkout-stage (file arg)magit-checkout-stage1855,75062
(defun magit-merge-state ()magit-merge-state1879,76152
(defun magit-merge-assert ()magit-merge-assert1882,76229
(defun magit-checkout-read-stage (file)magit-checkout-read-stage1888,76421
(defun magit-insert-merge-log ()magit-insert-merge-log1894,76629
(defun magit-reset-index (commit)magit-reset-index1914,77398
(defun magit-reset (commit &optional hard)magit-reset1923,77720
(defun magit-reset-head (commit)magit-reset-head1935,78216
(defun magit-reset-soft (commit)magit-reset-soft1942,78472
(defun magit-reset-hard (commit)magit-reset-hard1949,78728
(defun magit-reset-internal (arg commit &optional path)magit-reset-internal1955,78958
(defun magit-file-rename (file newname)magit-file-rename1973,79675
(defun magit-file-untrack (file)magit-file-untrack1999,80747
(defun magit-file-delete (file &optional force)magit-file-delete2006,80978
(defun magit-read-tracked-file (prompt)magit-read-tracked-file2018,81413
(defun magit-read-file (prompt &optional tracked-only)magit-read-file2021,81484
(defun magit-read-files (prompt initial-contents)magit-read-files2030,81971
(defun magit-read-file-choice (prompt files &optional error default)magit-read-file-choice2036,82236
(defun magit-tag (name rev &optional args)magit-tag2069,83329
(defun magit-tag-delete (tags)magit-tag-delete2082,83871
(defun magit-tag-prune (tags remote-tags remote)magit-tag-prune2093,84333
(defun magit-notes-edit (commit &optional ref)magit-notes-edit2141,86409
(defun magit-notes-remove (commit &optional ref)magit-notes-remove2152,86845
(defun magit-notes-merge (ref)magit-notes-merge2163,87296
(defun magit-notes-merge-commit ()magit-notes-merge-commit2176,87819
(defun magit-notes-merge-abort ()magit-notes-merge-abort2182,87999
(defun magit-notes-prune (&optional dry-run)magit-notes-prune2188,88176
(defun magit-notes-set-ref (ref &optional global)magit-notes-set-ref2195,88459
(defun magit-notes-set-display-refs (refs &optional global)magit-notes-set-display-refs2222,89743
(defun magit-notes-read-args (prompt)magit-notes-read-args2246,90841
(defun magit-notes-popup-read-ref (prompt &optional initial-input)magit-notes-popup-read-ref2252,91073
(defun magit-notes-merging-p ()magit-notes-merging-p2257,91326
(defun magit-submodule-add (url &optional path)magit-submodule-add2278,92075
(defun magit-submodule-setup ()magit-submodule-setup2303,93146
(defun magit-submodule-init ()magit-submodule-init2309,93316
(defun magit-submodule-update (&optional init)magit-submodule-update2316,93521
(defun magit-submodule-sync ()magit-submodule-sync2324,93827
(defun magit-submodule-fetch (&optional all)magit-submodule-fetch2331,94029
(defun magit-submodule-deinit (path)magit-submodule-deinit2340,94328
(defvar magit-file-mode-mapmagit-file-mode-map2350,94660
(defvar magit-file-mode-lighter "")magit-file-mode-lighter2368,95339
(define-minor-mode magit-file-modemagit-file-mode2370,95376
(defun magit-file-mode-turn-on ()magit-file-mode-turn-on2379,95654
(define-globalized-minor-mode global-magit-file-modeglobal-magit-file-mode2385,95804
(defvar magit-blob-mode-mapmagit-blob-mode-map2392,95977
(define-minor-mode magit-blob-modemagit-blob-mode2400,96223
(defun magit-blob-next ()magit-blob-next2407,96435
(defun magit-blob-previous ()magit-blob-previous2419,96973
(defun magit-blob-visit (blob-or-file line)magit-blob-visit2429,97427
(defun magit-blob-ancestor (rev file)magit-blob-ancestor2444,98003
(defun magit-blob-successor (rev file)magit-blob-successor2450,98272
(defun magit-kill-this-buffer ()magit-kill-this-buffer2460,98664
(defvar magit-git-command-history nil)magit-git-command-history2516,100934
(defun magit-git-command (args directory)magit-git-command2534,101762
(defun magit-git-command-topdir (args directory)magit-git-command-topdir2553,102533
(defun magit-shell-command (args directory)magit-shell-command2561,102878
(defun magit-shell-command-topdir (args directory)magit-shell-command-topdir2576,103503
(defun magit-read-shell-command (prompt &optional root)magit-read-shell-command2583,103843
(defun magit-read-repository (&optional read-directory-name)magit-read-repository2594,104257
(defun magit-list-repos ()magit-list-repos2620,105456
(defun magit-list-repos-1 (directory depth)magit-list-repos-12624,105598
(defun magit-list-repos-uniquify (alist)magit-list-repos-uniquify2632,105967
(defvar magit-revision-stack nil)magit-revision-stack2655,106807
(defcustom magit-pop-revision-stack-formatmagit-pop-revision-stack-format2657,106842
(defun magit-pop-revision-stack (rev toplevel)magit-pop-revision-stack2702,109102
(define-key git-commit-mode-mapgit-commit-mode-map2777,112509
(defun magit-copy-section-value ()magit-copy-section-value2780,112587
(defun magit-copy-buffer-revision ()magit-copy-buffer-revision2817,114143
(defconst magit-font-lock-keywordsmagit-font-lock-keywords2863,116216
(defvar magit-version 'undefinedmagit-version2882,116993
(defun magit-version ()magit-version2887,117147
(defun magit-git-version (&optional numeric)magit-git-version2947,119664
(defun magit-startup-asserts ()magit-startup-asserts2955,119962
(defvar magit--remotes-using-recent-git nil)magit--remotes-using-recent-git3001,122217
(defun magit-tramp-asserts (directory)magit-tramp-asserts3003,122263
(define-obsolete-function-alias 'global-magit-file-buffer-modeglobal-magit-file-buffer-mode3036,123781
(define-obsolete-function-alias 'magit-insert-head-headermagit-insert-head-header3039,123886
(define-obsolete-function-alias 'magit-insert-upstream-headermagit-insert-upstream-header3042,123995
(define-obsolete-function-alias 'magit-insert-pull-branch-headermagit-insert-pull-branch-header3045,124112

elpa/magit-popup-20160606.1041/magit-popup-autoloads.el,0

elpa/magit-popup-20160606.1041/magit-popup-pkg.el,108
(define-package "magit-popup" "20160606.1041" "Define prefix-infix-suffix command combos""magit-popup"1,0

elpa/magit-popup-20160606.1041/magit-popup.el,6665
(defgroup magit-popup nilmagit-popup79,2988
(defgroup magit-popup-faces nilmagit-popup-faces83,3081
(defcustom magit-popup-display-buffer-action '((display-buffer-below-selected))magit-popup-display-buffer-action89,3189
(defcustom magit-popup-manpage-packagemagit-popup-manpage-package99,3582
(defcustom magit-popup-show-help-echo tmagit-popup-show-help-echo106,3815
(defcustom magit-popup-show-common-commands tmagit-popup-show-common-commands111,3941
(defcustom magit-popup-use-prefix-argument 'disabledmagit-popup-use-prefix-argument118,4213
(defface magit-popup-headingmagit-popup-heading148,5483
(defface magit-popup-keymagit-popup-key153,5619
(defface magit-popup-argumentmagit-popup-argument158,5746
(defface magit-popup-disabled-argumentmagit-popup-disabled-argument163,5901
(defface magit-popup-option-valuemagit-popup-option-value168,6050
(defvar magit-popup-mode-mapmagit-popup-mode-map175,6217
(defvar magit-popup-common-commandsmagit-popup-common-commands214,8032
(define-button-type 'magit-popup-buttonmagit-popup-button224,8425
(define-button-type 'magit-popup-switch-buttonmagit-popup-switch-button230,8607
(define-button-type 'magit-popup-option-buttonmagit-popup-option-button240,8885
(define-button-type 'magit-popup-variable-buttonmagit-popup-variable-button250,9163
(define-button-type 'magit-popup-action-buttonmagit-popup-action-button260,9441
(define-button-type 'magit-popup-command-buttonmagit-popup-command-button270,9729
(define-button-type 'magit-popup-internal-command-buttonmagit-popup-internal-command-button278,10061
(defvar-local magit-this-popup nilmagit-this-popup285,10221
(defvar-local magit-this-popup-events nilmagit-this-popup-events290,10386
(defvar-local magit-previous-popup nil)magit-previous-popup295,10564
(defun magit-popup-get (prop)magit-popup-get297,10605
(defun magit-popup-put (prop val)magit-popup-put303,10850
(defvar magit-current-popup nilmagit-current-popup310,11147
(defvar magit-current-popup-args nilmagit-current-popup-args318,11463
(defun magit-current-popup-args (&rest filter)magit-current-popup-args337,12335
(defun magit-popup-arg-match (pattern string)magit-popup-arg-match354,13163
(defun magit-popup-event-keydsc (ev)magit-popup-event-keydsc362,13451
(defun magit-popup-lookup (event type)magit-popup-lookup366,13591
(defun magit-popup-get-args ()magit-popup-get-args370,13750
(defmacro magit-popup-convert-events (def form)magit-popup-convert-events379,14135
(defun magit-popup-convert-switches (val def)magit-popup-convert-switches383,14301
(defun magit-popup-convert-options (val def)magit-popup-convert-options390,14520
(defun magit-popup-convert-variables (_val def)magit-popup-convert-variables400,14898
(defun magit-popup-convert-actions (_val def)magit-popup-convert-actions405,15078
(defmacro magit-define-popup (name doc &rest args)magit-define-popup412,15252
(defun magit-define-popup-switch (popup key desc switchmagit-define-popup-switch564,21502
(defun magit-define-popup-option (popup key desc optionmagit-define-popup-option589,22604
(defun magit-define-popup-variable (popup key desc command formattermagit-define-popup-variable615,23750
(defun magit-define-popup-action (popup key desc commandmagit-define-popup-action639,24775
(defun magit-define-popup-sequence-actionmagit-define-popup-sequence-action661,25707
(defconst magit-popup-type-plural-alistmagit-popup-type-plural-alist668,25983
(defun magit-popup-pluralize-type (type)magit-popup-pluralize-type675,26174
(defun magit-define-popup-keymagit-define-popup-key679,26283
(defun magit-define-popup-keys-deferred (popup)magit-define-popup-keys-deferred715,27859
(defun magit-change-popup-key (popup type from to)magit-change-popup-key723,28166
(defun magit-remove-popup-key (popup type key)magit-remove-popup-key732,28603
(defvar-local magit-popup-previous-winconf nil)magit-popup-previous-winconf745,29109
(defun magit-invoke-popup (popup mode arg)magit-invoke-popup747,29158
(defun magit-invoke-popup-switch (event)magit-invoke-popup-switch783,30942
(defun magit-invoke-popup-option (event)magit-invoke-popup-option792,31271
(defun magit-invoke-popup-action (event)magit-invoke-popup-action808,31959
(defun magit-popup-set-variablemagit-popup-set-variable831,32929
(defun magit-popup-quit ()magit-popup-quit841,33298
(defun magit-popup-read-number (prompt &optional default)magit-popup-read-number852,33672
(defun magit-popup-set-default-arguments (arg)magit-popup-set-default-arguments860,33933
(defun magit-popup-save-default-arguments (arg)magit-popup-save-default-arguments872,34431
(defun magit-popup-toggle-show-common-commands ()magit-popup-toggle-show-common-commands886,34942
(defun magit-popup-help ()magit-popup-help896,35332
(defun magit-popup-manpage (topic arg)magit-popup-manpage924,36432
(defun magit-popup-describe-function (function)magit-popup-describe-function958,37875
(defun magit-popup-info ()magit-popup-info972,38389
(define-minor-mode magit-popup-help-modemagit-popup-help-mode984,38742
(define-derived-mode magit-popup-mode fundamental-mode "MagitPopup"magit-popup-mode996,39224
(defun magit-popup-default-setup (val def)magit-popup-default-setup1007,39614
(defun magit-popup-mode-setup (popup mode)magit-popup-mode-setup1021,40380
(defun magit-popup-mode-display-buffer (buffer mode)magit-popup-mode-display-buffer1037,41145
(defvar magit-refresh-popup-buffer-hook nilmagit-refresh-popup-buffer-hook1043,41396
(defun magit-refresh-popup-buffer ()magit-refresh-popup-buffer1050,41678
(defvar magit-popup-min-padding 3magit-popup-min-padding1077,42804
(defun magit-popup-insert-section (type &optional spec heading)magit-popup-insert-section1080,42907
(defun magit-popup-format-argument-button (type ev)magit-popup-format-argument-button1131,45305
(defun magit-popup-format-variable-button (type ev)magit-popup-format-variable-button1152,46383
(defun magit-popup-format-variablemagit-popup-format-variable1162,46848
(defun magit-popup-format-variable-1magit-popup-format-variable-11168,47102
(defun magit-popup-format-action-button (type ev)magit-popup-format-action-button1210,49068
(defun magit-popup-insert-command-section (type spec)magit-popup-insert-command-section1232,49986
(defun magit-popup-format-command-button (type elt)magit-popup-format-command-button1240,50290
(defun magit-popup-import-file-args (args files)magit-popup-import-file-args1248,50584
(defun magit-popup-export-file-args (args)magit-popup-export-file-args1253,50723
(defconst magit-popup-font-lock-keywordsmagit-popup-font-lock-keywords1262,50993

elpa/markdown-mode-20160830.820/markdown-mode-autoloads.el,0

elpa/markdown-mode-20160830.820/markdown-mode-pkg.el,249
(define-package "markdown-mode" "20160830.820" "Major mode for Markdown-formatted text" '((emacs "24") (cl-lib "0.5")) :url "http://jblevins.org/projects/markdown-mode/" :keywords '("markdown" "github flavored markdown" "itex"))"markdown-mode"1,0

elpa/markdown-mode-20160830.820/markdown-mode.el,38209
(defvar jit-lock-start)jit-lock-start948,48306
(defvar jit-lock-end)jit-lock-end949,48330
(defconst markdown-mode-version "2.1"markdown-mode-version957,48526
(defconst markdown-output-buffer-name "*markdown-output*"markdown-output-buffer-name960,48600
(defvar markdown-reference-label-history nilmarkdown-reference-label-history966,48801
(defvar markdown-live-preview-mode nilmarkdown-live-preview-mode969,48886
(defvar markdown-gfm-language-history nilmarkdown-gfm-language-history972,48991
(defvar markdown-mode-hook nilmarkdown-mode-hook978,49195
(defvar markdown-before-export-hook nilmarkdown-before-export-hook981,49270
(defvar markdown-after-export-hook nilmarkdown-after-export-hook986,49480
(defgroup markdown nilmarkdown990,49635
(defcustom markdown-command "markdown"markdown-command996,49819
(defcustom markdown-command-needs-filename nilmarkdown-command-needs-filename1001,49924
(defcustom markdown-open-command nilmarkdown-open-command1009,50248
(defcustom markdown-hr-stringsmarkdown-hr-strings1017,50511
(defcustom markdown-bold-underscore nilmarkdown-bold-underscore1032,51155
(defcustom markdown-italic-underscore nilmarkdown-italic-underscore1037,51308
(defcustom markdown-asymmetric-header nilmarkdown-asymmetric-header1042,51457
(defcustom markdown-indent-function 'markdown-indent-linemarkdown-indent-function1050,51749
(defcustom markdown-indent-on-enter tmarkdown-indent-on-enter1055,51877
(defcustom markdown-enable-wiki-links nilmarkdown-enable-wiki-links1064,52241
(defcustom markdown-wiki-link-alias-first tmarkdown-wiki-link-alias-first1073,52560
(defcustom markdown-wiki-link-search-parent-directories nilmarkdown-wiki-link-search-parent-directories1080,52793
(defcustom markdown-wiki-link-fontify-missing nilmarkdown-wiki-link-fontify-missing1087,53027
(defcustom markdown-uri-typesmarkdown-uri-types1096,53416
(defcustom markdown-enable-math nilmarkdown-enable-math1104,53750
(defcustom markdown-css-paths nilmarkdown-css-paths1113,54083
(defcustom markdown-content-type ""markdown-content-type1118,54204
(defcustom markdown-coding-system nilmarkdown-coding-system1125,54447
(defcustom markdown-xhtml-header-content ""markdown-xhtml-header-content1133,54785
(defcustom markdown-xhtml-standalone-regexpmarkdown-xhtml-standalone-regexp1138,54927
(defcustom markdown-link-space-sub-char "_"markdown-link-space-sub-char1144,55124
(defcustom markdown-reference-location 'headermarkdown-reference-location1149,55282
(defcustom markdown-footnote-location 'endmarkdown-footnote-location1156,55627
(defcustom markdown-unordered-list-item-prefix "  * "markdown-unordered-list-item-prefix1163,55956
(defcustom markdown-nested-imenu-heading-index nilmarkdown-nested-imenu-heading-index1168,56096
(defcustom markdown-make-gfm-checkboxes-buttons tmarkdown-make-gfm-checkboxes-buttons1176,56370
(defcustom markdown-use-pandoc-style-yaml-metadata nilmarkdown-use-pandoc-style-yaml-metadata1181,56510
(defcustom markdown-live-preview-window-functionmarkdown-live-preview-window-function1186,56667
(defcustom markdown-live-preview-delete-export 'delete-on-destroymarkdown-live-preview-delete-export1194,56934
(defcustom markdown-list-indent-width 4markdown-list-indent-width1202,57286
(defcustom markdown-gfm-additional-languages nilmarkdown-gfm-additional-languages1209,57479
(defcustom markdown-gfm-use-electric-backquote tmarkdown-gfm-use-electric-backquote1217,57822
(defcustom markdown-gfm-downcase-languages tmarkdown-gfm-downcase-languages1222,57982
(defconst markdown-regex-comment-startmarkdown-regex-comment-start1232,58262
(defconst markdown-regex-comment-endmarkdown-regex-comment-end1236,58365
(defconst markdown-regex-link-inlinemarkdown-regex-link-inline1240,58471
(defconst markdown-regex-link-referencemarkdown-regex-link-reference1252,59034
(defconst markdown-regex-reference-definitionmarkdown-regex-reference-definition1263,59624
(defconst markdown-regex-footnotemarkdown-regex-footnote1273,60044
(defconst markdown-regex-headermarkdown-regex-header1280,60329
(defconst markdown-regex-header-setextmarkdown-regex-header-setext1290,60863
(defconst markdown-regex-header-atxmarkdown-regex-header-atx1294,61012
(defconst markdown-regex-hrmarkdown-regex-hr1298,61160
(defconst markdown-regex-codemarkdown-regex-code1302,61315
(defconst markdown-regex-kbdmarkdown-regex-kbd1318,62013
(defconst markdown-regex-gfm-code-block-openmarkdown-regex-gfm-code-block-open1324,62232
(defconst markdown-regex-gfm-code-block-closemarkdown-regex-gfm-code-block-close1330,62515
(defconst markdown-regex-premarkdown-regex-pre1335,62700
(defconst markdown-regex-listmarkdown-regex-list1339,62819
(defconst markdown-regex-boldmarkdown-regex-bold1343,62957
(defconst markdown-regex-italicmarkdown-regex-italic1352,63435
(defconst markdown-regex-strike-throughmarkdown-regex-strike-through1362,63927
(defconst markdown-regex-gfm-italicmarkdown-regex-gfm-italic1371,64398
(defconst markdown-regex-blockquotemarkdown-regex-blockquote1379,64825
(defconst markdown-regex-line-breakmarkdown-regex-line-break1385,65014
(defconst markdown-regex-wiki-linkmarkdown-regex-wiki-link1389,65129
(defconst markdown-regex-urimarkdown-regex-uri1404,65820
(defconst markdown-regex-angle-urimarkdown-regex-angle-uri1408,65965
(defconst markdown-regex-emailmarkdown-regex-email1412,66156
(defsubst markdown-make-regex-link-generic ()markdown-make-regex-link-generic1416,66313
(defconst markdown-regex-gfm-checkboxmarkdown-regex-gfm-checkbox1424,66658
(defconst markdown-regex-block-separatormarkdown-regex-block-separator1429,66819
(defconst markdown-regex-math-inline-singlemarkdown-regex-math-inline-single1433,66957
(defconst markdown-regex-math-inline-doublemarkdown-regex-math-inline-double1439,67253
(defconst markdown-regex-math-displaymarkdown-regex-math-display1445,67553
(defsubst markdown-make-tilde-fence-regex (num-tildes &optional end-of-line)markdown-make-tilde-fence-regex1451,67832
(defconst markdown-regex-tilde-fence-beginmarkdown-regex-tilde-fence-begin1457,68136
(defconst markdown-regex-declarative-metadatamarkdown-regex-declarative-metadata1462,68330
(defconst markdown-regex-pandoc-metadatamarkdown-regex-pandoc-metadata1474,68654
(defconst markdown-regex-yaml-metadata-bordermarkdown-regex-yaml-metadata-border1478,68802
(defconst markdown-regex-yaml-pandoc-metadata-end-bordermarkdown-regex-yaml-pandoc-metadata-end-border1482,68923
(defsubst markdown-get-yaml-metadata-start-border ()markdown-get-yaml-metadata-start-border1486,69081
(defsubst markdown-get-yaml-metadata-end-border (_)markdown-get-yaml-metadata-end-border1492,69321
(defun markdown-syntax-propertize-extend-region (start end)markdown-syntax-propertize-extend-region1501,69673
(defun markdown-font-lock-extend-region-function (start end _)markdown-font-lock-extend-region-function1526,71046
(defun markdown-syntax-propertize-pre-blocks (start end)markdown-syntax-propertize-pre-blocks1535,71438
(defconst markdown-fenced-block-pairsmarkdown-fenced-block-pairs1585,73838
(defun markdown-text-property-at-point (prop)markdown-text-property-at-point1624,75849
(defsubst markdown-maybe-funcall-regexp (object &optional arg)markdown-maybe-funcall-regexp1627,75932
(defsubst markdown-get-start-fence-regexp ()markdown-get-start-fence-regexp1633,76174
(defun markdown-get-fenced-block-begin-properties ()markdown-get-fenced-block-begin-properties1642,76530
(defun markdown-get-fenced-block-end-properties ()markdown-get-fenced-block-end-properties1645,76661
(defun markdown-get-fenced-block-middle-properties ()markdown-get-fenced-block-middle-properties1648,76791
(defun markdown-find-previous-prop (prop &optional lim)markdown-find-previous-prop1651,76900
(defun markdown-find-next-prop (prop &optional lim)markdown-find-next-prop1665,77493
(defun markdown-min-of-seq (map-fn seq)markdown-min-of-seq1675,77923
(defun markdown-find-previous-block ()markdown-find-previous-block1686,78335
(defun markdown-get-fenced-block-from-start (prop)markdown-get-fenced-block-from-start1721,79734
(defun markdown-get-fenced-block-from-middle (prop)markdown-get-fenced-block-from-middle1750,81151
(defun markdown-get-fenced-block-from-end (prop)markdown-get-fenced-block-from-end1772,82031
(defun markdown-get-enclosing-fenced-block-construct (&optional pos)markdown-get-enclosing-fenced-block-construct1798,83274
(defun markdown-propertize-end-match (reg end correct-entry enclosed-text-start)markdown-propertize-end-match1829,84460
(defun markdown-syntax-propertize-fenced-block-constructs (start end)markdown-syntax-propertize-fenced-block-constructs1840,85060
(defun markdown-syntax-propertize-blockquotes (start end)markdown-syntax-propertize-blockquotes1904,88207
(defun markdown-syntax-propertize-yaml-metadata (start end)markdown-syntax-propertize-yaml-metadata1914,88636
(defun markdown-syntax-propertize-headings (start end)markdown-syntax-propertize-headings1928,89344
(defun markdown-syntax-propertize-comments (start end)markdown-syntax-propertize-comments1943,90077
(defvar markdown--syntax-propertiesmarkdown--syntax-properties1968,91140
(defun markdown-syntax-propertize (start end)markdown-syntax-propertize1994,92077
(defvar markdown-italic-face 'markdown-italic-facemarkdown-italic-face2010,92715
(defvar markdown-bold-face 'markdown-bold-facemarkdown-bold-face2013,92806
(defvar markdown-strike-through-face 'markdown-strike-through-facemarkdown-strike-through-face2016,92891
(defvar markdown-header-delimiter-face 'markdown-header-delimiter-facemarkdown-header-delimiter-face2019,93006
(defvar markdown-header-rule-face 'markdown-header-rule-facemarkdown-header-rule-face2022,93133
(defvar markdown-header-face 'markdown-header-facemarkdown-header-face2025,93245
(defvar markdown-header-face-1 'markdown-header-face-1markdown-header-face-12028,93342
(defvar markdown-header-face-2 'markdown-header-face-2markdown-header-face-22031,93441
(defvar markdown-header-face-3 'markdown-header-face-3markdown-header-face-32034,93540
(defvar markdown-header-face-4 'markdown-header-face-4markdown-header-face-42037,93639
(defvar markdown-header-face-5 'markdown-header-face-5markdown-header-face-52040,93738
(defvar markdown-header-face-6 'markdown-header-face-6markdown-header-face-62043,93837
(defvar markdown-inline-code-face 'markdown-inline-code-facemarkdown-inline-code-face2046,93936
(defvar markdown-list-face 'markdown-list-facemarkdown-list-face2049,94037
(defvar markdown-blockquote-face 'markdown-blockquote-facemarkdown-blockquote-face2052,94125
(defvar markdown-pre-face 'markdown-pre-facemarkdown-pre-face2055,94223
(defvar markdown-language-keyword-face 'markdown-language-keyword-facemarkdown-language-keyword-face2058,94314
(defvar markdown-link-face 'markdown-link-facemarkdown-link-face2061,94446
(defvar markdown-missing-link-face 'markdown-missing-link-facemarkdown-missing-link-face2064,94527
(defvar markdown-reference-face 'markdown-reference-facemarkdown-reference-face2067,94661
(defvar markdown-footnote-face 'markdown-footnote-facemarkdown-footnote-face2070,94756
(defvar markdown-url-face 'markdown-url-facemarkdown-url-face2073,94860
(defvar markdown-link-title-face 'markdown-link-title-facemarkdown-link-title-face2076,94938
(defvar markdown-line-break-face 'markdown-line-break-facemarkdown-line-break-face2079,95047
(defvar markdown-comment-face 'markdown-comment-facemarkdown-comment-face2082,95151
(defvar markdown-math-face 'markdown-math-facemarkdown-math-face2085,95246
(defvar markdown-metadata-key-face 'markdown-metadata-key-facemarkdown-metadata-key-face2088,95339
(defvar markdown-metadata-value-face 'markdown-metadata-value-facemarkdown-metadata-value-face2091,95444
(defvar markdown-gfm-checkbox-face 'markdown-gfm-checkbox-facemarkdown-gfm-checkbox-face2094,95555
(defvar markdown-highlight-face 'markdown-highlight-facemarkdown-highlight-face2097,95661
(defvar markdown-markup-face 'markdown-markup-facemarkdown-markup-face2100,95765
(defgroup markdown-faces nilmarkdown-faces2103,95860
(defface markdown-italic-facemarkdown-italic-face2108,95958
(defface markdown-bold-facemarkdown-bold-face2113,96119
(defface markdown-strike-through-facemarkdown-strike-through-face2118,96274
(defface markdown-markup-facemarkdown-markup-face2123,96440
(defface markdown-header-rule-facemarkdown-header-rule-face2128,96583
(defface markdown-header-delimiter-facemarkdown-header-delimiter-face2133,96719
(defface markdown-inline-code-facemarkdown-inline-code-face2138,96869
(defface markdown-list-facemarkdown-list-face2143,97001
(defface markdown-blockquote-facemarkdown-blockquote-face2148,97129
(defface markdown-pre-facemarkdown-pre-face2153,97263
(defface markdown-language-keyword-facemarkdown-language-keyword-face2158,97393
(defface markdown-link-facemarkdown-link-face2163,97547
(defface markdown-missing-link-facemarkdown-missing-link-face2168,97665
(defface markdown-reference-facemarkdown-reference-face2173,97799
(defface markdown-footnote-facemarkdown-footnote-face2178,97930
(defface markdown-url-facemarkdown-url-face2183,98061
(defface markdown-link-title-facemarkdown-link-title-face2188,98176
(defface markdown-line-break-facemarkdown-line-break-face2193,98316
(defface markdown-comment-facemarkdown-comment-face2198,98465
(defface markdown-math-facemarkdown-math-face2203,98594
(defface markdown-metadata-key-facemarkdown-metadata-key-face2208,98723
(defface markdown-metadata-value-facemarkdown-metadata-value-face2213,98863
(defface markdown-gfm-checkbox-facemarkdown-gfm-checkbox-face2218,99000
(defface markdown-highlight-facemarkdown-highlight-face2223,99135
(defcustom markdown-header-scaling nilmarkdown-header-scaling2228,99258
(defcustom markdown-header-scaling-valuesmarkdown-header-scaling-values2241,99747
(defun markdown-make-header-faces ()markdown-make-header-faces2252,100150
(defun markdown-update-header-faces (&optional scaling scaling-values)markdown-update-header-faces2278,101146
(defun markdown-syntactic-face (state)markdown-syntactic-face2290,101811
(defvar markdown-mode-font-lock-keywords-basicmarkdown-mode-font-lock-keywords-basic2298,102066
(defvar markdown-mode-font-lock-keywords nilmarkdown-mode-font-lock-keywords2398,108713
(defvar markdown-footnote-counter 0markdown-footnote-counter2404,108912
(defconst markdown-footnote-charsmarkdown-footnote-chars2408,109040
(defconst markdown-regex-footnote-definitionmarkdown-regex-footnote-definition2412,109181
(defun markdown-replace-regexp-in-string (regexp rep string)markdown-replace-regexp-in-string2419,109465
(defun markdown-use-buttons-p ()markdown-use-buttons-p2438,110157
(defun markdown-cur-line-blank-p ()markdown-cur-line-blank-p2472,111211
(defun markdown-prev-line-blank-p ()markdown-prev-line-blank-p2478,111382
(defun markdown-next-line-blank-p ()markdown-next-line-blank-p2486,111691
(defun markdown-prev-line-indent ()markdown-prev-line-indent2494,111984
(defun markdown-next-line-indent ()markdown-next-line-indent2503,112293
(defun markdown-cur-non-list-indent ()markdown-cur-non-list-indent2512,112578
(defun markdown-prev-non-list-indent ()markdown-prev-non-list-indent2521,112935
(defun markdown-new-baseline-p ()markdown-new-baseline-p2527,113124
(defun markdown-search-backward-baseline ()markdown-search-backward-baseline2537,113488
(defun markdown-update-list-levels (marker indent levels)markdown-update-list-levels2552,113976
(defun markdown-calculate-list-levels ()markdown-calculate-list-levels2582,115278
(defun markdown-prev-list-item (level)markdown-prev-list-item2612,116632
(defun markdown-next-list-item (level)markdown-next-list-item2655,118222
(defun markdown-cur-list-item-end (level)markdown-cur-list-item-end2700,119873
(defun markdown-cur-list-item-bounds ()markdown-cur-list-item-bounds2735,121244
(defun markdown-bounds-of-thing-at-point (thing)markdown-bounds-of-thing-at-point2759,122301
(defun markdown-reference-definition (reference)markdown-reference-definition2776,123039
(defun markdown-get-defined-references ()markdown-get-defined-references2794,123881
(defun markdown-code-at-point-p ()markdown-code-at-point-p2804,124274
(defun markdown-code-block-at-pos (pos)markdown-code-block-at-pos2830,125338
(defun markdown-code-block-at-point ()markdown-code-block-at-point2842,125923
(defun markdown-range-property-any (begin end prop prop-values)markdown-range-property-any2851,126262
(defun markdown-range-properties-exist (begin end props)markdown-range-properties-exist2868,127019
(defun markdown-match-inline-generic (regex last)markdown-match-inline-generic2877,127294
(defun markdown-match-code (last)markdown-match-code2888,127814
(defun markdown-match-bold (last)markdown-match-bold2899,128285
(defun markdown-match-italic (last)markdown-match-italic2916,129023
(defun markdown-match-math-generic (regex last)markdown-match-math-generic2942,130271
(defun markdown-match-math-single (last)markdown-match-math-single2959,131072
(defun markdown-match-math-double (last)markdown-match-math-double2963,131240
(defun markdown-match-propertized-text (property last)markdown-match-propertized-text2967,131410
(defun markdown-match-pre-blocks (last)markdown-match-pre-blocks2983,132047
(defun markdown-match-gfm-code-blocks (last)markdown-match-gfm-code-blocks2989,132265
(defun markdown-match-gfm-open-code-blocks (last)markdown-match-gfm-open-code-blocks2995,132501
(defun markdown-match-gfm-close-code-blocks (last)markdown-match-gfm-close-code-blocks2998,132620
(defun markdown-match-fenced-code-blocks (last)markdown-match-fenced-code-blocks3001,132738
(defun markdown-match-fenced-start-code-block (last)markdown-match-fenced-start-code-block3005,132904
(defun markdown-match-fenced-end-code-block (last)markdown-match-fenced-end-code-block3008,133028
(defun markdown-match-blockquotes (last)markdown-match-blockquotes3011,133148
(defun markdown-match-heading-1-setext (last)markdown-match-heading-1-setext3017,133373
(defun markdown-match-heading-2-setext (last)markdown-match-heading-2-setext3021,133543
(defun markdown-match-heading-1-atx (last)markdown-match-heading-1-atx3025,133713
(defun markdown-match-heading-2-atx (last)markdown-match-heading-2-atx3029,133874
(defun markdown-match-heading-3-atx (last)markdown-match-heading-3-atx3033,134035
(defun markdown-match-heading-4-atx (last)markdown-match-heading-4-atx3037,134196
(defun markdown-match-heading-5-atx (last)markdown-match-heading-5-atx3041,134357
(defun markdown-match-heading-6-atx (last)markdown-match-heading-6-atx3045,134518
(defun markdown-match-hr (last)markdown-match-hr3049,134679
(defun markdown-match-comments (last)markdown-match-comments3062,135099
(defun markdown-get-match-boundaries (start-header end-header last &optional pos)markdown-get-match-boundaries3071,135405
(defvar markdown-conditional-search-function #'re-search-forwardmarkdown-conditional-search-function3085,135937
(defun markdown-search-until-condition (condition &rest args)markdown-search-until-condition3089,136134
(defun markdown-match-generic-metadatamarkdown-match-generic-metadata3095,136335
(defun markdown-match-declarative-metadata (last)markdown-match-declarative-metadata3132,138136
(defun markdown-match-pandoc-metadata (last)markdown-match-pandoc-metadata3136,138320
(defun markdown-match-yaml-metadata-begin (last)markdown-match-yaml-metadata-begin3140,138489
(defun markdown-match-yaml-metadata-end (last)markdown-match-yaml-metadata-end3143,138611
(defun markdown-match-yaml-metadata-key (last)markdown-match-yaml-metadata-key3146,138729
(defvar markdown-mode-syntax-tablemarkdown-mode-syntax-table3152,138925
(defun markdown-ensure-blank-line-before ()markdown-ensure-blank-line-before3161,139188
(defun markdown-ensure-blank-line-after ()markdown-ensure-blank-line-after3166,139411
(defun markdown-wrap-or-insert (s1 s2 &optional thing beg end)markdown-wrap-or-insert3173,139694
(defun markdown-point-after-unwrap (cur prefix suffix)markdown-point-after-unwrap3214,141121
(defun markdown-unwrap-thing-at-point (regexp all text)markdown-unwrap-thing-at-point3227,141700
(defun markdown-unwrap-things-in-region (beg end regexp all text)markdown-unwrap-things-in-region3248,142765
(defun markdown-insert-hr (arg)markdown-insert-hr3263,143492
(defun markdown-insert-bold ()markdown-insert-bold3284,144419
(defun markdown-insert-italic ()markdown-insert-italic3303,145375
(defun markdown-insert-strike-through ()markdown-insert-strike-through3322,146356
(defun markdown-insert-code ()markdown-insert-code3341,147370
(defun markdown-insert-kbd ()markdown-insert-kbd3359,148202
(defun markdown-insert-link ()markdown-insert-link3376,148993
(defun markdown-insert-reference-link (text label &optional url title)markdown-insert-reference-link3388,149567
(defun markdown-insert-reference-definition (label &optional url title)markdown-insert-reference-definition3403,150299
(defun markdown-insert-reference-link-dwim ()markdown-insert-reference-link-dwim3431,151370
(defun markdown-insert-uri ()markdown-insert-uri3474,153643
(defun markdown-insert-wiki-link ()markdown-insert-wiki-link3492,154480
(defun markdown-insert-image (&optional arg)markdown-insert-image3510,155292
(defun markdown-insert-reference-image ()markdown-insert-reference-image3525,156051
(defun markdown-remove-header ()markdown-remove-header3531,156265
(defun markdown-insert-header (&optional level text setext)markdown-insert-header3539,156594
(defun markdown-insert-header-dwim (&optional arg setext)markdown-insert-header-dwim3585,158577
(defun markdown-insert-header-setext-dwim (&optional arg)markdown-insert-header-setext-dwim3632,160565
(defun markdown-insert-header-atx-1 ()markdown-insert-header-atx-13638,160826
(defun markdown-insert-header-atx-2 ()markdown-insert-header-atx-23644,161009
(defun markdown-insert-header-atx-3 ()markdown-insert-header-atx-33650,161190
(defun markdown-insert-header-atx-4 ()markdown-insert-header-atx-43656,161373
(defun markdown-insert-header-atx-5 ()markdown-insert-header-atx-53662,161555
(defun markdown-insert-header-atx-6 ()markdown-insert-header-atx-63668,161737
(defun markdown-insert-header-setext-1 ()markdown-insert-header-setext-13674,161920
(defun markdown-insert-header-setext-2 ()markdown-insert-header-setext-23680,162108
(defun markdown-blockquote-indentation (loc)markdown-blockquote-indentation3686,162297
(defun markdown-insert-blockquote ()markdown-insert-blockquote3696,162670
(defun markdown-block-region (beg end prefix)markdown-block-region3707,163109
(defun markdown-blockquote-region (beg end)markdown-blockquote-region3734,164094
(defun markdown-pre-indentation (loc)markdown-pre-indentation3742,164387
(defun markdown-insert-pre ()markdown-insert-pre3752,164758
(defun markdown-pre-region (beg end)markdown-pre-region3763,165171
(defun markdown-electric-backquote (arg)markdown-electric-backquote3770,165458
(defconst markdown-gfm-recognized-languagesmarkdown-gfm-recognized-languages3781,165939
(defvar markdown-gfm-used-languages nilmarkdown-gfm-used-languages3840,170286
(defun markdown-trim-whitespace (str)markdown-trim-whitespace3844,170430
(defun markdown-clean-language-string (str)markdown-clean-language-string3848,170570
(defun markdown-validate-language-string (widget)markdown-validate-language-string3852,170703
(defun markdown-gfm-get-corpus ()markdown-gfm-get-corpus3858,170946
(defun markdown-gfm-add-used-language (lang)markdown-gfm-add-used-language3867,171337
(defun markdown-insert-gfm-code-block (&optional lang)markdown-insert-gfm-code-block3872,171532
(defun markdown-gfm-parse-buffer-for-languages (&optional buffer)markdown-gfm-parse-buffer-for-languages3913,173209
(defun markdown-footnote-counter-inc ()markdown-footnote-counter-inc3934,174109
(defun markdown-insert-footnote ()markdown-insert-footnote3946,174684
(defun markdown-footnote-text-find-new-location ()markdown-footnote-text-find-new-location3958,175116
(defun markdown-footnote-kill ()markdown-footnote-kill3965,175459
(defun markdown-footnote-delete-marker ()markdown-footnote-delete-marker4003,177160
(defun markdown-footnote-kill-text ()markdown-footnote-kill-text4013,177569
(defun markdown-footnote-goto-text ()markdown-footnote-goto-text4031,178308
(defun markdown-footnote-return ()markdown-footnote-return4042,178689
(defun markdown-footnote-find-marker (id)markdown-footnote-find-marker4054,179105
(defun markdown-footnote-find-text (id)markdown-footnote-find-text4065,179516
(defun markdown-footnote-marker-positions ()markdown-footnote-marker-positions4076,179936
(defun markdown-footnote-text-positions ()markdown-footnote-text-positions4091,180681
(defun markdown-kill-thing-at-point ()markdown-kill-thing-at-point4129,182400
(defun markdown-indent-find-next-position (cur-pos positions)markdown-indent-find-next-position4208,185966
(defun markdown-exdent-find-next-position (cur-pos positions)markdown-exdent-find-next-position4216,186289
(defun markdown-indent-line ()markdown-indent-line4225,186598
(defun markdown-calc-indents ()markdown-calc-indents4250,187713
(defun markdown-enter-key ()markdown-enter-key4288,189152
(defun markdown-exdent-or-delete (arg)markdown-exdent-or-delete4295,189344
(defun markdown-find-leftmost-column (beg end)markdown-find-leftmost-column4311,190071
(defun markdown-indent-region (beg end arg)markdown-indent-region4324,190448
(defun markdown-exdent-region (beg end)markdown-exdent-region4337,191092
(defconst markdown-complete-alistmarkdown-complete-alist4345,191348
(defun markdown-incomplete-atx-p ()markdown-incomplete-atx-p4351,191622
(defun markdown-complete-atx ()markdown-complete-atx4371,192656
(defun markdown-incomplete-setext-p ()markdown-incomplete-setext-p4395,193722
(defun markdown-complete-setext ()markdown-complete-setext4403,194128
(defun markdown-incomplete-hr-p ()markdown-incomplete-hr-p4418,194825
(defun markdown-complete-hr ()markdown-complete-hr4423,195049
(defun markdown-complete ()markdown-complete4434,195464
(defun markdown-complete-at-point ()markdown-complete-at-point4443,195834
(defun markdown-complete-region (beg end)markdown-complete-region4460,196438
(defun markdown-complete-buffer ()markdown-complete-buffer4485,197488
(defun markdown-cycle-atx (arg &optional remove)markdown-cycle-atx4493,197740
(defun markdown-cycle-setext (arg &optional remove)markdown-cycle-setext4517,198746
(defun markdown-cycle-hr (arg &optional remove)markdown-cycle-hr4538,199645
(defun markdown-cycle-bold ()markdown-cycle-bold4556,200403
(defun markdown-cycle-italic ()markdown-cycle-italic4565,200764
(defvar markdown-mode-mapmarkdown-mode-map4577,201211
(defvar gfm-mode-mapgfm-mode-map4674,206517
(defun markdown-imenu-create-nested-index ()markdown-imenu-create-nested-index4764,209932
(defun markdown-imenu-create-flat-index ()markdown-imenu-create-flat-index4814,212128
(defun markdown-reference-goto-definition ()markdown-reference-goto-definition4836,213094
(defun markdown-reference-find-links (reference)markdown-reference-find-links4849,213668
(defun markdown-get-undefined-refs ()markdown-get-undefined-refs4869,214607
(defconst markdown-reference-check-buffermarkdown-reference-check-buffer4894,215842
(defun markdown-reference-check-buffer (&optional buffer-name)markdown-reference-check-buffer4900,216078
(defconst markdown-reference-links-buffermarkdown-reference-links-buffer4914,216663
(defun markdown-reference-links-buffer (&optional buffer-name)markdown-reference-links-buffer4919,216868
(defun markdown-insert-undefined-reference-button (reference oldbuf)markdown-insert-undefined-reference-button4977,219319
(defun markdown-insert-link-button (link oldbuf)markdown-insert-link-button5006,220512
(defun markdown-reference-goto-link (&optional reference)markdown-reference-goto-link5023,221183
(defun markdown-check-refs (&optional silent)markdown-check-refs5046,222191
(defun markdown-insert-list-item (&optional arg)markdown-insert-list-item5074,223242
(defun markdown-move-list-item-up ()markdown-move-list-item-up5172,227702
(defun markdown-move-list-item-down ()markdown-move-list-item-down5191,228440
(defun markdown-demote-list-item (&optional bounds)markdown-demote-list-item5209,229154
(defun markdown-promote-list-item (&optional bounds)markdown-promote-list-item5222,229712
(defun markdown-cleanup-list-numbers-level (&optional pfx)markdown-cleanup-list-numbers-level5241,230570
(defun markdown-cleanup-list-numbers ()markdown-cleanup-list-numbers5286,231894
(defun markdown-beginning-of-defun (&optional arg)markdown-beginning-of-defun5296,232170
(defun markdown-end-of-defun (&optional arg)markdown-end-of-defun5307,232605
(defun markdown-beginning-of-block ()markdown-beginning-of-block5322,233165
(defun markdown-end-of-block ()markdown-end-of-block5329,233425
(defun markdown-forward-paragraph (arg)markdown-forward-paragraph5342,233822
(defun markdown-backward-paragraph (arg)markdown-backward-paragraph5354,234236
(defun markdown-end-of-block-element ()markdown-end-of-block-element5366,234666
(defun markdown-next-link ()markdown-next-link5379,235186
(defun markdown-previous-link ()markdown-previous-link5400,236135
(defun markdown-next-heading ()markdown-next-heading5415,236723
(defun markdown-previous-heading ()markdown-previous-heading5423,236992
(defun markdown-move-heading-common (move-fn &optional arg)markdown-move-heading-common5434,237360
(defun markdown-next-visible-heading (arg)markdown-next-visible-heading5445,237823
(defun markdown-previous-visible-heading (arg)markdown-previous-visible-heading5452,238117
(defun markdown-forward-same-level (arg)markdown-forward-same-level5459,238427
(defun markdown-back-to-heading-over-code-block (&optional invisible-ok)markdown-back-to-heading-over-code-block5465,238680
(defun markdown-backward-same-level (arg)markdown-backward-same-level5484,239448
(defun markdown-up-heading (arg)markdown-up-heading5498,239976
(defun markdown-back-to-heading (&optional invisible-ok)markdown-back-to-heading5504,240203
(defalias 'markdown-end-of-heading 'outline-end-of-heading)markdown-end-of-heading5509,240482
(defun markdown-on-heading-p ()markdown-on-heading-p5511,240543
(defun markdown-end-of-subtree (&optional invisible-OK)markdown-end-of-subtree5515,240679
(defun markdown-outline-fix-visibility ()markdown-outline-fix-visibility5536,241415
(defvar markdown-cycle-global-status 1)markdown-cycle-global-status5562,242670
(defvar markdown-cycle-subtree-status nil)markdown-cycle-subtree-status5563,242710
(defun markdown-next-preface ()markdown-next-preface5565,242754
(defun markdown-show-entry ()markdown-show-entry5575,243152
(defun markdown-cycle (&optional arg)markdown-cycle5586,243529
(defun markdown-shifttab ()markdown-shifttab5662,246249
(defun markdown-outline-level ()markdown-outline-level5668,246387
(defun markdown-promote-subtree (&optional arg)markdown-promote-subtree5676,246622
(defun markdown-demote-subtree ()markdown-demote-subtree5699,247707
(defun markdown-move-subtree-up ()markdown-move-subtree-up5704,247838
(defun markdown-move-subtree-down ()markdown-move-subtree-down5709,247970
(defun markdown-move-up ()markdown-move-up5717,248191
(defun markdown-move-down ()markdown-move-down5723,248326
(defun markdown-promote ()markdown-promote5729,248469
(defun markdown-demote ()markdown-demote5757,249438
(defun markdown (&optional output-buffer-name)markdown5788,250486
(defun markdown-standalone (&optional output-buffer-name)markdown-standalone5823,251926
(defun markdown-other-window (&optional output-buffer-name)markdown-other-window5836,252426
(defun markdown-output-standalone-p ()markdown-output-standalone-p5844,252745
(defun markdown-stylesheet-link-string (stylesheet-path)markdown-stylesheet-link-string5855,253170
(defun markdown-add-xhtml-header-and-footer (title)markdown-add-xhtml-header-and-footer5860,253352
(defun markdown-preview (&optional output-buffer-name)markdown-preview5894,254739
(defun markdown-export-file-name (&optional extension)markdown-export-file-name5902,255073
(defun markdown-export (&optional output-file)markdown-export5923,255796
(defun markdown-export-and-preview ()markdown-export-and-preview5950,256933
(defvar markdown-live-preview-buffer nilmarkdown-live-preview-buffer5955,257105
(defvar markdown-live-preview-source-buffer nilmarkdown-live-preview-source-buffer5959,257285
(defvar markdown-live-preview-currently-exporting nil)markdown-live-preview-currently-exporting5964,257515
(defun markdown-live-preview-get-filename ()markdown-live-preview-get-filename5966,257571
(defun markdown-live-preview-window-eww (file)markdown-live-preview-window-eww5970,257729
(defun markdown-visual-lines-between-points (beg end)markdown-visual-lines-between-points5979,258034
(defun markdown-live-preview-window-serialize (buf)markdown-live-preview-window-serialize5988,258343
(defun markdown-get-point-back-lines (pt num-lines)markdown-get-point-back-lines6005,259018
(defun markdown-live-preview-window-deserialize (window-posns)markdown-live-preview-window-deserialize6015,259424
(defun markdown-live-preview-export ()markdown-live-preview-export6031,260170
(defun markdown-live-preview-remove ()markdown-live-preview-remove6065,261751
(defun markdown-display-buffer-other-window (buf)markdown-display-buffer-other-window6075,262215
(defun markdown-live-preview-if-markdown ()markdown-live-preview-if-markdown6080,262369
(defun markdown-live-preview-remove-on-kill ()markdown-live-preview-remove-on-kill6089,262741
(defun markdown-live-preview-switch-to-output ()markdown-live-preview-switch-to-output6098,263140
(defun markdown-live-preview-re-export ()markdown-live-preview-re-export6107,263490
(defun markdown-open ()markdown-open6117,263906
(defun markdown-kill-ring-save ()markdown-kill-ring-save6127,264277
(defun markdown-link-p ()markdown-link-p6138,264614
(defun markdown-link-link ()markdown-link-link6149,265130
(defun markdown-follow-link-at-point ()markdown-follow-link-at-point6167,265942
(defun markdown-wiki-link-p ()markdown-wiki-link-p6192,266996
(defun markdown-wiki-link-link ()markdown-wiki-link-link6207,267768
(defun markdown-wiki-link-alias ()markdown-wiki-link-alias6215,268111
(defun markdown-convert-wiki-link-to-filename (name)markdown-convert-wiki-link-to-filename6223,268465
(defun markdown-follow-wiki-link (name &optional other)markdown-follow-wiki-link6252,269811
(defun markdown-follow-wiki-link-at-point (&optional arg)markdown-follow-wiki-link-at-point6265,270347
(defun markdown-highlight-wiki-link (from to face)markdown-highlight-wiki-link6274,270709
(defun markdown-unfontify-region-wiki-links (from to)markdown-unfontify-region-wiki-links6278,270887
(defun markdown-fontify-region-wiki-links (from to)markdown-fontify-region-wiki-links6288,271395
(defun markdown-extend-changed-region (from to)markdown-extend-changed-region6307,272293
(defun markdown-check-change-for-wiki-link (from to)markdown-check-change-for-wiki-link6325,272934
(defun markdown-check-change-for-wiki-link-after-change (from to _)markdown-check-change-for-wiki-link-after-change6359,274490
(defun markdown-fontify-buffer-wiki-links ()markdown-fontify-buffer-wiki-links6364,274748
(defun markdown-follow-thing-at-point (arg)markdown-follow-thing-at-point6372,275002
(defun markdown-jump ()markdown-jump6387,275579
(defun markdown-compress-whitespace-string (str)markdown-compress-whitespace-string6406,276350
(defun markdown-line-number-at-pos (&optional pos)markdown-line-number-at-pos6413,276732
(defun markdown-inside-link-p ()markdown-inside-link-p6425,277160
(defun markdown-line-is-reference-definition-p ()markdown-line-is-reference-definition-p6429,277300
(defun markdown-adaptive-fill-function ()markdown-adaptive-fill-function6436,277582
(defun markdown-fill-forward-paragraph-function (&optional arg)markdown-fill-forward-paragraph-function6454,278188
(defun markdown-reload-extensions ()markdown-reload-extensions6471,278784
(defun markdown-handle-local-variables ()markdown-handle-local-variables6491,279628
(defun markdown-toggle-wiki-links (&optional arg)markdown-toggle-wiki-links6502,280179
(defun markdown-setup-wiki-link-hooks ()markdown-setup-wiki-link-hooks6516,280754
(defun markdown-mode-font-lock-keywords-wiki-links ()markdown-mode-font-lock-keywords-wiki-links6539,281889
(defun markdown-toggle-math (&optional arg)markdown-toggle-math6552,282463
(defun markdown-mode-font-lock-keywords-math ()markdown-mode-font-lock-keywords-math6567,283091
(define-button-type 'markdown-gfm-checkbox-buttonmarkdown-gfm-checkbox-button6589,284186
(defun markdown-toggle-gfm-checkbox (button)markdown-toggle-gfm-checkbox6595,284371
(defun markdown-make-gfm-checkboxes-buttons (start end)markdown-make-gfm-checkboxes-buttons6605,284700
(defun markdown-gfm-checkbox-after-change-function (beg end _)markdown-gfm-checkbox-after-change-function6616,285163
(defvar markdown-inline-image-overlays nil)markdown-inline-image-overlays6629,285705
(defun markdown-remove-inline-images ()markdown-remove-inline-images6632,285811
(defun markdown-display-inline-images ()markdown-display-inline-images6640,286129
(defun markdown-toggle-inline-images ()markdown-toggle-inline-images6666,287181
(defun markdown-show-version ()markdown-show-version6676,287483
(define-derived-mode markdown-mode text-mode "Markdown"markdown-mode6682,287657
(defvar gfm-mode-hook nilgfm-mode-hook6806,292787
(defvar gfm-font-lock-keywordsgfm-font-lock-keywords6809,292852
(define-derived-mode gfm-mode markdown-mode "GFM"gfm-mode6821,293347
(define-minor-mode markdown-live-preview-modemarkdown-live-preview-mode6831,293736

elpa/material-theme-20160516.844/material-light-theme.el,48
(deftheme material-lightmaterial-light45,1725

elpa/material-theme-20160516.844/material-theme-autoloads.el,0

elpa/material-theme-20160516.844/material-theme-pkg.el,129
(define-package "material-theme" "20160516.844" "A Theme based on the colors of the Google Material Design""material-theme"1,0

elpa/material-theme-20160516.844/material-theme.el,36
(deftheme materialmaterial45,1713

elpa/meta-presenter-20150501.410/meta-presenter-autoloads.el,0

elpa/meta-presenter-20150501.410/meta-presenter-pkg.el,205
(define-package "meta-presenter" "20150501.410" "A simple multi-file presentation tool for Emacs" 'nil :url "http://ismail.teamfluxion.com" :keywords '("productivity" "presentation"))"meta-presenter"1,0

elpa/meta-presenter-20150501.410/meta-presenter.el,2201
(defvar meta-presenter--current-directory)meta-presenter--current-directory71,2423
(defvar meta-presenter--slide-count)meta-presenter--slide-count73,2467
(defvar meta-presenter--current-slide-number)meta-presenter--current-slide-number75,2505
(defvar meta-presenter--progress-percentage)meta-presenter--progress-percentage77,2552
(defvar meta-presenter--index-file)meta-presenter--index-file79,2598
(defvar meta-presenter-enable-animationsmeta-presenter-enable-animations81,2635
(defun meta-presenter--increment (n)meta-presenter--increment84,2684
(defun meta-presenter--decrement (n)meta-presenter--decrement88,2756
(defun meta-presenter--identity (n)meta-presenter--identity93,2835
(defun meta-presenter-start-presentation ()meta-presenter-start-presentation98,2914
(defun meta-presenter-move-to-next-slide ()meta-presenter-move-to-next-slide118,3632
(defun meta-presenter-move-to-previous-slide ()meta-presenter-move-to-previous-slide126,3934
(defun meta-presenter-reload-current-slide ()meta-presenter-reload-current-slide134,4229
(defun meta-presenter--move-to-slide-at-delta (delta)meta-presenter--move-to-slide-at-delta139,4364
(defun meta-presenter--paste-progress (delta)meta-presenter--paste-progress160,5486
(defun meta-presenter--paste-slide-contents (slide-name)meta-presenter--paste-slide-contents174,5962
(defun meta-presenter--slide-down ()meta-presenter--slide-down178,6085
(defun meta-presenter--fill-in ()meta-presenter--fill-in188,6643
(defun meta-presenter--slide-up ()meta-presenter--slide-up196,7078
(defun meta-presenter--set-current-slide-number (n)meta-presenter--set-current-slide-number204,7459
(defun meta-presenter--get-next-slide-number ()meta-presenter--get-next-slide-number209,7606
(defun meta-presenter--get-previous-slide-number ()meta-presenter--get-previous-slide-number213,7754
(defun meta-presenter--get-next-slide-name ()meta-presenter--get-next-slide-name217,7910
(defun meta-presenter--get-slide-name (n)meta-presenter--get-slide-name223,8206
(defun meta-presenter--get-previous-slide-name ()meta-presenter--get-previous-slide-name229,8480
(define-minor-mode meta-presenter-modemeta-presenter-mode236,8803

elpa/monokai-theme-20160515.1404/monokai-theme-autoloads.el,0

elpa/monokai-theme-20160515.1404/monokai-theme-pkg.el,162
(define-package "monokai-theme" "20160515.1404" "A fruity color theme for Emacs." 'nil :url "http://github.com/oneKelvinSmith/monokai-emacs")"monokai-theme"1,0

elpa/monokai-theme-20160515.1404/monokai-theme.el,606
(deftheme monokai "The Monokai colour theme")monokai54,1888
(defgroup monokai nilmonokai56,1935
(defcustom monokai-distinct-fringe-background nilmonokai-distinct-fringe-background61,2070
(defcustom monokai-use-variable-pitch tmonokai-use-variable-pitch67,2270
(defcustom monokai-height-minus-1 0.8monokai-height-minus-172,2405
(defcustom monokai-height-plus-1 1.1monokai-height-plus-177,2497
(defcustom monokai-height-plus-2 1.15monokai-height-plus-282,2588
(defcustom monokai-height-plus-3 1.2monokai-height-plus-387,2680
(defcustom monokai-height-plus-4 1.3monokai-height-plus-492,2771

elpa/multi-term-20160619.233/multi-term-autoloads.el,0

elpa/multi-term-20160619.233/multi-term-pkg.el,224
(define-package "multi-term" "20160619.233" "Managing multiple terminal buffers in Emacs." 'nil :url "http://www.emacswiki.org/emacs/download/multi-term.el" :keywords '("term" "terminal" "multiple buffer"))"multi-term"1,0

elpa/multi-term-20160619.233/multi-term.el,4780
(defgroup multi-term nilmulti-term280,9775
(defcustom multi-term-program nilmulti-term-program284,9841
(defcustom multi-term-program-switches nilmulti-term-program-switches290,9997
(defcustom multi-term-try-create tmulti-term-try-create295,10138
(defcustom multi-term-default-dir "~/"multi-term-default-dir303,10394
(defcustom multi-term-buffer-name "terminal"multi-term-buffer-name308,10544
(defcustom multi-term-scroll-show-maximum-output nilmulti-term-scroll-show-maximum-output313,10664
(defcustom multi-term-scroll-to-bottom-on-output nilmulti-term-scroll-to-bottom-on-output321,10944
(defcustom multi-term-switch-after-close 'NEXTmulti-term-switch-after-close333,11367
(defcustom term-unbind-key-listterm-unbind-key-list341,11715
(defcustom term-bind-key-alistterm-bind-key-alist347,11873
(defcustom multi-term-dedicated-window-height 14multi-term-dedicated-window-height374,12760
(defcustom multi-term-dedicated-max-window-height 30multi-term-dedicated-max-window-height379,12898
(defcustom multi-term-dedicated-skip-other-window-p nilmulti-term-dedicated-skip-other-window-p386,13177
(defcustom multi-term-dedicated-select-after-open-p nilmulti-term-dedicated-select-after-open-p406,14146
(defcustom multi-term-dedicated-close-back-to-open-buffer-p nilmulti-term-dedicated-close-back-to-open-buffer-p414,14410
(defconst multi-term-dedicated-buffer-name "MULTI-TERM-DEDICATED"multi-term-dedicated-buffer-name424,14761
(defvar multi-term-dedicated-window nilmulti-term-dedicated-window428,14947
(defvar multi-term-dedicated-buffer nilmulti-term-dedicated-buffer431,15028
(defvar multi-term-dedicated-close-buffer nilmulti-term-dedicated-close-buffer434,15109
(defvar multi-term-buffer-list nilmulti-term-buffer-list438,15296
(defun multi-term ()multi-term443,15504
(defun multi-term-next (&optional offset)multi-term-next458,16004
(defun multi-term-prev (&optional offset)multi-term-prev465,16221
(defun multi-term-dedicated-open ()multi-term-dedicated-open472,16450
(defun multi-term-dedicated-close ()multi-term-dedicated-close501,17941
(defun multi-term-dedicated-remember-window-height ()multi-term-dedicated-remember-window-height522,18756
(defun multi-term-dedicated-toggle ()multi-term-dedicated-toggle531,19148
(defun multi-term-dedicated-select ()multi-term-dedicated-select547,19706
(defun term-send-esc ()term-send-esc554,19946
(defun term-send-return ()term-send-return559,20045
(defun term-send-backward-kill-word ()term-send-backward-kill-word566,20281
(defun term-send-forward-kill-word ()term-send-forward-kill-word571,20407
(defun term-send-backward-word ()term-send-backward-word576,20522
(defun term-send-forward-word ()term-send-forward-word581,20642
(defun term-send-reverse-search-history ()term-send-reverse-search-history586,20760
(defun term-send-delete-word ()term-send-delete-word591,20881
(defun term-send-quote ()term-send-quote596,20992
(defun term-send-M-x ()term-send-M-x602,21169
(defun multi-term-internal ()multi-term-internal608,21349
(defun multi-term-get-buffer (&optional special-shell dedicated-window)multi-term-get-buffer624,22019
(defun multi-term-handle-close ()multi-term-handle-close654,23570
(defun multi-term-kill-buffer-hook ()multi-term-kill-buffer-hook662,23992
(defun multi-term-switch (direction offset)multi-term-switch682,24888
(defun multi-term-switch-internal (direction offset)multi-term-switch-internal694,25353
(defun multi-term-keystroke-setup ()multi-term-keystroke-setup710,26158
(defun multi-term-dedicated-handle-other-window-advice (activate)multi-term-dedicated-handle-other-window-advice736,27260
(defun multi-term-current-window-take-height (&optional window)multi-term-current-window-take-height746,27708
(defun multi-term-dedicated-get-window ()multi-term-dedicated-get-window753,28014
(defun multi-term-dedicated-get-buffer-name ()multi-term-dedicated-get-buffer-name760,28272
(defun multi-term-dedicated-exist-p ()multi-term-dedicated-exist-p764,28430
(defun multi-term-window-exist-p (window)multi-term-window-exist-p769,28659
(defun multi-term-buffer-exist-p (buffer)multi-term-buffer-exist-p774,28801
(defun multi-term-dedicated-window-p ()multi-term-dedicated-window-p779,28945
(defun multi-term-window-dedicated-only-one-p ()multi-term-window-dedicated-only-one-p784,29161
(defadvice delete-other-windows (around multi-term-delete-other-window-advice activate)delete-other-windows800,29701
(defadvice delete-window (before multi-term-delete-window-advice activate)delete-window813,30357
(defadvice pop-to-buffer (before multi-term-pop-to-buffer-advice activate)pop-to-buffer820,30724
(defadvice other-window (after multi-term-dedicated-other-window-advice)other-window842,31858

elpa/multiple-cursors-20160616.1404/mc-cycle-cursors.el,736
(defun mc/next-fake-cursor-after-point ()mc/next-fake-cursor-after-point31,1015
(defun mc/prev-fake-cursor-before-point ()mc/prev-fake-cursor-before-point43,1370
(defcustom mc/cycle-looping-behaviour 'continuemc/cycle-looping-behaviour55,1726
(defun mc/handle-loop-condition (error-message)mc/handle-loop-condition63,2135
(defun mc/first-fake-cursor-after (point)mc/first-fake-cursor-after70,2337
(defun mc/last-fake-cursor-before (point)mc/last-fake-cursor-before79,2812
(defun mc/cycle-forward ()mc/cycle-forward97,3608
(defun mc/cycle-backward ()mc/cycle-backward103,3802
(define-key mc/keymap (kbd "C-v") 'mc/cycle-forward)mc/keymap109,3996
(define-key mc/keymap (kbd "M-v") 'mc/cycle-backward)mc/keymap110,4049

elpa/multiple-cursors-20160616.1404/mc-edit-lines.el,271
(defcustom mc/edit-lines-empty-lines nilmc/edit-lines-empty-lines32,1003
(defun mc/edit-lines (&optional arg)mc/edit-lines41,1405
(defun mc/edit-ends-of-lines ()mc/edit-ends-of-lines95,3469
(defun mc/edit-beginnings-of-lines ()mc/edit-beginnings-of-lines102,3669

elpa/multiple-cursors-20160616.1404/mc-hide-unmatched-lines-mode.el,1072
(defvar hum/hide-unmatched-lines-mode-map (make-sparse-keymap)hum/hide-unmatched-lines-mode-map35,1194
(define-key hum/hide-unmatched-lines-mode-map (kbd "C-g") 'hum/keyboard-quit)hum/hide-unmatched-lines-mode-map38,1323
(define-key hum/hide-unmatched-lines-mode-map (kbd "<return>") 'hum/keyboard-quit)hum/hide-unmatched-lines-mode-map39,1401
(defun hum/keyboard-quit ()hum/keyboard-quit41,1485
(defun hum/disable-hum-mode ()hum/disable-hum-mode47,1657
(define-minor-mode mc-hide-unmatched-lines-modemc-hide-unmatched-lines-mode51,1740
(defconst hum/invisible-overlay-name 'hum/invisible-overlay-name)hum/invisible-overlay-name68,2519
(defcustom hum/lines-to-expand 2hum/lines-to-expand70,2586
(defcustom hum/placeholder "..."hum/placeholder75,2717
(defun hum/add-invisible-overlay (begin end)hum/add-invisible-overlay80,2855
(defun hum/hide-unmatched-lines ()hum/hide-unmatched-lines93,3355
(defun hum/unhide-unmatched-lines ()hum/unhide-unmatched-lines103,3802
(define-key mc/keymap (kbd "C-'") 'mc-hide-unmatched-lines-mode)mc/keymap107,3938

elpa/multiple-cursors-20160616.1404/mc-mark-more.el,4494
(defun mc/cursor-end (cursor)mc/cursor-end33,1035
(defun mc/cursor-beg (cursor)mc/cursor-beg39,1218
(defun mc/furthest-region-end ()mc/furthest-region-end45,1401
(defun mc/first-region-start ()mc/first-region-start51,1560
(defun mc/furthest-cursor-before-point ()mc/furthest-cursor-before-point57,1718
(defun mc/furthest-cursor-after-point ()mc/furthest-cursor-after-point66,1991
(defun mc/fake-cursor-at-point (&optional point)mc/fake-cursor-at-point75,2263
(defun mc/region-strings ()mc/region-strings87,2662
(defvar mc/enclose-search-term nilmc/enclose-search-term95,2972
(defun mc/mark-more-like-this (skip-last direction)mc/mark-more-like-this104,3218
(defun mc/mark-next-like-this (arg)mc/mark-next-like-this137,4765
(defun mc/mark-next-like-this-word (arg)mc/mark-next-like-this-word154,5382
(defun mc/mark-next-like-this-symbol (arg)mc/mark-next-like-this-symbol171,6066
(defun mc/mark-next-word-like-this (arg)mc/mark-next-word-like-this190,6772
(defun mc/mark-next-symbol-like-this (arg)mc/mark-next-symbol-like-this201,7236
(defun mc/mark-previous-like-this (arg)mc/mark-previous-like-this212,7708
(defun mc/mark-previous-word-like-this (arg)mc/mark-previous-word-like-this229,8340
(defun mc/mark-previous-symbol-like-this (arg)mc/mark-previous-symbol-like-this240,8796
(defun mc/mark-lines (num-lines direction)mc/mark-lines250,9243
(defun mc/mark-next-lines (arg)mc/mark-next-lines266,9876
(defun mc/mark-previous-lines (arg)mc/mark-previous-lines272,10012
(defun mc/unmark-next-like-this ()mc/unmark-next-like-this278,10153
(defun mc/unmark-previous-like-this ()mc/unmark-previous-like-this284,10326
(defun mc/skip-to-next-like-this ()mc/skip-to-next-like-this290,10507
(defun mc/skip-to-previous-like-this ()mc/skip-to-previous-like-this296,10707
(defun mc/mark-all-like-this ()mc/mark-all-like-this302,10915
(defun mc--select-thing-at-point (thing)mc--select-thing-at-point324,11717
(defun mc--select-thing-at-point-or-bark (thing)mc--select-thing-at-point-or-bark331,11899
(defun mc/mark-all-words-like-this ()mc/mark-all-words-like-this336,12090
(defun mc/mark-all-symbols-like-this ()mc/mark-all-symbols-like-this343,12275
(defun mc/mark-all-in-region (beg end &optional search)mc/mark-all-in-region350,12466
(defun mc/mark-all-in-region-regexp (beg end)mc/mark-all-in-region-regexp372,13296
(defun mc/mark-more-like-this-extended ()mc/mark-more-like-this-extended440,16138
(defvar mc/mark-more-like-this-extended-direction nilmc/mark-more-like-this-extended-direction462,16828
(defun mc/mmlte--message ()mc/mmlte--message467,17042
(defun mc/mmlte--up ()mc/mmlte--up472,17320
(defun mc/mmlte--down ()mc/mmlte--down478,17471
(defun mc/mmlte--left ()mc/mmlte--left484,17622
(defun mc/mmlte--right ()mc/mmlte--right491,17816
(defvar mc/mark-more-like-this-extended-keymap (make-sparse-keymap))mc/mark-more-like-this-extended-keymap498,18009
(define-key mc/mark-more-like-this-extended-keymap (kbd "<up>") 'mc/mmlte--up)mc/mark-more-like-this-extended-keymap500,18079
(define-key mc/mark-more-like-this-extended-keymap (kbd "<down>") 'mc/mmlte--down)mc/mark-more-like-this-extended-keymap501,18158
(define-key mc/mark-more-like-this-extended-keymap (kbd "<left>") 'mc/mmlte--left)mc/mark-more-like-this-extended-keymap502,18241
(define-key mc/mark-more-like-this-extended-keymap (kbd "<right>") 'mc/mmlte--right)mc/mark-more-like-this-extended-keymap503,18324
(defvar mc--restrict-mark-all-to-symbols nil)mc--restrict-mark-all-to-symbols505,18410
(defun mc/mark-all-like-this-dwim (arg)mc/mark-all-like-this-dwim508,18472
(defun mc/mark-all-dwim (arg)mc/mark-all-dwim537,19576
(defun mc--in-defun ()mc--in-defun558,20342
(defun mc/mark-all-like-this-in-defun ()mc/mark-all-like-this-in-defun562,20418
(defun mc/mark-all-words-like-this-in-defun ()mc/mark-all-words-like-this-in-defun573,20674
(defun mc/mark-all-symbols-like-this-in-defun ()mc/mark-all-symbols-like-this-in-defun585,20998
(defun mc--mark-symbol-at-point ()mc--mark-symbol-at-point596,21317
(defun mc--get-nice-sgml-context ()mc--get-nice-sgml-context604,21537
(defun mc--on-tag-name-p ()mc--on-tag-name-p612,21727
(defun mc/toggle-cursor-on-click (event)mc/toggle-cursor-on-click622,22063
(defalias 'mc/add-cursor-on-click 'mc/toggle-cursor-on-click)mc/add-cursor-on-click645,22990
(defun mc/mark-sgml-tag-pair ()mc/mark-sgml-tag-pair648,23068
(defun mc--inside-tag-p ()mc--inside-tag-p670,23882

elpa/multiple-cursors-20160616.1404/mc-mark-pop.el,40
(defun mc/mark-pop ()mc/mark-pop6,107

elpa/multiple-cursors-20160616.1404/mc-separate-operations.el,1093
(defun mc/insert-numbers (arg)mc/insert-numbers33,1087
(defcustom mc/insert-numbers-default 0mc/insert-numbers-default42,1486
(defvar mc--insert-numbers-number 0)mc--insert-numbers-number48,1645
(defun mc--insert-number-and-increase ()mc--insert-number-and-increase50,1683
(defun mc--ordered-region-strings ()mc--ordered-region-strings55,1864
(defun mc/insert-letters (arg)mc/insert-letters65,2187
(defun mc--number-to-letters (number)mc--number-to-letters74,2585
(defvar mc--insert-letters-number 0)mc--insert-letters-number83,2805
(defun mc--insert-letter-and-increase ()mc--insert-letter-and-increase85,2843
(defvar mc--strings-to-replace nil)mc--strings-to-replace90,3029
(defun mc--replace-region-strings-1 ()mc--replace-region-strings-192,3066
(defun mc--replace-region-strings ()mc--replace-region-strings98,3291
(defun mc/reverse-regions ()mc/reverse-regions103,3453
(defun mc/sort-regions ()mc/sort-regions116,3847
(defun mc/vertical-align (character)mc/vertical-align125,4093
(defun mc/vertical-align-with-space ()mc/vertical-align-with-space148,4854

elpa/multiple-cursors-20160616.1404/multiple-cursors-autoloads.el,94
(defalias 'mc/add-cursor-on-click 'mc/toggle-cursor-on-click)mc/add-cursor-on-click232,7430

elpa/multiple-cursors-20160616.1404/multiple-cursors-core.el,5658
(defvar mc--read-char)mc--read-char31,1022
(defface mc/cursor-facemc/cursor-face33,1046
(defface mc/cursor-bar-facemc/cursor-bar-face38,1162
(defface mc/region-facemc/region-face43,1351
(defmacro mc/add-fake-cursor-to-undo-list (&rest forms)mc/add-fake-cursor-to-undo-list48,1464
(defun mc/all-fake-cursors (&optional start end)mc/all-fake-cursors59,2144
(defmacro mc/for-each-fake-cursor (&rest forms)mc/for-each-fake-cursor64,2347
(defmacro mc/save-excursion (&rest forms)mc/save-excursion69,2531
(defun mc--compare-by-overlay-start (o1 o2)mc--compare-by-overlay-start78,2924
(defmacro mc/for-each-cursor-ordered (&rest forms)mc/for-each-cursor-ordered81,3014
(defmacro mc/save-window-scroll (&rest forms)mc/save-window-scroll91,3522
(defun mc/cursor-is-bar ()mc/cursor-is-bar106,4027
(defun mc/make-cursor-overlay-at-eol (pos)mc/make-cursor-overlay-at-eol112,4212
(defun mc/make-cursor-overlay-inline (pos)mc/make-cursor-overlay-inline120,4569
(defun mc/make-cursor-overlay-at-point ()mc/make-cursor-overlay-at-point128,4897
(defun mc/make-region-overlay-between-point-and-mark ()mc/make-region-overlay-between-point-and-mark136,5189
(defvar mc/cursor-specific-vars '(transient-mark-modemc/cursor-specific-vars143,5465
(defun mc/store-current-state-in-overlay (o)mc/store-current-state-in-overlay154,5982
(defun mc/restore-state-from-overlay (o)mc/restore-state-from-overlay162,6322
(defun mc/remove-fake-cursor (o)mc/remove-fake-cursor169,6614
(defun mc/pop-state-from-overlay (o)mc/pop-state-from-overlay176,6857
(defun mc/delete-region-overlay (o)mc/delete-region-overlay181,7035
(defvar mc--current-cursor-id 0mc--current-cursor-id186,7212
(defun mc/create-cursor-id ()mc/create-cursor-id189,7331
(defvar mc--max-cursors-original nilmc--max-cursors-original193,7428
(defcustom mc/max-cursors nilmc/max-cursors200,7763
(defun mc/create-fake-cursor-at-point (&optional id)mc/create-fake-cursor-at-point213,8185
(defun mc/execute-command (cmd)mc/execute-command234,9190
(defvar mc--executing-command-for-fake-cursor nil)mc--executing-command-for-fake-cursor243,9517
(defun mc/execute-command-for-fake-cursor (cmd cursor)mc/execute-command-for-fake-cursor245,9569
(defun mc/execute-command-for-all-fake-cursors (cmd)mc/execute-command-for-all-fake-cursors256,9961
(defun mc/execute-command-for-all-cursors (cmd)mc/execute-command-for-all-cursors269,10431
(defvar mc--read-char nil)mc--read-char277,10715
(defvar multiple-cursors-mode nil)multiple-cursors-mode278,10742
(defadvice read-char (around mc-support activate)read-char279,10777
(defvar mc--read-quoted-char nil)mc--read-quoted-char286,10983
(defadvice read-quoted-char (around mc-support activate)read-quoted-char287,11017
(defun mc--reset-read-prompts ()mc--reset-read-prompts294,11251
(defun mc/fake-cursor-p (o)mc/fake-cursor-p300,11373
(defun mc/cursor-with-id (id)mc/cursor-with-id304,11499
(defvar mc--stored-state-for-undo nilmc--stored-state-for-undo310,11750
(defun activate-cursor-for-undo (id)activate-cursor-for-undo313,11865
(defun deactivate-cursor-after-undo (id)deactivate-cursor-after-undo321,12254
(defcustom mc/always-run-for-all nilmc/always-run-for-all328,12550
(defun mc/prompt-for-inclusion-in-whitelist (original-command)mc/prompt-for-inclusion-in-whitelist333,12713
(defun mc/num-cursors ()mc/num-cursors342,13106
(defvar mc--this-command nilmc--this-command347,13286
(defun mc/make-a-note-of-the-command-being-run ()mc/make-a-note-of-the-command-being-run351,13414
(defun mc/execute-this-command-for-all-cursors ()mc/execute-this-command-for-all-cursors365,14155
(defadvice execute-kbd-macro (around skip-fake-cursors activate)execute-kbd-macro376,14705
(defun mc/execute-this-command-for-all-cursors-1 ()mc/execute-this-command-for-all-cursors-1380,14834
(defun mc/remove-fake-cursors ()mc/remove-fake-cursors428,17486
(defun mc/keyboard-quit ()mc/keyboard-quit438,17840
(defvar mc/keymap nilmc/keymap445,18050
(defun mc--all-equal (list)mc--all-equal458,18573
(defun mc--kill-ring-entries ()mc--kill-ring-entries467,18815
(defun mc--maybe-set-killed-rectangle ()mc--maybe-set-killed-rectangle475,19118
(defvar mc/unsupported-minor-modes '(company-mode auto-complete-mode flyspell-mode jedi-mode)mc/unsupported-minor-modes482,19427
(defvar mc/temporarily-disabled-minor-modes nilmc/temporarily-disabled-minor-modes486,19658
(defun mc/temporarily-disable-minor-mode (mode)mc/temporarily-disable-minor-mode490,19824
(defun mc/temporarily-disable-unsupported-minor-modes ()mc/temporarily-disable-unsupported-minor-modes496,20068
(defun mc/enable-minor-mode (mode)mc/enable-minor-mode499,20198
(defun mc/enable-temporarily-disabled-minor-modes ()mc/enable-temporarily-disabled-minor-modes502,20254
(defcustom mc/mode-linemc/mode-line506,20425
(define-minor-mode multiple-cursors-modemultiple-cursors-mode514,20734
(defun mc/maybe-multiple-cursors-mode ()mc/maybe-multiple-cursors-mode533,21603
(defmacro unsupported-cmd (cmd msg)unsupported-cmd539,21822
(defadvice current-kill (before interprogram-paste-for-all-cursors activate)current-kill554,22527
(defvar mc/list-file (locate-user-emacs-file ".mc-lists.el")mc/list-file578,23797
(defun mc/dump-list (list-symbol)mc/dump-list582,23970
(defun mc/save-lists ()mc/save-lists596,24502
(defvar mc/cmds-to-run-once nilmc/cmds-to-run-once609,24991
(defvar mc--default-cmds-to-run-once nilmc--default-cmds-to-run-once612,25081
(defvar mc--default-cmds-to-run-for-all nilmc--default-cmds-to-run-for-all697,29816
(defvar mc/cmds-to-run-for-all nilmc/cmds-to-run-for-all777,34219

elpa/multiple-cursors-20160616.1404/multiple-cursors-pkg.el,104
(define-package "multiple-cursors" "20160616.1404" "Multiple cursors for Emacs.""multiple-cursors"1,0

elpa/multiple-cursors-20160616.1404/multiple-cursors.el,0

elpa/multiple-cursors-20160616.1404/rectangular-region-mode.el,1069
(defvar rrm/anchor (make-marker)rrm/anchor32,1078
(defvar rectangular-region-mode-map (make-sparse-keymap)rectangular-region-mode-map35,1181
(define-key rectangular-region-mode-map (kbd "C-g") 'rrm/keyboard-quit)rectangular-region-mode-map38,1302
(define-key rectangular-region-mode-map (kbd "<return>") 'rrm/switch-to-multiple-cursors)rectangular-region-mode-map39,1374
(defvar rectangular-region-mode nil)rectangular-region-mode41,1465
(defun rrm/keyboard-quit ()rrm/keyboard-quit43,1503
(defun set-rectangular-region-anchor ()set-rectangular-region-anchor52,1767
(defun rrm/remove-rectangular-region-overlays ()rrm/remove-rectangular-region-overlays62,2110
(defun rrm/repaint ()rrm/repaint70,2400
(defun rrm/switch-to-multiple-cursors (&rest forms)rrm/switch-to-multiple-cursors97,3664
(defadvice er/expand-region (before switch-from-rrm-to-mc activate)er/expand-region103,3858
(defadvice kill-ring-save (before switch-from-rrm-to-mc activate)kill-ring-save107,3998
(define-minor-mode rectangular-region-moderectangular-region-mode112,4151

elpa/myterminal-controls-20160119.2030/myterminal-controls-autoloads.el,0

elpa/myterminal-controls-20160119.2030/myterminal-controls-pkg.el,228
(define-package "myterminal-controls" "20160119.2030" "Quick toggle controls at a key-stroke" '((emacs "24") (cl-lib "0.5")) :url "http://ismail.teamfluxion.com" :keywords '("convenience" "shortcuts"))"myterminal-controls"1,0

elpa/myterminal-controls-20160119.2030/myterminal-controls.el,967
(defvar myterminal-controls--controls-datamyterminal-controls--controls-data72,2362
(defvar myterminal-controls--buffer-namemyterminal-controls--buffer-name75,2413
(defun myterminal-controls-set-controls-data (data)myterminal-controls-set-controls-data79,2498
(defun myterminal-controls-open-controls ()myterminal-controls-open-controls89,2864
(defun myterminal-controls-close-controls ()myterminal-controls-close-controls100,3313
(defun myterminal-controls--get-required-window-height ()myterminal-controls--get-required-window-height109,3753
(defun myterminal-controls--prepare-controls (pairs)myterminal-controls--prepare-controls119,4216
(defun myterminal-controls--apply-keyboard-bindings (pair)myterminal-controls--apply-keyboard-bindings127,4472
(defun myterminal-controls--display-controls-bindings (pair)myterminal-controls--display-controls-bindings137,4819
(define-derived-mode myterminal-controls-mode myterminal-controls-mode149,5251

elpa/names-20151201.404/names-autoloads.el,211
(defvar names--inside-make-autoload nil "\names--inside-make-autoload9,246
(defadvice make-autoload (around names-before-make-autoload-advice (form file &optional expansion) activate) "\make-autoload75,2707

elpa/names-20151201.404/names-dev.el,1676
(defmacro names-compare-forms (name form-a form-b)names-compare-forms46,1463
(defmacro names-compare-forms-assert (name form-a form-b)names-compare-forms-assert54,1771
(defmacro names-print (name &rest forms)names-print62,2037
(defvar names-font-locknames-font-lock71,2462
(defun names--looking-at-namespace ()names--looking-at-namespace84,2863
(defun names--generate-new-buffer (name &optional form)names--generate-new-buffer93,3194
(defmacro names--wrapped-in-namespace (command form &optional kill &rest body)names--wrapped-in-namespace106,3585
(defun names--top-of-namespace ()names--top-of-namespace154,5572
(defun names-eval-defun (edebug-it)names-eval-defun167,5988
(defalias 'names--preceding-sexp-originalnames--preceding-sexp-original183,6471
(defun names--preceding-sexp ()names--preceding-sexp188,6640
(defun names-eval-last-sexp (eval-last-sexp-arg-internal)names-eval-last-sexp194,6853
(defun names-eval-print-last-sexp (eval-last-sexp-arg-internal)names-eval-print-last-sexp202,7285
(defun names-pprint ()names-pprint212,7817
(defalias 'names--fboundp-original (symbol-function 'fboundp))names--fboundp-original224,8150
(defalias 'names--boundp-original (symbol-function 'boundp))names--boundp-original225,8213
(defalias 'names--find-function-read-original (symbol-function 'find-function-read))names--find-function-read-original226,8274
(defalias 'find-function-read 'names--find-function-read)find-function-read227,8359
(defun names--find-function-read (&optional type)names--find-function-read229,8418
(defun names--dev-fboundp (sym)names--dev-fboundp240,8909
(defun names--dev-boundp (sym)names--dev-boundp243,9032

elpa/names-20151201.404/names-pkg.el,126
(define-package "names" "20151201.404" "Namespaces for emacs-lisp. Avoid name clobbering without hiding symbols.""names"1,0

elpa/names-20151201.404/names.el,6839
(defalias 'names--function-getnames--function-get58,2017
(defalias 'names--compat-macropnames--compat-macrop83,2985
(defalias 'names--autoloadpnames--autoloadp93,3396
(defconst names-version "20151201.0" "Version of the names.el package.")names-version126,4708
(defvar names--name nilnames--name128,4782
(defvar names--regexp nil "Regexp matching `names--name'.")names--regexp130,4878
(defvar names--load-file (and load-file-name (expand-file-name load-file-name))names--load-file132,4939
(defvar names--bound nilnames--bound137,5169
(defvar names--fbound nilnames--fbound139,5244
(defvar names--macro nilnames--macro141,5320
(defvar names--keywords nilnames--keywords144,5393
(defvar names--local-vars nilnames--local-vars149,5554
(defvar names--protection nilnames--protection153,5714
(defvar names--current-run nilnames--current-run159,5887
(defvar names--var-listnames--var-list162,5979
(defvar names--inside-make-autoload nilnames--inside-make-autoload172,6340
(defvar names--package nilnames--package175,6446
(defvar names--group-parent nilnames--group-parent180,6636
(defvar names--version nilnames--version184,6795
(defvar names--functionlike-macros nilnames--functionlike-macros188,6907
(defconst names--keyword-listnames--keyword-list204,7444
(defmacro names--prepend (sbl)names--prepend307,11037
(defmacro names--filter-if-bound (var &optional pred)names--filter-if-bound313,11172
(defmacro names--next-keyword (body)names--next-keyword323,11568
(defvar names--has-reloaded nilnames--has-reloaded337,12015
(defmacro define-namespace (name &rest body)define-namespace344,12249
(defun names--define-namespace-implementation (name body)names--define-namespace-implementation413,14355
(defun names--reload-if-upgraded ()names--reload-if-upgraded494,18467
(defun names-convert-form (form)names-convert-form515,19296
(defun names-view-manual ()names-view-manual567,21091
(defun names--package-name ()names--package-name572,21251
(defun names--generate-defgroup ()names--generate-defgroup584,21723
(defun names--generate-version ()names--generate-version593,22096
(defun names--add-macro-to-environment (form)names--add-macro-to-environment609,22752
(defun names--extract-autoloads (body)names--extract-autoloads653,24809
(defadvice make-autoload (around names-before-make-autoload-advicemake-autoload662,25074
(defun names--make-autoload-compat (form file)names--make-autoload-compat685,26049
(defvar names--ignored-forms '(declare)names--ignored-forms690,26177
(defun names--handle-args (func args)names--handle-args693,26299
(defun names--message (f &rest rest)names--message707,27038
(defun names--warn (f &rest rest)names--warn712,27214
(defun names--error-if-using-vars ()names--error-if-using-vars719,27544
(defun names--remove-namespace-from-list (&rest lists)names--remove-namespace-from-list728,27831
(defun names--remove-namespace (symbol)names--remove-namespace734,28119
(defun names--remove-protection (symbol)names--remove-protection738,28281
(defun names--remove-regexp (s r)names--remove-regexp742,28447
(defun names--quote-p (sbl)names--quote-p748,28658
(defun names--fboundp (sbl)names--fboundp752,28768
(defun names--macrop (sbl)names--macrop759,28978
(defun names--keyword (keyword)names--keyword765,29169
(defun names--boundp (sbl)names--boundp769,29306
(defvar names--verbose nilnames--verbose778,29616
(defun names--args-of-function-or-macro (function args macro)names--args-of-function-or-macro782,29776
(defun names--get-edebug-spec (name)names--get-edebug-spec800,30697
(defvar names--is-inside-macro nilnames--is-inside-macro814,31179
(defvar names--gensym-counter 0names--gensym-counter817,31276
(defun names--macro-args-using-edebug (form)names--macro-args-using-edebug820,31374
(defvar names--message-backupnames--message-backup868,33227
(defun names--edebug-message (&rest args)names--edebug-message874,33428
(defun names--edebug-make-enter-wrapper (forms)names--edebug-make-enter-wrapper879,33604
(defun names--gensym (prefix)names--gensym886,33804
(defun names--edebug-form (cursor)names--edebug-form894,34180
(defun names--maybe-append-group (form)names--maybe-append-group946,36551
(defun names--handle-keyword (body)names--handle-keyword957,36989
(defun names--convert-defmacro (form)names--convert-defmacro984,38007
(defalias 'names--convert-defmacro* 'names--convert-defmacro)names--convert-defmacro*1007,39020
(defun names--convert-defvaralias (form)names--convert-defvaralias1009,39083
(defun names--convert-defalias (form)names--convert-defalias1020,39440
(defun names--convert-defvar (form &optional dont-add)names--convert-defvar1031,39792
(defalias 'names--convert-defconst 'names--convert-defvarnames--convert-defconst1043,40167
(defun names--convert-defcustom (form)names--convert-defcustom1046,40270
(defun names--convert-custom-declare-variable (form)names--convert-custom-declare-variable1051,40417
(defun names--convert-defface (form)names--convert-defface1070,41226
(defun names--convert-define-derived-mode (form)names--convert-define-derived-mode1077,41472
(defun names--convert-define-minor-mode (form)names--convert-define-minor-mode1097,42145
(defun names--convert-define-globalized-minor-mode (form)names--convert-define-globalized-minor-mode1123,43097
(defalias 'names--convert-define-global-minor-modenames--convert-define-global-minor-mode1150,44206
(defalias 'names--convert-easy-mmode-define-global-modenames--convert-easy-mmode-define-global-mode1152,44306
(defun names--convert-quote (form)names--convert-quote1155,44412
(defun names--handle-symbol-as-function (s)names--handle-symbol-as-function1190,45752
(defalias 'names--convert-function 'names--convert-quote)names--convert-function1195,45928
(defun names--convert-macro (form)names--convert-macro1197,45987
(defun names--convert-lambda (form)names--convert-lambda1202,46162
(defun names--convert-clojure (form)names--convert-clojure1224,46862
(defun names--vars-from-arglist (args)names--vars-from-arglist1234,47202
(defun names--convert-defun (form)names--convert-defun1247,47585
(defalias 'names--convert-defun* 'names--convert-defun)names--convert-defun*1254,47837
(defalias 'names--convert-defsubst 'names--convert-defun)names--convert-defsubst1255,47893
(defalias 'names--convert-defsubst* 'names--convert-defun)names--convert-defsubst*1256,47951
(defun names--let-var-convert-then-add (sym add)names--let-var-convert-then-add1258,48011
(defun names--convert-let (form &optional star)names--convert-let1267,48364
(defun names--convert-let* (form)names--convert-let*1290,49190
(defun names--convert-cond (form)names--convert-cond1294,49294
(defun names--convert-condition-case (form)names--convert-condition-case1302,49468

elpa/ob-ipython-20160703.639/driver.py,2446
    import jupyter_client as clientclient2,61
    from jupyter_client import KernelManagerKernelManager3,97
    find_connection_file = client.find_connection_filefind_connection_file4,142
    from jupyter_core.paths import jupyter_runtime_dir as runtime_dirruntime_dir5,197
    from IPython.lib.kernel import find_connection_filefind_connection_file7,311
    import IPython.kernel.blocking.client as clientIPython8,367
    import IPython.kernel.blocking.client as clientkernel8,367
    import IPython.kernel.blocking.client as clientblocking8,367
    import IPython.kernel.blocking.client as clientclient8,367
    from IPython.kernel.manager import KernelManagerKernelManager9,419
    runtime_dir = Noneruntime_dir10,472
    from IPython.utils.path import get_ipython_dirget_ipython_dir11,495
    from IPython.core.profiledir import ProfileDirProfileDir12,546
import sys, signal, argparse, os.pathsys14,598
import sys, signal, argparse, os.pathsignal14,598
import sys, signal, argparse, os.pathargparse14,598
import sys, signal, argparse, os.pathos14,598
import sys, signal, argparse, os.pathpath14,598
import threading, multiprocessingthreading15,636
import threading, multiprocessingmultiprocessing15,636
import pprintpprint17,671
import jsonjson18,685
import tornadotornado20,698
import tornado.webtornado21,713
import tornado.webweb21,713
handlers = {}handlers26,874
install_handler_lock = threading.Lock()install_handler_lock30,989
def install_handler(msgid, handler):install_handler32,1030
def remove_handler(msgid):remove_handler35,1098
def get_handler(msg):get_handler38,1150
    def ignore(msg): passignore39,1172
def msg_router(name, ch):msg_router46,1378
clients = {}clients53,1526
def create_client(name):create_client55,1540
def get_client(name):get_client66,1938
def handler(webhandler, msgid):handler71,2058
    def f(msg):f74,2190
            def accept(msg):accept84,2621
class ExecuteHandler(tornado.web.RequestHandler):ExecuteHandler91,2896
    def post(self, name):post93,2976
class InspectHandler(tornado.web.RequestHandler):InspectHandler100,3226
    def post(self, name):post102,3306
class DebugHandler(tornado.web.RequestHandler):DebugHandler113,3724
    def get(self):get114,3772
def make_app():make_app118,3899
def main(args):main125,4134
        def onsignal(*args):onsignal145,4952
        import platformplatform148,5061

elpa/ob-ipython-20160703.639/ob-ipython-autoloads.el,0

elpa/ob-ipython-20160703.639/ob-ipython-pkg.el,106
(define-package "ob-ipython" "20160703.639" "org-babel functions for IPython evaluation""ob-ipython"1,0

elpa/ob-ipython-20160703.639/ob-ipython.el,3073
(defcustom ob-ipython-kernel-extra-args '()ob-ipython-kernel-extra-args47,1695
(defcustom ob-ipython-driver-port 9988ob-ipython-driver-port51,1817
(defcustom ob-ipython-driver-hostname "localhost"ob-ipython-driver-hostname55,1912
(defcustom ob-ipython-driver-pathob-ipython-driver-path59,2022
(defcustom ob-ipython-commandob-ipython-command65,2217
(defun ob-ipython--write-string-to-file (file string)ob-ipython--write-string-to-file72,2352
(defun ob-ipython--write-base64-string (file b64-string)ob-ipython--write-base64-string80,2602
(defun ob-ipython--create-traceback-buffer (traceback)ob-ipython--create-traceback-buffer90,2970
(defun ob-ipython--create-inspect-buffer (doc)ob-ipython--create-inspect-buffer101,3365
(defun ob-ipython--create-stdout-buffer (stdout)ob-ipython--create-stdout-buffer113,3750
(defun ob-ipython--dump-error (err-msg)ob-ipython--dump-error125,4135
(defun ob-ipython--kernel-repl-cmd (name)ob-ipython--kernel-repl-cmd136,4483
(defun ob-ipython--create-process (name cmd)ob-ipython--create-process139,4608
(defun ob-ipython--create-kernel-driver (name &optional kernel)ob-ipython--create-kernel-driver142,4737
(defun ob-ipython--get-kernel-processes ()ob-ipython--get-kernel-processes149,5113
(defun ob-ipython--launch-driver (name &rest args)ob-ipython--launch-driver158,5450
(defun ob-ipython--create-client-driver ()ob-ipython--create-client-driver168,5928
(defun ob-ipython--get-driver-process ()ob-ipython--get-driver-process176,6310
(defun ob-ipython--create-repl (name)ob-ipython--create-repl179,6385
(defun ob-ipython--choose-kernel ()ob-ipython--choose-kernel185,6562
(defun ob-ipython-interrupt-kernel (proc)ob-ipython-interrupt-kernel192,6766
(defun ob-ipython-kill-kernel (proc)ob-ipython-kill-kernel200,7093
(defun ob-ipython--execute-request (code name)ob-ipython--execute-request211,7455
(defun ob-ipython--extract-output (msgs)ob-ipython--extract-output225,8050
(defun ob-ipython--extract-result (msgs)ob-ipython--extract-result232,8382
(defun ob-ipython--extract-error (msgs)ob-ipython--extract-error241,8786
(defun ob-ipython--extract-status (msgs)ob-ipython--extract-status252,9393
(defun ob-ipython--eval (service-response)ob-ipython--eval261,9668
(defun ob-ipython--inspect-request (code &optional pos detail)ob-ipython--inspect-request270,10148
(defun ob-ipython--inspect (buffer pos)ob-ipython--inspect286,10962
(defun ob-ipython-inspect (buffer pos)ob-ipython-inspect295,11354
(defvar org-babel-default-header-args:ipython '())org-babel-default-header-args:ipython306,11764
(defun ob-ipython--normalize-session (session)ob-ipython--normalize-session308,11816
(defun org-babel-execute:ipython (body params)org-babel-execute:ipython313,12030
(defun org-babel-prep-session:ipython (session params)org-babel-prep-session:ipython337,13403
(defun org-babel-load-session:ipython (session body params)org-babel-load-session:ipython343,13624
(defun org-babel-ipython-initiate-session (&optional session params)org-babel-ipython-initiate-session348,13766

elpa/org-20160620/ob-abc.el,324
(defvar org-babel-default-header-args:abcorg-babel-default-header-args:abc39,1364
(defun org-babel-expand-body:abc (body params)org-babel-expand-body:abc43,1522
(defun org-babel-execute:abc (body params)org-babel-execute:abc58,1965
(defun org-babel-prep-session:abc (session params)org-babel-prep-session:abc89,3457

elpa/org-20160620/ob-asymptote.el,639
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts48,1547
(defvar org-babel-default-header-args:asymptoteorg-babel-default-header-args:asymptote51,1649
(defun org-babel-execute:asymptote (body params)org-babel-execute:asymptote55,1812
(defun org-babel-prep-session:asymptote (session params)org-babel-prep-session:asymptote82,2860
(defun org-babel-variable-assignments:asymptote (params)org-babel-variable-assignments:asymptote87,3063
(defun org-babel-asymptote-var-to-asymptote (pair)org-babel-asymptote-var-to-asymptote92,3298
(defun org-babel-asymptote-define-type (data)org-babel-asymptote-define-type122,4395

elpa/org-20160620/ob-awk.el,376
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts41,1382
(defvar org-babel-awk-command "awk"org-babel-awk-command44,1478
(defun org-babel-expand-body:awk (body params)org-babel-expand-body:awk47,1556
(defun org-babel-execute:awk (body params)org-babel-execute:awk51,1675
(defun org-babel-awk-var-to-awk (var &optional sep)org-babel-awk-var-to-awk98,3490

elpa/org-20160620/ob-C.el,2099
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts41,1322
(defvar org-babel-default-header-args:C '())org-babel-default-header-args:C45,1473
(defcustom org-babel-C-compiler "gcc"org-babel-C-compiler47,1519
(defcustom org-babel-C++-compiler "g++"org-babel-C++-compiler56,1813
(defcustom org-babel-D-compiler "rdmd"org-babel-D-compiler65,2111
(defvar org-babel-c-variant nilorg-babel-c-variant74,2408
(defun org-babel-execute:cpp (body params)org-babel-execute:cpp78,2544
(defun org-babel-expand-body:cpp (body params)org-babel-expand-body:cpp83,2710
(defun org-babel-execute:C++ (body params)org-babel-execute:C++88,2882
(defun org-babel-expand-body:C++ (body params)org-babel-expand-body:C++93,3104
(defun org-babel-execute:D (body params)org-babel-execute:D98,3308
(defun org-babel-expand-body:D (body params)org-babel-expand-body:D103,3524
(defun org-babel-execute:C (body params)org-babel-execute:C108,3720
(defun org-babel-expand-body:C (body params)org-babel-expand-body:C113,3936
(defun org-babel-C-execute (body params)org-babel-C-execute118,4132
(defun org-babel-C-expand-C++ (body params)org-babel-C-expand-C++176,6152
(defun org-babel-C-expand-C (body params)org-babel-C-expand-C181,6321
(defun org-babel-C-expand-D (body params)org-babel-C-expand-D230,7817
(defun org-babel-C-ensure-main-wrap (body)org-babel-C-ensure-main-wrap262,8884
(defun org-babel-prep-session:C (session params)org-babel-prep-session:C268,9121
(defun org-babel-load-session:C (session body params)org-babel-load-session:C273,9325
(defun org-babel-C-format-val (type val)org-babel-C-format-val280,9555
(defun org-babel-C-val-to-C-type (val)org-babel-C-val-to-C-type287,9792
(defun org-babel-C-val-to-base-type (val)org-babel-C-val-to-base-type332,11363
(defun org-babel-C-var-to-C (pair)org-babel-C-var-to-C354,11986
(defun org-babel-C-table-sizes-to-C (pair)org-babel-C-table-sizes-to-C375,12573
(defun org-babel-C-utility-header-to-C ()org-babel-C-utility-header-to-C387,13055
(defun org-babel-C-header-to-C (head)org-babel-C-header-to-C413,13573

elpa/org-20160620/ob-calc.el,428
(defvar org-babel-default-header-args:calc nilorg-babel-default-header-args:calc39,1279
(defun org-babel-expand-body:calc (body params)org-babel-expand-body:calc42,1387
(defvar org--var-syms) ; Dynamically scoped from org-babel-execute:calcorg--var-syms45,1505
(defun org-babel-execute:calc (body params)org-babel-execute:calc47,1578
(defun org-babel-calc-maybe-resolve-var (el)org-babel-calc-maybe-resolve-var94,3462

elpa/org-20160620/ob-clojure.el,506
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts53,1770
(defvar org-babel-default-header-args:clojure '())org-babel-default-header-args:clojure56,1870
(defvar org-babel-header-args:clojure '((package . :any)))org-babel-header-args:clojure57,1921
(defcustom org-babel-clojure-backendorg-babel-clojure-backend59,1981
(defun org-babel-expand-body:clojure (body params)org-babel-expand-body:clojure68,2216
(defun org-babel-execute:clojure (body params)org-babel-execute:clojure87,2859

elpa/org-20160620/ob-comint.el,757
(defun org-babel-comint-buffer-livep (buffer)org-babel-comint-buffer-livep41,1440
(defmacro org-babel-comint-in-buffer (buffer &rest body)org-babel-comint-in-buffer46,1674
(def-edebug-spec org-babel-comint-in-buffer (form body))org-babel-comint-in-buffer59,2186
(defmacro org-babel-comint-with-output (meta &rest body)org-babel-comint-with-output61,2244
(def-edebug-spec org-babel-comint-with-output (sexp body))org-babel-comint-with-output118,4455
(defun org-babel-comint-input-command (buffer cmd)org-babel-comint-input-command120,4515
(defun org-babel-comint-wait-for-output (buffer)org-babel-comint-wait-for-output129,4806
(defun org-babel-comint-eval-invisibly-and-wait-for-fileorg-babel-comint-eval-invisibly-and-wait-for-file142,5411

elpa/org-20160620/ob-coq.el,370
(defvar org-babel-coq-buffer "*coq*"org-babel-coq-buffer38,1262
(defvar org-babel-coq-eoe "org-babel-coq-eoe")org-babel-coq-eoe41,1350
(defun org-babel-coq-clean-prompt (string)org-babel-coq-clean-prompt43,1398
(defun org-babel-execute:coq (body params)org-babel-execute:coq48,1550
(defun org-babel-coq-initiate-session ()org-babel-coq-initiate-session67,2246

elpa/org-20160620/ob-core.el,14698
(defconst org-babel-exeextorg-babel-exeext32,1024
(defvar org-babel-call-process-region-original nil)org-babel-call-process-region-original38,1153
(defvar org-babel-library-of-babel)org-babel-library-of-babel39,1205
(defvar org-edit-src-content-indentation)org-edit-src-content-indentation40,1241
(defvar org-src-lang-modes)org-src-lang-modes41,1283
(defgroup org-babel nilorg-babel111,5353
(defcustom org-confirm-babel-evaluate torg-confirm-babel-evaluate116,5474
(defcustom org-babel-no-eval-on-ctrl-c-ctrl-c nilorg-babel-no-eval-on-ctrl-c-ctrl-c142,6691
(defcustom org-babel-results-keyword "RESULTS"org-babel-results-keyword149,6893
(defcustom org-babel-noweb-wrap-start "<<"org-babel-noweb-wrap-start162,7266
(defcustom org-babel-noweb-wrap-end ">>"org-babel-noweb-wrap-end168,7444
(defcustom org-babel-inline-result-wrap "=%s="org-babel-inline-result-wrap174,7620
(defun org-babel-noweb-wrap (&optional regexp)org-babel-noweb-wrap185,7971
(defvar org-babel-src-name-regexporg-babel-src-name-regexp190,8138
(defvar org-babel-multi-line-header-regexporg-babel-multi-line-header-regexp194,8258
(defvar org-babel-src-block-regexporg-babel-src-block-regexp198,8413
(defvar org-babel-inline-src-block-regexporg-babel-inline-src-block-regexp210,8792
(defun org-babel-get-header (params key &optional others)org-babel-get-header220,9104
(defun org-babel-get-inline-src-block-matches ()org-babel-get-inline-src-block-matches229,9431
(defvar org-babel-inline-lob-one-liner-regexp)org-babel-inline-lob-one-liner-regexp239,9808
(defun org-babel-get-lob-one-liner-matches ()org-babel-get-lob-one-liner-matches240,9855
(defun org-babel-get-src-block-info (&optional light)org-babel-get-src-block-info251,10233
(defvar org-babel-exp-reference-buffer nilorg-babel-exp-reference-buffer287,11680
(defmacro org-babel-check-confirm-evaluate (info &rest body)org-babel-check-confirm-evaluate292,11897
(defsubst org-babel-check-evaluate (info)org-babel-check-evaluate329,13497
(defvar org-babel-confirm-evaluate-answer-no)org-babel-confirm-evaluate-answer-no338,13830
(defsubst org-babel-confirm-evaluate (info)org-babel-confirm-evaluate340,13877
(defun org-babel-execute-safely-maybe ()org-babel-execute-safely-maybe365,14779
(defun org-babel-execute-maybe ()org-babel-execute-maybe372,14981
(defmacro org-babel-when-in-src-block (&rest body)org-babel-when-in-src-block377,15112
(defun org-babel-execute-src-block-maybe ()org-babel-execute-src-block-maybe388,15402
(defun org-babel-view-src-block-info ()org-babel-view-src-block-info398,15741
(defun org-babel-expand-src-block-maybe ()org-babel-expand-src-block-maybe430,17147
(defun org-babel-load-in-session-maybe ()org-babel-load-in-session-maybe439,17448
(defun org-babel-pop-to-session-maybe ()org-babel-pop-to-session-maybe450,17819
(defconst org-babel-common-header-args-w-valuesorg-babel-common-header-args-w-values460,18163
(defconst org-babel-header-arg-namesorg-babel-header-arg-names497,19227
(defconst org-babel-safe-header-argsorg-babel-safe-header-args503,19464
(defmacro org-babel-header-args-safe-fn (safe-list)org-babel-header-args-safe-fn520,20317
(defvar org-babel-default-header-argsorg-babel-default-header-args539,20948
(defvar org-babel-default-inline-header-argsorg-babel-default-inline-header-args546,21309
(defvar org-babel-data-names '("tblname" "results" "name"))org-babel-data-names553,21647
(defvar org-babel-result-regexporg-babel-result-regexp555,21708
(defvar org-babel-result-w-name-regexporg-babel-result-w-name-regexp566,22129
(defvar org-babel-min-lines-for-block-output 10org-babel-min-lines-for-block-output570,22253
(defvar org-babel-noweb-error-all-langs nilorg-babel-noweb-error-all-langs578,22650
(defvar org-babel-noweb-error-langs nilorg-babel-noweb-error-langs583,22846
(defvar org-babel-hash-show 4org-babel-hash-show590,23183
(defvar org-babel-hash-show-time nilorg-babel-hash-show-time593,23282
(defvar org-babel-after-execute-hook nilorg-babel-after-execute-hook596,23402
(defun org-babel-named-src-block-regexp-for-name (&optional name)org-babel-named-src-block-regexp-for-name599,23517
(defun org-babel-named-data-regexp-for-name (name)org-babel-named-data-regexp-for-name610,23984
(defvar call-process-region)call-process-region615,24183
(defvar org-babel-current-src-block-location nilorg-babel-current-src-block-location616,24212
(defvar *this*)*this*623,24543
(defun org-babel-execute-src-block (&optional arg info params)org-babel-execute-src-block626,24575
(defun org-babel-expand-body:generic (body params &optional var-lines)org-babel-expand-body:generic753,29457
(defun org-babel-expand-src-block (&optional _arg info params)org-babel-expand-src-block769,30032
(defun org-babel-edit-distance (s1 s2)org-babel-edit-distance796,31224
(defun org-babel-combine-header-arg-lists (original &rest others)org-babel-combine-header-arg-lists817,31987
(defun org-babel-check-src-block ()org-babel-check-src-block830,32406
(defun org-babel-insert-header-arg (&optional header-arg value)org-babel-insert-header-arg852,33343
(defun org-babel-header-arg-expand ()org-babel-header-arg-expand891,34699
(defun org-babel-enter-header-arg-w-completion (&optional lang)org-babel-enter-header-arg-w-completion896,34955
(defun org-babel-load-in-session (&optional _arg info)org-babel-load-in-session915,35890
(defun org-babel-initiate-session (&optional arg info)org-babel-initiate-session941,36887
(defun org-babel-switch-to-session (&optional arg info)org-babel-switch-to-session970,38183
(defalias 'org-babel-pop-to-session 'org-babel-switch-to-session)org-babel-pop-to-session979,38534
(defvar org-src-window-setup)org-src-window-setup981,38601
(defun org-babel-switch-to-session-with-code (&optional arg _info)org-babel-switch-to-session-with-code984,38647
(defmacro org-babel-do-in-edit-buffer (&rest body)org-babel-do-in-edit-buffer1001,39241
(def-edebug-spec org-babel-do-in-edit-buffer (body))org-babel-do-in-edit-buffer1010,39619
(defun org-babel-do-key-sequence-in-edit-buffer (key)org-babel-do-key-sequence-in-edit-buffer1012,39673
(defvar org-bracket-link-regexp)org-bracket-link-regexp1026,40356
(defun org-babel-active-location-p ()org-babel-active-location-p1028,40390
(defun org-babel-open-src-block-result (&optional re-run)org-babel-open-src-block-result1033,40573
(defmacro org-babel-map-src-blocks (file &rest body)org-babel-map-src-blocks1060,41610
(def-edebug-spec org-babel-map-src-blocks (form body))org-babel-map-src-blocks1120,44276
(defmacro org-babel-map-inline-src-blocks (file &rest body)org-babel-map-inline-src-blocks1123,44347
(def-edebug-spec org-babel-map-inline-src-blocks (form body))org-babel-map-inline-src-blocks1145,45211
(defvar org-babel-lob-one-liner-regexp)org-babel-lob-one-liner-regexp1147,45274
(defmacro org-babel-map-call-lines (file &rest body)org-babel-map-call-lines1150,45330
(def-edebug-spec org-babel-map-call-lines (form body))org-babel-map-call-lines1171,46148
(defmacro org-babel-map-executables (file &rest body)org-babel-map-executables1174,46219
(def-edebug-spec org-babel-map-executables (form body))org-babel-map-executables1198,47143
(defun org-babel-execute-buffer (&optional arg)org-babel-execute-buffer1201,47215
(defun org-babel-execute-subtree (&optional arg)org-babel-execute-subtree1214,47668
(defun org-babel-sha1-hash (&optional info)org-babel-sha1-hash1226,48003
(defun org-babel-current-result-hash (&optional info)org-babel-current-result-hash1281,50162
(defun org-babel-set-current-result-hash (hash info)org-babel-set-current-result-hash1286,50345
(defun org-babel-hide-hash ()org-babel-hide-hash1297,50779
(defun org-babel-hide-all-hashes ()org-babel-hide-all-hashes1315,51506
(defun org-babel-hash-at-point (&optional point)org-babel-hash-at-point1328,52004
(defun org-babel-result-hide-spec ()org-babel-result-hide-spec1340,52505
(defvar org-babel-hide-result-overlays nilorg-babel-hide-result-overlays1347,52782
(defun org-babel-result-hide-all ()org-babel-result-hide-all1350,52856
(defun org-babel-show-result-all ()org-babel-show-result-all1359,53179
(defun org-babel-hide-result-toggle-maybe ()org-babel-hide-result-toggle-maybe1365,53378
(defun org-babel-hide-result-toggle (&optional force)org-babel-hide-result-toggle1376,53755
(defvar org-file-properties)org-file-properties1423,55908
(defun org-babel-params-from-properties (&optional lang)org-babel-params-from-properties1424,55937
(defvar org-src-preserve-indentation) ;; declare defcustom from org-srcorg-src-preserve-indentation1457,57197
(defun org-babel-parse-src-block-match ()org-babel-parse-src-block-match1458,57269
(defun org-babel-parse-inline-src-block-match ()org-babel-parse-inline-src-block-match1490,58582
(defun org-babel-balanced-split (string alts)org-babel-balanced-split1505,59235
(defun org-babel-join-splits-near-ch (ch list)org-babel-join-splits-near-ch1538,60550
(defun org-babel-parse-header-arguments (arg-string)org-babel-parse-header-arguments1550,61009
(defun org-babel-parse-multiple-vars (header-arguments)org-babel-parse-multiple-vars1566,61639
(defun org-babel-process-params (params)org-babel-process-params1583,62173
(defun org-babel-del-hlines (table)org-babel-del-hlines1621,63597
(defun org-babel-get-colnames (table)org-babel-get-colnames1625,63693
(defun org-babel-get-rownames (table)org-babel-get-rownames1634,64013
(defun org-babel-put-colnames (table colnames)org-babel-put-colnames1650,64517
(defun org-babel-put-rownames (table rownames)org-babel-put-rownames1654,64665
(defun org-babel-pick-name (names selector)org-babel-pick-name1663,64926
(defun org-babel-disassemble-tables (vars hlines colnames rownames)org-babel-disassemble-tables1677,65443
(defun org-babel-reassemble-table (table colnames rownames)org-babel-reassemble-table1705,66701
(defun org-babel-where-is-src-block-head (&optional src-block)org-babel-where-is-src-block-head1717,67284
(defun org-babel-goto-src-block-head ()org-babel-goto-src-block-head1739,68211
(defun org-babel-goto-named-src-block (name)org-babel-goto-named-src-block1746,68460
(defun org-babel-find-named-block (name)org-babel-find-named-block1781,69837
(defun org-babel-src-block-names (&optional file)org-babel-src-block-names1791,70225
(defun org-babel-goto-named-result (name)org-babel-goto-named-result1803,70627
(defun org-babel-find-named-result (name &optional point)org-babel-find-named-result1815,71067
(defun org-babel-result-names (&optional file)org-babel-result-names1835,71867
(defun org-babel-next-src-block (&optional arg)org-babel-next-src-block1845,72237
(defun org-babel-previous-src-block (&optional arg)org-babel-previous-src-block1852,72483
(defvar org-babel-load-languages)org-babel-load-languages1858,72723
(defun org-babel-mark-block ()org-babel-mark-block1861,72773
(defun org-babel-demarcate-block (&optional arg)org-babel-demarcate-block1872,73091
(defvar org-babel-lob-one-liner-regexp)org-babel-lob-one-liner-regexp1931,75418
(defun org-babel-where-is-src-block-result (&optional insert info hash indent)org-babel-where-is-src-block-result1932,75458
(defvar org-block-regexp)org-block-regexp2016,78460
(defun org-babel-read-result ()org-babel-read-result2017,78486
(defun org-babel-read-table ()org-babel-read-table2041,79436
(defun org-babel-read-list ()org-babel-read-list2048,79712
(defvar org-link-types-re)org-link-types-re2053,79901
(defun org-babel-read-link ()org-babel-read-link2054,79928
(defun org-babel-format-result (result &optional sep)org-babel-format-result2070,80532
(defun org-babel-insert-resultorg-babel-insert-result2080,80862
(defun org-babel-remove-result (&optional info keep-keyword)org-babel-remove-result2352,91423
(defun org-babel-remove-inline-result ()org-babel-remove-inline-result2364,91890
(defun org-babel-remove-result-one-or-many (x)org-babel-remove-result-one-or-many2382,92694
(defun org-babel-result-end ()org-babel-result-end2391,92990
(defun org-babel-result-to-file (result &optional description)org-babel-result-to-file2412,93832
(defvar org-babel-capitalize-example-region-markers nilorg-babel-capitalize-example-region-markers2427,94432
(defun org-babel-examplify-region (beg end &optional results-switches)org-babel-examplify-region2434,94670
(defun org-babel-update-block-body (new-body)org-babel-update-block-body2470,96092
(defun org-babel-merge-params (&rest plists)org-babel-merge-params2497,97094
(defvar org-babel-use-quick-and-dirty-noweb-expansion nilorg-babel-use-quick-and-dirty-noweb-expansion2644,102335
(defun org-babel-noweb-p (params context)org-babel-noweb-p2650,102646
(defun org-babel-expand-noweb-references (&optional info parent-buffer)org-babel-expand-noweb-references2665,103176
(defun org-babel--script-escape-inner (str)org-babel--script-escape-inner2797,109589
(defun org-babel-script-escape (str &optional force)org-babel-script-escape2861,111728
(defun org-babel-read (cell &optional inhibit-lisp-eval)org-babel-read2890,112822
(defun org-babel-number-p (string)org-babel-number-p2908,113632
(defun org-babel-import-elisp-from-file (file-name &optional separator)org-babel-import-elisp-from-file2917,113951
(defun org-babel-string-read (cell)org-babel-string-read2939,114699
(defun org-babel-chomp (string &optional regexp)org-babel-chomp2946,114968
(defun org-babel-trim (string &optional regexp)org-babel-trim2956,115387
(defun org-babel-tramp-handle-call-process-regionorg-babel-tramp-handle-call-process-region2964,115700
(defun org-babel-local-file-name (file)org-babel-local-file-name2983,116581
(defun org-babel-process-file-name (name &optional no-quote-p)org-babel-process-file-name2987,116712
(defvar org-babel-temporary-directory)org-babel-temporary-directory2997,117249
(defcustom org-babel-remote-temporary-directory "/tmp/"org-babel-remote-temporary-directory3008,117725
(defmacro org-babel-result-cond (result-params scalar-form &rest table-forms)org-babel-result-cond3013,117874
(def-edebug-spec org-babel-result-cond (form form body))org-babel-result-cond3033,118577
(defun org-babel-temp-file (prefix &optional suffix)org-babel-temp-file3035,118635
(defun org-babel-remove-temporary-directory ()org-babel-remove-temporary-directory3053,119433
(defun org-babel-one-header-arg-safe-p (pair safe-list)org-babel-one-header-arg-safe-p3079,120442
(defun org-babel-generate-file-param (src-name params)org-babel-generate-file-param3097,121009
(defun org-babel-graphical-output-file (params)org-babel-graphical-output-file3133,122486

elpa/org-20160620/ob-css.el,248
(defvar org-babel-default-header-args:css '())org-babel-default-header-args:css32,1041
(defun org-babel-execute:css (body params)org-babel-execute:css34,1089
(defun org-babel-prep-session:css (session params)org-babel-prep-session:css39,1232

elpa/org-20160620/ob-ditaa.el,540
(defvar org-babel-default-header-args:ditaaorg-babel-default-header-args:ditaa42,1323
(defcustom org-ditaa-jar-path (expand-file-nameorg-ditaa-jar-path48,1518
(defcustom org-babel-ditaa-java-cmd "java"org-babel-ditaa-java-cmd61,1871
(defcustom org-ditaa-eps-jar-pathorg-ditaa-eps-jar-path66,2009
(defcustom org-ditaa-jar-option "-jar"org-ditaa-jar-option74,2251
(defun org-babel-execute:ditaa (body params)org-babel-execute:ditaa81,2437
(defun org-babel-prep-session:ditaa (session params)org-babel-prep-session:ditaa118,3996

elpa/org-20160620/ob-dot.el,324
(defvar org-babel-default-header-args:dotorg-babel-default-header-args:dot43,1351
(defun org-babel-expand-body:dot (body params)org-babel-expand-body:dot47,1508
(defun org-babel-execute:dot (body params)org-babel-execute:dot64,1958
(defun org-babel-prep-session:dot (session params)org-babel-prep-session:dot83,2767

elpa/org-20160620/ob-ebnf.el,180
(defvar org-babel-default-header-args:ebnf '((:style . nil)))org-babel-default-header-args:ebnf49,1874
(defun org-babel-execute:ebnf (body params)org-babel-execute:ebnf53,2007

elpa/org-20160620/ob-emacs-lisp.el,284
(defvar org-babel-default-header-args:emacs-lisp nilorg-babel-default-header-args:emacs-lisp31,1015
(defun org-babel-expand-body:emacs-lisp (body params)org-babel-expand-body:emacs-lisp34,1135
(defun org-babel-execute:emacs-lisp (body params)org-babel-execute:emacs-lisp51,1766

elpa/org-20160620/ob-eval.el,521
(defvar org-babel-error-buffer-name "*Org-Babel Error Output*")org-babel-error-buffer-name33,1093
(defun org-babel-eval-error-notify (exit-code stderr)org-babel-eval-error-notify36,1233
(defun org-babel-eval (cmd body)org-babel-eval45,1617
(defun org-babel-eval-read-file (file)org-babel-eval-read-file70,2561
(defun org-babel--shell-command-on-region (start end command error-buffer)org-babel--shell-command-on-region75,2718
(defun org-babel-eval-wipe-error-buffer ()org-babel-eval-wipe-error-buffer139,5236

elpa/org-20160620/ob-exp.el,1411
(defvar org-babel-lob-one-liner-regexp)org-babel-lob-one-liner-regexp31,1002
(defvar org-babel-ref-split-regexp)org-babel-ref-split-regexp32,1042
(defvar org-list-forbidden-blocks)org-list-forbidden-blocks33,1078
(defcustom org-export-babel-evaluate torg-export-babel-evaluate49,1963
(defvar org-link-search-inhibit-query)org-link-search-inhibit-query61,2434
(defmacro org-babel-exp-in-export-file (lang &rest body)org-babel-exp-in-export-file62,2473
(def-edebug-spec org-babel-exp-in-export-file (form body))org-babel-exp-in-export-file93,3799
(defun org-babel-exp-src-block (&rest headers)org-babel-exp-src-block95,3859
(defcustom org-babel-exp-call-line-templateorg-babel-exp-call-line-template134,5272
(defvar org-babel-default-lob-header-args)org-babel-default-lob-header-args151,5785
(defun org-babel-exp-process-buffer (reference-buffer)org-babel-exp-process-buffer152,5828
(defun org-babel-in-example-or-verbatim ()org-babel-in-example-or-verbatim299,11059
(defun org-babel-exp-do-export (info type &optional hash)org-babel-exp-do-export312,11547
(defcustom org-babel-exp-code-templateorg-babel-exp-code-template328,12410
(defcustom org-babel-exp-inline-code-templateorg-babel-exp-inline-code-template348,13205
(defun org-babel-exp-code (info type)org-babel-exp-code370,14049
(defun org-babel-exp-results (info type &optional silent hash)org-babel-exp-results396,15013

elpa/org-20160620/ob-forth.el,280
(defvar org-babel-default-header-args:forth '((:session . "yes"))org-babel-default-header-args:forth39,1252
(defun org-babel-execute:forth (body params)org-babel-execute:forth42,1372
(defun org-babel-forth-session-execute (body params)org-babel-forth-session-execute52,1861

elpa/org-20160620/ob-fortran.el,891
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts38,1249
(defvar org-babel-default-header-args:fortran '())org-babel-default-header-args:fortran41,1349
(defvar org-babel-fortran-compiler "gfortran"org-babel-fortran-compiler43,1401
(defun org-babel-execute:fortran (body params)org-babel-execute:fortran47,1534
(defun org-babel-expand-body:fortran (body params)org-babel-expand-body:fortran80,2991
(defun org-babel-fortran-ensure-main-wrap (body params)org-babel-fortran-ensure-main-wrap109,4057
(defun org-babel-prep-session:fortran (session params)org-babel-prep-session:fortran117,4455
(defun org-babel-load-session:fortran (session body params)org-babel-load-session:fortran122,4677
(defun org-babel-fortran-var-to-fortran (pair)org-babel-fortran-var-to-fortran129,4925
(defun org-babel-fortran-transform-list (val)org-babel-fortran-transform-list161,6155

elpa/org-20160620/ob-gnuplot.el,1546
(defvar org-babel-default-header-args:gnuplotorg-babel-default-header-args:gnuplot51,1782
(defvar org-babel-header-args:gnuplotorg-babel-header-args:gnuplot55,1964
(defvar org-babel-gnuplot-timestamp-fmt nil) ; Dynamically scoped.org-babel-gnuplot-timestamp-fmt67,2227
(defvar *org-babel-gnuplot-missing* nil)*org-babel-gnuplot-missing*69,2295
(defcustom *org-babel-gnuplot-terms**org-babel-gnuplot-terms*71,2337
(defun org-babel-gnuplot-process-vars (params)org-babel-gnuplot-process-vars78,2589
(defun org-babel-expand-body:gnuplot (body params)org-babel-expand-body:gnuplot99,3338
(defun org-babel-execute:gnuplot (body params)org-babel-execute:gnuplot170,6205
(defun org-babel-prep-session:gnuplot (session params)org-babel-prep-session:gnuplot203,7428
(defun org-babel-load-session:gnuplot (session body params)org-babel-load-session:gnuplot215,7974
(defun org-babel-variable-assignments:gnuplot (params)org-babel-variable-assignments:gnuplot224,8320
(defvar gnuplot-buffer)gnuplot-buffer230,8566
(defun org-babel-gnuplot-initiate-session (&optional session params)org-babel-gnuplot-initiate-session231,8590
(defun org-babel-gnuplot-quote-timestamp-field (s)org-babel-gnuplot-quote-timestamp-field242,9034
(defvar org-table-number-regexp)org-table-number-regexp247,9243
(defvar org-ts-regexp3)org-ts-regexp3248,9276
(defun org-babel-gnuplot-quote-tsv-field (s)org-babel-gnuplot-quote-tsv-field249,9300
(defun org-babel-gnuplot-table-to-data (table data-file params)org-babel-gnuplot-table-to-data263,9755

elpa/org-20160620/ob-groovy.el,681
(defvar org-babel-tangle-lang-exts) ;; Autoloadedorg-babel-tangle-lang-exts36,1234
(defvar org-babel-default-header-args:groovy '())org-babel-default-header-args:groovy38,1349
(defcustom org-babel-groovy-command "groovy"org-babel-groovy-command39,1399
(defun org-babel-execute:groovy (body params)org-babel-execute:groovy48,1699
(defvar org-babel-groovy-wrapper-methodorg-babel-groovy-wrapper-method69,2637
(defun org-babel-groovy-evaluateorg-babel-groovy-evaluate80,2827
(defun org-babel-prep-session:groovy (session params)org-babel-prep-session:groovy104,3828
(defun org-babel-groovy-initiate-session (&optional session)org-babel-groovy-initiate-session108,4015

elpa/org-20160620/ob-haskell.el,1182
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts52,1833
(defvar org-babel-default-header-args:haskellorg-babel-default-header-args:haskell55,1932
(defvar org-babel-haskell-lhs2tex-command "lhs2tex")org-babel-haskell-lhs2tex-command58,2004
(defvar org-babel-haskell-eoe "\"org-babel-haskell-eoe\"")org-babel-haskell-eoe60,2058
(defun org-babel-execute:haskell (body params)org-babel-execute:haskell62,2118
(defun org-babel-haskell-read-string (string)org-babel-haskell-read-string93,3574
(defun org-babel-haskell-initiate-session (&optional session params)org-babel-haskell-initiate-session99,3761
(defun org-babel-load-session:haskell (session body params)org-babel-load-session:haskell107,4110
(defun org-babel-prep-session:haskell (session params)org-babel-prep-session:haskell117,4507
(defun org-babel-variable-assignments:haskell (params)org-babel-variable-assignments:haskell128,4915
(defun org-babel-haskell-var-to-haskell (var)org-babel-haskell-var-to-haskell136,5220
(defvar org-export-copy-to-kill-ring)org-export-copy-to-kill-ring144,5547
(defun org-babel-haskell-export-to-lhs (&optional arg)org-babel-haskell-export-to-lhs149,5730

elpa/org-20160620/ob-io.el,668
(defvar org-babel-tangle-lang-exts) ;; Autoloadedorg-babel-tangle-lang-exts38,1360
(defvar org-babel-default-header-args:io '())org-babel-default-header-args:io40,1467
(defvar org-babel-io-command "io"org-babel-io-command41,1513
(defun org-babel-execute:io (body params)org-babel-execute:io44,1603
(defvar org-babel-io-wrapper-methodorg-babel-io-wrapper-method65,2521
(defun org-babel-io-evaluate (session body &optional result-type result-params)org-babel-io-evaluate72,2587
(defun org-babel-prep-session:io (session params)org-babel-prep-session:io96,3684
(defun org-babel-io-initiate-session (&optional session)org-babel-io-initiate-session100,3863

elpa/org-20160620/ob-J.el,989
(defun org-babel-expand-body:J (body params &optional processed-params)org-babel-expand-body:J37,1181
(defun org-babel-J-interleave-echos (body)org-babel-J-interleave-echos42,1406
(defun org-babel-J-interleave-echos-except-functions (body)org-babel-J-interleave-echos-except-functions46,1572
(defun org-babel-execute:J (body params)org-babel-execute:J62,2175
(defun org-babel-J-eval-string (str)org-babel-J-eval-string84,3089
(defun org-babel-J-strip-whitespace (str)org-babel-J-strip-whitespace96,3470
(defun obj-get-string-alignment (str)obj-get-string-alignment105,3696
(defun org-babel-J-print-block (x)org-babel-J-print-block138,4657
(defun obj-match-second-space-left (s)obj-match-second-space-left152,5065
(defun obj-match-second-space-right (s)obj-match-second-space-right157,5249
(defun obj-string-match-m (regexp string &optional start)obj-string-match-m162,5441
(defun org-babel-j-initiate-session (&optional session)org-babel-j-initiate-session170,5709

elpa/org-20160620/ob-java.el,293
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts32,1068
(defcustom org-babel-java-command "java"org-babel-java-command35,1166
(defcustom org-babel-java-compiler "javac"org-babel-java-compiler44,1434
(defun org-babel-execute:java (body params)org-babel-execute:java53,1708

elpa/org-20160620/ob-js.el,765
(defvar org-babel-default-header-args:js '()org-babel-default-header-args:js46,1505
(defvar org-babel-js-eoe "org-babel-js-eoe"org-babel-js-eoe49,1601
(defcustom org-babel-js-cmd "node"org-babel-js-cmd52,1701
(defvar org-babel-js-function-wrapperorg-babel-js-function-wrapper58,1840
(defun org-babel-execute:js (body params)org-babel-execute:js62,1992
(defun org-babel-js-read (results)org-babel-js-read95,3379
(defun org-babel-js-var-to-js (var)org-babel-js-var-to-js111,4016
(defun org-babel-prep-session:js (session params)org-babel-prep-session:js119,4336
(defun org-babel-variable-assignments:js (params)org-babel-variable-assignments:js132,4851
(defun org-babel-js-initiate-session (&optional session)org-babel-js-initiate-session139,5134

elpa/org-20160620/ob-keys.el,270
(defvar org-babel-key-prefix "\C-c\C-v"org-babel-key-prefix34,1178
(defvar org-babel-map (make-sparse-keymap)org-babel-map40,1434
(defun org-babel-describe-bindings ()org-babel-describe-bindings44,1542
(defvar org-babel-key-bindingsorg-babel-key-bindings49,1701

elpa/org-20160620/ob-latex.el,1189
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts42,1553
(defvar org-format-latex-header)	  ; From org.elorg-format-latex-header45,1651
(defvar org-format-latex-options)	  ; From org.elorg-format-latex-options46,1700
(defvar org-latex-default-packages-alist) ; From org.elorg-latex-default-packages-alist47,1750
(defvar org-latex-packages-alist)	  ; From org.elorg-latex-packages-alist48,1806
(defvar org-babel-default-header-args:latexorg-babel-default-header-args:latex50,1857
(defconst org-babel-header-args:latexorg-babel-header-args:latex54,2019
(defcustom org-babel-latex-htlatex "htlatex"org-babel-latex-htlatex65,2301
(defcustom org-babel-latex-htlatex-packagesorg-babel-latex-htlatex-packages70,2454
(defun org-babel-expand-body:latex (body params)org-babel-expand-body:latex76,2656
(defun org-babel-execute:latex (body params)org-babel-execute:latex87,3134
(defun org-babel-latex-convert-pdf (pdffile out-file im-in-options im-out-options)org-babel-latex-convert-pdf205,7917
(defun org-babel-latex-tex-to-pdf (file)org-babel-latex-tex-to-pdf212,8232
(defun org-babel-prep-session:latex (session params)org-babel-prep-session:latex217,8380

elpa/org-20160620/ob-ledger.el,261
(defvar org-babel-default-header-args:ledgerorg-babel-default-header-args:ledger41,1290
(defun org-babel-execute:ledger (body params)org-babel-execute:ledger45,1451
(defun org-babel-prep-session:ledger (session params)org-babel-prep-session:ledger64,2294

elpa/org-20160620/ob-lilypond.el,3579
(defalias 'lilypond-mode 'LilyPond-mode)lilypond-mode37,1322
(defvar org-babel-default-header-args:lilypond '()org-babel-default-header-args:lilypond41,1428
(defvar org-babel-lilypond-compile-post-tangle torg-babel-lilypond-compile-post-tangle46,1638
(defvar org-babel-lilypond-display-pdf-post-tangle torg-babel-lilypond-display-pdf-post-tangle53,1961
(defvar org-babel-lilypond-play-midi-post-tangle torg-babel-lilypond-play-midi-post-tangle59,2264
(defvar org-babel-lilypond-ly-command ""org-babel-lilypond-ly-command65,2562
(defvar org-babel-lilypond-pdf-command ""org-babel-lilypond-pdf-command68,2726
(defvar org-babel-lilypond-midi-command ""org-babel-lilypond-midi-command71,2890
(defcustom org-babel-lilypond-commandsorg-babel-lilypond-commands74,3056
(defvar org-babel-lilypond-gen-png nilorg-babel-lilypond-gen-png101,3999
(defvar org-babel-lilypond-gen-svg nilorg-babel-lilypond-gen-svg104,4106
(defvar org-babel-lilypond-gen-html nilorg-babel-lilypond-gen-html107,4216
(defvar org-babel-lilypond-gen-pdf nilorg-babel-lilypond-gen-pdf110,4317
(defvar org-babel-lilypond-use-eps nilorg-babel-lilypond-use-eps113,4419
(defvar org-babel-lilypond-arrange-mode nilorg-babel-lilypond-arrange-mode116,4516
(defun org-babel-expand-body:lilypond (body params)org-babel-expand-body:lilypond124,4797
(defun org-babel-execute:lilypond (body params)org-babel-execute:lilypond139,5244
(defun org-babel-lilypond-tangle ()org-babel-lilypond-tangle150,5772
(defun org-babel-lilypond-process-basic (body params)org-babel-lilypond-process-basic158,6078
(defun org-babel-prep-session:lilypond (session params)org-babel-prep-session:lilypond185,6871
(defun org-babel-lilypond-execute-tangled-ly ()org-babel-lilypond-execute-tangled-ly189,7067
(defun org-babel-lilypond-compile-lilyfile (file-name &optional test)org-babel-lilypond-compile-lilyfile213,8298
(defun org-babel-lilypond-check-for-compile-error (file-name &optional test)org-babel-lilypond-check-for-compile-error235,9338
(defun org-babel-lilypond-process-compile-error (file-name)org-babel-lilypond-process-compile-error248,9852
(defun org-babel-lilypond-mark-error-line (file-name line)org-babel-lilypond-mark-error-line256,10255
(defun org-babel-lilypond-parse-line-num (&optional buffer)org-babel-lilypond-parse-line-num273,10846
(defun org-babel-lilypond-parse-error-line (file-name lineNo)org-babel-lilypond-parse-error-line295,11497
(defun org-babel-lilypond-attempt-to-open-pdf (file-name &optional test)org-babel-lilypond-attempt-to-open-pdf309,11967
(defun org-babel-lilypond-attempt-to-play-midi (file-name &optional test)org-babel-lilypond-attempt-to-play-midi327,12690
(defun org-babel-lilypond-toggle-midi-play ()org-babel-lilypond-toggle-midi-play345,13457
(defun org-babel-lilypond-toggle-pdf-display ()org-babel-lilypond-toggle-pdf-display354,13867
(defun org-babel-lilypond-toggle-png-generation ()org-babel-lilypond-toggle-png-generation363,14289
(defun org-babel-lilypond-toggle-html-generation ()org-babel-lilypond-toggle-html-generation370,14618
(defun org-babel-lilypond-toggle-pdf-generation ()org-babel-lilypond-toggle-pdf-generation377,14941
(defun org-babel-lilypond-toggle-arrange-mode ()org-babel-lilypond-toggle-arrange-mode384,15258
(defun org-babel-lilypond-switch-extension (file-name ext)org-babel-lilypond-switch-extension392,15587
(defun org-babel-lilypond-get-header-args (mode)org-babel-lilypond-get-header-args397,15776
(defun org-babel-lilypond-set-header-args (mode)org-babel-lilypond-set-header-args411,16215

elpa/org-20160620/ob-lisp.el,562
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts40,1276
(defvar org-babel-default-header-args:lisp '())org-babel-default-header-args:lisp43,1374
(defvar org-babel-header-args:lisp '((package . :any)))org-babel-header-args:lisp44,1422
(defcustom org-babel-lisp-dir-fmtorg-babel-lisp-dir-fmt46,1479
(defun org-babel-expand-body:lisp (body params)org-babel-expand-body:lisp55,1790
(defun org-babel-execute:lisp (body params)org-babel-execute:lisp74,2412
(defun org-babel-lisp-vector-to-list (results)org-babel-lisp-vector-to-list103,3494

elpa/org-20160620/ob-lob.el,922
(defvar org-babel-library-of-babel nilorg-babel-library-of-babel33,1073
(defcustom org-babel-lob-files nilorg-babel-lob-files38,1242
(defvar org-babel-default-lob-header-args '((:exports . "results"))org-babel-default-lob-header-args45,1467
(defun org-babel-lob-ingest (&optional file)org-babel-lob-ingest48,1606
(defconst org-babel-block-lob-one-liner-regexporg-babel-block-lob-one-liner-regexp65,2287
(defconst org-babel-inline-lob-one-liner-regexporg-babel-inline-lob-one-liner-regexp71,2564
(defconst org-babel-lob-one-liner-regexporg-babel-lob-one-liner-regexp77,2813
(defun org-babel-lob-execute-maybe ()org-babel-lob-execute-maybe85,3085
(defun org-babel-lob-get-info ()org-babel-lob-get-info96,3506
(defvar org-babel-default-header-args:emacs-lisp) ; Defined in ob-emacs-lisp.elorg-babel-default-header-args:emacs-lisp124,4453
(defun org-babel-lob-execute (info)org-babel-lob-execute125,4533

elpa/org-20160620/ob-lua.el,2312
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts38,1293
(defvar org-babel-default-header-args:lua '())org-babel-default-header-args:lua41,1389
(defcustom org-babel-lua-command "lua"org-babel-lua-command43,1437
(defcustom org-babel-lua-modeorg-babel-lua-mode50,1614
(defvar org-src-preserve-indentation)org-src-preserve-indentation59,1921
(defcustom org-babel-lua-hline-to "None"org-babel-lua-hline-to61,1960
(defcustom org-babel-lua-None-to 'hlineorg-babel-lua-None-to68,2164
(defun org-babel-execute:lua (body params)org-babel-execute:lua75,2355
(defun org-babel-prep-session:lua (session params)org-babel-prep-session:lua98,3387
(defun org-babel-load-session:lua (session body params)org-babel-load-session:lua110,3865
(defun org-babel-variable-assignments:lua (params)org-babel-variable-assignments:lua121,4210
(defun org-babel-lua-var-to-lua (var)org-babel-lua-var-to-lua130,4498
(defun org-babel-lua-table-or-string (results)org-babel-lua-table-or-string151,5261
(defvar org-babel-lua-buffers '((:default . "*Lua*")))org-babel-lua-buffers162,5661
(defun org-babel-lua-session-buffer (session)org-babel-lua-session-buffer164,5717
(defun org-babel-lua-with-earmuffs (session)org-babel-lua-with-earmuffs168,5858
(defun org-babel-lua-without-earmuffs (session)org-babel-lua-without-earmuffs175,6115
(defvar lua-default-interpreter)lua-default-interpreter182,6393
(defvar lua-which-bufname)lua-which-bufname183,6426
(defvar lua-shell-buffer-name)lua-shell-buffer-name184,6453
(defun org-babel-lua-initiate-session-by-key (&optional session)org-babel-lua-initiate-session-by-key185,6484
(defun org-babel-lua-initiate-session (&optional session params)org-babel-lua-initiate-session228,8288
(defvar org-babel-lua-eoe-indicator "'org_babel_lua_eoe'"org-babel-lua-eoe-indicator234,8535
(defvar org-babel-lua-wrapper-methodorg-babel-lua-wrapper-method236,8650
(defvar org-babel-lua-pp-wrapper-methodorg-babel-lua-pp-wrapper-method245,8775
(defun org-babel-lua-evaluateorg-babel-lua-evaluate278,9452
(defun org-babel-lua-evaluate-external-processorg-babel-lua-evaluate-external-process287,9770
(defun org-babel-lua-evaluate-sessionorg-babel-lua-evaluate-session319,10909
(defun org-babel-lua-read-string (string)org-babel-lua-read-string373,12857

elpa/org-20160620/ob-makefile.el,278
(defvar org-babel-default-header-args:makefile '())org-babel-default-header-args:makefile32,1047
(defun org-babel-execute:makefile (body params)org-babel-execute:makefile34,1100
(defun org-babel-prep-session:makefile (session params)org-babel-prep-session:makefile39,1253

elpa/org-20160620/ob-matlab.el,0

elpa/org-20160620/ob-maxima.el,657
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts38,1192
(defvar org-babel-default-header-args:maxima '())org-babel-default-header-args:maxima41,1291
(defcustom org-babel-maxima-commandorg-babel-maxima-command43,1342
(defun org-babel-maxima-expand (body params)org-babel-maxima-expand49,1518
(defun org-babel-execute:maxima (body params)org-babel-execute:maxima68,2129
(defun org-babel-prep-session:maxima (session params)org-babel-prep-session:maxima101,3636
(defun org-babel-maxima-var-to-maxima (pair)org-babel-maxima-var-to-maxima104,3737
(defun org-babel-maxima-elisp-to-maxima (val)org-babel-maxima-elisp-to-maxima116,4129

elpa/org-20160620/ob-mscgen.el,261
(defvar org-babel-default-header-args:mscgenorg-babel-default-header-args:mscgen59,1845
(defun org-babel-execute:mscgen (body params)org-babel-execute:mscgen63,2008
(defun org-babel-prep-session:mscgen (session params)org-babel-prep-session:mscgen76,2653

elpa/org-20160620/ob-ocaml.el,1113
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts46,1548
(defvar org-babel-default-header-args:ocaml '())org-babel-default-header-args:ocaml49,1645
(defvar org-babel-ocaml-eoe-indicator "\"org-babel-ocaml-eoe\";;")org-babel-ocaml-eoe-indicator51,1695
(defvar org-babel-ocaml-eoe-output "org-babel-ocaml-eoe")org-babel-ocaml-eoe-output52,1762
(defcustom org-babel-ocaml-command "ocaml"org-babel-ocaml-command54,1821
(defun org-babel-execute:ocaml (body params)org-babel-execute:ocaml61,2004
(defvar tuareg-interactive-buffer-name)tuareg-interactive-buffer-name107,3647
(defun org-babel-prep-session:ocaml (session params)org-babel-prep-session:ocaml108,3687
(defun org-babel-variable-assignments:ocaml (params)org-babel-variable-assignments:ocaml121,4390
(defun org-babel-ocaml-elisp-to-ocaml (val)org-babel-ocaml-elisp-to-ocaml128,4682
(defun org-babel-ocaml-parse-output (value type)org-babel-ocaml-parse-output134,4906
(defun org-babel-ocaml-read-list (results)org-babel-ocaml-read-list149,5388
(defun org-babel-ocaml-read-array (results)org-babel-ocaml-read-array159,5881

elpa/org-20160620/ob-octave.el,2200
(defvar org-babel-default-header-args:matlab '())org-babel-default-header-args:matlab38,1191
(defvar org-babel-default-header-args:octave '())org-babel-default-header-args:octave39,1241
(defvar org-babel-matlab-shell-command "matlab -nosplash"org-babel-matlab-shell-command41,1292
(defvar org-babel-octave-shell-command "octave -q"org-babel-octave-shell-command43,1407
(defvar org-babel-matlab-with-emacs-link nilorg-babel-matlab-with-emacs-link46,1516
(defvar org-babel-matlab-emacs-link-wrapper-methodorg-babel-matlab-emacs-link-wrapper-method51,1716
(defvar org-babel-octave-wrapper-methodorg-babel-octave-wrapper-method58,1900
(defvar org-babel-octave-eoe-indicator "'org_babel_eoe'")org-babel-octave-eoe-indicator64,2068
(defvar org-babel-octave-eoe-output "ans = org_babel_eoe")org-babel-octave-eoe-output66,2127
(defun org-babel-execute:matlab (body params)org-babel-execute:matlab68,2187
(defun org-babel-execute:octave (body params &optional matlabp)org-babel-execute:octave72,2331
(defun org-babel-prep-session:matlab (session params)org-babel-prep-session:matlab106,3550
(defun org-babel-variable-assignments:octave (params)org-babel-variable-assignments:octave110,3704
(defalias 'org-babel-variable-assignments:matlaborg-babel-variable-assignments:matlab119,4003
(defun org-babel-octave-var-to-octave (var)org-babel-octave-var-to-octave122,4095
(defun org-babel-prep-session:octave (session params &optional matlabp)org-babel-prep-session:octave135,4522
(defun org-babel-matlab-initiate-session (&optional session params)org-babel-matlab-initiate-session145,5029
(defun org-babel-octave-initiate-session (&optional session params matlabp)org-babel-octave-initiate-session151,5312
(defun org-babel-octave-evaluateorg-babel-octave-evaluate168,6085
(defun org-babel-octave-evaluate-external-process (body result-type matlabp)org-babel-octave-evaluate-external-process178,6554
(defun org-babel-octave-evaluate-sessionorg-babel-octave-evaluate-session193,7153
(defun org-babel-octave-import-elisp-from-file (file-name)org-babel-octave-import-elisp-from-file253,9314
(defun org-babel-octave-read-string (string)org-babel-octave-read-string266,9843

elpa/org-20160620/ob-org.el,398
(defvar org-babel-default-header-args:orgorg-babel-default-header-args:org35,1178
(defvar org-babel-org-default-headerorg-babel-org-default-header39,1330
(defun org-babel-expand-body:org (body params)org-babel-expand-body:org43,1462
(defun org-babel-execute:org (body params)org-babel-execute:org51,1716
(defun org-babel-prep-session:org (session params)org-babel-prep-session:org64,2305

elpa/org-20160620/ob-perl.el,1244
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts33,1051
(defvar org-babel-default-header-args:perl '())org-babel-default-header-args:perl36,1147
(defvar org-babel-perl-command "perl"org-babel-perl-command38,1196
(defun org-babel-execute:perl (body params)org-babel-execute:perl41,1288
(defun org-babel-prep-session:perl (session params)org-babel-prep-session:perl57,2085
(defun org-babel-variable-assignments:perl (params)org-babel-variable-assignments:perl61,2252
(defvar org-babel-perl-var-wrap "q(%s)"org-babel-perl-var-wrap70,2535
(defvar org-babel-perl--lvl)org-babel-perl--lvl73,2628
(defun org-babel-perl--var-to-perl (var &optional varn)org-babel-perl--var-to-perl74,2657
(defvar org-babel-perl-buffers '(:default . nil))org-babel-perl-buffers93,3380
(defun org-babel-perl-initiate-session (&optional session params)org-babel-perl-initiate-session95,3431
(defvar org-babel-perl-wrapper-method "{org-babel-perl-wrapper-method99,3564
(defvar org-babel-perl-preface nil)org-babel-perl-preface123,4031
(defvar org-babel-perl-pp-wrapper-methodorg-babel-perl-pp-wrapper-method125,4068
(defun org-babel-perl-evaluate (session ibody &optional result-type result-params)org-babel-perl-evaluate128,4117

elpa/org-20160620/ob-picolisp.el,530
(defvar org-babel-tangle-lang-exts) ;; Autoloadedorg-babel-tangle-lang-exts61,2459
(defvar org-babel-picolisp-eoe "org-babel-picolisp-eoe"org-babel-picolisp-eoe72,2888
(defcustom org-babel-picolisp-cmd "pil"org-babel-picolisp-cmd75,3000
(defun org-babel-expand-body:picolisp (body params)org-babel-expand-body:picolisp81,3150
(defun org-babel-execute:picolisp (body params)org-babel-execute:picolisp97,3765
(defun org-babel-picolisp-initiate-session (&optional session-name)org-babel-picolisp-initiate-session170,7369

elpa/org-20160620/ob-plantuml.el,339
(defvar org-babel-default-header-args:plantumlorg-babel-default-header-args:plantuml39,1282
(defcustom org-plantuml-jar-path ""org-plantuml-jar-path43,1441
(defun org-babel-execute:plantuml (body params)org-babel-execute:plantuml49,1568
(defun org-babel-prep-session:plantuml (session params)org-babel-prep-session:plantuml77,2827

elpa/org-20160620/ob-processing.el,938
(defvar org-babel-temporary-directory)org-babel-temporary-directory59,2136
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts61,2176
(defvar org-babel-default-header-args:processingorg-babel-default-header-args:processing67,2430
(defvar org-babel-processing-processing-js-filename "processing.js"org-babel-processing-processing-js-filename71,2594
(defun org-babel-processing-view-sketch ()org-babel-processing-view-sketch74,2704
(defun org-babel-execute:processing (body params)org-babel-execute:processing116,4143
(defun org-babel-prep-session:processing (session params)org-babel-prep-session:processing137,4828
(defun org-babel-variable-assignments:processing (params)org-babel-variable-assignments:processing142,5034
(defun org-babel-processing-var-to-processing (pair)org-babel-processing-var-to-processing147,5273
(defun org-babel-processing-define-type (data)org-babel-processing-define-type177,6376

elpa/org-20160620/ob-python.el,2402
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts38,1309
(defvar org-babel-default-header-args:python '())org-babel-default-header-args:python41,1407
(defcustom org-babel-python-command "python"org-babel-python-command43,1458
(defcustom org-babel-python-modeorg-babel-python-mode50,1644
(defcustom org-babel-python-hline-to "None"org-babel-python-hline-to59,1967
(defcustom org-babel-python-None-to 'hlineorg-babel-python-None-to66,2177
(defun org-babel-execute:python (body params)org-babel-execute:python73,2374
(defun org-babel-prep-session:python (session params)org-babel-prep-session:python98,3507
(defun org-babel-load-session:python (session body params)org-babel-load-session:python110,4011
(defun org-babel-variable-assignments:python (params)org-babel-variable-assignments:python121,4376
(defun org-babel-python-var-to-python (var)org-babel-python-var-to-python130,4676
(defun org-babel-python-table-or-string (results)org-babel-python-table-or-string142,5181
(defvar org-babel-python-buffers '((:default . "*Python*")))org-babel-python-buffers153,5624
(defun org-babel-python-session-buffer (session)org-babel-python-session-buffer155,5686
(defun org-babel-python-with-earmuffs (session)org-babel-python-with-earmuffs159,5833
(defun org-babel-python-without-earmuffs (session)org-babel-python-without-earmuffs166,6093
(defvar py-default-interpreter)py-default-interpreter173,6374
(defvar py-which-bufname)py-which-bufname174,6406
(defvar python-shell-buffer-name)python-shell-buffer-name175,6432
(defun org-babel-python-initiate-session-by-key (&optional session)org-babel-python-initiate-session-by-key176,6466
(defun org-babel-python-initiate-session (&optional session params)org-babel-python-initiate-session219,8339
(defvar org-babel-python-eoe-indicator "'org_babel_python_eoe'"org-babel-python-eoe-indicator225,8595
(defconst org-babel-python-wrapper-methodorg-babel-python-wrapper-method227,8716
(defconst org-babel-python-pp-wrapper-methodorg-babel-python-pp-wrapper-method233,8817
(defun org-babel-python-evaluateorg-babel-python-evaluate241,8947
(defun org-babel-python-evaluate-external-processorg-babel-python-evaluate-external-process250,9275
(defun org-babel-python-evaluate-sessionorg-babel-python-evaluate-session282,10792
(defun org-babel-python-read-string (string)org-babel-python-read-string336,13072

elpa/org-20160620/ob-R.el,2485
(defconst org-babel-header-args:Rorg-babel-header-args:R44,1633
(defconst ob-R-safe-header-argsob-R-safe-header-args71,2349
(defvar org-babel-default-header-args:R '())org-babel-default-header-args:R82,2755
(defcustom org-babel-R-command "R --slave --no-save"org-babel-R-command86,2920
(defvar ess-current-process-name) ; dynamically scopedess-current-process-name92,3078
(defvar ess-local-process-name)   ; dynamically scopedess-local-process-name93,3133
(defun org-babel-edit-prep:R (info)org-babel-edit-prep:R94,3188
(defconst ob-R-transfer-variable-table-with-headerob-R-transfer-variable-table-with-header102,3589
(defconst ob-R-transfer-variable-table-without-headerob-R-transfer-variable-table-without-header121,4014
(defun org-babel-expand-body:R (body params &optional graphics-file)org-babel-expand-body:R142,4532
(defun org-babel-execute:R (body params)org-babel-execute:R154,4954
(defun org-babel-prep-session:R (session params)org-babel-prep-session:R189,6386
(defun org-babel-load-session:R (session body params)org-babel-load-session:R199,6852
(defun org-babel-variable-assignments:R (params)org-babel-variable-assignments:R210,7207
(defun org-babel-R-quote-tsv-field (s)org-babel-R-quote-tsv-field228,7860
(defun org-babel-R-assign-elisp (name value colnames-p rownames-p)org-babel-R-assign-elisp234,8051
(defvar ess-ask-for-ess-directory) ; dynamically scopedess-ask-for-ess-directory257,9224
(defun org-babel-R-initiate-session (session params)org-babel-R-initiate-session258,9280
(defun org-babel-R-associate-session (session)org-babel-R-associate-session285,10160
(defvar org-babel-R-graphics-devicesorg-babel-R-graphics-devices293,10443
(defun org-babel-R-construct-graphics-device-call (out-file params)org-babel-R-construct-graphics-device-call312,11136
(defconst org-babel-R-eoe-indicator "'org_babel_R_eoe'")org-babel-R-eoe-indicator338,12195
(defconst org-babel-R-eoe-output "[1] \"org_babel_R_eoe\"")org-babel-R-eoe-output339,12252
(defconst org-babel-R-write-object-command "{org-babel-R-write-object-command341,12313
(defun org-babel-R-evaluateorg-babel-R-evaluate372,13436
(defun org-babel-R-evaluate-external-processorg-babel-R-evaluate-external-process381,13797
(defvar ess-eval-visibly-p)ess-eval-visibly-p407,14808
(defun org-babel-R-evaluate-sessionorg-babel-R-evaluate-session409,14837
(defun org-babel-R-process-value-result (result column-names-p)org-babel-R-process-value-result458,16523

elpa/org-20160620/ob-ref.el,885
(defvar org-babel-ref-split-regexporg-babel-ref-split-regexp71,2522
(defvar org-babel-update-intermediate nilorg-babel-update-intermediate74,2638
(defun org-babel-ref-parse (assignment)org-babel-ref-parse77,2762
(defun org-babel-ref-goto-headline-id (id)org-babel-ref-goto-headline-id102,3808
(defun org-babel-ref-headline-body ()org-babel-ref-headline-body115,4210
(defvar org-babel-lob-one-liner-regexp)org-babel-lob-one-liner-regexp124,4430
(defvar org-babel-library-of-babel)org-babel-library-of-babel125,4470
(defun org-babel-ref-resolve (ref)org-babel-ref-resolve126,4506
(defun org-babel-ref-index-list (index lis)org-babel-ref-index-list223,8488
(defun org-babel-ref-split-args (arg-string)org-babel-ref-split-args262,10121
(defvar org-bracket-link-regexp)org-bracket-link-regexp266,10308
(defun org-babel-ref-at-ref-p ()org-babel-ref-at-ref-p267,10341

elpa/org-20160620/ob-ruby.el,1531
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts45,1500
(defvar org-babel-default-header-args:ruby '())org-babel-default-header-args:ruby48,1596
(defvar org-babel-ruby-command "ruby"org-babel-ruby-command50,1645
(defcustom org-babel-ruby-hline-to "nil"org-babel-ruby-hline-to53,1737
(defcustom org-babel-ruby-nil-to 'hlineorg-babel-ruby-nil-to60,1942
(defun org-babel-execute:ruby (body params)org-babel-execute:ruby67,2131
(defun org-babel-prep-session:ruby (session params)org-babel-prep-session:ruby93,3231
(defun org-babel-load-session:ruby (session body params)org-babel-load-session:ruby106,3831
(defun org-babel-variable-assignments:ruby (params)org-babel-variable-assignments:ruby117,4192
(defun org-babel-ruby-var-to-ruby (var)org-babel-ruby-var-to-ruby126,4482
(defun org-babel-ruby-table-or-string (results)org-babel-ruby-table-or-string136,4829
(defun org-babel-ruby-initiate-session (&optional session params)org-babel-ruby-initiate-session147,5254
(defvar org-babel-ruby-eoe-indicator ":org_babel_ruby_eoe"org-babel-ruby-eoe-indicator160,5791
(defvar org-babel-ruby-f-writeorg-babel-ruby-f-write162,5905
(defvar org-babel-ruby-pp-f-writeorg-babel-ruby-pp-f-write164,6011
(defvar org-babel-ruby-wrapper-methodorg-babel-ruby-wrapper-method166,6120
(defvar org-babel-ruby-pp-wrapper-methodorg-babel-ruby-pp-wrapper-method174,6291
(defun org-babel-ruby-evaluateorg-babel-ruby-evaluate187,6447
(defun org-babel-ruby-read-string (string)org-babel-ruby-read-string257,9125

elpa/org-20160620/ob-sass.el,254
(defvar org-babel-default-header-args:sass '())org-babel-default-header-args:sass43,1461
(defun org-babel-execute:sass (body params)org-babel-execute:sass45,1510
(defun org-babel-prep-session:sass (session params)org-babel-prep-session:sass63,2359

elpa/org-20160620/ob-scala.el,663
(defvar org-babel-tangle-lang-exts) ;; Autoloadedorg-babel-tangle-lang-exts36,1284
(defvar org-babel-default-header-args:scala '())org-babel-default-header-args:scala38,1397
(defvar org-babel-scala-command "scala"org-babel-scala-command39,1446
(defun org-babel-execute:scala (body params)org-babel-execute:scala42,1545
(defvar org-babel-scala-wrapper-methodorg-babel-scala-wrapper-method63,2478
(defun org-babel-scala-evaluateorg-babel-scala-evaluate78,2679
(defun org-babel-prep-session:scala (session params)org-babel-prep-session:scala102,3672
(defun org-babel-scala-initiate-session (&optional session)org-babel-scala-initiate-session106,3857

elpa/org-20160620/ob-scheme.el,1565
(defvar geiser-repl--repl)             ; Defined in geiser-repl.elgeiser-repl--repl43,1373
(defvar geiser-impl--implementation)   ; Defined in geiser-impl.elgeiser-impl--implementation44,1440
(defvar geiser-default-implementation) ; Defined in geiser-impl.elgeiser-default-implementation45,1507
(defvar geiser-active-implementations) ; Defined in geiser-impl.elgeiser-active-implementations46,1574
(defvar org-babel-default-header-args:scheme '()org-babel-default-header-args:scheme54,1933
(defun org-babel-expand-body:scheme (body params)org-babel-expand-body:scheme57,2037
(defvar org-babel-scheme-repl-map (make-hash-table :test 'equal)org-babel-scheme-repl-map69,2458
(defun org-babel-scheme-cleanse-repl-map ()org-babel-scheme-cleanse-repl-map72,2570
(defun org-babel-scheme-get-session-buffer (session-name)org-babel-scheme-get-session-buffer80,2797
(defun org-babel-scheme-set-session-buffer (session-name buffer)org-babel-scheme-set-session-buffer85,3045
(defun org-babel-scheme-get-buffer-impl (buffer)org-babel-scheme-get-buffer-impl89,3225
(defun org-babel-scheme-get-repl (impl name)org-babel-scheme-get-repl94,3425
(defun org-babel-scheme-make-session-name (buffer name impl)org-babel-scheme-make-session-name106,3777
(defmacro org-babel-scheme-capture-current-message (&rest body)org-babel-scheme-capture-current-message122,4279
(defun org-babel-scheme-execute-with-geiser (code output impl repl)org-babel-scheme-execute-with-geiser138,4846
(defun org-babel-execute:scheme (body params)org-babel-execute:scheme179,6460

elpa/org-20160620/ob-screen.el,721
(defvar org-babel-screen-location "screen"org-babel-screen-location38,1279
(defvar org-babel-default-header-args:screenorg-babel-default-header-args:screen42,1436
(defun org-babel-execute:screen (body params)org-babel-execute:screen46,1633
(defun org-babel-prep-session:screen (session params)org-babel-prep-session:screen57,2192
(defun org-babel-screen-session-execute-string (session body)org-babel-screen-session-execute-string75,3038
(defun org-babel-screen-session-socketname (session)org-babel-screen-session-socketname86,3535
(defun org-babel-screen-session-write-temp-file (session body)org-babel-screen-session-write-temp-file107,4145
(defun org-babel-screen-test ()org-babel-screen-test118,4491

elpa/org-20160620/ob-sed.el,368
(defvar org-babel-sed-command "sed"org-babel-sed-command48,1516
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts51,1594
(defconst org-babel-header-args:sedorg-babel-header-args:sed54,1690
(defvar org-babel-default-header-args:sed '()org-babel-default-header-args:sed59,1810
(defun org-babel-execute:sed (body params)org-babel-execute:sed62,1915

elpa/org-20160620/ob-shell.el,1615
(defvar org-babel-default-header-args:shell '())org-babel-default-header-args:shell41,1430
(defcustom org-babel-shell-namesorg-babel-shell-names43,1480
(defun org-babel-execute:shell (body params)org-babel-execute:shell59,2024
(defun org-babel-prep-session:shell (session params)org-babel-prep-session:shell77,2903
(defun org-babel-load-session:shell (session body params)org-babel-load-session:shell87,3355
(defun org-babel-variable-assignments:sh-genericorg-babel-variable-assignments:sh-generic97,3717
(defun org-babel-variable-assignments:bash_arrayorg-babel-variable-assignments:bash_array102,3955
(defun org-babel-variable-assignments:bash_assocorg-babel-variable-assignments:bash_assoc112,4277
(defun org-babel-variable-assignments:bash (varname values &optional sep hline)org-babel-variable-assignments:bash126,4725
(defun org-babel-variable-assignments:shell (params)org-babel-variable-assignments:shell134,5172
(defun org-babel-sh-var-to-sh (var &optional sep hline)org-babel-sh-var-to-sh149,5777
(defun org-babel-sh-var-to-string (var &optional sep hline)org-babel-sh-var-to-string158,6094
(defun org-babel-sh-initiate-session (&optional session params)org-babel-sh-initiate-session169,6528
(defvar org-babel-sh-eoe-indicator "echo 'org_babel_sh_eoe'"org-babel-sh-eoe-indicator182,7051
(defvar org-babel-sh-eoe-output "org_babel_sh_eoe"org-babel-sh-eoe-output184,7167
(defun org-babel-sh-evaluate (session body &optional params stdin cmdline)org-babel-sh-evaluate187,7274
(defun org-babel-sh-strip-weird-long-prompt (string)org-babel-sh-strip-weird-long-prompt256,10530

elpa/org-20160620/ob-shen.el,323
(defvar org-babel-default-header-args:shen '()org-babel-default-header-args:shen41,1392
(defun org-babel-expand-body:shen (body params)org-babel-expand-body:shen44,1492
(defun org-babel-shen-var-to-shen (var)org-babel-shen-var-to-shen56,1889
(defun org-babel-execute:shen (body params)org-babel-execute:shen62,2082

elpa/org-20160620/ob-sql.el,693
(defvar org-babel-default-header-args:sql '())org-babel-default-header-args:sql66,1979
(defconst org-babel-header-args:sqlorg-babel-header-args:sql68,2027
(defun org-babel-expand-body:sql (body params)org-babel-expand-body:sql78,2298
(defun org-babel-sql-dbstring-mysql (host port user password database)org-babel-sql-dbstring-mysql83,2486
(defun org-babel-sql-dbstring-postgresql (host user database)org-babel-sql-dbstring-postgresql93,2911
(defun org-babel-execute:sql (body params)org-babel-execute:sql102,3235
(defun org-babel-sql-expand-vars (body vars)org-babel-sql-expand-vars199,7236
(defun org-babel-prep-session:sql (session params)org-babel-prep-session:sql220,7977

elpa/org-20160620/ob-sqlite.el,784
(defvar org-babel-default-header-args:sqlite '())org-babel-default-header-args:sqlite37,1294
(defvar org-babel-header-args:sqliteorg-babel-header-args:sqlite39,1345
(defun org-babel-expand-body:sqlite (body params)org-babel-expand-body:sqlite53,1671
(defvar org-babel-sqlite3-command "sqlite3")org-babel-sqlite3-command58,1865
(defun org-babel-execute:sqlite (body params)org-babel-execute:sqlite60,1911
(defun org-babel-sqlite-expand-vars (body vars)org-babel-sqlite-expand-vars115,3872
(defun org-babel-sqlite-table-or-scalar (result)org-babel-sqlite-table-or-scalar137,4674
(defun org-babel-sqlite-offset-colnames (table headers-p)org-babel-sqlite-offset-colnames147,5011
(defun org-babel-prep-session:sqlite (session params)org-babel-prep-session:sqlite153,5220

elpa/org-20160620/ob-stan.el,0

elpa/org-20160620/ob-table.el,161
(defun org-babel-table-truncate-at-newline (string)org-babel-table-truncate-at-newline58,1714
(defmacro org-sbe (source-block &rest variables)org-sbe66,2090

elpa/org-20160620/ob-tangle.el,2262
(defvar org-link-types-re)org-link-types-re48,2020
(defcustom org-babel-tangle-lang-extsorg-babel-tangle-lang-exts50,2048
(defcustom org-babel-tangle-use-relative-file-links torg-babel-tangle-use-relative-file-links65,2550
(defcustom org-babel-post-tangle-hook nilorg-babel-post-tangle-hook70,2731
(defcustom org-babel-pre-tangle-hook '(save-buffer)org-babel-pre-tangle-hook76,2885
(defcustom org-babel-tangle-body-hook nilorg-babel-tangle-body-hook82,3044
(defcustom org-babel-tangle-comment-format-beg "[[%link][%source-name]]"org-babel-tangle-comment-format-beg88,3196
(defcustom org-babel-tangle-comment-format-end "%source-name ends here"org-babel-tangle-comment-format-end108,4021
(defcustom org-babel-tangle-uncomment-comments nilorg-babel-tangle-uncomment-comments128,4845
(defcustom org-babel-process-comment-text #'org-remove-indentationorg-babel-process-comment-text136,5152
(defun org-babel-find-file-noselect-refresh (file)org-babel-find-file-noselect-refresh145,5520
(defmacro org-babel-with-temp-filebuffer (file &rest body)org-babel-with-temp-filebuffer152,5766
(def-edebug-spec org-babel-with-temp-filebuffer (form body))org-babel-with-temp-filebuffer170,6525
(defun org-babel-tangle-file (file &optional target-file lang)org-babel-tangle-file173,6602
(defun org-babel-tangle-publish (_ filename pub-dir)org-babel-tangle-publish191,7358
(defun org-babel-tangle (&optional arg target-file lang)org-babel-tangle198,7629
(defun org-babel-tangle-clean ()org-babel-tangle-clean319,12354
(defvar org-stored-links)org-stored-links333,13028
(defvar org-bracket-link-regexp)org-bracket-link-regexp334,13054
(defun org-babel-spec-to-string (spec)org-babel-spec-to-string335,13087
(defun org-babel-tangle-collect-blocks (&optional language tangle-file)org-babel-tangle-collect-blocks402,15429
(defun org-babel-tangle-single-blockorg-babel-tangle-single-block433,16966
(defun org-babel-tangle-comment-links ( &optional info)org-babel-tangle-comment-links513,19978
(defvar org-bracket-link-analytic-regexp)org-bracket-link-analytic-regexp530,20802
(defun org-babel-detangle (&optional source-code-file)org-babel-detangle531,20844
(defun org-babel-tangle-jump-to-org ()org-babel-tangle-jump-to-org552,21740

elpa/org-20160620/ob.el,0

elpa/org-20160620/org-agenda.el,44142
(defvar calendar-mode-map)                    ; defined in calendar.elcalendar-mode-map89,4325
(defvar org-clock-current-task nil)           ; defined in org-clock.elorg-clock-current-task90,4396
(defvar org-mobile-force-id-on-agenda-items)  ; defined in org-mobile.elorg-mobile-force-id-on-agenda-items91,4468
(defvar org-habit-show-habits)                ; defined in org-habit.elorg-habit-show-habits92,4541
(defvar org-habit-show-habits-only-for-today)org-habit-show-habits-only-for-today93,4613
(defvar org-habit-show-all-today)org-habit-show-all-today94,4659
(defvar org-agenda-buffer-name "*Org Agenda*")org-agenda-buffer-name97,4757
(defvar org-agenda-overriding-header nil)org-agenda-overriding-header98,4804
(defvar org-agenda-title-append nil)org-agenda-title-append99,4846
(defvar original-date) ; dynamically scoped, calendar.el does scope thisoriginal-date102,5013
(defvar org-agenda-undo-list nilorg-agenda-undo-list104,5087
(defvar org-agenda-pending-undo-list nilorg-agenda-pending-undo-list106,5187
(defcustom org-agenda-confirm-kill 1org-agenda-confirm-kill109,5306
(defcustom org-agenda-compact-blocks nilorg-agenda-compact-blocks119,5706
(defcustom org-agenda-block-separator ?=org-agenda-block-separator126,5950
(defgroup org-agenda-export nilorg-agenda-export138,6423
(defcustom org-agenda-with-colors torg-agenda-with-colors143,6564
(defcustom org-agenda-exporter-settings nilorg-agenda-exporter-settings148,6693
(defcustom org-agenda-before-write-hook '(org-agenda-add-entry-text)org-agenda-before-write-hook163,7241
(defcustom org-agenda-add-entry-text-maxlines 0org-agenda-add-entry-text-maxlines170,7538
(defcustom org-agenda-add-entry-text-descriptive-links torg-agenda-add-entry-text-descriptive-links184,8174
(defcustom org-agenda-export-html-style nilorg-agenda-export-html-style192,8517
(defcustom org-agenda-persistent-filter nilorg-agenda-persistent-filter235,9877
(defgroup org-agenda-custom-commands nilorg-agenda-custom-commands240,10022
(defconst org-sorting-choiceorg-sorting-choice245,10171
(defvar org-agenda-entry-types '(:deadline :scheduled :timestamp :sexp)org-agenda-entry-types268,11120
(defconst org-agenda-custom-commands-local-optionsorg-agenda-custom-commands-local-options310,12998
(defcustom org-agenda-custom-commandsorg-agenda-custom-commands442,17470
(defcustom org-agenda-query-register ?oorg-agenda-query-register578,23574
(defcustom org-stuck-projectsorg-stuck-projects585,23846
(defgroup org-agenda-skip nilorg-agenda-skip620,25783
(defcustom org-agenda-skip-function-global nilorg-agenda-skip-function-global625,25916
(defgroup org-agenda-daily/weekly nilorg-agenda-daily/weekly641,26688
(defgroup org-agenda-todo-list nilorg-agenda-todo-list645,26829
(defgroup org-agenda-match-view nilorg-agenda-match-view649,26973
(defgroup org-agenda-search-view nilorg-agenda-search-view653,27135
(defvar org-agenda-archives-mode nilorg-agenda-archives-mode658,27274
(defcustom org-agenda-restriction-lock-highlight-subtree torg-agenda-restriction-lock-highlight-subtree665,27611
(defcustom org-agenda-skip-comment-trees torg-agenda-skip-comment-trees672,27921
(defcustom org-agenda-todo-list-sublevels torg-agenda-todo-list-sublevels678,28134
(defcustom org-agenda-todo-ignore-with-date nilorg-agenda-todo-ignore-with-date686,28438
(defcustom org-agenda-todo-ignore-timestamp nilorg-agenda-todo-ignore-timestamp698,29001
(defcustom org-agenda-todo-ignore-scheduled nilorg-agenda-todo-ignore-scheduled735,30652
(defcustom org-agenda-todo-ignore-deadlines nilorg-agenda-todo-ignore-deadlines768,32020
(defcustom org-agenda-todo-ignore-time-comparison-use-seconds nilorg-agenda-todo-ignore-time-comparison-use-seconds809,33766
(defcustom org-agenda-tags-todo-honor-ignore-options nilorg-agenda-tags-todo-honor-ignore-options825,34450
(defcustom org-agenda-skip-scheduled-if-done nilorg-agenda-skip-scheduled-if-done841,35109
(defcustom org-agenda-skip-scheduled-if-deadline-is-shown nilorg-agenda-skip-scheduled-if-deadline-is-shown851,35538
(defcustom org-agenda-skip-timestamp-if-deadline-is-shown nilorg-agenda-skip-timestamp-if-deadline-is-shown877,36508
(defcustom org-agenda-skip-deadline-if-done nilorg-agenda-skip-deadline-if-done892,37132
(defcustom org-agenda-skip-deadline-prewarning-if-scheduled nilorg-agenda-skip-deadline-prewarning-if-scheduled902,37611
(defcustom org-agenda-skip-scheduled-delay-if-deadline nilorg-agenda-skip-scheduled-delay-if-deadline923,38752
(defcustom org-agenda-skip-additional-timestamps-same-entry nilorg-agenda-skip-additional-timestamps-same-entry939,39539
(defcustom org-agenda-skip-timestamp-if-done nilorg-agenda-skip-timestamp-if-done946,39848
(defcustom org-agenda-dim-blocked-tasks torg-agenda-dim-blocked-tasks952,40050
(defcustom org-timeline-show-empty-dates 3org-timeline-show-empty-dates975,41121
(defgroup org-agenda-startup nilorg-agenda-startup987,41626
(defcustom org-agenda-menu-show-matcher torg-agenda-menu-show-matcher992,41777
(define-obsolete-variable-alias 'org-agenda-menu-two-column 'org-agenda-menu-two-columns "24.3")org-agenda-menu-two-column1002,42224
(defcustom org-agenda-menu-two-columns nilorg-agenda-menu-two-columns1004,42322
(define-obsolete-variable-alias 'org-finalize-agenda-hook 'org-agenda-finalize-hook "24.3")org-finalize-agenda-hook1012,42582
(defcustom org-agenda-finalize-hook nilorg-agenda-finalize-hook1013,42674
(defcustom org-agenda-mouse-1-follows-link nilorg-agenda-mouse-1-follows-link1023,43049
(defcustom org-agenda-start-with-follow-mode nilorg-agenda-start-with-follow-mode1030,43326
(defcustom org-agenda-follow-indirect nilorg-agenda-follow-indirect1035,43494
(defcustom org-agenda-show-outline-path torg-agenda-show-outline-path1042,43699
(defcustom org-agenda-start-with-entry-text-mode nilorg-agenda-start-with-entry-text-mode1047,43857
(defcustom org-agenda-entry-text-maxlines 5org-agenda-entry-text-maxlines1052,44033
(defcustom org-agenda-entry-text-exclude-regexps nilorg-agenda-entry-text-exclude-regexps1061,44354
(defcustom org-agenda-entry-text-leaders "    > "org-agenda-entry-text-leaders1068,44640
(defvar org-agenda-entry-text-cleanup-hook nilorg-agenda-entry-text-cleanup-hook1075,44837
(defvar org-agenda-include-inactive-timestamps nilorg-agenda-include-inactive-timestamps1083,45275
(defgroup org-agenda-windows nilorg-agenda-windows1087,45419
(defcustom org-agenda-window-setup 'reorganize-frameorg-agenda-window-setup1092,45570
(defcustom org-agenda-window-frame-fractions '(0.5 . 0.75)org-agenda-window-frame-fractions1112,46409
(defcustom org-agenda-restore-windows-after-quit nilorg-agenda-restore-windows-after-quit1119,46785
(defcustom org-agenda-ndays nilorg-agenda-ndays1129,47240
(defcustom org-agenda-span 'weekorg-agenda-span1139,47521
(defcustom org-agenda-start-on-weekday 1org-agenda-start-on-weekday1151,47949
(defcustom org-agenda-show-all-dates torg-agenda-show-all-dates1160,48317
(defcustom org-agenda-format-date 'org-agenda-format-date-alignedorg-agenda-format-date1166,48542
(defun org-agenda-format-date-aligned (date)org-agenda-format-date-aligned1177,49049
(defcustom org-agenda-time-leading-zero nilorg-agenda-time-leading-zero1200,49837
(defcustom org-agenda-timegrid-use-ampm nilorg-agenda-timegrid-use-ampm1207,50075
(defun org-agenda-time-of-day-to-ampm (time)org-agenda-time-of-day-to-ampm1213,50236
(defun org-agenda-time-of-day-to-ampm-maybe (time)org-agenda-time-of-day-to-ampm-maybe1230,50797
(defcustom org-agenda-weekend-days '(6 0)org-agenda-weekend-days1236,51027
(defcustom org-agenda-move-date-from-past-immediately-to-today torg-agenda-move-date-from-past-immediately-to-today1250,51477
(defcustom org-agenda-include-diary nilorg-agenda-include-diary1260,51910
(defcustom org-agenda-include-deadlines torg-agenda-include-deadlines1266,52144
(defcustom org-agenda-repeating-timestamp-show-all torg-agenda-repeating-timestamp-show-all1273,52389
(defcustom org-scheduled-past-days 10000org-scheduled-past-days1285,52945
(defcustom org-agenda-log-mode-items '(closed clock)org-agenda-log-mode-items1293,53264
(defcustom org-agenda-clock-consistency-checksorg-agenda-clock-consistency-checks1307,53901
(defcustom org-agenda-log-mode-add-notes torg-agenda-log-mode-add-notes1351,55954
(defcustom org-agenda-start-with-log-mode nilorg-agenda-start-with-log-mode1359,56281
(defcustom org-agenda-start-with-clockreport-mode nilorg-agenda-start-with-clockreport-mode1373,56967
(defcustom org-agenda-clockreport-parameter-plist '(:link t :maxlevel 2)org-agenda-clockreport-parameter-plist1379,57179
(defcustom org-agenda-search-view-always-boolean nilorg-agenda-search-view-always-boolean1390,57744
(defcustom org-agenda-search-view-force-full-words nilorg-agenda-search-view-force-full-words1421,59102
(defcustom org-agenda-search-view-max-outline-level 0org-agenda-search-view-max-outline-level1428,59340
(defgroup org-agenda-time-grid nilorg-agenda-time-grid1438,59709
(defcustom org-agenda-search-headline-for-time torg-agenda-search-headline-for-time1443,59858
(defcustom org-agenda-use-time-grid torg-agenda-use-time-grid1454,60380
(defcustom org-agenda-time-gridorg-agenda-time-grid1464,60823
(defcustom org-agenda-show-current-time-in-grid torg-agenda-show-current-time-in-grid1497,62131
(defcustom org-agenda-current-time-stringorg-agenda-current-time-string1503,62307
(defgroup org-agenda-sorting nilorg-agenda-sorting1510,62532
(defcustom org-agenda-sorting-strategyorg-agenda-sorting-strategy1515,62671
(defcustom org-agenda-cmp-user-defined nilorg-agenda-cmp-user-defined1587,66403
(defcustom org-sort-agenda-notime-is-late torg-sort-agenda-notime-is-late1597,66828
(defcustom org-sort-agenda-noeffort-is-high torg-sort-agenda-noeffort-is-high1607,67302
(defgroup org-agenda-line-format nilorg-agenda-line-format1616,67695
(defcustom org-agenda-prefix-formatorg-agenda-prefix-format1621,67859
(defvar org-prefix-format-compiled nilorg-prefix-format-compiled1688,70984
(defcustom org-agenda-todo-keyword-format "%-1s"org-agenda-todo-keyword-format1694,71249
(defcustom org-agenda-diary-sexp-prefix nilorg-agenda-diary-sexp-prefix1701,71512
(defcustom org-agenda-timerange-leaders '("" "(%d/%d): ")org-agenda-timerange-leaders1711,71883
(defcustom org-agenda-scheduled-leaders '("Scheduled: " "Sched.%2dx: ")org-agenda-scheduled-leaders1725,72482
(defcustom org-agenda-inactive-leader "["org-agenda-inactive-leader1740,73212
(defcustom org-agenda-deadline-leaders '("Deadline:  " "In %3d d.: " "%2d d. ago: ")org-agenda-deadline-leaders1747,73454
(defcustom org-agenda-remove-times-when-in-prefix torg-agenda-remove-times-when-in-prefix1761,74086
(defcustom org-agenda-remove-timeranges-from-blocks nilorg-agenda-remove-timeranges-from-blocks1778,74923
(defcustom org-agenda-default-appointment-duration nilorg-agenda-default-appointment-duration1785,75144
(defcustom org-agenda-show-inherited-tags torg-agenda-show-inherited-tags1794,75510
(defcustom org-agenda-use-tag-inheritance '(todo search timeline agenda)org-agenda-use-tag-inheritance1819,76456
(defcustom org-agenda-hide-tags-regexp nilorg-agenda-hide-tags-regexp1843,77432
(defcustom org-agenda-remove-tags nilorg-agenda-remove-tags1853,77833
(defcustom org-agenda-tags-column (if (featurep 'xemacs) -79 -80)org-agenda-tags-column1866,78301
(defcustom org-agenda-fontify-priorities 'cookiesorg-agenda-fontify-priorities1876,78738
(defcustom org-agenda-day-face-function nilorg-agenda-day-face-function1900,79824
(defcustom org-agenda-category-icon-alist nilorg-agenda-category-icon-alist1909,80193
(defgroup org-agenda-column-view nilorg-agenda-column-view1948,81492
(defcustom org-agenda-columns-show-summaries torg-agenda-columns-show-summaries1953,81634
(defcustom org-agenda-columns-compute-summary-properties torg-agenda-columns-compute-summary-properties1958,81808
(defcustom org-agenda-columns-add-appointments-to-effort-sum nilorg-agenda-columns-add-appointments-to-effort-sum1969,82333
(defcustom org-agenda-auto-exclude-function nilorg-agenda-auto-exclude-function1979,82832
(defcustom org-agenda-bulk-custom-functions nilorg-agenda-bulk-custom-functions1992,83483
(defmacro org-agenda-with-point-at-orig-entry (string &rest body)org-agenda-with-point-at-orig-entry2006,83986
(def-edebug-spec org-agenda-with-point-at-orig-entry (form body))org-agenda-with-point-at-orig-entry2018,84538
(defun org-add-agenda-custom-command (entry)org-add-agenda-custom-command2020,84605
(defvar org-agenda-mode-map (make-sparse-keymap)org-agenda-mode-map2031,85041
(defvar org-agenda-menu) ; defined later in this file.org-agenda-menu2035,85184
(defvar org-agenda-restrict nil) ; defined later in this file.org-agenda-restrict2036,85239
(defvar org-agenda-follow-mode nil)org-agenda-follow-mode2037,85302
(defvar org-agenda-entry-text-mode nil)org-agenda-entry-text-mode2038,85338
(defvar org-agenda-clockreport-mode nil)org-agenda-clockreport-mode2039,85378
(defvar org-agenda-show-log nil)org-agenda-show-log2040,85419
(defvar org-agenda-redo-command nil)org-agenda-redo-command2041,85452
(defvar org-agenda-query-string nil)org-agenda-query-string2042,85489
(defvar org-agenda-mode-hook nilorg-agenda-mode-hook2043,85526
(defvar org-agenda-type nil)org-agenda-type2046,85666
(defvar org-agenda-force-single-file nil)org-agenda-force-single-file2047,85695
(defvar org-agenda-bulk-marked-entries nilorg-agenda-bulk-marked-entries2048,85737
(defcustom org-agenda-sticky nilorg-agenda-sticky2053,85883
(defun org-toggle-sticky-agenda (&optional arg)org-toggle-sticky-agenda2063,86177
(defvar org-agenda-buffer nilorg-agenda-buffer2079,86797
(defvar org-agenda-last-prefix-arg nil)org-agenda-last-prefix-arg2082,86874
(defvar org-agenda-this-buffer-name nil)org-agenda-this-buffer-name2083,86914
(defvar org-agenda-doing-sticky-redo nil)org-agenda-doing-sticky-redo2084,86955
(defvar org-agenda-this-buffer-is-sticky nil)org-agenda-this-buffer-is-sticky2085,86997
(defvar org-agenda-last-indirect-buffer nilorg-agenda-last-indirect-buffer2086,87043
(defconst org-agenda-local-varsorg-agenda-local-vars2089,87153
(defun org-agenda-mode ()org-agenda-mode2119,88080
(define-key org-agenda-mode-map "?" 'org-agenda-show-the-flagging-note)org-agenda-mode-map2327,99446
(define-key org-agenda-mode-map [remap forward-paragraph] 'org-agenda-forward-block)org-agenda-mode-map2334,99790
(define-key org-agenda-mode-map [remap backward-paragraph] 'org-agenda-backward-block)org-agenda-mode-map2335,99875
(defvar org-agenda-allow-remote-undo torg-agenda-allow-remote-undo2494,107343
(defvar org-agenda-undo-has-started-in nilorg-agenda-undo-has-started-in2496,107443
(defun org-agenda-undo ()org-agenda-undo2499,107566
(defun org-verify-change-for-undo (l1 l2)org-verify-change-for-undo2533,108887
(defvar org-agenda-restrict-begin (make-marker))org-agenda-restrict-begin2541,109154
(defvar org-agenda-restrict-end (make-marker))org-agenda-restrict-end2542,109203
(defvar org-agenda-last-dispatch-buffer nil)org-agenda-last-dispatch-buffer2543,109250
(defvar org-agenda-overriding-restriction nil)org-agenda-overriding-restriction2544,109295
(defcustom org-agenda-custom-commands-contexts nilorg-agenda-custom-commands-contexts2546,109343
(defcustom org-agenda-max-entries nilorg-agenda-max-entries2595,111147
(defcustom org-agenda-max-todos nilorg-agenda-max-todos2614,111737
(defcustom org-agenda-max-tags nilorg-agenda-max-tags2633,112319
(defcustom org-agenda-max-effort nilorg-agenda-max-effort2652,112927
(defvar org-keys nil)org-keys2671,113549
(defvar org-match nil)org-match2672,113571
(defun org-agenda (&optional arg org-keys restriction)org-agenda2674,113609
(defvar org-agenda-multi)org-agenda-multi2860,121766
(defun org-agenda-append-agenda ()org-agenda-append-agenda2862,121793
(defun org-agenda-normalize-custom-commands (cmds)org-agenda-normalize-custom-commands2876,122277
(defun org-agenda-get-restriction-and-command (prefix-descriptions)org-agenda-get-restriction-and-command2887,122568
(defun org-agenda-fit-window-to-buffer ()org-agenda-fit-window-to-buffer3078,129188
(defvar org-cmd nil)org-cmd3090,129688
(defvar org-agenda-overriding-cmd nil)org-agenda-overriding-cmd3091,129709
(defvar org-agenda-overriding-arguments nil)org-agenda-overriding-arguments3092,129748
(defvar org-agenda-overriding-cmd-arguments nil)org-agenda-overriding-cmd-arguments3093,129793
(defun org-agenda-run-series (name series)org-agenda-run-series3094,129842
(defmacro org-batch-agenda (cmd-key &rest parameters)org-batch-agenda3153,131896
(defvar org-agenda-info nil)org-agenda-info3168,132562
(defmacro org-batch-agenda-csv (cmd-key &rest parameters)org-batch-agenda-csv3171,132607
(defun org-fix-agenda-info (props)org-fix-agenda-info3225,135059
(defun org-agenda-export-csv-mapper (prop)org-agenda-export-csv-mapper3256,136474
(defun org-store-agenda-views (&rest parameters)org-store-agenda-views3268,136780
(defmacro org-batch-store-agenda-views (&rest parameters)org-batch-store-agenda-views3274,136932
(defvar org-agenda-current-span nilorg-agenda-current-span3308,138225
(defun org-agenda-mark-header-line (pos)org-agenda-mark-header-line3310,138346
(defvar org-mobile-creating-agendas) ; defined in org-mobile.elorg-mobile-creating-agendas3320,138723
(defvar org-agenda-write-buffer-name "Agenda View")org-agenda-write-buffer-name3321,138787
(defun org-agenda-write (file &optional open nosettings agenda-bufname)org-agenda-write3322,138839
(defun org-agenda-remove-marked-text (property &optional value)org-agenda-remove-marked-text3418,142707
(defun org-agenda-add-entry-text ()org-agenda-add-entry-text3429,143077
(defun org-agenda-get-some-entry-text (marker n-lines &optional indentorg-agenda-get-some-entry-text3448,143836
(defun org-check-for-org-mode ()org-check-for-org-mode3535,146813
(defvar org-agenda-multi nil)  ; dynamically scopedorg-agenda-multi3543,147063
(defvar org-agenda-pre-window-conf nil)org-agenda-pre-window-conf3544,147115
(defvar org-agenda-columns-active nil)org-agenda-columns-active3545,147155
(defvar org-agenda-name nil)org-agenda-name3546,147194
(defvar org-agenda-tag-filter nil)org-agenda-tag-filter3547,147223
(defvar org-agenda-category-filter nil)org-agenda-category-filter3548,147258
(defvar org-agenda-regexp-filter nil)org-agenda-regexp-filter3549,147298
(defvar org-agenda-effort-filter nil)org-agenda-effort-filter3550,147336
(defvar org-agenda-top-headline-filter nil)org-agenda-top-headline-filter3551,147374
(defvar org-agenda-tag-filter-preset nilorg-agenda-tag-filter-preset3552,147418
(defvar org-agenda-category-filter-preset nilorg-agenda-category-filter-preset3562,147984
(defvar org-agenda-regexp-filter-preset nilorg-agenda-regexp-filter-preset3572,148564
(defvar org-agenda-effort-filter-preset nilorg-agenda-effort-filter-preset3582,149138
(defun org-agenda-use-sticky-p ()org-agenda-use-sticky-p3592,149715
(defun org-agenda-prepare-window (abuf filter-alist)org-agenda-prepare-window3613,150458
(defun org-agenda-prepare (&optional name)org-agenda-prepare3646,151968
(defvar org-agenda-overriding-columns-format)  ; From org-colview.elorg-agenda-overriding-columns-format3709,154576
(defun org-agenda-finalize ()org-agenda-finalize3710,154645
(defun org-agenda-mark-clocking-task ()org-agenda-mark-clocking-task3790,158098
(defun org-agenda-unmark-clocking-task ()org-agenda-unmark-clocking-task3812,158959
(defun org-agenda-fontify-priorities ()org-agenda-fontify-priorities3819,159184
(defvar org-depend-tag-blocked)org-depend-tag-blocked3854,160428
(defun org-agenda-dim-blocked-tasks (&optional invisible)org-agenda-dim-blocked-tasks3856,160461
(defvar org-agenda-skip-function nilorg-agenda-skip-function3896,162117
(defun org-agenda-skip ()org-agenda-skip3909,162851
(defun org-agenda-skip-eval (form)org-agenda-skip-eval3928,163579
(defvar org-agenda-markers nilorg-agenda-markers3943,164030
(defvar org-agenda-last-marker-time (org-float-time)org-agenda-last-marker-time3945,164128
(defun org-agenda-new-marker (&optional pos)org-agenda-new-marker3948,164228
(defun org-agenda-reset-markers ()org-agenda-reset-markers3960,164678
(defun org-agenda-save-markers-for-cut-and-paste (beg end)org-agenda-save-markers-for-cut-and-paste3965,164834
(defun org-agenda-entry-text-show-here ()org-agenda-entry-text-show-here3976,165228
(defun org-agenda-entry-text-show ()org-agenda-entry-text-show3992,165883
(defun org-agenda-entry-text-hide ()org-agenda-entry-text-hide4003,166188
(defun org-agenda-get-day-face (date)org-agenda-get-day-face4012,166451
(defvar org-agenda-only-exact-dates nil) ; dynamically scopedorg-agenda-only-exact-dates4024,166859
(defvar org-agenda-show-log-scoped) ;; dynamically scope in `org-timeline' or `org-agenda-list'org-agenda-show-log-scoped4025,166921
(defun org-timeline (&optional dotodo)org-timeline4027,167018
(defun org-get-all-dates (beg end &optional no-ranges force-today inactive empty pre-re)org-get-all-dates4119,170620
(defvar org-agenda-start-day nil  ; dynamically scoped parameterorg-agenda-start-day4167,172484
(defvar org-starting-day nil) ; local variable in the agenda bufferorg-starting-day4173,172824
(defvar org-arg-loc nil) ; local variableorg-arg-loc4174,172892
(defvar org-agenda-buffer-tmp-name nil)org-agenda-buffer-tmp-name4176,172935
(defun org-agenda-list (&optional arg start-day span with-hour)org-agenda-list4178,172990
(defun org-agenda-ndays-to-span (n)org-agenda-ndays-to-span4378,180917
(defun org-agenda-span-to-ndays (span &optional start-day)org-agenda-span-to-ndays4386,181112
(defun org-agenda-span-name (span)org-agenda-span-name4400,181642
(defvar org-agenda-search-history nil)org-agenda-search-history4410,181842
(defvar org-search-syntax-table nilorg-search-syntax-table4412,181882
(defvar org-mode-syntax-table) ; From org.elorg-mode-syntax-table4417,182107
(defun org-search-syntax-table ()org-search-syntax-table4418,182152
(defvar org-agenda-last-search-view-search-was-boolean nil)org-agenda-last-search-view-search-was-boolean4425,182440
(defun org-search-view (&optional todo-only string edit-at)org-search-view4428,182516
(defun org-agenda-propertize-selected-todo-keywords (keywords)org-agenda-propertize-selected-todo-keywords4711,193927
(defvar org-select-this-todo-keyword nil)org-select-this-todo-keyword4723,194306
(defvar org-last-arg nil)org-last-arg4724,194348
(defun org-todo-list (&optional arg)org-todo-list4727,194390
(defun org-tags-view (&optional todo-only match)org-tags-view4814,197780
(defvar org-agenda-skip-regexp nilorg-agenda-skip-regexp4902,201302
(defvar org-agenda-overriding-header nilorg-agenda-overriding-header4907,201541
(defun org-agenda-skip-entry-when-regexp-matches ()org-agenda-skip-entry-when-regexp-matches4912,201757
(defun org-agenda-skip-subtree-when-regexp-matches ()org-agenda-skip-subtree-when-regexp-matches4924,202290
(defun org-agenda-skip-entry-when-regexp-matches-in-subtree ()org-agenda-skip-entry-when-regexp-matches-in-subtree4935,202788
(defun org-agenda-skip-entry-if (&rest conditions)org-agenda-skip-entry-if4949,203494
(defun org-agenda-skip-subtree-if (&rest conditions)org-agenda-skip-subtree-if4954,203668
(defun org-agenda-skip-if (subtree conditions)org-agenda-skip-if4959,203844
(defun org-agenda-skip-if-todo (args end)org-agenda-skip-if-todo5033,206806
(defun org-agenda-list-stuck-projects (&rest ignore)org-agenda-list-stuck-projects5078,208261
(defvar org-disable-agenda-to-diary nil)          ;Dynamically-scoped param.org-disable-agenda-to-diary5131,210111
(defvar diary-list-entries-hook)diary-list-entries-hook5132,210188
(defvar diary-time-regexp)diary-time-regexp5133,210221
(defun org-get-entries-from-diary (date)org-get-entries-from-diary5134,210248
(defvar org-agenda-cleanup-fancy-diary-hook nilorg-agenda-cleanup-fancy-diary-hook5184,212164
(defun org-agenda-cleanup-fancy-diary ()org-agenda-cleanup-fancy-diary5187,212270
(defun org-modify-diary-entry-string (string)org-modify-diary-entry-string5222,213703
(defun org-diary-default-entry ()org-diary-default-entry5233,214100
(defun org-add-to-diary-list (&rest args)org-add-to-diary-list5243,214500
(defvar org-diary-last-run-time nil)org-diary-last-run-time5248,214654
(defun org-diary (&rest args)org-diary5251,214707
(defun org-agenda-get-day-entries (file date &rest args)org-agenda-get-day-entries5311,217105
(defsubst org-em (x y list)org-em5373,219563
(defvar org-heading-keyword-regexp-format) ; defined in org.elorg-heading-keyword-regexp-format5377,219660
(defvar org-agenda-sorting-strategy-selected nil)org-agenda-sorting-strategy-selected5378,219723
(defun org-agenda-entry-get-agenda-timestamp (pom)org-agenda-entry-get-agenda-timestamp5380,219774
(defun org-agenda-get-todos ()org-agenda-get-todos5414,221163
(defun org-agenda-todo-custom-ignore-p (time n)org-agenda-todo-custom-ignore-p5486,223978
(defun org-agenda-check-for-timestamp-as-reason-to-ignore-todo-itemorg-agenda-check-for-timestamp-as-reason-to-ignore-todo-item5498,224423
(defun org-agenda-get-timestamps (&optional deadline-results)org-agenda-get-timestamps5566,227414
(defun org-agenda-get-sexps ()org-agenda-get-sexps5681,232067
(defun org-anniversary (year month day &optional mark)org-anniversary5743,234494
(defun org-cyclic (N year month day &optional mark)org-cyclic5748,234757
(defun org-block (Y1 M1 D1 Y2 M2 D2 &optional mark)org-block5753,235009
(defun org-date (year month day &optional mark)org-date5758,235260
(defun org-class (y1 m1 d1 y2 m2 d2 dayname &rest skip-weeks)org-class5765,235538
(defun org-diary-class (m1 d1 y1 m2 d2 y2 dayname &rest skip-weeks)org-diary-class5789,236641
(defalias 'org-get-closed 'org-agenda-get-progress)org-get-closed5809,237581
(defun org-agenda-get-progress ()org-agenda-get-progress5810,237633
(defun org-agenda-show-clocking-issues ()org-agenda-show-clocking-issues5913,241768
(defun org-agenda-check-clock-gap (t1 t2 ok-list)org-agenda-check-clock-gap6001,244975
(defun org-agenda-get-deadlines (&optional with-hour)org-agenda-get-deadlines6033,246210
(defun org-agenda-deadline-face (fraction)org-agenda-deadline-face6162,251294
(defun org-agenda-get-scheduled (&optional deadline-results with-hour)org-agenda-get-scheduled6170,251602
(defun org-agenda-get-blocks ()org-agenda-get-blocks6343,258222
(defvar org-prefix-has-time nilorg-prefix-has-time6427,261328
(defvar org-prefix-has-tag nilorg-prefix-has-tag6430,261475
(defvar org-prefix-has-effort nilorg-prefix-has-effort6433,261621
(defvar org-prefix-has-breadcrumbs nilorg-prefix-has-breadcrumbs6436,261770
(defvar org-prefix-category-length nilorg-prefix-category-length6439,261924
(defvar org-prefix-category-max-length nilorg-prefix-category-max-length6441,262042
(defun org-agenda-get-category-icon (category)org-agenda-get-category-icon6444,262165
(defun org-agenda-format-item (extra txt &optional level category tags dotimeorg-agenda-format-item6452,262498
(defun org-agenda-fix-displayed-tags (txt tags add-inherited hide-re)org-agenda-fix-displayed-tags6619,269253
(defun org-downcase-keep-props (s)org-downcase-keep-props6651,270255
(defvar org-agenda-sorting-strategy) ;; because the def is in a let formorg-agenda-sorting-strategy6657,270414
(defun org-agenda-add-time-grid-maybe (list ndays todayp)org-agenda-add-time-grid-maybe6659,270488
(defun org-compile-prefix-format (key)org-compile-prefix-format6703,272188
(defun org-set-sorting-strategy (key)org-set-sorting-strategy6766,274772
(defun org-get-time-of-day (s &optional string mod24)org-get-time-of-day6775,275168
(defvar org-agenda-before-sorting-filter-function nilorg-agenda-before-sorting-filter-function6805,276399
(defun org-agenda-finalize-entries (list &optional type)org-agenda-finalize-entries6825,277344
(defun org-agenda-limit-entries (list prop limit &optional fn)org-agenda-limit-entries6860,278787
(defun org-agenda-limit-interactively (remove)org-agenda-limit-interactively6878,279291
(defun org-agenda-highlight-todo (x)org-agenda-highlight-todo6904,280333
(defsubst org-cmp-values (a b property)org-cmp-values6947,282136
(defsubst org-cmp-effort (a b)org-cmp-effort6954,282418
(defsubst org-cmp-category (a b)org-cmp-category6962,282748
(defsubst org-cmp-todo-state (a b)org-cmp-todo-state6969,283054
(defsubst org-cmp-alpha (a b)org-cmp-alpha6991,283937
(defsubst org-cmp-tag (a b)org-cmp-tag7012,284757
(defsubst org-cmp-time (a b)org-cmp-time7021,285054
(defsubst org-cmp-ts (a b type)org-cmp-ts7029,285351
(defsubst org-cmp-habit-p (a b)org-cmp-habit-p7045,286006
(defun org-entries-lessp (a b)org-entries-lessp7052,286243
(defvar org-agenda-restriction-lock-overlay (make-overlay 1 1)org-agenda-restriction-lock-overlay7114,289176
(defun org-agenda-set-restriction-lock (&optional type)org-agenda-set-restriction-lock7123,289594
(defun org-agenda-remove-restriction-lock (&optional noupdate)org-agenda-remove-restriction-lock7163,291235
(defun org-agenda-maybe-redo ()org-agenda-maybe-redo7177,291812
(defun org-agenda-check-type (error &rest types)org-agenda-check-type7194,292333
(defun org-agenda-Quit ()org-agenda-Quit7206,292766
(defun org-agenda-quit ()org-agenda-quit7213,292965
(defun org-agenda--quit (&optional bury)org-agenda--quit7227,293325
(defun org-agenda-exit ()org-agenda-exit7262,294597
(defun org-agenda-kill-all-agenda-buffers ()org-agenda-kill-all-agenda-buffers7274,295059
(defun org-agenda-execute (arg)org-agenda-execute7284,295377
(defun org-agenda-redo (&optional all)org-agenda-redo7292,295649
(defvar org-global-tags-completion-table nil)org-global-tags-completion-table7360,298738
(defvar org-agenda-filter-form nil)org-agenda-filter-form7361,298784
(defvar org-agenda-filtered-by-category nil)org-agenda-filtered-by-category7362,298820
(defun org-agenda-filter-by-category (strip)org-agenda-filter-by-category7364,298866
(defun org-find-top-headline (&optional pos)org-find-top-headline7385,299670
(defvar org-agenda-filtered-by-top-headline nil)org-agenda-filtered-by-top-headline7395,300041
(defun org-agenda-filter-by-top-headline (strip)org-agenda-filter-by-top-headline7396,300090
(defvar org-agenda-regexp-filter nil)org-agenda-regexp-filter7409,300674
(defun org-agenda-filter-by-regexp (strip)org-agenda-filter-by-regexp7410,300712
(defvar org-agenda-effort-filter nil)org-agenda-effort-filter7428,301452
(defun org-agenda-filter-by-effort (strip)org-agenda-filter-by-effort7429,301490
(defun org-agenda-filter-remove-all ()org-agenda-filter-remove-all7461,302765
(defun org-agenda-filter-by-tag (arg &optional char exclude)org-agenda-filter-by-tag7476,303270
(defun org-agenda-get-represented-tags ()org-agenda-get-represented-tags7552,306351
(defun org-agenda-filter-by-tag-refine (arg &optional char)org-agenda-filter-by-tag-refine7563,306702
(defun org-agenda-filter-make-matcher (filter type &optional expand)org-agenda-filter-make-matcher7570,306993
(defun org-agenda-filter-make-matcher-tag-exp (tags op)org-agenda-filter-make-matcher-tag-exp7620,308636
(defun org-agenda-filter-effort-form (e)org-agenda-filter-effort-form7646,309517
(defun org-agenda-compare-effort (op value)org-agenda-compare-effort7659,309953
(defun org-agenda-filter-expand-tags (filter &optional no-operator)org-agenda-filter-expand-tags7666,310257
(defun org-agenda-filter-apply (filter type &optional expand)org-agenda-filter-apply7684,310853
(defun org-agenda-filter-top-headline-apply (hl &optional negative)org-agenda-filter-top-headline-apply7713,312083
(defun org-agenda-filter-hide-line (type)org-agenda-filter-hide-line7730,312729
(defun org-agenda-remove-filter (type)org-agenda-remove-filter7738,313015
(defun org-agenda-filter-show-all-tag nilorg-agenda-filter-show-all-tag7754,313626
(defun org-agenda-filter-show-all-re nilorg-agenda-filter-show-all-re7756,313703
(defun org-agenda-filter-show-all-effort nilorg-agenda-filter-show-all-effort7758,313782
(defun org-agenda-filter-show-all-cat nilorg-agenda-filter-show-all-cat7760,313865
(defun org-agenda-filter-show-all-top-filter nilorg-agenda-filter-show-all-top-filter7762,313947
(defun org-agenda-manipulate-query-add ()org-agenda-manipulate-query-add7765,314041
(defun org-agenda-manipulate-query-subtract ()org-agenda-manipulate-query-subtract7770,314287
(defun org-agenda-manipulate-query-add-re ()org-agenda-manipulate-query-add-re7775,314538
(defun org-agenda-manipulate-query-subtract-re ()org-agenda-manipulate-query-subtract-re7780,314786
(defun org-agenda-manipulate-query (char)org-agenda-manipulate-query7785,315039
(defun org-add-to-string (var string)org-add-to-string7812,316034
(defun org-agenda-goto-date (span)org-agenda-goto-date7815,316121
(defun org-agenda-goto-today ()org-agenda-goto-today7847,317386
(defun org-agenda-find-same-or-today-or-agenda (&optional cnt)org-agenda-find-same-or-today-or-agenda7865,318065
(defun org-agenda-backward-block ()org-agenda-backward-block7874,318491
(defun org-agenda-forward-block (&optional backward)org-agenda-forward-block7879,318623
(defun org-agenda-later (arg)org-agenda-later7906,319669
(defun org-agenda-earlier (arg)org-agenda-earlier7946,321227
(defun org-agenda-view-mode-dispatch ()org-agenda-view-mode-dispatch7952,321418
(defun org-agenda-reset-view ()org-agenda-reset-view7984,323028
(defun org-agenda-day-view (&optional day-of-month)org-agenda-day-view7988,323186
(defun org-agenda-week-view (&optional iso-week)org-agenda-week-view7993,323407
(defun org-agenda-fortnight-view (&optional iso-week)org-agenda-fortnight-view8002,323840
(defun org-agenda-month-view (&optional month)org-agenda-month-view8011,324283
(defun org-agenda-year-view (&optional year)org-agenda-year-view8016,324478
(defun org-agenda-change-time-span (span &optional n)org-agenda-change-time-span8030,325049
(defun org-agenda-compute-starting-span (sd span &optional n)org-agenda-compute-starting-span8051,325890
(defun org-agenda-next-date-line (&optional arg)org-agenda-next-date-line8095,327237
(defun org-agenda-previous-date-line (&optional arg)org-agenda-previous-date-line8108,327733
(defvar org-hl (make-overlay 1 1))org-hl8117,328089
(defun org-highlight (begin end &optional buffer)org-highlight8120,328163
(defun org-unhighlight ()org-unhighlight8124,328315
(defun org-unhighlight-once ()org-unhighlight-once8128,328399
(defvar org-agenda-pre-follow-window-conf nil)org-agenda-pre-follow-window-conf8133,328585
(defun org-agenda-follow-mode ()org-agenda-follow-mode8134,328632
(defun org-agenda-entry-text-mode (&optional arg)org-agenda-entry-text-mode8148,329137
(defun org-agenda-clockreport-mode ()org-agenda-clockreport-mode8170,330027
(defun org-agenda-log-mode (&optional special)org-agenda-log-mode8181,330447
(defun org-agenda-archives-mode (&optional with-files)org-agenda-archives-mode8203,331214
(defun org-agenda-toggle-diary ()org-agenda-toggle-diary8222,331915
(defun org-agenda-toggle-deadlines ()org-agenda-toggle-deadlines8232,332250
(defun org-agenda-toggle-time-grid ()org-agenda-toggle-time-grid8242,332626
(defun org-agenda-set-mode-name ()org-agenda-set-mode-name8252,332953
(defun org-agenda-update-agenda-type ()org-agenda-update-agenda-type8334,335741
(defun org-agenda-next-line ()org-agenda-next-line8340,335979
(defun org-agenda-previous-line ()org-agenda-previous-line8346,336164
(defun org-agenda-next-item (n)org-agenda-next-item8352,336361
(defun org-agenda-previous-item (n)org-agenda-previous-item8363,336722
(defun org-agenda-do-context-action ()org-agenda-do-context-action8375,337077
(defun org-agenda-show-tags ()org-agenda-show-tags8386,337502
(defun org-agenda-goto (&optional highlight)org-agenda-goto8395,337789
(defvar org-agenda-after-show-hook nilorg-agenda-after-show-hook8420,338694
(defun org-agenda-kill ()org-agenda-kill8424,338851
(defvar org-archive-default-command) ; defined in org-archive.elorg-archive-default-command8459,340201
(defun org-agenda-archive-default ()org-agenda-archive-default8460,340266
(defun org-agenda-archive-default-with-confirmation ()org-agenda-archive-default-with-confirmation8466,340474
(defun org-agenda-archive ()org-agenda-archive8472,340709
(defun org-agenda-archive-to-archive-sibling ()org-agenda-archive-to-archive-sibling8477,340877
(defun org-agenda-archive-with (cmd &optional confirm)org-agenda-archive-with8482,341046
(defun org-remove-subtree-entries-from-agenda (&optional buf beg end)org-remove-subtree-entries-from-agenda8505,341842
(defun org-agenda-refile (&optional goto rfloc no-update)org-agenda-refile8530,342742
(defun org-agenda-open-link (&optional arg)org-agenda-open-link8565,343951
(defun org-agenda-copy-local-variable (var)org-agenda-copy-local-variable8609,345509
(defun org-agenda-switch-to (&optional delete-other-windows)org-agenda-switch-to8616,345807
(defun org-agenda-goto-mouse (ev)org-agenda-goto-mouse8638,346694
(defun org-agenda-show (&optional full-entry)org-agenda-show8644,346865
(defvar org-agenda-show-window nil)org-agenda-show-window8654,347214
(defun org-agenda-show-and-scroll-up (&optional arg)org-agenda-show-and-scroll-up8655,347250
(defun org-agenda-show-scroll-down ()org-agenda-show-scroll-down8673,347976
(defun org-agenda-show-1 (&optional more)org-agenda-show-18682,348270
(defvar org-agenda-cycle-counter nil)org-agenda-cycle-counter8732,349893
(defun org-agenda-cycle-show (&optional n)org-agenda-cycle-show8733,349931
(defun org-agenda-recenter (arg)org-agenda-recenter8757,350841
(defun org-agenda-show-mouse (ev)org-agenda-show-mouse8765,351074
(defun org-agenda-check-no-diary ()org-agenda-check-no-diary8771,351247
(defun org-agenda-error ()org-agenda-error8776,351414
(defun org-agenda-tree-to-indirect-buffer (arg)org-agenda-tree-to-indirect-buffer8780,351557
(defun org-agenda-do-tree-to-indirect-buffer (arg)org-agenda-do-tree-to-indirect-buffer8808,352917
(defvar org-last-heading-marker (make-marker)org-last-heading-marker8820,353336
(defun org-agenda-todo-nextset ()org-agenda-todo-nextset8824,353490
(defun org-agenda-todo-previousset ()org-agenda-todo-previousset8829,353611
(defun org-agenda-todo (&optional arg)org-agenda-todo8834,353744
(defun org-agenda-add-note (&optional arg)org-agenda-add-note8881,355492
(defun org-agenda-change-all-lines (newhead hdmarkerorg-agenda-change-all-lines8900,356085
(defun org-agenda-align-tags (&optional line)org-agenda-align-tags8973,358925
(defun org-agenda-priority-up ()org-agenda-priority-up9001,360034
(defun org-agenda-priority-down ()org-agenda-priority-down9006,360180
(defun org-agenda-priority (&optional force-direction)org-agenda-priority9011,360330
(defun org-agenda-set-tags (&optional tag onoff)org-agenda-set-tags9045,361614
(defun org-agenda-set-property ()org-agenda-set-property9075,362554
(defun org-agenda-set-effort ()org-agenda-set-effort9097,363180
(defun org-agenda-toggle-archive-tag ()org-agenda-toggle-archive-tag9122,363913
(defun org-agenda-do-date-later (arg)org-agenda-do-date-later9146,364665
(defun org-agenda-do-date-earlier (arg)org-agenda-do-date-earlier9162,365215
(defun org-agenda-date-later (arg &optional what)org-agenda-date-later9178,365777
(defun org-agenda-date-earlier (arg &optional what)org-agenda-date-earlier9215,367215
(defun org-agenda-date-later-minutes (arg)org-agenda-date-later-minutes9220,367384
(defun org-agenda-date-earlier-minutes (arg)org-agenda-date-earlier-minutes9226,367628
(defun org-agenda-date-later-hours (arg)org-agenda-date-later-hours9232,367876
(defun org-agenda-date-earlier-hours (arg)org-agenda-date-earlier-hours9237,368024
(defun org-agenda-show-new-time (marker stamp &optional prefix)org-agenda-show-new-time9242,368176
(defun org-agenda-date-prompt (arg)org-agenda-date-prompt9268,369305
(defun org-agenda-schedule (arg &optional time)org-agenda-schedule9289,370165
(defun org-agenda-deadline (arg &optional time)org-agenda-deadline9310,370837
(defun org-agenda-clock-in (&optional arg)org-agenda-clock-in9329,371428
(defun org-agenda-clock-out ()org-agenda-clock-out9353,372201
(defun org-agenda-clock-cancel (&optional arg)org-agenda-clock-cancel9374,372902
(defun org-agenda-clock-goto ()org-agenda-clock-goto9382,373172
(defun org-agenda-diary-entry-in-org-file ()org-agenda-diary-entry-in-org-file9399,373857
(defcustom org-agenda-insert-diary-strategy 'date-treeorg-agenda-insert-diary-strategy9441,375772
(defcustom org-agenda-insert-diary-extract-time nilorg-agenda-insert-diary-extract-time9452,376158
(defcustom org-agenda-bulk-mark-char ">"org-agenda-bulk-mark-char9458,376339
(defun org-agenda-add-entry-to-org-agenda-diary-file (type text &optional d1 d2)org-agenda-add-entry-to-org-agenda-diary-file9464,376496
(defun org-agenda-insert-diary-as-top-level (text)org-agenda-insert-diary-as-top-level9539,379453
(defun org-agenda-insert-diary-make-new-entry (text)org-agenda-insert-diary-make-new-entry9552,379903
(defun org-agenda-diary-entry ()org-agenda-diary-entry9570,380642
(defun org-agenda-execute-calendar-command (cmd)org-agenda-execute-calendar-command9616,382543
(defun org-agenda-phases-of-moon ()org-agenda-phases-of-moon9638,383398
(defun org-agenda-holidays ()org-agenda-holidays9643,383591
(defvar calendar-longitude)      ; defined in calendar.elcalendar-longitude9648,383769
(defvar calendar-latitude)       ; defined in calendar.elcalendar-latitude9649,383827
(defvar calendar-location-name)  ; defined in calendar.elcalendar-location-name9650,383885
(defun org-agenda-sunrise-sunset (arg)org-agenda-sunrise-sunset9652,383944
(defun org-agenda-goto-calendar ()org-agenda-goto-calendar9665,384528
(defun org-calendar-goto-agenda ()org-calendar-goto-agenda9679,385047
(defun org-agenda-convert-date ()org-agenda-convert-date9691,385524
(defun org-agenda-bulk-marked-p ()org-agenda-bulk-marked-p9721,386923
(defun org-agenda-bulk-mark (&optional arg)org-agenda-bulk-mark9726,387098
(defun org-agenda-bulk-mark-all ()org-agenda-bulk-mark-all9750,388051
(defun org-agenda-bulk-mark-regexp (regexp)org-agenda-bulk-mark-regexp9755,388192
(defun org-agenda-bulk-unmark (&optional arg)org-agenda-bulk-unmark9770,388834
(defun org-agenda-bulk-toggle-all ()org-agenda-bulk-toggle-all9791,389617
(defun org-agenda-bulk-toggle ()org-agenda-bulk-toggle9800,389887
(defun org-agenda-bulk-remove-overlays (&optional beg end)org-agenda-bulk-remove-overlays9807,390076
(defun org-agenda-bulk-unmark-all ()org-agenda-bulk-unmark-all9819,390552
(defcustom org-agenda-persistent-marks nilorg-agenda-persistent-marks9829,390962
(defun org-agenda-bulk-action (&optional arg)org-agenda-bulk-action9837,391213
(defun org-agenda-capture (&optional with-time)org-agenda-capture10012,397379
(defun org-agenda-reapply-filters ()org-agenda-reapply-filters10025,397866
(defun org-agenda-drag-line-forward (arg &optional backward)org-agenda-drag-line-forward10038,398429
(defun org-agenda-drag-line-backward (arg)org-agenda-drag-line-backward10060,399262
(defun org-agenda-show-the-flagging-note ()org-agenda-show-the-flagging-note10067,399433
(defun org-agenda-remove-flag (marker)org-agenda-remove-flag10100,400662
(defun org-agenda-get-any-marker (&optional pos)org-agenda-get-any-marker10110,401020
(defvar appt-time-msg-list) ; defined in appt.elappt-time-msg-list10116,401226
(defun org-agenda-to-appt (&optional refresh filter &rest args)org-agenda-to-appt10119,401291
(defun org-agenda-todayp (date)org-agenda-todayp10212,404867
(defun org-agenda-todo-yesterday (&optional arg)org-agenda-todo-yesterday10219,405104

elpa/org-20160620/org-archive.el,1914
(defcustom org-archive-default-command 'org-archive-subtreeorg-archive-default-command36,1264
(defcustom org-archive-reversed-order nilorg-archive-reversed-order44,1505
(defcustom org-archive-sibling-heading "Archive"org-archive-sibling-heading50,1687
(defcustom org-archive-mark-done nilorg-archive-mark-done57,1959
(defcustom org-archive-stamp-time torg-archive-stamp-time67,2325
(defcustom org-archive-file-header-format "\nArchived entries from file %s\n\n"org-archive-file-header-format74,2607
(defcustom org-archive-subtree-add-inherited-tags 'infileorg-archive-subtree-add-inherited-tags83,2944
(defcustom org-archive-save-context-info '(time file olpath category todo itags)org-archive-save-context-info92,3250
(defvar org-archive-hook nilorg-archive-hook122,4630
(defun org-get-local-archive-location ()org-get-local-archive-location128,4900
(defun org-add-archive-files (files)org-add-archive-files145,5367
(defun org-all-archive-files ()org-all-archive-files160,5757
(defun org-extract-archive-file (&optional location)org-extract-archive-file179,6377
(defun org-extract-archive-heading (&optional location)org-extract-archive-heading191,6889
(defun org-archive-subtree (&optional find-done)org-archive-subtree201,7306
(defun org-archive-to-archive-sibling ()org-archive-to-archive-sibling395,15434
(defun org-archive-all-done (&optional tag)org-archive-all-done464,17747
(defun org-archive-all-old (&optional tag)org-archive-all-old475,18197
(defun org-archive-all-matches (predicate &optional tag)org-archive-all-matches494,18932
(defun org-toggle-archive-tag (&optional find-done)org-toggle-archive-tag549,20798
(defun org-archive-set-tag ()org-archive-set-tag572,21735
(defun org-archive-subtree-default ()org-archive-subtree-default586,22247
(defun org-archive-subtree-default-with-confirmation ()org-archive-subtree-default-with-confirmation593,22496

elpa/org-20160620/org-attach.el,2522
(defgroup org-attach nilorg-attach46,1623
(defcustom org-attach-directory "data/"org-attach-directory51,1738
(defcustom org-attach-git-annex-cutoff (* 32 1024)org-attach-git-annex-cutoff58,1971
(defcustom org-attach-auto-tag "ATTACH"org-attach-auto-tag67,2242
(defcustom org-attach-file-list-property "Attachments"org-attach-file-list-property74,2451
(defcustom org-attach-method 'cporg-attach-method84,2859
(defcustom org-attach-expert nilorg-attach-expert101,3440
(defcustom org-attach-allow-inheritance torg-attach-allow-inheritance106,3589
(defvar org-attach-inherited nilorg-attach-inherited111,3732
(defcustom org-attach-store-link-p nilorg-attach-store-link-p114,3843
(defcustom org-attach-archive-delete nilorg-attach-archive-delete123,4143
(defun org-attach ()org-attach135,4535
(defun org-attach-dir (&optional create-if-not-exists-p)org-attach-dir203,7628
(defun org-attach-check-absolute-path (dir)org-attach-check-absolute-path246,9423
(defun org-attach-set-directory ()org-attach-set-directory257,10024
(defun org-attach-set-inherit ()org-attach-set-inherit266,10365
(defun org-attach-commit ()org-attach-commit275,10775
(defun org-attach-tag (&optional off)org-attach-tag306,11974
(defun org-attach-untag ()org-attach-untag313,12203
(defun org-attach-store-link (file)org-attach-store-link317,12282
(defun org-attach-attach (file &optional visit-dir method)org-attach-attach325,12566
(defun org-attach-attach-cp ()org-attach-attach-cp353,13800
(defun org-attach-attach-mv ()org-attach-attach-mv357,13955
(defun org-attach-attach-ln ()org-attach-attach-ln361,14120
(defun org-attach-attach-lns ()org-attach-attach-lns367,14426
(defun org-attach-new (file)org-attach-new375,14744
(defun org-attach-delete-one (&optional file)org-attach-delete-one387,15238
(defun org-attach-delete-all (&optional force)org-attach-delete-all404,15756
(defun org-attach-sync ()org-attach-sync421,16450
(defun org-attach-file-list (dir)org-attach-file-list438,17119
(defun org-attach-reveal (&optional if-exists)org-attach-reveal445,17363
(defun org-attach-reveal-in-emacs ()org-attach-reveal-in-emacs452,17659
(defun org-attach-open (&optional in-emacs)org-attach-open458,17843
(defun org-attach-open-in-emacs ()org-attach-open-in-emacs473,18491
(defun org-attach-expand (file)org-attach-expand479,18642
(defun org-attach-expand-link (file)org-attach-expand-link484,18848
(defun org-attach-archive-delete-maybe ()org-attach-archive-delete-maybe490,19091

elpa/org-20160620/org-autoloads.el,208
(defalias 'org-ido-switchb 'org-switchb)org-ido-switchb192,7022
(defalias 'org-iswitchb 'org-switchb)org-iswitchb194,7064
(defvar org-odt-data-dir "/usr/share/emacs/etc/org" "\org-odt-data-dir661,24849

elpa/org-20160620/org-bbdb.el,1419
(defgroup org-bbdb-anniversaries nilorg-bbdb-anniversaries131,5056
(defcustom org-bbdb-default-anniversary-format "birthday"org-bbdb-default-anniversary-format135,5184
(defcustom org-bbdb-anniversary-format-alistorg-bbdb-anniversary-format-alist141,5342
(defcustom org-bbdb-anniversary-field 'anniversaryorg-bbdb-anniversary-field170,6557
(defcustom org-bbdb-extract-date-fun 'org-bbdb-anniv-extract-dateorg-bbdb-extract-date-fun187,7131
(defun org-bbdb-store-link ()org-bbdb-store-link203,7633
(defun org-bbdb-export (path desc format)org-bbdb-export217,8195
(defun org-bbdb-open (name)org-bbdb-open230,8714
(defun org-bbdb-open-old (name)org-bbdb-open-old239,8966
(defun org-bbdb-open-new (name)org-bbdb-open-new259,9776
(defun org-bbdb-anniv-extract-date (time-str)org-bbdb-anniv-extract-date279,10624
(defun org-bbdb-anniv-split (str)org-bbdb-anniv-split292,11108
(defvar org-bbdb-anniv-hash nilorg-bbdb-anniv-hash300,11398
(defvar org-bbdb-updated-p torg-bbdb-updated-p304,11526
(defun org-bbdb-make-anniv-hash ()org-bbdb-make-anniv-hash307,11632
(defun org-bbdb-updated (rec)org-bbdb-updated338,12935
(defun org-bbdb-anniversaries ()org-bbdb-anniversaries346,13175
(defun org-bbdb-complete-link ()org-bbdb-complete-link400,15139
(defun org-bbdb-anniv-export-ical ()org-bbdb-anniv-export-ical409,15380
(defun org-bbdb-format-vevent (key recs)org-bbdb-format-vevent421,15825

elpa/org-20160620/org-bibtex.el,2672
(defvar org-bibtex-description nil) ; dynamically scoped from org.elorg-bibtex-description116,4317
(defvar org-id-locations)org-id-locations117,4386
(defvar org-bibtex-typesorg-bibtex-types127,4746
(defvar org-bibtex-fieldsorg-bibtex-fields186,7604
(defvar org-bibtex-entries nilorg-bibtex-entries213,11125
(defcustom org-bibtex-autogen-keys nilorg-bibtex-autogen-keys216,11198
(defcustom org-bibtex-prefix nilorg-bibtex-prefix222,11372
(defcustom org-bibtex-treat-headline-as-title torg-bibtex-treat-headline-as-title231,11619
(defcustom org-bibtex-export-arbitrary-fields nilorg-bibtex-export-arbitrary-fields240,11942
(defcustom org-bibtex-key-property "CUSTOM_ID"org-bibtex-key-property249,12301
(defcustom org-bibtex-tags nilorg-bibtex-tags259,12654
(defcustom org-bibtex-tags-are-keywords nilorg-bibtex-tags-are-keywords265,12825
(defcustom org-bibtex-no-export-tags nilorg-bibtex-no-export-tags282,13518
(defcustom org-bibtex-inherit-tags nilorg-bibtex-inherit-tags290,13776
(defcustom org-bibtex-type-property-name "btype"org-bibtex-type-property-name300,14150
(defun org-bibtex-get (property)org-bibtex-get308,14346
(defun org-bibtex-put (property value)org-bibtex-put317,14743
(defun org-bibtex-headline ()org-bibtex-headline326,15056
(defun org-bibtex-ask (field)org-bibtex-ask395,17431
(defun org-bibtex-autokey ()org-bibtex-autokey408,17998
(defun org-bibtex-fleshout (type &optional optional)org-bibtex-fleshout427,18645
(defun org-bibtex-open (path)org-bibtex-open460,20121
(defun org-bibtex-store-link ()org-bibtex-store-link467,20371
(defun org-create-file-search-in-bibtex ()org-create-file-search-in-bibtex504,22144
(defun org-execute-file-search-in-bibtex (s)org-execute-file-search-in-bibtex526,23125
(defun org-bibtex (filename)org-bibtex552,24283
(defun org-bibtex-check (&optional optional)org-bibtex-check578,25368
(defun org-bibtex-check-all (&optional optional)org-bibtex-check-all588,25791
(defun org-bibtex-create (&optional arg nonew)org-bibtex-create593,26024
(defun org-bibtex-create-in-current-entry (&optional arg)org-bibtex-create-in-current-entry619,27027
(defun org-bibtex-read ()org-bibtex-read625,27232
(defun org-bibtex-read-buffer (buffer)org-bibtex-read-buffer650,28276
(defun org-bibtex-read-file (file)org-bibtex-read-file666,28818
(defun org-bibtex-write ()org-bibtex-write671,28996
(defun org-bibtex-yank ()org-bibtex-yank703,30156
(defun org-bibtex-import-from-file (file)org-bibtex-import-from-file712,30455
(defun org-bibtex-export-to-kill-ring ()org-bibtex-export-to-kill-ring720,30768
(defun org-bibtex-search (string)org-bibtex-search726,30955

elpa/org-20160620/org-capture.el,5432
(defvar org-remember-default-headline)org-remember-default-headline64,2609
(defvar org-remember-templates)org-remember-templates65,2648
(defvar org-table-hlines)org-table-hlines66,2680
(defvar org-table-current-begin-pos)org-table-current-begin-pos67,2706
(defvar dired-buffers)dired-buffers68,2743
(defvar org-capture-clock-was-started nilorg-capture-clock-was-started70,2767
(defvar org-capture-last-stored-marker (make-marker)org-capture-last-stored-marker73,2863
(defvar org-capture-link-is-already-stored nil)org-capture-link-is-already-stored78,3121
(defgroup org-capture nilorg-capture80,3170
(defcustom org-capture-templates nilorg-capture-templates85,3279
(defcustom org-capture-before-finalize-hook nilorg-capture-before-finalize-hook362,16122
(defcustom org-capture-after-finalize-hook nilorg-capture-after-finalize-hook370,16388
(defcustom org-capture-prepare-finalize-hook nilorg-capture-prepare-finalize-hook377,16585
(defcustom org-capture-bookmark torg-capture-bookmark384,16793
(defvar org-capture-plist nilorg-capture-plist393,17045
(defvar org-capture-current-plist nilorg-capture-current-plist396,17156
(defvar org-capture-clock-keep nilorg-capture-clock-keep404,17551
(defun org-capture-put (&rest stuff)org-capture-put408,17725
(defun org-capture-get (prop &optional local)org-capture-get413,17942
(defun org-capture-member (prop &optional local)org-capture-member420,18325
(defvar org-capture-mode-map (make-sparse-keymap)org-capture-mode-map429,18707
(defvar org-capture-mode-hook nilorg-capture-mode-hook434,18899
(define-minor-mode org-capture-modeorg-capture-mode437,18978
(define-key org-capture-mode-map "\C-c\C-c" 'org-capture-finalize)org-capture-mode-map447,19389
(define-key org-capture-mode-map "\C-c\C-k" 'org-capture-kill)org-capture-mode-map448,19456
(define-key org-capture-mode-map "\C-c\C-w" 'org-capture-refile)org-capture-mode-map449,19519
(defvar org-capture-initial nil)org-capture-initial453,19608
(defvar org-capture-entry nil)org-capture-entry454,19641
(defun org-capture-string (string &optional keys)org-capture-string457,19688
(defcustom org-capture-templates-contexts nilorg-capture-templates-contexts464,19944
(defcustom org-capture-use-agenda-date nilorg-capture-use-agenda-date513,21745
(defun org-capture (&optional goto keys)org-capture521,22016
(defun org-capture-get-template ()org-capture-get-template630,26165
(defun org-capture-finalize (&optional stay-with-capture)org-capture-finalize648,26884
(defun org-capture-refile ()org-capture-refile791,32406
(defun org-capture-kill ()org-capture-kill814,33263
(defun org-capture-goto-last-stored ()org-capture-goto-last-stored823,33573
(defun org-capture-put-target-region-and-position ()org-capture-put-target-region-and-position833,33927
(defvar org-time-was-given) ; dynamically scoped parameterorg-time-was-given843,34281
(defun org-capture-set-target-location (&optional target)org-capture-set-target-location844,34340
(defun org-capture-expand-file (file)org-capture-expand-file978,39180
(defun org-capture-target-buffer (file)org-capture-target-buffer992,39710
(defun org-capture-steal-local-variables (buffer)org-capture-steal-local-variables1002,40110
(defun org-capture-place-template (&optional inhibit-wconf-store)org-capture-place-template1008,40316
(defun org-capture-place-entry ()org-capture-place-entry1034,41384
(defun org-capture-place-item ()org-capture-place-item1078,42823
(defun org-capture-place-table-line ()org-capture-place-table-line1138,44888
(defun org-capture-place-plain-text ()org-capture-place-plain-text1222,47924
(defun org-capture-mark-kill-region (beg end)org-capture-mark-kill-region1258,49249
(defun org-capture-position-for-last-stored (where)org-capture-position-for-last-stored1265,49529
(defun org-capture-bookmark-last-stored-position ()org-capture-bookmark-last-stored-position1279,50034
(defun org-capture-narrow (beg end)org-capture-narrow1304,50851
(defun org-capture-empty-lines-before (&optional n)org-capture-empty-lines-before1310,51034
(defun org-capture-empty-lines-after (&optional n)org-capture-empty-lines-after1320,51443
(defvar org-clock-marker) ; Defined in org.elorg-clock-marker1331,51877
(defun org-capture-insert-template-here ()org-capture-insert-template-here1333,51924
(defun org-capture-set-plist (entry)org-capture-set-plist1368,53019
(defun org-capture-goto-target (&optional template-key)org-capture-goto-target1384,53806
(defun org-capture-get-indirect-buffer (&optional buffer prefix)org-capture-get-indirect-buffer1397,54308
(defun org-capture-verify-tree (tree)org-capture-verify-tree1412,54938
(defun org-mks (table title &optional prompt specials)org-mks1417,55119
(defun org-capture-select-template (&optional keys)org-capture-select-template1517,58945
(defun org-capture-fill-template (&optional template initial annotation)org-capture-fill-template1534,59619
(defun org-capture-escaped-% ()org-capture-escaped-%1754,67921
(defun org-capture-expand-embedded-elisp ()org-capture-expand-embedded-elisp1762,68149
(defun org-capture--expand-keyword-in-embedded-elisp (attr)org-capture--expand-keyword-in-embedded-elisp1780,68775
(defun org-capture-inside-embedded-elisp-p ()org-capture-inside-embedded-elisp-p1794,69302
(defun org-capture-import-remember-templates ()org-capture-import-remember-templates1811,69913

elpa/org-20160620/org-clock.el,11837
(defvar org-time-stamp-formats)org-time-stamp-formats41,1571
(defvar org-ts-what)org-ts-what42,1603
(defvar org-frame-title-format-backup frame-title-format)org-frame-title-format-backup43,1624
(defgroup org-clock nilorg-clock45,1683
(defcustom org-clock-into-drawer torg-clock-into-drawer50,1809
(defun org-clock-into-drawer ()org-clock-into-drawer77,2751
(defcustom org-clock-out-when-done torg-clock-out-when-done95,3462
(defcustom org-clock-rounding-minutes 0org-clock-rounding-minutes110,4027
(defcustom org-clock-out-remove-zero-time-clocks nilorg-clock-out-remove-zero-time-clocks128,4773
(defcustom org-clock-in-switch-to-state nilorg-clock-in-switch-to-state133,4938
(defcustom org-clock-out-switch-to-state nilorg-clock-out-switch-to-state146,5392
(defcustom org-clock-history-length 5org-clock-history-length159,5848
(defcustom org-clock-goto-may-find-recent-task torg-clock-goto-may-find-recent-task164,5975
(defcustom org-clock-heading-function nilorg-clock-heading-function169,6140
(defcustom org-clock-string-limit 0org-clock-string-limit176,6450
(defcustom org-clock-in-resume nilorg-clock-in-resume181,6598
(defcustom org-clock-persist nilorg-clock-persist188,6856
(defcustom org-clock-persist-file (convert-standard-filenameorg-clock-persist-file209,7671
(defcustom org-clock-persist-query-save nilorg-clock-persist-query-save215,7860
(defcustom org-clock-persist-query-resume torg-clock-persist-query-resume220,8006
(defcustom org-clock-sound nilorg-clock-sound225,8157
(define-obsolete-variable-alias 'org-clock-modeline-totalorg-clock-modeline-total238,8494
(defcustom org-clock-mode-line-total 'autoorg-clock-mode-line-total241,8590
(defcustom org-clock-task-overrun-text nilorg-clock-task-overrun-text260,9407
(defcustom org-show-notification-handler nilorg-show-notification-handler272,9915
(defgroup org-clocktable nilorg-clocktable282,10204
(defcustom org-clocktable-defaultsorg-clocktable-defaults287,10332
(defcustom org-clock-clocktable-formatter 'org-clocktable-write-defaultorg-clock-clocktable-formatter315,10846
(defcustom org-clock-clocktable-language-setuporg-clock-clocktable-language-setup323,11149
(defcustom org-clock-clocktable-default-properties '(:maxlevel 2 :scope file)org-clock-clocktable-default-properties333,11795
(defcustom org-clock-idle-time nilorg-clock-idle-time340,12048
(defcustom org-clock-auto-clock-resolution 'when-no-clock-is-runningorg-clock-auto-clock-resolution347,12266
(defcustom org-clock-report-include-clocking-task nilorg-clock-report-include-clocking-task355,12566
(defcustom org-clock-resolve-expert nilorg-clock-resolve-expert361,12752
(defcustom org-clock-continuously nilorg-clock-continuously367,12922
(defcustom org-clock-total-time-cell-format "*%s*"org-clock-total-time-cell-format373,13091
(defcustom org-clock-file-time-cell-format "*%s*"org-clock-file-time-cell-format379,13242
(defcustom org-clock-clocked-in-display 'mode-lineorg-clock-clocked-in-display385,13391
(defcustom org-clock-frame-title-format '(t org-mode-line-string)org-clock-frame-title-format401,13958
(defcustom org-clock-x11idle-program-name "x11idle"org-clock-x11idle-program-name414,14432
(defcustom org-clock-goto-before-context 2org-clock-goto-before-context428,14807
(defcustom org-clock-display-default-range 'thisyearorg-clock-display-default-range434,15008
(defvar org-clock-in-prepare-hook nilorg-clock-in-prepare-hook448,15402
(defvar org-clock-in-hook nilorg-clock-in-hook453,15623
(defvar org-clock-out-hook nilorg-clock-out-hook455,15692
(defvar org-clock-cancel-hook nilorg-clock-cancel-hook458,15771
(defvar org-clock-goto-hook nilorg-clock-goto-hook460,15853
(defvar org-clock-has-been-used nilorg-clock-has-been-used462,15946
(defconst org-clock--oldest-dateorg-clock--oldest-date465,16046
(defvar org-mode-line-string "")org-mode-line-string489,16724
(defvar org-clock-mode-line-timer nil)org-clock-mode-line-timer492,16810
(defvar org-clock-idle-timer nil)org-clock-idle-timer493,16849
(defvar org-clock-heading) ; defined in org.elorg-clock-heading494,16883
(defvar org-clock-start-time "")org-clock-start-time495,16930
(defvar org-clock-leftover-time nilorg-clock-leftover-time497,16964
(defvar org-clock-effort ""org-clock-effort500,17077
(defvar org-clock-total-time nilorg-clock-total-time503,17159
(defvar org-clock-history nilorg-clock-history507,17323
(defvar org-clock-default-task (make-marker)org-clock-default-task510,17408
(defvar org-clock-interrupted-task (make-marker)org-clock-interrupted-task515,17604
(defvar org-clock-mode-line-map (make-sparse-keymap))org-clock-mode-line-map518,17735
(define-key org-clock-mode-line-map [mode-line mouse-2] 'org-clock-goto)org-clock-mode-line-map519,17789
(define-key org-clock-mode-line-map [mode-line mouse-1] 'org-clock-menu)org-clock-mode-line-map520,17862
(defun org-clock-menu ()org-clock-menu522,17936
(defun org-clock-history-push (&optional pos buffer)org-clock-history-push531,18255
(defun org-clock-save-markers-for-cut-and-paste (beg end)org-clock-save-markers-for-cut-and-paste551,18986
(defun org-clock-drawer-name ()org-clock-drawer-name560,19414
(defun org-clocking-buffer ()org-clocking-buffer569,19720
(defun org-clocking-p ()org-clocking-p573,19862
(defvar org-clock-before-select-task-hook nilorg-clock-before-select-task-hook577,19966
(defun org-clock-select-task (&optional prompt)org-clock-select-task580,20080
(defun org-clock-insert-selection-line (i marker)org-clock-insert-selection-line632,22072
(defvar org-clock-task-overrun nilorg-clock-task-overrun660,22992
(defvar org-clock-update-period 60org-clock-update-period662,23100
(defun org-clock-get-clock-string ()org-clock-get-clock-string665,23199
(defun org-clock-get-last-clock-out-time ()org-clock-get-last-clock-out-time689,24281
(defun org-clock-update-mode-line ()org-clock-update-mode-line697,24606
(defun org-clock-get-clocked-time ()org-clock-get-clocked-time720,25597
(defun org-clock-modify-effort-estimate (&optional value)org-clock-modify-effort-estimate729,25952
(defvar org-clock-notification-was-shown nilorg-clock-notification-was-shown768,27541
(defun org-clock-notify-once-if-expired ()org-clock-notify-once-if-expired771,27637
(defun org-notify (notification &optional play-sound)org-notify789,28409
(defun org-show-notification (notification)org-show-notification795,28660
(defun org-clock-play-sound (&optional clock-sound)org-clock-play-sound818,29527
(defvar org-clock-mode-line-entry nilorg-clock-mode-line-entry836,30186
(defun org-find-open-clocks (file)org-find-open-clocks839,30285
(defsubst org-is-active-clock (clock)org-is-active-clock853,30767
(defmacro org-with-clock-position (clock &rest forms)org-with-clock-position858,30930
(def-edebug-spec org-with-clock-position (form body))org-with-clock-position867,31215
(defmacro org-with-clock (clock &rest forms)org-with-clock870,31325
(def-edebug-spec org-with-clock (form body))org-with-clock883,31804
(defsubst org-clock-clock-in (clock &optional resume start-time)org-clock-clock-in886,31896
(defsubst org-clock-clock-out (clock &optional fail-quietly at-time)org-clock-clock-out893,32198
(defsubst org-clock-clock-cancel (clock)org-clock-clock-cancel903,32573
(defvar org-clock-clocking-in nil)org-clock-clocking-in913,32870
(defvar org-clock-resolving-clocks nil)org-clock-resolving-clocks914,32905
(defvar org-clock-resolving-clocks-due-to-idleness nil)org-clock-resolving-clocks-due-to-idleness915,32945
(defun org-clock-resolve-clock (clock resolve-to clock-out-timeorg-clock-resolve-clock917,33002
(defun org-clock-jump-to-current-clock (&optional effective-clock)org-clock-jump-to-current-clock951,34178
(defun org-clock-resolve (clock &optional prompt-fn last-valid fail-quietly)org-clock-resolve974,35113
(defun org-resolve-clocks (&optional only-dangling-p prompt-fn last-valid)org-resolve-clocks1090,39312
(defun org-emacs-idle-seconds ()org-emacs-idle-seconds1116,40177
(defun org-mac-idle-seconds ()org-mac-idle-seconds1123,40380
(defvar org-x11idle-exists-porg-x11idle-exists-p1127,40605
(defun org-x11-idle-seconds ()org-x11-idle-seconds1136,41013
(defun org-user-idle-seconds ()org-user-idle-seconds1140,41182
(defvar org-clock-user-idle-seconds)org-clock-user-idle-seconds1151,41506
(defun org-resolve-clocks-if-idle ()org-resolve-clocks-if-idle1153,41544
(defvar org-clock-current-task nil "Task currently clocked in.")org-clock-current-task1178,42499
(defvar org-clock-out-time nil) ; store the time of the last clock-outorg-clock-out-time1179,42564
(defvar org--msg-extra)org--msg-extra1180,42635
(defun org-clock-in (&optional select start-time)org-clock-in1183,42675
(defun org-clock-in-last (&optional arg)org-clock-in-last1378,50410
(defun org-clock-mark-default-task ()org-clock-mark-default-task1412,51887
(defun org-clock-get-sum-start ()org-clock-get-sum-start1419,52078
(defun org-clock-find-position (find-unclosed)org-clock-find-position1456,53437
(defun org-clock-out (&optional switch-to-state fail-quietly at-time)org-clock-out1550,56943
(defun org-clock-remove-empty-clock-drawer ()org-clock-remove-empty-clock-drawer1652,61074
(defun org-clock-timestamps-up (&optional n)org-clock-timestamps-up1666,61553
(defun org-clock-timestamps-down (&optional n)org-clock-timestamps-down1672,61755
(defun org-clock-timestamps-change (updown &optional n)org-clock-timestamps-change1678,61961
(defun org-clock-cancel ()org-clock-cancel1718,63473
(defun org-clock-goto (&optional select)org-clock-goto1746,64592
(defvar org-clock-file-total-minutes nilorg-clock-file-total-minutes1774,65621
(defun org-clock-sum-today (&optional headline-filter)org-clock-sum-today1778,65798
(defun org-clock-sum-custom (&optional headline-filter range propname)org-clock-sum-custom1784,66043
(defun org-clock-sum (&optional tstart tend headline-filter propname)org-clock-sum1798,66556
(defun org-clock-sum-current-item (&optional tstart)org-clock-sum-current-item1888,70156
(defun org-clock-display (&optional arg)org-clock-display1897,70413
(defvar org-clock-overlays nil)org-clock-overlays1952,72430
(defun org-clock-put-overlay (time)org-clock-put-overlay1955,72512
(defun org-clock-remove-overlays (&optional beg end noremove)org-clock-remove-overlays1982,73482
(defvar org-state) ;; dynamically scoped into this functionorg-state1994,73963
(defun org-clock-out-if-current ()org-clock-out-if-current1995,74023
(defun org-clock-get-clocktable (&rest props)org-clock-get-clocktable2022,75069
(defun org-clock-report (&optional arg)org-clock-report2043,75788
(defun org-day-of-week (day month year)org-day-of-week2067,76693
(defun org-quarter-to-date (quarter year)org-quarter-to-date2074,76879
(defun org-clock-special-range (key &optional time as-strings wstart mstart)org-clock-special-range2123,78045
(defun org-count-quarter (n)org-count-quarter2279,84065
(defun org-clocktable-shift (dir n)org-clocktable-shift2287,84196
(defun org-dblock-write:clocktable (params)org-dblock-write:clocktable2370,87505
(defun org-clocktable-write-default (ipos tables params)org-clocktable-write-default2461,90816
(defun org-clocktable-indent-string (level)org-clocktable-indent-string2706,100488
(defun org-clocktable-steps (params)org-clocktable-steps2712,100722
(defun org-clock-get-table-data (file params)org-clock-get-table-data2772,103003
(defun org-clock-time% (total &rest strings)org-clock-time%2876,107227
(defvar org-clock-loaded nilorg-clock-loaded2902,108109
(defun org-clock-update-time-maybe ()org-clock-update-time-maybe2906,108186
(defun org-clock-save ()org-clock-save2948,109477
(defun org-clock-load ()org-clock-load2995,111145

elpa/org-20160620/org-colview.el,6545
(defvar org-columns-overlays nilorg-columns-overlays43,1479
(defvar org-columns-current-fmt nilorg-columns-current-fmt46,1561
(defvar org-columns-current-fmt-compiled nilorg-columns-current-fmt-compiled49,1714
(defvar org-columns-current-widths nilorg-columns-current-widths53,1929
(defvar org-columns-current-maxwidths nilorg-columns-current-maxwidths56,2084
(defvar org-columns-begin-marker (make-marker)org-columns-begin-marker59,2257
(defvar org-columns-top-level-marker (make-marker)org-columns-top-level-marker61,2381
(defvar org-columns-map (make-sparse-keymap)org-columns-map64,2498
(defun org-columns-content ()org-columns-content67,2585
(defun org-columns--value (property pos)org-columns--value149,6050
(defun org-columns-new-overlay (beg end &optional string face)org-columns-new-overlay154,6273
(defun org-columns-display-here (&optional props dateline)org-columns-display-here162,6573
(defun org-columns-add-ellipses (string width)org-columns-add-ellipses273,10817
(defvar org-columns-full-header-line-format nilorg-columns-full-header-line-format282,11168
(defvar org-previous-header-line-format nilorg-previous-header-line-format284,11292
(defvar org-columns-inhibit-recalculation nilorg-columns-inhibit-recalculation286,11398
(defvar org-columns-flyspell-was-active nilorg-columns-flyspell-was-active288,11504
(defvar header-line-format)header-line-format293,11715
(defvar org-columns-previous-hscroll 0)org-columns-previous-hscroll294,11743
(defun org-columns-display-here-title ()org-columns-display-here-title296,11784
(defun org-columns-hscoll-title ()org-columns-hscoll-title325,12962
(defvar org-colview-initial-truncate-line-value nilorg-colview-initial-truncate-line-value336,13463
(defun org-columns-remove-overlays ()org-columns-remove-overlays340,13591
(defun org-columns-compact-links (s)org-columns-compact-links361,14593
(defun org-columns-show-value ()org-columns-show-value369,14841
(defvar org-agenda-columns-active) ;; defined in org-agenda.elorg-agenda-columns-active375,15041
(defun org-columns-quit ()org-columns-quit377,15105
(defun org-columns-check-computed ()org-columns-check-computed389,15559
(defun org-columns-todo (&optional arg)org-columns-todo397,15921
(defun org-columns-set-tags-or-toggle (&optional arg)org-columns-set-tags-or-toggle402,16063
(defvar org-agenda-overriding-columns-format nilorg-agenda-overriding-columns-format410,16374
(defun org-columns-edit-value (&optional key)org-columns-edit-value414,16544
(defun org-edit-headline () ; FIXME: this is not columns specific.  Make interactive?????  Use from agenda????org-edit-headline503,19829
(defun org-columns-edit-allowed ()org-columns-edit-allowed522,20556
(defun org-columns-eval (form)org-columns-eval543,21320
(defun org-columns-previous-allowed-value ()org-columns-previous-allowed-value553,21652
(defun org-columns-next-allowed-value (&optional previous nth)org-columns-next-allowed-value558,21810
(defun org-colview-construct-allowed-dates (s)org-colview-construct-allowed-dates633,24751
(defun org-verify-version (task)org-verify-version654,25790
(defun org-columns-open-link (&optional arg)org-columns-open-link661,25979
(defun org-columns-get-format-and-top-level ()org-columns-get-format-and-top-level667,26168
(defun org-columns-get-format (&optional fmt-string)org-columns-get-format672,26299
(defun org-columns-goto-top-level ()org-columns-goto-top-level682,26695
(defun org-columns (&optional columns-fmt-string)org-columns693,27088
(defvar org-columns-compile-maporg-columns-compile-map743,28947
(defun org-columns-new (&optional prop title width op fmt fun &rest rest)org-columns-new780,30351
(defun org-columns-delete ()org-columns-delete814,31636
(defun org-columns-edit-attributes ()org-columns-edit-attributes829,32205
(defun org-columns-widen (arg)org-columns-widen836,32424
(defun org-columns-narrow (arg)org-columns-narrow850,32856
(defun org-columns-move-right ()org-columns-move-right855,32988
(defun org-columns-move-left ()org-columns-move-left870,33481
(defun org-columns-store-format ()org-columns-store-format880,33763
(defun org-columns-get-autowidth-alist (s cache)org-columns-get-autowidth-alist905,34857
(defun org-columns-compute-all ()org-columns-compute-all923,35382
(defun org-columns-update (property)org-columns-update935,35809
(defvar org-inlinetask-min-levelorg-inlinetask-min-level954,36441
(defun org-columns-compute (property)org-columns-compute958,36553
(defun org-columns-redo ()org-columns-redo1034,39550
(defun org-columns-not-in-agenda ()org-columns-not-in-agenda1052,40110
(defun org-string-to-number (s)org-string-to-number1056,40253
(defun org-columns-number-to-string (n fmt &optional printf)org-columns-number-to-string1066,40559
(defun org-nofm-to-completion (n m &optional percent)org-nofm-to-completion1087,41349
(defun org-columns-string-to-number (s fmt)org-columns-string-to-number1093,41500
(defun org-columns-uncompile-format (cfmt)org-columns-uncompile-format1126,43033
(defun org-columns-compile-format (fmt)org-columns-compile-format1151,43896
(defun org-columns-capture-view (&optional maxlevel skip-empty-rows)org-columns-capture-view1196,45625
(defun org-dblock-write:columnview (params)org-dblock-write:columnview1234,47130
(defun org-listtable-to-string (tbl)org-listtable-to-string1333,50897
(defun org-insert-columns-dblock ()org-insert-columns-dblock1347,51329
(defvar org-agenda-view-columns-initially nilorg-agenda-view-columns-initially1363,51914
(defvar org-agenda-columns-show-summaries) ; defined in org-agenda.elorg-agenda-columns-show-summaries1366,52038
(defvar org-agenda-columns-compute-summary-properties); defined in org-agenda.elorg-agenda-columns-compute-summary-properties1367,52108
(defvar org-agenda-columns-add-appointments-to-effort-sum); as wellorg-agenda-columns-add-appointments-to-effort-sum1368,52189
(defun org-agenda-columns ()org-agenda-columns1371,52273
(defun org-agenda-colview-summarize (cache)org-agenda-colview-summarize1446,54869
(defun org-agenda-colview-compute (fmt)org-agenda-colview-compute1521,57365
(defun org-format-time-period (interval)org-format-time-period1549,58339
(defun org-estimate-mean-and-var (v)org-estimate-mean-and-var1560,58782
(defun org-estimate-combine (&rest el)org-estimate-combine1571,59166
(defun org-estimate-print (e &optional fmt)org-estimate-print1585,59657
(defun org-string-to-estimate (s)org-string-to-estimate1594,60013

elpa/org-20160620/org-compat.el,3247
(defconst org-xemacs-p (featurep 'xemacs))org-xemacs-p40,1401
(defun org-compatible-face (inherits specs)org-compatible-face42,1445
(defun org-version-check (version feature level)org-version-check82,3148
(defconst org-xemacs-key-equivalentsorg-xemacs-key-equivalents145,5237
(defun org-detach-overlay (ovl)org-detach-overlay154,5520
(defun org-overlay-display (ovl text &optional face evap)org-overlay-display156,5620
(defun org-overlay-before-string (ovl text &optional face evap)org-overlay-before-string166,6034
(defun org-find-overlays (prop &optional pos delete)org-find-overlays175,6429
(defun org-get-x-clipboard (value)org-get-x-clipboard185,6788
(defsubst org-decompose-region (beg end)org-decompose-region193,7125
(defun org-add-hook (hook function &optional append local)org-add-hook204,7448
(defun org-add-props (string plist &rest props)org-add-props210,7677
(defun org-fit-window-to-buffer (&optional window max-height min-heightorg-fit-window-to-buffer219,8082
(defun org-number-sequence (from &optional to inc)org-number-sequence236,8906
(defalias 'org-set-transient-maporg-set-transient-map257,9530
(defvar org-ignore-region nilorg-ignore-region264,9682
(defun org-region-active-p ()org-region-active-p267,9771
(defun org-cursor-to-region-beginning ()org-cursor-to-region-beginning278,10106
(define-obsolete-function-alias 'org-activate-mark 'activate-mark)org-activate-mark284,10306
(defun org-remove-from-invisibility-spec (arg)org-remove-from-invisibility-spec288,10405
(defun org-in-invisibility-spec-p (arg)org-in-invisibility-spec-p296,10717
(defmacro org-xemacs-without-invisibility (&rest body)org-xemacs-without-invisibility301,10894
(def-edebug-spec org-xemacs-without-invisibility (body))org-xemacs-without-invisibility315,11482
(defun org-indent-to-column (column &optional minimum buffer)org-indent-to-column317,11540
(defun org-indent-line-to (column)org-indent-line-to323,11813
(defun org-move-to-column (column &optional force buffer)org-move-to-column329,12032
(defun org-get-x-clipboard-compat (value)org-get-x-clipboard-compat342,12517
(defun org-propertize (string &rest properties)org-propertize354,12920
(defmacro org-find-library-dir (library)org-find-library-dir361,13119
(defun org-count-lines (s)org-count-lines364,13221
(defun org-kill-new (string &rest args)org-kill-new373,13478
(defun org-select-frame-set-input-focus (frame)org-select-frame-set-input-focus378,13640
(defalias 'org-float-timeorg-float-time401,14409
(defalias 'org-font-lock-ensureorg-font-lock-ensure413,14788
(defmacro org-no-popups (&rest body)org-no-popups419,14969
(defun org-floor* (x &optional y)org-floor*475,17017
(defun org-pop-to-buffer-same-windoworg-pop-to-buffer-same-window482,17313
(defun org-delete-directory (directory &optional recursive)org-delete-directory492,17758
(defmacro org-check-version ()org-check-version512,18553
(defun org-file-equal-p (f1 f2)org-file-equal-p529,19262
(defun org-buffer-narrowed-p ()org-buffer-narrowed-p540,19685
(defmacro org-with-silent-modifications (&rest body)org-with-silent-modifications558,20385
(def-edebug-spec org-with-silent-modifications (body))org-with-silent-modifications562,20554

elpa/org-20160620/org-crypt.el,876
(defvar epg-context)epg-context76,3041
(defgroup org-crypt nilorg-crypt79,3064
(defcustom org-crypt-tag-matcher "crypt"org-crypt-tag-matcher84,3138
(defcustom org-crypt-key ""org-crypt-key91,3365
(defcustom org-crypt-disable-auto-save 'askorg-crypt-disable-auto-save98,3564
(defun org-crypt-check-auto-save ()org-crypt-check-auto-save122,4465
(defun org-crypt-key-for-heading ()org-crypt-key-for-heading152,5706
(defun org-encrypt-string (str crypt-key)org-encrypt-string161,6049
(defun org-encrypt-entry ()org-encrypt-entry170,6541
(defun org-decrypt-entry ()org-decrypt-entry197,7359
(defun org-encrypt-entries ()org-encrypt-entries240,8869
(defun org-decrypt-entries ()org-decrypt-entries249,9110
(defun org-at-encrypted-entry-p ()org-at-encrypted-entry-p258,9341
(defun org-crypt-use-before-save-magic ()org-crypt-use-before-save-magic266,9608

elpa/org-20160620/org-ctags.el,2226
(defgroup org-ctags nilorg-ctags144,6012
(defvar org-ctags-enabled-p torg-ctags-enabled-p149,6129
(defvar org-ctags-tag-regexp "/<<([^>]+)>>/\\1/d,definition/"org-ctags-tag-regexp152,6201
(defcustom org-ctags-path-to-ctagsorg-ctags-path-to-ctags158,6466
(defcustom org-ctags-open-link-functionsorg-ctags-open-link-functions165,6663
(defvar org-ctags-tag-list nilorg-ctags-tag-list183,7307
(defcustom org-ctags-new-topic-templateorg-ctags-new-topic-template187,7430
(defadvice visit-tags-table (after org-ctags-load-tag-list activate compile)visit-tags-table211,8296
(defun org-ctags-enable ()org-ctags-enable217,8530
(defun org-ctags-get-filename-for-tag (tag)org-ctags-get-filename-for-tag227,8875
(defun org-ctags-all-tags-in-current-tags-table ()org-ctags-all-tags-in-current-tags-table254,10000
(defun org-ctags-string-search-and-replace (search replace string)org-ctags-string-search-and-replace271,10612
(defun y-or-n-minibuffer (prompt)y-or-n-minibuffer276,10812
(defun org-ctags-open-file (name &optional title)org-ctags-open-file284,10983
(defadvice find-tag (before org-ctags-set-org-mark-before-finding-tagfind-tag305,11783
(defun org-ctags-find-tag-at-point ()org-ctags-find-tag-at-point314,12069
(defun org-ctags-find-tag (name)org-ctags-find-tag353,13410
(defun org-ctags-visit-buffer-or-file (name &optional create)org-ctags-visit-buffer-or-file372,14040
(defun org-ctags-ask-visit-buffer-or-file (name)org-ctags-ask-visit-buffer-or-file404,15334
(defun org-ctags-append-topic (name &optional narrowp)org-ctags-append-topic411,15604
(defun org-ctags-ask-append-topic (name &optional narrowp)org-ctags-ask-append-topic433,16356
(defun org-ctags-rebuild-tags-file-then-find-tag (name)org-ctags-rebuild-tags-file-then-find-tag443,16729
(defun org-ctags-ask-rebuild-tags-file-then-find-tag (name)org-ctags-ask-rebuild-tags-file-then-find-tag454,17115
(defun org-ctags-fail-silently (name)org-ctags-fail-silently467,17561
(defun org-ctags-create-tags (&optional directory-name)org-ctags-create-tags477,17860
(defvar org-ctags-find-tag-history nilorg-ctags-find-tag-history512,19413
(defun org-ctags-find-tag-interactive ()org-ctags-find-tag-interactive515,19517

elpa/org-20160620/org-datetree.el,756
(defvar org-datetree-base-level 1org-datetree-base-level35,1224
(defcustom org-datetree-add-timestamp nilorg-datetree-add-timestamp41,1515
(defun org-datetree-find-date-create (date &optional keep-restriction)org-datetree-find-date-create52,1896
(defun org-datetree-find-year-create (year)org-datetree-find-year-create74,2710
(defun org-datetree-find-month-create (year month)org-datetree-find-month-create93,3359
(defun org-datetree-find-day-create (year month day)org-datetree-find-day-create113,4036
(defun org-datetree-insert-line (year &optional month day)org-datetree-insert-line133,4737
(defun org-datetree-file-entry-under (txt date)org-datetree-file-entry-under159,5567
(defun org-datetree-cleanup ()org-datetree-cleanup167,5870

elpa/org-20160620/org-docview.el,269
(defun org-docview-export (link description format)org-docview-export55,1893
(defun org-docview-open (link)org-docview-open68,2421
(defun org-docview-store-link ()org-docview-store-link78,2801
(defun org-docview-complete-link ()org-docview-complete-link91,3212

elpa/org-20160620/org-element.el,18470
(defvar org-element-paragraph-separate nilorg-element-paragraph-separate134,5937
(defvar org-element--object-regexp nilorg-element--object-regexp140,6217
(defun org-element--set-regexps ()org-element--set-regexps147,6543
(defun org-element-update-syntax ()org-element-update-syntax224,9127
(defconst org-element-all-elementsorg-element-all-elements230,9272
(defconst org-element-greater-elementsorg-element-greater-elements239,9732
(defconst org-element-all-objectsorg-element-all-objects245,9988
(defconst org-element-recursive-objectsorg-element-recursive-objects252,10315
(defconst org-element-object-containersorg-element-object-containers257,10507
(defvar org-element-block-name-alistorg-element-block-name-alist261,10696
(defconst org-element-affiliated-keywordsorg-element-affiliated-keywords272,11208
(defconst org-element-keyword-translation-alistorg-element-keyword-translation-alist279,11545
(defconst org-element-multiple-keywords '("CAPTION" "HEADER")org-element-multiple-keywords287,11947
(defconst org-element-parsed-keywords '("CAPTION")org-element-parsed-keywords299,12427
(defconst org-element--parsed-properties-alistorg-element--parsed-properties-alist308,12727
(defconst org-element-dual-keywords '("CAPTION" "RESULTS")org-element-dual-keywords315,12996
(defconst org-element--affiliated-reorg-element--affiliated-re327,13437
(defconst org-element-object-restrictionsorg-element-object-restrictions351,14183
(defconst org-element-secondary-value-alistorg-element-secondary-value-alist396,16291
(defconst org-element--pair-square-tableorg-element--pair-square-table402,16467
(defsubst org-element-type (element)org-element-type430,17578
(defsubst org-element-property (property element)org-element-property442,17993
(defsubst org-element-contents (element)org-element-contents447,18205
(defsubst org-element-restriction (element)org-element-restriction453,18382
(defsubst org-element-put-property (element property value)org-element-put-property460,18674
(defsubst org-element-set-contents (element &rest contents)org-element-set-contents467,18949
(defun org-element-secondary-p (object)org-element-secondary-p474,19211
(defsubst org-element-adopt-elements (parent &rest children)org-element-adopt-elements485,19647
(defun org-element-extract-element (element)org-element-extract-element506,20418
(defun org-element-insert-before (element location)org-element-insert-before522,21048
(defun org-element-set-element (old new)org-element-set-element554,22527
(defun org-element-create (type &optional props &rest children)org-element-create577,23615
(defun org-element-copy (datum)org-element-copy584,23923
(defun org-element-center-block-parser (limit affiliated)org-element-center-block-parser635,25821
(defun org-element-center-block-interpreter (center-block contents)org-element-center-block-interpreter677,27376
(defun org-element-drawer-parser (limit affiliated)org-element-drawer-parser685,27604
(defun org-element-drawer-interpreter (drawer contents)org-element-drawer-interpreter729,29254
(defun org-element-dynamic-block-parser (limit affiliated)org-element-dynamic-block-parser739,29503
(defun org-element-dynamic-block-interpreter (dynamic-block contents)org-element-dynamic-block-interpreter787,31234
(defconst org-element--footnote-separatororg-element--footnote-separator799,31626
(defun org-element-footnote-definition-parser (limit affiliated)org-element-footnote-definition-parser805,31827
(defun org-element-footnote-definition-interpreter (footnote-definition contents)org-element-footnote-definition-interpreter861,33773
(defun org-element--get-node-properties ()org-element--get-node-properties871,34079
(defun org-element--get-time-properties ()org-element--get-time-properties889,34811
(defun org-element-headline-parser (limit &optional raw-secondary-p)org-element-headline-parser907,35535
(defun org-element-headline-interpreter (headline contents)org-element-headline-interpreter1010,39113
(defun org-element-inlinetask-parser (limit &optional raw-secondary-p)org-element-inlinetask-parser1056,40572
(defun org-element-inlinetask-interpreter (inlinetask contents)org-element-inlinetask-interpreter1146,43778
(defun org-element-item-parser (limit struct &optional raw-secondary-p)org-element-item-parser1186,45042
(defun org-element-item-interpreter (item contents)org-element-item-interpreter1262,47622
(defun org-element--list-struct (limit)org-element--list-struct1297,48799
(defun org-element-plain-list-parser (limit affiliated structure)org-element-plain-list-parser1379,51653
(defun org-element-plain-list-interpreter (plain-list contents)org-element-plain-list-interpreter1424,53245
(defun org-element-property-drawer-parser (limit)org-element-property-drawer-parser1436,53536
(defun org-element-property-drawer-interpreter (property-drawer contents)org-element-property-drawer-interpreter1464,54547
(defun org-element-quote-block-parser (limit affiliated)org-element-quote-block-parser1472,54785
(defun org-element-quote-block-interpreter (quote-block contents)org-element-quote-block-interpreter1514,56292
(defun org-element-section-parser (limit)org-element-section-parser1522,56516
(defun org-element-section-interpreter (section contents)org-element-section-interpreter1547,57307
(defun org-element-special-block-parser (limit affiliated)org-element-special-block-parser1555,57485
(defun org-element-special-block-interpreter (special-block contents)org-element-special-block-interpreter1602,59154
(defun org-element-babel-call-parser (limit affiliated)org-element-babel-call-parser1626,60036
(defun org-element-babel-call-interpreter (babel-call contents)org-element-babel-call-interpreter1668,61546
(defun org-element-clock-parser (limit)org-element-clock-parser1682,62004
(defun org-element-clock-interpreter (clock contents)org-element-clock-interpreter1716,63108
(defun org-element-comment-parser (limit affiliated)org-element-comment-parser1732,63525
(defun org-element-comment-interpreter (comment contents)org-element-comment-interpreter1777,64921
(defun org-element-comment-block-parser (limit affiliated)org-element-comment-block-parser1785,65140
(defun org-element-comment-block-interpreter (comment-block contents)org-element-comment-block-interpreter1824,66512
(defun org-element-diary-sexp-parser (limit affiliated)org-element-diary-sexp-parser1835,66828
(defun org-element-diary-sexp-interpreter (diary-sexp contents)org-element-diary-sexp-interpreter1863,67801
(defun org-element-example-block-parser (limit affiliated)org-element-example-block-parser1871,67988
(defun org-element-example-block-interpreter (example-block contents)org-element-example-block-interpreter1947,70675
(defun org-element-export-block-parser (limit affiliated)org-element-export-block-parser1964,71279
(defun org-element-export-block-interpreter (export-block contents)org-element-export-block-interpreter2007,72798
(defun org-element-fixed-width-parser (limit affiliated)org-element-fixed-width-parser2018,73133
(defun org-element-fixed-width-interpreter (fixed-width contents)org-element-fixed-width-interpreter2058,74356
(defun org-element-horizontal-rule-parser (limit affiliated)org-element-horizontal-rule-parser2070,74696
(defun org-element-horizontal-rule-interpreter (horizontal-rule contents)org-element-horizontal-rule-interpreter2095,75553
(defun org-element-keyword-parser (limit affiliated)org-element-keyword-parser2103,75724
(defun org-element-keyword-interpreter (keyword contents)org-element-keyword-interpreter2137,76995
(defconst org-element--latex-begin-environmentorg-element--latex-begin-environment2147,77244
(defconst org-element--latex-end-environmentorg-element--latex-end-environment2154,77489
(defun org-element-latex-environment-parser (limit affiliated)org-element-latex-environment-parser2159,77670
(defun org-element-latex-environment-interpreter (latex-environment contents)org-element-latex-environment-interpreter2195,79028
(defun org-element-node-property-parser (limit)org-element-node-property-parser2203,79251
(defun org-element-node-property-interpreter (node-property contents)org-element-node-property-interpreter2229,79957
(defun org-element-paragraph-parser (limit affiliated)org-element-paragraph-parser2239,80261
(defun org-element-paragraph-interpreter (paragraph contents)org-element-paragraph-interpreter2306,82676
(defun org-element-planning-parser (limit)org-element-planning-parser2314,82855
(defun org-element-planning-interpreter (planning contents)org-element-planning-interpreter2350,84034
(defun org-element-src-block-parser (limit affiliated)org-element-src-block-parser2373,84763
(defun org-element-src-block-interpreter (src-block contents)org-element-src-block-interpreter2466,87966
(defun org-element-table-parser (limit affiliated)org-element-table-parser2493,88919
(defun org-element-table-interpreter (table contents)org-element-table-interpreter2544,90684
(defun org-element-table-row-parser (limit)org-element-table-row-parser2559,91206
(defun org-element-table-row-interpreter (table-row contents)org-element-table-row-interpreter2590,92130
(defun org-element-verse-block-parser (limit affiliated)org-element-verse-block-parser2599,92392
(defun org-element-verse-block-interpreter (verse-block contents)org-element-verse-block-interpreter2637,93752
(defun org-element-bold-parser ()org-element-bold-parser2661,94536
(defun org-element-bold-interpreter (bold contents)org-element-bold-interpreter2686,95319
(defun org-element-code-parser ()org-element-code-parser2694,95493
(defun org-element-code-interpreter (code contents)org-element-code-interpreter2716,96169
(defun org-element-entity-parser ()org-element-entity-parser2724,96348
(defun org-element-entity-interpreter (entity contents)org-element-entity-interpreter2757,97538
(defun org-element-export-snippet-parser ()org-element-export-snippet-parser2767,97794
(defun org-element-export-snippet-interpreter (export-snippet contents)org-element-export-snippet-interpreter2796,98742
(defun org-element-footnote-reference-parser ()org-element-footnote-reference-parser2806,99032
(defun org-element-footnote-reference-interpreter (footnote-reference contents)org-element-footnote-reference-interpreter2839,100218
(defun org-element-inline-babel-call-parser ()org-element-inline-babel-call-parser2849,100560
(defun org-element-inline-babel-call-interpreter (inline-babel-call contents)org-element-inline-babel-call-interpreter2881,101801
(defun org-element-inline-src-block-parser ()org-element-inline-src-block-parser2895,102309
(defun org-element-inline-src-block-interpreter (inline-src-block contents)org-element-inline-src-block-interpreter2922,103259
(defun org-element-italic-parser ()org-element-italic-parser2935,103712
(defun org-element-italic-interpreter (italic contents)org-element-italic-interpreter2960,104507
(defun org-element-latex-fragment-parser ()org-element-latex-fragment-parser2968,104697
(defun org-element-latex-fragment-interpreter (latex-fragment contents)org-element-latex-fragment-interpreter3006,106025
(defun org-element-line-break-parser ()org-element-line-break-parser3013,106231
(defun org-element-line-break-interpreter (line-break contents)org-element-line-break-interpreter3028,106704
(defun org-element-link-parser ()org-element-link-parser3036,106857
(defun org-element-link-interpreter (link contents)org-element-link-interpreter3161,111812
(defun org-element-macro-parser ()org-element-macro-parser3183,112611
(defun org-element-macro-interpreter (macro contents)org-element-macro-interpreter3209,113492
(defun org-element-radio-target-parser ()org-element-radio-target-parser3217,113665
(defun org-element-radio-target-interpreter (target contents)org-element-radio-target-interpreter3243,114504
(defun org-element-statistics-cookie-parser ()org-element-statistics-cookie-parser3251,114708
(defun org-element-statistics-cookie-interpreter (statistics-cookie contents)org-element-statistics-cookie-interpreter3273,115456
(defun org-element-strike-through-parser ()org-element-strike-through-parser3281,115679
(defun org-element-strike-through-interpreter (strike-through contents)org-element-strike-through-interpreter3306,116516
(defun org-element-subscript-parser ()org-element-subscript-parser3314,116725
(defun org-element-subscript-interpreter (subscript contents)org-element-subscript-interpreter3342,117665
(defun org-element-superscript-parser ()org-element-superscript-parser3352,117928
(defun org-element-superscript-interpreter (superscript contents)org-element-superscript-interpreter3380,118873
(defun org-element-table-cell-parser ()org-element-table-cell-parser3390,119143
(defun org-element-table-cell-interpreter (table-cell contents)org-element-table-cell-interpreter3407,119685
(defun org-element-target-parser ()org-element-target-parser3415,119889
(defun org-element-target-interpreter (target contents)org-element-target-interpreter3436,120505
(defconst org-element--timestamp-regexporg-element--timestamp-regexp3444,120697
(defun org-element-timestamp-parser ()org-element-timestamp-parser3452,120928
(defun org-element-timestamp-interpreter (timestamp contents)org-element-timestamp-interpreter3553,124680
(defun org-element-underline-parser ()org-element-underline-parser3652,128402
(defun org-element-underline-interpreter (underline contents)org-element-underline-interpreter3677,129216
(defun org-element-verbatim-parser ()org-element-verbatim-parser3685,129409
(defun org-element-verbatim-interpreter (verbatim contents)org-element-verbatim-interpreter3707,130110
(defun org-element--current-element (limit &optional granularity mode structure)org-element--current-element3726,130796
(defun org-element--collect-affiliated-keywords (limit)org-element--collect-affiliated-keywords3858,136217
(defun org-element-parse-buffer (&optional granularity visible-only)org-element-parse-buffer3941,139448
(defun org-element-parse-secondary-string (string restriction &optional parent)org-element-parse-secondary-string3994,141674
(defun org-element-maporg-element-map4022,142623
(defsubst org-element--next-mode (type parentp)org-element--next-mode4190,149282
(defun org-element--parse-elementsorg-element--parse-elements4211,149955
(defun org-element--object-lex (restriction)org-element--object-lex4282,152708
(defun org-element--parse-objects (beg end acc restriction)org-element--parse-objects4369,156199
(defun org-element-interpret-data (data)org-element-interpret-data4428,158244
(defun org-element--interpret-data-1 (data parent)org-element--interpret-data-14434,158476
(defun org-element--interpret-affiliated-keywords (element)org-element--interpret-affiliated-keywords4500,161004
(defun org-element-normalize-string (s)org-element-normalize-string4554,163081
(defun org-element-normalize-contents (element &optional ignore-first)org-element-normalize-contents4566,163480
(defvar org-element-use-cache torg-element-use-cache4694,168910
(defvar org-element-cache-sync-idle-time 0.6org-element-cache-sync-idle-time4698,169036
(defvar org-element-cache-sync-duration (seconds-to-time 0.04)org-element-cache-sync-duration4701,169142
(defvar org-element-cache-sync-break (seconds-to-time 0.3)org-element-cache-sync-break4707,169405
(defvar org-element--cache nilorg-element--cache4714,169618
(defvar org-element--cache-objects nilorg-element--cache-objects4720,169833
(defvar org-element--cache-sync-requests nilorg-element--cache-sync-requests4748,170647
(defvar org-element--cache-sync-timer nilorg-element--cache-sync-timer4779,171882
(defvar org-element--cache-sync-keys nilorg-element--cache-sync-keys4782,171968
(defsubst org-element--cache-key (element)org-element--cache-key4786,172120
(defun org-element--cache-generate-key (lower upper)org-element--cache-generate-key4817,173404
(defsubst org-element--cache-key-less-p (a b)org-element--cache-key-less-p4887,175664
(defun org-element--cache-compare (a b)org-element--cache-compare4906,176399
(defsubst org-element--cache-root ()org-element--cache-root4911,176590
(defsubst org-element--cache-active-p ()org-element--cache-active-p4919,176803
(defun org-element--cache-find (pos &optional side)org-element--cache-find4925,176988
(defun org-element--cache-put (element &optional data)org-element--cache-put4984,178924
(defsubst org-element--cache-remove (element)org-element--cache-remove5009,180086
(defsubst org-element--cache-set-timer (buffer)org-element--cache-set-timer5018,180342
(defsubst org-element--cache-interrupt-p (time-limit)org-element--cache-interrupt-p5031,180776
(defsubst org-element--cache-shift-positions (element offset &optional props)org-element--cache-shift-positions5038,181024
(defun org-element--cache-sync (buffer &optional threshold future-change)org-element--cache-sync5063,182162
(defun org-element--cache-process-requestorg-element--cache-process-request5106,183881
(defun org-element--parse-to (pos &optional syncp time-limit)org-element--parse-to5299,191398
(defconst org-element--cache-sensitive-reorg-element--cache-sensitive-re5433,197004
(defvar org-element--cache-change-warning nilorg-element--cache-change-warning5448,197565
(defun org-element--cache-before-change (beg end)org-element--cache-before-change5452,197715
(defun org-element--cache-after-change (beg end pre)org-element--cache-after-change5470,198426
(defun org-element--cache-for-removal (beg end offset)org-element--cache-for-removal5509,200017
(defun org-element--cache-submit-request (beg end offset)org-element--cache-submit-request5558,201929
(defun org-element-cache-reset (&optional all)org-element-cache-reset5628,204995
(defun org-element-cache-refresh (pos)org-element-cache-refresh5650,205945
(defun org-element-at-point ()org-element-at-point5677,206932
(defun org-element-context (&optional element)org-element-context5716,208401
(defun org-element-lineage (blob &optional types with-self)org-element-lineage5903,215961
(defun org-element-nested-p (elem-A elem-B)org-element-nested-p5927,216850
(defun org-element-swap-A-B (elem-A elem-B)org-element-swap-A-B5936,217231
(defun org-element-remove-indentation (s &optional n)org-element-remove-indentation6005,220023

elpa/org-20160620/org-entities.el,496
(defgroup org-entities nilorg-entities36,1243
(defun org-entities--user-safe-p (v)org-entities--user-safe-p41,1353
(defcustom org-entities-user nilorg-entities-user54,1678
(defconst org-entitiesorg-entities86,3039
(defsubst org-entity-get (name)org-entity-get531,27325
(defun org-entities-create-table ()org-entities-create-table539,27622
(defvar org-pretty-entities) ;; declare defcustom from orgorg-pretty-entities568,28571
(defun org-entities-help ()org-entities-help569,28630

elpa/org-20160620/org-eshell.el,116
(defun org-eshell-open (link)org-eshell-open33,1048
(defun org-eshell-store-link ()org-eshell-store-link53,1801

elpa/org-20160620/org-faces.el,5548
(defgroup org-faces nilorg-faces37,1195
(defface org-defaultorg-default42,1288
(defface org-hideorg-hide47,1400
(defface org-level-1 ;; originally copied from font-lock-function-name-faceorg-level-155,1676
(defface org-level-2 ;; originally copied from font-lock-variable-name-faceorg-level-266,2270
(defface org-level-3 ;; originally copied from font-lock-keyword-faceorg-level-376,2812
(defface org-level-4   ;; originally copied from font-lock-comment-faceorg-level-488,3500
(defface org-level-5 ;; originally copied from font-lock-type-faceorg-level-5100,4191
(defface org-level-6 ;; originally copied from font-lock-constant-faceorg-level-6108,4585
(defface org-level-7 ;; originally copied from font-lock-builtin-faceorg-level-7116,4984
(defface org-level-8 ;; originally copied from font-lock-string-faceorg-level-8124,5380
(defface org-special-keyword ;; originally copied from font-lock-string-faceorg-special-keyword132,5776
(defface org-drawer ;; originally copied from font-lock-function-name-faceorg-drawer140,6153
(defface org-property-value nilorg-property-value151,6729
(defface org-columnorg-column155,6826
(defface org-column-titleorg-column-title195,8630
(defface org-agenda-column-datelineorg-agenda-column-dateline207,9127
(defface org-warningorg-warning213,9302
(defface org-archived    ; similar to shadoworg-archived223,9808
(defface org-linkorg-link236,10323
(defface org-footnoteorg-footnote244,10594
(defface org-ellipsisorg-ellipsis251,10837
(defface org-targetorg-target258,11120
(defface org-dateorg-date265,11324
(defface org-date-selectedorg-date-selected272,11570
(defface org-sexp-dateorg-sexp-date284,12216
(defface org-tagorg-tag291,12460
(defface org-list-dtorg-list-dt298,12637
(defface org-todo ; font-lock-warning-faceorg-todo303,12747
(defface org-done ;; originally copied from font-lock-type-faceorg-done313,13258
(defface org-agenda-done ;; originally copied from font-lock-type-faceorg-agenda-done322,13699
(defface org-headline-done ;; originally copied from font-lock-string-faceorg-headline-done336,14459
(defcustom org-faces-easy-propertiesorg-faces-easy-properties346,15004
(defcustom org-todo-keyword-faces nilorg-todo-keyword-faces360,15552
(defface org-priority ;; originally copied from font-lock-string-faceorg-priority378,16211
(defcustom org-priority-faces nilorg-priority-faces386,16581
(defvar org-tags-special-faces-re nil)org-tags-special-faces-re403,17193
(defun org-set-tag-faces (var value)org-set-tag-faces404,17232
(defface org-checkboxorg-checkbox411,17443
(defface org-checkbox-statistics-todoorg-checkbox-statistics-todo417,17563
(defface org-checkbox-statistics-doneorg-checkbox-statistics-done422,17702
(defcustom org-tag-faces nilorg-tag-faces427,17839
(defface org-table ;; originally copied from font-lock-function-name-faceorg-table447,18569
(defface org-formulaorg-formula458,19193
(defface org-codeorg-code468,19645
(defface org-meta-lineorg-meta-line482,20157
(defface org-document-titleorg-document-title488,20318
(defface org-document-infoorg-document-info495,20635
(defface org-document-info-keywordorg-document-info-keyword503,20951
(defface org-blockorg-block516,21477
(defface org-block-begin-lineorg-block-begin-line530,21983
(defface org-block-end-lineorg-block-end-line535,22135
(defface org-verbatimorg-verbatim540,22290
(defface org-quoteorg-quote554,22857
(defface org-verseorg-verse559,22979
(defcustom org-fontify-quote-and-verse-blocks nilorg-fontify-quote-and-verse-blocks564,23101
(defface org-clock-overlay ;; copied from secondary-selectionorg-clock-overlay572,23421
(defface org-agenda-structure ;; originally copied from font-lock-function-name-faceorg-agenda-structure588,24144
(defface org-agenda-dateorg-agenda-date599,24751
(defface org-agenda-date-todayorg-agenda-date-today604,24880
(defface org-agenda-clockingorg-agenda-clocking609,25027
(defface org-agenda-date-weekendorg-agenda-date-weekend614,25173
(defface org-scheduledorg-scheduled622,25417
(defface org-scheduled-todayorg-scheduled-today631,25799
(defface org-agenda-dimmed-todo-faceorg-agenda-dimmed-todo-face640,26187
(defface org-scheduled-previouslyorg-scheduled-previously646,26396
(defface org-upcoming-deadlineorg-upcoming-deadline656,26895
(defcustom org-agenda-deadline-facesorg-agenda-deadline-faces666,27391
(defface org-agenda-restriction-lockorg-agenda-restriction-lock691,28388
(defface org-agenda-filter-tagsorg-agenda-filter-tags702,28967
(defface org-agenda-filter-regexporg-agenda-filter-regexp707,29124
(defface org-agenda-filter-categoryorg-agenda-filter-category712,29286
(defface org-time-grid ;; originally copied from font-lock-variable-name-faceorg-time-grid717,29454
(defface org-agenda-current-timeorg-agenda-current-time725,29867
(defface org-agenda-diaryorg-agenda-diary730,30013
(defface org-agenda-calendar-eventorg-agenda-calendar-event735,30163
(defface org-agenda-calendar-sexporg-agenda-calendar-sexp740,30318
(defconst org-level-facesorg-level-faces745,30470
(defcustom org-n-level-faces (length org-level-faces)org-n-level-faces750,30604
(defcustom org-cycle-level-faces torg-cycle-level-faces757,30899
(defface org-latex-and-relatedorg-latex-and-related767,31228
(defface org-macroorg-macro785,31866
(defface org-tag-grouporg-tag-group792,32031
(defface org-mode-line-clockorg-mode-line-clock799,32190
(defface org-mode-line-clock-overrunorg-mode-line-clock-overrun804,32317

elpa/org-20160620/org-feed.el,1885
(defgroup org-feed  nilorg-feed108,4244
(defcustom org-feed-alist nilorg-feed-alist113,4360
(defcustom org-feed-drawer "FEEDSTATUS"org-feed-drawer218,8962
(defcustom org-feed-default-template "\n* %h\n  %U\n  %description\n  %a\n"org-feed-default-template225,9214
(defcustom org-feed-save-after-adding torg-feed-save-after-adding243,10090
(defcustom org-feed-retrieve-method 'url-retrieve-synchronouslyorg-feed-retrieve-method248,10227
(defcustom org-feed-before-adding-hook nilorg-feed-before-adding-hook260,10748
(defcustom org-feed-after-adding-hook nilorg-feed-after-adding-hook267,10975
(defvar org-feed-buffer "*Org feed*"org-feed-buffer274,11200
(defun org-feed-update-all ()org-feed-update-all278,11294
(defun org-feed-update (feed &optional retrieve-only)org-feed-update291,11714
(defun org-feed-goto-inbox (feed)org-feed-goto-inbox424,16268
(defun org-feed-show-raw-feed (feed)org-feed-show-raw-feed436,16700
(defun org-feed-goto-inbox-internal (file heading)org-feed-goto-inbox-internal449,17147
(defun org-feed-read-previous-status (pos drawer)org-feed-read-previous-status464,17603
(defun org-feed-write-status (pos drawer status)org-feed-write-status476,17997
(defun org-feed-add-items (pos entries)org-feed-add-items495,18589
(defun org-feed-format-entry (entry template formatter)org-feed-format-entry511,19129
(defun org-feed-make-indented-block (s n)org-feed-make-indented-block570,21383
(defun org-feed-skip-http-headers (buffer)org-feed-skip-http-headers578,21629
(defun org-feed-get-feed (url)org-feed-get-feed588,21912
(defun org-feed-parse-rss-feed (buffer)org-feed-parse-rss-feed604,22579
(defun org-feed-parse-rss-entry (entry)org-feed-parse-rss-entry627,23400
(defun org-feed-parse-atom-feed (buffer)org-feed-parse-atom-feed643,24027
(defun org-feed-parse-atom-entry (entry)org-feed-parse-atom-entry661,24663

elpa/org-20160620/org-footnote.el,3487
(defvar message-cite-prefix-regexp)	; defined in message.elmessage-cite-prefix-regexp66,2869
(defvar message-signature-separator)	; defined in message.elmessage-signature-separator67,2929
(defvar org-bracket-link-regexp)	; defined in org.elorg-bracket-link-regexp68,2990
(defvar org-complex-heading-regexp)	; defined in org.elorg-complex-heading-regexp69,3043
(defvar org-element-all-elements)	; defined in org-element.elorg-element-all-elements70,3099
(defvar org-element-all-objects)	; defined in org-element.elorg-element-all-objects71,3161
(defvar org-odd-levels-only)		; defined in org.elorg-odd-levels-only72,3222
(defvar org-outline-regexp-bol)		; defined in org.elorg-outline-regexp-bol73,3272
(defconst org-footnote-reorg-footnote-re75,3326
(defconst org-footnote-definition-reorg-footnote-definition-re90,3827
(defconst org-footnote-forbidden-blocksorg-footnote-forbidden-blocks94,3980
(defgroup org-footnote nilorg-footnote98,4144
(defcustom org-footnote-section "Footnotes"org-footnote-section103,4236
(defcustom org-footnote-tag-for-non-org-mode-files "Footnotes:"org-footnote-tag-for-non-org-mode-files132,5283
(defcustom org-footnote-define-inline nilorg-footnote-define-inline146,5940
(defcustom org-footnote-auto-label torg-footnote-auto-label154,6284
(defcustom org-footnote-auto-adjust nilorg-footnote-auto-adjust173,7074
(defcustom org-footnote-fill-after-inline-note-extraction nilorg-footnote-fill-after-inline-note-extraction191,7714
(defun org-footnote-in-valid-context-p ()org-footnote-in-valid-context-p199,8060
(defun org-footnote-at-reference-p ()org-footnote-at-reference-p218,8714
(defun org-footnote-at-definition-p ()org-footnote-at-definition-p257,10349
(defun org-footnote-get-next-reference (&optional label backward limit)org-footnote-get-next-reference298,11899
(defun org-footnote-next-reference-or-definition (limit)org-footnote-next-reference-or-definition318,12684
(defun org-footnote-get-definition (label)org-footnote-get-definition346,13649
(defun org-footnote-goto-definition (label &optional location)org-footnote-goto-definition372,14559
(defun org-footnote-goto-previous-reference (label)org-footnote-goto-previous-reference399,15622
(defun org-footnote-normalize-label (label)org-footnote-normalize-label417,16290
(defun org-footnote-all-labels (&optional with-defs)org-footnote-all-labels426,16548
(defun org-footnote-unique-label (&optional current)org-footnote-unique-label459,17701
(defun org-footnote--allow-reference-p ()org-footnote--allow-reference-p474,18174
(defun org-footnote-new ()org-footnote-new523,20370
(defvar org-blank-before-new-entry) ; Silence byte-compiler.org-blank-before-new-entry568,22187
(defun org-footnote-create-definition (label)org-footnote-create-definition569,22248
(defun org-footnote-action (&optional special)org-footnote-action646,25152
(defun org-footnote-normalize (&optional sort-only)org-footnote-normalize707,27386
(defun org-footnote--goto-local-insertion-point ()org-footnote--goto-local-insertion-point873,33892
(defun org-footnote-delete-references (label)org-footnote-delete-references887,34447
(defun org-footnote-delete-definitions (label)org-footnote-delete-definitions899,34808
(defun org-footnote-delete (&optional label)org-footnote-delete917,35429
(defun org-footnote-renumber-fn:N ()org-footnote-renumber-fn:N950,36704
(defun org-footnote-auto-adjust-maybe ()org-footnote-auto-adjust-maybe969,37444

elpa/org-20160620/org-gnus.el,847
(defcustom org-gnus-prefer-web-links nilorg-gnus-prefer-web-links49,1807
(defcustom org-gnus-nnimap-query-article-no-from-file nilorg-gnus-nnimap-query-article-no-from-file57,2140
(defcustom org-gnus-no-server nilorg-gnus-no-server69,2658
(defun org-gnus-nnimap-cached-article-number (group server message-id)org-gnus-nnimap-cached-article-number82,2978
(defun org-gnus-group-link (group)org-gnus-group-link102,3848
(defun org-gnus-article-link (group newsgroups message-id x-no-archive)org-gnus-article-link120,4585
(defun org-gnus-store-link ()org-gnus-store-link141,5567
(defun org-gnus-open-nntp (path)org-gnus-open-nntp233,9466
(defun org-gnus-open (path)org-gnus-open243,9783
(defun org-gnus-follow-link (&optional group article)org-gnus-follow-link256,10240
(defun org-gnus-no-new-news ()org-gnus-no-new-news300,11839

elpa/org-20160620/org-habit.el,2362
(defgroup org-habit nilorg-habit37,1163
(defcustom org-habit-graph-column 40org-habit-graph-column42,1282
(defcustom org-habit-preceding-days 21org-habit-preceding-days48,1500
(defcustom org-habit-following-days 7org-habit-following-days53,1643
(defcustom org-habit-show-habits torg-habit-show-habits58,1784
(defcustom org-habit-show-habits-only-for-today torg-habit-show-habits-only-for-today63,1905
(defcustom org-habit-show-all-today nilorg-habit-show-all-today70,2174
(defcustom org-habit-today-glyph ?!org-habit-today-glyph76,2366
(defcustom org-habit-completed-glyph ?*org-habit-completed-glyph82,2505
(defcustom org-habit-show-done-always-green nilorg-habit-show-done-always-green88,2678
(defface org-habit-clear-faceorg-habit-clear-face94,2897
(defface org-habit-clear-future-faceorg-habit-clear-future-face100,3124
(defface org-habit-ready-faceorg-habit-ready-face107,3374
(defface org-habit-ready-future-faceorg-habit-ready-future-face113,3610
(defface org-habit-alert-faceorg-habit-alert-face120,3852
(defface org-habit-alert-future-faceorg-habit-alert-future-face126,4064
(defface org-habit-overdue-faceorg-habit-overdue-face133,4293
(defface org-habit-overdue-future-faceorg-habit-overdue-future-face139,4516
(defun org-habit-duration-to-days (ts)org-habit-duration-to-days146,4745
(defun org-is-habit-p (&optional pom)org-is-habit-p155,5079
(defun org-habit-parse-todo (&optional pom)org-habit-parse-todo159,5221
(defsubst org-habit-scheduled (habit)org-habit-scheduled231,8175
(defsubst org-habit-scheduled-repeat (habit)org-habit-scheduled-repeat233,8230
(defsubst org-habit-deadline (habit)org-habit-deadline235,8292
(defsubst org-habit-deadline-repeat (habit)org-habit-deadline-repeat242,8519
(defsubst org-habit-done-dates (habit)org-habit-done-dates245,8626
(defsubst org-habit-repeat-type (habit)org-habit-repeat-type247,8682
(defsubst org-habit-get-priority (habit &optional moment)org-habit-get-priority250,8740
(defun org-habit-get-faces (habit &optional now-days scheduled-days donep)org-habit-get-faces272,9582
(defun org-habit-build-graph (habit starting current ending)org-habit-build-graph308,11303
(defun org-habit-insert-consistency-graphs (&optional line)org-habit-insert-consistency-graphs387,13972
(defun org-habit-toggle-habits ()org-habit-toggle-habits410,14845

elpa/org-20160620/org-id.el,2563
(defgroup org-id nilorg-id81,3055
(defcustom org-id-link-to-org-use-id nilorg-id-link-to-org-use-id88,3262
(defcustom org-id-uuid-program "uuidgen"org-id-uuid-program128,4880
(defcustom org-id-method 'uuidorg-id-method133,4981
(defcustom org-id-prefix nilorg-id-prefix153,5764
(defcustom org-id-include-domain nilorg-id-include-domain164,6103
(defcustom org-id-track-globally torg-id-track-globally176,6612
(defcustom org-id-locations-file (convert-standard-filenameorg-id-locations-file189,7137
(defvar org-id-locations nilorg-id-locations196,7417
(defvar org-id-files nilorg-id-files199,7491
(defcustom org-id-extra-files 'org-agenda-text-search-extra-filesorg-id-extra-files202,7554
(defcustom org-id-search-archives torg-id-search-archives217,8171
(defun org-id-get-create (&optional force)org-id-get-create228,8546
(defun org-id-copy ()org-id-copy238,8873
(defun org-id-get (&optional pom create prefix)org-id-get245,9053
(defun org-id-get-with-outline-path-completion (&optional targets)org-id-get-with-outline-path-completion264,9737
(defun org-id-get-with-outline-drilling (&optional targets)org-id-get-with-outline-drilling281,10504
(defun org-id-goto (id)org-id-goto291,10980
(defun org-id-find (id &optional markerp)org-id-find304,11374
(defun org-id-new (&optional prefix)org-id-new328,12136
(defun org-id-uuid ()org-id-uuid360,13258
(defun org-id-int-to-b36-one-digit (i)org-id-int-to-b36-one-digit384,13822
(defun org-id-b36-to-int-one-digit (i)org-id-b36-to-int-one-digit391,14033
(defun org-id-int-to-b36 (i &optional length)org-id-int-to-b36400,14372
(defun org-id-b36-to-int (s)org-id-b36-to-int412,14771
(defun org-id-time-to-b36 (&optional time)org-id-time-to-b36419,14968
(defun org-id-decode (id)org-id-decode428,15314
(defun org-id-update-id-locations (&optional files silent)org-id-update-id-locations446,16011
(defun org-id-locations-save ()org-id-locations-save529,19016
(defun org-id-locations-load ()org-id-locations-load540,19410
(defun org-id-add-location (id file)org-id-add-location556,19986
(defun org-id-hash-to-alist (hash)org-id-hash-to-alist567,20458
(defun org-id-alist-to-hash (list)org-id-alist-to-hash578,20731
(defun org-id-paste-tracker (txt &optional buffer-or-file)org-id-paste-tracker591,21047
(defun org-id-find-id-file (id)org-id-find-id-file610,21766
(defun org-id-find-id-in-file (id file &optional markerp)org-id-find-id-in-file620,22149
(defun org-id-store-link ()org-id-store-link643,22954
(defun org-id-open (id)org-id-open659,23497

elpa/org-20160620/org-indent.el,2323
(defvar org-inlinetask-show-first-star)org-inlinetask-show-first-star48,1738
(defgroup org-indent nilorg-indent50,1779
(defvar org-indent-inlinetask-first-star (org-add-props "*" '(face org-warning))org-indent-inlinetask-first-star55,1900
(defvar org-indent-agent-timer nilorg-indent-agent-timer57,2033
(defvar org-indent-agentized-buffers nilorg-indent-agentized-buffers59,2109
(defvar org-indent-agent-resume-timer nilorg-indent-agent-resume-timer61,2204
(defvar org-indent-agent-active-delay '(0 2 0)org-indent-agent-active-delay63,2318
(defvar org-indent-agent-passive-delay '(0 0 400000)org-indent-agent-passive-delay66,2483
(defvar org-indent-agent-resume-delay '(0 0 100000)org-indent-agent-resume-delay69,2657
(defvar org-indent-initial-marker nilorg-indent-initial-marker71,2784
(defvar org-hide-leading-stars-before-indent-mode nilorg-hide-leading-stars-before-indent-mode74,2927
(defvar org-indent-modified-headline-flag nilorg-indent-modified-headline-flag76,3000
(defcustom org-indent-boundary-char ?\sorg-indent-boundary-char81,3166
(defcustom org-indent-mode-turns-off-org-adapt-indentation torg-indent-mode-turns-off-org-adapt-indentation89,3517
(defcustom org-indent-mode-turns-on-hiding-stars torg-indent-mode-turns-on-hiding-stars96,3769
(defcustom org-indent-indentation-per-level 2org-indent-indentation-per-level102,3958
(defface org-indent '((t (:inherit org-hide)))org-indent107,4095
(defsubst org-indent-remove-properties (beg end)org-indent-remove-properties113,4313
(define-minor-mode org-indent-modeorg-indent-mode119,4529
(defun org-indent-indent-buffer ()org-indent-indent-buffer189,7637
(defun org-indent-remove-properties-from-string (string)org-indent-remove-properties-from-string199,8063
(defun org-indent-initialize-agent ()org-indent-initialize-agent205,8270
(defun org-indent-initialize-buffer (buffer delay)org-indent-initialize-buffer226,9234
(defun org-indent-set-line-properties (level indentation &optional heading)org-indent-set-line-properties248,10005
(defun org-indent-add-properties (beg end &optional delay)org-indent-add-properties284,11372
(defun org-indent-notify-modified-headline (beg end)org-indent-notify-modified-headline334,13531
(defun org-indent-refresh-maybe (beg end dummy)org-indent-refresh-maybe352,14157

elpa/org-20160620/org-info.el,344
(defvar Info-current-file)Info-current-file39,1409
(defvar Info-current-node)Info-current-node40,1436
(defun org-info-store-link ()org-info-store-link47,1625
(defun org-info-open (path)org-info-open61,2099
(defun org-info-follow-link (name)org-info-follow-link66,2217
(defun org-info-export (path desc format)org-info-export84,2923

elpa/org-20160620/org-inlinetask.el,1869
(defgroup org-inlinetask nilorg-inlinetask83,3110
(defcustom org-inlinetask-min-level 15org-inlinetask-min-level88,3240
(defcustom org-inlinetask-show-first-star nilorg-inlinetask-show-first-star102,3847
(defvar org-odd-levels-only)org-odd-levels-only109,4082
(defvar org-keyword-time-regexp)org-keyword-time-regexp110,4111
(defvar org-complex-heading-regexp)org-complex-heading-regexp111,4144
(defvar org-property-end-re)org-property-end-re112,4180
(defcustom org-inlinetask-default-state nilorg-inlinetask-default-state114,4210
(defun org-inlinetask-insert-task (&optional no-state)org-inlinetask-insert-task124,4565
(define-key org-mode-map "\C-c\C-xt" 'org-inlinetask-insert-task)org-mode-map145,5418
(defun org-inlinetask-outline-regexp ()org-inlinetask-outline-regexp147,5485
(defun org-inlinetask-at-task-p ()org-inlinetask-at-task-p155,5807
(defun org-inlinetask-in-task-p ()org-inlinetask-in-task-p162,6088
(defun org-inlinetask-goto-beginning ()org-inlinetask-goto-beginning174,6556
(defun org-inlinetask-goto-end ()org-inlinetask-goto-end183,6905
(defun org-inlinetask-get-task-level ()org-inlinetask-get-task-level205,7558
(defun org-inlinetask-promote ()org-inlinetask-promote213,7836
(defun org-inlinetask-demote ()org-inlinetask-demote239,8774
(defun org-inlinetask-get-current-indentation ()org-inlinetask-get-current-indentation262,9520
(defvar org-indent-indentation-per-level) ; defined in org-indent.elorg-indent-indentation-per-level273,9842
(defface org-inlinetaskorg-inlinetask275,9912
(defun org-inlinetask-fontify (limit)org-inlinetask-fontify280,10042
(defun org-inlinetask-toggle-visibility ()org-inlinetask-toggle-visibility305,11092
(defun org-inlinetask-hide-tasks (state)org-inlinetask-hide-tasks322,11664
(defun org-inlinetask-remove-END-maybe ()org-inlinetask-remove-END-maybe339,12253

elpa/org-20160620/org-install.el,0

elpa/org-20160620/org-irc.el,1006
(defvar org-irc-client 'ercorg-irc-client65,2490
(defvar org-irc-link-to-logs nilorg-irc-link-to-logs67,2549
(defvar erc-default-port)   ; dynamically scoped from erc.elerc-default-port70,2662
(defvar erc-session-port)   ; dynamically scoped form erc-backend.elerc-session-port71,2723
(defvar erc-session-server) ; dynamically scoped form erc-backend.elerc-session-server72,2792
(defun org-irc-visit (link)org-irc-visit80,3031
(defun org-irc-parse-link (link)org-irc-parse-link89,3304
(defun org-irc-store-link ()org-irc-store-link102,3800
(defun org-irc-ellipsify-description (string &optional after)org-irc-ellipsify-description108,3976
(defun org-irc-erc-get-line-from-log (erc-line)org-irc-erc-get-line-from-log125,4590
(defun org-irc-erc-store-link ()org-irc-erc-store-link147,5457
(defun org-irc-get-erc-link ()org-irc-get-erc-link182,6719
(defun org-irc-get-current-erc-port ()org-irc-get-current-erc-port197,7296
(defun org-irc-visit-erc (link)org-irc-visit-erc209,7615

elpa/org-20160620/org-lint.el,4208
(defun org-lint-missing-checker-name (_)org-lint-missing-checker-name115,4258
(defconst org-lint--checkersorg-lint--checkers119,4388
(defun org-lint--collect-duplicatesorg-lint--collect-duplicates262,9397
(defun org-lint-duplicate-custom-id (ast)org-lint-duplicate-custom-id292,10492
(defun org-lint-duplicate-name (ast)org-lint-duplicate-name305,10922
(defun org-lint-duplicate-target (ast)org-lint-duplicate-target317,11333
(defun org-lint-duplicate-footnote-definition (ast)org-lint-duplicate-footnote-definition326,11651
(defun org-lint-orphaned-affiliated-keywords (ast)org-lint-orphaned-affiliated-keywords334,11984
(defun org-lint-obsolete-affiliated-keywords (_)org-lint-obsolete-affiliated-keywords349,12615
(defun org-lint-deprecated-header-syntax (ast)org-lint-deprecated-header-syntax371,13268
(defun org-lint-missing-language-in-src-block (ast)org-lint-missing-language-in-src-block397,14243
(defun org-lint-invalid-babel-call-block (ast)org-lint-invalid-babel-call-block404,14491
(defun org-lint-deprecated-category-setup (ast)org-lint-deprecated-category-setup417,14971
(defun org-lint-invalid-coderef-link (ast)org-lint-invalid-coderef-link428,15339
(defun org-lint-invalid-custom-id-link (ast)org-lint-invalid-custom-id-link438,15751
(defun org-lint-invalid-fuzzy-link (ast)org-lint-invalid-fuzzy-link448,16149
(defun org-lint-invalid-id-link (ast)org-lint-invalid-id-link461,16641
(defun org-lint-special-property-in-properties-drawer (ast)org-lint-special-property-in-properties-drawer470,16952
(defun org-lint-obsolete-properties-drawer (ast)org-lint-obsolete-properties-drawer480,17305
(defun org-lint-link-to-local-file (ast)org-lint-link-to-local-file494,17908
(defun org-lint-non-existent-setupfile-parameter (ast)org-lint-non-existent-setupfile-parameter508,18427
(defun org-lint-wrong-include-link-parameter (ast)org-lint-wrong-include-link-parameter519,18851
(defun org-lint-unknown-options-item (ast)org-lint-unknown-options-item558,20308
(defun org-lint-invalid-macro-argument-and-template (ast)org-lint-invalid-macro-argument-and-template584,21125
(defun org-lint-undefined-footnote-reference (ast)org-lint-undefined-footnote-reference650,23480
(defun org-lint-unreferenced-footnote-definition (ast)org-lint-unreferenced-footnote-definition662,23940
(defun org-lint-colon-in-name (ast)org-lint-colon-in-name674,24416
(defun org-lint-misplaced-planning-info (_)org-lint-misplaced-planning-info689,24901
(defun org-lint-incomplete-drawer (_)org-lint-incomplete-drawer700,25298
(defun org-lint-indented-diary-sexp (_)org-lint-indented-diary-sexp718,25875
(defun org-lint-invalid-block (_)org-lint-invalid-block728,26240
(defun org-lint-invalid-keyword-syntax (_)org-lint-invalid-keyword-syntax751,27079
(defun org-lint-extraneous-element-in-footnote-section (ast)org-lint-extraneous-element-in-footnote-section769,27736
(defun org-lint-quote-section (ast)org-lint-quote-section786,28364
(defun org-lint-wrong-header-argument (ast)org-lint-wrong-header-argument795,28711
(defun org-lint-wrong-header-value (ast)org-lint-wrong-header-value872,31344
(defvar org-lint--report-mode-maporg-lint--report-mode-map962,34133
(define-derived-mode org-lint--report-mode tabulated-list-mode "OrgLint"org-lint--report-mode973,34603
(defun org-lint--generate-reports (buffer checkers)org-lint--generate-reports986,35008
(defvar-local org-lint--source-buffer nilorg-lint--source-buffer1031,36275
(defvar-local org-lint--local-checkers nilorg-lint--local-checkers1034,36374
(defun org-lint--refresh-reports ()org-lint--refresh-reports1037,36470
(defun org-lint--current-line ()org-lint--current-line1043,36652
(defun org-lint--current-checker (&optional entry)org-lint--current-checker1047,36789
(defun org-lint--display-reports (source checkers)org-lint--display-reports1053,37020
(defun org-lint--jump-to-source ()org-lint--jump-to-source1066,37534
(defun org-lint--show-source ()org-lint--show-source1075,37820
(defun org-lint--hide-checker ()org-lint--hide-checker1082,38037
(defun org-lint--ignore-checker ()org-lint--ignore-checker1091,38359
(defun org-lint (&optional arg)org-lint1103,38702

elpa/org-20160620/org-list.el,10569
(defvar org-M-RET-may-split-line)org-M-RET-may-split-line84,3232
(defvar org-auto-align-tags)org-auto-align-tags85,3266
(defvar org-blank-before-new-entry)org-blank-before-new-entry86,3295
(defvar org-clock-string)org-clock-string87,3331
(defvar org-closed-string)org-closed-string88,3357
(defvar org-deadline-string)org-deadline-string89,3384
(defvar org-description-max-indent)org-description-max-indent90,3413
(defvar org-odd-levels-only)org-odd-levels-only91,3449
(defvar org-scheduled-string)org-scheduled-string92,3478
(defvar org-ts-regexp)org-ts-regexp93,3508
(defvar org-ts-regexp-both)org-ts-regexp-both94,3531
(defvar org-drawer-regexp)org-drawer-regexp95,3559
(defgroup org-plain-lists nilorg-plain-lists144,5991
(defcustom org-cycle-include-plain-lists torg-cycle-include-plain-lists149,6120
(defcustom org-list-demote-modify-bullet nilorg-list-demote-modify-bullet172,7136
(defcustom org-plain-list-ordered-item-terminator torg-plain-list-ordered-item-terminator214,8078
(define-obsolete-variable-alias 'org-alphabetical-listsorg-alphabetical-lists230,8738
(defcustom org-list-allow-alphabetical nilorg-list-allow-alphabetical232,8845
(defcustom org-list-two-spaces-after-bullet-regexp nilorg-list-two-spaces-after-bullet-regexp250,9505
(define-obsolete-variable-alias 'org-empty-line-terminates-plain-listsorg-empty-line-terminates-plain-lists262,10036
(defcustom org-list-empty-line-terminates-plain-lists nilorg-list-empty-line-terminates-plain-lists264,10174
(defcustom org-list-automatic-rules '((checkbox . t)org-list-automatic-rules270,10379
(defcustom org-list-use-circular-motion nilorg-list-use-circular-motion296,11415
(defvar org-checkbox-statistics-hook nilorg-checkbox-statistics-hook309,11836
(define-obsolete-variable-alias 'org-hierarchical-checkbox-statisticsorg-hierarchical-checkbox-statistics316,12128
(defcustom org-checkbox-hierarchical-statistics torg-checkbox-hierarchical-statistics318,12259
(defcustom org-list-description-max-indent 20org-list-description-max-indent328,12692
(defcustom org-list-indent-offset 0org-list-indent-offset335,12935
(defcustom org-list-radio-list-templatesorg-list-radio-list-templates343,13191
(defvar org-list-forbidden-blocks '("example" "verse" "src" "ascii" "beamer"org-list-forbidden-blocks370,13915
(defvar org-list-export-context '(block inlinetask)org-list-export-context375,14102
(defconst org-list-end-re (if org-list-empty-line-terminates-plain-lists "^[ \t]*\n"org-list-end-re386,14397
(defconst org-list-full-item-reorg-list-full-item-re391,14618
(defun org-item-re ()org-item-re402,15040
(defsubst org-item-beginning-re ()org-item-beginning-re413,15520
(defun org-list-at-regexp-after-bullet-p (regexp)org-list-at-regexp-after-bullet-p417,15642
(defun org-list-in-valid-context-p ()org-list-in-valid-context-p431,16112
(defun org-in-item-p ()org-in-item-p435,16254
(defun org-at-item-p ()org-at-item-p500,18755
(defun org-at-item-bullet-p ()org-at-item-bullet-p506,18946
(defun org-at-item-timer-p ()org-at-item-timer-p512,19131
(defun org-at-item-description-p ()org-at-item-description-p517,19311
(defun org-at-item-checkbox-p ()org-at-item-checkbox-p521,19467
(defun org-at-item-counter-p ()org-at-item-counter-p525,19633
(defun org-list-context ()org-list-context535,19863
(defun org-list-struct ()org-list-struct600,22399
(defun org-list-struct-assoc-end (struct end-list)org-list-struct-assoc-end778,29180
(defun org-list-prevs-alist (struct)org-list-prevs-alist801,29857
(defun org-list-parents-alist (struct)org-list-parents-alist810,30159
(defsubst org-list-get-nth (n key struct)org-list-get-nth853,31782
(defun org-list-set-nth (n key struct new)org-list-set-nth857,31897
(defsubst org-list-get-ind (item struct)org-list-get-ind862,32066
(defun org-list-set-ind (item struct ind)org-list-set-ind866,32186
(defsubst org-list-get-bullet (item struct)org-list-get-bullet871,32348
(defun org-list-set-bullet (item struct bullet)org-list-set-bullet875,32466
(defsubst org-list-get-counter (item struct)org-list-get-counter880,32635
(defsubst org-list-get-checkbox (item struct)org-list-get-checkbox884,32755
(defun org-list-set-checkbox (item struct checkbox)org-list-set-checkbox888,32884
(defsubst org-list-get-tag (item struct)org-list-get-tag893,33063
(defun org-list-get-item-end (item struct)org-list-get-item-end897,33184
(defun org-list-get-item-end-before-blank (item struct)org-list-get-item-end-before-blank901,33307
(defun org-list-get-parent (item struct parents)org-list-get-parent909,33591
(defun org-list-has-child-p (item struct)org-list-has-child-p916,33876
(defun org-list-get-next-item (item _struct prevs)org-list-get-next-item928,34256
(defun org-list-get-prev-item (item _struct prevs)org-list-get-prev-item934,34499
(defun org-list-get-subtree (item struct)org-list-get-subtree940,34745
(defun org-list-get-all-items (item struct prevs)org-list-get-all-items953,35177
(defun org-list-get-children (item _struct parents)org-list-get-children966,35737
(defun org-list-get-top-point (struct)org-list-get-top-point976,36114
(defun org-list-get-bottom-point (struct)org-list-get-bottom-point981,36240
(defun org-list-get-list-begin (item struct prevs)org-list-get-list-begin987,36436
(defalias 'org-list-get-first-item 'org-list-get-list-begin)org-list-get-first-item996,36818
(defun org-list-get-last-item (item struct prevs)org-list-get-last-item998,36880
(defun org-list-get-list-end (item struct prevs)org-list-get-list-end1007,37257
(defun org-list-get-list-type (item struct prevs)org-list-get-list-type1013,37542
(defun org-list-get-item-number (item struct prevs parents)org-list-get-item-number1027,38107
(defun org-list-search-generic (search re bound noerr)org-list-search-generic1066,39502
(defun org-list-search-backward (regexp &optional bound noerror)org-list-search-backward1081,40088
(defun org-list-search-forward (regexp &optional bound noerror)org-list-search-forward1088,40407
(defsubst org-list-bullet-string (bullet)org-list-bullet-string1099,40752
(defun org-list-swap-items (beg-A beg-B struct)org-list-swap-items1113,41255
(defun org-list-separating-blank-lines-number (pos struct prevs)org-list-separating-blank-lines-number1199,44641
(defun org-list-insert-item (pos struct prevs &optional checkbox after-bullet)org-list-insert-item1255,46698
(defun org-list-delete-item (item struct)org-list-delete-item1380,51838
(defun org-list-send-item (item dest struct)org-list-send-item1416,52954
(defun org-list-struct-outdent (start end struct parents)org-list-struct-outdent1532,57200
(defun org-list-struct-indent (start end struct parents prevs)org-list-struct-indent1564,58280
(defun org-list-use-alpha-bul-p (first struct prevs)org-list-use-alpha-bul-p1630,60450
(defun org-list-inc-bullet-maybe (bullet)org-list-inc-bullet-maybe1654,61402
(defun org-list-struct-fix-bul (struct prevs)org-list-struct-fix-bul1671,61958
(defun org-list-struct-fix-ind (struct parents &optional bullet-size)org-list-struct-fix-ind1740,64598
(defun org-list-struct-fix-box (struct parents prevs &optional ordered)org-list-struct-fix-box1768,65644
(defun org-list-struct-fix-item-end (struct)org-list-struct-fix-item-end1832,68146
(defun org-list-struct-apply-struct (struct old-struct)org-list-struct-apply-struct1858,69130
(defun org-list-write-struct (struct parents &optional old-struct)org-list-write-struct1997,74642
(defun org-apply-on-list (function init-value &rest args)org-apply-on-list2031,76020
(defun org-list-set-item-visibility (item struct view)org-list-set-item-visibility2057,76926
(defun org-list-item-body-column (item)org-list-item-body-column2082,77848
(defalias 'org-list-get-item-begin 'org-in-item-p)org-list-get-item-begin2102,78473
(defun org-beginning-of-item ()org-beginning-of-item2104,78525
(defun org-beginning-of-item-list ()org-beginning-of-item-list2111,78747
(defun org-end-of-item-list ()org-end-of-item-list2123,79147
(defun org-end-of-item ()org-end-of-item2135,79528
(defun org-previous-item ()org-previous-item2146,79842
(defun org-next-item ()org-next-item2164,80464
(defun org-move-item-down ()org-move-item-down2182,81077
(defun org-move-item-up ()org-move-item-up2203,81987
(defun org-insert-item (&optional checkbox)org-insert-item2222,82796
(defun org-list-repair ()org-list-repair2262,84248
(defun org-cycle-list-bullet (&optional which)org-cycle-list-bullet2270,84539
(defun org-toggle-checkbox (&optional toggle-presence)org-toggle-checkbox2334,87208
(defun org-reset-checkbox-state-subtree ()org-reset-checkbox-state-subtree2445,91420
(defun org-update-checkbox-count (&optional all)org-update-checkbox-count2462,91914
(defun org-get-checkbox-statistics-face ()org-get-checkbox-statistics-face2588,96564
(defun org-update-checkbox-count-maybe (&optional all)org-update-checkbox-count-maybe2601,97048
(defvar org-last-indent-begin-marker (make-marker))org-last-indent-begin-marker2608,97364
(defvar org-last-indent-end-marker (make-marker))org-last-indent-end-marker2609,97416
(defun org-list-indent-item-generic (arg no-subtree struct)org-list-indent-item-generic2610,97466
(defun org-outdent-item ()org-outdent-item2703,100901
(defun org-indent-item ()org-indent-item2720,101512
(defun org-outdent-item-tree ()org-outdent-item-tree2737,102120
(defun org-indent-item-tree ()org-indent-item-tree2754,102739
(defvar org-tab-ind-state)org-tab-ind-state2771,103355
(defvar org-adapt-indentation)org-adapt-indentation2772,103382
(defun org-cycle-item-indentation ()org-cycle-item-indentation2773,103413
(defun org-sort-list (&optional with-case sorting-type getkey-func compare-func)org-sort-list2818,105343
(defun org-list-parse-list (&optional delete)org-list-parse-list2936,109527
(defun org-list-make-subtree ()org-list-make-subtree3048,113430
(defun org-list-insert-radio-list ()org-list-insert-radio-list3056,113721
(defun org-list-send-list (&optional maybe)org-list-send-list3071,114221
(defsubst org-list-item-trim-br (item)org-list-item-trim-br3121,116034
(defun org-list-to-generic (list params)org-list-to-generic3125,116169
(defun org-list-to-latex (list &optional _params)org-list-to-latex3257,120795
(defun org-list-to-html (list)org-list-to-html3264,121049
(defun org-list-to-texinfo (list &optional _params)org-list-to-texinfo3271,121281
(defun org-list-to-subtree (list &optional params)org-list-to-subtree3278,121543

elpa/org-20160620/org-loaddefs.el,397
(defvar orgtbl-exp-regexp "^\\([-+]?[0-9][0-9.]*\\)[eE]\\([-+]?[0-9]+\\)$" "\orgtbl-exp-regexp1736,64882
(defvar org-odt-data-dir "/usr/share/emacs/etc/org" "\org-odt-data-dir2021,74257
(defalias 'org-ido-switchb 'org-switchb)org-ido-switchb2218,81663
(defalias 'org-iswitchb 'org-switchb)org-iswitchb2220,81705
(defalias 'org-publish-project 'org-publish)org-publish-project3169,113200

elpa/org-20160620/org-macro.el,539
(defvar org-macro-templates nilorg-macro-templates64,2539
(defun org-macro--collect-macros ()org-macro--collect-macros77,2937
(defun org-macro-initialize-templates ()org-macro-initialize-templates118,4599
(defun org-macro-expand (macro templates)org-macro-expand155,6163
(defun org-macro-replace-all (templates &optional finalize keywords)org-macro-replace-all179,7232
(defun org-macro-escape-arguments (&rest args)org-macro-escape-arguments240,9526
(defun org-macro-extract-arguments (s)org-macro-extract-arguments264,10318

elpa/org-20160620/org-macs.el,3250
(defmacro org-with-gensyms (symbols &rest body)org-with-gensyms51,1908
(defmacro org-called-interactively-p (&optional kind)org-called-interactively-p58,2127
(defmacro org-bound-and-true-p (var)org-bound-and-true-p69,2523
(defun org-string-nw-p (s)org-string-nw-p74,2689
(defun org-not-nil (v)org-not-nil81,2877
(defun org-substitute-posix-classes (re)org-substitute-posix-classes86,3024
(defmacro org-re (s)org-re100,3546
(defmacro org-preserve-lc (&rest body)org-preserve-lc105,3708
(defmacro org-unmodified (&rest body)org-unmodified117,4095
(defmacro org-without-partial-completion (&rest body)org-without-partial-completion128,4468
(defmacro org-maybe-intangible (props)org-maybe-intangible141,4870
(defmacro org-with-point-at (pom &rest body)org-with-point-at153,5480
(defmacro org-no-warnings (&rest body)org-no-warnings164,5853
(defmacro org-with-remote-undo (buffer &rest body)org-with-remote-undo168,5993
(defmacro org-no-read-only (&rest body)org-no-read-only193,6980
(defconst org-rm-props '(invisible t face t keymap t intangible t mouse-face torg-rm-props198,7121
(defsubst org-match-string-no-properties (num &optional string)org-match-string-no-properties203,7342
(defsubst org-no-properties (s &optional restricted)org-no-properties210,7587
(defsubst org-get-alist-option (option key)org-get-alist-option221,7979
(defsubst org-check-external-command (cmd &optional use no-error)org-check-external-command228,8197
(defsubst org-inhibit-invisibility ()org-inhibit-invisibility240,8712
(defsubst org-set-local (var value)org-set-local246,9009
(defsubst org-last (list)org-last250,9145
(defun org-let (list &rest body)org-let254,9230
(defun org-let2 (list1 list2 &rest body)org-let2258,9342
(defsubst org-call-with-arg (command arg)org-call-with-arg262,9496
(defsubst org-current-line (&optional pos)org-current-line266,9668
(defsubst org-goto-line (N)org-goto-line272,9885
(defsubst org-current-line-string (&optional to-here)org-current-line-string278,10002
(defsubst org-pos-in-match-range (pos n)org-pos-in-match-range281,10130
(defun org-match-line (re)org-match-line286,10267
(defun org-plist-delete (plist property)org-plist-delete292,10419
(defun org-replace-match-keep-properties (newtext &optional fixedcaseorg-replace-match-keep-properties302,10704
(defmacro org-save-outline-visibility (use-markers &rest body)org-save-outline-visibility309,11020
(defmacro org-with-wide-buffer (&rest body)org-with-wide-buffer331,11818
(defmacro org-with-limited-levels (&rest body)org-with-limited-levels339,12020
(defvar org-outline-regexp) ; defined in org.elorg-outline-regexp353,12553
(defvar org-odd-levels-only) ; defined in org.elorg-odd-levels-only354,12601
(defvar org-inlinetask-min-level) ; defined in org-inlinetask.elorg-inlinetask-min-level355,12650
(defun org-get-limited-outline-regexp ()org-get-limited-outline-regexp356,12715
(defun org-format-seconds (string seconds)org-format-seconds370,13178
(defmacro org-eval-in-environment (environment form)org-eval-in-environment376,13405
(defun org-make-parameter-alist (flat)org-make-parameter-alist380,13545
(defmacro org-load-noerror-mustsuffix (file)org-load-noerror-mustsuffix390,13876

elpa/org-20160620/org-mhe.el,942
(defcustom org-mhe-search-all-folders nilorg-mhe-search-all-folders38,1314
(defvar mh-progs)mh-progs69,2872
(defvar mh-current-folder)mh-current-folder70,2890
(defvar mh-show-folder-buffer)mh-show-folder-buffer71,2917
(defvar mh-index-folder)mh-index-folder72,2948
(defvar mh-searcher)mh-searcher73,2973
(defvar mh-search-regexp-builder)mh-search-regexp-builder74,2994
(defun org-mhe-store-link ()org-mhe-store-link81,3170
(defun org-mhe-open (path)org-mhe-open108,4256
(defun org-mhe-get-message-real-folder ()org-mhe-get-message-real-folder118,4616
(defun org-mhe-get-message-folder-from-index ()org-mhe-get-message-folder-from-index150,5589
(defun org-mhe-get-message-folder ()org-mhe-get-message-folder157,5840
(defun org-mhe-get-message-num ()org-mhe-get-message-num166,6107
(defun org-mhe-get-header (header)org-mhe-get-header175,6379
(defun org-mhe-follow-link (folder article)org-mhe-follow-link195,7114

elpa/org-20160620/org-mobile.el,4144
(defgroup org-mobile nilorg-mobile43,1617
(defcustom org-mobile-files '(org-agenda-files)org-mobile-files48,1749
(defcustom org-mobile-files-exclude-regexp ""org-mobile-files-exclude-regexp68,2598
(defcustom org-mobile-directory ""org-mobile-directory74,2756
(defcustom org-mobile-allpriorities "A B C"org-mobile-allpriorities79,2909
(defcustom org-mobile-use-encryption nilorg-mobile-use-encryption86,3100
(defcustom org-mobile-encryption-tempfile "~/orgtmpcrypt"org-mobile-encryption-tempfile98,3596
(defcustom org-mobile-encryption-password ""org-mobile-encryption-password106,3929
(defvar org-mobile-encryption-password-session nil)org-mobile-encryption-password-session127,4872
(defun org-mobile-encryption-password ()org-mobile-encryption-password129,4925
(defcustom org-mobile-inbox-for-pull "~/org/from-mobile.org"org-mobile-inbox-for-pull135,5187
(defconst org-mobile-capture-file "mobileorg.org"org-mobile-capture-file144,5592
(defcustom org-mobile-index-file "index.org"org-mobile-index-file148,5780
(defcustom org-mobile-agendas 'allorg-mobile-agendas155,6050
(defcustom org-mobile-force-id-on-agenda-items torg-mobile-force-id-on-agenda-items172,6603
(defcustom org-mobile-force-mobile-change nilorg-mobile-force-mobile-change177,6745
(defcustom org-mobile-action-alistorg-mobile-action-alist195,7419
(defcustom org-mobile-checksum-binary (or (executable-find "shasum")org-mobile-checksum-binary216,8252
(defvar org-mobile-pre-push-hook nilorg-mobile-pre-push-hook224,8522
(defvar org-mobile-post-push-hook nilorg-mobile-post-push-hook231,8843
(defvar org-mobile-pre-pull-hook nilorg-mobile-pre-pull-hook238,9183
(defvar org-mobile-post-pull-hook nilorg-mobile-post-pull-hook245,9511
(defvar org-mobile-last-flagged-files nilorg-mobile-last-flagged-files252,9861
(defvar org-mobile-files-alist nil)org-mobile-files-alist255,9970
(defvar org-mobile-checksum-files nil)org-mobile-checksum-files256,10006
(defun org-mobile-prepare-file-lists ()org-mobile-prepare-file-lists258,10046
(defun org-mobile-files-alist ()org-mobile-files-alist262,10184
(defun org-mobile-push ()org-mobile-push311,11924
(defvar org-mobile-before-process-capture-hook nilorg-mobile-before-process-capture-hook352,13585
(defun org-mobile-pull ()org-mobile-pull358,13834
(defun org-mobile-check-setup ()org-mobile-check-setup383,14862
(defun org-mobile-create-index-file ()org-mobile-create-index-file420,16486
(defun org-mobile-copy-agenda-files ()org-mobile-copy-agenda-files487,19262
(defun org-mobile-write-checksums ()org-mobile-write-checksums524,20763
(defun org-mobile-sumo-agenda-command ()org-mobile-sumo-agenda-command536,21261
(defvar org-mobile-creating-agendas nil)org-mobile-creating-agendas613,24079
(defun org-mobile-write-agenda-for-mobile (file)org-mobile-write-agenda-for-mobile614,24120
(defun org-mobile-get-outline-path-link (pom)org-mobile-get-outline-path-link677,26262
(defun org-mobile-escape-olp (s)org-mobile-escape-olp688,26592
(defun org-mobile-create-sumo-agenda ()org-mobile-create-sumo-agenda692,26685
(defun org-mobile-encrypt-and-move (infile outfile)org-mobile-encrypt-and-move713,27402
(defun org-mobile-encrypt-file (infile outfile)org-mobile-encrypt-file723,27819
(defun org-mobile-decrypt-file (infile outfile)org-mobile-decrypt-file732,28217
(defun org-mobile-cleanup-encryption-tempfile ()org-mobile-cleanup-encryption-tempfile741,28618
(defun org-mobile-move-capture ()org-mobile-move-capture747,28873
(defun org-mobile-update-checksum-for-capture-file (buffer-string)org-mobile-update-checksum-for-capture-file788,30393
(defun org-mobile-apply (&optional beg end)org-mobile-apply803,30991
(defun org-mobile-timestamp-buffer (buf)org-mobile-timestamp-buffer930,35333
(defun org-mobile-smart-read ()org-mobile-smart-read947,35889
(defun org-mobile-locate-entry (link)org-mobile-locate-entry979,37319
(defun org-mobile-edit (what old new)org-mobile-edit1004,38229
(defun org-mobile-tags-same-p (list1 list2)org-mobile-tags-same-p1122,42378
(defun org-mobile-bodies-same-p (a b)org-mobile-bodies-same-p1127,42535

elpa/org-20160620/org-mouse.el,4478
(defvar org-agenda-allow-remote-undo)org-agenda-allow-remote-undo142,4252
(defvar org-agenda-undo-list)org-agenda-undo-list143,4290
(defvar org-agenda-custom-commands)org-agenda-custom-commands144,4320
(defvar org-mouse-plain-list-regexp "\\([ \t]*\\)\\([-+*]\\|[0-9]+[.)]\\) "org-mouse-plain-list-regexp152,4728
(defvar org-mouse-direct torg-mouse-direct154,4855
(defgroup org-mouse nilorg-mouse161,5155
(defcustom org-mouse-punctuation ":"org-mouse-punctuation166,5246
(defcustom org-mouse-featuresorg-mouse-features171,5380
(defun org-mouse-re-search-line (regexp)org-mouse-re-search-line184,6042
(defun org-mouse-end-headline ()org-mouse-end-headline189,6213
(defvar org-mouse-context-menu-function nilorg-mouse-context-menu-function198,6501
(defun org-mouse-show-context-menu (event prefix)org-mouse-show-context-menu204,6750
(defun org-mouse-line-position ()org-mouse-line-position228,7760
(defun org-mouse-empty-line ()org-mouse-empty-line240,8163
(defun org-mouse-next-heading ()org-mouse-next-heading244,8317
(defun org-mouse-insert-heading ()org-mouse-insert-heading253,8588
(defun org-mouse-timestamp-today (&optional shift units)org-mouse-timestamp-today266,9021
(defun org-mouse-keyword-menu (keywords function &optional selected itemformat)org-mouse-keyword-menu274,9281
(defun org-mouse-remove-match-and-spaces ()org-mouse-remove-match-and-spaces309,10676
(defvar org-mouse-rest)org-mouse-rest315,10838
(defun org-mouse-replace-match-and-surround (newtext &optional fixedcaseorg-mouse-replace-match-and-surround316,10862
(defun org-mouse-keyword-replace-menu (keywords &optional group itemformatorg-mouse-keyword-replace-menu326,11238
(defun org-mouse-show-headlines ()org-mouse-show-headlines358,12484
(defun org-mouse-show-overview ()org-mouse-show-overview367,12749
(defun org-mouse-set-priority (priority)org-mouse-set-priority373,12937
(defvar org-mouse-priority-regexp "\\[#\\([A-Z]\\)\\]"org-mouse-priority-regexp377,13064
(defun org-mouse-get-priority (&optional default)org-mouse-get-priority382,13258
(defun org-mouse-delete-timestamp ()org-mouse-delete-timestamp390,13578
(defun org-mouse-looking-at (regexp skipchars &optional movechars)org-mouse-looking-at399,13935
(defun org-mouse-priority-list ()org-mouse-priority-list408,14205
(defun org-mouse-todo-menu (state)org-mouse-todo-menu412,14329
(defun org-mouse-tag-menu ()		;todoorg-mouse-tag-menu421,14572
(defun org-mouse-set-tags (tags)org-mouse-set-tags440,15143
(defun org-mouse-insert-checkbox ()org-mouse-insert-checkbox453,15492
(defun org-mouse-agenda-type (type)org-mouse-agenda-type461,15691
(defun org-mouse-list-options-menu (alloptions &optional function)org-mouse-list-options-menu470,15909
(defun org-mouse-clip-text (text maxlength)org-mouse-clip-text490,16499
(defun org-mouse-popup-global-menu ()org-mouse-popup-global-menu495,16645
(defun org-mouse-get-context (contextlist context)org-mouse-get-context554,18756
(defun org-mouse-for-each-item (funct)org-mouse-for-each-item561,18986
(defun org-mouse-bolp ()org-mouse-bolp567,19250
(defun org-mouse-insert-item (text)org-mouse-insert-item573,19459
(defadvice dnd-insert-text (around org-mouse-dnd-insert-text activate)dnd-insert-text594,20110
(defadvice dnd-open-file (around org-mouse-dnd-open-file activate)dnd-open-file599,20265
(defun org-mouse-match-closure (function)org-mouse-match-closure604,20415
(defun org-mouse-yank-link (click)org-mouse-yank-link611,20597
(defun org-mouse-context-menu (&optional event)org-mouse-context-menu620,20908
(defun org-mouse-mark-active ()org-mouse-mark-active851,29544
(defun org-mouse-in-region-p (pos)org-mouse-in-region-p854,29618
(defun org-mouse-down-mouse (event)org-mouse-down-mouse859,29751
(defun org-mouse-move-tree-start (event)org-mouse-move-tree-start917,31943
(defun org-mouse-make-marker (position)org-mouse-make-marker922,32088
(defun org-mouse-move-tree (event)org-mouse-move-tree926,32233
(defun org-mouse-transform-to-outline ()org-mouse-transform-to-outline976,33741
(defvar org-mouse-cmd) ;dynamically scoped from `org-with-remote-undo'.org-mouse-cmd993,34373
(defun org-mouse-do-remotely (command)org-mouse-do-remotely995,34446
(defun org-mouse-agenda-context-menu (&optional event)org-mouse-agenda-context-menu1034,35866
(defun org-mouse-get-gesture (event)org-mouse-get-gesture1087,38001
(defvar org-agenda-mode-map)org-agenda-mode-map1094,38221

elpa/org-20160620/org-pcomplete.el,3750
(defgroup org-complete nilorg-complete48,1651
(defvar org-drawer-regexp)org-drawer-regexp53,1757
(defvar org-property-re)org-property-re54,1784
(defun org-thing-at-point ()org-thing-at-point56,1810
(defun org-command-at-point ()org-command-at-point106,3720
(defun org-parse-arguments ()org-parse-arguments119,4213
(defun org-pcomplete-initial ()org-pcomplete-initial137,4761
(defvar org-options-keywords)		 ; From org.elorg-options-keywords144,5003
(defvar org-element-block-name-alist)	 ; From org-element.elorg-element-block-name-alist145,5049
(defvar org-element-affiliated-keywords) ; From org-element.elorg-element-affiliated-keywords146,5110
(defun pcomplete/org-mode/file-option ()pcomplete/org-mode/file-option148,5225
(defun pcomplete/org-mode/file-option/author ()pcomplete/org-mode/file-option/author172,6073
(defvar org-time-stamp-formats)org-time-stamp-formats176,6217
(defun pcomplete/org-mode/file-option/date ()pcomplete/org-mode/file-option/date177,6249
(defun pcomplete/org-mode/file-option/email ()pcomplete/org-mode/file-option/email181,6424
(defvar org-export-exclude-tags)org-export-exclude-tags185,6569
(defun pcomplete/org-mode/file-option/exclude_tags ()pcomplete/org-mode/file-option/exclude_tags186,6602
(defvar org-file-tags)org-file-tags193,6843
(defun pcomplete/org-mode/file-option/filetags ()pcomplete/org-mode/file-option/filetags194,6866
(defvar org-export-default-language)org-export-default-language198,7052
(defun pcomplete/org-mode/file-option/language ()pcomplete/org-mode/file-option/language199,7089
(defvar org-default-priority)org-default-priority206,7303
(defvar org-highest-priority)org-highest-priority207,7333
(defvar org-lowest-priority)org-lowest-priority208,7363
(defun pcomplete/org-mode/file-option/priorities ()pcomplete/org-mode/file-option/priorities209,7392
(defvar org-export-select-tags)org-export-select-tags216,7623
(defun pcomplete/org-mode/file-option/select_tags ()pcomplete/org-mode/file-option/select_tags217,7655
(defvar org-startup-options)org-startup-options224,7892
(defun pcomplete/org-mode/file-option/startup ()pcomplete/org-mode/file-option/startup225,7921
(defvar org-tag-alist)org-tag-alist238,8411
(defun pcomplete/org-mode/file-option/tags ()pcomplete/org-mode/file-option/tags239,8434
(defun pcomplete/org-mode/file-option/title ()pcomplete/org-mode/file-option/title253,8827
(defun pcomplete/org-mode/file-option/options ()pcomplete/org-mode/file-option/options264,9231
(defun pcomplete/org-mode/file-option/infojs_opt ()pcomplete/org-mode/file-option/infojs_opt283,9989
(defun pcomplete/org-mode/file-option/bind ()pcomplete/org-mode/file-option/bind290,10265
(defvar org-link-abbrev-alist-local)org-link-abbrev-alist-local297,10520
(defvar org-link-abbrev-alist)org-link-abbrev-alist298,10557
(defun pcomplete/org-mode/link ()pcomplete/org-mode/link299,10588
(defvar org-entities)org-entities307,10835
(defun pcomplete/org-mode/tex ()pcomplete/org-mode/tex308,10857
(defvar org-todo-keywords-1)org-todo-keywords-1315,11100
(defun pcomplete/org-mode/todo ()pcomplete/org-mode/todo316,11129
(defvar org-todo-line-regexp)org-todo-line-regexp320,11287
(defun pcomplete/org-mode/searchhead ()pcomplete/org-mode/searchhead321,11317
(defvar org-tag-alist)org-tag-alist336,11785
(defun pcomplete/org-mode/tag ()pcomplete/org-mode/tag337,11808
(defun pcomplete/org-mode/prop ()pcomplete/org-mode/prop355,12353
(defun pcomplete/org-mode/block-option/src ()pcomplete/org-mode/block-option/src368,12751
(defun pcomplete/org-mode/block-option/clocktable ()pcomplete/org-mode/block-option/clocktable384,13363
(defun org-pcomplete-case-double (list)org-pcomplete-case-double393,13742

elpa/org-20160620/org-pkg.el,32
(define-package "org""org"1,0

elpa/org-20160620/org-plot.el,917
(defvar org-plot/gnuplot-default-optionsorg-plot/gnuplot-default-options41,1362
(defvar org-plot-timestamp-fmt nil)org-plot-timestamp-fmt47,1522
(defun org-plot/add-options-to-plist (p options)org-plot/add-options-to-plist49,1559
(defun org-plot/goto-nearest-table ()org-plot/goto-nearest-table89,2767
(defun org-plot/collect-options (&optional params)org-plot/collect-options96,3062
(defun org-plot-quote-timestamp-field (s)org-plot-quote-timestamp-field106,3467
(defun org-plot-quote-tsv-field (s)org-plot-quote-tsv-field110,3656
(defun org-plot/gnuplot-to-data (table data-file params)org-plot/gnuplot-to-data117,3938
(defun org-plot/gnuplot-to-grid-data (table data-file params)org-plot/gnuplot-to-grid-data133,4451
(defun org-plot/gnuplot-script (data-file num-cols params &optional preface)org-plot/gnuplot-script184,6411
(defun org-plot/gnuplot (&optional params)org-plot/gnuplot275,9902

elpa/org-20160620/org-protocol.el,1796
(defgroup org-protocol nilorg-protocol139,5038
(defconst org-protocol-protocol-alist-defaultorg-protocol-protocol-alist-default152,5413
(defconst org-protocol-the-protocol "org-protocol"org-protocol-the-protocol159,5822
(defcustom org-protocol-reverse-list-of-files torg-protocol-reverse-list-of-files168,6237
(defcustom org-protocol-project-alist nilorg-protocol-project-alist177,6636
(defcustom org-protocol-protocol-alist nilorg-protocol-protocol-alist221,8375
(defcustom org-protocol-default-template-key nilorg-protocol-default-template-key263,10337
(defcustom org-protocol-data-separator "/+\\|\\?"org-protocol-data-separator270,10575
(defun org-protocol-sanitize-uri (uri)org-protocol-sanitize-uri280,10822
(defun org-protocol-split-data (data &optional unhexify separator)org-protocol-split-data288,11156
(defun org-protocol-flatten-greedy (param-list &optional strip-path replacement)org-protocol-flatten-greedy304,11855
(defun org-protocol-flatten (l)org-protocol-flatten348,13452
(defun org-protocol-store-link (fname)org-protocol-store-link361,13903
(defun org-protocol-capture (info)org-protocol-capture390,15067
(defun org-protocol-convert-query-to-plist (query)org-protocol-convert-query-to-plist416,16032
(defun org-protocol-do-capture (info)org-protocol-do-capture424,16332
(defun org-protocol-open-source (fname)org-protocol-open-source450,17307
(defun org-protocol-check-filename-for-protocol (fname restoffiles client)org-protocol-check-filename-for-protocol512,19827
(defadvice server-visit-files (before org-protocol-detect-protocol-server activate)server-visit-files552,21718
(defun org-protocol-create-for-org ()org-protocol-create-for-org574,22660
(defun org-protocol-create (&optional project-plist)org-protocol-create586,23240

elpa/org-20160620/org-rmail.el,413
(defvar rmail-current-message)  ; From rmail.elrmail-current-message41,1623
(defvar rmail-header-style)     ; From rmail.elrmail-header-style42,1671
(defvar rmail-file-name)        ; From rmail.elrmail-file-name43,1719
(defun org-rmail-store-link ()org-rmail-store-link50,1915
(defun org-rmail-open (path)org-rmail-open88,3374
(defun org-rmail-follow-link (folder article)org-rmail-follow-link97,3701

elpa/org-20160620/org-src.el,4610
(defvar org-element-all-elements)org-element-all-elements56,2212
(defvar org-inhibit-startup)org-inhibit-startup57,2246
(defcustom org-edit-src-turn-on-auto-save nilorg-edit-src-turn-on-auto-save59,2276
(defcustom org-edit-src-auto-save-idle-delay 0org-edit-src-auto-save-idle-delay71,2764
(defcustom org-coderef-label-format "(ref:%s)"org-coderef-label-format83,3200
(defcustom org-edit-fixed-width-region-mode 'artist-modeorg-edit-fixed-width-region-mode100,3887
(defcustom org-src-preserve-indentation nilorg-src-preserve-indentation110,4226
(defcustom org-edit-src-content-indentation 2org-edit-src-content-indentation123,4816
(defcustom org-edit-src-persistent-message torg-edit-src-persistent-message132,5210
(defcustom org-src-ask-before-returning-to-edit-buffer torg-src-ask-before-returning-to-edit-buffer139,5506
(defcustom org-src-window-setup 'reorganize-frameorg-src-window-setup150,5948
(defvar org-src-mode-hook nilorg-src-mode-hook169,6763
(defcustom org-src-lang-modesorg-src-lang-modes180,7249
(defcustom org-src-tab-acts-natively nilorg-src-tab-acts-natively198,8035
(defvar org-src--allow-write-back t)org-src--allow-write-back209,8283
(defvar org-src--auto-save-timer nil)org-src--auto-save-timer210,8320
(defvar org-src--babel-info nil)org-src--babel-info211,8358
(defvar org-src--beg-marker nil)org-src--beg-marker212,8391
(defvar org-src--block-indentation nil)org-src--block-indentation213,8424
(defvar org-src--end-marker nil)org-src--end-marker214,8464
(defvar org-src--from-org-mode nil)org-src--from-org-mode215,8497
(defvar org-src--overlay nil)org-src--overlay216,8533
(defvar org-src--preserve-indentation nil)org-src--preserve-indentation217,8563
(defvar org-src--remote nil)org-src--remote218,8606
(defvar org-src--saved-temp-window-config nil)org-src--saved-temp-window-config219,8635
(defun org-src--construct-edit-buffer-name (org-buffer-name lang)org-src--construct-edit-buffer-name221,8683
(defun org-src--edit-buffer (beg end)org-src--edit-buffer225,8865
(defun org-src--source-buffer ()org-src--source-buffer238,9328
(defun org-src--get-lang-mode (lang)org-src--get-lang-mode244,9596
(defun org-src--coordinates (pos beg end)org-src--coordinates253,9886
(defun org-src--goto-coordinates (coord beg end)org-src--goto-coordinates267,10473
(defun org-src--contents-area (datum)org-src--contents-area282,11036
(defun org-src--make-source-overlay (beg end edit-buffer)org-src--make-source-overlay317,12635
(defun org-src--remove-overlay ()org-src--remove-overlay341,13603
(defun org-src--on-datum-p (datum)org-src--on-datum-p345,13757
(defun org-src--contents-for-write-back ()org-src--contents-for-write-back358,14225
(defun org-src--edit-elementorg-src--edit-element377,14998
(defun org-src-font-lock-fontify-block (lang start end)org-src-font-lock-fontify-block483,19069
(defun org-escape-code-in-region (beg end)org-escape-code-in-region515,20224
(defun org-escape-code-in-string (s)org-escape-code-in-string525,20595
(defun org-unescape-code-in-region (beg end)org-unescape-code-in-region531,20842
(defun org-unescape-code-in-string (s)org-unescape-code-in-string541,21231
(defvar org-src-mode-maporg-src-mode-map552,21526
(define-minor-mode org-src-modeorg-src-mode559,21749
(defun org-src-mode-configure-edit-buffer ()org-src-mode-configure-edit-buffer602,23255
(defun org-src-associate-babel-session (info)org-src-associate-babel-session624,24009
(defun org-src-babel-configure-edit-buffer ()org-src-babel-configure-edit-buffer634,24428
(defmacro org-src-do-at-code-block (&rest body)org-src-do-at-code-block640,24636
(def-edebug-spec org-src-do-at-code-block (body))org-src-do-at-code-block647,24908
(defun org-src-do-key-sequence-at-code-block (&optional key)org-src-do-key-sequence-at-code-block649,24959
(defun org-src-edit-buffer-p (&optional buffer)org-src-edit-buffer-p677,25982
(defun org-src-switch-to-buffer (buffer context)org-src-switch-to-buffer685,26328
(defun org-edit-footnote-reference ()org-edit-footnote-reference710,27181
(defun org-edit-table.el ()org-edit-table.el766,29285
(defun org-edit-export-block ()org-edit-export-block789,30098
(defun org-edit-src-code (&optional code edit-buffer-name)org-edit-src-code814,31052
(defun org-edit-fixed-width-region ()org-edit-fixed-width-region873,33410
(defun org-edit-src-abort ()org-edit-src-abort897,34340
(defun org-edit-src-continue (e)org-edit-src-continue902,34507
(defun org-edit-src-save ()org-edit-src-save911,34862
(defun org-edit-src-exit ()org-edit-src-exit933,35651

elpa/org-20160620/org-table.el,18993
(defvar orgtbl-mode) ; defined beloworgtbl-mode69,2890
(defvar orgtbl-mode-menu) ; defined when orgtbl mode get initializedorgtbl-mode-menu70,2927
(defvar constants-unit-system)constants-unit-system71,2996
(defvar org-export-filters-alist)org-export-filters-alist72,3027
(defvar org-table-follow-field-mode)org-table-follow-field-mode73,3061
(defvar orgtbl-after-send-table-hook nilorgtbl-after-send-table-hook75,3099
(defvar org-table-TBLFM-begin-regexp "^[ \t]*|.*\n[ \t]*#\\+TBLFM: ")org-table-TBLFM-begin-regexp81,3370
(defcustom orgtbl-optimized (eq org-enable-table-editor 'optimized)orgtbl-optimized83,3441
(defcustom orgtbl-radio-table-templatesorgtbl-radio-table-templates97,4145
(defgroup org-table-settings nilorg-table-settings146,5968
(defcustom org-table-default-size "5x2"org-table-default-size151,6088
(defcustom org-table-number-regexporg-table-number-regexp156,6238
(defcustom org-table-number-fraction 0.5org-table-number-fraction187,7850
(defgroup org-table-editing nilorg-table-editing195,8181
(defcustom org-table-automatic-realign torg-table-automatic-realign200,8313
(defcustom org-table-auto-blank-field torg-table-auto-blank-field207,8570
(defcustom org-table-exit-follow-field-mode-when-leaving-table torg-table-exit-follow-field-mode-when-leaving-table215,8900
(defcustom org-table-fix-formulas-confirm nilorg-table-fix-formulas-confirm226,9365
(defcustom org-table-tab-jumps-over-hlines torg-table-tab-jumps-over-hlines238,9779
(defgroup org-table-calculation nilorg-table-calculation247,10172
(defcustom org-table-use-standard-references 'fromorg-table-use-standard-references252,10304
(defcustom org-table-copy-increment torg-table-copy-increment264,10824
(defcustom org-calc-default-modesorg-calc-default-modes274,11235
(defcustom org-table-duration-custom-format 'hoursorg-table-duration-custom-format290,11880
(defcustom org-table-formula-field-format "%s"org-table-formula-field-format303,12400
(defcustom org-table-formula-evaluate-inline torg-table-formula-evaluate-inline312,12743
(defcustom org-table-formula-use-constants torg-table-formula-use-constants323,13278
(defcustom org-table-formula-constants nilorg-table-formula-constants331,13621
(defcustom org-table-allow-automatic-line-recalculation torg-table-allow-automatic-line-recalculation349,14268
(defcustom org-table-relative-ref-may-cross-hline torg-table-relative-ref-may-cross-hline357,14564
(defcustom org-table-formula-create-columns nilorg-table-formula-create-columns376,15331
(defgroup org-table-import-export nilorg-table-import-export388,15951
(defcustom org-table-export-default-format "orgtbl-to-tsv"org-table-export-default-format393,16104
(defcustom org-table-convert-region-max-lines 999org-table-convert-region-max-lines402,16473
(defconst org-table-auto-recalculate-regexp "^[ \t]*| *# *\\(|\\|$\\)"org-table-auto-recalculate-regexp412,16796
(defconst org-table-recalculate-regexp "^[ \t]*| *[#*] *\\(|\\|$\\)"org-table-recalculate-regexp415,16932
(defconst org-table-calculate-mark-regexp "^[ \t]*| *[!$^_#*] *\\(|\\|$\\)"org-table-calculate-mark-regexp418,17056
(defconst org-table-border-regexp "^[ \t]*[^| \t]"org-table-border-regexp421,17185
(defvar org-table-last-highlighted-reference nil)org-table-last-highlighted-reference424,17289
(defvar org-table-formula-history nil)org-table-formula-history426,17340
(defvar org-table-column-names nilorg-table-column-names428,17380
(defvar org-table-column-name-regexp nilorg-table-column-name-regexp432,17528
(defvar org-table-local-parameters nilorg-table-local-parameters436,17684
(defvar org-table-named-field-locations nilorg-table-named-field-locations440,17839
(defvar org-table-current-line-types nilorg-table-current-line-types448,18199
(defvar org-table-current-begin-pos nilorg-table-current-begin-pos452,18335
(defvar org-table-current-ncol nilorg-table-current-ncol456,18479
(defvar org-table-dlines nilorg-table-dlines460,18611
(defvar org-table-hlines nilorg-table-hlines465,18815
(defconst org-table-range-regexporg-table-range-regexp470,19015
(defconst org-table-range-regexp2org-table-range-regexp2475,19310
(defconst org-table-translate-regexporg-table-translate-regexp482,19601
(defmacro org-table-save-field (&rest body)org-table-save-field486,19787
(defun org-table-create-with-table.el ()org-table-create-with-table.el500,20236
(defun org-table-create-or-convert-from-region (arg)org-table-create-or-convert-from-region517,20755
(defun org-table-create (&optional size)org-table-create530,21322
(defun org-table-convert-region (beg0 end0 &optional separator)org-table-convert-region563,22351
(defun org-table-import (file arg)org-table-import633,25106
(defun org-table-export (&optional file format)org-table-export647,25588
(defvar org-table-aligned-begin-marker (make-marker)org-table-aligned-begin-marker719,28491
(defvar org-table-aligned-end-marker (make-marker)org-table-aligned-end-marker722,28673
(defvar org-table-last-alignment nilorg-table-last-alignment725,28847
(defvar org-table-last-column-widths nilorg-table-last-column-widths728,29028
(defvar org-table-formula-debug nilorg-table-formula-debug731,29189
(defvar org-table-overlay-coordinates nilorg-table-overlay-coordinates735,29375
(defvar org-last-recalc-line nil)org-last-recalc-line739,29532
(defvar org-table-do-narrow t)   ; for dynamic scopingorg-table-do-narrow740,29566
(defconst org-narrow-column-arrow "=>"org-narrow-column-arrow741,29621
(defun org-table-align ()org-table-align745,29733
(defun org-table-begin (&optional table-type)org-table-begin907,37969
(defun org-table-end (&optional table-type)org-table-end920,38444
(defun org-table-justify-field-maybe (&optional new)org-table-justify-field-maybe942,39319
(defun org-table-next-field ()org-table-next-field986,41014
(defun org-table-previous-field ()org-table-previous-field1016,41932
(defun org-table-beginning-of-field (&optional n)org-table-beginning-of-field1037,42633
(defun org-table-end-of-field (&optional n)org-table-end-of-field1053,43251
(defun org-table-next-row ()org-table-next-row1070,43854
(defun org-table-copy-down (n)org-table-copy-down1094,44626
(defun org-table-check-inside-data-field (&optional noerror)org-table-check-inside-data-field1179,47864
(defvar org-table-clip nilorg-table-clip1190,48328
(defun org-table-get (line column)org-table-get1193,48390
(defun org-table-put (line column value &optional align)org-table-put1205,48890
(defun org-table-current-line ()org-table-current-line1215,49297
(defun org-table-goto-line (N)org-table-goto-line1225,49621
(defun org-table-blank-field ()org-table-blank-field1235,49960
(defun org-table-get-field (&optional n replace)org-table-get-field1252,50555
(defun org-table-field-info (arg)org-table-field-info1271,51192
(defun org-table-current-column ()org-table-current-column1315,52822
(defun org-table-current-dline ()org-table-current-dline1328,53250
(defun org-table-goto-column (n &optional on-delim force)org-table-goto-column1346,53762
(defun org-table-insert-column ()org-table-insert-column1369,54559
(defun org-table-find-dataline ()org-table-find-dataline1391,55308
(defun org-table-line-to-dline (line &optional above)org-table-line-to-dline1410,55896
(defun org-table-delete-column ()org-table-delete-column1434,56693
(defun org-table-move-column-right ()org-table-move-column-right1463,57671
(defun org-table-move-column-left ()org-table-move-column-left1468,57801
(defun org-table-move-column (&optional left)org-table-move-column1474,57932
(defun org-table-move-row-down ()org-table-move-row-down1510,59382
(defun org-table-move-row-up ()org-table-move-row-up1515,59500
(defun org-table-move-row (&optional up)org-table-move-row1521,59615
(defun org-table-insert-row (&optional arg)org-table-insert-row1555,60793
(defun org-table-insert-hline (&optional above)org-table-insert-hline1577,61760
(defun org-table-hline-and-move (&optional same-column)org-table-hline-and-move1601,62725
(defun org-table-clean-line (s)org-table-clean-line1614,63180
(defun org-table-kill-row ()org-table-kill-row1628,63725
(defun org-table-sort-lines (with-case &optional sorting-type getkey-func compare-func)org-table-sort-lines1644,64363
(defun org-table-cut-region (beg end)org-table-cut-region1760,68875
(defun org-table-copy-region (beg end &optional cut)org-table-copy-region1769,69230
(defun org-table-paste-rectangle ()org-table-paste-rectangle1804,70457
(defun org-table-convert ()org-table-convert1833,71488
(defun org-table-transpose-table-at-point ()org-table-transpose-table-at-point1878,73266
(defun org-table-wrap-region (arg)org-table-wrap-region1921,74276
(defvar org-field-marker nil)org-field-marker1985,76859
(defun org-table-edit-field (arg)org-table-edit-field1988,76905
(defun org-table-finish-edit-field ()org-table-finish-edit-field2037,78875
(define-minor-mode org-table-follow-field-modeorg-table-follow-field-mode2060,79684
(defun org-table-follow-fields-with-editor ()org-table-follow-fields-with-editor2078,80495
(defvar org-timecnt) ; dynamically scoped parameterorg-timecnt2089,80899
(defun org-table-sum (&optional beg end nlast)org-table-sum2092,80967
(defun org-table-get-number-for-summing (s)org-table-get-number-for-summing2149,83104
(defun org-table-current-field-formula (&optional key noerror)org-table-current-field-formula2169,83872
(defun org-table-get-formula (&optional equation named)org-table-get-formula2195,84873
(defun org-table-store-formulas (alist &optional location)org-table-store-formulas2253,87031
(defsubst org-table-formula-make-cmp-string (a)org-table-formula-make-cmp-string2276,87854
(defun org-table-formula-less-p (a b)org-table-formula-less-p2295,88581
(defun org-table-get-stored-formulas (&optional noerror location)org-table-get-stored-formulas2302,88815
(defun org-table-fix-formulas (key replace &optional limit delta remove)org-table-fix-formulas2344,90315
(defun org-table-maybe-eval-formula ()org-table-maybe-eval-formula2381,91785
(defvar org-recalc-commands nilorg-recalc-commands2398,92598
(defvar org-recalc-marksorg-recalc-marks2402,92734
(defun org-table-rotate-recalc-marks (&optional newchar)org-table-rotate-recalc-marks2412,93283
(defun org-table-analyze ()org-table-analyze2482,95960
(defun org-table-goto-field (ref &optional create-column-p)org-table-goto-field2585,100082
(defun org-table-maybe-recalculate-line ()org-table-maybe-recalculate-line2617,101322
(defvar org-tbl-calc-modes) ;; Dynamically bound in `org-table-eval-formula'org-tbl-calc-modes2627,101766
(defsubst org-set-calc-mode (var &optional value)org-set-calc-mode2628,101843
(defun org-table-eval-formula (&optional arg equationorg-table-eval-formula2641,102292
(defun org-table-put-field-property (prop value)org-table-put-field-property2919,113226
(defun org-table-get-range (desc &optional tbeg col highlight corners-only)org-table-get-range2925,113434
(defun org-table--descriptor-line (desc cline)org-table--descriptor-line3001,116514
(defun org-table--row-type (type n i backwards relative desc)org-table--row-type3033,117851
(defun org-table--error-on-old-row-references (s)org-table--error-on-old-row-references3063,119045
(defun org-table-make-reference (elements keep-empty numbers lispp)org-table-make-reference3067,119221
(defun org-table-message-once-per-second (t1 &rest args)org-table-message-once-per-second3118,121084
(defun org-table-recalculate (&optional all noalign)org-table-recalculate3130,121540
(defun org-table-iterate (&optional arg)org-table-iterate3299,128075
(defun org-table-recalculate-buffer-tables ()org-table-recalculate-buffer-tables3322,128860
(defun org-table-iterate-buffer-tables ()org-table-iterate-buffer-tables3331,129114
(defun org-table-calc-current-TBLFM (&optional arg)org-table-calc-current-TBLFM3352,129732
(defun org-table-TBLFM-begin ()org-table-TBLFM-begin3375,130551
(defun org-table-expand-lhs-ranges (equations)org-table-expand-lhs-ranges3383,130859
(defun org-table-formula-handle-first/last-rc (s)org-table-formula-handle-first/last-rc3423,132215
(defun org-table-formula-substitute-names (f)org-table-formula-substitute-names3452,133484
(defun org-table-get-constant (const)org-table-get-constant3482,134545
(defvar org-table-fedit-maporg-table-fedit-map3493,135048
(defvar org-pos)org-pos3545,137539
(defvar org-table--fedit-source nilorg-table--fedit-source3546,137556
(defun org-table-edit-formulas ()org-table-edit-formulas3550,137654
(defun org-table-fedit-post-command ()org-table-fedit-post-command3610,140202
(defun org-table-formula-to-user (s)org-table-formula-to-user3617,140426
(defun org-table-formula-from-user (s)org-table-formula-from-user3623,140618
(defun org-table-convert-refs-to-rc (s)org-table-convert-refs-to-rc3629,140805
(defun org-table-convert-refs-to-an (s)org-table-convert-refs-to-an3661,141965
(defun org-letters-to-number (s)org-letters-to-number3679,142605
(defun org-number-to-letters (n)org-number-to-letters3689,142887
(defun org-table-time-string-to-seconds (s)org-table-time-string-to-seconds3698,143145
(defun org-table-time-seconds-to-string (secs &optional output-format)org-table-time-seconds-to-string3725,144272
(defun org-table-fedit-convert-buffer (function)org-table-fedit-convert-buffer3742,144884
(defun org-table-fedit-toggle-ref-type ()org-table-fedit-toggle-ref-type3753,145309
(defun org-table-fedit-ref-up ()org-table-fedit-ref-up3763,145739
(defun org-table-fedit-ref-down ()org-table-fedit-ref-down3767,145880
(defun org-table-fedit-ref-left ()org-table-fedit-ref-left3771,146027
(defun org-table-fedit-ref-right ()org-table-fedit-ref-right3775,146177
(defun org-table-fedit-shift-reference (dir)org-table-fedit-shift-reference3780,146331
(defun org-rematch-and-replace (n &optional decr hline)org-rematch-and-replace3798,147048
(defun org-table-shift-refpart (ref &optional decr hline)org-table-shift-refpart3806,147428
(defun org-table-fedit-toggle-coordinates ()org-table-fedit-toggle-coordinates3838,148540
(defun org-table-fedit-finish (&optional arg)org-table-fedit-finish3847,148838
(defun org-table-fedit-abort ()org-table-fedit-abort3882,150126
(defun org-table-fedit-lisp-indent ()org-table-fedit-lisp-indent3893,150528
(defvar org-show-positions nil)org-show-positions3932,151831
(defun org-table-show-reference (&optional local)org-table-show-reference3934,151864
(defun org-table-force-dataline ()org-table-force-dataline4065,156990
(defun org-table-fedit-line-up ()org-table-fedit-line-up4079,157547
(defun org-table-fedit-line-down ()org-table-fedit-line-down4084,157700
(defun org-table-fedit-move (command)org-table-fedit-move4089,157853
(defun org-table-fedit-scroll (N)org-table-fedit-scroll4104,158431
(defun org-table-fedit-scroll-down (N)org-table-fedit-scroll-down4109,158578
(defvar org-table-rectangle-overlays nil)org-table-rectangle-overlays4113,158672
(defun org-table-add-rectangle-overlay (beg end &optional face)org-table-add-rectangle-overlay4115,158715
(defun org-table-highlight-rectangle (&optional beg end face)org-table-highlight-rectangle4121,158943
(defun org-table-remove-rectangle-highlight (&rest ignore)org-table-remove-rectangle-highlight4156,160336
(defvar org-table-coordinate-overlays nilorg-table-coordinate-overlays4163,160654
(defun org-table-overlay-coordinates ()org-table-overlay-coordinates4167,160830
(defun org-table-toggle-coordinate-overlays ()org-table-toggle-coordinate-overlays4197,162019
(defun org-table-toggle-formula-debugger ()org-table-toggle-formula-debugger4210,162565
(defvar orgtbl-mode-map (make-keymap)orgtbl-mode-map4246,164322
(defvar org-old-auto-fill-inhibit-regexp nilorg-old-auto-fill-inhibit-regexp4249,164392
(defconst orgtbl-line-start-regexporgtbl-line-start-regexp4252,164481
(defconst orgtbl-extra-font-lock-keywordsorgtbl-extra-font-lock-keywords4256,164617
(define-minor-mode orgtbl-modeorgtbl-mode4266,164954
(defun org-table-cleanup-narrow-column-properties ()org-table-cleanup-narrow-column-properties4308,166916
(defun orgtbl-make-binding (fun n &rest keys)orgtbl-make-binding4321,167521
(defun orgtbl-error ()orgtbl-error4346,168356
(defun orgtbl-setup ()orgtbl-setup4351,168514
(defun orgtbl-ctrl-c-ctrl-c (arg)orgtbl-ctrl-c-ctrl-c4499,175242
(defun orgtbl-create-or-convert-from-region (arg)orgtbl-create-or-convert-from-region4530,176305
(defun orgtbl-tab (arg)orgtbl-tab4540,176725
(defun orgtbl-ret ()orgtbl-ret4547,176924
(defun orgtbl-self-insert-command (N)orgtbl-self-insert-command4555,177108
(defvar orgtbl-exp-regexp "^\\([-+]?[0-9][0-9.]*\\)[eE]\\([-+]?[0-9]+\\)$"orgtbl-exp-regexp4602,178816
(defun orgtbl-gather-send-defs ()orgtbl-gather-send-defs4605,178959
(defun orgtbl-send-replace-tbl (name txt)orgtbl-send-replace-tbl4622,179591
(defun org-table-to-lisp (&optional txt)org-table-to-lisp4638,180176
(defun orgtbl-send-table (&optional maybe)orgtbl-send-table4652,180834
(defun org-remove-by-index (list indices &optional i0)org-remove-by-index4681,182001
(defun orgtbl-toggle-comment ()orgtbl-toggle-comment4693,182380
(defun orgtbl-insert-radio-table ()orgtbl-insert-radio-table4714,183118
(defun orgtbl-to-generic (table params)orgtbl-to-generic4730,183639
(defun org-table--generic-apply (value name &optional with-cons &rest args)org-table--generic-apply4922,190425
(defun org-table--to-generic-table (params)org-table--to-generic-table4937,191017
(defun org-table--to-generic-row (params)org-table--to-generic-row4953,191664
(defun org-table--to-generic-cell (params)org-table--to-generic-cell5044,194725
(defun orgtbl-to-tsv (table params)orgtbl-to-tsv5105,197195
(defun orgtbl-to-csv (table params)orgtbl-to-csv5110,197378
(defun orgtbl-to-latex (table params)orgtbl-to-latex5118,197662
(defun orgtbl-to-html (table params)orgtbl-to-html5151,198707
(defun orgtbl-to-texinfo (table params)orgtbl-to-texinfo5182,199726
(defun orgtbl-to-orgtbl (table params)orgtbl-to-orgtbl5213,200751
(defun orgtbl-to-table.el (table params)orgtbl-to-table.el5228,201397
(defun orgtbl-to-unicode (table params)orgtbl-to-unicode5242,201961
(defun orgtbl-ascii-draw (value min max &optional width characters)orgtbl-ascii-draw5278,203196
(defun orgtbl-ascii-plot (&optional ask)orgtbl-ascii-plot5302,204198
(defun orgtbl-uc-draw-grid (value min max &optional width)orgtbl-uc-draw-grid5355,206092
(defun orgtbl-uc-draw-cont (value min max &optional width)orgtbl-uc-draw-cont5365,206551
(defun org-table-get-remote-range (name-or-id form)org-table-get-remote-range5373,206910
(defun org-table-remote-reference-indirection (form)org-table-remote-reference-indirection5429,209268
(defmacro org-define-lookup-function (mode)org-define-lookup-function5452,210100

elpa/org-20160620/org-timer.el,2327
(defvar org-timer-start-time nilorg-timer-start-time43,1507
(defvar org-timer-pause-time nilorg-timer-pause-time46,1573
(defvar org-timer-countdown-timer nilorg-timer-countdown-timer49,1644
(defvar org-timer-countdown-timer-title nilorg-timer-countdown-timer-title55,1841
(defconst org-timer-re "\\([-+]?[0-9]+\\):\\([0-9]\\{2\\}\\):\\([0-9]\\{2\\}\\)"org-timer-re58,1951
(defcustom org-timer-format "%s "org-timer-format61,2085
(defcustom org-timer-default-timer "0"org-timer-default-timer68,2302
(defcustom org-timer-display 'mode-lineorg-timer-display76,2546
(defvar org-timer-start-hook nilorg-timer-start-hook92,3063
(defvar org-timer-stop-hook nilorg-timer-stop-hook95,3144
(defvar org-timer-pause-hook nilorg-timer-pause-hook98,3238
(defvar org-timer-continue-hook nilorg-timer-continue-hook101,3332
(defvar org-timer-set-hook nilorg-timer-set-hook104,3431
(defvar org-timer-done-hook nilorg-timer-done-hook107,3507
(defun org-timer-start (&optional offset)org-timer-start111,3605
(defun org-timer-pause-or-continue (&optional stop)org-timer-pause-or-continue155,5432
(defun org-timer-stop ()org-timer-stop192,6956
(defun org-timer (&optional restart no-insert-p)org-timer207,7400
(defun org-timer-value-string ()org-timer-value-string226,8198
(defun org-timer-seconds ()org-timer-seconds232,8352
(defun org-timer-change-times-in-region (beg end delta)org-timer-change-times-in-region243,8808
(defun org-timer-item (&optional arg)org-timer-item269,9716
(defun org-timer-fix-incomplete (hms)org-timer-fix-incomplete294,10680
(defun org-timer-hms-to-secs (hms)org-timer-hms-to-secs305,11177
(defun org-timer-secs-to-hms (s)org-timer-secs-to-hms319,11728
(defvar org-timer-mode-line-timer nil)org-timer-mode-line-timer329,12032
(defvar org-timer-mode-line-string nil)org-timer-mode-line-string330,12071
(defun org-timer-set-mode-line (value)org-timer-set-mode-line332,12112
(defun org-timer-update-mode-line ()org-timer-update-mode-line384,14339
(defun org-timer-show-remaining-time ()org-timer-show-remaining-time392,14590
(defun org-timer-set-timer (&optional opt)org-timer-set-timer407,15062
(defun org-timer--run-countdown-timer (secs title)org-timer--run-countdown-timer469,17592
(defun org-timer--get-timer-title ()org-timer--get-timer-title482,18046

elpa/org-20160620/org-version.el,164
(defun org-release ()org-release5,83
(defun org-git-version ()org-git-version11,269
(defvar org-odt-data-dir "/usr/share/emacs/etc/org"org-odt-data-dir17,479

elpa/org-20160620/org-w3m.el,742
(defvar w3m-current-url)w3m-current-url46,1614
(defvar w3m-current-title)w3m-current-title47,1639
(defun org-w3m-store-link ()org-w3m-store-link50,1724
(defun org-w3m-copy-for-org-mode ()org-w3m-copy-for-org-mode59,1979
(defun org-w3m-get-anchor-start ()org-w3m-get-anchor-start113,4789
(defun org-w3m-get-anchor-end ()org-w3m-get-anchor-end119,5047
(defun org-w3m-get-next-link-start ()org-w3m-get-next-link-start125,5273
(defun org-w3m-get-prev-link-start ()org-w3m-get-prev-link-start136,5711
(defun org-w3m-no-next-link-p ()org-w3m-no-next-link-p147,6165
(defun org-w3m-no-prev-link-p ()org-w3m-no-prev-link-p153,6379
(defvar w3m-mode-map)w3m-mode-map160,6637
(defvar w3m-minor-mode-map)w3m-minor-mode-map161,6659

elpa/org-20160620/org.el,105366
(defvar org-inhibit-highlight-removal nil) ; dynamically scoped paramorg-inhibit-highlight-removal65,2799
(defvar org-table-formula-constants-local nilorg-table-formula-constants-local66,2869
(defvar org-outline-regexp "\\*+ "org-outline-regexp101,4002
(defvar org-outline-regexp-bol "^\\*+ "org-outline-regexp-bol104,4074
(defvar org-heading-regexp "^\\(\\*+\\)\\(?: +\\(.*?\\)\\)?[ \t]*$"org-heading-regexp109,4261
(defsubst org-uniquify (list)org-uniquify182,8915
(defsubst org-get-at-bol (property)org-get-at-bol186,9061
(defsubst org-trim (s)org-trim190,9202
(defvar org-babel-load-languages)org-babel-load-languages197,9456
(defun org-babel-do-load-languages (sym value)org-babel-do-load-languages200,9506
(defun org-babel-load-file (file &optional compile)org-babel-load-file217,10094
(defcustom org-babel-load-languages '((emacs-lisp . t))org-babel-load-languages245,11312
(defcustom org-clone-delete-id nilorg-clone-delete-id308,13467
(defun org-version (&optional here full message)org-version321,13785
(defconst org-version (org-version))org-version351,15079
(defconst org-block-regexporg-block-regexp358,15153
(defconst org-dblock-start-reorg-dblock-start-re362,15315
(defconst org-dblock-end-re "^[ \t]*#\\+\\(?:END\\|end\\)\\([: \t\r\n]\\|$\\)"org-dblock-end-re366,15487
(defconst org-clock-string "CLOCK:"org-clock-string371,15633
(defvar org-closed-string "CLOSED:"org-closed-string374,15744
(defvar org-deadline-string "DEADLINE:"org-deadline-string377,15857
(defvar org-scheduled-string "SCHEDULED:"org-scheduled-string383,16105
(defconst org-ds-keyword-lengthorg-ds-keyword-length389,16361
(defconst org-planning-line-reorg-planning-line-re397,16598
(defconst org-clock-line-reorg-clock-line-re405,16814
(defconst org-deadline-regexp (concat "\\<" org-deadline-string)org-deadline-regexp409,16918
(defconst org-deadline-time-regexporg-deadline-time-regexp412,17019
(defconst org-deadline-time-hour-regexporg-deadline-time-hour-regexp416,17172
(defconst org-deadline-line-regexporg-deadline-line-regexp421,17387
(defconst org-scheduled-regexp (concat "\\<" org-scheduled-string)org-scheduled-regexp425,17531
(defconst org-scheduled-time-regexporg-scheduled-time-regexp428,17635
(defconst org-scheduled-time-hour-regexporg-scheduled-time-hour-regexp432,17791
(defconst org-closed-time-regexporg-closed-time-regexp437,18009
(defconst org-keyword-time-regexporg-keyword-time-regexp441,18160
(defconst org-keyword-time-not-clock-regexporg-keyword-time-not-clock-regexp450,18418
(defconst org-maybe-keyword-time-regexporg-maybe-keyword-time-regexp458,18665
(defconst org-all-time-keywordsorg-all-time-keywords470,19008
(defconst org-drawer-regexp "^[ \t]*:\\(\\(?:\\w\\|[-_]\\)+\\):[ \t]*$"org-drawer-regexp478,19213
(defconst org-property-start-re "^[ \t]*:PROPERTIES:[ \t]*$"org-property-start-re482,19380
(defconst org-property-end-re "^[ \t]*:END:[ \t]*$"org-property-end-re485,19512
(defconst org-clock-drawer-start-re "^[ \t]*:CLOCK:[ \t]*$"org-clock-drawer-start-re488,19634
(defconst org-clock-drawer-end-re "^[ \t]*:END:[ \t]*$"org-clock-drawer-end-re491,19762
(defconst org-property-drawer-reorg-property-drawer-re494,19885
(defconst org-clock-drawer-reorg-clock-drawer-re500,20073
(defconst org-heading-keyword-regexp-formatorg-heading-keyword-regexp-format507,20253
(defconst org-heading-keyword-maybe-regexp-formatorg-heading-keyword-maybe-regexp-format514,20605
(defconst org-archive-tag "ARCHIVE"org-archive-tag521,20954
(defconst org-comment-string "COMMENT"org-comment-string526,21147
(defconst org-latex-regexpsorg-latex-regexps534,21371
(defconst org-effort-property "Effort"org-effort-property547,22179
(defconst org-table-any-line-regexp "^[ \t]*\\(|\\|\\+-[-+]\\)"org-table-any-line-regexp553,22373
(defconst org-table-line-regexp "^[ \t]*|"org-table-line-regexp556,22483
(defconst org-table-dataline-regexp "^[ \t]*|[^-]"org-table-dataline-regexp559,22563
(defconst org-table-hline-regexp "^[ \t]*|-"org-table-hline-regexp562,22651
(defconst org-table1-hline-regexp "^[ \t]*\\+-[-+]"org-table1-hline-regexp565,22734
(defconst org-table-any-border-regexp "^[ \t]*[^|+ \t]"org-table-any-border-regexp568,22825
(defconst org-TBLFM-regexp "^[ \t]*#\\+TBLFM: "org-TBLFM-regexp572,22989
(defconst org-ts-regexp "<\\([0-9]\\{4\\}-[0-9]\\{2\\}-[0-9]\\{2\\} ?[^\r\n>]*?\\)>"org-ts-regexp577,23082
(defconst org-ts-regexp-inactiveorg-ts-regexp-inactive580,23222
(defconst org-ts-regexp-both "[[<]\\([0-9]\\{4\\}-[0-9]\\{2\\}-[0-9]\\{2\\} ?[^]\r\n>]*?\\)[]>]"org-ts-regexp-both584,23386
(defconst org-ts-regexp0org-ts-regexp0587,23538
(defconst org-ts-regexp1 "\\(\\([0-9]\\{4\\}\\)-\\([0-9]\\{2\\}\\)-\\([0-9]\\{2\\}\\) *\\([^]+0-9>\r\n -]*\\)\\( \\([0-9]\\{1,2\\}\\):\\([0-9]\\{2\\}\\)\\)?\\)"org-ts-regexp1593,23890
(defconst org-ts-regexp2 (concat "<" org-ts-regexp1 "[^>\n]\\{0,16\\}>")org-ts-regexp2596,24112
(defconst org-ts-regexp3 (concat "[[<]" org-ts-regexp1 "[^]>\n]\\{0,16\\}[]>]")org-ts-regexp3599,24245
(defconst org-tr-regexp (concat org-ts-regexp "--?-?" org-ts-regexp)org-tr-regexp602,24397
(defconst org-tr-regexp-bothorg-tr-regexp-both605,24520
(defconst org-tsr-regexp (concat org-ts-regexp "\\(--?-?"org-tsr-regexp609,24660
(defconst org-tsr-regexp-bothorg-tsr-regexp-both613,24813
(defconst org-repeat-reorg-repeat-re619,25031
(defconst org-time-stamp-formats '("<%Y-%m-%d %a>" . "<%Y-%m-%d %a %H:%M>")org-time-stamp-formats624,25264
(defgroup org nilorg630,25439
(defcustom org-mode-hook nilorg-mode-hook636,25560
(defcustom org-load-hook nilorg-load-hook641,25681
(defcustom org-log-buffer-setup-hook nilorg-log-buffer-setup-hook646,25791
(defvar org-modules)  ; defined beloworg-modules652,25937
(defvar org-modules-loaded nilorg-modules-loaded653,25975
(defun org-load-modules-maybe (&optional force)org-load-modules-maybe656,26050
(defun org-set-modules (var value)org-set-modules665,26381
(defcustom org-modules '(org-w3m org-bbdb org-bibtex org-docview org-gnus org-info org-irc org-mhe org-rmail)org-modules672,26608
(defvar org-export-registered-backends) ; From ox.el.org-export-registered-backends749,32136
(defcustom org-export-backends '(ascii html icalendar latex)org-export-backends752,32328
(defcustom org-support-shift-select nilorg-support-shift-select851,36802
(defcustom org-loop-over-headlines-in-active-region nilorg-loop-over-headlines-in-active-region899,39039
(defgroup org-startup nilorg-startup925,40130
(defcustom org-startup-folded torg-startup-folded930,40237
(defcustom org-startup-truncated torg-startup-truncated950,41032
(defcustom org-startup-indented nilorg-startup-indented957,41297
(defcustom org-use-sub-superscripts torg-use-sub-superscripts969,41675
(defcustom org-startup-with-beamer-mode nilorg-startup-with-beamer-mode1002,43109
(defcustom org-startup-align-all-tables nilorg-startup-align-all-tables1012,43399
(defcustom org-startup-with-inline-images nilorg-startup-with-inline-images1023,43845
(defcustom org-startup-with-latex-preview nilorg-startup-with-latex-preview1033,44181
(defcustom org-insert-mode-line-in-empty-file nilorg-insert-mode-line-in-empty-file1045,44557
(defcustom org-replace-disputed-keys nilorg-replace-disputed-keys1055,45027
(defcustom org-use-extra-keys nilorg-use-extra-keys1071,45755
(defcustom org-disputed-keysorg-disputed-keys1086,46343
(defun org-key (key)org-key1103,47031
(defun org-find-if (predicate seq)org-find-if1117,47566
(defun org-defkey (keymap key def)org-defkey1124,47714
(defcustom org-ellipsis nilorg-ellipsis1128,47856
(defvar org-display-table nilorg-display-table1141,48391
(defgroup org-keywords nilorg-keywords1144,48494
(defcustom org-closed-keep-when-no-todo nilorg-closed-keep-when-no-todo1149,48585
(defgroup org-structure nilorg-structure1157,48813
(defgroup org-reveal-location nilorg-reveal-location1162,48944
(defcustom org-show-context-detail '((isearch . lineage)org-show-context-detail1167,49094
(defcustom org-indirect-buffer-display 'other-windoworg-indirect-buffer-display1242,51919
(defcustom org-use-speed-commands nilorg-use-speed-commands1261,52817
(defcustom org-speed-commands-user nilorg-speed-commands-user1277,53407
(defcustom org-bookmark-names-plistorg-bookmark-names-plist1299,54370
(defgroup org-cycle nilorg-cycle1314,54930
(defcustom org-cycle-skip-children-state-if-no-children torg-cycle-skip-children-state-if-no-children1319,55054
(defcustom org-cycle-max-level nilorg-cycle-max-level1324,55221
(defcustom org-hide-block-startup nilorg-hide-block-startup1339,55879
(defcustom org-cycle-global-at-bob nilorg-cycle-global-at-bob1349,56130
(defcustom org-cycle-level-after-item/entry-creation torg-cycle-level-after-item/entry-creation1360,56722
(defcustom org-cycle-emulate-tab torg-cycle-emulate-tab1375,57443
(defcustom org-cycle-separator-lines 2org-cycle-separator-lines1391,58151
(defcustom org-pre-cycle-hook nilorg-pre-cycle-hook1409,58979
(defcustom org-cycle-hook '(org-cycle-hide-archived-subtreesorg-cycle-hook1419,59450
(defgroup org-edit-structure nilorg-edit-structure1434,60133
(defcustom org-odd-levels-only nilorg-odd-levels-only1439,60274
(defcustom org-adapt-indentation torg-adapt-indentation1455,60870
(defcustom org-special-ctrl-a/e nilorg-special-ctrl-a/e1481,61954
(defcustom org-special-ctrl-k nilorg-special-ctrl-k1520,63636
(defcustom org-ctrl-k-protect-subtree nilorg-ctrl-k-protect-subtree1532,64157
(defcustom org-special-ctrl-o torg-special-ctrl-o1545,64772
(defcustom org-catch-invisible-edits nilorg-catch-invisible-edits1550,64906
(defcustom org-yank-folded-subtrees torg-yank-folded-subtrees1573,66073
(defcustom org-yank-adjusted-subtrees nilorg-yank-adjusted-subtrees1582,66497
(defcustom org-M-RET-may-split-line '((default . t))org-M-RET-may-split-line1589,66747
(defcustom org-insert-heading-respect-content nilorg-insert-heading-respect-content1616,67525
(defcustom org-blank-before-new-entry '((heading . auto)org-blank-before-new-entry1624,67908
(defcustom org-insert-heading-hook nilorg-insert-heading-hook1646,68807
(defcustom org-enable-fixed-width-editor torg-enable-fixed-width-editor1651,68941
(defcustom org-goto-auto-isearch torg-goto-auto-isearch1658,69217
(defgroup org-sparse-trees nilorg-sparse-trees1671,69671
(defcustom org-highlight-sparse-tree-matches torg-highlight-sparse-tree-matches1676,69803
(defcustom org-remove-highlights-with-change torg-remove-highlights-with-change1683,70063
(defcustom org-occur-hook '(org-first-headline-recenter)org-occur-hook1696,70535
(defgroup org-imenu-and-speedbar nilorg-imenu-and-speedbar1703,70791
(defcustom org-imenu-depth 2org-imenu-depth1708,70941
(defgroup org-table nilorg-table1714,71123
(defcustom org-enable-table-editor 'optimizedorg-enable-table-editor1719,71225
(defcustom org-self-insert-cluster-for-undo (or (featurep 'xemacs)org-self-insert-cluster-for-undo1750,72708
(defcustom org-table-tab-recognizes-table.el torg-table-tab-recognizes-table.el1759,73104
(defgroup org-link nilorg-link1766,73366
(defvar org-link-abbrev-alist-local nilorg-link-abbrev-alist-local1771,73465
(defcustom org-link-abbrev-alist nilorg-link-abbrev-alist1776,73679
(defcustom org-descriptive-links torg-descriptive-links1807,74902
(defcustom org-link-file-path-type 'adaptiveorg-link-file-path-type1819,75358
(defvaralias 'org-activate-links 'org-highlight-links)org-activate-links1836,75985
(defcustom org-highlight-links '(bracket angle plain radio tag date footnote)org-highlight-links1837,76040
(defcustom org-make-link-description-function nilorg-make-link-description-function1871,77450
(defgroup org-link-store nilorg-link-store1880,77855
(defcustom org-url-hexify-p torg-url-hexify-p1885,77979
(defcustom org-email-link-description-format "Email %c: %.30s"org-email-link-description-format1891,78122
(defcustom org-from-is-user-regexporg-from-is-user-regexp1912,78925
(defcustom org-context-in-file-links torg-context-in-file-links1924,79487
(defcustom org-keep-stored-link-after-insertion nilorg-keep-stored-link-after-insertion1937,80126
(defgroup org-link-follow nilorg-link-follow1950,80716
(defcustom org-link-translation-function nilorg-link-translation-function1955,80844
(defcustom org-follow-link-hook nilorg-follow-link-hook1969,81554
(defcustom org-tab-follows-link nilorg-tab-follows-link1974,81685
(defcustom org-return-follows-link nilorg-return-follows-link1982,81947
(defcustom org-mouse-1-follows-linkorg-mouse-1-follows-link1988,82139
(defcustom org-mark-ring-length 4org-mark-ring-length2001,82719
(defcustom org-link-search-must-match-exact-headline 'query-to-createorg-link-search-must-match-exact-headline2007,82921
(defcustom org-link-frame-setuporg-link-frame-setup2019,83387
(defcustom org-display-internal-link-with-indirect-buffer nilorg-display-internal-link-with-indirect-buffer2074,84962
(defcustom org-open-non-existing-files nilorg-open-non-existing-files2086,85553
(defcustom org-open-directory-means-index-dot-org nilorg-open-directory-means-index-dot-org2095,85924
(defcustom org-confirm-shell-link-function 'yes-or-no-porg-confirm-shell-link-function2102,86194
(defcustom org-confirm-shell-link-not-regexp ""org-confirm-shell-link-not-regexp2122,87028
(defcustom org-confirm-elisp-link-function 'yes-or-no-porg-confirm-elisp-link-function2128,87189
(defcustom org-confirm-elisp-link-not-regexp ""org-confirm-elisp-link-not-regexp2148,88048
(defconst org-file-apps-defaults-gnuorg-file-apps-defaults-gnu2154,88209
(defconst org-file-apps-defaults-macosxorg-file-apps-defaults-macosx2161,88393
(defconst org-file-apps-defaults-windowsntorg-file-apps-defaults-windowsnt2174,88811
(defcustom org-file-appsorg-file-apps2191,89247
(defcustom org-doi-server-url "http://dx.doi.org/"org-doi-server-url2285,93986
(defgroup org-refile nilorg-refile2291,94130
(defcustom org-directory "~/org"org-directory2296,94244
(defcustom org-default-notes-file (convert-standard-filename "~/.notes")org-default-notes-file2312,94833
(defcustom org-goto-interface 'outlineorg-goto-interface2320,95097
(defcustom org-goto-max-level 5org-goto-max-level2334,95772
(defcustom org-reverse-note-order nilorg-reverse-note-order2339,95916
(defcustom org-log-refile nilorg-log-refile2352,96401
(defcustom org-refile-targets nilorg-refile-targets2380,97214
(defcustom org-refile-target-verify-function nilorg-refile-target-verify-function2427,99538
(defcustom org-refile-use-cache nilorg-refile-use-cache2443,100226
(defcustom org-refile-use-outline-path nilorg-refile-use-outline-path2458,100857
(defcustom org-outline-path-complete-in-steps torg-outline-path-complete-in-steps2474,101470
(defcustom org-refile-allow-creating-parent-nodes nilorg-refile-allow-creating-parent-nodes2486,102079
(defcustom org-refile-active-region-within-subtree nilorg-refile-active-region-within-subtree2503,102802
(defgroup org-todo nilorg-todo2514,103208
(defgroup org-progress nilorg-progress2519,103312
(defvar org-todo-interpretation-widgetsorg-todo-interpretation-widgets2524,103435
(defcustom org-todo-keywords '((sequence "TODO" "DONE"))org-todo-keywords2530,103714
(defvar org-todo-keywords-1 nilorg-todo-keywords-12594,106533
(defvar org-todo-keywords-for-agenda nil)org-todo-keywords-for-agenda2597,106667
(defvar org-done-keywords-for-agenda nil)org-done-keywords-for-agenda2598,106709
(defvar org-todo-keyword-alist-for-agenda nil)org-todo-keyword-alist-for-agenda2599,106751
(defvar org-tag-alist-for-agenda nilorg-tag-alist-for-agenda2600,106798
(defvar org-tag-groups-alist-for-agenda nilorg-tag-groups-alist-for-agenda2602,106881
(defvar org-tag-groups-alist nil)org-tag-groups-alist2604,106986
(defvar org-agenda-contributing-files nil)org-agenda-contributing-files2606,107071
(defvar org-not-done-keywords nil)org-not-done-keywords2607,107114
(defvar org-done-keywords nil)org-done-keywords2609,107201
(defvar org-todo-heads nil)org-todo-heads2611,107280
(defvar org-todo-sets nil)org-todo-sets2613,107353
(defvar org-todo-log-states nil)org-todo-log-states2615,107424
(defvar org-todo-kwd-alist nil)org-todo-kwd-alist2617,107507
(defvar org-todo-key-alist nil)org-todo-key-alist2619,107588
(defvar org-todo-key-trigger nil)org-todo-key-trigger2621,107669
(defcustom org-todo-interpretation 'sequenceorg-todo-interpretation2624,107755
(defcustom org-use-fast-todo-selection torg-use-fast-todo-selection2635,108152
(defcustom org-provide-todo-statistics torg-provide-todo-statistics2661,109140
(defcustom org-hierarchical-todo-statistics torg-hierarchical-todo-statistics2684,110134
(defcustom org-after-todo-state-change-hook nilorg-after-todo-state-change-hook2693,110523
(defvar org-blocker-hook nilorg-blocker-hook2700,110772
(defvar org-trigger-hook nilorg-trigger-hook2710,111122
(defcustom org-enforce-todo-dependencies nilorg-enforce-todo-dependencies2730,111724
(defcustom org-enforce-todo-checkbox-dependencies nilorg-enforce-todo-checkbox-dependencies2746,112358
(defcustom org-treat-insert-todo-heading-as-state-change nilorg-treat-insert-todo-heading-as-state-change2764,113119
(defcustom org-treat-S-cursor-todo-selection-as-state-change torg-treat-S-cursor-todo-selection-as-state-change2772,113482
(defcustom org-todo-state-tags-triggers nilorg-todo-state-tags-triggers2780,113813
(defcustom org-log-done nilorg-log-done2801,114531
(defcustom org-log-reschedule nilorg-log-reschedule2831,115438
(defcustom org-log-redeadline nilorg-log-redeadline2852,116067
(defcustom org-log-note-clock-out nilorg-log-note-clock-out2876,116811
(defcustom org-log-done-with-time torg-log-done-with-time2887,117146
(defcustom org-log-note-headingsorg-log-note-headings2893,117334
(defcustom org-log-into-drawer nilorg-log-into-drawer2939,119322
(defun org-log-into-drawer ()org-log-into-drawer2972,120432
(defcustom org-log-state-notes-insert-after-drawers nilorg-log-state-notes-insert-after-drawers2985,120929
(defcustom org-log-states-order-reversed torg-log-states-order-reversed2998,121392
(defcustom org-todo-repeat-to-state nilorg-todo-repeat-to-state3010,121762
(defcustom org-log-repeat 'timeorg-log-repeat3020,122201
(defgroup org-priorities nilorg-priorities3048,123250
(defcustom org-enable-priority-commands torg-enable-priority-commands3053,123352
(defcustom org-highest-priority ?Aorg-highest-priority3060,123576
(defcustom org-lowest-priority ?Corg-lowest-priority3066,123788
(defcustom org-default-priority ?Borg-default-priority3072,123998
(defcustom org-priority-start-cycle-with-default torg-priority-start-cycle-with-default3085,124679
(defcustom org-get-priority-function nilorg-get-priority-function3093,125010
(defgroup org-time nilorg-time3106,125513
(defcustom org-time-stamp-rounding-minutes '(0 5)org-time-stamp-rounding-minutes3111,125632
(defcustom org-display-custom-times nilorg-display-custom-times3142,126914
(defcustom org-time-stamp-custom-formatsorg-time-stamp-custom-formats3152,127296
(defun org-time-stamp-format (&optional long inactive)org-time-stamp-format3162,127780
(defcustom org-time-clocksum-formatorg-time-clocksum-format3170,128032
(defcustom org-time-clocksum-use-fractional nilorg-time-clocksum-use-fractional3247,130845
(defcustom org-time-clocksum-use-effort-durations nilorg-time-clocksum-use-effort-durations3255,131095
(defcustom org-time-clocksum-fractional-format "%.2f"org-time-clocksum-fractional-format3269,131630
(defcustom org-deadline-warning-days 14org-deadline-warning-days3299,132908
(defcustom org-scheduled-delay-days 0org-scheduled-delay-days3310,133368
(defcustom org-read-date-prefer-future torg-read-date-prefer-future3325,133924
(defcustom org-agenda-jump-prefer-future 'org-read-date-prefer-futureorg-agenda-jump-prefer-future3354,135012
(defcustom org-read-date-force-compatible-dates torg-read-date-force-compatible-dates3368,135558
(defcustom org-read-date-display-live torg-read-date-display-live3399,136976
(defcustom org-read-date-popup-calendar torg-read-date-popup-calendar3405,137179
(defcustom org-read-date-minibuffer-setup-hook nilorg-read-date-minibuffer-setup-hook3418,137725
(defcustom org-extend-today-until 0org-extend-today-until3428,138057
(defcustom org-use-effective-time nilorg-use-effective-time3443,138798
(defcustom org-use-last-clock-out-time-as-effective-time nilorg-use-last-clock-out-time-as-effective-time3452,139135
(defcustom org-edit-timestamp-down-means-later nilorg-edit-timestamp-down-means-later3461,139465
(defcustom org-calendar-follow-timestamp-change torg-calendar-follow-timestamp-change3467,139649
(defgroup org-tags nilorg-tags3474,139905
(defcustom org-tag-alist nilorg-tag-alist3479,140003
(defcustom org-tag-persistent-alist nilorg-tag-persistent-alist3508,141054
(defcustom org-complete-tags-always-offer-all-agenda-tags nilorg-complete-tags-always-offer-all-agenda-tags3529,141947
(defvar org-file-tags nilorg-file-tags3544,142526
(defcustom org-use-fast-tag-selection 'autoorg-use-fast-tag-selection3550,142761
(defcustom org-fast-tag-selection-single-key nilorg-fast-tag-selection-single-key3565,143422
(defvar org-fast-tag-selection-include-todo nilorg-fast-tag-selection-include-todo3577,143907
(defcustom org-tags-column (if (featurep 'xemacs) -76 -77)org-tags-column3581,144094
(defcustom org-auto-align-tags torg-auto-align-tags3591,144531
(defcustom org-use-tag-inheritance torg-use-tag-inheritance3599,144864
(defcustom org-tags-exclude-from-inheritance nilorg-tags-exclude-from-inheritance3619,145851
(defun org-tag-inherit-p (tag)org-tag-inherit-p3627,146184
(defcustom org-tags-match-list-sublevels torg-tags-match-list-sublevels3639,146635
(defcustom org-tags-sort-function nilorg-tags-sort-function3661,147620
(defvar org-tags-history nilorg-tags-history3670,147924
(defvar org-last-tags-completion-table nilorg-last-tags-completion-table3672,147996
(defvar org-after-tags-change-hook nilorg-after-tags-change-hook3674,148085
(defgroup org-properties nilorg-properties3677,148186
(defcustom org-property-format "%-10s %s"org-property-format3682,148302
(defcustom org-properties-postprocess-alist nilorg-properties-postprocess-alist3690,148632
(defcustom org-use-property-inheritance nilorg-use-property-inheritance3714,149610
(defun org-property-inherit-p (property)org-property-inherit-p3744,150918
(defcustom org-columns-default-format "%25ITEM %TODO %3PRIORITY %TAGS"org-columns-default-format3755,151373
(defcustom org-columns-ellipses ".."org-columns-ellipses3763,151648
(defcustom org-columns-modify-value-for-display-function nilorg-columns-modify-value-for-display-function3773,152158
(defconst org-global-properties-fixedorg-global-properties-fixed3786,152683
(defcustom org-global-properties nilorg-global-properties3799,153258
(defvar org-file-properties nilorg-file-properties3816,153797
(defgroup org-agenda nilorg-agenda3822,154030
(defvar org-category nilorg-category3827,154140
(defcustom org-agenda-files nilorg-agenda-files3842,154594
(defcustom org-agenda-file-regexp "\\`[^.].*\\.org\\'"org-agenda-file-regexp3860,155420
(defcustom org-agenda-text-search-extra-files nilorg-agenda-text-search-extra-files3868,155757
(defcustom org-agenda-skip-unavailable-files nilorg-agenda-skip-unavailable-files3888,156676
(defcustom org-calendar-to-agenda-key [?c]org-calendar-to-agenda-key3894,156903
(defcustom org-calendar-insert-diary-entry-key [?i]org-calendar-insert-diary-entry-key3902,157246
(defcustom org-agenda-diary-file 'diary-fileorg-agenda-diary-file3913,157777
(defgroup org-latex nilorg-latex3934,158605
(defcustom org-format-latex-optionsorg-format-latex-options3939,158716
(defcustom org-format-latex-signal-error torg-format-latex-signal-error3965,160167
(defcustom org-latex-to-mathml-jar-file nilorg-latex-to-mathml-jar-file3972,160381
(defcustom org-latex-to-mathml-convert-command nilorg-latex-to-mathml-convert-command3984,160764
(defcustom org-latex-create-formula-image-program 'dvipngorg-latex-create-formula-image-program4007,161559
(defcustom org-latex-preview-ltxpng-directory "ltxpng/"org-latex-preview-ltxpng-directory4021,162121
(defun org-format-latex-mathml-available-p ()org-format-latex-mathml-available-p4030,162423
(defcustom org-format-latex-header "\\documentclass{article}org-format-latex-header4043,162926
(defun org-set-packages-alist (var val)org-set-packages-alist4070,163990
(defun org-get-packages-alist (var)org-get-packages-alist4078,164232
(defcustom org-latex-default-packages-alistorg-latex-default-packages-alist4086,164468
(defcustom org-latex-packages-alist nilorg-latex-packages-alist4153,166717
(defgroup org-appearance nilorg-appearance4187,167741
(defcustom org-level-color-stars-only nilorg-level-color-stars-only4192,167848
(defcustom org-hide-leading-stars nilorg-hide-leading-stars4200,168141
(defcustom org-hidden-keywords nilorg-hidden-keywords4216,168728
(defcustom org-custom-properties nilorg-custom-properties4227,169172
(defcustom org-fontify-done-headline nilorg-fontify-done-headline4236,169507
(defcustom org-fontify-emphasized-text torg-fontify-emphasized-text4244,169850
(defcustom org-fontify-whole-heading-line nilorg-fontify-whole-heading-line4250,170068
(defcustom org-highlight-latex-and-related nilorg-highlight-latex-and-related4257,170287
(defcustom org-hide-emphasis-markers nilorg-hide-emphasis-markers4274,170948
(defcustom org-hide-macro-markers nilorg-hide-macro-markers4279,171104
(defcustom org-pretty-entities nilorg-pretty-entities4284,171259
(defcustom org-pretty-entities-include-sub-superscripts torg-pretty-entities-include-sub-superscripts4291,171457
(defvar org-emph-re nilorg-emph-re4297,171656
(defvar org-verbatim-re nilorg-verbatim-re4307,172226
(defvar org-emphasis-regexp-components) ; defined just beloworg-emphasis-regexp-components4309,172306
(defvar org-emphasis-alist) ; defined just beloworg-emphasis-alist4310,172367
(defun org-set-emph-re (var val)org-set-emph-re4311,172416
(defvar org-emphasis-regexp-componentsorg-emphasis-regexp-components4369,174377
(defcustom org-emphasis-alistorg-emphasis-alist4387,175368
(defvar org-protecting-blocksorg-protecting-blocks4413,176223
(defgroup org-completion nilorg-completion4420,176463
(defcustom org-completion-use-ido nilorg-completion-use-ido4425,176560
(defcustom org-completion-use-iswitchb nilorg-completion-use-iswitchb4434,176918
(defcustom org-completion-fallback-command 'hippie-expandorg-completion-fallback-command4443,177330
(defvar outline-mode-menu-heading)outline-mode-menu-heading4453,177655
(defvar outline-mode-menu-show)outline-mode-menu-show4454,177690
(defvar outline-mode-menu-hide)outline-mode-menu-hide4455,177722
(defvar zmacs-regions) ; XEmacs regionszmacs-regions4456,177754
(defvar mark-active)mark-active4459,177809
(defvar calc-embedded-close-formula)calc-embedded-close-formula4467,178189
(defvar calc-embedded-open-formula)calc-embedded-open-formula4468,178226
(defvar font-lock-unfontify-region-function)font-lock-unfontify-region-function4472,178456
(defvar iswitchb-temp-buflist)iswitchb-temp-buflist4476,178666
(defvar org-agenda-tags-todo-honor-ignore-options)org-agenda-tags-todo-honor-ignore-options4478,178774
(defvar remember-data-file)remember-data-file4501,180117
(defvar texmathp-why)texmathp-why4502,180145
(defun turn-on-orgtbl ()turn-on-orgtbl4508,180410
(defun org-at-table-p (&optional table-type)org-at-table-p4513,180521
(defsubst org-table-p () (org-at-table-p))org-table-p4525,181071
(defun org-at-table.el-p ()org-at-table.el-p4527,181115
(defun org-table-recognize-table.el ()org-table-recognize-table.el4534,181417
(defun org-at-table-hline-p ()org-at-table-hline-p4552,182104
(defun org-table-map-tables (function &optional quietly)org-table-map-tables4561,182408
(defun org-at-TBLFM-p (&optional pos)org-at-TBLFM-p4586,183448
(defvar org-clock-start-time)org-clock-start-time4594,183741
(defvar org-clock-marker (make-marker)org-clock-marker4595,183771
(defvar org-clock-hd-marker (make-marker)org-clock-hd-marker4597,183851
(defvar org-clock-heading ""org-clock-heading4599,183961
(defun org-clock-is-active ()org-clock-is-active4601,184035
(defun org-check-running-clock ()org-check-running-clock4606,184197
(defun org-clocktable-try-shift (dir n)org-clocktable-try-shift4616,184612
(defun org-clock-persistence-insinuate ()org-clock-persistence-insinuate4622,184842
(defgroup org-archive nilorg-archive4628,185039
(defcustom org-archive-location "%s_archive::"org-archive-location4633,185158
(defcustom org-agenda-skip-archived-trees torg-agenda-skip-archived-trees4692,187574
(defcustom org-columns-skip-archived-trees torg-columns-skip-archived-trees4701,187972
(defcustom org-cycle-open-archived-trees nilorg-cycle-open-archived-trees4707,188150
(defcustom org-sparse-tree-open-archived-trees nilorg-sparse-tree-open-archived-trees4716,188517
(defcustom org-sparse-tree-default-date-type nilorg-sparse-tree-default-date-type4724,188805
(defun org-cycle-hide-archived-subtrees (state)org-cycle-hide-archived-subtrees4745,189637
(defun org-force-cycle-archived ()org-force-cycle-archived4759,190305
(defun org-hide-archived-subtrees (beg end)org-hide-archived-subtrees4766,190513
(defun org-flag-subtree (flag)org-flag-subtree4781,191129
(defalias 'org-advertized-archive-subtree 'org-archive-subtree)org-advertized-archive-subtree4789,191324
(defvar org-id-track-globally)org-id-track-globally4802,191809
(defvar org-todo-regexp nilorg-todo-regexp4806,191911
(defvar org-not-done-regexp nilorg-not-done-regexp4809,192030
(defvar org-not-done-heading-regexp nilorg-not-done-heading-regexp4812,192177
(defvar org-todo-line-regexp nilorg-todo-line-regexp4815,192322
(defvar org-complex-heading-regexp nilorg-complex-heading-regexp4818,192475
(defvar org-complex-heading-regexp-format nilorg-complex-heading-regexp-format4826,192742
(defvar org-todo-line-tags-regexp nilorg-todo-line-tags-regexp4832,193073
(defconst org-plain-time-of-day-regexporg-plain-time-of-day-regexp4837,193285
(defconst org-plain-time-extension-regexporg-plain-time-extension-regexp4852,193819
(defconst org-stamp-time-of-day-regexporg-stamp-time-of-day-regexp4864,194269
(defconst org-startup-optionsorg-startup-options4877,194818
(defcustom org-group-tags torg-group-tags4941,197746
(defvar org-inhibit-startup nil)        ; Dynamically-scoped param.org-inhibit-startup4948,197942
(defun org-toggle-tags-groups ()org-toggle-tags-groups4950,198011
(defun org-set-regexps-and-options (&optional tags-only)org-set-regexps-and-options4964,198496
(defun org--setup-collect-keywords (regexp &optional files alist)org--setup-collect-keywords5115,204612
(defun org--setup-process-tags (tags filetags)org--setup-process-tags5223,208993
(defun org-file-contents (file &optional noerror)org-file-contents5285,211115
(defun org-extract-log-state-settings (x)org-extract-log-state-settings5297,211541
(defun org-remove-keyword-keys (list)org-remove-keyword-keys5311,212147
(defun org-assign-fast-keys (alist)org-assign-fast-keys5319,212369
(defvar org-window-configuration nilorg-window-configuration5341,213056
(defvar org-selected-window nilorg-selected-window5343,213154
(defvar org-finish-function nilorg-finish-function5345,213247
(defvar org-last-state)org-last-state5353,213587
(defvar org-entities)     ;; defined in org-entities.elorg-entities5357,213739
(defvar org-struct-menu)org-struct-menu5358,213795
(defvar org-org-menu)org-org-menu5359,213820
(defvar org-tbl-menu)org-tbl-menu5360,213842
(defvar org-table-may-need-update torg-table-may-need-update5366,213971
(defun org-before-change-function (beg end)org-before-change-function5370,214150
(defvar org-mode-map)org-mode-map5373,214294
(defvar org-inhibit-startup-visibility-stuff nil) ; Dynamically-scoped param.org-inhibit-startup-visibility-stuff5374,214316
(defvar org-agenda-keep-modes nil)      ; Dynamically-scoped param.org-agenda-keep-modes5375,214394
(defvar org-inhibit-logging nil)        ; Dynamically-scoped param.org-inhibit-logging5376,214462
(defvar org-inhibit-blocking nil)       ; Dynamically-scoped param.org-inhibit-blocking5377,214530
(defvar org-table-buffer-is-an nil)org-table-buffer-is-an5378,214598
(defvar bidi-paragraph-direction)bidi-paragraph-direction5380,214635
(defvar buffer-face-mode-face)buffer-face-mode-face5381,214669
(define-derived-mode org-mode outline-mode "Org"org-mode5409,215555
(defvar org-mode-transpose-word-syntax-tableorg-mode-transpose-word-syntax-table5586,222798
(defun org-find-invisible-foreground ()org-find-invisible-foreground5597,223143
(defun org-current-time (&optional rounding-minutes past)org-current-time5611,223627
(defun org-today ()org-today5629,224358
(defvar org-mouse-map (make-sparse-keymap))org-mouse-map5637,224587
(defconst org-non-link-chars "]\t\n\r<>")org-non-link-chars5648,224997
(defvar org-link-types '("http" "https" "ftp" "mailto" "file" "file+emacs"org-link-types5649,225039
(defvar org-link-types-re nilorg-link-types-re5652,225181
(defvar org-link-re-with-space nilorg-link-re-with-space5654,225273
(defvar org-link-re-with-space2 nilorg-link-re-with-space25656,225378
(defvar org-link-re-with-space3 nilorg-link-re-with-space35658,225484
(defvar org-angle-link-re nilorg-angle-link-re5660,225594
(defvar org-plain-link-re nilorg-plain-link-re5662,225685
(defvar org-bracket-link-regexp nilorg-bracket-link-regexp5664,225756
(defvar org-bracket-link-analytic-regexp nilorg-bracket-link-analytic-regexp5666,225832
(defvar org-bracket-link-analytic-regexp++ nilorg-bracket-link-analytic-regexp++5674,226020
(defvar org-any-link-re nilorg-any-link-re5676,226148
(defconst org-match-sexp-depth 3org-match-sexp-depth5679,226220
(defun org-create-multibrace-regexp (left right n)org-create-multibrace-regexp5682,226314
(defconst org-match-substring-regexporg-match-substring-regexp5700,227117
(defconst org-match-substring-with-braces-regexporg-match-substring-with-braces-regexp5710,227482
(defun org-make-link-regexps ()org-make-link-regexps5716,227720
(defvar org-emph-face nil)org-emph-face5769,229306
(defun org-do-emphasis-faces (limit)org-do-emphasis-faces5771,229334
(defun org-emphasize (&optional char)org-emphasize5802,230535
(defconst org-nonsticky-propsorg-nonsticky-props5846,232232
(defsubst org-rear-nonsticky-at (pos)org-rear-nonsticky-at5849,232357
(defun org-activate-plain-links (limit)org-activate-plain-links5852,232477
(defun org-activate-code (limit)org-activate-code5869,233160
(defcustom org-src-fontify-natively torg-src-fontify-natively5877,233453
(defcustom org-allow-promoting-top-level-subtree nilorg-allow-promoting-top-level-subtree5885,233654
(defun org-fontify-meta-lines-and-blocks (limit)org-fontify-meta-lines-and-blocks5893,233892
(defun org-fontify-meta-lines-and-blocks-1 (limit)org-fontify-meta-lines-and-blocks-15898,234069
(defun org-fontify-drawers (limit)org-fontify-drawers5986,238033
(defun org-fontify-macros (limit)org-fontify-macros5995,238344
(defun org-activate-angle-links (limit)org-activate-angle-links6009,238849
(defun org-activate-footnote-links (limit)org-activate-footnote-links6022,239301
(defun org-activate-bracket-links (limit)org-activate-bracket-links6045,240047
(defun org-activate-dates (limit)org-activate-dates6080,241640
(defvar org-target-link-regexp nilorg-target-link-regexp6096,242261
(defconst org-target-regexp (let ((border "[^<>\n\r \t]"))org-target-regexp6100,242412
(defconst org-radio-target-regexp (format "<%s>" org-target-regexp)org-radio-target-regexp6105,242602
(defconst org-any-target-regexporg-any-target-regexp6108,242720
(defun org-activate-target-links (limit)org-activate-target-links6112,242861
(defun org-update-radio-target-regexp ()org-update-radio-target-regexp6127,243410
(defun org-hide-wide-columns (limit)org-hide-wide-columns6176,244988
(defvar org-latex-and-related-regexp nilorg-latex-and-related-regexp6186,245308
(defun org-compute-latex-and-related-regexp ()org-compute-latex-and-related-regexp6189,245428
(defun org-do-latex-and-related (limit)org-do-latex-and-related6211,246419
(defun org-restart-font-lock ()org-restart-font-lock6234,247321
(defun org-activate-tags (limit)org-activate-tags6240,247513
(defun org-outline-level ()org-outline-level6250,247889
(defvar org-font-lock-keywords nil)org-font-lock-keywords6263,248357
(defsubst org-re-property (property &optional literal allow-null value)org-re-property6265,248394
(defconst org-property-reorg-property-re6290,249340
(defvar org-font-lock-hook nilorg-font-lock-hook6300,249705
(defvar org-font-lock-set-keywords-hook nilorg-font-lock-set-keywords-hook6303,249794
(defun org-font-lock-hook (limit)org-font-lock-hook6309,250126
(defun org-set-font-lock-defaults ()org-set-font-lock-defaults6313,250254
(defun org-toggle-pretty-entities ()org-toggle-pretty-entities6426,254557
(defvar org-custom-properties-overlays nilorg-custom-properties-overlays6438,255010
(defun org-toggle-custom-properties-visibility ()org-toggle-custom-properties-visibility6442,255165
(defun org-fontify-entities (limit)org-fontify-entities6469,256409
(defun org-fontify-like-in-org-mode (s &optional odd-levels)org-fontify-like-in-org-mode6496,257260
(defvar org-m nil)org-m6505,257511
(defvar org-l nil)org-l6506,257530
(defvar org-f nil)org-f6507,257549
(defun org-get-level-face (n)org-get-level-face6508,257568
(defun org-face-from-face-or-color (context inherit face-or-color)org-face-from-face-or-color6520,258096
(defun org-get-todo-face (kwd)org-get-todo-face6529,258445
(defun org-get-priority-face (priority)org-get-priority-face6538,258801
(defun org-get-tag-face (tag)org-get-tag-face6545,259034
(defun org-font-lock-add-priority-faces (limit)org-font-lock-add-priority-faces6553,259310
(defun org-font-lock-add-tag-faces (limit)org-font-lock-add-tag-faces6561,259634
(defun org-unfontify-region (beg end &optional maybe_loudly)org-unfontify-region6570,259985
(defconst org-script-display  '(((raise -0.3) (height 0.7))org-script-display6584,260560
(defun org-remove-font-lock-display-properties (beg end)org-remove-font-lock-display-properties6590,260756
(defun org-raise-scripts (limit)org-raise-scripts6602,261244
(defvar org-cycle-global-status nil)org-cycle-global-status6646,262915
(defvar org-cycle-subtree-status nil)org-cycle-subtree-status6649,263050
(defvar org-inlinetask-min-level)org-inlinetask-min-level6653,263189
(defun org-unlogged-message (&rest args)org-unlogged-message6655,263224
(defun org-cycle (&optional arg)org-cycle6661,263410
(defun org-cycle-internal-global ()org-cycle-internal-global6828,269706
(defvar org-called-with-limited-levels nilorg-called-with-limited-levels6861,271087
(defun org-cycle-internal-local ()org-cycle-internal-local6864,271196
(defun org-global-cycle (&optional arg)org-global-cycle6973,275676
(defun org-set-startup-visibility ()org-set-startup-visibility6991,276351
(defun org-set-visibility-according-to-property (&optional no-cleanup)org-set-visibility-according-to-property7008,276950
(defun org-overview ()org-overview7042,278157
(defun org-content (&optional arg)org-content7059,278766
(defun org-optimize-window-after-visibility-change (state)org-optimize-window-after-visibility-change7079,279406
(defun org-remove-empty-overlays-at (pos)org-remove-empty-overlays-at7090,279893
(defun org-clean-visibility-after-subtree-move ()org-clean-visibility-after-subtree-move7100,280218
(defun org-cycle-show-empty-lines (state)org-cycle-show-empty-lines7131,281214
(defun org-show-empty-lines-in-parent ()org-show-empty-lines-in-parent7175,282846
(defun org-files-list ()org-files-list7181,283093
(defsubst org-entry-beginning-position ()org-entry-beginning-position7194,283593
(defsubst org-entry-end-position ()org-entry-end-position7198,283744
(defun org-cycle-hide-drawers (state &optional exceptions)org-cycle-hide-drawers7202,283882
(defun org-flag-drawer (flag &optional element)org-flag-drawer7226,284970
(defun org-subtree-end-visible-p ()org-subtree-end-visible-p7250,285908
(defun org-first-headline-recenter ()org-first-headline-recenter7255,286072
(defun org-outline-overlay-data (&optional use-markers)org-outline-overlay-data7265,286434
(defun org-set-outline-overlay-data (data)org-set-outline-overlay-data7287,287169
(defvar org-hide-block-overlays nilorg-hide-block-overlays7301,287515
(defun org-block-map (function &optional start end)org-block-map7305,287635
(defun org-hide-block-toggle-all ()org-hide-block-toggle-all7318,288142
(defun org-hide-block-all ()org-hide-block-all7322,288284
(defun org-show-block-all ()org-show-block-all7328,288444
(defun org-hide-block-toggle-maybe ()org-hide-block-toggle-maybe7334,288622
(defun org-hide-block-toggle (&optional force)org-hide-block-toggle7341,288888
(defvar org-goto-window-configuration nil)org-goto-window-configuration7404,291338
(defvar org-goto-marker nil)org-goto-marker7405,291381
(defvar org-goto-map)org-goto-map7406,291410
(defun org-goto-map ()org-goto-map7407,291432
(defconst org-goto-helporg-goto-help7443,293008
(defvar org-goto-start-pos) ; dynamically scoped parameterorg-goto-start-pos7448,293236
(defun org-goto (&optional alternative-interface)org-goto7450,293296
(defvar org-goto-selected-point nil) ; dynamically scoped parameterorg-goto-selected-point7495,295095
(defvar org-goto-exit-command nil) ; dynamically scoped parameterorg-goto-exit-command7496,295163
(defvar org-goto-local-auto-isearch-map) ; defined beloworg-goto-local-auto-isearch-map7497,295229
(defun org-get-location (buf help)org-get-location7499,295287
(defvar org-goto-local-auto-isearch-map (make-sparse-keymap))org-goto-local-auto-isearch-map7542,296953
(defun org-goto-local-search-headings (string bound noerror)org-goto-local-search-headings7553,297547
(defun org-goto-local-auto-isearch ()org-goto-local-auto-isearch7567,298063
(defun org-goto-ret (&optional arg)org-goto-ret7576,298356
(defun org-goto-left ()org-goto-left7583,298558
(defun org-goto-right ()org-goto-right7594,298845
(defun org-goto-quit ()org-goto-quit7604,299111
(defvar org-indirect-dedicated-frame nilorg-indirect-dedicated-frame7613,299333
(defvar org-last-indirect-buffer nil)org-last-indirect-buffer7615,299435
(defun org-tree-to-indirect-buffer (&optional arg)org-tree-to-indirect-buffer7617,299474
(defun org-get-indirect-buffer (&optional buffer heading)org-get-indirect-buffer7684,302217
(defun org-set-frame-title (title)org-set-frame-title7698,302698
(defun org-previous-line-empty-p (&optional next)org-previous-line-empty-p7708,302999
(defun org-insert-heading (&optional arg invisible-ok top-level)org-insert-heading7717,303273
(defun org-N-empty-lines-before-current (N)org-N-empty-lines-before-current7903,310030
(defun org-get-heading (&optional no-tags no-todo)org-get-heading7914,310399
(defvar orgstruct-mode)   ; defined beloworgstruct-mode7936,311080
(defun org-heading-components ()org-heading-components7938,311123
(defun org-get-entry ()org-get-entry7968,312296
(defun org-insert-heading-after-current ()org-insert-heading-after-current7974,312487
(defun org-insert-heading-respect-content (&optional invisible-ok)org-insert-heading-respect-content7982,312715
(defun org-insert-todo-heading-respect-content (&optional force-state)org-insert-todo-heading-respect-content7987,312912
(defun org-insert-todo-heading (arg &optional force-heading)org-insert-todo-heading7992,313122
(defun org-insert-subheading (arg)org-insert-subheading8025,314377
(defun org-insert-todo-subheading (arg)org-insert-todo-subheading8034,314646
(defvar org-after-demote-entry-hook nilorg-after-demote-entry-hook8045,314983
(defvar org-after-promote-entry-hook nilorg-after-promote-entry-hook8050,315193
(defun org-promote-subtree ()org-promote-subtree8055,315406
(defun org-demote-subtree ()org-demote-subtree8063,315622
(defun org-do-promote ()org-do-promote8071,315847
(defun org-do-demote ()org-do-demote8082,316196
(defun org-fix-position-after-promote ()org-fix-position-after-promote8093,316541
(defun org-current-level ()org-current-level8104,316941
(defun org-get-previous-line-level ()org-get-previous-line-level8113,317344
(defun org-reduced-level (l)org-reduced-level8122,317701
(defun org-level-increment ()org-level-increment8130,317921
(defun org-get-valid-level (level &optional change)org-get-valid-level8136,318137
(defun org-promote ()org-promote8154,318998
(defun org-demote ()org-demote8174,319862
(defun org-cycle-level ()org-cycle-level8188,320481
(defun org-map-tree (fun)org-map-tree8224,322031
(defun org-map-region (fun beg end)org-map-region8236,322354
(defun org-fixup-indentation (diff)org-fixup-indentation8251,322772
(defun org-convert-to-odd-levels ()org-convert-to-odd-levels8357,326815
(defun org-convert-to-oddeven-levels ()org-convert-to-oddeven-levels8373,327399
(defun org-tr-level (n)org-tr-level8397,328395
(defun org-move-subtree-up (&optional arg)org-move-subtree-up8403,328550
(defun org-move-subtree-down (&optional arg)org-move-subtree-down8408,328742
(defvar org-subtree-clip ""org-subtree-clip8487,331489
(defvar org-subtree-clip-folded nilorg-subtree-clip-folded8492,331711
(defun org-cut-subtree (&optional n)org-cut-subtree8496,331839
(defun org-copy-subtree (&optional n cut force-store-markers nosubtrees)org-copy-subtree8503,332094
(defun org-paste-subtree (&optional level tree for-yank remove)org-paste-subtree8542,333717
(defun org-kill-is-subtree-p (&optional txt)org-kill-is-subtree-p8654,337935
(defvar org-markers-to-move nilorg-markers-to-move8679,338945
(defun org-save-markers-in-region (beg end)org-save-markers-in-region8684,339136
(defun org-check-and-save-marker (marker beg end)org-check-and-save-marker8698,339781
(defun org-reinstall-markers-in-region (beg)org-reinstall-markers-in-region8706,340125
(defun org-narrow-to-subtree ()org-narrow-to-subtree8713,340356
(defun org-narrow-to-block ()org-narrow-to-block8725,340707
(defun org-clone-subtree-with-time-shift (n &optional shift)org-clone-subtree-with-time-shift8735,341007
(defun org-sort (with-case)org-sort8843,345203
(defun org-sort-remove-invisible (s)org-sort-remove-invisible8853,345590
(defvar org-priority-regexp) ; defined later in the fileorg-priority-regexp8867,346101
(defvar org-after-sorting-entries-or-items-hook nilorg-after-sorting-entries-or-items-hook8869,346159
(defun org-sort-entriesorg-sort-entries8875,346480
(defcustom orgstruct-heading-prefix-regexp ""orgstruct-heading-prefix-regexp9113,355626
(defcustom orgstruct-setup-hook nilorgstruct-setup-hook9122,355921
(defvar orgstruct-initialized nil)orgstruct-initialized9129,356088
(defvar org-local-vars nilorg-local-vars9131,356124
(define-minor-mode orgstruct-modeorgstruct-mode9135,356226
(defun turn-on-orgstruct ()turn-on-orgstruct9153,356841
(defvar org-fb-vars nil)org-fb-vars9157,356938
(defun orgstruct++-mode (&optional arg)orgstruct++-mode9159,357005
(defvar orgstruct-is-++ nilorgstruct-is-++9188,358124
(defun turn-on-orgstruct++ ()turn-on-orgstruct++9193,358276
(defun orgstruct-error ()orgstruct-error9197,358379
(defun orgstruct-setup ()orgstruct-setup9205,358617
(defun orgstruct-make-binding (fun key disable-when-heading-prefix)orgstruct-make-binding9276,360606
(defun org-contextualize-keys (alist contexts)org-contextualize-keys9361,363476
(defun org-contextualize-validate-key (key contexts)org-contextualize-validate-key9413,364985
(defun org-context-p (&rest contexts)org-context-p9440,365908
(defun org-get-local-variables ()org-get-local-variables9455,366455
(defun org-clone-local-variables (from-buffer &optional regexp)org-clone-local-variables9477,367256
(defun org-run-like-in-org-mode (cmd)org-run-like-in-org-mode9490,367671
(defun org-get-category (&optional pos force-refresh)org-get-category9507,368310
(defun org-refresh-properties (dprop tprop)org-refresh-properties9518,368684
(defun org-refresh-property (tprop p)org-refresh-property9534,369307
(defun org-refresh-category-properties ()org-refresh-category-properties9552,369958
(defun org-refresh-stats-properties ()org-refresh-stats-properties9592,371448
(defun org-refresh-effort-properties ()org-refresh-effort-properties9613,372172
(defun org-link-expand-abbrev (link)org-link-expand-abbrev9624,372416
(defvar org-insert-link-history nilorg-insert-link-history9649,373254
(defvar org-stored-links nilorg-stored-links9652,373358
(defvar org-store-link-plist nilorg-store-link-plist9655,373442
(defvar org-link-protocols nilorg-link-protocols9658,373557
(defvar org-store-link-functions nilorg-store-link-functions9661,373654
(defun org-add-link-type (type &optional follow export)org-add-link-type9681,374611
(defvar org-agenda-buffer-name) ; Defined in org-agenda.elorg-agenda-buffer-name9713,376058
(defvar org-id-link-to-org-use-id) ; Defined in org-id.elorg-id-link-to-org-use-id9714,376117
(defun org-store-link (arg)org-store-link9717,376191
(defun org-store-link-props (&rest plist)org-store-link-props9959,384564
(defun org-add-link-props (&rest plist)org-add-link-props9980,385414
(defun org-email-link-description (&optional fmt)org-email-link-description9988,385675
(defun org-make-org-heading-search-string (&optional string)org-make-org-heading-search-string10014,386793
(defun org-make-link-string (link &optional description)org-make-link-string10033,387598
(defconst org-link-escape-charsorg-link-escape-chars10057,388605
(defconst org-link-escape-chars-browserorg-link-escape-chars-browser10063,388808
(defun org-link-escape (text &optional table merge)org-link-escape10072,389168
(defun org-link-escape-browser (text)org-link-escape-browser10094,389989
(defun org-link-unescape (str)org-link-unescape10117,391112
(defun org-link-unescape-compound (hex)org-link-unescape-compound10126,391436
(defun org-link-unescape-single-byte-sequence (hex)org-link-unescape-single-byte-sequence10159,392513
(defun org-xor (a b)org-xor10165,392745
(defun org-fixup-message-id-for-http (s)org-fixup-message-id-for-http10169,392805
(defun org-link-prettify (link)org-link-prettify10185,393292
(defun org-insert-link-global ()org-insert-link-global10194,393636
(defun org-insert-all-links (arg &optional pre post)org-insert-all-links10201,393874
(defun org-insert-last-stored-link (arg)org-insert-last-stored-link10224,394663
(defun org-link-fontify-links-to-this-file ()org-link-fontify-links-to-this-file10229,394818
(defvar org-link-links-in-this-file nil)org-link-links-in-this-file10251,395580
(defun org-insert-link (&optional complete-file link-location default-description)org-insert-link10252,395621
(defun org-link-try-special-completion (type)org-link-try-special-completion10445,403491
(defun org-file-complete-link (&optional arg)org-file-complete-link10452,403778
(defun org-iread-file-name (&rest args)org-iread-file-name10471,404474
(defun org-completing-read (&rest args)org-completing-read10484,405030
(defun org-completing-read-no-i (&rest args)org-completing-read-no-i10494,405530
(defun org-iswitchb-completing-read (prompt choices &rest args)org-iswitchb-completing-read10498,405676
(defun org-icompleting-read (&rest args)org-icompleting-read10508,406064
(defvar org-link-search-failed nil)org-link-search-failed10530,406876
(defvar org-open-link-functions nilorg-open-link-functions10532,406913
(defun org-next-link (&optional search-backward)org-next-link10549,407733
(defun org-previous-link ()org-previous-link10573,408659
(defun org-translate-link (s)org-translate-link10579,408816
(defun org-translate-link-from-planner (type path)org-translate-link-from-planner10585,409033
(defun org-find-file-at-mouse (ev)org-find-file-at-mouse10606,409973
(defun org-open-at-mouse (ev)org-open-at-mouse10612,410121
(defvar org-window-config-before-follow-link nilorg-window-config-before-follow-link10621,410412
(defun org-open-at-point-global ()org-open-at-point-global10626,410585
(defun org-open-link-from-string (s &optional arg reference-buffer)org-open-link-from-string10634,410821
(defvar org-open-at-point-functions nilorg-open-at-point-functions10649,411356
(defvar org-link-search-inhibit-query nil) ;; dynamically scopedorg-link-search-inhibit-query10656,411607
(defvar clean-buffer-list-kill-buffer-names) ; Defined in midnight.elclean-buffer-list-kill-buffer-names10657,411672
(defun org-open-at-point (&optional arg reference-buffer)org-open-at-point10658,411742
(defun org-offer-links-in-entry (buffer marker &optional nth zero)org-offer-links-in-entry10892,421082
(defun org-open-file-with-system (path)org-open-file-with-system10953,423462
(defun org-open-file-with-emacs (path)org-open-file-with-emacs10956,423592
(defvar org-create-file-search-functions nilorg-create-file-search-functions10963,423713
(defvar org-execute-file-search-functions nilorg-execute-file-search-functions10985,424807
(defun org-search-radio-target (target)org-search-radio-target11007,425861
(defun org-link-search (s &optional avoid-pos stealth)org-link-search11027,426579
(defun org-get-buffer-for-internal-link (buffer)org-get-buffer-for-internal-link11206,433236
(defun org-do-occur (regexp &optional cleanup)org-do-occur11222,433886
(defvar org-mark-ring nilorg-mark-ring11243,434646
(defvar org-mark-ring-last-goto nilorg-mark-ring-last-goto11245,434727
(defun org-mark-ring-push (&optional pos buffer)org-mark-ring-push11254,435086
(defun org-mark-ring-goto (&optional n)org-mark-ring-goto11266,435543
(defun org-remove-angle-brackets (s)org-remove-angle-brackets11284,436299
(defun org-add-angle-brackets (s)org-add-angle-brackets11288,436467
(defun org-remove-double-quotes (s)org-remove-double-quotes11292,436635
(defun org-follow-timestamp-link ()org-follow-timestamp-link11299,436835
(defvar org-wait nil)org-wait11326,437920
(defun org-open-file (path &optional in-emacs line search)org-open-file11327,437942
(defun org-file-apps-entry-match-against-dlink-p (entry)org-file-apps-entry-match-against-dlink-p11466,443357
(defun org-default-apps ()org-default-apps11485,444023
(defun org-apps-regexp-alist (list &optional add-auto-mode)org-apps-regexp-alist11494,444293
(defvar ange-ftp-name-format) ; to silence the XEmacs compiler.ange-ftp-name-format11513,444959
(defun org-file-remote-p (file)org-file-remote-p11514,445023
(defun org-get-org-file ()org-get-org-file11531,445560
(defun org-notes-order-reversed-p ()org-notes-order-reversed-p11538,445833
(defvar org-refile-target-table nilorg-refile-target-table11549,446240
(defvar org-agenda-new-buffers nilorg-agenda-new-buffers11552,446335
(defvar org-refile-cache nilorg-refile-cache11555,446415
(defvar org-refile-markers nilorg-refile-markers11558,446476
(defun org-refile-marker (pos)org-refile-marker11561,446564
(defun org-refile-cache-clear ()org-refile-cache-clear11570,446799
(defun org-refile-cache-check-set (set)org-refile-cache-check-set11577,447057
(defun org-refile-cache-put (set &rest identifiers)org-refile-cache-put11589,447486
(defun org-refile-cache-get (&rest identifiers)org-refile-cache-get11597,447780
(defvar org-outline-path-cache nilorg-outline-path-cache11607,448155
(defun org-refile-get-targets (&optional default-buffer excluded-entries)org-refile-get-targets11614,448444
(defun org-protect-slash (s)org-protect-slash11705,451724
(defun org--get-outline-path-1 (&optional use-cache)org--get-outline-path-111710,451830
(defun org-get-outline-path (&optional with-self use-cache)org-get-outline-path11741,453003
(defun org-format-outline-path (path &optional width prefix separator)org-format-outline-path11764,453968
(defun org-display-outline-path (&optional file current separator just-return-string)org-display-outline-path11795,455084
(defvar org-refile-history nilorg-refile-history11823,456154
(defvar org-after-refile-insert-hook nilorg-after-refile-insert-hook11826,456224
(defvar org-capture-last-stored-marker)org-capture-last-stored-marker11831,456427
(defvar org-refile-keep nilorg-refile-keep11832,456467
(defun org-copy ()org-copy11835,456557
(defun org-refile (&optional arg default-buffer rfloc msg)org-refile11841,456702
(defun org-refile-goto-last-stored ()org-refile-goto-last-stored12018,463255
(defun org-refile--get-location (refloc tbl)org-refile--get-location12024,463490
(defun org-refile-get-location (&optional prompt default-buffer new-nodesorg-refile-get-location12035,463858
(defun org-refile-check-position (refile-pointer)org-refile-check-position12115,467028
(defun org-refile-new-child (parent-target child)org-refile-new-child12137,467820
(defun org-olpath-completing-read (prompt collection &rest args)org-olpath-completing-read12163,468657
(defun org-find-dblock (name)org-find-dblock12190,469516
(defun org-create-dblock (plist)org-create-dblock12202,469935
(defun org-prepare-dblock ()org-prepare-dblock12218,470527
(defun org-map-dblocks (&optional command)org-map-dblocks12243,471467
(defun org-dblock-update (&optional arg)org-dblock-update12258,472066
(defun org-update-dblock ()org-update-dblock12269,472404
(defun org-beginning-of-dblock ()org-beginning-of-dblock12300,473439
(defun org-update-all-dblocks ()org-update-all-dblocks12314,473875
(defun org-get-export-keywords ()org-get-export-keywords12325,474163
(defconst org-options-keywordsorg-options-keywords12339,474764
(defcustom org-structure-template-alistorg-structure-template-alist12346,475161
(defun org-try-structure-completion ()org-try-structure-completion12379,476487
(defun org-complete-expand-structure-template (start cell)org-complete-expand-structure-template12392,476993
(defun org-toggle-comment ()org-toggle-comment12419,477807
(defvar org-last-todo-state-is-todo nilorg-last-todo-state-is-todo12436,478388
(defvar org-setting-tags nil) ; dynamically skippedorg-setting-tags12441,478582
(defvar org-todo-setup-filter-hook nilorg-todo-setup-filter-hook12443,478635
(defvar org-todo-get-default-hook nilorg-todo-get-default-hook12448,478828
(defvar org-agenda-headline-snapshot-before-repeat)org-agenda-headline-snapshot-before-repeat12453,479041
(defun org-current-effective-time ()org-current-effective-time12455,479094
(defun org-todo-yesterday (&optional arg)org-todo-yesterday12468,479545
(defvar org-block-entry-blocking ""org-block-entry-blocking12479,479921
(defun org-cancel-repeater ()org-cancel-repeater12482,480009
(defun org-todo (&optional arg)org-todo12497,480548
(defun org-block-todo-from-children-or-siblings-or-parent (change-plist)org-block-todo-from-children-or-siblings-or-parent12735,490378
(defcustom org-track-ordered-property-with-tag nilorg-track-ordered-property-with-tag12803,493348
(defun org-toggle-ordered-property ()org-toggle-ordered-property12822,494191
(defvar org-blocked-by-checkboxes) ; dynamically scopedorg-blocked-by-checkboxes12840,494893
(defun org-block-todo-from-checkboxes (change-plist)org-block-todo-from-checkboxes12841,494949
(defun org-entry-blocked-p ()org-entry-blocked-p12875,496244
(defun org-update-statistics-cookies (all)org-update-statistics-cookies12886,496595
(defvar org-entry-property-inherited-from) ;; defined beloworg-entry-property-inherited-from12925,497923
(defun org-update-parent-todo-statistics ()org-update-parent-todo-statistics12926,497983
(defvar org-after-todo-statistics-hook nilorg-after-todo-statistics-hook13021,501999
(defvar org-todo-statistics-hook nilorg-todo-statistics-hook13037,502732
(defun org-todo-trigger-tag-changes (state)org-todo-trigger-tag-changes13042,502971
(defun org-local-logging (value)org-local-logging13057,503640
(defun org-get-todo-sequence-head (kwd)org-get-todo-sequence-head13073,504229
(defun org-fast-todo-selection ()org-fast-todo-selection13089,504799
(defun org-entry-is-todo-p ()org-entry-is-todo-p13156,506847
(defun org-entry-is-done-p ()org-entry-is-done-p13159,506933
(defun org-get-todo-state ()org-get-todo-state13162,507015
(defun org-at-date-range-p (&optional inactive-ok)org-at-date-range-p13170,507224
(defun org-get-repeat (&optional tagline)org-get-repeat13195,508004
(defvar org-last-changed-timestamp)org-last-changed-timestamp13206,508369
(defvar org-last-inserted-timestamp)org-last-inserted-timestamp13207,508405
(defvar org-log-post-message)org-log-post-message13208,508442
(defvar org-log-note-purpose)org-log-note-purpose13209,508472
(defvar org-log-note-how nil)org-log-note-how13210,508502
(defvar org-log-note-extra)org-log-note-extra13211,508532
(defun org-auto-repeat-maybe (done-word)org-auto-repeat-maybe13212,508560
(defun org-show-todo-tree (arg)org-show-todo-tree13295,512464
(defun org-deadline (arg &optional time)org-deadline13319,513476
(defun org-schedule (arg &optional time)org-schedule13390,516252
(defun org-get-scheduled-time (pom &optional inherit)org-get-scheduled-time13462,519047
(defun org-get-deadline-time (pom &optional inherit)org-get-deadline-time13470,519371
(defun org-remove-timestamp-with-keyword (keyword)org-remove-timestamp-with-keyword13478,519687
(defvar org-time-was-given) ; dynamically scoped parameterorg-time-was-given13496,520356
(defvar org-end-time-was-given) ; dynamically scoped parameterorg-end-time-was-given13497,520415
(defun org-at-planning-p ()org-at-planning-p13499,520479
(defun org-add-planning-info (what &optional time &rest remove)org-add-planning-info13513,521002
(defvar org-log-note-marker (make-marker))org-log-note-marker13610,524593
(defvar org-log-note-purpose nil)org-log-note-purpose13611,524636
(defvar org-log-note-state nil)org-log-note-state13612,524670
(defvar org-log-note-previous-state nil)org-log-note-previous-state13613,524702
(defvar org-log-note-extra nil)org-log-note-extra13614,524743
(defvar org-log-note-window-configuration nil)org-log-note-window-configuration13615,524775
(defvar org-log-note-return-to (make-marker))org-log-note-return-to13616,524822
(defvar org-log-note-effective-time nilorg-log-note-effective-time13617,524868
(defvar org-log-post-message nilorg-log-post-message13622,525033
(defun org-add-note ()org-add-note13626,525159
(defun org-log-beginning (&optional create)org-log-beginning13632,525346
(defun org-add-log-setup (&optional purpose state prev-state findpos how extra)org-add-log-setup13669,526766
(defun org-skip-over-state-notes ()org-skip-over-state-notes13695,527914
(defun org-add-log-note (&optional purpose)org-add-log-note13718,528691
(defvar org-note-abort nil) ; dynamically scopedorg-note-abort13757,530364
(defun org-store-log-note ()org-store-log-note13758,530413
(defun org-remove-empty-drawer-at (pos)org-remove-empty-drawer-at13848,534059
(defvar org-ts-type nil)org-ts-type13863,534677
(defun org-sparse-tree (&optional arg type)org-sparse-tree13864,534702
(defvar org-occur-highlights nilorg-occur-highlights13918,537079
(defvar org-occur-parameters nilorg-occur-parameters13921,537209
(defun org-occur (regexp &optional keep-previous callback)org-occur13933,537815
(defun org-occur-next-match (&optional n reset)org-occur-next-match13977,539638
(defun org-show-context (&optional key)org-show-context14003,540505
(defun org-show-set-visibility (detail)org-show-set-visibility14013,540916
(defvar org-reveal-start-hook nilorg-reveal-start-hook14041,542006
(defun org-reveal (&optional siblings)org-reveal14044,542084
(defun org-highlight-new-match (beg end)org-highlight-new-match14067,542947
(defun org-remove-occur-highlights (&optional beg end noremove)org-remove-occur-highlights14074,543228
(defvar org-priority-regexp ".*?\\(\\[#\\([A-Z0-9]\\)\\] ?\\)"org-priority-regexp14089,543770
(defvar org-remove-priority-next-time nil)org-remove-priority-next-time14092,543891
(defun org-priority-up ()org-priority-up14094,543935
(defun org-priority-down ()org-priority-down14099,544047
(defun org-priority (&optional action show)org-priority14104,544163
(defun org-show-priority ()org-show-priority14188,547161
(defun org-get-priority (s)org-get-priority14202,547684
(defvar org-agenda-archives-mode)org-agenda-archives-mode14214,548061
(defvar org-map-continue-from nilorg-map-continue-from14215,548095
(defvar org-scanner-tags nilorg-scanner-tags14219,548256
(defvar org-trust-scanner-tags nilorg-trust-scanner-tags14221,548346
(defun org-scan-tags (action matcher todo-only &optional start-level)org-scan-tags14232,548926
(defun org-remove-uninherited-tags (tags)org-remove-uninherited-tags14391,554908
(defun org-match-sparse-tree (&optional todo-only match)org-match-sparse-tree14412,555575
(defalias 'org-tags-sparse-tree 'org-match-sparse-tree)org-tags-sparse-tree14422,556021
(defvar org-cached-props nil)org-cached-props14424,556078
(defun org-cached-entry-get (pom property)org-cached-entry-get14425,556108
(defun org-global-tags-completion-table (&optional files)org-global-tags-completion-table14440,556758
(defun org-make-tags-matcher (match)org-make-tags-matcher14459,557351
(defun org-tags-expand (match &optional single-as-list downcased tags-already-expanded)org-tags-expand14617,563586
(defun org-op-to-function (op &optional stringp)org-op-to-function14759,568600
(defun org<> (a b) (not (= a b)))org<>14771,569146
(defun org-string<= (a b) (or (string= a b) (string< a b)))org-string<=14772,569180
(defun org-string>= (a b) (not (string< a b)))org-string>=14773,569240
(defun org-string>  (a b) (and (not (string= a b)) (not (string< a b))))org-string>14774,569287
(defun org-string<> (a b) (not (string= a b)))org-string<>14775,569360
(defun org-time=  (a b) (setq a (org-2ft a) b (org-2ft b)) (and (> a 0) (> b 0) (=     a b)))org-time=14776,569407
(defun org-time<  (a b) (setq a (org-2ft a) b (org-2ft b)) (and (> a 0) (> b 0) (<     a b)))org-time<14777,569501
(defun org-time<= (a b) (setq a (org-2ft a) b (org-2ft b)) (and (> a 0) (> b 0) (<=    a b)))org-time<=14778,569595
(defun org-time>  (a b) (setq a (org-2ft a) b (org-2ft b)) (and (> a 0) (> b 0) (>     a b)))org-time>14779,569689
(defun org-time>= (a b) (setq a (org-2ft a) b (org-2ft b)) (and (> a 0) (> b 0) (>=    a b)))org-time>=14780,569783
(defun org-time<> (a b) (setq a (org-2ft a) b (org-2ft b)) (and (> a 0) (> b 0) (org<> a b)))org-time<>14781,569877
(defun org-2ft (s)org-2ft14782,569971
(defun org-time-today ()org-time-today14794,570337
(defun org-matcher-time (s)org-matcher-time14801,570589
(defun org-match-any-p (re list)org-match-any-p14817,571174
(defvar org-add-colon-after-tag-completion nil)  ;; dynamically scoped paramorg-add-colon-after-tag-completion14822,571327
(defvar org-tags-overlay (make-overlay 1 1))org-tags-overlay14823,571404
(defun org-get-local-tags-at (&optional pos)org-get-local-tags-at14826,571488
(defun org-get-local-tags ()org-get-local-tags14830,571622
(defun org-get-tags-at (&optional pos local)org-get-tags-at14834,571740
(defun org-add-prop-inherited (s)org-add-prop-inherited14882,573248
(defun org-toggle-tag (tag &optional onoff)org-toggle-tag14886,573342
(defun org-align-tags-here (to-col)org-align-tags-here14918,574368
(defun org-set-tags-command (&optional arg just-align)org-set-tags-command14942,575206
(defun org-set-tags-to (data)org-set-tags-to14953,575613
(defun org-align-all-tags ()org-align-all-tags14984,576596
(defvar org-indent-indentation-per-level)org-indent-indentation-per-level14994,576847
(defun org-set-tags (&optional arg just-align)org-set-tags14995,576889
(defun org-change-tag-in-region (beg end tag off)org-change-tag-in-region15116,581230
(defun org-tags-completion-function (string predicate &optional flag)org-tags-completion-function15157,582751
(defun org-fast-tag-insert (kwd tags face &optional end)org-fast-tag-insert15182,583554
(defun org-fast-tag-show-exit (flag)org-fast-tag-show-exit15189,583812
(defun org-set-current-tags-overlay (current prefix)org-set-current-tags-overlay15199,584148
(defvar org-last-tag-selection-key nil)org-last-tag-selection-key15208,584571
(defun org-fast-tag-selection (current inherited table &optional todo-table)org-fast-tag-selection15209,584611
(defun org-get-tags-string ()org-get-tags-string15412,591700
(defun org-get-tags ()org-get-tags15422,592012
(defun org-get-buffer-tags ()org-get-buffer-tags15426,592144
(defun org-map-entries (func &optional match scope &rest skip)org-map-entries15441,592653
(defconst org-special-propertiesorg-special-properties15574,598121
(defconst org-default-propertiesorg-default-properties15581,598442
(defun org--valid-property-p (property)org--valid-property-p15592,599020
(defun org--update-property-plist (key val props)org--update-property-plist15598,599201
(defun org-get-property-block (&optional beg force)org-get-property-block15608,599615
(defun org-at-property-p ()org-at-property-p15635,600683
(defun org-property-action ()org-property-action15646,601070
(defun org-inc-effort ()org-inc-effort15659,601635
(defvar org-clock-effort)       ; Defined in org-clock.el.org-clock-effort15664,601772
(defvar org-clock-current-task) ; Defined in org-clock.el.org-clock-current-task15665,601831
(defun org-set-effort (&optional value increment)org-set-effort15666,601890
(defun org-entry-properties (&optional pom which)org-entry-properties15719,603822
(defun org-property--local-values (property literal-nil)org-property--local-values15921,611858
(defun org-entry-get (pom property &optional inherit literal-nil)org-entry-get15946,612848
(defun org-property-or-variable-value (var &optional inherit)org-property-or-variable-value15977,614332
(defun org-entry-delete (pom property)org-entry-delete15985,614695
(defun org-entry-add-to-multivalued-property (pom property value)org-entry-add-to-multivalued-property16010,615745
(defun org-entry-remove-from-multivalued-property (pom property value)org-entry-remove-from-multivalued-property16020,616195
(defun org-entry-member-in-multivalued-property (pom property value)org-entry-member-in-multivalued-property16030,616642
(defun org-entry-get-multivalued-property (pom property)org-entry-get-multivalued-property16037,616965
(defun org-entry-put-multivalued-property (pom property &rest values)org-entry-put-multivalued-property16043,617228
(defun org-entry-protect-space (s)org-entry-protect-space16052,617657
(defun org-entry-restore-space (s)org-entry-restore-space16060,617887
(defvar org-entry-property-inherited-from (make-marker)org-entry-property-inherited-from16068,618117
(defun org-entry-get-with-inheritance (property &optional literal-nil)org-entry-get-with-inheritance16076,618514
(defvar org-property-changed-functions nilorg-property-changed-functions16110,619838
(defun org-entry-put (pom property value)org-entry-put16115,620033
(defun org-buffer-property-keys (&optional specials defaults columns)org-buffer-property-keys16190,623098
(defun org-property-values (key)org-property-values16259,625658
(defun org-insert-property-drawer ()org-insert-property-drawer16270,625989
(defun org-insert-drawer (&optional arg drawer)org-insert-drawer16289,626786
(defvar org-property-set-functions-alist nilorg-property-set-functions-alist16347,628846
(defun org-set-property-function (property)org-set-property-function16356,629083
(defun org-read-property-value (property)org-read-property-value16362,629343
(defvar org-last-set-property nil)org-last-set-property16381,630072
(defvar org-last-set-property-value nil)org-last-set-property-value16382,630107
(defun org-read-property-name ()org-read-property-name16383,630148
(defun org-set-property-and-value (use-last)org-set-property-and-value16396,630575
(defun org-set-property (property value)org-set-property16413,631206
(defun org-find-property (property &optional value)org-find-property16439,632497
(defun org-delete-property (property)org-delete-property16459,633271
(defun org-delete-property-globally (property)org-delete-property-globally16476,633871
(defvar org-columns-current-fmt-compiled) ; defined in org-colview.elorg-columns-current-fmt-compiled16493,634511
(defun org-compute-property-at-point ()org-compute-property-at-point16495,634582
(defvar org-property-allowed-value-functions nilorg-property-allowed-value-functions16508,635129
(defun org-property-get-allowed-values (pom property &optional table)org-property-get-allowed-values16517,635591
(defun org-property-previous-allowed-value (&optional previous)org-property-previous-allowed-value16550,636815
(defun org-property-next-allowed-value (&optional previous)org-property-next-allowed-value16555,636991
(defun org-find-olp (path &optional this-buffer)org-find-olp16591,638387
(defun org-find-exact-headline-in-buffer (heading &optional buffer pos-only)org-find-exact-headline-in-buffer16636,640018
(defun org-find-exact-heading-in-directory (heading &optional dir)org-find-exact-heading-in-directory16656,640752
(defun org-find-entry-with-id (ident)org-find-entry-with-id16672,641459
(defvar org-last-changed-timestamp nil)org-last-changed-timestamp16687,642072
(defvar org-last-inserted-timestamp nilorg-last-inserted-timestamp16688,642112
(defvar org-ts-what) ; dynamically scoped parameterorg-ts-what16690,642216
(defun org-time-stamp (arg &optional inactive)org-time-stamp16692,642269
(defun org-get-compact-tod (s)org-get-compact-tod16763,645001
(defun org-time-stamp-inactive (&optional arg)org-time-stamp-inactive16779,645635
(defvar org-date-ovl (make-overlay 1 1))org-date-ovl16788,646052
(defvar org-ans1) ; dynamically scoped parameterorg-ans116792,646180
(defvar org-ans2) ; dynamically scoped parameterorg-ans216793,646229
(defvar org-plain-time-of-day-regexp) ; defined beloworg-plain-time-of-day-regexp16795,646279
(defvar org-overriding-default-time nil) ; dynamically scopedorg-overriding-default-time16797,646334
(defvar org-read-date-overlay nil)org-read-date-overlay16798,646396
(defvar org-dcst nil) ; dynamically scopedorg-dcst16799,646431
(defvar org-read-date-history nil)org-read-date-history16800,646474
(defvar org-read-date-final-answer nil)org-read-date-final-answer16801,646509
(defvar org-read-date-analyze-futurep nil)org-read-date-analyze-futurep16802,646549
(defvar org-read-date-analyze-forced-year nil)org-read-date-analyze-forced-year16803,646592
(defvar org-read-date-inactive)org-read-date-inactive16804,646639
(defvar org-read-date-minibuffer-local-maporg-read-date-minibuffer-local-map16806,646672
(defvar org-def)org-def16877,649869
(defvar org-defdecode)org-defdecode16878,649886
(defvar org-with-time)org-with-time16879,649909
(defun org-read-date (&optional org-with-time to-time from-string promptorg-read-date16881,649933
(defun org-read-date-display ()org-read-date-display17035,656439
(defun org-read-date-analyze (ans org-def org-defdecode)org-read-date-analyze17072,657907
(defvar parse-time-weekdays)parse-time-weekdays17289,666956
(defun org-read-date-get-relative (s today default)org-read-date-get-relative17290,666985
(defun org-order-calendar-date-args (arg1 arg2 arg3)org-order-calendar-date-args17329,668523
(defun org-eval-in-calendar (form &optional keepdate)org-eval-in-calendar17347,669287
(defun org-calendar-select ()org-calendar-select17362,669975
(defun org-insert-time-stamp (time &optional with-hm inactive pre post extra)org-insert-time-stamp17372,670430
(defun org-toggle-time-stamp-overlays ()org-toggle-time-stamp-overlays17399,671665
(defun org-display-custom-time (beg end)org-display-custom-time17420,672519
(defun org-fix-decoded-time (time)org-fix-decoded-time17447,673595
(define-obsolete-function-alias 'org-days-to-time 'org-time-stamp-to-now "24.4")org-days-to-time17453,673798
(defun org-time-stamp-to-now (timestamp-string &optional seconds)org-time-stamp-to-now17455,673880
(defun org-deadline-close (timestamp-string &optional ndays)org-deadline-close17462,674228
(defun org-get-wdays (ts &optional delay zero-delay)org-get-wdays17468,674508
(defun org-calendar-select-mouse (ev)org-calendar-select-mouse17492,675458
(defun org-check-deadlines (ndays)org-check-deadlines17503,675948
(defsubst org-re-timestamp (type)org-re-timestamp17523,676803
(defun org-check-before-date (date)org-check-before-date17548,677598
(defun org-check-after-date (date)org-check-after-date17568,678261
(defun org-check-dates-range (start-date end-date)org-check-dates-range17588,678923
(defun org-evaluate-time-range (&optional to-buffer)org-evaluate-time-range17613,679825
(defun org-make-tdiff-string (y d h m)org-make-tdiff-string17677,682124
(defun org-time-string-to-time (s &optional buffer pos)org-time-string-to-time17690,682616
(defun org-time-string-to-seconds (s)org-time-string-to-seconds17700,682981
(defun org-time-string-to-absolute (s &optional daynr prefer show-all buffer pos)org-time-string-to-absolute17704,683123
(defun org-days-to-iso-week (days)org-days-to-iso-week17729,684162
(defun org-small-year-to-year (year)org-small-year-to-year17734,684294
(defun org-time-from-absolute (d)org-time-from-absolute17746,684830
(defun org-calendar-holiday ()org-calendar-holiday17752,685101
(defun org-diary-sexp-entry (sexp entry date)org-diary-sexp-entry17760,685380
(defun org-diary-to-ical-string (frombuf)org-diary-to-ical-string17782,686187
(defun org-closest-date (start current change prefer show-all)org-closest-date17806,687032
(defun org-date-to-gregorian (date)org-date-to-gregorian17888,690196
(defun org-parse-time-string (s &optional nodefault)org-parse-time-string17898,690596
(defun org-timestamp-up (&optional arg)org-timestamp-up17917,691453
(defun org-timestamp-down (&optional arg)org-timestamp-down17925,691777
(defun org-timestamp-up-day (&optional arg)org-timestamp-up-day17933,692107
(defun org-timestamp-down-day (&optional arg)org-timestamp-down-day17942,692418
(defun org-at-timestamp-p (&optional inactive-ok)org-at-timestamp-p17951,692737
(defun org-toggle-timestamp-type ()org-toggle-timestamp-type17990,694089
(defun org-at-clock-log-p nilorg-at-clock-log-p18004,694608
(defvar org-clock-history)                     ; defined in org-clock.elorg-clock-history18010,694766
(defvar org-clock-adjust-closest nil)          ; defined in org-clock.elorg-clock-adjust-closest18011,694839
(defun org-timestamp-change (n &optional what updown suppress-tmp-delay)org-timestamp-change18012,694912
(defun org-modify-ts-extra (s pos n dm)org-modify-ts-extra18148,700932
(defun org-recenter-calendar (date)org-recenter-calendar18185,702455
(defun org-goto-calendar (&optional arg)org-goto-calendar18194,702773
(defun org-get-date-from-calendar ()org-get-date-from-calendar18215,703516
(defun org-date-from-calendar ()org-date-from-calendar18221,703711
(defcustom org-effort-durationsorg-effort-durations18231,704132
(defun org-minutes-to-clocksum-string (m)org-minutes-to-clocksum-string18254,704827
(defalias 'org-minutes-to-hh:mm-string 'org-minutes-to-clocksum-string)org-minutes-to-hh:mm-string18343,709121
(defun org-hours-to-clocksum-string (n)org-hours-to-clocksum-string18347,709302
(defun org-hh:mm-string-to-minutes (s)org-hh:mm-string-to-minutes18350,709388
(defcustom org-image-actual-width torg-image-actual-width18365,709951
(defcustom org-agenda-inhibit-startup nilorg-agenda-inhibit-startup18393,710861
(defcustom org-agenda-ignore-properties nilorg-agenda-ignore-properties18406,711282
(defun org-duration-string-to-minutes (s &optional output-to-string)org-duration-string-to-minutes18423,711895
(defun org-save-all-org-buffers ()org-save-all-org-buffers18445,712685
(defun org-revert-all-org-buffers ()org-revert-all-org-buffers18453,713005
(defun org-switchb (&optional arg)org-switchb18484,714061
(defalias 'org-ido-switchb 'org-switchb)org-ido-switchb18506,715031
(defalias 'org-iswitchb 'org-switchb)org-iswitchb18508,715087
(defun org-buffer-list (&optional predicate exclude-tmp)org-buffer-list18510,715126
(defun org-agenda-files (&optional unrestricted archives)org-agenda-files18548,716362
(defun org-agenda-file-p (&optional file)org-agenda-file-p18579,717492
(defun org-edit-agenda-file-list ()org-edit-agenda-file-list18588,717818
(defun org-store-new-agenda-file-list (list)org-store-new-agenda-file-list18611,718743
(defun org-read-agenda-file-list (&optional pair-with-expansion)org-read-agenda-file-list18631,719406
(defun org-cycle-agenda-files ()org-cycle-agenda-files18651,720141
(defun org-agenda-file-to-front (&optional to-end)org-agenda-file-to-front18667,720776
(defun org-remove-file (&optional file)org-remove-file18692,721804
(defun org-file-menu-entry (file)org-file-menu-entry18715,722697
(defun org-check-agenda-file (file)org-check-agenda-file18718,722774
(defun org-get-agenda-file-buffer (file)org-get-agenda-file-buffer18730,723177
(defun org-release-buffers (blist)org-release-buffers18742,723589
(defun org-agenda-prepare-buffers (files)org-agenda-prepare-buffers18755,724062
(defvar org-cdlatex-mode-map (make-sparse-keymap)org-cdlatex-mode-map18828,726879
(defvar org-cdlatex-texmathp-advice-is-done nilorg-cdlatex-texmathp-advice-is-done18837,727309
(define-minor-mode org-cdlatex-modeorg-cdlatex-mode18840,727431
(defun turn-on-org-cdlatex ()turn-on-org-cdlatex18872,728637
(defun org-try-cdlatex-tab ()org-try-cdlatex-tab18876,728740
(defun org-cdlatex-underscore-caret (&optional arg)org-cdlatex-underscore-caret18895,729534
(defun org-cdlatex-math-modify (&optional arg)org-cdlatex-math-modify18904,729911
(defun org-cdlatex-environment-indent (&optional environment item)org-cdlatex-environment-indent18913,730275
(defun org-inside-LaTeX-fragment-p ()org-inside-LaTeX-fragment-p18973,732321
(defun org-inside-latex-macro-p ()org-inside-latex-macro-p19017,734282
(defun org--format-latex-make-overlay (beg end image)org--format-latex-make-overlay19023,734484
(defun org--list-latex-overlays (&optional beg end)org--list-latex-overlays19040,735083
(defun org-remove-latex-fragment-image-overlays (&optional beg end)org-remove-latex-fragment-image-overlays19047,735406
(defun org-toggle-latex-fragment (&optional arg)org-toggle-latex-fragment19058,735912
(defun org-format-latexorg-format-latex19134,739076
(defun org-create-math-formula (latex-frag &optional mathml-file)org-create-math-formula19248,743336
(defun org-format-latex-as-mathml (latex-frag latex-frag-typeorg-format-latex-as-mathml19310,745810
(defun org-create-formula-image (string tofile options buffer &optional type)org-create-formula-image19340,746947
(defun org-create-formula--latex-header ()org-create-formula--latex-header19370,748342
(defun org--get-display-dpi ()org--get-display-dpi19385,748899
(defun org-create-formula-image-with-dvipng (string tofile options buffer)org-create-formula-image-with-dvipng19396,749283
(defun org-create-formula-image-with-imagemagick (string tofile options buffer)org-create-formula-image-with-imagemagick19457,751670
(defun org-splice-latex-header (tpl def-pkg pkg snippets-p &optional extra)org-splice-latex-header19523,753972
(defun org-latex-packages-to-string (pkg &optional snippets-p newline)org-latex-packages-to-string19566,755786
(defun org-dvipng-color (attr)org-dvipng-color19582,756312
(defun org-dvipng-color-format (color-name)org-dvipng-color-format19593,756700
(defun org-latex-color (attr)org-latex-color19599,756896
(defun org-latex-color-format (color-name)org-latex-color-format19610,757282
(defun org-normalize-color (value)org-normalize-color19616,757462
(defvar org-inline-image-overlays nil)org-inline-image-overlays19624,757620
(defun org-toggle-inline-images (&optional include-linked)org-toggle-inline-images19627,757716
(defun org-redisplay-inline-images ()org-redisplay-inline-images19643,758331
(defun org-display-inline-images (&optional include-linked refresh beg end)org-display-inline-images19651,758563
(defun org-display-inline-remove-overlay (ov after beg end &optional len)org-display-inline-remove-overlay19765,762621
(defun org-remove-inline-images ()org-remove-inline-images19772,762907
(define-key org-mode-map [remap outline-mark-subtree] 'org-mark-subtree)org-mode-map19782,763190
(define-key org-mode-map [remap outline-show-subtree] 'org-show-subtree)org-mode-map19783,763263
(define-key org-mode-map [remap outline-forward-same-level]org-mode-map19784,763336
(define-key org-mode-map [remap outline-backward-same-level]org-mode-map19786,763431
(define-key org-mode-map [remap outline-show-branches]org-mode-map19788,763528
(define-key org-mode-map [remap outline-promote] 'org-promote-subtree)org-mode-map19790,763618
(define-key org-mode-map [remap outline-demote] 'org-demote-subtree)org-mode-map19791,763689
(define-key org-mode-map [remap outline-insert-heading] 'org-ctrl-c-ret)org-mode-map19792,763758
(define-key org-mode-map [remap outline-next-visible-heading]org-mode-map19793,763831
(define-key org-mode-map [remap outline-previous-visible-heading]org-mode-map19795,763922
(define-key org-mode-map [backtab] 'org-shifttab)org-mode-map19838,766444
(define-key org-mode-map org-babel-key-prefix org-babel-map)org-mode-map19868,767938
(define-key org-mode-map "\C-c\C-x\C-c" 'org-columns)org-mode-map20047,778191
(define-key org-mode-map "\C-c\C-x!" 'org-reload)org-mode-map20049,778246
(define-key org-mode-map "\C-c\C-xg" 'org-feed-update-all)org-mode-map20051,778297
(define-key org-mode-map "\C-c\C-xG" 'org-feed-goto-inbox)org-mode-map20052,778356
(define-key org-mode-map "\C-c\C-x[" 'org-reftex-citation)org-mode-map20054,778416
(defconst org-speed-commands-defaultorg-speed-commands-default20061,778561
(defun org-print-speed-command (e)org-print-speed-command20119,780442
(defun org-speed-command-help ()org-speed-command-help20134,780760
(defun org-speed-move-safe (cmd)org-speed-move-safe20148,781371
(defvar org-self-insert-command-undo-counter 0)org-self-insert-command-undo-counter20158,781735
(defvar org-table-auto-blank-field) ; defined in org-table.elorg-table-auto-blank-field20160,781784
(defvar org-speed-command nil)org-speed-command20161,781846
(defun org-speed-command-activate (keys)org-speed-command-activate20166,781981
(defun org-babel-speed-command-activate (keys)org-babel-speed-command-activate20179,782536
(defcustom org-speed-command-hookorg-speed-command-hook20184,782752
(defun org-self-insert-command (N)org-self-insert-command20203,783474
(defun org-check-before-invisible-edit (kind)org-check-before-invisible-edit20262,785820
(defun org-fix-tags-on-the-fly ()org-fix-tags-on-the-fly20311,788231
(defun org-delete-backward-char (N)org-delete-backward-char20316,788388
(defun org-delete-char (N)org-delete-char20344,789490
(defun org-remap (map &rest commands)org-remap20394,791525
(defun org-transpose-words ()org-transpose-words20404,791905
(defvar org-ctrl-c-ctrl-c-hook nilorg-ctrl-c-ctrl-c-hook20423,792660
(defvar org-ctrl-c-ctrl-c-final-hook nilorg-ctrl-c-ctrl-c-final-hook20436,793215
(defvar org-tab-first-hook nilorg-tab-first-hook20449,793771
(defvar org-tab-after-check-for-table-hook nilorg-tab-after-check-for-table-hook20459,794242
(defvar org-tab-after-check-for-cycling-hook nilorg-tab-after-check-for-cycling-hook20468,794658
(defvar org-tab-before-tab-emulation-hook nilorg-tab-before-tab-emulation-hook20475,795020
(defvar org-metaleft-hook nilorg-metaleft-hook20481,795294
(defvar org-metaright-hook nilorg-metaright-hook20484,795433
(defvar org-metaup-hook nilorg-metaup-hook20487,795574
(defvar org-metadown-hook nilorg-metadown-hook20490,795709
(defvar org-shiftmetaleft-hook nilorg-shiftmetaleft-hook20493,795848
(defvar org-shiftmetaright-hook nilorg-shiftmetaright-hook20496,795994
(defvar org-shiftmetaup-hook nilorg-shiftmetaup-hook20499,796142
(defvar org-shiftmetadown-hook nilorg-shiftmetadown-hook20502,796284
(defvar org-metareturn-hook nilorg-metareturn-hook20505,796430
(defvar org-shiftup-hook nilorg-shiftup-hook20508,796570
(defvar org-shiftup-final-hook nilorg-shiftup-final-hook20511,796706
(defvar org-shiftdown-hook nilorg-shiftdown-hook20515,796926
(defvar org-shiftdown-final-hook nilorg-shiftdown-final-hook20518,797066
(defvar org-shiftleft-hook nilorg-shiftleft-hook20522,797290
(defvar org-shiftleft-final-hook nilorg-shiftleft-final-hook20525,797430
(defvar org-shiftright-hook nilorg-shiftright-hook20529,797654
(defvar org-shiftright-final-hook nilorg-shiftright-final-hook20532,797796
(defun org-modifier-cursor-error ()org-modifier-cursor-error20537,798023
(defun org-shiftselect-error ()org-shiftselect-error20541,798228
(defun org-call-for-shift-select (cmd)org-call-for-shift-select20547,798586
(defun org-shifttab (&optional arg)org-shifttab20551,798705
(defun org-shiftmetaleft ()org-shiftmetaleft20567,799379
(defun org-shiftmetaright ()org-shiftmetaright20583,800048
(defun org-shiftmetaup (&optional arg)org-shiftmetaup20599,800714
(defun org-shiftmetadown (&optional arg)org-shiftmetadown20613,801312
(defsubst org-hidden-tree-error ()org-hidden-tree-error20627,801942
(defun org-metaleft (&optional arg)org-metaleft20631,802071
(defun org-metaright (&optional arg)org-metaright20665,803318
(defun org-check-for-hidden (what)org-check-for-hidden20703,804781
(defun org-metaup (&optional arg)org-metaup20730,805730
(defun org-metadown (&optional arg)org-metadown20752,806608
(defun org-shiftup (&optional arg)org-shiftup20774,807498
(defun org-shiftdown (&optional arg)org-shiftdown20798,808546
(defun org-shiftright (&optional arg)org-shiftright20822,809591
(defun org-shiftleft (&optional arg)org-shiftleft20858,811185
(defun org-shiftcontrolright ()org-shiftcontrolright20894,812796
(defun org-shiftcontrolleft ()org-shiftcontrolleft20907,813214
(defun org-shiftcontrolup (&optional n)org-shiftcontrolup20920,813641
(defun org-shiftcontroldown (&optional n)org-shiftcontroldown20929,813981
(defun org-increase-number-at-point (&optional inc)org-increase-number-at-point20938,814327
(defun org-decrease-number-at-point (&optional inc)org-decrease-number-at-point20957,815019
(defun org-ctrl-c-ret ()org-ctrl-c-ret20964,815258
(defun org-find-visible ()org-find-visible20971,815504
(defun org-find-invisible ()org-find-invisible20976,815668
(defun org-copy-visible (beg end)org-copy-visible20982,815841
(defun org-copy-special ()org-copy-special20996,816285
(defun org-cut-special ()org-cut-special21004,816587
(defun org-paste-special (arg)org-paste-special21012,816883
(defsubst org-in-fixed-width-region-p ()org-in-fixed-width-region-p21021,817228
(defun org-edit-special (&optional arg)org-edit-special21026,817393
(defvar org-table-coordinate-overlays) ; defined in org-table.elorg-table-coordinate-overlays21086,820145
(defun org-ctrl-c-ctrl-c (&optional arg)org-ctrl-c-ctrl-c21087,820210
(defun org-mode-restart ()org-mode-restart21296,829274
(defun org-kill-note-or-show-branches ()org-kill-note-or-show-branches21305,829577
(defun org-delete-indentation (&optional ARG)org-delete-indentation21315,829901
(defun org-open-line (n)org-open-line21348,831007
(defun org-return (&optional indent)org-return21360,831312
(defun org-return-indent ()org-return-indent21425,834073
(defun org-ctrl-c-star ()org-ctrl-c-star21432,834317
(defun org-ctrl-c-minus ()org-ctrl-c-minus21444,834672
(defun org-toggle-item (arg)org-toggle-item21460,835215
(defun org-toggle-heading (&optional nstars)org-toggle-heading21602,840475
(defun org-meta-return (&optional _arg)org-meta-return21696,844137
(defsubst org-in-subtree-not-table-p ()org-in-subtree-not-table-p21708,844603
(defun org-info (&optional node)org-info21974,856324
(defun org-submit-bug-report ()org-submit-bug-report21981,856533
(defun org-install-agenda-files-menu ()org-install-agenda-files-menu22041,858993
(defun org-require-autoloaded-modules ()org-require-autoloaded-modules22062,859675
(defun org-reload (&optional uncompiled)org-reload22069,859861
(defun org-customize ()org-customize22124,861874
(defun org-create-customize-menu ()org-create-customize-menu22131,862058
(defsubst org-get-at-eol (property n)org-get-at-eol22155,862823
(defun org-find-text-property-in-string (prop s)org-find-text-property-in-string22159,862984
(defun org-display-warning (message) ;; Copied from Emacs-Museorg-display-warning22165,863219
(defun org-eval (form)org-eval22179,863715
(defun org-in-clocktable-p ()org-in-clocktable-p22185,863860
(defun org-in-verbatim-emphasis ()org-in-verbatim-emphasis22196,864208
(defun org-goto-marker-or-bmk (marker &optional bookmark)org-goto-marker-or-bmk22203,864408
(defun org-quote-csv-field (s)org-quote-csv-field22217,864903
(defun org-force-self-insert (N)org-force-self-insert22223,865097
(defun org-string-width (s)org-string-width22228,865229
(defun org-shorten-string (s maxlength)org-shorten-string22252,866273
(defun org-get-indentation (&optional line)org-get-indentation22269,867092
(defun org-get-string-indentation (s)org-get-string-indentation22280,867468
(defun org-remove-tabs (s &optional width)org-remove-tabs22291,867828
(defun org-fix-indentation (line ind)org-fix-indentation22303,868190
(defun org-remove-indentation (code &optional n)org-remove-indentation22316,868651
(defun org-do-remove-indentation (&optional n)org-do-remove-indentation22324,868913
(defun org-fill-template (template alist)org-fill-template22341,869459
(defun org-base-buffer (buffer)org-base-buffer22352,869872
(defun org-wrap (string &optional width lines)org-wrap22359,870062
(defun org-do-wrap (words width)org-do-wrap22384,871015
(defun org-split-string (string &optional separators)org-split-string22394,871373
(defun org-quote-vert (s)org-quote-vert22417,872276
(defun org-uuidgen-p (s)org-uuidgen-p22423,872418
(defun org-in-src-block-p (&optional inside)org-in-src-block-p22427,872599
(defun org-context ()org-context22439,873032
(defun org-in-regexp (regexp &optional nlines visually)org-in-regexp22559,877595
(define-obsolete-function-alias 'org-at-regexp-p 'org-in-regexporg-at-regexp-p22580,878479
(defun org-between-regexps-p (start-re end-re &optional lim-up lim-down)org-between-regexps-p22583,878562
(defun org-in-block-p (names)org-in-block-p22615,879797
(defun org-occur-in-agenda-files (regexp &optional _nlines)org-occur-in-agenda-files22638,880516
(defun org-occur-link-in-agenda-files ()org-occur-link-in-agenda-files22684,882150
(defun org-reverse-string (string)org-reverse-string22694,882509
(defun org-uniquify-alist (alist)org-uniquify-alist22700,882691
(defun org-delete-all (elts list)org-delete-all22723,883213
(defun org-count (cl-item cl-seq)org-count22729,883355
(defun org-remove-if (predicate seq)org-remove-if22740,883860
(defun org-remove-if-not (predicate seq)org-remove-if-not22748,884083
(defun org-reduce (cl-func cl-seq &rest cl-keys)org-reduce22756,884312
(defun org-every (pred seq)org-every22768,884808
(defun org-some (pred seq)org-some22775,885035
(defun org-back-over-empty-lines ()org-back-over-empty-lines22782,885254
(defun org-skip-whitespace ()org-skip-whitespace22794,885659
(defun org-point-in-group (point group &optional context)org-point-in-group22797,885724
(defun org-switch-to-buffer-other-window (&rest args)org-switch-to-buffer-other-window22809,886180
(defun org-combine-plists (&rest plists)org-combine-plists22816,886440
(defun org-replace-escapes (string table)org-replace-escapes22830,886927
(defun org-sublist (list start end)org-sublist22857,888209
(defun org-find-base-buffer-visiting (file)org-find-base-buffer-visiting22867,888486
(defun org-image-file-name-regexp (&optional extensions)org-image-file-name-regexp22876,888759
(defun org-file-image-p (file &optional extensions)org-file-image-p22892,889302
(defun org-get-cursor-date (&optional with-time)org-get-cursor-date22897,889480
(defun org-mark-subtree (&optional up)org-mark-subtree22925,890627
(defun org--get-expected-indentation (element contentsp)org--get-expected-indentation22943,891288
(defun org--align-node-property ()org--align-node-property23046,895473
(defun org-indent-line ()org-indent-line23058,895837
(defun org-indent-region (start end)org-indent-region23139,898831
(defun org-indent-drawer ()org-indent-drawer23246,902979
(defun org-indent-block ()org-indent-block23261,903508
(defvar org-element-paragraph-separate) ; org-element.elorg-element-paragraph-separate23297,904774
(defun org-setup-filling ()org-setup-filling23298,904831
(defun org-fill-line-break-nobreak-p ()org-fill-line-break-nobreak-p23317,905694
(defun org-fill-paragraph-with-timestamp-nobreak-p ()org-fill-paragraph-with-timestamp-nobreak-p23324,905936
(defvar orgtbl-line-start-regexp) ; From org-table.elorgtbl-line-start-regexp23330,906180
(defun org-adaptive-fill-function ()org-adaptive-fill-function23331,906234
(defvar message-cite-prefix-regexp)	; From message.elmessage-cite-prefix-regexp23400,908845
(defun org-fill-paragraph (&optional justify)org-fill-paragraph23401,908899
(defun org-auto-fill-function ()org-auto-fill-function23537,914233
(defun org-comment-line-break-function (&optional soft)org-comment-line-break-function23548,914661
(defun org-toggle-fixed-width ()org-toggle-fixed-width23562,915148
(defun org-setup-comments-handling ()org-setup-comments-handling23702,921009
(defun org-insert-comment ()org-insert-comment23711,921431
(defvar comment-empty-lines)		; From newcomment.el.comment-empty-lines23734,922251
(defun org-comment-or-uncomment-region (beg end &rest _)org-comment-or-uncomment-region23735,922303
(defun org-comment-dwim (arg)org-comment-dwim23801,924791
(defun org-timestamp--to-internal-time (timestamp &optional end)org-timestamp--to-internal-time23814,925178
(defun org-timestamp-has-time-p (timestamp)org-timestamp-has-time-p23825,925612
(defun org-timestamp-format (timestamp format &optional end utc)org-timestamp-format23829,925754
(defun org-timestamp-split-range (timestamp &optional end)org-timestamp-split-range23844,926202
(defun org-timestamp-translate (timestamp &optional boundary)org-timestamp-translate23875,927395
(defvar reftex-docstruct-symbol)reftex-docstruct-symbol23903,928427
(defvar reftex-cite-format)reftex-cite-format23904,928460
(defvar org--rds)org--rds23905,928488
(defun org-reftex-citation ()org-reftex-citation23907,928507
(defun org-beginning-of-line (&optional arg)org-beginning-of-line23939,929604
(defun org-end-of-line (&optional arg)org-end-of-line24007,932247
(define-key org-mode-map "\C-a" 'org-beginning-of-line)org-mode-map24048,933989
(define-key org-mode-map "\C-e" 'org-end-of-line)org-mode-map24049,934045
(defun org-backward-sentence (&optional _arg)org-backward-sentence24051,934096
(defun org-forward-sentence (&optional _arg)org-forward-sentence24071,934897
(define-key org-mode-map "\M-a" 'org-backward-sentence)org-mode-map24094,935810
(define-key org-mode-map "\M-e" 'org-forward-sentence)org-mode-map24095,935866
(defun org-kill-line (&optional _arg)org-kill-line24097,935922
(define-key org-mode-map "\C-k" 'org-kill-line)org-mode-map24116,936686
(defun org-yank (&optional arg)org-yank24118,936735
(defun org-yank-generic (command arg)org-yank-generic24147,938023
(defun org-yank-folding-would-swallow-text (beg end)org-yank-folding-would-swallow-text24205,939779
(define-key org-mode-map "\C-y" 'org-yank)org-mode-map24222,940373
(defun org-truely-invisible-p ()org-truely-invisible-p24224,940417
(defun org-invisible-p2 ()org-invisible-p224233,940739
(defun org-back-to-heading (&optional invisible-ok)org-back-to-heading24240,940994
(defun org-before-first-heading-p ()org-before-first-heading-p24247,941289
(defun org-at-heading-p (&optional ignored)org-at-heading-p24253,941452
(defalias 'org-on-heading-p 'org-at-heading-p)org-on-heading-p24256,941574
(defun org-in-commented-heading-p (&optional no-inheritance)org-in-commented-heading-p24258,941622
(defun org-at-comment-p nilorg-at-comment-p24273,942207
(defun org-at-drawer-p nilorg-at-drawer-p24280,942370
(defun org-at-block-p nilorg-at-block-p24286,942519
(defun org-point-at-end-of-empty-headline ()org-point-at-end-of-empty-headline24292,942665
(defun org-at-heading-or-item-p ()org-at-heading-or-item-p24304,943084
(defun org-at-target-p ()org-at-target-p24307,943163
(defalias 'org-on-target-p 'org-at-target-p)org-on-target-p24311,943327
(defun org-up-heading-all (arg)org-up-heading-all24313,943373
(defun org-up-heading-safe ()org-up-heading-safe24321,943759
(defun org-first-sibling-p ()org-first-sibling-p24335,944417
(defun org-goto-sibling (&optional previous)org-goto-sibling24349,944797
(defun org-show-siblings ()org-show-siblings24369,945529
(defun org-goto-first-child ()org-goto-first-child24377,945768
(defun org-show-hidden-entry ()org-show-hidden-entry24389,946234
(defun org-flag-heading (flag &optional entry)org-flag-heading24394,946360
(defun org-get-next-sibling ()org-get-next-sibling24410,946866
(defun org-get-last-sibling ()org-get-last-sibling24422,947305
(defun org-end-of-subtree (&optional invisible-ok to-heading)org-end-of-subtree24436,947765
(defun org-end-of-meta-data (&optional full)org-end-of-meta-data24471,949268
(defun org-forward-heading-same-level (arg &optional invisible-ok)org-forward-heading-same-level24494,950125
(defun org-backward-heading-same-level (arg &optional invisible-ok)org-backward-heading-same-level24527,951542
(defun org-next-visible-heading (arg)org-next-visible-heading24533,951832
(defun org-previous-visible-heading (arg)org-previous-visible-heading24543,952166
(defun org-next-block (arg &optional backward block-regexp)org-next-block24553,952516
(defun org-previous-block (arg &optional block-regexp)org-previous-block24592,953959
(defun org-forward-paragraph ()org-forward-paragraph24599,954234
(defun org-backward-paragraph ()org-backward-paragraph24682,958262
(defun org-forward-element ()org-forward-element24745,961138
(defun org-backward-element ()org-backward-element24765,961932
(defun org-up-element ()org-up-element24798,963214
(defvar org-element-greater-elements)org-element-greater-elements24810,963725
(defun org-down-element ()org-down-element24811,963763
(defun org-drag-element-backward ()org-drag-element-backward24826,964388
(defun org-drag-element-forward ()org-drag-element-forward24852,965389
(defun org-drag-line-forward (arg)org-drag-line-forward24886,966782
(defun org-drag-line-backward (arg)org-drag-line-backward24900,967129
(defun org-mark-element ()org-mark-element24905,967268
(defun org-narrow-to-element ()org-narrow-to-element24925,967982
(defun org-transpose-element ()org-transpose-element24943,968556
(defun org-unindent-buffer ()org-unindent-buffer24952,968859
(defun org-show-subtree ()org-show-subtree24977,969738
(defun org-show-entry ()org-show-entry24986,969932
(defun org-make-options-regexp (kwds &optional extra)org-make-options-regexp25003,970417
(defun org-isearch-end ()org-isearch-end25013,970804
(defun org-isearch-post-command ()org-isearch-post-command25029,971494
(defvar org-imenu-markers nilorg-imenu-markers25039,971746
(defun org-imenu-new-marker (&optional pos)org-imenu-new-marker25043,971867
(defun org-imenu-get-tree ()org-imenu-get-tree25050,972082
(defun org-link-display-format (s)org-link-display-format25086,973286
(defun org-toggle-link-display ()org-toggle-link-display25097,973640
(defvar org-speedbar-restriction-lock-overlay (make-overlay 1 1)org-speedbar-restriction-lock-overlay25110,974043
(defun org-speedbar-set-agenda-restriction ()org-speedbar-set-agenda-restriction25118,974438
(defvar speedbar-file-key-map)speedbar-file-key-map25152,975806
(defun org--flyspell-object-check-p (element)org--flyspell-object-check-p25166,976518
(defun org-mode-flyspell-verify ()org-mode-flyspell-verify25188,977365
(defun org-remove-flyspell-overlays-in (beg end)org-remove-flyspell-overlays-in25248,979774
(defvar flyspell-delayed-commands)flyspell-delayed-commands25254,980009
(defun org-bookmark-jump-unhide ()org-bookmark-jump-unhide25281,981074
(defun org-mark-jump-unhide ()org-mark-jump-unhide25289,981377
(defvar session-globals-exclude)session-globals-exclude25311,982180

elpa/org-20160620/ox-ascii.el,8135
(defgroup org-export-ascii nilorg-export-ascii150,5954
(defcustom org-ascii-text-width 72org-ascii-text-width155,6085
(defcustom org-ascii-global-margin 0org-ascii-global-margin164,6325
(defcustom org-ascii-inner-margin 2org-ascii-inner-margin171,6515
(defcustom org-ascii-quote-margin 6org-ascii-quote-margin179,6752
(defcustom org-ascii-list-margin 0org-ascii-list-margin187,6994
(defcustom org-ascii-inlinetask-width 30org-ascii-inlinetask-width196,7250
(defcustom org-ascii-headline-spacing '(1 . 2)org-ascii-headline-spacing204,7473
(defcustom org-ascii-indented-line-width 'autoorg-ascii-indented-line-width223,8177
(defcustom org-ascii-paragraph-spacing 'autoorg-ascii-paragraph-spacing237,8752
(defcustom org-ascii-charset 'asciiorg-ascii-charset249,9217
(defcustom org-ascii-underline '((ascii ?= ?~ ?-)org-ascii-underline263,9650
(defcustom org-ascii-bullets '((ascii ?* ?+ ?-)org-ascii-bullets289,10596
(defcustom org-ascii-links-to-notes torg-ascii-links-to-notes317,11558
(defcustom org-ascii-table-keep-all-vertical-lines nilorg-ascii-table-keep-all-vertical-lines326,11866
(defcustom org-ascii-table-widen-columns torg-ascii-table-widen-columns335,12164
(defcustom org-ascii-table-use-ascii-art nilorg-ascii-table-use-ascii-art344,12464
(defcustom org-ascii-caption-above nilorg-ascii-caption-above357,12884
(defcustom org-ascii-verbatim-format "`%s'"org-ascii-verbatim-format365,13116
(defcustom org-ascii-format-drawer-functionorg-ascii-format-drawer-function372,13315
(defcustom org-ascii-format-inlinetask-functionorg-ascii-format-inlinetask-function390,13872
(defun org-ascii--fill-string (s text-width info &optional justify)org-ascii--fill-string448,16331
(defun org-ascii--justify-lines (s text-width how)org-ascii--justify-lines474,17294
(defun org-ascii--justify-element (contents element info)org-ascii--justify-element491,17874
(defun org-ascii--indent-string (s width)org-ascii--indent-string533,19484
(defun org-ascii--box-string (s info)org-ascii--box-string540,19714
(defun org-ascii--current-text-width (element info)org-ascii--current-text-width550,20156
(defun org-ascii--current-justification (element)org-ascii--current-justification630,23573
(defun org-ascii--build-titleorg-ascii--build-title645,24187
(defun org-ascii--has-caption-p (element info)org-ascii--has-caption-p715,26607
(defun org-ascii--build-caption (element info)org-ascii--build-caption721,26886
(defun org-ascii--build-toc (info &optional n keyword local)org-ascii--build-toc747,27764
(defun org-ascii--list-listings (keyword info)org-ascii--list-listings785,29109
(defun org-ascii--list-tables (keyword info)org-ascii--list-tables825,30562
(defun org-ascii--unique-links (element info)org-ascii--unique-links865,31991
(defun org-ascii--describe-links (links width info)org-ascii--describe-links898,33295
(defun org-ascii--checkbox (item info)org-ascii--checkbox952,35137
(defun org-ascii-template--document-title (info)org-ascii-template--document-title965,35511
(defun org-ascii-inner-template (contents info)org-ascii-inner-template1048,38835
(defun org-ascii-template (contents info)org-ascii-template1101,40798
(defun org-ascii--translate (s info)org-ascii--translate1130,41768
(defun org-ascii-bold (bold contents info)org-ascii-bold1142,42081
(defun org-ascii-center-block (center-block contents info)org-ascii-center-block1151,42299
(defun org-ascii-clock (clock contents info)org-ascii-clock1162,42628
(defun org-ascii-code (code contents info)org-ascii-code1180,43110
(defun org-ascii-drawer (drawer contents info)org-ascii-drawer1190,43368
(defun org-ascii-dynamic-block (dynamic-block contents info)org-ascii-dynamic-block1202,43779
(defun org-ascii-entity (entity contents info)org-ascii-entity1211,44015
(defun org-ascii-example-block (example-block contents info)org-ascii-example-block1222,44326
(defun org-ascii-export-snippet (export-snippet contents info)org-ascii-export-snippet1233,44675
(defun org-ascii-export-block (export-block contents info)org-ascii-export-block1242,44997
(defun org-ascii-fixed-width (fixed-width contents info)org-ascii-fixed-width1252,45367
(defun org-ascii-footnote-reference (footnote-reference contents info)org-ascii-footnote-reference1270,45878
(defun org-ascii-headline (headline contents info)org-ascii-headline1278,46170
(defun org-ascii-horizontal-rule (horizontal-rule contents info)org-ascii-horizontal-rule1333,48384
(defun org-ascii-inline-src-block (inline-src-block contents info)org-ascii-inline-src-block1350,49004
(defun org-ascii-format-inlinetask-defaultorg-ascii-format-inlinetask-default1360,49343
(defun org-ascii-inlinetask (inlinetask contents info)org-ascii-inlinetask1389,50679
(defun org-ascii-italic (italic contents info)org-ascii-italic1416,51641
(defun org-ascii-item (item contents info)org-ascii-item1425,51859
(defun org-ascii-keyword (keyword contents info)org-ascii-keyword1475,53756
(defun org-ascii-latex-environment (latex-environment contents info)org-ascii-latex-environment1501,54715
(defun org-ascii-latex-fragment (latex-fragment contents info)org-ascii-latex-fragment1513,55112
(defun org-ascii-line-break (line-break contents info)org-ascii-line-break1523,55405
(defun org-ascii-link (link desc info)org-ascii-link1531,55609
(defun org-ascii-node-property (node-property contents info)org-ascii-node-property1574,57177
(defun org-ascii-paragraph (paragraph contents info)org-ascii-paragraph1586,57566
(defun org-ascii-plain-list (plain-list contents info)org-ascii-plain-list1605,58289
(defun org-ascii-plain-text (text info)org-ascii-plain-text1618,58716
(defun org-ascii-planning (planning contents info)org-ascii-planning1637,59403
(defun org-ascii-property-drawer (property-drawer contents info)org-ascii-property-drawer1663,60194
(defun org-ascii-quote-block (quote-block contents info)org-ascii-quote-block1673,60532
(defun org-ascii-radio-target (radio-target contents info)org-ascii-radio-target1682,60832
(defun org-ascii-section (section contents info)org-ascii-section1691,61063
(defun org-ascii-special-block (special-block contents info)org-ascii-special-block1714,62000
(defun org-ascii-src-block (src-block contents info)org-ascii-src-block1726,62385
(defun org-ascii-statistics-cookie (statistics-cookie contents info)org-ascii-statistics-cookie1744,63031
(defun org-ascii-subscript (subscript contents info)org-ascii-subscript1752,63295
(defun org-ascii-superscript (superscript contents info)org-ascii-superscript1763,63626
(defun org-ascii-strike-through (strike-through contents info)org-ascii-strike-through1774,63968
(defun org-ascii-table (table contents info)org-ascii-table1783,64215
(defun org-ascii--table-cell-width (table-cell info)org-ascii--table-cell-width1814,65414
(defun org-ascii-table-cell (table-cell contents info)org-ascii-table-cell1860,66877
(defun org-ascii-table-row (table-row contents info)org-ascii-table-row1891,68137
(defun org-ascii-timestamp (timestamp contents info)org-ascii-timestamp1944,70102
(defun org-ascii-underline (underline contents info)org-ascii-underline1952,70358
(defun org-ascii-verbatim (verbatim contents info)org-ascii-verbatim1961,70592
(defun org-ascii-verse-block (verse-block contents info)org-ascii-verse-block1970,70871
(defun org-ascii-filter-headline-blank-lines (headline back-end info)org-ascii-filter-headline-blank-lines1983,71290
(defun org-ascii-filter-paragraph-spacing (tree back-end info)org-ascii-filter-paragraph-spacing1997,71941
(defun org-ascii-filter-comment-spacing (tree backend info)org-ascii-filter-comment-spacing2014,72585
(defun org-ascii-export-as-asciiorg-ascii-export-as-ascii2031,73097
(defun org-ascii-export-to-asciiorg-ascii-export-to-ascii2066,74294
(defun org-ascii-publish-to-ascii (plist filename pub-dir)org-ascii-publish-to-ascii2100,75399
(defun org-ascii-publish-to-latin1 (plist filename pub-dir)org-ascii-publish-to-latin12112,75772
(defun org-ascii-publish-to-utf8 (plist filename pub-dir)org-ascii-publish-to-utf82124,76149

elpa/org-20160620/ox-beamer.el,3553
(defgroup org-export-beamer nilorg-export-beamer48,1565
(defcustom org-beamer-frame-level 1org-beamer-frame-level54,1723
(defcustom org-beamer-frame-default-options ""org-beamer-frame-default-options74,2417
(defcustom org-beamer-column-view-formatorg-beamer-column-view-format80,2629
(defcustom org-beamer-theme "default"org-beamer-theme90,3029
(defcustom org-beamer-environments-extra nilorg-beamer-environments-extra99,3298
(defcustom org-beamer-outline-frame-title "Outline"org-beamer-outline-frame-title126,4328
(defcustom org-beamer-outline-frame-options ""org-beamer-outline-frame-options131,4507
(defcustom org-beamer-subtitle-format "\\subtitle{%s}"org-beamer-subtitle-format138,4747
(defconst org-beamer-column-widthsorg-beamer-column-widths150,5095
(defconst org-beamer-environments-specialorg-beamer-environments-special154,5254
(defconst org-beamer-environments-defaultorg-beamer-environments-default170,5852
(defconst org-beamer-verbatim-elementsorg-beamer-verbatim-elements187,6969
(defun org-beamer--normalize-argument (argument type)org-beamer--normalize-argument197,7256
(defun org-beamer--element-has-overlay-p (element)org-beamer--element-has-overlay-p219,8149
(defun org-beamer-bold (bold contents info)org-beamer-bold277,10532
(defun org-beamer-export-block (export-block contents info)org-beamer-export-block288,10817
(defun org-beamer-export-snippet (export-snippet contents info)org-beamer-export-snippet298,11176
(defun org-beamer--get-label (headline info)org-beamer--get-label328,12283
(defun org-beamer--frame-level (headline info)org-beamer--frame-level346,12970
(defun org-beamer--format-section (headline contents info)org-beamer--format-section371,14115
(defun org-beamer--format-frame (headline contents info)org-beamer--format-frame406,15359
(defun org-beamer--format-block (headline contents info)org-beamer--format-block481,18291
(defun org-beamer-headline (headline contents info)org-beamer-headline587,22481
(defun org-beamer-item (item contents info)org-beamer-item666,25580
(defun org-beamer-keyword (keyword contents info)org-beamer-keyword695,26599
(defun org-beamer-link (link contents info)org-beamer-link719,27518
(defun org-beamer-plain-list (plain-list contents info)org-beamer-plain-list771,29355
(defun org-beamer-radio-target (radio-target text info)org-beamer-radio-target804,30503
(defun org-beamer-target (target contents info)org-beamer-target816,30863
(defun org-beamer-template (contents info)org-beamer-template828,31232
(defvar org-beamer-mode-map (make-sparse-keymap)org-beamer-mode-map947,35672
(define-key org-beamer-mode-map "\C-c\C-b" 'org-beamer-select-environment)org-beamer-mode-map949,35760
(define-minor-mode org-beamer-modeorg-beamer-mode952,35851
(defface org-beamer-tag '((t (:box (:line-width 1 :color grey40))))org-beamer-tag962,36132
(defun org-beamer-property-changed (property value)org-beamer-property-changed966,36268
(defun org-beamer-allowed-property-values (property)org-beamer-allowed-property-values985,37038
(defun org-beamer-export-as-latexorg-beamer-export-as-latex1009,37832
(defun org-beamer-export-to-latexorg-beamer-export-to-latex1044,39060
(defun org-beamer-export-to-pdforg-beamer-export-to-pdf1078,40207
(defun org-beamer-select-environment ()org-beamer-select-environment1113,41396
(defun org-beamer-publish-to-latex (plist filename pub-dir)org-beamer-publish-to-latex1163,43473
(defun org-beamer-publish-to-pdf (plist filename pub-dir)org-beamer-publish-to-pdf1174,43843

elpa/org-20160620/ox-html.el,13831
(defvar org-html-format-table-no-css)org-html-format-table-no-css180,7801
(defvar htmlize-buffer-places)  ; from htmlize.elhtmlize-buffer-places181,7839
(defvar org-html--pre/postamble-class "status"org-html--pre/postamble-class183,7890
(defconst org-html-doctype-alistorg-html-doctype-alist186,7976
(defconst org-html-html5-elementsorg-html-html5-elements207,9096
(defconst org-html-special-string-regexpsorg-html-special-string-regexps216,9415
(defconst org-html-scriptsorg-html-scripts223,9681
(defconst org-html-style-defaultorg-html-style-default272,11403
(defgroup org-export-html nilorg-export-html366,14609
(defvar org-html-infojs-opts-tableorg-html-infojs-opts-table373,14757
(defcustom org-html-use-infojs 'when-configuredorg-html-use-infojs387,15199
(defcustom org-html-infojs-optionsorg-html-infojs-options402,15818
(defcustom org-html-infojs-templateorg-html-infojs-template424,16680
(defun org-html-infojs-install-script (exp-plist backend)org-html-infojs-install-script495,19292
(defcustom org-html-text-markup-alistorg-html-text-markup-alist580,22607
(defcustom org-html-indent nilorg-html-indent602,23405
(defcustom org-html-format-drawer-function (lambda (name contents) contents)org-html-format-drawer-function612,23657
(defcustom org-html-footnotes-section "<div id=\"footnotes\">org-html-footnotes-section632,24243
(defcustom org-html-footnote-format "<sup>%s</sup>"org-html-footnote-format645,24645
(defcustom org-html-footnote-separator "<sup>, </sup>"org-html-footnote-separator651,24838
(defcustom org-html-toplevel-hlevel 2org-html-toplevel-hlevel658,24989
(defcustom org-html-format-headline-functionorg-html-format-headline-function669,25517
(defcustom org-html-allow-name-attribute-in-anchors nilorg-html-allow-name-attribute-in-anchors689,26151
(defcustom org-html-format-inlinetask-functionorg-html-format-inlinetask-function700,26474
(defcustom org-html-with-latex org-export-with-latexorg-html-with-latex721,27193
(defcustom org-html-link-org-files-as-html torg-html-link-org-files-as-html751,28318
(defcustom org-html-inline-images torg-html-inline-images765,28889
(defcustom org-html-inline-image-rulesorg-html-inline-image-rules774,29174
(defvar org-html-protect-char-alistorg-html-protect-char-alist790,29778
(defcustom org-html-htmlize-output-type 'inline-cssorg-html-htmlize-output-type798,29964
(defcustom org-html-htmlize-font-prefix "org-"org-html-htmlize-font-prefix818,31081
(defcustom org-html-table-default-attributesorg-html-table-default-attributes825,31252
(defcustom org-html-table-header-tags '("<th scope=\"%s\"%s>" . "</th>")org-html-table-header-tags838,31768
(defcustom org-html-table-data-tags '("<td%s>" . "</td>")org-html-table-data-tags848,32344
(defcustom org-html-table-row-tags '("<tr>" . "</tr>")org-html-table-row-tags857,32830
(defcustom org-html-table-align-individual-fields torg-html-table-align-individual-fields895,34210
(defcustom org-html-table-use-header-tags-for-first-column nilorg-html-table-use-header-tags-for-first-column903,34537
(defcustom org-html-table-caption-above torg-html-table-caption-above909,34755
(defcustom org-html-tag-class-prefix ""org-html-tag-class-prefix917,34957
(defcustom org-html-extension "html"org-html-extension928,35367
(defcustom org-html-xml-declarationorg-html-xml-declaration933,35491
(defcustom org-html-coding-system 'utf-8org-html-coding-system949,36110
(defcustom org-html-doctype "xhtml-strict"org-html-doctype957,36321
(defcustom org-html-html5-fancy nilorg-html-html5-fancy969,36727
(defcustom org-html-container-element "div"org-html-container-element983,37232
(defcustom org-html-divsorg-html-divs995,37614
(defconst org-html-checkbox-typesorg-html-checkbox-types1019,38512
(defcustom org-html-checkbox-type 'asciiorg-html-checkbox-type1042,39273
(defcustom org-html-metadata-timestamp-format "%Y-%m-%d %a %H:%M"org-html-metadata-timestamp-format1054,39659
(defcustom org-html-mathjax-optionsorg-html-mathjax-options1064,39980
(defcustom org-html-mathjax-templateorg-html-mathjax-template1147,43368
(defcustom org-html-postamble 'autoorg-html-postamble1176,44298
(defcustom org-html-postamble-formatorg-html-postamble-format1198,45170
(defcustom org-html-validation-linkorg-html-validation-link1228,46221
(defcustom org-html-creator-stringorg-html-creator-string1234,46409
(defcustom org-html-preamble torg-html-preamble1247,46906
(defcustom org-html-preamble-format '(("en" ""))org-html-preamble-format1267,47671
(defcustom org-html-link-up ""org-html-link-up1296,48658
(defcustom org-html-link-home ""org-html-link-home1301,48816
(defcustom org-html-link-use-abs-url nilorg-html-link-use-abs-url1306,48978
(defcustom org-html-home/up-formatorg-html-home/up-format1313,49174
(defcustom org-html-head-include-scripts torg-html-head-include-scripts1331,49755
(defcustom org-html-head-include-default-style torg-html-head-include-default-style1344,50184
(define-obsolete-variable-alias 'org-html-style 'org-html-head "24.4")org-html-style1356,50627
(defcustom org-html-head ""org-html-head1357,50698
(defcustom org-html-head-extra ""org-html-head-extra1394,51851
(defcustom org-html-viewport '((width "device-width")org-html-viewport1408,52262
(defcustom org-html-todo-kwd-class-prefix ""org-html-todo-kwd-class-prefix1456,53881
(defun org-html-xhtml-p (info)org-html-xhtml-p1468,54309
(defun org-html-html5-p (info)org-html-html5-p1472,54431
(defun org-html--html5-fancy-p (info)org-html--html5-fancy-p1476,54572
(defun org-html-close-tag (tag attr info)org-html-close-tag1482,54804
(defun org-html-doctype (info)org-html-doctype1486,54918
(defun org-html--make-attribute-string (attributes)org-html--make-attribute-string1494,55257
(defun org-html--wrap-image (contents info &optional caption label)org-html--wrap-image1507,55931
(defun org-html--format-image (source attributes info)org-html--format-image1525,56673
(defun org-html--svg-image (source attributes info)org-html--svg-image1545,57412
(defun org-html--textarea-block (element)org-html--textarea-block1562,58115
(defun org-html--has-caption-p (element &optional info)org-html--has-caption-p1572,58550
(defun org-html-htmlize-region-for-paste (beg end)org-html-htmlize-region-for-paste1581,58902
(defun org-html-htmlize-generate-css ()org-html-htmlize-generate-css1595,59511
(defun org-html--make-string (n string)org-html--make-string1629,60907
(defun org-html-fix-class-name (kwd)	; audit callers of this functionorg-html-fix-class-name1633,61066
(defun org-html-footnote-section (info)org-html-footnote-section1641,61347
(defun org-html--build-meta-info (info)org-html--build-meta-info1676,62295
(defun org-html--build-head (info)org-html--build-head1751,64762
(defun org-html--build-mathjax-config (info)org-html--build-mathjax-config1768,65545
(defun org-html-format-spec (info)org-html-format-spec1791,66559
(defun org-html--build-pre/postamble (type info)org-html--build-pre/postamble1812,67460
(defun org-html-inner-template (contents info)org-html-inner-template1879,69828
(defun org-html-template (contents info)org-html-template1892,70244
(defun org-html--translate (s info)org-html--translate1961,72714
(defun org-html--anchor (id desc attributes info)org-html--anchor1968,72908
(defun org-html--todo (todo info)org-html--todo1978,73255
(defun org-html--priority (priority info)org-html--priority1989,73565
(defun org-html--tags (tags info)org-html--tags1997,73826
(defun org-html-fontify-code (code lang)org-html-fontify-code2012,74223
(defun org-html-do-format-codeorg-html-do-format-code2073,76487
(defun org-html-format-code (element info)org-html-format-code2108,77753
(defun org-html-toc (depth info &optional scope)org-html-toc2128,78504
(defun org-html--toc-text (toc-entries)org-html--toc-text2156,79596
(defun org-html--format-toc-headline (headline info)org-html--format-toc-headline2181,80416
(defun org-html-list-of-listings (info)org-html-list-of-listings2218,81990
(defun org-html-list-of-tables (info)org-html-list-of-tables2255,83239
(defun org-html-bold (bold contents info)org-html-bold2297,84508
(defun org-html-center-block (center-block contents info)org-html-center-block2306,84789
(defun org-html-clock (clock contents info)org-html-clock2314,85066
(defun org-html-code (code contents info)org-html-code2330,85594
(defun org-html-drawer (drawer contents info)org-html-drawer2339,85902
(defun org-html-dynamic-block (dynamic-block contents info)org-html-dynamic-block2349,86228
(defun org-html-entity (entity contents info)org-html-entity2357,86485
(defun org-html-example-block (example-block contents info)org-html-example-block2365,86725
(defun org-html-export-snippet (export-snippet contents info)org-html-export-snippet2376,87143
(defun org-html-export-block (export-block contents info)org-html-export-block2385,87461
(defun org-html-fixed-width (fixed-width contents info)org-html-fixed-width2393,87800
(defun org-html-footnote-reference (footnote-reference contents info)org-html-footnote-reference2403,88155
(defun org-html-headline (headline contents info)org-html-headline2425,88982
(defun org-html-format-headline-default-functionorg-html-format-headline-default-function2504,93097
(defun org-html--container (headline info)org-html--container2516,93532
(defun org-html-horizontal-rule (horizontal-rule contents info)org-html-horizontal-rule2524,93760
(defun org-html-inline-src-block (inline-src-block contents info)org-html-inline-src-block2531,94011
(defun org-html-inlinetask (inlinetask contents info)org-html-inlinetask2545,94614
(defun org-html-format-inlinetask-default-functionorg-html-format-inlinetask-default-function2561,95438
(defun org-html-italic (italic contents info)org-html-italic2573,95861
(defun org-html-checkbox (checkbox info)org-html-checkbox2583,96147
(defun org-html-format-list-item (contents type checkbox infoorg-html-format-list-item2591,96433
(defun org-html-item (item contents info)org-html-item2629,97648
(defun org-html-keyword (keyword contents info)org-html-keyword2644,98222
(defun org-html-format-latex (latex-frag processing-type info)org-html-format-latex2664,99007
(defun org-html-latex-environment (latex-environment contents info)org-html-latex-environment2698,100356
(defun org-html-latex-fragment (latex-fragment contents info)org-html-latex-fragment2721,101321
(defun org-html-line-break (line-break contents info)org-html-line-break2738,102029
(defun org-html-inline-image-p (link info)org-html-inline-image-p2745,102265
(defvar org-html-standalone-image-predicate)org-html-standalone-image-predicate2768,103163
(defun org-html-standalone-image-p (element info)org-html-standalone-image-p2769,103208
(defun org-html-link (link desc info)org-html-link2807,104581
(defun org-html-node-property (node-property contents info)org-html-node-property2975,111381
(defun org-html-paragraph (paragraph contents info)org-html-paragraph2986,111767
(defun org-html-begin-plain-list (type &optional arg1)org-html-begin-plain-list3035,113737
(defun org-html-end-plain-list (type)org-html-end-plain-list3046,114126
(defun org-html-plain-list (plain-list contents info)org-html-plain-list3053,114307
(defun org-html-convert-special-strings (string)org-html-convert-special-strings3065,114745
(defun org-html-encode-plain-text (text)org-html-encode-plain-text3075,115091
(defun org-html-plain-text (text info)org-html-plain-text3081,115386
(defun org-html-planning (planning contents info)org-html-planning3107,116338
(defun org-html-property-drawer (property-drawer contents info)org-html-property-drawer3131,117156
(defun org-html-quote-block (quote-block contents info)org-html-quote-block3140,117486
(defun org-html-section (section contents info)org-html-section3148,117755
(defun org-html-radio-target (radio-target text info)org-html-radio-target3173,118716
(defun org-html-special-block (special-block contents info)org-html-special-block3182,119029
(defun org-html-src-block (src-block contents info)org-html-src-block3206,120022
(defun org-html-statistics-cookie (statistics-cookie contents info)org-html-statistics-cookie3228,120995
(defun org-html-strike-through (strike-through contents info)org-html-strike-through3236,121328
(defun org-html-subscript (subscript contents info)org-html-subscript3247,121666
(defun org-html-superscript (superscript contents info)org-html-superscript3255,121914
(defun org-html-table-cell (table-cell contents info)org-html-table-cell3263,122167
(defun org-html-table-row (table-row contents info)org-html-table-row3297,123578
(defun org-html-table-first-row-data-cells (table info)org-html-table-first-row-data-cells3341,125441
(defun org-html-table--table.el-table (table info)org-html-table--table.el-table3353,125925
(defun org-html-table (table contents info)org-html-table3370,126530
(defun org-html-target (target contents info)org-html-target3430,128791
(defun org-html-timestamp (timestamp contents info)org-html-timestamp3439,129064
(defun org-html-underline (underline contents info)org-html-underline3449,129478
(defun org-html-verbatim (verbatim contents info)org-html-verbatim3459,129787
(defun org-html-verse-block (verse-block contents info)org-html-verse-block3468,130120
(defun org-html-final-function (contents backend info)org-html-final-function3491,131066
(defun org-html-export-as-htmlorg-html-export-as-html3504,131427
(defun org-html-convert-region-to-html ()org-html-convert-region-to-html3540,132640
(defun org-html-export-to-htmlorg-html-export-to-html3549,132979
(defun org-html-publish-to-html (plist filename pub-dir)org-html-publish-to-html3587,134259

elpa/org-20160620/ox-icalendar.el,3501
(defgroup org-export-icalendar nilorg-export-icalendar42,1333
(defcustom org-icalendar-combined-agenda-file "~/org.ics"org-icalendar-combined-agenda-file47,1473
(defcustom org-icalendar-alarm-time 0org-icalendar-alarm-time54,1799
(defcustom org-icalendar-combined-name "OrgMode"org-icalendar-combined-name67,2229
(defcustom org-icalendar-combined-description ""org-icalendar-combined-description72,2403
(defcustom org-icalendar-exclude-tags nilorg-icalendar-exclude-tags77,2573
(defcustom org-icalendar-use-deadline '(event-if-not-todo todo-due)org-icalendar-use-deadline85,2866
(defcustom org-icalendar-use-scheduled '(todo-start)org-icalendar-use-scheduled102,3604
(defcustom org-icalendar-categories '(local-tags category)org-icalendar-categories122,4499
(defcustom org-icalendar-with-timestamps 'activeorg-icalendar-with-timestamps138,5162
(defcustom org-icalendar-include-todo nilorg-icalendar-include-todo154,5772
(defcustom org-icalendar-include-bbdb-anniversaries nilorg-icalendar-include-bbdb-anniversaries171,6368
(defcustom org-icalendar-include-sexps torg-icalendar-include-sexps177,6600
(defcustom org-icalendar-include-body torg-icalendar-include-body183,6833
(defcustom org-icalendar-store-UID nilorg-icalendar-store-UID194,7276
(defcustom org-icalendar-timezone (getenv "TZ")org-icalendar-timezone210,8002
(defcustom org-icalendar-date-time-format ":%Y%m%dT%H%M%S"org-icalendar-date-time-format219,8278
(defvar org-icalendar-after-save-hook nilorg-icalendar-after-save-hook237,8965
(defun org-icalendar-create-uid (file &optional bell)org-icalendar-create-uid287,10925
(defun org-icalendar-blocked-headline-p (headline info)org-icalendar-blocked-headline-p304,11490
(defun org-icalendar-use-UTC-date-time-p ()org-icalendar-use-UTC-date-time-p338,12691
(defvar org-agenda-default-appointment-duration) ; From org-agenda.el.org-agenda-default-appointment-duration343,12911
(defun org-icalendar-convert-timestamp (timestamp keyword &optional end utc)org-icalendar-convert-timestamp344,12982
(defun org-icalendar-dtstamp ()org-icalendar-dtstamp402,15395
(defun org-icalendar-get-categories (entry info)org-icalendar-get-categories406,15525
(defun org-icalendar-transcode-diary-sexp (sexp uid summary)org-icalendar-transcode-diary-sexp433,16404
(defun org-icalendar-cleanup-string (s)org-icalendar-cleanup-string447,16999
(defun org-icalendar-fold-string (s)org-icalendar-fold-string457,17312
(defun org-icalendar-clear-blank-lines (headline back-end info)org-icalendar-clear-blank-lines483,18148
(defun org-icalendar-entry (entry contents info)org-icalendar-entry504,18838
(defun org-icalendar--veventorg-icalendar--vevent630,23985
(defun org-icalendar--vtodoorg-icalendar--vtodo668,25604
(defun org-icalendar--valarm (entry timestamp summary)org-icalendar--valarm719,27560
(defun org-icalendar-template (contents info)org-icalendar-template750,28597
(defun org-icalendar--vcalendar (name owner tz description contents)org-icalendar--vcalendar769,29328
(defun org-icalendar-export-to-icsorg-icalendar-export-to-ics793,30026
(defun org-icalendar-export-agenda-files (&optional async)org-icalendar-export-agenda-files831,31417
(defun org-icalendar-combine-agenda-files (&optional async)org-icalendar-combine-agenda-files864,32610
(defun org-icalendar-export-current-agenda (file)org-icalendar-export-current-agenda884,33362
(defun org-icalendar--combine-files (&rest files)org-icalendar--combine-files918,34540

elpa/org-20160620/ox-latex.el,11346
(defvar org-latex-default-packages-alist)org-latex-default-packages-alist33,1025
(defvar org-latex-packages-alist)org-latex-packages-alist34,1067
(defvar orgtbl-exp-regexp)orgtbl-exp-regexp35,1101
(defconst org-latex-babel-language-alistorg-latex-babel-language-alist154,6533
(defconst org-latex-polyglossia-language-alistorg-latex-polyglossia-language-alist207,7837
(defconst org-latex-table-matrix-macros '(("bordermatrix" . "\\cr")org-latex-table-matrix-macros295,9849
(defconst org-latex-math-environments-reorg-latex-math-environments-re300,10042
(defgroup org-export-latex nilorg-export-latex317,10462
(defcustom org-latex-caption-above '(table)org-latex-caption-above324,10607
(defcustom org-latex-prefer-user-labels nilorg-latex-prefer-user-labels341,11303
(defcustom org-latex-default-class "article"org-latex-default-class398,13305
(defcustom org-latex-classesorg-latex-classes403,13445
(defcustom org-latex-inputenc-alist nilorg-latex-inputenc-alist533,18450
(defcustom org-latex-title-command "\\maketitle"org-latex-title-command547,18855
(defcustom org-latex-subtitle-format "\\\\\\medskip\n\\large %s"org-latex-subtitle-format570,19496
(defcustom org-latex-subtitle-separate nilorg-latex-subtitle-separate579,19827
(defcustom org-latex-toc-command "\\tableofcontents\n\n"org-latex-toc-command586,20032
(defcustom org-latex-hyperref-templateorg-latex-hyperref-template593,20333
(defcustom org-latex-format-headline-functionorg-latex-format-headline-function628,21346
(defcustom org-latex-footnote-separator "\\textsuperscript{,}\\,"org-latex-footnote-separator649,21996
(defcustom org-latex-active-timestamp-format "\\textit{%s}"org-latex-active-timestamp-format657,22162
(defcustom org-latex-inactive-timestamp-format "\\textit{%s}"org-latex-inactive-timestamp-format662,22330
(defcustom org-latex-diary-timestamp-format "\\textit{%s}"org-latex-diary-timestamp-format667,22502
(defcustom org-latex-image-default-option ""org-latex-image-default-option675,22681
(defcustom org-latex-image-default-width ".9\\linewidth"org-latex-image-default-width682,22854
(defcustom org-latex-image-default-height ""org-latex-image-default-height690,23091
(defcustom org-latex-default-figure-position "htb"org-latex-default-figure-position700,23394
(defcustom org-latex-inline-image-rulesorg-latex-inline-image-rules705,23530
(defcustom org-latex-link-with-unknown-path-format "\\texttt{%s}"org-latex-link-with-unknown-path-format724,24312
(defcustom org-latex-default-table-environment "tabular"org-latex-default-table-environment732,24489
(defcustom org-latex-default-table-mode 'tableorg-latex-default-table-mode739,24689
(defcustom org-latex-tables-centered torg-latex-tables-centered770,25724
(defcustom org-latex-tables-booktabs nilorg-latex-tables-booktabs776,25891
(defcustom org-latex-table-scientific-notation "%s\\,(%s)"org-latex-table-scientific-notation788,26310
(defcustom org-latex-text-markup-alist '((bold . "\\textbf{%s}")org-latex-text-markup-alist803,26750
(defcustom org-latex-format-drawer-functionorg-latex-format-drawer-function832,27761
(defcustom org-latex-format-inlinetask-functionorg-latex-format-inlinetask-function851,28256
(defcustom org-latex-listings nilorg-latex-listings873,28975
(defcustom org-latex-listings-langsorg-latex-listings-langs915,30519
(defcustom org-latex-listings-options nilorg-latex-listings-options941,31488
(defcustom org-latex-minted-langsorg-latex-minted-langs970,32408
(defcustom org-latex-minted-options nilorg-latex-minted-options994,33213
(defvar org-latex-custom-lang-environments nilorg-latex-custom-lang-environments1023,34110
(defcustom org-latex-pdf-processorg-latex-pdf-process1042,34581
(defcustom org-latex-logfiles-extensionsorg-latex-logfiles-extensions1111,37767
(defcustom org-latex-remove-logfiles torg-latex-remove-logfiles1122,38189
(defcustom org-latex-known-warningsorg-latex-known-warnings1130,38524
(defun org-latex--caption-above-p (element info)org-latex--caption-above-p1153,39293
(defun org-latex--label (datum info &optional force full)org-latex--label1161,39640
(defun org-latex--caption/label-string (element info)org-latex--caption/label-string1201,40857
(defun org-latex-guess-inputenc (header)org-latex-guess-inputenc1242,42263
(defun org-latex-guess-babel-language (header info)org-latex-guess-babel-language1260,42968
(defun org-latex-guess-polyglossia-language (header info)org-latex-guess-polyglossia-language1296,44386
(defun org-latex--find-verb-separator (s)org-latex--find-verb-separator1349,46128
(defun org-latex--make-option-string (options)org-latex--make-option-string1357,46500
(defun org-latex--wrap-label (element output info)org-latex--wrap-label1369,46898
(defun org-latex--protect-text (text)org-latex--protect-text1380,47351
(defun org-latex--text-markup (text markup info)org-latex--text-markup1392,47719
(defun org-latex--delayed-footnotes-definitions (element info)org-latex--delayed-footnotes-definitions1414,48615
(defun org-latex--translate (s info)org-latex--translate1454,49908
(defun org-latex--format-spec (info)org-latex--format-spec1459,50091
(defun org-latex--make-header (info)org-latex--make-header1478,50882
(defun org-latex-template (contents info)org-latex-template1509,51940
(defun org-latex-bold (bold contents info)org-latex-bold1586,54813
(defun org-latex-center-block (center-block contents info)org-latex-center-block1595,55051
(defun org-latex-clock (clock contents info)org-latex-clock1605,55379
(defun org-latex-code (code contents info)org-latex-code1621,55871
(defun org-latex-drawer (drawer contents info)org-latex-drawer1630,56117
(defun org-latex-dynamic-block (dynamic-block contents info)org-latex-dynamic-block1642,56523
(defun org-latex-entity (entity contents info)org-latex-entity1651,56826
(defun org-latex-example-block (example-block contents info)org-latex-example-block1660,57070
(defun org-latex-export-block (export-block contents info)org-latex-export-block1679,57676
(defun org-latex-export-snippet (export-snippet contents info)org-latex-export-snippet1688,58030
(defun org-latex-fixed-width (fixed-width contents info)org-latex-fixed-width1697,58351
(defun org-latex-footnote-reference (footnote-reference contents info)org-latex-footnote-reference1710,58733
(defun org-latex-headline (headline contents info)org-latex-headline1741,60116
(defun org-latex-format-headline-default-functionorg-latex-format-headline-default-function1867,65539
(defun org-latex-horizontal-rule (horizontal-rule contents info)org-latex-horizontal-rule1883,66012
(defun org-latex-inline-src-block (inline-src-block contents info)org-latex-inline-src-block1905,66850
(defun org-latex-inlinetask (inlinetask contents info)org-latex-inlinetask1942,68343
(defun org-latex-format-inlinetask-default-functionorg-latex-format-inlinetask-default-function1959,69224
(defun org-latex-italic (italic contents info)org-latex-italic1985,70025
(defun org-latex-item (item contents info)org-latex-item1994,70265
(defun org-latex-keyword (keyword contents info)org-latex-keyword2057,72500
(defun org-latex-latex-environment (latex-environment contents info)org-latex-latex-environment2095,73903
(defun org-latex-latex-fragment (latex-fragment contents info)org-latex-latex-fragment2115,74645
(defun org-latex-line-break (line-break contents info)org-latex-line-break2130,75222
(defun org-latex--inline-image (link info)org-latex--inline-image2138,75421
(defun org-latex-link (link desc info)org-latex-link2275,80476
(defun org-latex-node-property (node-property contents info)org-latex-node-property2356,83736
(defun org-latex-paragraph (paragraph contents info)org-latex-paragraph2368,84125
(defun org-latex-plain-list (plain-list contents info)org-latex-plain-list2377,84370
(defun org-latex-plain-text (text info)org-latex-plain-text2400,85099
(defun org-latex-planning (planning contents info)org-latex-planning2439,86554
(defun org-latex-property-drawer (property-drawer contents info)org-latex-property-drawer2473,87588
(defun org-latex--wrap-latex-matrices (data info)org-latex--wrap-latex-matrices2487,88084
(defun org-latex-matrices (matrices contents info)org-latex-matrices2534,89989
(defun org-latex-matrices-tree-filter (tree backend info)org-latex-matrices-tree-filter2544,90338
(defun org-latex--wrap-latex-math-block (data info)org-latex--wrap-latex-math-block2552,90559
(defun org-latex-math-block-tree-filter (tree backend info)org-latex-math-block-tree-filter2601,92688
(defun org-latex-math-block-options-filter (info backend)org-latex-math-block-options-filter2604,92797
(defun org-latex-math-block (math-block contents info)org-latex-math-block2609,93000
(defun org-latex-quote-block (quote-block contents info)org-latex-quote-block2618,93280
(defun org-latex-radio-target (radio-target text info)org-latex-radio-target2628,93602
(defun org-latex-section (section contents info)org-latex-section2637,93887
(defun org-latex-special-block (special-block contents info)org-latex-special-block2646,94114
(defun org-latex-src-block (src-block contents info)org-latex-src-block2663,94781
(defun org-latex-statistics-cookie (statistics-cookie contents info)org-latex-statistics-cookie2828,100658
(defun org-latex-strike-through (strike-through contents info)org-latex-strike-through2837,100973
(defun org-latex--script-size (object info)org-latex--script-size2846,101258
(defun org-latex-subscript (subscript contents info)org-latex-subscript2883,102552
(defun org-latex-superscript (superscript contents info)org-latex-superscript2892,102809
(defun org-latex-table (table contents info)org-latex-table2910,103485
(defun org-latex--align-string (table info)org-latex--align-string2935,104624
(defun org-latex--org-table (table contents info)org-latex--org-table2963,105576
(defun org-latex--table.el-table (table info)org-latex--table.el-table3076,109628
(defun org-latex--math-table (table info)org-latex--math-table3113,111166
(defun org-latex-table-cell (table-cell contents info)org-latex-table-cell3158,112704
(defun org-latex-table-row (table-row contents info)org-latex-table-row3178,113334
(defun org-latex-target (target contents info)org-latex-target3242,115568
(defun org-latex-timestamp (timestamp contents info)org-latex-timestamp3251,115805
(defun org-latex-underline (underline contents info)org-latex-underline3267,116341
(defun org-latex-verbatim (verbatim contents info)org-latex-verbatim3276,116600
(defun org-latex-verse-block (verse-block contents info)org-latex-verse-block3286,116874
(defun org-latex-export-as-latexorg-latex-export-as-latex3311,117717
(defun org-latex-convert-region-to-latex ()org-latex-convert-region-to-latex3346,118940
(defun org-latex-export-to-latexorg-latex-export-to-latex3355,119284
(defun org-latex-export-to-pdforg-latex-export-to-pdf3387,120392
(defun org-latex-compile (texfile &optional snippet)org-latex-compile3421,121576
(defun org-latex--collect-warnings (buffer)org-latex--collect-warnings3494,124566
(defun org-latex-publish-to-latex (plist filename pub-dir)org-latex-publish-to-latex3512,125305
(defun org-latex-publish-to-pdf (plist filename pub-dir)org-latex-publish-to-pdf3523,125649

elpa/org-20160620/ox-man.el,4841
(defvar org-export-man-default-packages-alist)org-export-man-default-packages-alist44,1378
(defvar org-export-man-packages-alist)org-export-man-packages-alist45,1425
(defvar orgtbl-exp-regexp)orgtbl-exp-regexp46,1464
(defgroup org-export-man nilorg-export-man125,4248
(defcustom org-man-tables-centered torg-man-tables-centered132,4385
(defcustom org-man-tables-verbatim nilorg-man-tables-verbatim139,4581
(defcustom org-man-table-scientific-notation "%sE%s"org-man-table-scientific-notation147,4765
(defcustom org-man-source-highlight nilorg-man-source-highlight164,5220
(defcustom org-man-source-highlight-langsorg-man-source-highlight-langs172,5414
(defvar org-man-custom-lang-environments nilorg-man-custom-lang-environments207,6833
(defcustom org-man-pdf-processorg-man-pdf-process223,7211
(defcustom org-man-logfiles-extensionsorg-man-logfiles-extensions256,8550
(defcustom org-man-remove-logfiles torg-man-remove-logfiles264,8796
(defun org-man--caption/label-string (element info)org-man--caption/label-string276,9070
(defun org-man--wrap-label (element output)org-man--wrap-label295,9807
(defun org-man-template (contents info)org-man-template308,10217
(defun org-man-bold (bold contents info)org-man-bold346,11218
(defun org-man-center-block (center-block contents info)org-man-center-block355,11437
(defun org-man-clock (clock contents info)org-man-clock368,11811
(defun org-man-code (code contents info)org-man-code377,11986
(defun org-man-drawer (drawer contents info)org-man-drawer396,12279
(defun org-man-dynamic-block (dynamic-block contents info)org-man-dynamic-block406,12541
(defun org-man-entity (entity contents info)org-man-entity415,12832
(defun org-man-example-block (example-block contents info)org-man-example-block424,13071
(defun org-man-export-block (export-block contents info)org-man-export-block436,13414
(defun org-man-export-snippet (export-snippet contents info)org-man-export-snippet445,13753
(defun org-man-fixed-width (fixed-width contents info)org-man-fixed-width454,14067
(defun org-man-headline (headline contents info)org-man-headline475,14543
(defun org-man-inline-src-block (inline-src-block contents info)org-man-inline-src-block528,16358
(defun org-man-italic (italic contents info)org-man-italic573,18042
(defun org-man-item (item contents info)org-man-item583,18262
(defun org-man-keyword (keyword contents info)org-man-keyword619,19584
(defun org-man-line-break (line-break contents info)org-man-line-break632,19982
(defun org-man-link (link desc info)org-man-link641,20176
(defun org-man-node-property (node-property contents info)org-man-node-property669,21305
(defun org-man-paragraph (paragraph contents info)org-man-paragraph680,21688
(defun org-man-plain-list (plain-list contents info)org-man-plain-list701,22521
(defun org-man-plain-text (text info)org-man-plain-text709,22742
(defun org-man-property-drawer (property-drawer contents info)org-man-property-drawer736,23593
(defun org-man-quote-block (quote-block contents info)org-man-quote-block745,23909
(defun org-man-radio-target (radio-target text info)org-man-radio-target756,24204
(defun org-man-section (section contents info)org-man-section765,24415
(defun org-man-special-block (special-block contents info)org-man-special-block774,24637
(defun org-man-src-block (src-block contents info)org-man-src-block786,24995
(defun org-man-statistics-cookie (statistics-cookie contents info)org-man-statistics-cookie828,26732
(defun org-man-strike-through (strike-through contents info)org-man-strike-through836,26996
(defun org-man-subscript (subscript contents info)org-man-subscript844,27251
(defun org-man-superscript (superscript contents info)org-man-superscript852,27509
(defun org-man-table (table contents info)org-man-table870,28145
(defun org-man-table--align-string (divider table info)org-man-table--align-string893,28949
(defun org-man-table--org-table (table contents info)org-man-table--org-table924,30121
(defun org-man-table-cell (table-cell contents info)org-man-table-cell1023,34343
(defun org-man-table-row (table-row contents info)org-man-table-row1042,34959
(defun org-man-target (target contents info)org-man-target1071,36078
(defun org-man-timestamp (timestamp contents info)org-man-timestamp1080,36317
(defun org-man-underline (underline contents info)org-man-underline1089,36512
(defun org-man-verbatim (verbatim contents info)org-man-verbatim1098,36747
(defun org-man-verse-block (verse-block contents info)org-man-verse-block1107,36967
(defun org-man-export-to-manorg-man-export-to-man1117,37236
(defun org-man-export-to-pdforg-man-export-to-pdf1150,38313
(defun org-man-compile (file)org-man-compile1184,39450
(defun org-man-collect-errors (buffer)org-man-collect-errors1242,41767

elpa/org-20160620/ox-md.el,2095
(defgroup org-export-md nilorg-export-md38,1160
(defcustom org-md-headline-style 'atxorg-md-headline-style45,1335
(defun org-md-separate-elements (tree backend info)org-md-separate-elements98,3163
(defun org-md-bold (bold contents info)org-md-bold135,4231
(defun org-md-verbatim (verbatim contents info)org-md-verbatim144,4466
(defun org-md-example-block (example-block contents info)org-md-example-block159,4921
(defun org-md-export-block (export-block contents info)org-md-export-block168,5233
(defun org-md-headline (headline contents info)org-md-headline179,5686
(defun org-md-horizontal-rule (horizontal-rule contents info)org-md-horizontal-rule236,7838
(defun org-md-italic (italic contents info)org-md-italic245,8076
(defun org-md-item (item contents info)org-md-item254,8304
(defun org-md-keyword (keyword contents info)org-md-keyword283,9248
(defun org-md-line-break (line-break contents info)org-md-line-break294,9608
(defun org-md-link (link contents info)org-md-link303,9804
(defun org-md-node-property (node-property contents info)org-md-node-property381,12750
(defun org-md-paragraph (paragraph contents info)org-md-paragraph393,13139
(defun org-md-plain-list (plain-list contents info)org-md-plain-list406,13606
(defun org-md-plain-text (text info)org-md-plain-text415,13831
(defun org-md-property-drawer (property-drawer contents info)org-md-property-drawer441,14871
(defun org-md-quote-block (quote-block contents info)org-md-quote-block451,15197
(defun org-md-section (section contents info)org-md-section462,15503
(defun org-md-inner-template (contents info)org-md-inner-template471,15714
(defun org-md-template (contents info)org-md-template479,16093
(defun org-md-export-as-markdown (&optional async subtreep visible-only)org-md-export-as-markdown490,16346
(defun org-md-convert-region-to-md ()org-md-convert-region-to-md517,17264
(defun org-md-export-to-markdown (&optional async subtreep visible-only)org-md-export-to-markdown527,17605
(defun org-md-publish-to-md (plist filename pub-dir)org-md-publish-to-md552,18428

elpa/org-20160620/ox-odt.el,12400
(defconst org-odt-lib-dirorg-odt-lib-dir136,4927
(defvar org-odt-data-dirorg-odt-data-dir142,5123
(defconst org-odt-special-string-regexpsorg-odt-special-string-regexps148,5312
(defconst org-odt-schema-dir-listorg-odt-schema-dir-list155,5580
(defconst org-odt-styles-dir-listorg-odt-styles-dir-list168,6107
(defconst org-odt-styles-dirorg-odt-styles-dir184,6785
(defconst org-odt-bookmark-prefix "OrgXref.")org-odt-bookmark-prefix218,8048
(defconst org-odt-manifest-file-entry-tagorg-odt-manifest-file-entry-tag220,8095
(defconst org-odt-file-extensionsorg-odt-file-extensions223,8223
(defconst org-odt-table-style-formatorg-odt-table-style-format237,8767
(defvar org-odt-automatic-styles '()org-odt-automatic-styles245,9054
(defvar org-odt-object-counters nilorg-odt-object-counters262,9643
(defvar org-odt-src-block-paragraph-formatorg-odt-src-block-paragraph-format267,9817
(defvar hfy-optimizations)hfy-optimizations279,10496
(define-obsolete-variable-alias 'hfy-optimisations 'hfy-optimizations "25.1")hfy-optimisations280,10523
(defvar org-odt-embedded-formulas-count 0)org-odt-embedded-formulas-count281,10601
(defvar org-odt-embedded-images-count 0)org-odt-embedded-images-count282,10644
(defvar org-odt-image-size-probe-methodorg-odt-image-size-probe-method283,10685
(defvar org-odt-default-image-sizes-alistorg-odt-default-image-sizes-alist288,10879
(defvar org-odt-max-image-size '(17.0 . 20.0)org-odt-max-image-size297,11200
(defconst org-odt-label-stylesorg-odt-label-styles300,11295
(defvar org-odt-category-map-alistorg-odt-category-map-alist326,12296
(defvar org-odt-manifest-file-entries nil)org-odt-manifest-file-entries353,13461
(defvar hfy-user-sheet-assoc)hfy-user-sheet-assoc354,13504
(defvar org-odt-zip-dir nilorg-odt-zip-dir356,13535
(defgroup org-export-odt nilorg-export-odt363,13658
(defcustom org-odt-prettify-xml nilorg-odt-prettify-xml371,13800
(defcustom org-odt-schema-dirorg-odt-schema-dir385,14197
(defcustom org-odt-content-template-file nilorg-odt-content-template-file457,16580
(defcustom org-odt-styles-file nilorg-odt-styles-file469,16928
(defcustom org-odt-display-outline-level 2org-odt-display-outline-level513,18475
(defcustom org-odt-convert-processesorg-odt-convert-processes522,18706
(defcustom org-odt-convert-process "LibreOffice"org-odt-convert-process554,19769
(defcustom org-odt-convert-capabilitiesorg-odt-convert-capabilities569,20302
(defcustom org-odt-preferred-output-format nilorg-odt-preferred-output-format638,22903
(defcustom org-odt-format-drawer-functionorg-odt-format-drawer-function664,23816
(defcustom org-odt-format-headline-functionorg-odt-format-headline-function683,24299
(defcustom org-odt-format-inlinetask-functionorg-odt-format-inlinetask-function703,24907
(defcustom org-odt-with-latex org-export-with-latexorg-odt-with-latex724,25569
(defcustom org-odt-inline-formula-rulesorg-odt-inline-formula-rules755,26682
(defcustom org-odt-inline-image-rulesorg-odt-inline-image-rules768,27144
(defcustom org-odt-pixels-per-inch 96.0org-odt-pixels-per-inch781,27612
(defcustom org-odt-create-custom-styles-for-srcblocks torg-odt-create-custom-styles-for-srcblocks793,27928
(defcustom org-odt-fontify-srcblocks torg-odt-fontify-srcblocks812,28666
(defcustom org-odt-table-stylesorg-odt-table-styles824,29032
(defcustom org-odt-use-date-fields nilorg-odt-use-date-fields922,33031
(defun org-odt--format-timestamp (timestamp &optional end iso-date-p)org-odt--format-timestamp959,34370
(defun org-odt--frame (text width height style &optional extraorg-odt--frame1010,36486
(defun org-odt--zip-extract (archive members target)org-odt--zip-extract1036,37339
(defun org-odt--target (text id)org-odt--target1064,38234
(defun org-odt--textbox (text width height style &optionalorg-odt--textbox1073,38513
(defun org-odt--format-toc (title entries depth)org-odt--format-toc1087,38886
(defun* org-odt-format-toc-headlineorg-odt-format-toc-headline1128,40277
(defun org-odt-toc (depth info &optional scope)org-odt-toc1161,41289
(defun org-odt-add-automatic-style (object-type &optional object-props)org-odt-add-automatic-style1204,42942
(defun org-odt--checkbox (item)org-odt--checkbox1231,44057
(defun org-odt--build-date-styles (fmt style)org-odt--build-date-styles1243,44413
(defun org-odt-template (contents info)org-odt-template1328,48157
(defun org-odt-bold (bold contents info)org-odt-bold1603,59266
(defun org-odt-center-block (center-block contents info)org-odt-center-block1613,59534
(defun org-odt-clock (clock contents info)org-odt-clock1622,59769
(defun org-odt-code (code contents info)org-odt-code1640,60446
(defun org-odt-drawer (drawer contents info)org-odt-drawer1661,60855
(defun org-odt-dynamic-block (dynamic-block contents info)org-odt-dynamic-block1673,61219
(defun org-odt-entity (entity contents info)org-odt-entity1682,61475
(defun org-odt-example-block (example-block contents info)org-odt-example-block1691,61715
(defun org-odt-export-snippet (export-snippet contents info)org-odt-export-snippet1699,61962
(defun org-odt-export-block (export-block contents info)org-odt-export-block1708,62278
(defun org-odt-fixed-width (fixed-width contents info)org-odt-fixed-width1717,62615
(defun org-odt-footnote-reference (footnote-reference contents info)org-odt-footnote-reference1730,62956
(defun org-odt-format-headline--wrap (headline backend infoorg-odt-format-headline--wrap1800,65408
(defun org-odt-headline (headline contents info)org-odt-headline1836,67033
(defun org-odt-format-headline-default-functionorg-odt-format-headline-default-function1901,69712
(defun org-odt-horizontal-rule (horizontal-rule contents info)org-odt-horizontal-rule1931,70614
(defun org-odt--find-verb-separator (s)org-odt--find-verb-separator1945,70973
(defun org-odt-inline-src-block (inline-src-block contents info)org-odt-inline-src-block1953,71343
(defun org-odt-inlinetask (inlinetask contents info)org-odt-inlinetask1965,71775
(defun org-odt-format-inlinetask-default-functionorg-odt-format-inlinetask-default-function1982,72591
(defun org-odt-italic (italic contents info)org-odt-italic1999,73170
(defun org-odt-item (item contents info)org-odt-item2009,73442
(defun org-odt-keyword (keyword contents info)org-odt-keyword2037,74415
(defun org-odt-latex-environment (latex-environment contents info)org-odt-latex-environment2073,75645
(defun org-odt-latex-fragment (latex-fragment contents info)org-odt-latex-fragment2089,76182
(defun org-odt-line-break (line-break contents info)org-odt-line-break2100,76623
(defun org-odt--enumerate (element info &optional predicate n)org-odt--enumerate2110,76862
(defun org-odt-format-label (element info op)org-odt-format-label2149,78073
(defun org-odt--copy-image-file (path)org-odt--copy-image-file2234,81338
(defun org-odt--image-sizeorg-odt--image-size2253,82047
(defun org-odt-link--inline-image (element info)org-odt-link--inline-image2316,84410
(defun org-odt-link--inline-formula (element info)org-odt-link--inline-formula2389,87537
(defun org-odt--copy-formula-file (src-file)org-odt--copy-formula-file2437,89539
(defun org-odt--render-image/formula (cfg-key href width height &optionalorg-odt--render-image/formula2466,90738
(defun org-odt--enumerable-p (element info)org-odt--enumerable-p2568,94821
(defun org-odt--enumerable-image-p (element info)org-odt--enumerable-image-p2573,95002
(defun org-odt--enumerable-latex-image-p (element info)org-odt--enumerable-latex-image-p2588,95585
(defun org-odt--enumerable-formula-p (element info)org-odt--enumerable-formula-p2603,96165
(defun org-odt--standalone-link-p (element info &optionalorg-odt--standalone-link-p2615,96596
(defun org-odt-link--infer-description (destination info)org-odt-link--infer-description2652,97895
(defun org-odt-link (link desc info)org-odt-link2743,101785
(defun org-odt-node-property (node-property contents info)org-odt-node-property2865,106781
(defun org-odt--paragraph-style (paragraph)org-odt--paragraph-style2877,107179
(defun org-odt--format-paragraph (paragraph contents info default center quote)org-odt--format-paragraph2888,107568
(defun org-odt-paragraph (paragraph contents info)org-odt-paragraph2909,108529
(defun org-odt-plain-list (plain-list contents info)org-odt-plain-list2922,108910
(defun org-odt--encode-tabs-and-spaces (line)org-odt--encode-tabs-and-spaces2943,109707
(defun org-odt--encode-plain-text (text &optional no-whitespace-filling)org-odt--encode-plain-text2956,110033
(defun org-odt-plain-text (text info)org-odt-plain-text2964,110340
(defun org-odt-planning (planning contents info)org-odt-planning2992,111338
(defun org-odt-property-drawer (property-drawer contents info)org-odt-property-drawer3021,112374
(defun org-odt-quote-block (quote-block contents info)org-odt-quote-block3032,112736
(defun org-odt-format-section (text style &optional name)org-odt-format-section3041,112963
(defun org-odt-section (section contents info) ; FIXMEorg-odt-section3049,113251
(defun org-odt-radio-target (radio-target text info)org-odt-radio-target3057,113480
(defun org-odt-special-block (special-block contents info)org-odt-special-block3066,113760
(defun org-odt-hfy-face-to-css (fn)org-odt-hfy-face-to-css3105,115211
(defun org-odt-htmlfontify-string (line)org-odt-htmlfontify-string3139,116595
(defun org-odt-do-format-codeorg-odt-do-format-code3157,117304
(defun org-odt-format-code (element info)org-odt-format-code3207,119149
(defun org-odt-src-block (src-block contents info)org-odt-src-block3221,119729
(defun org-odt-statistics-cookie (statistics-cookie contents info)org-odt-statistics-cookie3242,120554
(defun org-odt-strike-through (strike-through contents info)org-odt-strike-through3252,120934
(defun org-odt-subscript (subscript contents info)org-odt-subscript3262,121248
(defun org-odt-superscript (superscript contents info)org-odt-superscript3272,121548
(defun org-odt-table-style-spec (element info)org-odt-table-style-spec3282,121855
(defun org-odt-get-table-cell-styles (table-cell info)org-odt-get-table-cell-styles3288,122137
(defun org-odt-table-cell (table-cell contents info)org-odt-table-cell3348,124911
(defun org-odt-table-row (table-row contents info)org-odt-table-row3418,127426
(defun org-odt-table-first-row-data-cells (table info)org-odt-table-first-row-data-cells3448,128684
(defun org-odt--table (table contents info)org-odt--table3458,129080
(defun org-odt-table (table contents info)org-odt-table3513,131045
(defun org-odt-target (target contents info)org-odt-target3666,136768
(defun org-odt-timestamp (timestamp contents info)org-odt-timestamp3675,137007
(defun org-odt-underline (underline contents info)org-odt-underline3722,138751
(defun org-odt-verbatim (verbatim contents info)org-odt-verbatim3732,139040
(defun org-odt-verse-block (verse-block contents info)org-odt-verse-block3743,139376
(defun org-odt--translate-latex-fragments (tree backend info)org-odt--translate-latex-fragments3763,139983
(defun org-odt--translate-description-lists (tree backend info)org-odt--translate-description-lists3867,143721
(defun org-odt--translate-list-tables (tree backend info)org-odt--translate-list-tables3963,146651
(defun org-odt-create-manifest-file-entry (&rest args)org-odt-create-manifest-file-entry4012,148274
(defun org-odt-write-manifest-file ()org-odt-write-manifest-file4015,148375
(defmacro org-odt--export-wrap (out-file &rest body)org-odt--export-wrap4035,149201
(defun org-odt-export-as-odf (latex-frag &optional odf-file)org-odt-export-as-odf4152,153661
(defun org-odt-export-as-odf-and-open ()org-odt-export-as-odf-and-open4203,155641
(defun org-odt-export-to-odt (&optional async subtreep visible-only ext-plist)org-odt-export-to-odt4214,155977
(defun org-odt-reachable-p (in-fmt out-fmt)org-odt-reachable-p4286,158512
(defun org-odt-do-convert (in-file out-fmt &optional prefix-arg)org-odt-do-convert4295,158857
(defun org-odt-do-reachable-formats (in-fmt)org-odt-do-reachable-formats4338,160386
(defun org-odt-reachable-formats (in-fmt)org-odt-reachable-formats4360,161214
(defun org-odt-convert-read-params ()org-odt-convert-read-params4370,161545
(defun org-odt-convert (&optional in-file out-fmt prefix-arg)org-odt-convert4388,162209

elpa/org-20160620/ox-org.el,751
(defgroup org-export-org nilorg-export-org30,964
(defcustom org-org-htmlized-css-url nilorg-org-htmlized-css-url39,1242
(defun org-org-identity (blob contents info)org-org-identity112,4020
(defun org-org-headline (headline contents info)org-org-headline120,4349
(defun org-org-keyword (keyword contents info)org-org-keyword134,5043
(defun org-org-link (link contents info)org-org-link142,5370
(defun org-org-template (contents info)org-org-template149,5684
(defun org-org-section (section contents info)org-org-section183,7055
(defun org-org-export-as-orgorg-org-export-as-org211,8128
(defun org-org-export-to-orgorg-org-export-to-org246,9304
(defun org-org-publish-to-org (plist filename pub-dir)org-org-publish-to-org280,10397

elpa/org-20160620/ox-publish.el,4695
(defvar org-publish-temp-files nilorg-publish-temp-files49,1623
(defvar org-publish-cache nilorg-publish-cache53,1778
(defvar org-publish-after-publishing-hook nilorg-publish-after-publishing-hook57,1922
(defgroup org-publish nilorg-publish63,2142
(defcustom org-publish-project-alist nilorg-publish-project-alist68,2272
(defcustom org-publish-use-timestamps-flag torg-publish-use-timestamps-flag264,9500
(defcustom org-publish-timestamp-directoryorg-publish-timestamp-directory270,9730
(defcustom org-publish-list-skipped-files torg-publish-list-skipped-files276,9937
(defcustom org-publish-sitemap-sort-files 'alphabeticallyorg-publish-sitemap-sort-files281,10089
(defcustom org-publish-sitemap-sort-folders 'firstorg-publish-sitemap-sort-folders296,10679
(defcustom org-publish-sitemap-sort-ignore-case nilorg-publish-sitemap-sort-ignore-case308,11154
(defcustom org-publish-sitemap-date-format "%Y-%m-%d"org-publish-sitemap-date-format316,11419
(defcustom org-publish-sitemap-file-entry-format "%t"org-publish-sitemap-file-entry-format322,11616
(defun org-publish-timestamp-filename (filename &optional pub-dir pub-func)org-publish-timestamp-filename337,12036
(defun org-publish-needed-porg-publish-needed-p343,12335
(defun org-publish-update-timestamporg-publish-update-timestamp360,13181
(defun org-publish-remove-all-timestamps ()org-publish-remove-all-timestamps368,13521
(defun org-publish-expand-projects (projects-alist)org-publish-expand-projects381,13971
(defvar org-publish-sitemap-sort-files)org-publish-sitemap-sort-files394,14434
(defvar org-publish-sitemap-sort-folders)org-publish-sitemap-sort-folders395,14474
(defvar org-publish-sitemap-ignore-case)org-publish-sitemap-ignore-case396,14516
(defvar org-publish-sitemap-requested)org-publish-sitemap-requested397,14557
(defvar org-publish-sitemap-date-format)org-publish-sitemap-date-format398,14596
(defvar org-publish-sitemap-file-entry-format)org-publish-sitemap-file-entry-format399,14637
(defun org-publish-compare-directory-files (a b)org-publish-compare-directory-files400,14684
(defun org-publish-get-base-files-1org-publish-get-base-files-1438,16316
(defun org-publish-get-base-files (project &optional exclude-regexp)org-publish-get-base-files471,17751
(defun org-publish-get-project-from-filename (filename &optional up)org-publish-get-project-from-filename525,20025
(defun org-publish-org-to (backend filename extension plist &optional pub-dir)org-publish-org-to562,21350
(defun org-publish-attachment (plist filename pub-dir)org-publish-attachment600,22873
(defun org-publish-file (filename &optional project no-cache)org-publish-file622,23628
(defun org-publish-projects (projects)org-publish-projects671,25489
(defun org-publish-org-sitemap (project &optional sitemap-filename)org-publish-org-sitemap717,27601
(defun org-publish-format-file-entry (fmt file project-plist)org-publish-format-file-entry798,30852
(defun org-publish-find-title (file &optional reset)org-publish-find-title806,31151
(defun org-publish-find-date (file)org-publish-find-date829,31993
(defalias 'org-publish-project 'org-publish)org-publish-project864,33336
(defun org-publish (project &optional force async)org-publish867,33397
(defun org-publish-all (&optional force async)org-publish-all901,34710
(defun org-publish-current-file (&optional force async)org-publish-current-file923,35550
(defun org-publish-current-project (&optional force async)org-publish-current-project941,36234
(defun org-publish-collect-index (output backend info)org-publish-collect-index957,36759
(defun org-publish-index-generate-theindex (project directory)org-publish-index-generate-theindex997,38320
(defun org-publish--collect-references (output backend info)org-publish--collect-references1071,41227
(defun org-publish-resolve-external-link (search file)org-publish-resolve-external-link1137,43147
(defun org-publish-write-cache-file (&optional free-cache)org-publish-write-cache-file1173,44313
(defun org-publish-initialize-cache (project-name)org-publish-initialize-cache1194,45116
(defun org-publish-reset-cache ()org-publish-reset-cache1224,46283
(defun org-publish-cache-file-needs-publishingorg-publish-cache-file-needs-publishing1231,46517
(defun org-publish-cache-set-file-propertyorg-publish-cache-set-file-property1278,48576
(defun org-publish-cache-get-file-propertyorg-publish-cache-get-file-property1290,49151
(defun org-publish-cache-get (key)org-publish-cache-get1309,49920
(defun org-publish-cache-set (key value)org-publish-cache-set1317,50222
(defun org-publish-cache-ctime-of-src (file)org-publish-cache-ctime-of-src1324,50486

elpa/org-20160620/ox-texinfo.el,7735
(defvar orgtbl-exp-regexp)orgtbl-exp-regexp31,1021
(defgroup org-export-texinfo nilorg-export-texinfo124,5105
(defcustom org-texinfo-coding-system nilorg-texinfo-coding-system133,5309
(defcustom org-texinfo-default-class "info"org-texinfo-default-class140,5510
(defcustom org-texinfo-classesorg-texinfo-classes145,5655
(defcustom org-texinfo-format-headline-functionorg-texinfo-format-headline-function212,7802
(defcustom org-texinfo-node-description-column 32org-texinfo-node-description-column231,8441
(defcustom org-texinfo-active-timestamp-format "@emph{%s}"org-texinfo-active-timestamp-format240,8727
(defcustom org-texinfo-inactive-timestamp-format "@emph{%s}"org-texinfo-inactive-timestamp-format245,8896
(defcustom org-texinfo-diary-timestamp-format "@emph{%s}"org-texinfo-diary-timestamp-format250,9069
(defcustom org-texinfo-link-with-unknown-path-format "@indicateurl{%s}"org-texinfo-link-with-unknown-path-format257,9248
(defcustom org-texinfo-tables-verbatim nilorg-texinfo-tables-verbatim264,9432
(defcustom org-texinfo-table-scientific-notation "%s\\,(%s)"org-texinfo-table-scientific-notation269,9571
(defcustom org-texinfo-def-table-markup "@samp"org-texinfo-def-table-markup280,9944
(defcustom org-texinfo-text-markup-alist '((bold . "@strong{%s}")org-texinfo-text-markup-alist287,10102
(defcustom org-texinfo-format-drawer-functionorg-texinfo-format-drawer-function311,10931
(defcustom org-texinfo-format-inlinetask-functionorg-texinfo-format-inlinetask-function329,11431
(defcustom org-texinfo-info-process '("makeinfo %f")org-texinfo-info-process347,12071
(defcustom org-texinfo-logfiles-extensionsorg-texinfo-logfiles-extensions357,12521
(defcustom org-texinfo-remove-logfiles torg-texinfo-remove-logfiles365,12824
(defconst org-texinfo-max-toc-depth 4org-texinfo-max-toc-depth375,13177
(defconst org-texinfo-supported-coding-systemsorg-texinfo-supported-coding-systems381,13407
(defconst org-texinfo-inline-image-rulesorg-texinfo-inline-image-rules388,13788
(defun org-texinfo--filter-section-blank-lines (headline back-end info)org-texinfo--filter-section-blank-lines396,14004
(defun org-texinfo--normalize-headlines (tree back-end info)org-texinfo--normalize-headlines401,14251
(defun org-texinfo--find-verb-separator (s)org-texinfo--find-verb-separator426,15062
(defun org-texinfo--text-markup (text markup info)org-texinfo--text-markup434,15436
(defun org-texinfo--get-node (blob info)org-texinfo--get-node462,16409
(defun org-texinfo--sanitize-node (title)org-texinfo--sanitize-node479,17100
(defun org-texinfo--sanitize-content (text)org-texinfo--sanitize-content490,17501
(defun org-texinfo--wrap-float (value info &optional type label caption short)org-texinfo--wrap-float495,17672
(defun org-texinfo-template (contents info)org-texinfo-template535,19084
(defun org-texinfo-bold (bold contents info)org-texinfo-bold661,23710
(defun org-texinfo-center-block (center-block contents info)org-texinfo-center-block669,23953
(defun org-texinfo-clock (clock contents info)org-texinfo-clock677,24189
(defun org-texinfo-code (code contents info)org-texinfo-code692,24682
(defun org-texinfo-drawer (drawer contents info)org-texinfo-drawer700,24933
(defun org-texinfo-dynamic-block (dynamic-block contents info)org-texinfo-dynamic-block711,25308
(defun org-texinfo-entity (entity contents info)org-texinfo-entity719,25547
(defun org-texinfo-example-block (example-block contents info)org-texinfo-example-block728,25890
(defun org-texinfo-export-block (export-block contents info)org-texinfo-export-block737,26194
(defun org-texinfo-export-snippet (export-snippet contents info)org-texinfo-export-snippet745,26544
(defun org-texinfo-fixed-width (fixed-width contents info)org-texinfo-fixed-width753,26870
(defun org-texinfo-footnote-reference (footnote contents info)org-texinfo-footnote-reference763,27230
(defun org-texinfo-headline (headline contents info)org-texinfo-headline774,27599
(defun org-texinfo-format-headline-default-functionorg-texinfo-format-headline-default-function850,31125
(defun org-texinfo-inline-src-block (inline-src-block contents info)org-texinfo-inline-src-block861,31514
(defun org-texinfo-inlinetask (inlinetask contents info)org-texinfo-inlinetask871,31925
(defun org-texinfo-format-inlinetask-default-functionorg-texinfo-format-inlinetask-default-function887,32742
(defun org-texinfo-italic (italic contents info)org-texinfo-italic900,33209
(defun org-texinfo-item (item contents info)org-texinfo-item908,33454
(defun org-texinfo-keyword (keyword contents info)org-texinfo-keyword919,33808
(defun org-texinfo-line-break (line-break contents info)org-texinfo-line-break942,34793
(defun org-texinfo-link (link desc info)org-texinfo-link949,34993
(defun org-texinfo--inline-image (link info)org-texinfo--inline-image1036,38293
(defun org-texinfo-make-menu (scope info &optional master)org-texinfo-make-menu1069,39481
(defun org-texinfo--build-menu (scope info &optional level)org-texinfo--build-menu1096,40363
(defun org-texinfo--format-entries (entries info)org-texinfo--format-entries1118,41186
(defun org-texinfo--menu-entries (scope info)org-texinfo--menu-entries1137,41878
(defun org-texinfo-node-property (node-property contents info)org-texinfo-node-property1159,42699
(defun org-texinfo-paragraph (paragraph contents info)org-texinfo-paragraph1170,43091
(defun org-texinfo-plain-list (plain-list contents info)org-texinfo-plain-list1178,43339
(defun org-texinfo-plain-text (text info)org-texinfo-plain-text1199,44122
(defun org-texinfo-planning (planning contents info)org-texinfo-planning1230,45337
(defun org-texinfo-property-drawer (property-drawer contents info)org-texinfo-property-drawer1263,46374
(defun org-texinfo-quote-block (quote-block contents info)org-texinfo-quote-block1272,46703
(defun org-texinfo-radio-target (radio-target text info)org-texinfo-radio-target1284,47133
(defun org-texinfo-section (section contents info)org-texinfo-section1294,47427
(defun org-texinfo-special-block (special-block contents info)org-texinfo-special-block1306,47806
(defun org-texinfo-src-block (src-block contents info)org-texinfo-src-block1315,48147
(defun org-texinfo-statistics-cookie (statistics-cookie contents info)org-texinfo-statistics-cookie1338,48997
(defun org-texinfo-subscript (subscript contents info)org-texinfo-subscript1345,49264
(defun org-texinfo-superscript (superscript contents info)org-texinfo-superscript1353,49515
(defun org-texinfo-table (table contents info)org-texinfo-table1361,49766
(defun org-texinfo-table-column-widths (table info)org-texinfo-table-column-widths1386,50761
(defun org-texinfo-table-cell (table-cell contents info)org-texinfo-table-cell1410,51711
(defun org-texinfo-table-row (table-row contents info)org-texinfo-table-row1429,52354
(defun org-texinfo-target (target contents info)org-texinfo-target1446,52985
(defun org-texinfo-timestamp (timestamp contents info)org-texinfo-timestamp1454,53233
(defun org-texinfo-verbatim (verbatim contents info)org-texinfo-verbatim1469,53845
(defun org-texinfo-verse-block (verse-block contents info)org-texinfo-verse-block1478,54124
(defun org-texinfo-export-to-texinfoorg-texinfo-export-to-texinfo1487,54400
(defun org-texinfo-export-to-infoorg-texinfo-export-to-info1521,55584
(defun org-texinfo-publish-to-texinfo (plist filename pub-dir)org-texinfo-publish-to-texinfo1560,56925
(defun org-texinfo-convert-region-to-texinfo ()org-texinfo-convert-region-to-texinfo1571,57278
(defun org-texinfo-compile (file)org-texinfo-compile1579,57617
(defun org-texinfo-collect-errors (buffer)org-texinfo-collect-errors1630,59727

elpa/org-20160620/ox.el,22447
(defvar org-publish-project-alist)org-publish-project-alist86,3315
(defvar org-table-number-fraction)org-table-number-fraction87,3350
(defvar org-table-number-regexp)org-table-number-regexp88,3385
(defconst org-export-max-depth 19org-export-max-depth97,3640
(defconst org-export-options-alistorg-export-options-alist100,3734
(defconst org-export-special-keywords '("FILETAGS" "SETUPFILE" "OPTIONS")org-export-special-keywords172,7383
(defconst org-export-filters-alistorg-export-filters-alist178,7675
(defconst org-export-default-inline-image-ruleorg-export-default-inline-image-rule245,11769
(defconst org-export-ignored-local-variablesorg-export-ignored-local-variables259,12340
(defvar org-export-async-debug nilorg-export-async-debug269,12848
(defvar org-export-stack-contents nilorg-export-stack-contents279,13215
(defvar org-export-registered-backends nilorg-export-registered-backends288,13637
(defvar org-export-dispatch-last-action nilorg-export-dispatch-last-action293,13845
(defvar org-export-dispatch-last-position (make-marker)org-export-dispatch-last-position298,14042
(defvar org-export-current-backend nilorg-export-current-backend304,14365
(defgroup org-export nilorg-export324,14997
(defgroup org-export-general nilorg-export-general329,15100
(defcustom org-export-with-archived-trees 'headlineorg-export-with-archived-trees334,15223
(defcustom org-export-with-author torg-export-with-author350,15769
(defcustom org-export-with-clocks nilorg-export-with-clocks357,15989
(defcustom org-export-with-creator nilorg-export-with-creator364,16184
(defcustom org-export-with-date torg-export-with-date377,16534
(defcustom org-export-date-timestamp-format nilorg-export-date-timestamp-format384,16745
(defcustom org-export-creator-stringorg-export-creator-string397,17174
(defcustom org-export-with-drawers '(not "LOGBOOK")org-export-with-drawers406,17506
(defcustom org-export-with-email nilorg-export-with-email432,18354
(defcustom org-export-with-emphasize torg-export-with-emphasize439,18573
(defcustom org-export-exclude-tags '("noexport")org-export-exclude-tags451,18936
(defcustom org-export-with-fixed-width torg-export-with-fixed-width462,19340
(defcustom org-export-with-footnotes torg-export-with-footnotes471,19603
(defcustom org-export-with-latex torg-export-with-latex478,19812
(defcustom org-export-headline-levels 3org-export-headline-levels495,20367
(defcustom org-export-default-language "en"org-export-default-language506,20696
(defcustom org-export-preserve-breaks nilorg-export-preserve-breaks515,21070
(defcustom org-export-with-entities torg-export-with-entities522,21289
(defcustom org-export-with-inlinetasks torg-export-with-inlinetasks536,21679
(defcustom org-export-with-planning nilorg-export-with-planning545,21945
(defcustom org-export-with-priority nilorg-export-with-priority558,22320
(defcustom org-export-with-properties nilorg-export-with-properties565,22532
(defcustom org-export-with-section-numbers torg-export-with-section-numbers582,23039
(defcustom org-export-select-tags '("export")org-export-select-tags593,23384
(defcustom org-export-with-smart-quotes nilorg-export-with-smart-quotes605,23847
(defcustom org-export-with-special-strings torg-export-with-special-strings620,24320
(defcustom org-export-with-statistics-cookies torg-export-with-statistics-cookies637,24822
(defcustom org-export-with-sub-superscripts torg-export-with-sub-superscripts646,25098
(defcustom org-export-with-toc torg-export-with-toc683,26609
(defcustom org-export-with-tables torg-export-with-tables701,27267
(defcustom org-export-with-tags torg-export-with-tags710,27506
(defcustom org-export-with-tasks torg-export-with-tasks725,27960
(defcustom org-export-with-title torg-export-with-title746,28691
(defcustom org-export-time-stamp-file torg-export-time-stamp-file755,28954
(defcustom org-export-with-timestamps torg-export-with-timestamps762,29231
(defcustom org-export-with-todo-keywords torg-export-with-todo-keywords784,29942
(defcustom org-export-allow-bind-keywords nilorg-export-allow-bind-keywords791,30212
(defcustom org-export-snippet-translation-alist nilorg-export-snippet-translation-alist800,30555
(defcustom org-export-coding-system nilorg-export-coding-system815,31076
(defcustom org-export-copy-to-kill-ring nilorg-export-copy-to-kill-ring822,31263
(defcustom org-export-initial-scope 'bufferorg-export-initial-scope833,31641
(defcustom org-export-show-temporary-export-buffer torg-export-show-temporary-export-buffer841,31953
(defcustom org-export-in-background nilorg-export-in-background851,32377
(defcustom org-export-async-init-file nilorg-export-async-init-file860,32715
(defcustom org-export-dispatch-use-expert-ui nilorg-export-dispatch-use-expert-ui878,33371
(defun org-export-get-backend (name)org-export-get-backend928,35451
(defun org-export-register-backend (backend)org-export-register-backend936,35729
(defun org-export-barf-if-invalid-backend (backend)org-export-barf-if-invalid-backend957,36849
(defun org-export-derived-backend-p (backend &rest backends)org-export-derived-backend-p962,37054
(defun org-export-get-all-transcoders (backend)org-export-get-all-transcoders977,37717
(defun org-export-get-all-options (backend)org-export-get-all-options998,38514
(defun org-export-get-all-filters (backend)org-export-get-all-filters1016,39221
(defun org-export-define-backend (backend transcoders &rest body)org-export-define-backend1034,39951
(defun org-export-define-derived-backend (child parent &rest body)org-export-define-derived-backend1172,44940
(defun org-export-get-environment (&optional backend subtreep ext-plist)org-export-get-environment1292,49033
(defun org-export--parse-option-keyword (options &optional backend)org-export--parse-option-keyword1337,50674
(defun org-export--get-subtree-options (&optional backend)org-export--get-subtree-options1361,51571
(defun org-export--get-inbuffer-options (&optional backend)org-export--get-inbuffer-options1411,53614
(defun org-export--get-buffer-attributes ()org-export--get-buffer-attributes1535,58009
(defun org-export--get-global-options (&optional backend)org-export--get-global-options1540,58230
(defun org-export--list-bound-variables ()org-export--list-bound-variables1564,59065
(defsubst org-export-get-parent (blob)org-export-get-parent1606,60744
(defun org-export-collect-tree-properties (data info)org-export-collect-tree-properties1626,61558
(defun org-export--get-min-level (data options)org-export--get-min-level1661,62760
(defun org-export--collect-headline-numbering (data options)org-export--collect-headline-numbering1679,63525
(defun org-export--selected-trees (data info)org-export--selected-trees1704,64509
(defun org-export--skip-p (blob options selected)org-export--skip-p1740,65810
(defun org-export-transcoder (blob info)org-export-transcoder1840,70173
(defun org-export-data (data info)org-export-data1849,70589
(defun org-export-data-with-backend (data backend info)org-export-data-with-backend1943,73973
(defun org-export-expand (blob contents &optional with-affiliated)org-export-expand1966,74856
(defvar org-export-before-processing-hook nilorg-export-before-processing-hook2042,78007
(defvar org-export-before-parsing-hook nilorg-export-before-parsing-hook2053,78438
(defvar org-export-filter-options-functions nilorg-export-filter-options-functions2067,78887
(defvar org-export-filter-parse-tree-functions nilorg-export-filter-parse-tree-functions2073,79154
(defvar org-export-filter-plain-text-functions nilorg-export-filter-plain-text-functions2080,79484
(defvar org-export-filter-body-functions nilorg-export-filter-body-functions2087,79768
(defvar org-export-filter-final-output-functions nilorg-export-filter-final-output-functions2094,80051
(defvar org-export-filter-babel-call-functions nilorg-export-filter-babel-call-functions2104,80399
(defvar org-export-filter-center-block-functions nilorg-export-filter-center-block-functions2110,80691
(defvar org-export-filter-clock-functions nilorg-export-filter-clock-functions2116,80987
(defvar org-export-filter-diary-sexp-functions nilorg-export-filter-diary-sexp-functions2122,81269
(defvar org-export-filter-drawer-functions nilorg-export-filter-drawer-functions2128,81561
(defvar org-export-filter-dynamic-block-functions nilorg-export-filter-dynamic-block-functions2134,81845
(defvar org-export-filter-example-block-functions nilorg-export-filter-example-block-functions2140,82143
(defvar org-export-filter-export-block-functions nilorg-export-filter-export-block-functions2146,82441
(defvar org-export-filter-fixed-width-functions nilorg-export-filter-fixed-width-functions2152,82737
(defvar org-export-filter-footnote-definition-functions nilorg-export-filter-footnote-definition-functions2158,83031
(defvar org-export-filter-headline-functions nilorg-export-filter-headline-functions2164,83341
(defvar org-export-filter-horizontal-rule-functions nilorg-export-filter-horizontal-rule-functions2170,83629
(defvar org-export-filter-inlinetask-functions nilorg-export-filter-inlinetask-functions2176,83931
(defvar org-export-filter-item-functions nilorg-export-filter-item-functions2182,84223
(defvar org-export-filter-keyword-functions nilorg-export-filter-keyword-functions2188,84503
(defvar org-export-filter-latex-environment-functions nilorg-export-filter-latex-environment-functions2194,84789
(defvar org-export-filter-node-property-functions nilorg-export-filter-node-property-functions2200,85095
(defvar org-export-filter-paragraph-functions nilorg-export-filter-paragraph-functions2206,85393
(defvar org-export-filter-plain-list-functions nilorg-export-filter-plain-list-functions2212,85683
(defvar org-export-filter-planning-functions nilorg-export-filter-planning-functions2218,85975
(defvar org-export-filter-property-drawer-functions nilorg-export-filter-property-drawer-functions2224,86263
(defvar org-export-filter-quote-block-functions nilorg-export-filter-quote-block-functions2230,86565
(defvar org-export-filter-section-functions nilorg-export-filter-section-functions2237,86865
(defvar org-export-filter-special-block-functions nilorg-export-filter-special-block-functions2243,87151
(defvar org-export-filter-src-block-functions nilorg-export-filter-src-block-functions2249,87449
(defvar org-export-filter-table-functions nilorg-export-filter-table-functions2255,87739
(defvar org-export-filter-table-cell-functions nilorg-export-filter-table-cell-functions2261,88021
(defvar org-export-filter-table-row-functions nilorg-export-filter-table-row-functions2267,88313
(defvar org-export-filter-verse-block-functions nilorg-export-filter-verse-block-functions2273,88603
(defvar org-export-filter-bold-functions nilorg-export-filter-bold-functions2282,88920
(defvar org-export-filter-code-functions nilorg-export-filter-code-functions2288,89203
(defvar org-export-filter-entity-functions nilorg-export-filter-entity-functions2294,89486
(defvar org-export-filter-export-snippet-functions nilorg-export-filter-export-snippet-functions2300,89770
(defvar org-export-filter-footnote-reference-functions nilorg-export-filter-footnote-reference-functions2306,90070
(defvar org-export-filter-inline-babel-call-functions nilorg-export-filter-inline-babel-call-functions2312,90378
(defvar org-export-filter-inline-src-block-functions nilorg-export-filter-inline-src-block-functions2318,90684
(defvar org-export-filter-italic-functions nilorg-export-filter-italic-functions2324,90988
(defvar org-export-filter-latex-fragment-functions nilorg-export-filter-latex-fragment-functions2330,91275
(defvar org-export-filter-line-break-functions nilorg-export-filter-line-break-functions2336,91575
(defvar org-export-filter-link-functions nilorg-export-filter-link-functions2342,91867
(defvar org-export-filter-radio-target-functions nilorg-export-filter-radio-target-functions2348,92147
(defvar org-export-filter-statistics-cookie-functions nilorg-export-filter-statistics-cookie-functions2354,92443
(defvar org-export-filter-strike-through-functions nilorg-export-filter-strike-through-functions2360,92749
(defvar org-export-filter-subscript-functions nilorg-export-filter-subscript-functions2366,93052
(defvar org-export-filter-superscript-functions nilorg-export-filter-superscript-functions2372,93342
(defvar org-export-filter-target-functions nilorg-export-filter-target-functions2378,93636
(defvar org-export-filter-timestamp-functions nilorg-export-filter-timestamp-functions2384,93920
(defvar org-export-filter-underline-functions nilorg-export-filter-underline-functions2390,94210
(defvar org-export-filter-verbatim-functions nilorg-export-filter-verbatim-functions2396,94503
(defun org-export-filter-apply-functions (filters value info)org-export-filter-apply-functions2414,95242
(defun org-export-install-filters (info)org-export-install-filters2433,95980
(defun org-export-copy-buffer ()org-export-copy-buffer2494,98405
(defmacro org-export-with-buffer-copy (&rest body)org-export-with-buffer-copy2505,98793
(defun org-export--generate-copy-script (buffer)org-export--generate-copy-script2523,99451
(defun org-export--delete-comments ()org-export--delete-comments2587,101696
(defun org-export--prune-tree (data info)org-export--prune-tree2631,103456
(defun org-export--remove-uninterpreted-data (data info)org-export--remove-uninterpreted-data2682,105601
(defun org-export--remove-uninterpreted-data-1 (data info)org-export--remove-uninterpreted-data-12698,106207
(defun org-export--merge-external-footnote-definitions (tree)org-export--merge-external-footnote-definitions2765,108460
(defun org-export-asorg-export-as2891,112828
(defun org-export-string-as (string backend &optional body-only ext-plist)org-export-string-as3056,119472
(defun org-export-replace-region-by (backend)org-export-replace-region-by3077,120178
(defun org-export-insert-default-template (&optional backend subtreep)org-export-insert-default-template3088,120621
(defun org-export-expand-include-keyword (&optional included dir footnotes)org-export-expand-include-keyword3172,123981
(defun org-export--inclusion-absolute-lines (file location only-contents lines)org-export--inclusion-absolute-lines3310,129120
(defun org-export--prepare-file-contentsorg-export--prepare-file-contents3372,131475
(defun org-export-execute-babel-code ()org-export-execute-babel-code3510,136920
(defun org-export--copy-to-kill-ring-p ()org-export--copy-to-kill-ring-p3518,137263
(defun org-export-read-attribute (attribute element &optional property)org-export-read-attribute3544,138180
(defun org-export-get-caption (element &optional shortp)org-export-get-caption3580,139574
(defun org-export-with-backend (backend data &optional contents info)org-export-with-backend3601,140354
(defun org-export-snippet-backend (export-snippet)org-export-snippet-backend3634,141786
(defun org-export-get-footnote-definition (footnote-reference info)org-export-get-footnote-definition3659,142735
(defun org-export--footnote-reference-maporg-export--footnote-reference-map3680,143636
(defun org-export-collect-footnote-definitions (info &optional data body-first)org-export-collect-footnote-definitions3725,145511
(defun org-export-footnote-first-reference-porg-export-footnote-first-reference-p3753,146644
(defun org-export-get-footnote-number (footnote info &optional data body-first)org-export-get-footnote-number3779,147697
(defun org-export-get-relative-level (headline info)org-export-get-relative-level3834,149938
(defun org-export-low-level-p (headline info)org-export-low-level-p3840,150195
(defun org-export-get-headline-number (headline info)org-export-get-headline-number3855,150758
(defun org-export-numbered-headline-p (headline info)org-export-numbered-headline-p3861,151044
(defun org-export-number-to-roman (n)org-export-number-to-roman3871,151524
(defun org-export-get-tags (element info &optional tags inherited)org-export-get-tags3887,151992
(defun org-export-get-node-property (property blob &optional inherited)org-export-get-node-property3916,153288
(defun org-export-get-category (blob info)org-export-get-category3936,154033
(defun org-export-get-alt-title (headline info)org-export-get-alt-title3954,154729
(defun org-export-first-sibling-p (blob info)org-export-first-sibling-p3963,155169
(defun org-export-last-sibling-p (blob info)org-export-last-sibling-p3971,155525
(defun org-export-get-date (info &optional fmt)org-export-get-date3984,155954
(defun org-export-custom-protocol-maybe (link desc backend)org-export-custom-protocol-maybe4030,157680
(defun org-export-get-coderef-format (path desc)org-export-get-coderef-format4051,158443
(defun org-export-inline-image-p (link &optional rules)org-export-inline-image-p4060,158750
(defun org-export-resolve-coderef (ref info)org-export-resolve-coderef4083,159606
(defun org-export-resolve-fuzzy-link (link info)org-export-resolve-fuzzy-link4112,160740
(defun org-export-resolve-id-link (link info)org-export-resolve-id-link4181,162989
(defun org-export-resolve-radio-link (link info)org-export-resolve-radio-link4201,163810
(defun org-export-file-uri (filename)org-export-file-uri4220,164436
(defun org-export-get-reference (datum info)org-export-get-reference4236,164959
(defun org-export-get-ordinal (element info &optional types predicate)org-export-get-ordinal4255,165618
(defun org-export-get-loc (element info)org-export-get-loc4332,168961
(defun org-export-unravel-code (element)org-export-unravel-code4360,169918
(defun org-export-format-code (code fun &optional num-lines ref-alist)org-export-format-code4405,171520
(defun org-export-format-code-default (element info)org-export-format-code-default4434,172738
(defun org-export-table-has-special-column-p (table)org-export-table-has-special-column-p4511,175664
(defun org-export-table-has-header-p (table info)org-export-table-has-header-p4532,176520
(defun org-export-table-row-is-special-p (table-row info)org-export-table-row-is-special-p4559,177347
(defun org-export-table-row-group (table-row info)org-export-table-row-group4595,178741
(defun org-export-table-cell-width (table-cell info)org-export-table-cell-width4619,179686
(defun org-export-table-cell-alignment (table-cell info)org-export-table-cell-alignment4658,181207
(defun org-export-table-cell-borders (table-cell info)org-export-table-cell-borders4735,184260
(defun org-export-table-cell-starts-colgroup-p (table-cell info)org-export-table-cell-starts-colgroup-p4824,187906
(defun org-export-table-cell-ends-colgroup-p (table-cell info)org-export-table-cell-ends-colgroup-p4835,188436
(defun org-export-table-row-starts-rowgroup-p (table-row info)org-export-table-row-starts-rowgroup-p4845,188889
(defun org-export-table-row-ends-rowgroup-p (table-row info)org-export-table-row-ends-rowgroup-p4854,189347
(defun org-export-table-row-in-header-p (table-row info)org-export-table-row-in-header-p4863,189800
(defun org-export-table-row-starts-header-p (table-row info)org-export-table-row-starts-header-p4871,190171
(defun org-export-table-row-ends-header-p (table-row info)org-export-table-row-ends-header-p4877,190464
(defun org-export-table-row-number (table-row info)org-export-table-row-number4883,190752
(defun org-export-table-dimensions (table info)org-export-table-dimensions4898,191374
(defun org-export-table-cell-address (table-cell info)org-export-table-cell-address4918,192051
(defun org-export-get-table-cell-at (address table info)org-export-get-table-cell-at4937,192747
(defun org-export-collect-headlines (info &optional n scope)org-export-collect-headlines4974,194065
(defun org-export-collect-elements (type info &optional predicate)org-export-collect-elements5008,195539
(defun org-export-collect-tables (info)org-export-collect-tables5028,196277
(defun org-export-collect-figures (info predicate)org-export-collect-figures5035,196489
(defun org-export-collect-listings (info)org-export-collect-listings5050,197049
(defconst org-export-smart-quotes-alistorg-export-smart-quotes-alist5072,197738
(defun org-export--smart-quote-status (s info)org-export--smart-quote-status5192,203487
(defun org-export-activate-smart-quotes (s encoding info &optional original)org-export-activate-smart-quotes5271,206349
(defun org-export-get-parent-headline (blob)org-export-get-parent-headline5313,207904
(defun org-export-get-parent-element (object)org-export-get-parent-element5318,208080
(defun org-export-get-parent-table (object)org-export-get-parent-table5323,208269
(defun org-export-get-previous-element (blob info &optional n)org-export-get-previous-element5328,208458
(defun org-export-get-next-element (blob info &optional n)org-export-get-next-element5353,209401
(defconst org-export-dictionaryorg-export-dictionary5386,210563
(defun org-export-translate (s encoding info)org-export-translate5669,223433
(defmacro org-export-async-start  (fun &rest body)org-export-async-start5714,225266
(defun org-export-to-bufferorg-export-to-buffer5801,229445
(defun org-export-to-fileorg-export-to-file5866,231874
(defun org-export-output-file-name (extension &optional subtreep pub-dir)org-export-output-file-name5928,234369
(defun org-export-add-to-stack (source backend &optional process)org-export-add-to-stack5980,236373
(defun org-export-stack ()org-export-stack5993,236874
(defun org-export--stack-source-at-point ()org-export--stack-source-at-point6003,237231
(defun org-export-stack-clear ()org-export-stack-clear6016,237840
(defun org-export-stack-refresh (&rest dummy)org-export-stack-refresh6021,237972
(defun org-export-stack-remove (&optional source)org-export-stack-remove6060,239207
(defun org-export-stack-view (&optional in-emacs)org-export-stack-view6069,239572
(defvar org-export-stack-mode-maporg-export-stack-mode-map6080,240018
(define-derived-mode org-export-stack-mode special-mode "Org-Stack"org-export-stack-mode6097,240638
(defun org-export-dispatch (&optional arg)org-export-dispatch6133,241842
(defun org-export--dispatch-ui (options first-key expertp)org-export--dispatch-ui6209,244737
(defun org-export--dispatch-actionorg-export--dispatch-action6384,251457

elpa/org-bullets-20140918.1137/org-bullets-autoloads.el,0

elpa/org-bullets-20140918.1137/org-bullets-pkg.el,161
(define-package "org-bullets" "20140918.1137" "Show bullets in org-mode as UTF-8 characters" 'nil :url "https://github.com/sabof/org-bullets")"org-bullets"1,0

elpa/org-bullets-20140918.1137/org-bullets.el,372
(defgroup org-bullets nilorg-bullets33,1160
(defcustom org-bullets-bullet-listorg-bullets-bullet-list39,1401
(defcustom org-bullets-face-name nilorg-bullets-face-name54,1785
(defvar org-bullets-bullet-maporg-bullets-bullet-map61,2039
(defun org-bullets-level-char (level)org-bullets-level-char74,2343
(define-minor-mode org-bullets-modeorg-bullets-mode81,2521

elpa/org-pandoc-20130729.1850/org-pandoc-autoloads.el,0

elpa/org-pandoc-20130729.1850/org-pandoc-pkg.el,99
(define-package "org-pandoc" "20130729.1850" "Export from Org using Pandoc" 'nil)"org-pandoc"1,0

elpa/org-pandoc-20130729.1850/ox-pandoc.el,1669
(defgroup org-export-pandoc nilorg-export-pandoc43,1573
(defcustom org-pandoc-process-after-export torg-pandoc-process-after-export50,1748
(defcustom org-pandoc-command "pandoc"org-pandoc-command57,1959
(defcustom org-pandoc-extra-options ""org-pandoc-extra-options62,2071
(defcustom org-pandoc-output-format 'epuborg-pandoc-output-format69,2289
(defcustom org-pandoc-output-standalone torg-pandoc-output-standalone74,2426
(defcustom org-pandoc-epub-rights nilorg-pandoc-epub-rights79,2569
(defcustom org-pandoc-epub-stylesheet nilorg-pandoc-epub-stylesheet84,2714
(defvar org-pandoc---epub-metadata nil)org-pandoc---epub-metadata89,2841
(defvar org-pandoc---epub-cover-filename nil)org-pandoc---epub-cover-filename90,2881
(defvar org-pandoc---epub-stylesheet-filename nil)org-pandoc---epub-stylesheet-filename91,2927
(defvar org-pandoc---command-options nil)org-pandoc---command-options92,2978
(defvar org-pandoc-xml-escapesorg-pandoc-xml-escapes111,3787
(defun org-pandoc-escape-xml (string)org-pandoc-escape-xml118,3926
(defun org-pandoc-make-copyright-string (author email)org-pandoc-make-copyright-string125,4133
(defun org-pandoc-template (contents info)org-pandoc-template131,4327
(defun org-pandoc-export-as-pandoc (&optional async subtreep visible-only)org-pandoc-export-as-pandoc168,6319
(defun org-pandoc-run-pandoc (filename outfilename output-format &optional options)org-pandoc-run-pandoc185,7056
(defun org-pandoc-export-to-file (&optional outfile subtreep visible-only)org-pandoc-export-to-file194,7490
(defun org-pandoc-export-to-pandoc (&optional async subtreep visible-only)org-pandoc-export-to-pandoc217,8951

elpa/ox-gfm-20160520.1442/ox-gfm-autoloads.el,0

elpa/ox-gfm-20160520.1442/ox-gfm-pkg.el,162
(define-package "ox-gfm" "20160520.1442" "Github Flavored Markdown Back-End for Org Export Engine" 'nil :keywords '("org" "wp" "markdown" "github"))"ox-gfm"1,0

elpa/ox-gfm-20160520.1442/ox-gfm.el,1455
(defgroup org-export-gfm nilorg-export-gfm37,1076
(defun org-gfm-paragraph (paragraph contents info)org-gfm-paragraph73,2299
(defun org-gfm-src-block (src-block contents info)org-gfm-src-block89,2929
(defun org-gfm-strike-through (strike-through contents info)org-gfm-strike-through102,3365
(defvar width-cookies nil)width-cookies111,3632
(defvar width-cookies-table nil)width-cookies-table112,3659
(defconst gfm-table-left-border "|")gfm-table-left-border114,3693
(defconst gfm-table-right-border " |")gfm-table-right-border115,3730
(defconst gfm-table-separator " |")gfm-table-separator116,3769
(defun org-gfm-table-col-width (table column info)org-gfm-table-col-width118,3806
(defun org-gfm-make-hline-builder (table info char)org-gfm-make-hline-builder152,5166
(defun org-gfm-table-cell (table-cell contents info)org-gfm-table-cell164,5547
(defun org-gfm-table-row (table-row contents info)org-gfm-table-row182,6299
(defun org-gfm-table (table contents info)org-gfm-table208,7426
(defun org-gfm-format-toc (headline)org-gfm-format-toc236,8752
(defun org-gfm-inner-template (contents info)org-gfm-inner-template254,9470
(defun org-gfm-export-as-markdown (&optional async subtreep visible-only)org-gfm-export-as-markdown269,10000
(defun org-gfm-convert-region-to-md ()org-gfm-convert-region-to-md297,10939
(defun org-gfm-export-to-markdown (&optional async subtreep visible-only)org-gfm-export-to-markdown307,11298

elpa/ox-twbs-20160306.2258/ox-twbs-autoloads.el,0

elpa/ox-twbs-20160306.2258/ox-twbs-pkg.el,210
(define-package "ox-twbs" "20160306.2258" "Bootstrap compatible HTML Back-End for Org" 'nil :url "https://github.com/marsmining/ox-twbs" :keywords '("org" "html" "publish" "twitter" "bootstrap"))"ox-twbs"1,0

elpa/ox-twbs-20160306.2258/ox-twbs.el,13743
(defvar org-twbs-format-table-no-css)org-twbs-format-table-no-css156,6220
(defvar htmlize-buffer-places)  ; from htmlize.elhtmlize-buffer-places157,6258
(defvar org-twbs--pre/postamble-class ""org-twbs--pre/postamble-class159,6309
(defconst org-twbs-special-string-regexpsorg-twbs-special-string-regexps162,6389
(defconst org-twbs-scriptsorg-twbs-scripts169,6679
(defconst org-twbs-style-defaultorg-twbs-style-default183,7022
(defgroup org-export-twbs nilorg-export-twbs359,10895
(defcustom org-twbs-text-markup-alistorg-twbs-text-markup-alist366,11040
(defcustom org-twbs-indent nilorg-twbs-indent388,11852
(defcustom org-twbs-use-unicode-chars nilorg-twbs-use-unicode-chars396,12090
(defcustom org-twbs-format-drawer-functionorg-twbs-format-drawer-function405,12313
(defcustom org-twbs-footnotes-section "<div id=\"footnotes\">org-twbs-footnotes-section426,12902
(defcustom org-twbs-footnote-format "<sup>%s</sup>"org-twbs-footnote-format439,13304
(defcustom org-twbs-footnote-separator "<sup>, </sup>"org-twbs-footnote-separator445,13497
(defcustom org-twbs-toplevel-hlevel 2org-twbs-toplevel-hlevel452,13648
(defcustom org-twbs-format-headline-function 'ignoreorg-twbs-format-headline-function463,14176
(defcustom org-twbs-allow-name-attribute-in-anchors torg-twbs-allow-name-attribute-in-anchors481,14733
(defcustom org-twbs-format-inlinetask-function 'ignoreorg-twbs-format-inlinetask-function492,15052
(defcustom org-twbs-with-latex org-export-with-latexorg-twbs-with-latex511,15687
(defcustom org-twbs-link-org-files-as-html torg-twbs-link-org-files-as-html541,16847
(defcustom org-twbs-inline-images torg-twbs-inline-images555,17418
(defcustom org-twbs-inline-image-rulesorg-twbs-inline-image-rules564,17703
(defcustom org-twbs-protect-char-alistorg-twbs-protect-char-alist580,18321
(defcustom org-twbs-htmlize-output-type 'inline-cssorg-twbs-htmlize-output-type591,18632
(defcustom org-twbs-htmlize-font-prefix "org-"org-twbs-htmlize-font-prefix610,19713
(defcustom org-twbs-table-default-attributesorg-twbs-table-default-attributes617,19884
(defcustom org-twbs-table-header-tags '("<th scope=\"%s\"%s>" . "</th>")org-twbs-table-header-tags628,20348
(defcustom org-twbs-table-data-tags '("<td%s>" . "</td>")org-twbs-table-data-tags638,20912
(defcustom org-twbs-table-row-tags '("<tr>" . "</tr>")org-twbs-table-row-tags647,21386
(defcustom org-twbs-table-align-individual-fields torg-twbs-table-align-individual-fields685,22882
(defcustom org-twbs-table-use-header-tags-for-first-column nilorg-twbs-table-use-header-tags-for-first-column693,23209
(defcustom org-twbs-table-caption-above torg-twbs-table-caption-above699,23427
(defcustom org-twbs-tag-class "badge"org-twbs-tag-class707,23629
(defcustom org-twbs-tag-class-prefix ""org-twbs-tag-class-prefix712,23736
(defcustom org-twbs-extension "html"org-twbs-extension723,24146
(defcustom org-twbs-coding-system 'utf-8org-twbs-coding-system728,24270
(defcustom org-twbs-container-element "div"org-twbs-container-element736,24481
(defcustom org-twbs-divsorg-twbs-divs745,24773
(defcustom org-twbs-metadata-timestamp-format "%Y-%m-%d %a %H:%M"org-twbs-metadata-timestamp-format769,25774
(defcustom org-twbs-mathjax-optionsorg-twbs-mathjax-options779,26095
(defcustom org-twbs-mathjax-templateorg-twbs-mathjax-template815,27767
(defcustom org-twbs-postamble 'autoorg-twbs-postamble848,28449
(defcustom org-twbs-postamble-formatorg-twbs-postamble-format870,29376
(defcustom org-twbs-validation-linkorg-twbs-validation-link898,30387
(defcustom org-twbs-creator-stringorg-twbs-creator-string904,30575
(defcustom org-twbs-preamble torg-twbs-preamble917,31086
(defcustom org-twbs-preamble-format '(("en" ""))org-twbs-preamble-format937,31893
(defcustom org-twbs-link-up ""org-twbs-link-up965,32871
(defcustom org-twbs-link-home ""org-twbs-link-home970,33029
(defcustom org-twbs-link-use-abs-url nilorg-twbs-link-use-abs-url975,33191
(defcustom org-twbs-home/up-formatorg-twbs-home/up-format982,33387
(defcustom org-twbs-head-include-scripts torg-twbs-head-include-scripts1000,33968
(defcustom org-twbs-head-include-default-style torg-twbs-head-include-default-style1013,34397
(define-obsolete-variable-alias 'org-twbs-style 'org-twbs-head "24.4")org-twbs-style1025,34840
(defcustom org-twbs-head "org-twbs-head1026,34911
(defcustom org-twbs-head-extra ""org-twbs-head-extra1045,35731
(defcustom org-twbs-todo-kwd-class-prefix ""org-twbs-todo-kwd-class-prefix1059,36127
(defcustom org-twbs-todo-kwd-class-undone "label-primary"org-twbs-todo-kwd-class-undone1068,36529
(defcustom org-twbs-todo-kwd-class-done "label-default"org-twbs-todo-kwd-class-done1074,36751
(defcustom org-twbs-google-analytics "org-twbs-google-analytics1082,36990
(defun org-twbs-close-tag (tag attr info)org-twbs-close-tag1102,37661
(defun org-twbs--make-attribute-string (attributes)org-twbs--make-attribute-string1105,37737
(defun org-twbs--wrap-image (contents info &optional caption label)org-twbs--wrap-image1118,38411
(defun org-twbs--format-image (source attributes info)org-twbs--format-image1133,39042
(defun org-twbs--textarea-block (element)org-twbs--textarea-block1152,39740
(defun org-twbs--has-caption-p (element &optional info)org-twbs--has-caption-p1162,40203
(defun org-twbs-htmlize-region-for-paste (beg end)org-twbs-htmlize-region-for-paste1171,40555
(defun org-twbs-htmlize-generate-css ()org-twbs-htmlize-generate-css1185,41213
(defun org-twbs--make-string (n string)org-twbs--make-string1219,42658
(defun org-twbs-fix-class-name (kwd)    ; audit callers of this functionorg-twbs-fix-class-name1223,42817
(defun org-twbs-format-footnote-reference (n def refcnt)org-twbs-format-footnote-reference1231,43101
(defun org-twbs-format-footnotes-section (section-name definitions)org-twbs-format-footnotes-section1240,43549
(defun org-twbs-format-footnote-definition (fn)org-twbs-format-footnote-definition1245,43755
(defun org-twbs-collect-footnote-definitions (info)org-twbs-collect-footnote-definitions1257,44209
(defun org-twbs-footnote-section (info)org-twbs-footnote-section1267,44687
(defun org-twbs--build-meta-info (info)org-twbs--build-meta-info1286,45378
(defun org-twbs--build-head (info)org-twbs--build-head1344,47973
(defun org-twbs--build-mathjax-config (info)org-twbs--build-mathjax-config1363,48935
(defun org-twbs-format-spec (info)org-twbs-format-spec1383,50008
(defun org-twbs--build-pre/postamble (type info)org-twbs--build-pre/postamble1402,50902
(defun org-twbs-inner-template (contents info)org-twbs-inner-template1465,54009
(defun org-twbs-template (contents info)org-twbs-template1475,54310
(defun org-twbs--translate (s info)org-twbs--translate1529,56167
(defun org-twbs--anchor (&optional id desc attributes)org-twbs--anchor1536,56361
(defun org-twbs--todo (todo)org-twbs--todo1546,56748
(defun org-twbs--tags (tags)org-twbs--tags1561,57270
(defun* org-twbs-format-headlineorg-twbs-format-headline1576,57727
(defun org-twbs-fontify-code (code lang)org-twbs-fontify-code1591,58258
(defun org-twbs-do-format-codeorg-twbs-do-format-code1643,60595
(defun org-twbs-format-code (element info)org-twbs-format-code1678,62017
(defun org-twbs-display-headline-number-p (headline-number info)org-twbs-display-headline-number-p1698,62852
(defun org-twbs-collect-headlines (info depth &optional scope)org-twbs-collect-headlines1703,63114
(defun org-twbs-toc (depth info &optional scope)org-twbs-toc1712,63500
(defun org-twbs--toc-text (toc-entries)org-twbs--toc-text1730,64331
(defun org-twbs--format-toc-headline (headline info)org-twbs--format-toc-headline1755,65305
(defun org-twbs-list-of-listings (info)org-twbs-list-of-listings1800,67804
(defun org-twbs-list-of-tables (info)org-twbs-list-of-tables1835,69474
(defun org-twbs-bold (bold contents info)org-twbs-bold1875,71164
(defun org-twbs-center-block (center-block contents info)org-twbs-center-block1884,71438
(defun org-twbs-clock (clock contents info)org-twbs-clock1892,71711
(defun org-twbs-code (code contents info)org-twbs-code1908,72267
(defun org-twbs-drawer (drawer contents info)org-twbs-drawer1917,72568
(defun org-twbs-dynamic-block (dynamic-block contents info)org-twbs-dynamic-block1931,73060
(defun org-twbs-entity (entity contents info)org-twbs-entity1939,73317
(defun org-twbs-example-block (example-block contents info)org-twbs-example-block1947,73557
(defun org-twbs-export-snippet (export-snippet contents info)org-twbs-export-snippet1958,73982
(defun org-twbs-export-block (export-block contents info)org-twbs-export-block1967,74300
(defun org-twbs-fixed-width (fixed-width contents info)org-twbs-fixed-width1975,74639
(defun org-twbs-footnote-reference (footnote-reference contents info)org-twbs-footnote-reference1985,75015
(defun org-twbs-format-headline--wraporg-twbs-format-headline--wrap2010,76106
(defun org-twbs-headline (headline contents info)org-twbs-headline2047,78306
(defun org-twbs--container (headline info)org-twbs--container2115,82087
(defun org-twbs-horizontal-rule (horizontal-rule contents info)org-twbs-horizontal-rule2123,82329
(defun org-twbs-inline-src-block (inline-src-block contents info)org-twbs-inline-src-block2130,82580
(defun org-twbs-format-section (text class &optional id)org-twbs-format-section2140,82995
(defun org-twbs-inlinetask (inlinetask contents info)org-twbs-inlinetask2145,83257
(defun org-twbs-italic (italic contents info)org-twbs-italic2169,84280
(defun org-twbs-checkbox (checkbox)org-twbs-checkbox2177,84546
(defun org-twbs-format-list-item (contents type checkbox infoorg-twbs-format-list-item2184,84745
(defun org-twbs-item (item contents info)org-twbs-item2218,86023
(defun org-twbs-keyword (keyword contents info)org-twbs-keyword2233,86639
(defun org-twbs-format-latex-arity (prefix &optional dir overlays msgorg-twbs-format-latex-arity2253,87482
(defun org-twbs-format-latex (latex-frag processing-type info)org-twbs-format-latex2264,88039
(defun org-twbs-latex-environment (latex-environment contents info)org-twbs-latex-environment2299,89694
(defun org-twbs-latex-fragment (latex-fragment contents info)org-twbs-latex-fragment2322,90736
(defun org-twbs-line-break (line-break contents info)org-twbs-line-break2339,91472
(defun org-twbs-inline-image-p (link info)org-twbs-inline-image-p2346,91708
(defvar org-twbs-standalone-image-predicate)org-twbs-standalone-image-predicate2368,92662
(defun org-twbs-standalone-image-p (element info)org-twbs-standalone-image-p2369,92707
(defun org-twbs-export-file-uri (filename)org-twbs-export-file-uri2407,94298
(defun org-twbs-fuzzy (file search)org-twbs-fuzzy2414,94644
(defun org-twbs-link (link desc info)org-twbs-link2426,95169
(defun org-twbs-paragraph (paragraph contents info)org-twbs-paragraph2603,104154
(defun org-twbs-begin-plain-list (type &optional arg1)org-twbs-begin-plain-list2642,105931
(defun org-twbs-end-plain-list (type)org-twbs-end-plain-list2653,106327
(defun org-twbs-plain-list (plain-list contents info)org-twbs-plain-list2660,106508
(defun org-twbs-convert-special-strings (string)org-twbs-convert-special-strings2672,106967
(defun org-twbs-encode-plain-text (text)org-twbs-encode-plain-text2682,107327
(defun org-twbs-plain-text (text info)org-twbs-plain-text2691,107638
(defun org-twbs-planning (planning contents info)org-twbs-planning2717,108611
(defun org-twbs-property-drawer (property-drawer contents info)org-twbs-property-drawer2744,109707
(defun org-twbs-quote-block (quote-block contents info)org-twbs-quote-block2754,110013
(defun org-twbs-quote-section (quote-section contents info)org-twbs-quote-section2762,110288
(defun org-twbs-section (section contents info)org-twbs-section2771,110639
(defun org-twbs-radio-target (radio-target text info)org-twbs-radio-target2793,111580
(defun org-twbs-special-block (special-block contents info)org-twbs-special-block2802,111880
(defun org-twbs-src-block (src-block contents info)org-twbs-src-block2825,112958
(defun org-twbs-statistics-cookie (statistics-cookie contents info)org-twbs-statistics-cookie2848,114018
(defun org-twbs-strike-through (strike-through contents info)org-twbs-strike-through2856,114351
(defun org-twbs-subscript (subscript contents info)org-twbs-subscript2865,114672
(defun org-twbs-superscript (superscript contents info)org-twbs-superscript2873,114920
(defun org-twbs-table-cell (table-cell contents info)org-twbs-table-cell2881,115173
(defun org-twbs-table-row (table-row contents info)org-twbs-table-row2909,116578
(defun org-twbs-table-first-row-data-cells (table info)org-twbs-table-first-row-data-cells2953,118623
(defun org-twbs-table--table.el-table (table info)org-twbs-table--table.el-table2965,119142
(defun org-twbs-table (table contents info)org-twbs-table2982,119817
(defun org-twbs-target (target contents info)org-twbs-target3041,122587
(defun org-twbs-timestamp (timestamp contents info)org-twbs-timestamp3050,122843
(defun org-twbs-underline (underline contents info)org-twbs-underline3061,123280
(defun org-twbs-verbatim (verbatim contents info)org-twbs-verbatim3070,123575
(defun org-twbs-verse-block (verse-block contents info)org-twbs-verse-block3079,123901
(defun org-twbs-final-function (contents backend info)org-twbs-final-function3102,124931
(defun org-twbs-export-as-htmlorg-twbs-export-as-html3118,125378
(defun org-twbs-convert-region-to-html ()org-twbs-convert-region-to-html3154,126593
(defun org-twbs-export-to-htmlorg-twbs-export-to-html3163,126932
(defun org-twbs-publish-to-html (plist filename pub-dir)org-twbs-publish-to-html3199,128162

elpa/package-build-20160619.1317/package-build-autoloads.el,0

elpa/package-build-20160619.1317/package-build-pkg.el,149
(define-package "package-build" "20160619.1317" "Tools for assembling a package archive" '((cl-lib "0.5")) :keywords '("tools"))"package-build"1,0

elpa/package-build-20160619.1317/package-build.el,10471
(defconst package-build--this-dir (file-name-directory (or load-file-name (buffer-file-name))))package-build--this-dir49,1691
(defgroup package-build nilpackage-build51,1788
(defcustom package-build-working-dir (expand-file-name "working/" package-build--this-dir)package-build-working-dir55,1925
(defcustom package-build-archive-dir (expand-file-name "packages/" package-build--this-dir)package-build-archive-dir60,2100
(defcustom package-build-recipes-dir (expand-file-name "recipes/" package-build--this-dir)package-build-recipes-dir65,2284
(defcustom package-build-verbose tpackage-build-verbose70,2456
(defcustom package-build-stable nilpackage-build-stable75,2620
(defcustom package-build-timeout-executablepackage-build-timeout-executable80,2784
(defcustom package-build-timeout-secs 600package-build-timeout-secs91,3223
(defcustom package-build-tar-executablepackage-build-tar-executable101,3607
(defcustom package-build-write-melpa-badge-images nilpackage-build-write-melpa-badge-images109,3882
(defcustom package-build-version-regexp "^[rRvV]?\\(.*\\)$"package-build-version-regexp114,4071
(defvar package-build--recipe-alist nilpackage-build--recipe-alist122,4356
(defvar package-build--recipe-alist-initialized nilpackage-build--recipe-alist-initialized128,4511
(defvar package-build--archive-alist nilpackage-build--archive-alist131,4635
(defvar package-build--archive-alist-initialized nilpackage-build--archive-alist-initialized137,4857
(defconst package-build-default-files-specpackage-build-default-files-spec140,4981
(defun package-build--message (format-string &rest args)package-build--message147,5273
(defun package-build--slurp-file (file-name)package-build--slurp-file152,5468
(defun package-build--string-rtrim (str)package-build--string-rtrim159,5756
(defun package-build--valid-version (str &optional regexp)package-build--valid-version164,5891
(defun package-build--parse-time (str)package-build--parse-time172,6225
(defun package-build--find-parse-time (regex &optional bound)package-build--find-parse-time185,6947
(defun package-build--find-parse-time-newest (regex &optional bound)package-build--find-parse-time-newest191,7271
(defun package-build--find-version-newest (regex &optional bound)package-build--find-version-newest200,7670
(defun package-build--run-process (dir command &rest args)package-build--run-process236,9566
(defun package-build--run-process-match (regex dir prog &rest args)package-build--run-process-match254,10561
(defun package-build-checkout (package-name config working-dir)package-build-checkout262,10896
(defvar package-build--last-wiki-fetch-time 0package-build--last-wiki-fetch-time276,11627
(defvar package-build--wiki-min-request-interval 3package-build--wiki-min-request-interval281,11862
(defmacro package-build--with-wiki-rate-limit (&rest body)package-build--with-wiki-rate-limit284,12001
(defvar url-http-response-status)url-http-response-status299,12706
(defvar url-http-end-of-headers)url-http-end-of-headers300,12740
(defun package-build--url-copy-file (url newname &optional ok-if-already-exists)package-build--url-copy-file302,12774
(defun package-build--grab-wiki-file (filename)package-build--grab-wiki-file328,13956
(defun package-build--checkout-wiki (name config dir)package-build--checkout-wiki342,14558
(defun package-build--darcs-repo (dir)package-build--darcs-repo353,15090
(defun package-build--checkout-darcs (name config dir)package-build--checkout-darcs357,15261
(defun package-build--fossil-repo (dir)package-build--fossil-repo386,16968
(defun package-build--checkout-fossil (name config dir)package-build--checkout-fossil390,17125
(defun package-build--svn-repo (dir)package-build--svn-repo413,18334
(defun package-build--trim (str &optional chr)package-build--trim417,18481
(defun package-build--princ-exists (dir)package-build--princ-exists423,18712
(defun package-build--princ-checkout (repo dir)package-build--princ-checkout427,18862
(defun package-build--checkout-svn (name config dir)package-build--checkout-svn431,19027
(defun package-build--cvs-repo (dir)package-build--cvs-repo453,20178
(defun package-build--checkout-cvs (name config dir)package-build--checkout-cvs462,20552
(defun package-build--git-repo (dir)package-build--git-repo517,23751
(defun package-build--git-head-branch (dir)package-build--git-head-branch522,23930
(defun package-build--checkout-git (name config dir)package-build--checkout-git529,24163
(defun package-build--update-git-to-ref (dir ref)package-build--update-git-to-ref567,26317
(defun package-build--checkout-github (name config dir)package-build--checkout-github573,26642
(defun package-build--checkout-gitlab (name config dir)package-build--checkout-gitlab578,26932
(defun package-build--checkout-bitbucket (name config dir)package-build--checkout-bitbucket583,27222
(defun package-build--bzr-expand-repo (repo)package-build--bzr-expand-repo588,27516
(defun package-build--bzr-repo (dir)package-build--bzr-repo592,27702
(defun package-build--checkout-bzr (name config dir)package-build--checkout-bzr596,27859
(defun package-build--hg-repo (dir)package-build--hg-repo631,29704
(defun package-build--checkout-hg (name config dir)package-build--checkout-hg635,29854
(defun package-build--dump (data file &optional pretty-print)package-build--dump683,32368
(defun package-build--write-pkg-file (pkg-file pkg-info)package-build--write-pkg-file692,32667
(defun package-build--read-from-file (file-name)package-build--read-from-file720,33981
(defun package-build--create-tar (file dir &optional files)package-build--create-tar725,34220
(defun package-build--find-package-commentary (file-path)package-build--find-package-commentary745,34919
(defun package-build--write-pkg-readme (target-dir commentary file-name)package-build--write-pkg-readme752,35141
(defun package-build--readme-file-name (target-dir file-name)package-build--readme-file-name772,35969
(defun package-build--update-or-insert-version (version)package-build--update-or-insert-version777,36187
(defun package-build--ensure-ends-here-line (file-path)package-build--ensure-ends-here-line794,36849
(defun package-build--get-package-info (file-path)package-build--get-package-info806,37263
(defun package-build--get-pkg-file-info (file-path)package-build--get-pkg-file-info819,37817
(defun package-build--merge-package-info (pkg-info name version)package-build--merge-package-info854,39552
(defun package-build--archive-entry (pkg-info type)package-build--archive-entry863,39935
(defun package-build--archive-file-name (archive-entry)package-build--archive-file-name878,40486
(defun package-build--entry-file-name (archive-entry)package-build--entry-file-name888,40930
(defun package-build--delete-file-if-exists (file)package-build--delete-file-if-exists897,41301
(defun package-build--remove-archive-files (archive-entry)package-build--remove-archive-files902,41437
(defun package-build--read-recipe (file-name)package-build--read-recipe912,41994
(defun package-build--read-recipes ()package-build--read-recipes955,43978
(defun package-build--read-recipes-ignore-errors ()package-build--read-recipes-ignore-errors960,44245
(defun package-build-expand-file-specs (dir specs &optional subdir allow-empty)package-build-expand-file-specs972,44893
(defun package-build--config-file-list (config)package-build--config-file-list1011,46597
(defun package-build--expand-source-file-list (dir config)package-build--expand-source-file-list1022,46979
(defun package-build--generate-info-files (files source-dir target-dir)package-build--generate-info-files1026,47211
(defun package-build--generate-dir-file (files target-dir)package-build--generate-dir-file1055,48438
(defun package-build--copy-package-files (files source-dir target-dir)package-build--copy-package-files1074,49265
(defun package-build--copy-file (file newname)package-build--copy-file1082,49648
(defun package-build--package-name-completing-read ()package-build--package-name-completing-read1096,50137
(defun package-build--find-source-file (target files)package-build--find-source-file1100,50314
(defun package-build--find-package-file (name)package-build--find-package-file1105,50482
(defun package-build--package-buffer-info-vec ()package-build--package-buffer-info-vec1109,50679
(defun package-build-archive (name)package-build-archive1142,52089
(defun package-build-package (package-name version file-specs source-dir target-dir)package-build-package1174,53789
(defun package-build--build-single-file-package (package-name version file source-dir target-dir)package-build--build-single-file-package1207,55382
(defun package-build--build-multi-file-package (package-name version files source-dir target-dir)package-build--build-multi-file-package1240,56925
(defun package-build--write-melpa-badge-image (package-name version target-dir)package-build--write-melpa-badge-image1285,59564
(defvar package-build-minor-mode-mappackage-build-minor-mode-map1306,60596
(define-minor-mode package-build-minor-modepackage-build-minor-mode1312,60784
(defun package-build-create-recipe (name fetcher)package-build-create-recipe1321,61027
(defun package-build-current-recipe ()package-build-current-recipe1347,62036
(defun package-build-archive-ignore-errors (pkg)package-build-archive-ignore-errors1375,63339
(defun package-build-all ()package-build-all1393,63985
(defun package-build-cleanup ()package-build-cleanup1406,64523
(defun package-build-recipe-alist ()package-build-recipe-alist1416,65034
(defun package-build-archive-alist ()package-build-archive-alist1423,65333
(defun package-build-reinitialize ()package-build-reinitialize1429,65540
(defun package-build-dump-archive-contents (&optional file-name pretty-print)package-build-dump-archive-contents1434,65721
(defun package-build--archive-entries ()package-build--archive-entries1443,66157
(defun package-build-recipe-alist-as-json (file-name)package-build-recipe-alist-as-json1464,66916
(defun package-build--sym-to-keyword (s)package-build--sym-to-keyword1470,67120
(defun package-build--pkg-info-for-json (info)package-build--pkg-info-for-json1474,67251
(defun package-build--archive-alist-for-json ()package-build--archive-alist-for-json1491,67896
(defun package-build-archive-alist-as-json (file-name)package-build-archive-alist-as-json1499,68255

elpa/pallet-20150512.2/pallet-autoloads.el,45
(defvar pallet-mode nil "\pallet-mode9,250

elpa/pallet-20150512.2/pallet-pkg.el,102
(define-package "pallet" "20150512.2" "A package management tool for Emacs, using Cask.""pallet"1,0

elpa/pallet-20150512.2/pallet.el,1903
(defvar pallet--package-archives-copypallet--package-archives-copy198,7346
(defun pallet-init ()pallet-init206,7478
(defun pallet-install ()pallet-install211,7595
(defun pallet-update ()pallet-update217,7742
(defvar pallet--ignored-text-comment ";;;pallet-ignore")pallet--ignored-text-comment225,7890
(defun pallet--on ()pallet--on227,7948
(defun pallet--off ()pallet--off234,8260
(defun pallet--repack (&optional use-copy)pallet--repack241,8546
(defun pallet--cask-up (&optional body)pallet--cask-up248,8857
(defun pallet--cask-file ()pallet--cask-file255,9178
(defun pallet--package-name (package-name-or-desc)pallet--package-name259,9288
(defun pallet--pick-packages ()pallet--pick-packages265,9643
(defun pallet--pick-cask (bundle)pallet--pick-cask274,9911
(defun pallet--pick-cask-except (bundle excluded-package-name)pallet--pick-cask-except278,10040
(defun pallet--pack (archives packages)pallet--pack287,10431
(defun pallet--pack-one (package-name)pallet--pack-one293,10636
(defun pallet--unpack-one (package-name)pallet--unpack-one300,10883
(defun pallet--ship (archives packages)pallet--ship307,11117
(defun pallet--with-ignored-text (ignored-text text)pallet--with-ignored-text317,11595
(defun pallet--ignored-text (text)pallet--ignored-text323,11800
(defun pallet--write-sources (archive-list)pallet--write-sources327,11943
(defun pallet--format-source (source)pallet--format-source334,12220
(defun pallet--write-depends (package-list)pallet--write-depends341,12546
(defun pallet--format-dependency (package)pallet--format-dependency349,12878
(defun pallet--write-file (file contents)pallet--write-file368,13817
(defun pallet--installed-p (package-name)pallet--installed-p372,13941
(defadvice package-installpackage-install382,14262
(defadvice package-deletepackage-delete389,14575
(define-minor-mode pallet-modepallet-mode399,15032

elpa/pkg-info-20150517.443/pkg-info-autoloads.el,0

elpa/pkg-info-20150517.443/pkg-info-pkg.el,177
(define-package "pkg-info" "20150517.443" "Information about packages" '((epl "0.8")) :url "https://github.com/lunaryorn/pkg-info.el" :keywords '("convenience"))"pkg-info"1,0

elpa/pkg-info-20150517.443/pkg-info.el,1852
(defvar url-http-end-of-headers)url-http-end-of-headers62,2050
(defun pkg-info-format-version (version)pkg-info-format-version66,2110
(defsubst pkg-info--show-version-and-return (version show)pkg-info--show-version-and-return73,2343
(defun pkg-info--read-library ()pkg-info--read-library83,2602
(defun pkg-info--read-function ()pkg-info--read-function90,2879
(defun pkg-info--read-package ()pkg-info--read-package95,3085
(defun pkg-info-library-source (library)pkg-info-library-source106,3535
(defun pkg-info-defining-library (function)pkg-info-defining-library115,3818
(defun pkg-info-x-original-version (file)pkg-info-x-original-version130,4327
(defun pkg-info-library-original-version (library &optional show)pkg-info-library-original-version143,4790
(defun pkg-info-library-version (library &optional show)pkg-info-library-version169,5730
(defun pkg-info-defining-library-original-version (function &optional show)pkg-info-defining-library-original-version188,6430
(defun pkg-info-defining-library-version (function &optional show)pkg-info-defining-library-version210,7260
(defun pkg-info-package-version (package &optional show)pkg-info-package-version228,7909
(defun pkg-info-version-info (library &optional package show)pkg-info-version-info242,8475
(defconst pkg-info-melpa-recipe-url "http://melpa.org/recipes.json"pkg-info-melpa-recipe-url284,10548
(defvar pkg-info-melpa-recipes nilpkg-info-melpa-recipes287,10665
(defun pkg-info-retrieve-melpa-recipes ()pkg-info-retrieve-melpa-recipes290,10733
(defun pkg-info-get-melpa-recipes ()pkg-info-get-melpa-recipes304,11351
(defun pkg-info-get-melpa-recipe (package)pkg-info-get-melpa-recipe310,11527
(defun pkg-info-get-melpa-fetcher (package)pkg-info-get-melpa-fetcher316,11702
(defun pkg-info-wiki-package-p (package)pkg-info-wiki-package-p320,11847

elpa/popup-20160531.425/popup-autoloads.el,0

elpa/popup-20160531.425/popup-pkg.el,120
(define-package "popup" "20160531.425" "Visual Popup User Interface" '((cl-lib "0.5")) :keywords '("lisp"))"popup"1,0

elpa/popup-20160531.425/popup.el,6351
(defconst popup-version "0.5.3")popup-version35,1147
(defun popup-calculate-max-width (max-width)popup-calculate-max-width41,1199
(defvar popup-use-optimized-column-computation tpopup-use-optimized-column-computation48,1477
(defmacro popup-aif (test then &rest else)popup-aif52,1620
(defmacro popup-awhen (test &rest body)popup-awhen58,1754
(defun popup-x-to-string (x)popup-x-to-string64,1883
(defun popup-substring-by-width (string width)popup-substring-by-width74,2167
(defun popup-fill-string (string &optional width max-width justify squeeze)popup-fill-string89,2716
(defmacro popup-save-buffer-state (&rest body)popup-save-buffer-state142,4803
(defun popup-vertical-motion (column direction)popup-vertical-motion152,5096
(defun popup-last-line-of-buffer-p ()popup-last-line-of-buffer-p159,5355
(defun popup-lookup-key-by-event (function event)popup-lookup-key-by-event164,5518
(defgroup popup nilpopup177,5917
(defface popup-facepopup-face182,6005
(defface popup-summary-facepopup-summary-face187,6135
(defface popup-scroll-bar-foreground-facepopup-scroll-bar-foreground-face192,6262
(defface popup-scroll-bar-background-facepopup-scroll-bar-background-face197,6389
(defvar popup-instances nilpopup-instances202,6515
(defvar popup-scroll-bar-foreground-charpopup-scroll-bar-foreground-char205,6566
(defvar popup-scroll-bar-background-charpopup-scroll-bar-background-char209,6709
(defun popup-item-propertize (item &rest properties)popup-item-propertize221,7163
(defun popup-item-property (item property)popup-item-property231,7527
(defsubst popup-item-value (item)               (popup-item-property item 'value))popup-item-value259,8536
(defsubst popup-item-value-or-self (item)       (or (popup-item-value item) item))popup-item-value-or-self260,8619
(defsubst popup-item-face (item)                (popup-item-property item 'popup-face))popup-item-face261,8702
(defsubst popup-item-mouse-face (item)          (popup-item-property item 'popup-mouse-face))popup-item-mouse-face262,8790
(defsubst popup-item-selection-face (item)      (popup-item-property item 'selection-face))popup-item-selection-face263,8884
(defsubst popup-item-document (item)            (popup-item-property item 'document))popup-item-document264,8976
(defsubst popup-item-summary (item)             (popup-item-property item 'summary))popup-item-summary265,9062
(defsubst popup-item-symbol (item)              (popup-item-property item 'symbol))popup-item-symbol266,9147
(defsubst popup-item-sublist (item)             (popup-item-property item 'sublist))popup-item-sublist267,9231
(defun popup-item-documentation (item)popup-item-documentation269,9317
(defun popup-item-show-help-1 (item)popup-item-show-help-1275,9499
(defun popup-item-show-help-with-event-loop (item)popup-item-show-help-with-event-loop285,9791
(defun popup-item-show-help (item &optional persist)popup-item-show-help300,10386
(defun popup-set-list (popup list)popup-set-list311,10816
(defun popup-set-filtered-list (popup list)popup-set-filtered-list316,10969
(defun popup-selected-item (popup)popup-selected-item324,11224
(defun popup-selected-line (popup)popup-selected-line327,11309
(defun popup-line-overlay (popup line)popup-line-overlay330,11398
(defun popup-selected-line-overlay (popup)popup-selected-line-overlay333,11476
(defun popup-hide-line (popup line)popup-hide-line336,11578
(defun popup-line-hidden-p (popup line)popup-line-hidden-p341,11751
(defun popup-live-p (popup)popup-live-p425,15462
(defun popup-child-point (popup &optional offset)popup-child-point429,15569
(defun popup-calculate-direction (height row)popup-calculate-direction436,15723
(defun popup-delete (popup)popup-delete650,24280
(defun popup-draw (popup)popup-draw668,24858
(defun popup-hide (popup)popup-hide769,29974
(defun popup-hidden-p (popup)popup-hidden-p776,30200
(defun popup-jump (popup cursor)popup-jump785,30451
(defun popup-select (popup i)popup-select795,30856
(defun popup-next (popup)popup-next803,31084
(defun popup-previous (popup)popup-previous821,31687
(defun popup-page-next (popup)popup-page-next839,32276
(defun popup-page-previous (popup)popup-page-previous845,32462
(defun popup-scroll-down (popup &optional n)popup-scroll-down851,32658
(defun popup-scroll-up (popup &optional n)popup-scroll-up859,32999
(defface popup-isearch-matchpopup-isearch-match871,33318
(defvar popup-isearch-cursor-color "blue")popup-isearch-cursor-color876,33446
(defvar popup-isearch-keymappopup-isearch-keymap878,33490
(defvar popup-menu-show-quick-help-function 'popup-menu-show-quick-helppopup-menu-show-quick-help-function888,33893
(defcustom popup-isearch-regexp-builder-function #'regexp-quotepopup-isearch-regexp-builder-function891,34026
(defsubst popup-isearch-char-p (char)popup-isearch-char-p897,34284
(defun popup-isearch-filter-list (pattern list)popup-isearch-filter-list902,34389
(defun popup-isearch-prompt (popup pattern)popup-isearch-prompt923,35293
(defun popup-isearch-update (popup filter pattern &optional callback)popup-isearch-update928,35506
(defface popup-tip-facepopup-tip-face1006,38750
(defvar popup-tip-max-width 80)popup-tip-max-width1011,38868
(defface popup-menu-facepopup-menu-face1093,41546
(defface popup-menu-mouse-facepopup-menu-mouse-face1098,41645
(defface popup-menu-selection-facepopup-menu-selection-face1103,41769
(defface popup-menu-summary-facepopup-menu-summary-face1108,41929
(defvar popup-menu-show-tip-function 'popup-tippopup-menu-show-tip-function1113,42047
(defun popup-menu-show-help (menu &optional persist item)popup-menu-show-help1116,42168
(defun popup-menu-documentation (menu &optional item)popup-menu-documentation1119,42298
(defun popup-menu-show-quick-help (menu &optional item &rest args)popup-menu-show-quick-help1122,42420
(defun popup-menu-item-of-mouse-event (event)popup-menu-item-of-mouse-event1146,43320
(defun popup-menu-read-key-sequence (keymap &optional prompt timeout)popup-menu-read-key-sequence1154,43650
(defun popup-menu-fallback (event default))popup-menu-fallback1181,44976
(defun popup-preferred-width (list)popup-preferred-width1264,48828
(defvar popup-menu-keymappopup-menu-keymap1276,49340
(defun popup-cascade-menu (list &rest args)popup-cascade-menu1411,54621

elpa/powerline-20160601.724/powerline-autoloads.el,0

elpa/powerline-20160601.724/powerline-pkg.el,82
(define-package "powerline" "20160601.724" "Rewrite of Powerline""powerline"1,0

elpa/powerline-20160601.724/powerline-separators.el,1465
(defun pl/interpolate (color1 color2)pl/interpolate24,581
(defun pl/hex-color (color)pl/hex-color35,999
(defun pl/pattern (lst)pl/pattern40,1140
(defun pl/pattern-to-string (pattern)pl/pattern-to-string46,1297
(defun pl/reverse-pattern (pattern)pl/reverse-pattern50,1464
(defun pl/row-pattern (fill total &optional fade)pl/row-pattern54,1564
(defun pl/pattern-bindings-body (patterns height-exp pattern-height-sympl/pattern-bindings-body64,1930
(defun pl/pattern-defun (name dir width &rest patterns)pl/pattern-defun93,3514
(defun pl/background-color (face)pl/background-color133,5123
(defun pl/wrap-defun (name dir width let-vars body &optional body-2x)pl/wrap-defun141,5371
(defmacro pl/alternate (dir)pl/alternate187,7253
(defmacro pl/arrow (dir)pl/arrow199,7585
(defmacro pl/arrow-fade (dir)pl/arrow-fade220,8892
(defmacro pl/bar (dir)pl/bar241,10337
(defmacro pl/box (dir)pl/box246,10465
(defmacro pl/brace (dir)pl/brace264,10856
(defmacro pl/butt (dir)pl/butt306,12023
(defmacro pl/chamfer (dir)pl/chamfer332,12653
(defmacro pl/contour (dir)pl/contour349,13072
(defmacro pl/curve (dir)pl/curve390,14894
(defmacro pl/rounded (dir)pl/rounded434,16097
(defmacro pl/roundstub (dir)pl/roundstub460,16936
(defmacro pl/slant (dir)pl/slant486,17581
(defmacro pl/wave (dir)pl/wave496,18141
(defmacro pl/zigzag (dir)pl/zigzag552,20840
(defmacro pl/nil (dir)pl/nil576,21436
(defmacro pl/utf-8 (dir)pl/utf-8582,21627

elpa/powerline-20160601.724/powerline-themes.el,545
(defcustom powerline-display-buffer-size tpowerline-display-buffer-size20,443
(defcustom powerline-display-mule-info tpowerline-display-mule-info25,568
(defcustom powerline-display-hud tpowerline-display-hud30,689
(defun powerline-default-theme ()powerline-default-theme36,813
(defun powerline-center-theme ()powerline-center-theme91,4251
(defun powerline-center-evil-theme ()powerline-center-evil-theme139,6363
(defun powerline-vim-theme ()powerline-vim-theme196,8928
(defun powerline-nano-theme ()powerline-nano-theme247,11298

elpa/powerline-20160601.724/powerline.el,3971
(defface powerline-active1 '((t (:background "grey22" :inherit mode-line)))powerline-active126,655
(defface powerline-active2 '((t (:background "grey40" :inherit mode-line)))powerline-active230,775
(defface powerline-inactive1powerline-inactive134,895
(defface powerline-inactive2powerline-inactive239,1028
(defface mode-line-buffer-id-inactivemode-line-buffer-id-inactive44,1161
(defcustom powerline-default-separator 'arrowpowerline-default-separator49,1290
(defcustom powerline-utf-8-separator-left #xe0b0powerline-utf-8-separator-left74,2066
(defcustom powerline-utf-8-separator-right #xe0b2powerline-utf-8-separator-right79,2239
(defcustom powerline-default-separator-dir '(left . right)powerline-default-separator-dir84,2414
(defcustom powerline-height nilpowerline-height95,2846
(defcustom powerline-text-scale-factor nilpowerline-text-scale-factor100,2973
(defcustom powerline-buffer-size-suffix tpowerline-buffer-size-suffix110,3318
(defcustom powerline-gui-use-vcs-glyph nilpowerline-gui-use-vcs-glyph115,3435
(defun pl/create-or-get-cache ()pl/create-or-get-cache120,3617
(defun pl/reset-cache ()pl/reset-cache125,3892
(defun powerline-current-separator ()powerline-current-separator132,4162
(defun powerline-delete-cache (&optional frame)powerline-delete-cache148,4714
(defun powerline-desktop-save-delete-cache ()powerline-desktop-save-delete-cache152,4847
(defun pl/memoize (func)pl/memoize162,5319
(defun pl/memoize-wrap-frame-local (func)pl/memoize-wrap-frame-local170,5635
(defun pl/separator-height ()pl/separator-height183,6112
(defun powerline-reset ()powerline-reset187,6237
(defun pl/make-xpm (name color1 color2 data)pl/make-xpm228,7418
(defun pl/percent-xpmpl/percent-xpm263,8672
(defun powerline-hud (face1 face2 &optional width)powerline-hud284,9468
(defun powerline-mouse (click-group click-type string)powerline-mouse302,10118
(defun powerline-concat (&rest strings)powerline-concat323,10842
(defmacro defpowerline (name body)defpowerline331,11021
(defun pl/property-substrings (str prop)pl/property-substrings337,11220
(defun pl/assure-list (item)pl/assure-list347,11569
(defun pl/add-text-property (str prop val)pl/add-text-property353,11679
(defun powerline-raw (str &optional face pad)powerline-raw362,11933
(defun powerline-fill (face reserve)powerline-fill376,12500
(defun powerline-fill-center (face reserve)powerline-fill-center388,12983
(defpowerline powerline-major-modepowerline-major-mode400,13525
(defpowerline powerline-minor-modespowerline-minor-modes413,14346
(defpowerline powerline-narrowpowerline-narrow436,15730
(defpowerline powerline-vcpowerline-vc451,16352
(defpowerline powerline-buffer-sizepowerline-buffer-size460,16702
(defun powerline-buffer-id (&optional face pad)powerline-buffer-id473,17180
(defpowerline powerline-processpowerline-process488,17711
(defvar pl/default-mode-line mode-line-format)pl/default-mode-line494,17913
(defvar pl/minibuffer-selected-window-list '())pl/minibuffer-selected-window-list496,17961
(defun pl/minibuffer-selected-window ()pl/minibuffer-selected-window498,18010
(defun pl/minibuffer-setup ()pl/minibuffer-setup503,18203
(defun pl/minibuffer-exit ()pl/minibuffer-exit509,18442
(defvar powerline-selected-window (frame-selected-window))powerline-selected-window515,18618
(defun powerline-set-selected-window ()powerline-set-selected-window516,18677
(defun powerline-unset-selected-window ()powerline-unset-selected-window521,18912
(defadvice handle-switch-framehandle-switch-frame537,19549
(defadvice select-window (after powerline-select-window activate)select-window541,19686
(defun powerline-selected-window-active ()powerline-selected-window-active546,19904
(defun powerline-revert ()powerline-revert550,20049
(defun pl/render (item)pl/render555,20192
(defun powerline-render (values)powerline-render563,20404
(defun powerline-width (values)powerline-width567,20513

elpa/projectile-20160629.2359/projectile-autoloads.el,249
(defvar projectile-mode-line '(:eval (if (file-remote-p default-directory) " Projectile" (format " Projectile[%s]" (projectile-project-name)))) "\projectile-mode-line390,12244
(defvar projectile-global-mode nil "\projectile-global-mode419,13307

elpa/projectile-20160629.2359/projectile-pkg.el,228
(define-package "projectile" "20160629.2359" "Manage and navigate projects in Emacs easily" '((dash "2.11.0") (pkg-info "0.4")) :url "https://github.com/bbatsov/projectile" :keywords '("project" "convenience"))"projectile"1,0

elpa/projectile-20160629.2359/projectile.el,26241
(defvar grep-files-aliases)grep-files-aliases64,2236
(defvar grep-find-ignored-directories)grep-find-ignored-directories65,2264
(defvar grep-find-ignored-files)grep-find-ignored-files66,2303
(defun projectile-trim-string (string)projectile-trim-string122,4702
(defgroup projectile nilprojectile130,4942
(defcustom projectile-indexing-method (if (eq system-type 'windows-nt) 'native 'alien)projectile-indexing-method135,5048
(defcustom projectile-enable-caching (eq projectile-indexing-method 'native)projectile-enable-caching157,5941
(defcustom projectile-file-exists-local-cache-expire nilprojectile-file-exists-local-cache-expire165,6197
(defcustom projectile-file-exists-remote-cache-expire (* 5 60)projectile-file-exists-remote-cache-expire175,6497
(defcustom projectile-require-project-root tprojectile-require-project-root184,6817
(defcustom projectile-completion-system 'idoprojectile-completion-system190,7026
(defcustom projectile-keymap-prefix (kbd "C-c p")projectile-keymap-prefix201,7388
(defcustom projectile-cache-fileprojectile-cache-file206,7507
(defcustom projectile-tags-file-name "TAGS"projectile-tags-file-name212,7681
(defcustom projectile-tags-command "ctags -Re -f \"%s\" %s"projectile-tags-command217,7813
(defcustom projectile-sort-order 'defaultprojectile-sort-order222,7979
(defcustom projectile-verbose tprojectile-verbose232,8357
(defcustom projectile-buffers-filter-function nilprojectile-buffers-filter-function237,8468
(defcustom projectile-project-name nilprojectile-project-name247,8828
(defcustom projectile-project-name-function 'projectile-default-project-nameprojectile-project-name-function255,9082
(defcustom projectile-project-root-filesprojectile-project-root-files263,9401
(defcustom projectile-project-root-files-bottom-upprojectile-project-root-files-bottom-up293,10687
(defcustom projectile-project-root-files-top-down-recurringprojectile-project-root-files-top-down-recurring306,11149
(defcustom projectile-project-root-files-functionsprojectile-project-root-files-functions318,11605
(defcustom projectile-globally-ignored-filesprojectile-globally-ignored-files327,11882
(defcustom projectile-globally-unignored-files nilprojectile-globally-unignored-files333,12062
(defcustom projectile-globally-ignored-file-suffixesprojectile-globally-ignored-file-suffixes339,12257
(defcustom projectile-globally-ignored-directoriesprojectile-globally-ignored-directories345,12424
(defcustom projectile-globally-unignored-directories nilprojectile-globally-unignored-directories361,12765
(defcustom projectile-globally-ignored-modesprojectile-globally-ignored-modes367,12972
(defcustom projectile-globally-ignored-buffers nilprojectile-globally-ignored-buffers381,13360
(defcustom projectile-find-file-hook nilprojectile-find-file-hook390,13643
(defcustom projectile-find-dir-hook nilprojectile-find-dir-hook395,13786
(defcustom projectile-switch-project-action 'projectile-find-fileprojectile-switch-project-action400,13932
(defcustom projectile-find-dir-includes-top-level nilprojectile-find-dir-includes-top-level407,14167
(defcustom projectile-use-git-grep nilprojectile-use-git-grep412,14337
(defcustom projectile-grep-finished-hook nilprojectile-grep-finished-hook417,14464
(defcustom projectile-test-prefix-function 'projectile-test-prefixprojectile-test-prefix-function423,14637
(defcustom projectile-test-suffix-function 'projectile-test-suffixprojectile-test-suffix-function428,14807
(defvar projectile-idle-timer nilprojectile-idle-timer435,14994
(defcustom projectile-idle-timer-seconds 30projectile-idle-timer-seconds438,15107
(defcustom projectile-idle-timer-hook '(projectile-regenerate-tags)projectile-idle-timer-hook443,15265
(defcustom projectile-enable-idle-timer nilprojectile-enable-idle-timer448,15446
(defun projectile-serialize (data filename)projectile-serialize470,16378
(defun projectile-unserialize (filename)projectile-unserialize478,16644
(defvar projectile-projects-cache nilprojectile-projects-cache489,17051
(defvar projectile-project-root-cache (make-hash-table :test 'equal)projectile-project-root-cache492,17170
(defvar projectile-project-type-cache (make-hash-table :test 'equal)projectile-project-type-cache495,17297
(defvar projectile-known-projects nilprojectile-known-projects498,17441
(defvar projectile-known-projects-on-file nilprojectile-known-projects-on-file505,17732
(defcustom projectile-known-projects-fileprojectile-known-projects-file511,17941
(defcustom projectile-ignored-projects nilprojectile-ignored-projects518,18174
(defcustom projectile-ignored-project-function nilprojectile-ignored-project-function524,18403
(defun projectile-version (&optional show-version)projectile-version547,19093
(defvar projectile-file-exists-cacheprojectile-file-exists-cache569,19866
(defvar projectile-file-exists-cache-timer nilprojectile-file-exists-cache-timer573,19985
(defun projectile-file-exists-cache-cleanup ()projectile-file-exists-cache-cleanup576,20098
(defun projectile-file-exists-p (filename)projectile-file-exists-p588,20665
(defun projectile-invalidate-cache (arg)projectile-invalidate-cache622,22436
(defun projectile-cache-project (project files)projectile-cache-project643,23303
(defun projectile-purge-file-from-cache (file)projectile-purge-file-from-cache651,23575
(defun projectile-purge-dir-from-cache (dir)projectile-purge-dir-from-cache668,24283
(defun projectile-file-cached-p (file project)projectile-file-cached-p680,24779
(defun projectile-cache-current-file ()projectile-cache-current-file685,24950
(defun projectile-cache-files-find-file-hook ()projectile-cache-files-find-file-hook704,26094
(defun projectile-cache-projects-find-file-hook ()projectile-cache-projects-find-file-hook709,26298
(defun projectile-maybe-invalidate-cache (force)projectile-maybe-invalidate-cache719,26756
(defadvice delete-file (before purge-from-projectile-cache (filename &optional trash))delete-file726,27049
(defun projectile-parent (path)projectile-parent736,27564
(defun projectile-locate-dominating-file (file name)projectile-locate-dominating-file741,27805
(defvar-local projectile-project-root nilprojectile-project-root764,28916
(defun projectile-root-local (_dir)projectile-root-local768,29060
(defun projectile-root-top-down (dir &optional list)projectile-root-top-down772,29179
(defun projectile-root-bottom-up (dir &optional list)projectile-root-bottom-up782,29619
(defun projectile-root-top-down-recurring (dir &optional list)projectile-root-top-down-recurring789,30003
(defun projectile-project-root ()projectile-project-root802,30769
(defun projectile-file-truename (file-name)projectile-file-truename818,31571
(defun projectile-project-p ()projectile-project-p824,31760
(defun projectile-default-project-name (project-root)projectile-default-project-name830,31897
(defun projectile-project-name ()projectile-project-name834,32113
(defun projectile-get-project-directories ()projectile-get-project-directories848,32485
(defun projectile-dir-files (directory)projectile-dir-files853,32736
(defun projectile-dir-files-native (root directory)projectile-dir-files-native867,33424
(defun projectile-dir-files-external (root directory)projectile-dir-files-external878,33986
(defcustom projectile-git-command "git ls-files -zco --exclude-standard"projectile-git-command885,34284
(defcustom projectile-git-submodule-command "git submodule --quiet foreach 'echo $path' | tr '\\n' '\\0'"projectile-git-submodule-command890,34462
(defcustom projectile-git-ignored-command "git ls-files -zcoi --exclude-standard"projectile-git-ignored-command895,34674
(defcustom projectile-hg-command "hg locate -f -0 -I ."projectile-hg-command901,34911
(defcustom projectile-fossil-command "fossil ls | tr '\\n' '\\0'"projectile-fossil-command906,35071
(defcustom projectile-bzr-command "bzr ls -R --versioned -0"projectile-bzr-command911,35245
(defcustom projectile-darcs-command "darcs show files -0 . "projectile-darcs-command916,35414
(defcustom projectile-svn-command "svn list -R . | grep -v '$/' | tr '\\n' '\\0'"projectile-svn-command921,35582
(defcustom projectile-generic-command "find . -type f -print0"projectile-generic-command926,35769
(defun projectile-get-ext-command ()projectile-get-ext-command931,35941
(defun projectile-get-sub-projects-command ()projectile-get-sub-projects-command943,36415
(defun projectile-get-ext-ignored-command ()projectile-get-ext-ignored-command949,36581
(defun projectile-get-all-sub-projects (project)projectile-get-all-sub-projects956,36876
(defun projectile-get-immediate-sub-projects (path)projectile-get-immediate-sub-projects970,37397
(defun projectile-get-sub-projects-files ()projectile-get-sub-projects-files997,38608
(defun projectile-get-repo-files ()projectile-get-repo-files1009,39068
(defun projectile-get-repo-ignored-files ()projectile-get-repo-ignored-files1017,39417
(defun projectile-files-via-ext-command (command)projectile-files-via-ext-command1022,39611
(defun projectile-index-directory (directory patterns progress-reporter)projectile-index-directory1026,39801
(defun projectile-adjust-files (files)projectile-adjust-files1044,40641
(defun projectile-remove-ignored (files &optional subdirectories)projectile-remove-ignored1048,40819
(defun projectile-keep-ignored-files (files)projectile-keep-ignored-files1064,41607
(defun projectile-add-unignored (files)projectile-add-unignored1071,41860
(defun projectile-buffers-with-file (buffers)projectile-buffers-with-file1084,42450
(defun projectile-buffers-with-file-or-process (buffers)projectile-buffers-with-file-or-process1088,42588
(defun projectile-project-buffers ()projectile-project-buffers1093,42795
(defun projectile-process-current-project-buffers (action)projectile-process-current-project-buffers1103,43227
(defun projectile-project-buffer-files ()projectile-project-buffer-files1109,43469
(defun projectile-project-buffer-p (buffer project-root)projectile-project-buffer-p1116,43785
(defun projectile-ignored-buffer-p (buffer)projectile-ignored-buffer-p1126,44311
(defun projectile-recently-active-files ()projectile-recently-active-files1135,44659
(defun projectile-project-buffer-names ()projectile-project-buffer-names1145,45039
(defun projectile-prepend-project-name (string)projectile-prepend-project-name1149,45175
(defun projectile-read-buffer-to-switch (prompt)projectile-read-buffer-to-switch1153,45329
(defun projectile-switch-to-buffer ()projectile-switch-to-buffer1164,45672
(defun projectile-switch-to-buffer-other-window ()projectile-switch-to-buffer-other-window1171,45855
(defun projectile-display-buffer ()projectile-display-buffer1178,46094
(defun projectile-project-buffers-other-buffer ()projectile-project-buffers-other-buffer1187,46344
(defun projectile-project-buffers-non-visible ()projectile-project-buffers-non-visible1193,46600
(defun projectile-multi-occur ()projectile-multi-occur1200,46838
(defun projectile-normalise-paths (patterns)projectile-normalise-paths1206,47030
(defun projectile-expand-paths (paths)projectile-expand-paths1213,47300
(defun projectile-normalise-patterns (patterns)projectile-normalise-patterns1226,47772
(defun projectile-make-relative-to-root (files)projectile-make-relative-to-root1230,47901
(defun projectile-ignored-directory-p (directory)projectile-ignored-directory-p1235,48102
(defun projectile-ignored-file-p (file)projectile-ignored-file-p1239,48250
(defun projectile-check-pattern-p (file pattern)projectile-check-pattern-p1243,48372
(defun projectile-ignored-rel-p (file directory patterns)projectile-ignored-rel-p1249,48615
(defun projectile-ignored-files ()projectile-ignored-files1256,48962
(defun projectile-ignored-directories ()projectile-ignored-directories1266,49212
(defun projectile-ignored-directories-rel ()projectile-ignored-directories-rel1278,49536
(defun projectile-ignored-files-rel ()projectile-ignored-files-rel1282,49715
(defun projectile-project-ignored-files ()projectile-project-ignored-files1286,49876
(defun projectile-project-ignored-directories ()projectile-project-ignored-directories1291,50056
(defun projectile-paths-to-ignore ()projectile-paths-to-ignore1296,50254
(defun projectile-patterns-to-ignore ()projectile-patterns-to-ignore1300,50410
(defun projectile-project-ignored ()projectile-project-ignored1304,50573
(defun projectile-unignored-files ()projectile-unignored-files1310,50795
(defun projectile-unignored-directories ()projectile-unignored-directories1318,51000
(defun projectile-unignored-directories-rel ()projectile-unignored-directories-rel1328,51271
(defun projectile-unignored-files-rel ()projectile-unignored-files-rel1332,51456
(defun projectile-project-unignored-files ()projectile-project-unignored-files1336,51623
(defun projectile-project-unignored-directories ()projectile-project-unignored-directories1340,51775
(defun projectile-paths-to-ensure ()projectile-paths-to-ensure1344,51939
(defun projectile-files-to-ensure ()projectile-files-to-ensure1348,52097
(defun projectile-patterns-to-ensure ()projectile-patterns-to-ensure1352,52237
(defun projectile-filtering-patterns ()projectile-filtering-patterns1356,52400
(defun projectile-project-unignored ()projectile-project-unignored1360,52523
(defun projectile-dirconfig-file ()projectile-dirconfig-file1366,52777
(defun projectile-parse-dirconfig-file ()projectile-parse-dirconfig-file1370,52938
(defun projectile-expand-root (name)projectile-expand-root1400,54433
(defun projectile-completing-read (prompt choices &optional initial-input)projectile-completing-read1407,54647
(defun projectile-current-project-files ()projectile-current-project-files1438,56095
(defun projectile-process-current-project-files (action)projectile-process-current-project-files1453,56775
(defun projectile-current-project-dirs ()projectile-current-project-dirs1460,57073
(defun projectile-hash-keys (hash)projectile-hash-keys1466,57307
(defcustom projectile-other-file-alistprojectile-other-file-alist1474,57503
(defun projectile-find-other-file (&optional flex-matching)projectile-find-other-file1501,58300
(defun projectile-find-other-file-other-window (&optional flex-matching)projectile-find-other-file-other-window1513,59036
(defun projectile--file-name-sans-extensions (file-name)projectile--file-name-sans-extensions1524,59812
(defun projectile--file-name-extensions (file-name)projectile--file-name-extensions1530,60127
(defun projectile-associated-file-name-extensions (file-name)projectile-associated-file-name-extensions1537,60591
(defun projectile-get-other-files (current-file project-file-list &optional flex-matching)projectile-get-other-files1547,61307
(defun projectile-select-files (project-files &optional arg)projectile-select-files1586,63516
(defun projectile-find-file-dwim (&optional arg)projectile-find-file-dwim1605,64283
(defun projectile-find-file-dwim-other-window (&optional arg)projectile-find-file-dwim-other-window1640,66150
(defun projectile-find-file (&optional arg)projectile-find-file1676,68083
(defun projectile-find-file-other-window (&optional arg)projectile-find-file-other-window1687,68546
(defun projectile-sort-files (files)projectile-sort-files1698,69051
(defun projectile-sort-by-recentf-first (files)projectile-sort-by-recentf-first1707,69452
(defun projectile-sort-by-recently-active-first (files)projectile-sort-by-recently-active-first1713,69693
(defun projectile-sort-by-modification-time (files)projectile-sort-by-modification-time1719,69997
(defun projectile-sort-by-access-time (files)projectile-sort-by-access-time1728,70387
(defun projectile-find-dir (&optional arg)projectile-find-dir1738,70780
(defun projectile-find-dir-other-window (&optional arg)projectile-find-dir-other-window1749,71147
(defun projectile-complete-dir ()projectile-complete-dir1760,71550
(defun projectile-find-test-file (&optional arg)projectile-find-test-file1768,71792
(defun projectile-test-files (files)projectile-test-files1778,72218
(defun projectile-test-file-p (file)projectile-test-file-p1782,72331
(defun projectile-current-project-test-files ()projectile-current-project-test-files1789,72764
(defvar projectile-project-types (make-hash-table)projectile-project-types1793,72932
(defun projectile-register-project-typeprojectile-register-project-type1796,73058
(defun projectile-cabal ()projectile-cabal1839,76533
(defun projectile-go ()projectile-go1844,76726
(defcustom projectile-go-function 'projectile-goprojectile-go-function1850,76924
(defvar-local projectile-project-type nilprojectile-project-type1855,77065
(defun projectile-detect-project-type ()projectile-detect-project-type1859,77222
(defun projectile-project-type ()projectile-project-type1871,77910
(defun projectile-project-info ()projectile-project-info1880,78212
(defun projectile-verify-files (files)projectile-verify-files1888,78481
(defun projectile-verify-file (file)projectile-verify-file1892,78620
(defun projectile-project-vcs (&optional project-root)projectile-project-vcs1897,78834
(defun projectile--test-name-for-impl-name (impl-file-path)projectile--test-name-for-impl-name1917,79977
(defun projectile-create-test-file-for (impl-file-path)projectile-create-test-file-for1928,80606
(defcustom projectile-create-missing-test-files nilprojectile-create-missing-test-files1936,81052
(defun projectile-find-implementation-or-test (file-name)projectile-find-implementation-or-test1945,81415
(defun projectile-find-implementation-or-test-other-window ()projectile-find-implementation-or-test-other-window1963,82226
(defun projectile-toggle-between-implementation-and-test ()projectile-toggle-between-implementation-and-test1970,82474
(defun projectile-test-prefix (project-type)projectile-test-prefix1976,82690
(defun projectile-test-suffix (project-type)projectile-test-suffix1983,82977
(defun projectile-dirname-matching-count (a b)projectile-dirname-matching-count1995,83528
(defun projectile-group-file-candidates (file candidates)projectile-group-file-candidates2004,83891
(defun projectile-find-matching-test (file)projectile-find-matching-test2009,84118
(defun projectile-find-matching-file (test-file)projectile-find-matching-file2031,85359
(defun projectile-grep-default-files ()projectile-grep-default-files2053,86618
(defun projectile--globally-ignored-file-suffixes-glob ()projectile--globally-ignored-file-suffixes-glob2079,87769
(defun projectile-grep (&optional regexp arg)projectile-grep2084,87973
(defun projectile-ag (search-term &optional arg)projectile-ag2125,90099
(defun projectile-tags-exclude-patterns ()projectile-tags-exclude-patterns2149,91368
(defun projectile-regenerate-tags ()projectile-regenerate-tags2156,91665
(defun projectile-visit-project-tags-table ()projectile-visit-project-tags-table2180,92670
(defun projectile-find-tag ()projectile-find-tag2189,93024
(defmacro projectile-with-default-dir (dir &rest body)projectile-with-default-dir2203,93518
(defun projectile-run-command-in-root ()projectile-run-command-in-root2210,93699
(defun projectile-run-shell-command-in-root ()projectile-run-shell-command-in-root2217,93943
(defun projectile-run-async-shell-command-in-root ()projectile-run-async-shell-command-in-root2224,94171
(defun projectile-run-shell ()projectile-run-shell2231,94417
(defun projectile-run-eshell ()projectile-run-eshell2238,94642
(defun projectile-run-term (program)projectile-run-term2246,94908
(defun projectile-files-in-project-directory (directory)projectile-files-in-project-directory2265,95738
(defun projectile-unixy-system-p ()projectile-unixy-system-p2272,96052
(defun projectile-files-from-cmd (cmd directory)projectile-files-from-cmd2276,96201
(defun projectile-files-with-string (string directory)projectile-files-with-string2289,96741
(defun projectile-replace (&optional arg)projectile-replace2318,98206
(defun projectile-replace-regexp (&optional arg)projectile-replace-regexp2348,99769
(defun projectile-symbol-or-selection-at-point ()projectile-symbol-or-selection-at-point2374,101008
(defun projectile-symbol-at-point ()projectile-symbol-at-point2380,101232
(defun projectile-kill-buffers ()projectile-kill-buffers2385,101401
(defun projectile-save-project-buffers ()projectile-save-project-buffers2398,101927
(defun projectile-dired ()projectile-dired2407,102153
(defun projectile-vc (&optional project-root)projectile-vc2413,102294
(defun projectile-recentf ()projectile-recentf2436,103088
(defun projectile-recentf-files ()projectile-recentf-files2443,103386
(defun projectile-serialize-cache ()projectile-serialize-cache2451,103714
(defvar projectile-compilation-cmd-mapprojectile-compilation-cmd-map2455,103877
(defvar projectile-test-cmd-mapprojectile-test-cmd-map2459,104029
(defvar projectile-run-cmd-mapprojectile-run-cmd-map2463,104167
(defvar projectile-project-compilation-cmd nilprojectile-project-compilation-cmd2467,104303
(defvar projectile-project-compilation-dir nilprojectile-project-compilation-dir2472,104520
(defvar projectile-project-test-cmd nilprojectile-project-test-cmd2477,104715
(defvar projectile-project-run-cmd nilprojectile-project-run-cmd2482,104922
(defun projectile-default-compilation-command (project-type)projectile-default-compilation-command2487,105127
(defun projectile-default-test-command (project-type)projectile-default-test-command2491,105328
(defun projectile-default-run-command (project-type)projectile-default-run-command2495,105512
(defun projectile-compilation-command (compile-dir)projectile-compilation-command2499,105693
(defun projectile-test-command (project)projectile-test-command2505,105975
(defun projectile-run-command (project)projectile-run-command2511,106210
(defun projectile-read-command (prompt command)projectile-read-command2517,106440
(defun projectile-compilation-dir ()projectile-compilation-dir2524,106728
(defun projectile-maybe-read-command (arg default-cmd prompt)projectile-maybe-read-command2532,107060
(defun projectile-run-compilation (cmd)projectile-run-compilation2539,107364
(defun projectile-compile-project (arg &optional dir)projectile-compile-project2546,107533
(defadvice compilation-find-file (around projectile-compilation-find-file)compilation-find-file2564,108438
(defun projectile-test-project (arg)projectile-test-project2587,109546
(defun projectile-run-project (arg)projectile-run-project2602,110138
(defun projectile-open-projects ()projectile-open-projects2616,110707
(defun projectile--remove-current-project (projects)projectile--remove-current-project2627,111067
(defun projectile-relevant-known-projects ()projectile-relevant-known-projects2634,111336
(defun projectile-relevant-open-projects ()projectile-relevant-open-projects2638,111521
(defun projectile-switch-project (&optional arg)projectile-switch-project2643,111720
(defun projectile-switch-open-project (&optional arg)projectile-switch-open-project2656,112252
(defun projectile-switch-project-by-name (project-to-switch &optional arg)projectile-switch-project-by-name2668,112779
(defun projectile-find-file-in-directory (&optional directory)projectile-find-file-in-directory2682,113465
(defun projectile-all-project-files ()projectile-all-project-files2698,114196
(defun projectile-find-file-in-known-projects ()projectile-find-file-in-known-projects2709,114615
(defcustom projectile-after-switch-project-hook nilprojectile-after-switch-project-hook2715,114881
(defcustom projectile-before-switch-project-hook nilprojectile-before-switch-project-hook2720,115017
(defun projectile-keep-project-p (project)projectile-keep-project-p2725,115160
(defun projectile-cleanup-known-projects ()projectile-cleanup-known-projects2737,115559
(defun projectile-clear-known-projects ()projectile-clear-known-projects2753,116206
(defun projectile-remove-known-project (&optional project)projectile-remove-known-project2760,116436
(defun projectile-remove-current-project-from-known-projects ()projectile-remove-current-project-from-known-projects2771,116963
(defun projectile-ignored-projects ()projectile-ignored-projects2776,117194
(defun projectile-ignored-project-p (project-root)projectile-ignored-project-p2780,117366
(defun projectile-add-known-project (project-root)projectile-add-known-project2786,117689
(defun projectile-load-known-projects ()projectile-load-known-projects2794,118005
(defun projectile-save-known-projects ()projectile-save-known-projects2806,118459
(defun projectile-merge-known-projects ()projectile-merge-known-projects2814,118828
(define-ibuffer-filter projectile-filesprojectile-files2833,119685
(defun projectile-ibuffer-by-project (project-root)projectile-ibuffer-by-project2841,120053
(defun projectile-ibuffer (prefix)projectile-ibuffer2848,120380
(defconst projectile-commander-help-buffer "*Commander Help*")projectile-commander-help-buffer2863,120899
(defvar projectile-commander-methods nilprojectile-commander-methods2865,120963
(defun projectile-commander ()projectile-commander2871,121210
(defmacro def-projectile-commander-method (key description &rest body)def-projectile-commander-method2885,121754
(def-projectile-commander-method ?? "Commander help buffer."??2901,122349
(defun projectile-commander-bindings ()projectile-commander-bindings2913,122832
(defun projectile-read-variable ()projectile-read-variable2976,124436
(define-skeleton projectile-skel-variable-consprojectile-skel-variable-cons2984,124692
(define-skeleton projectile-skel-dir-localsprojectile-skel-dir-locals2993,124863
(defun projectile-edit-dir-locals ()projectile-edit-dir-locals3002,125043
(defvar projectile-command-mapprojectile-command-map3013,125392
(defvar projectile-mode-mapprojectile-mode-map3062,128240
(defcustom projectile-mode-lineprojectile-mode-line3109,130063
(define-minor-mode projectile-modeprojectile-mode3129,130734
(define-globalized-minor-mode projectile-global-modeprojectile-global-mode3168,132430

elpa/py-autopep8-20151231.614/py-autopep8-autoloads.el,0

elpa/py-autopep8-20151231.614/py-autopep8-pkg.el,160
(define-package "py-autopep8" "20151231.614" "Use autopep8 to beautify a Python buffer" 'nil :url "http://paetzke.me/project/py-autopep8.el")"py-autopep8"1,0

elpa/py-autopep8-20151231.614/py-autopep8.el,666
(defgroup py-autopep8 nilpy-autopep827,746
(defcustom py-autopep8-options nilpy-autopep8-options33,868
(defun py-autopep8--call-executable (errbuf file)py-autopep8--call-executable41,1044
(defun py-autopep8 ()py-autopep847,1237
(defun py-autopep8-buffer ()py-autopep8-buffer54,1364
(defun py-autopep8-enable-on-save ()py-autopep8-enable-on-save64,1725
(defun py-autopep8-bf--apply-rcs-patch (patch-buffer)py-autopep8-bf--apply-rcs-patch82,2323
(defun py-autopep8-bf--replace-region (filename)py-autopep8-bf--replace-region117,3850
(defun py-autopep8-bf--apply-executable-to-buffer (executable-namepy-autopep8-bf--apply-executable-to-buffer122,3986

elpa/pythonic-20160221.1123/pythonic-autoloads.el,0

elpa/pythonic-20160221.1123/pythonic-pkg.el,229
(define-package "pythonic" "20160221.1123" "Utility functions for writing pythonic emacs package." '((emacs "24") (cl-lib "0.5") (dash "2.11") (s "1.9") (f "0.17.2")) :url "https://github.com/proofit404/pythonic")"pythonic"1,0

elpa/pythonic-20160221.1123/pythonic.el,1663
(defvaralias 'pythonic-environmentpythonic-environment38,1209
(defun pythonic-remote-p ()pythonic-remote-p44,1408
(defun pythonic-file-name (file)pythonic-file-name50,1615
(defun pythonic-tramp-connection ()pythonic-tramp-connection57,1816
(defun pythonic-executable ()pythonic-executable65,2175
(defun pythonic-default-directory (&optional from-directory)pythonic-default-directory74,2529
(defun pythonic-set-process-environment ()pythonic-set-process-environment81,2791
(defun pythonic-get-pythonpath ()pythonic-get-pythonpath94,3302
(defun pythonic-get-pythonpath-variable ()pythonic-get-pythonpath-variable100,3513
(defun pythonic-get-pythonpath-variable-tramp ()pythonic-get-pythonpath-variable-tramp109,3863
(defun pythonic-set-pythonpath-variable ()pythonic-set-pythonpath-variable122,4519
(defun pythonic-set-pythonpath-variable-tramp ()pythonic-set-pythonpath-variable-tramp126,4699
(defun pythonic-get-path ()pythonic-get-path134,5005
(defun pythonic-get-path-variable ()pythonic-get-path-variable140,5195
(defun pythonic-get-path-variable-tramp ()pythonic-get-path-variable-tramp149,5510
(defun pythonic-set-path-variable ()pythonic-set-path-variable155,5823
(defun pythonic-set-path-variable-tramp ()pythonic-set-path-variable-tramp159,5961
(defun pythonic-set-extra-variables ()pythonic-set-extra-variables166,6311
(defun pythonic-set-extra-variables-tramp ()pythonic-set-extra-variables-tramp172,6553
(defun pythonic-proper-environment-p (process)pythonic-proper-environment-p221,8804
(defun pythonic-activate (virtualenv)pythonic-activate234,9435
(defun pythonic-deactivate ()pythonic-deactivate240,9588

elpa/pyvenv-20160527.442/pyvenv-autoloads.el,111
(defvar pyvenv-mode nil "\pyvenv-mode24,571
(defvar pyvenv-tracking-mode nil "\pyvenv-tracking-mode41,1094

elpa/pyvenv-20160527.442/pyvenv-pkg.el,188
(define-package "pyvenv" "20160527.442" "Python virtual environment interface" 'nil :url "http://github.com/jorgenschaefer/pyvenv" :keywords '("python" "virtualenv" "tools"))"pyvenv"1,0

elpa/pyvenv-20160527.442/pyvenv.el,1905
(defgroup pyvenv nilpyvenv44,1599
(defcustom pyvenv-workon nilpyvenv-workon49,1704
(defcustom pyvenv-activate nilpyvenv-activate62,2143
(defcustom pyvenv-tracking-ask-before-change nilpyvenv-tracking-ask-before-change75,2555
(defcustom pyvenv-virtualenvwrapper-pythonpyvenv-virtualenvwrapper-python85,2935
(defvar pyvenv-virtual-env nilpyvenv-virtual-env100,3410
(defvar pyvenv-virtual-env-name nilpyvenv-virtual-env-name106,3558
(defvar pyvenv-pre-activate-hooks nilpyvenv-pre-activate-hooks111,3701
(defvar pyvenv-post-activate-hooks nilpyvenv-post-activate-hooks116,3836
(defvar pyvenv-pre-deactivate-hooks nilpyvenv-pre-deactivate-hooks121,3963
(defvar pyvenv-post-deactivate-hooks nilpyvenv-post-deactivate-hooks126,4094
(defvar pyvenv-mode-line-indicator '(pyvenv-virtual-env-namepyvenv-mode-line-indicator131,4231
(defvar pyvenv-old-process-environment nilpyvenv-old-process-environment137,4464
(defvar pyvenv-old-exec-path nilpyvenv-old-exec-path140,4567
(defun pyvenv-activate (directory)pyvenv-activate144,4665
(defun pyvenv-deactivate ()pyvenv-deactivate189,6791
(defvar pyvenv-workon-history nilpyvenv-workon-history217,7915
(defun pyvenv-workon (name)pyvenv-workon221,8006
(defun pyvenv-virtualenv-list (&optional noerror)pyvenv-virtualenv-list236,8603
(define-widget 'pyvenv-workon 'choicepyvenv-workon256,9474
(defvar pyvenv-mode-map (make-sparse-keymap)pyvenv-mode-map278,10331
(define-minor-mode pyvenv-modepyvenv-mode304,11364
(define-minor-mode pyvenv-tracking-modepyvenv-tracking-mode320,11967
(defun pyvenv-track-virtualenv ()pyvenv-track-virtualenv331,12410
(defun pyvenv-run-virtualenvwrapper-hook (hook &rest args)pyvenv-run-virtualenvwrapper-hook352,13395
(defun pyvenv-restart-python ()pyvenv-restart-python404,15707
(defun pyvenv-hook-dir ()pyvenv-hook-dir428,16661
(defun pyvenv-workon-home ()pyvenv-workon-home437,16993

elpa/request-20160623.1938/request-autoloads.el,0

elpa/request-20160623.1938/request-pkg.el,132
(define-package "request" "20160623.1938" "Compatible layer for URL request in Emacs" '((emacs "24") (cl-lib "0.5")))"request"1,0

elpa/request-20160623.1938/request.el,4552
(defgroup request nilrequest52,1799
(defconst request-version "0.2.0")request-version57,1906
(defcustom request-storage-directoryrequest-storage-directory62,1969
(defcustom request-curl "curl"request-curl67,2145
(defcustom request-backend (if (executable-find request-curl)request-backend71,2227
(defcustom request-timeout nilrequest-timeout79,2584
(defcustom request-log-level -1request-log-level85,2788
(defcustom request-message-level 'warnrequest-message-level96,3221
(defun request--safe-apply (function &rest arguments)request--safe-apply109,3634
(defun request--safe-call (function &rest arguments)request--safe-call114,3774
(defmacro request--document-function (function docstring)request--document-function123,4097
(defun request--process-live-p (process)request--process-live-p129,4341
(defconst request--log-level-defrequest--log-level-def140,4697
(defun request--log-level-as-int (level)request--log-level-as-int149,4913
(defvar request-log-buffer-name " *request-log*")request-log-buffer-name155,5053
(defun request--log-buffer ()request--log-buffer157,5104
(defmacro request-log (level fmt &rest args)request-log160,5182
(defconst request--url-unreserved-charsrequest--url-unreserved-chars187,6144
(defun request--urlencode-alist (alist)request--urlencode-alist196,6566
(defun request--parse-response-at-point ()request--parse-response-at-point209,6987
(defun request--goto-next-body ()request--goto-next-body215,7248
(defmacro request--document-response (function docstring)request--document-response228,7582
(defun request-response-header (response field-name)request-response-header284,9818
(defconst request--backend-alistrequest--backend-alist312,10794
(defun request--choose-backend (method)request--choose-backend335,11717
(defun request-cookie-string (host &optional localpart secure)request-cookie-string345,12004
(defun request-cookie-alist (host &optional localpart secure)request-cookie-alist356,12346
(defun request--clean-header (response)request--clean-header572,20633
(defun request--cut-header (response)request--cut-header595,21657
(defun request--parse-data (response parser)request--parse-data608,22205
(defun request-response--cancel-timer (response)request-response--cancel-timer724,27120
(defun request-abort (response)request-abort732,27363
(defun request--url-retrieve-get-cookies (host localpart secure)request--url-retrieve-get-cookies851,32732
(defvar request--curl-cookie-jar nilrequest--curl-cookie-jar859,32942
(defun request--curl-cookie-jar ()request--curl-cookie-jar863,33087
(defconst request--curl-write-out-templaterequest--curl-write-out-template868,33262
(defun request--curl-mkdir-for-cookie-jar ()request--curl-mkdir-for-cookie-jar873,33499
(defun request--curl-normalize-files-1 (files get-temp-file)request--curl-normalize-files-1906,34823
(defun request--curl-normalize-files (files)request--curl-normalize-files934,36076
(defun request--safe-delete-files (files)request--safe-delete-files953,36932
(defun request--curl-read-and-delete-tail-info ()request--curl-read-and-delete-tail-info1006,39409
(defconst request--cookie-reserved-rerequest--cookie-reserved-re1018,39850
(defun request--consume-100-continue ()request--consume-100-continue1027,40156
(defun request--consume-200-connection-established ()request--consume-200-connection-established1036,40598
(defun request--curl-preprocess ()request--curl-preprocess1041,40858
(defun request--curl-absolutify-redirects (start-url redirects)request--curl-absolutify-redirects1066,41960
(defun request--curl-absolutify-location-history (start-url history)request--curl-absolutify-location-history1075,42336
(defun request--curl-callback (proc event)request--curl-callback1088,42931
(defun request--curl-get-cookies (host localpart secure)request--curl-get-cookies1131,45091
(defun request--netscape-cookie-parse ()request--netscape-cookie-parse1138,45300
(defun request--netscape-filter-cookies (cookies host localpart secure)request--netscape-filter-cookies1166,46319
(defun request--netscape-get-cookies (filename host localpart secure)request--netscape-get-cookies1173,46641
(defun request--url-default-expander (urlobj defobj)request--url-default-expander1184,47000
(defadvice url-default-expanderurl-default-expander1225,49081
(defun request--url-http-end-of-document-sentinel (proc why)request--url-http-end-of-document-sentinel1254,50339
(defadvice url-http-end-of-document-sentinelurl-http-end-of-document-sentinel1278,51512

elpa/rich-minority-20160725.1255/rich-minority-autoloads.el,60
(defvar rich-minority-mode nil "\rich-minority-mode15,439

elpa/rich-minority-20160725.1255/rich-minority-pkg.el,220
(define-package "rich-minority" "20160725.1255" "Clean-up and Beautify the list of minor-modes." '((cl-lib "0.5")) :url "https://github.com/Malabarba/rich-minority" :keywords '("mode-line" "faces"))"rich-minority"2,31

elpa/rich-minority-20160725.1255/rich-minority.el,1358
(defun rm-bug-report ()rm-bug-report84,2982
(defun rm-customize ()rm-customize92,3411
(defcustom rm-blacklist '(" hl-p")rm-blacklist100,3642
(define-obsolete-variable-alias 'rm-excluded-modes 'rm-blacklist "0.1.1")rm-excluded-modes125,4581
(define-obsolete-variable-alias 'rm-hidden-modes 'rm-blacklist "0.1.1")rm-hidden-modes126,4655
(defcustom rm-whitelist nilrm-whitelist128,4728
(define-obsolete-variable-alias 'rm-included-modes 'rm-whitelist "0.1.1")rm-included-modes152,5708
(defcustom rm-text-propertiesrm-text-properties154,5783
(defconst rm--help-echo-bottomrm--help-echo-bottom175,6490
(defvar-local rm--help-echo nilrm--help-echo178,6598
(defun rm-format-mode-line-entry (entry)rm-format-mode-line-entry181,6682
(defun rm--mode-list-as-string-list ()rm--mode-list-as-string-list191,7039
(defcustom rm-base-text-propertiesrm-base-text-properties207,7751
(defun rm--propertize (mode)rm--propertize216,8069
(defun rm--remove-hidden-modes (li)rm--remove-hidden-modes229,8539
(defun rm--string-match (string regexp)rm--string-match252,9405
(defvar rm--mode-line-constructrm--mode-line-construct259,9616
(defvar rm--warning-absent-elementrm--warning-absent-element263,9742
(defvar rm--backup-construct nilrm--backup-construct267,9962
(define-minor-mode rich-minority-mode nil nil " $"rich-minority-mode271,10093

elpa/s-20160508.2357/s-autoloads.el,0

elpa/s-20160508.2357/s-pkg.el,124
(define-package "s" "20160508.2357" "The long lost Emacs string manipulation library." 'nil :keywords '("strings"))"s"1,0

elpa/s-20160508.2357/s.el,4315
(defun s-trim-left (s)s-trim-left33,1042
(defun s-trim-right (s)s-trim-right39,1189
(defun s-trim (s)s-trim45,1331
(defun s-collapse-whitespace (s)s-collapse-whitespace49,1437
(defun s-split (separator s &optional omit-nulls)s-split53,1586
(defun s-split-up-to (separator s n &optional omit-nulls)s-split-up-to60,1871
(defun s-lines (s)s-lines86,2772
(defun s-join (separator strings)s-join90,2888
(defun s-concat (&rest strings)s-concat94,3029
(defun s-prepend (prefix s)s-prepend98,3140
(defun s-append (suffix s)s-append102,3220
(defun s-repeat (num s)s-repeat106,3299
(defun s-chop-suffix (suffix s)s-chop-suffix114,3480
(defun s-chop-suffixes (suffixes s)s-chop-suffixes122,3721
(defun s-chop-prefix (prefix s)s-chop-prefix129,3933
(defun s-chop-prefixes (prefixes s)s-chop-prefixes137,4176
(defun s-shared-start (s1 s2)s-shared-start144,4390
(defun s-shared-end (s1 s2)s-shared-end153,4676
(defun s-chomp (s)s-chomp172,5295
(defun s-truncate (len s)s-truncate176,5408
(defun s-word-wrap (len s)s-word-wrap182,5593
(defun s-center (len s)s-center190,5852
(defun s-pad-left (len padding s)s-pad-left198,6089
(defun s-pad-right (len padding s)s-pad-right204,6305
(defun s-left (len s)s-left210,6523
(defun s-right (len s)s-right216,6649
(defun s-ends-with? (suffix s &optional ignore-case)s-ends-with?223,6803
(defalias 's-ends-with-p 's-ends-with?)s-ends-with-p235,7192
(defun s-starts-with? (prefix s &optional ignore-case)s-starts-with?237,7233
(defalias 's-starts-with-p 's-starts-with?)s-starts-with-p247,7543
(defalias 's-suffix? 's-ends-with?)s-suffix?249,7588
(defalias 's-prefix? 's-starts-with?)s-prefix?250,7624
(defalias 's-suffix-p 's-ends-with?)s-suffix-p251,7662
(defalias 's-prefix-p 's-starts-with?)s-prefix-p252,7699
(defun s--truthy? (val)s--truthy?254,7739
(defun s-contains? (needle s &optional ignore-case)s-contains?257,7784
(defalias 's-contains-p 's-contains?)s-contains-p265,8061
(defun s-equals? (s1 s2)s-equals?267,8100
(defalias 's-equals-p 's-equals?)s-equals-p273,8235
(defun s-less? (s1 s2)s-less?275,8270
(defalias 's-less-p 's-less?)s-less-p281,8404
(defun s-matches? (regexp s &optional start)s-matches?283,8435
(defalias 's-matches-p 's-matches?)s-matches-p290,8671
(defun s-blank? (s)s-blank?292,8708
(defun s-present? (s)s-present?296,8795
(defun s-presence (s)s-presence300,8887
(defun s-lowercase? (s)s-lowercase?304,8993
(defun s-uppercase? (s)s-uppercase?309,9139
(defun s-mixedcase? (s)s-mixedcase?314,9285
(defun s-capitalized? (s)s-capitalized?321,9507
(defun s-numeric? (s)s-numeric?327,9714
(defun s-replace (old new s)s-replace332,9805
(defun s--aget (alist key)s--aget336,9926
(defun s-replace-all (replacements s)s-replace-all339,9988
(defun s-downcase (s)s-downcase345,10281
(defun s-upcase (s)s-upcase351,10407
(defun s-capitalize (s)s-capitalize357,10527
(defun s-titleize (s)s-titleize361,10710
(defmacro s-with (s form &rest more)s-with367,10898
(defun s-index-of (needle s &optional ignore-case)s-index-of381,11404
(defun s-reverse (s)s-reverse389,11688
(defun s-match-strings-all (regex string)s-match-strings-all403,12206
(defun s-matched-positions-all (regexp string &optional subexp-depth)s-matched-positions-all423,12901
(defun s-match (regexp s &optional start)s-match436,13418
(defun s-slice-at (regexp s)s-slice-at455,14223
(defun s-split-words (s)s-split-words466,14542
(defun s--mapcar-head (fn-head fn-rest list)s--mapcar-head476,14854
(defun s-lower-camel-case (s)s-lower-camel-case481,15055
(defun s-upper-camel-case (s)s-upper-camel-case485,15191
(defun s-snake-case (s)s-snake-case489,15309
(defun s-dashed-words (s)s-dashed-words493,15416
(defun s-capitalized-words (s)s-capitalized-words497,15527
(defun s-titleized-words (s)s-titleized-words502,15712
(defun s-word-initials (s)s-word-initials506,15831
(defun s-format (template replacer &optional extra)s-format520,16204
(defvar s-lex-value-as-lisp nils-lex-value-as-lisp568,18100
(defun s-lex-fmt|expand (fmt)s-lex-fmt|expand573,18231
(defmacro s-lex-format (format-str)s-lex-format587,18693
(defun s-count-matches (regexp s &optional start end)s-count-matches602,19115
(defun s-wrap (s prefix &optional suffix)s-wrap612,19416

elpa/sh-mode/sh-script.el,0

elpa/sh-script.el,0

elpa/shut-up-20150423.522/shut-up-autoloads.el,0

elpa/shut-up-20150423.522/shut-up-pkg.el,151
(define-package "shut-up" "20150423.522" "Shut up would you!" '((cl-lib "0.3") (emacs "24")) :url "http://github.com/rejeep/shut-up.el")"shut-up"1,0

elpa/shut-up-20150423.522/shut-up.el,537
(defvar inhibit-message nil)inhibit-message43,1468
(defvar shut-up-ignore nilshut-up-ignore45,1498
(defun shut-up-write-region (start end filenameshut-up-write-region54,1773
(defun shut-up-load (file &optional noerror _nomessage nosuffix must-suffix)shut-up-load68,2367
(defun shut-up-buffer-string (buffer)shut-up-buffer-string72,2564
(defun shut-up-insert-to-buffer (object buffer)shut-up-insert-to-buffer81,2849
(defmacro shut-up (&rest body)shut-up93,3190
(defun shut-up-silence-emacs ()shut-up-silence-emacs133,4860

elpa/simple-httpd-20160902.1800/simple-httpd-autoloads.el,0

elpa/simple-httpd-20160902.1800/simple-httpd-pkg.el,161
(define-package "simple-httpd" "20160902.1800" "pure elisp HTTP server" '((cl-lib "0.3")) :url "https://github.com/skeeto/emacs-http-server")"simple-httpd"1,0

elpa/simple-httpd-20160902.1800/simple-httpd.el,3470
(defgroup simple-httpd nilsimple-httpd137,5354
(defcustom httpd-ip-family 'ipv4httpd-ip-family141,5423
(defcustom httpd-host nilhttpd-host146,5554
(defcustom httpd-port 8080httpd-port151,5713
(defcustom httpd-root "~/public_html"httpd-root156,5803
(defcustom httpd-serve-files thttpd-serve-files161,5911
(defcustom httpd-listings thttpd-listings166,6028
(defcustom httpd-servlets thttpd-servlets171,6137
(defcustom httpd-start-hook nilhttpd-start-hook176,6228
(defcustom httpd-stop-hook nilhttpd-stop-hook181,6344
(defvar httpd-server-name (format "simple-httpd (Emacs %s)" emacs-version)httpd-server-name186,6459
(defvar httpd-mime-typeshttpd-mime-types189,6576
(defvar httpd-indexeshttpd-indexes226,7643
(defvar httpd-status-codeshttpd-status-codes232,7772
(defvar httpd-htmlhttpd-html298,9795
(defun httpd-start ()httpd-start328,10440
(defun httpd-stop ()httpd-stop348,11029
(defun httpd-serve-directory (directory)httpd-serve-directory357,11300
(defun httpd-batch-start ()httpd-batch-start368,11705
(defun httpd-date-string (&optional date)httpd-date-string380,12104
(defun httpd-etag (file)httpd-etag384,12243
(defun httpd--stringify (designator)httpd--stringify389,12396
(defun httpd--filter (proc string)httpd--filter398,12616
(defun httpd--log (server proc message)httpd--log423,13815
(defun httpd-log (item)httpd-log429,13973
(defvar httpd-current-proc nilhttpd-current-proc444,14407
(defvar httpd--header-sent nilhttpd--header-sent447,14481
(defun httpd-resolve-proc (proc)httpd-resolve-proc451,14629
(defmacro with-httpd-buffer (proc mime &rest body)with-httpd-buffer455,14781
(defun httpd-discard-buffer ()httpd-discard-buffer472,15494
(defmacro defservlet (name mime path-query-request &rest body)defservlet478,15723
(defun httpd-parse-endpoint (symbol)httpd-parse-endpoint499,16500
(defvar httpd-path nilhttpd-path510,16981
(defvar httpd-query nilhttpd-query513,17048
(defvar httpd-request nilhttpd-request516,17116
(defvar httpd-split-path nilhttpd-split-path519,17186
(defmacro defservlet* (endpoint mime args &rest body)defservlet*522,17259
(defmacro httpd-def-file-servlet (name root)httpd-def-file-servlet590,20433
(defun httpd--normalize-header (header)httpd--normalize-header609,21166
(defun httpd-parse (string)httpd-parse613,21320
(defun httpd-unhex (str)httpd-unhex625,21831
(defun httpd-parse-args (argstr)httpd-parse-args631,22076
(defun httpd-parse-uri (uri)httpd-parse-uri638,22324
(defun httpd-status (path)httpd-status651,22859
(defun httpd-clean-path (path)httpd-clean-path659,23078
(defun httpd-gen-path (path &optional root)httpd-gen-path666,23394
(defun httpd-get-servlet (uri-path)httpd-get-servlet676,23862
(defun httpd-serve-root (proc root uri-path &optional request)httpd-serve-root688,24333
(defun httpd/ (proc uri-path query request)httpd/697,24760
(defun httpd-get-mime (ext)httpd-get-mime703,25006
(defun httpd-send-header (proc mime status &rest header-keys)httpd-send-header710,25205
(defun httpd-redirect (proc path &optional code)httpd-redirect741,26706
(defun httpd-send-file (proc path &optional req)httpd-send-file749,27015
(defun httpd-send-directory (proc path uri-path)httpd-send-directory767,27769
(defun httpd--buffer-size (&optional buffer)httpd--buffer-size792,28977
(defun httpd-error (proc status &optional info)httpd-error802,29293
(defun httpd--error-safe (&rest args)httpd--error-safe814,29818

elpa/smart-mode-line-20160818.508/smart-mode-line-autoloads.el,77
(defalias 'smart-mode-line-enable #'sml/setup)smart-mode-line-enable20,822

elpa/smart-mode-line-20160818.508/smart-mode-line-dark-theme.el,94
(deftheme smart-mode-line-dark "Dark theme for smart-mode-line.")smart-mode-line-dark28,892

elpa/smart-mode-line-20160818.508/smart-mode-line-light-theme.el,97
(deftheme smart-mode-line-light "Light theme for smart-mode-line.")smart-mode-line-light28,894

elpa/smart-mode-line-20160818.508/smart-mode-line-pkg.el,104
(define-package "smart-mode-line" "20160818.508" "A color coded smart mode-line.""smart-mode-line"1,0

elpa/smart-mode-line-20160818.508/smart-mode-line-respectful-theme.el,71
(deftheme smart-mode-line-respectfulsmart-mode-line-respectful28,904

elpa/smart-mode-line-20160818.508/smart-mode-line.el,12756
(defconst sml/version "2.10" "Version of the smart-mode-line.el package.")sml/version313,16940
(defun sml/bug-report ()sml/bug-report314,17015
(defun sml/customize ()sml/customize319,17392
(defun sml/customize-faces ()sml/customize-faces323,17540
(defgroup smart-mode-line '()smart-mode-line328,17715
(defgroup smart-mode-line-position '()smart-mode-line-position332,17842
(defgroup smart-mode-line-path-and-prefix '()smart-mode-line-path-and-prefix336,17978
(defgroup smart-mode-line-mode-list '()smart-mode-line-mode-list340,18136
(defgroup smart-mode-line-others '()smart-mode-line-others344,18272
(defgroup smart-mode-line-faces '()smart-mode-line-faces349,18399
(defvar erc-track-position-in-mode-line)erc-track-position-in-mode-line367,19048
(defvar sml/simplified nilsml/simplified368,19089
(defvar sml/active-background-color)sml/active-background-color370,19167
(defvar sml/-debug nilsml/-debug372,19205
(defmacro sml/-debug (fmt &rest r)sml/-debug375,19283
(defvar sml/shortener-func 'sml/do-shorten-directorysml/shortener-func385,19702
(defun sml/set-shortener-func (sym val)sml/set-shortener-func394,20104
(define-obsolete-variable-alias 'sml/time-format 'display-time-format)sml/time-format401,20379
(define-obsolete-variable-alias 'sml/show-time 'display-time-mode)sml/show-time402,20450
(define-obsolete-variable-alias 'sml/override-theme 'sml/theme)sml/override-theme403,20517
(defcustom sml/theme 'automaticsml/theme405,20582
(defcustom sml/position-percentage-format "%p"sml/position-percentage-format452,22650
(defcustom sml/line-number-format "%3l"sml/line-number-format461,22944
(defcustom sml/size-indication-format "%I "sml/size-indication-format471,23271
(defcustom sml/col-number-format "%2c"sml/col-number-format480,23621
(defcustom sml/numbers-separator ":"sml/numbers-separator490,23950
(defcustom sml/show-remote tsml/show-remote498,24206
(defcustom sml/show-client nilsml/show-client506,24495
(defcustom sml/modified-char (char-to-string (if (char-displayable-p ?×) ?× ?*))sml/modified-char512,24685
(defcustom sml/show-trailing-N tsml/show-trailing-N518,24942
(defcustom sml/show-file-name tsml/show-file-name524,25179
(defcustom sml/fill-char ?\ssml/fill-char530,25401
(defcustom sml/replacer-regexp-listsml/replacer-regexp-list535,25525
(defcustom sml/prefix-regexp '(":\\(.*:\\)" "~/")sml/prefix-regexp571,27045
(defcustom sml/prefix-face-list '((":SU:" sml/sudo)sml/prefix-face-list580,27366
(defcustom sml/name-width 44sml/name-width592,27911
(defcustom sml/shorten-directory tsml/shorten-directory606,28445
(defcustom sml/full-mode-string " +"sml/full-mode-string618,28858
(defcustom sml/shorten-mode-string " -"sml/shorten-mode-string623,29015
(defcustom sml/shorten-modes tsml/shorten-modes628,29189
(defun sml/toggle-shorten-directory (&rest val)sml/toggle-shorten-directory638,29532
(defun sml/toggle-shorten-modes (&rest val)sml/toggle-shorten-modes650,30049
(defcustom sml/mode-width 'fullsml/mode-width662,30505
(defcustom sml/battery-format " %p"sml/battery-format681,31205
(defcustom sml/modified-time-string "Modified on %T %Y-%m-%d."sml/modified-time-string689,31431
(defcustom sml/extra-filler 0sml/extra-filler698,31733
(defface sml/global           '((t :inverse-video nil)) "" :group 'smart-mode-line-faces)sml/global712,32194
(defface sml/modes            '((t :inherit sml/global)) "" :group 'smart-mode-line-faces)sml/modes713,32284
(defface sml/minor-modes      '((t :inherit sml/global)) "" :group 'smart-mode-line-faces)sml/minor-modes714,32375
(defface sml/filename         '((t :inherit sml/global :weight bold)) "" :group 'smart-mode-line-faces)sml/filename715,32466
(defface sml/prefix           '((t :inherit sml/global)) "" :group 'smart-mode-line-faces)sml/prefix716,32570
(defface sml/read-only        '((t :inherit sml/not-modified)) "" :group 'smart-mode-line-faces)sml/read-only717,32661
(defface sml/modified         '((t :inherit sml/not-modified :foreground "Red" :weight bold))sml/modified718,32758
(defface sml/outside-modified '((t :inherit sml/not-modified :foreground "#ffffff" :background "#c82829"))sml/outside-modified720,32888
(defface sml/line-number         '((t :inherit sml/modes :weight bold))               "" :group 'smart-mode-line-faces)sml/line-number723,33032
(defface sml/remote              '((t :inherit sml/global))                           "" :group 'smart-mode-line-faces)sml/remote724,33152
(defface sml/name-filling        '((t :inherit sml/position-percentage))              "" :group 'smart-mode-line-faces)sml/name-filling725,33272
(defface sml/position-percentage '((t :inherit sml/prefix :weight normal))            "" :group 'smart-mode-line-faces)sml/position-percentage726,33392
(defface sml/col-number          '((t :inherit sml/global))                           "" :group 'smart-mode-line-faces)sml/col-number727,33512
(defface sml/numbers-separator   '((t :inherit sml/col-number))                       "" :group 'smart-mode-line-faces)sml/numbers-separator728,33632
(defface sml/client              '((t :inherit sml/prefix))                           "" :group 'smart-mode-line-faces)sml/client729,33752
(defface sml/not-modified        '((t :inherit sml/global))                           "" :group 'smart-mode-line-faces)sml/not-modified730,33872
(defface sml/mule-info           '((t :inherit sml/global))                           "" :group 'smart-mode-line-faces)sml/mule-info731,33992
(defface sml/sudo                '((t :inherit sml/outside-modified))                 "" :group 'smart-mode-line-faces)sml/sudo732,34112
(defface sml/git                 '((t :inherit (sml/read-only sml/prefix)))           "" :group 'smart-mode-line-faces)sml/git733,34232
(defface sml/folder              '((t :inherit sml/global :weight normal))            "" :group 'smart-mode-line-faces)sml/folder734,34352
(defface sml/process             '((t :inherit sml/prefix))                           "" :group 'smart-mode-line-faces)sml/process735,34472
(defface sml/vc                  '((t :inherit sml/git))                              "" :group 'smart-mode-line-faces)sml/vc736,34592
(defface sml/vc-edited           '((t :inherit sml/prefix))                           "" :group 'smart-mode-line-faces)sml/vc-edited737,34712
(defface sml/charging            '((t :inherit sml/global :foreground "ForestGreen")) "" :group 'smart-mode-line-faces)sml/charging738,34832
(defface sml/discharging         '((t :inherit sml/global :foreground "Red"))         "" :group 'smart-mode-line-faces)sml/discharging739,34952
(defface sml/time                '((t :inherit sml/modes))                            "" :group 'smart-mode-line-faces)sml/time740,35072
(defvar sml/-apply-theme-is-running nil "Avoid nesting in `sml/apply-theme'.")sml/-apply-theme-is-running742,35193
(defcustom sml/no-confirm-load-theme nilsml/no-confirm-load-theme744,35273
(defun sml/apply-theme (theme &optional value silent)sml/apply-theme762,36064
(defadvice enable-theme (after sml/after-enable-theme-advice (theme) activate)enable-theme821,38239
(defun sml/theme-p (theme)sml/theme-p827,38585
(defvaralias 'sml/show-encoding 'sml/mule-info)sml/show-encoding832,38795
(defcustom sml/show-eol nilsml/show-eol834,38844
(defcustom sml/outside-modified-char "M"sml/outside-modified-char840,39031
(defvaralias 'sml/encoding-format 'sml/mule-info)sml/encoding-format846,39222
(defcustom sml/mule-info "%z"sml/mule-info847,39272
(defcustom sml/read-only-char "R"sml/read-only-char853,39524
(defcustom sml/show-frame-identification nilsml/show-frame-identification859,39695
(defcustom sml/vc-mode-show-backend nilsml/vc-mode-show-backend871,40150
(defvar sml/position-construct nil "Used for recycling position information.")sml/position-construct882,40550
(defvar sml/position-help-text nil "Help-text for position information.")sml/position-help-text885,40684
(defvar sml/buffer-identification-filling nilsml/buffer-identification-filling889,40838
(defvar sml/buffer-identification nilsml/buffer-identification894,41078
(defadvice rename-buffer (after sml/after-rename-buffer-advice ())rename-buffer899,41308
(defadvice set-visited-file-name (after sml/after-set-visited-file-name-advice ())set-visited-file-name902,41475
(defvar sml/name-width-old nil "Used for recalculating buffer identification filling only when necessary.")sml/name-width-old906,41667
(defvar sml/shorten-directory-old nil "Used for recalculating buffer identification filling only when necessary.")sml/shorten-directory-old908,41824
(defun sml/generate-buffer-identification-if-necessary ()sml/generate-buffer-identification-if-necessary910,41995
(defvar sml/mode-line-clientsml/mode-line-client919,42420
(defvar sml/mode-line-buffer-identificationsml/mode-line-buffer-identification926,42677
(defvar sml/projectile-replacement-format)sml/projectile-replacement-format932,42918
(defvar sml/use-projectile-p)sml/use-projectile-p933,42961
(defvar sml/projectile-loaded-p nil "Non-nil if projectile has been loaded.")sml/projectile-loaded-p934,42991
(defcustom sml/pos-id-separator " "sml/pos-id-separator936,43070
(defcustom sml/pre-modes-separator " "sml/pre-modes-separator939,43198
(defcustom sml/pre-id-separator ""sml/pre-id-separator942,43332
(defcustom sml/pre-minor-modes-separator ""sml/pre-minor-modes-separator945,43459
(defcustom sml/pos-minor-modes-separator ""sml/pos-minor-modes-separator948,43604
(defun sml/-automatically-decide-theme ()sml/-automatically-decide-theme952,43750
(defun sml/-setup-theme ()sml/-setup-theme968,44428
(defvar battery-mode-line-format)battery-mode-line-format980,44809
(defun sml/setup (&optional arg)sml/setup984,44861
(defalias 'smart-mode-line-enable #'sml/setup)smart-mode-line-enable1182,54198
(defun sml/global-theme-support-sml-p ()sml/global-theme-support-sml-p1184,54246
(defun sml/faces-from-theme (theme)sml/faces-from-theme1190,54457
(defun sml/set-buffer-identification (&rest ignored)sml/set-buffer-identification1196,54670
(defvar sml/-this-buffer-changed-p nilsml/-this-buffer-changed-p1205,54987
(defun sml/-this-buffer-changed (&rest ignored)sml/-this-buffer-changed1209,55142
(defun sml/generate-position-help (&rest ignored)sml/generate-position-help1214,55315
(defcustom sml/order-of-line-and-column nilsml/order-of-line-and-column1229,55955
(defun sml/compile-position-construct (&optional symbol value)sml/compile-position-construct1245,56619
(defun sml/generate-modified-status ()sml/generate-modified-status1291,58935
(defmacro sml/propertize-position (s face help)sml/propertize-position1314,60127
(defun sml/propertize-time-string ()sml/propertize-time-string1322,60447
(defun sml/filter-mode-line-list (l)sml/filter-mode-line-list1329,60747
(defun sml/fill-for-buffer-identification ()sml/fill-for-buffer-identification1338,61090
(defun sml/generate-buffer-identification (&rest ignored)sml/generate-buffer-identification1352,61696
(defun sml/parse-mode-line-elements (el)sml/parse-mode-line-elements1381,63655
(defun sml/is-%p-p (x)sml/is-%p-p1469,67399
(defun sml/buffer-name ()sml/buffer-name1478,67692
(defun sml/fill-width-available ()sml/fill-width-available1494,68357
(defconst sml/propertized-shorten-mode-stringsml/propertized-shorten-mode-string1502,68616
(defconst sml/propertized-full-mode-stringsml/propertized-full-mode-string1508,68936
(defun sml/count-occurrences-starting-at (regex string start)sml/count-occurrences-starting-at1515,69246
(define-obsolete-variable-alias 'sml/hidden-modes 'rm-blacklist)sml/hidden-modes1525,69728
(defun sml/generate-minor-modes ()sml/generate-minor-modes1527,69794
(defun sml/propertize-prefix (prefix)sml/propertize-prefix1575,71960
(defun sml/get-directory ()sml/get-directory1581,72208
(defun sml/set-battery-font ()sml/set-battery-font1599,72945
(defadvice battery-update (before sml/set-battery-font activate)battery-update1608,73333
(defun sml/replacer (in)sml/replacer1612,73458
(defun sml/replacer-raw (in)sml/replacer-raw1625,73960
(defun sml/perform-projectile-replacement (in)sml/perform-projectile-replacement1658,75286
(defun sml/regexp-composer (getter)sml/regexp-composer1679,76206
(defun sml/strip-prefix (path)sml/strip-prefix1690,76671
(defun sml/get-prefix (path)sml/get-prefix1697,76900
(defun sml/not-shorten-directory (dir ml)sml/not-shorten-directory1704,77125
(defcustom sml/directory-truncation-string (if (char-displayable-p ?…) "…/" ".../")sml/directory-truncation-string1709,77251
(defun sml/do-shorten-directory (dir max-length)sml/do-shorten-directory1717,77574

elpa/smartparens-20160619.322/smartparens-autoloads.el,319
(defvar smartparens-mode-map (make-sparse-keymap) "\smartparens-mode-map28,863
(defvar smartparens-global-strict-mode nil "\smartparens-global-strict-mode71,2298
(defvar smartparens-global-mode nil "\smartparens-global-mode97,3318
(defvar show-smartparens-global-mode nil "\show-smartparens-global-mode148,5069

elpa/smartparens-20160619.322/smartparens-config.el,86
(defun sp-lisp-invalid-hyperlink-p (_1 action _2)sp-lisp-invalid-hyperlink-p54,1864

elpa/smartparens-20160619.322/smartparens-haskell.el,320
(defun sp--inferior-haskell-mode-backward-bound-fn ()sp--inferior-haskell-mode-backward-bound-fn54,1754
(defun sp--inferior-haskell-mode-forward-bound-fn ()sp--inferior-haskell-mode-forward-bound-fn63,2226
(defun sp--setup-inferior-haskell-mode-search-bounds ()sp--setup-inferior-haskell-mode-search-bounds72,2710

elpa/smartparens-20160619.322/smartparens-html.el,205
(defun sp-html-next-tag (arg)sp-html-next-tag64,2121
(defun sp-html-previous-tag (arg)sp-html-previous-tag81,2683
(defun sp-html-post-handler (&optional id action context)sp-html-post-handler98,3259

elpa/smartparens-20160619.322/smartparens-latex.el,374
(defun sp-latex-insert-spaces-inside-pair (id action context)sp-latex-insert-spaces-inside-pair56,1832
(defun sp-latex-skip-match-apostrophe (ms mb me)sp-latex-skip-match-apostrophe70,2320
(defun sp-latex-skip-double-quote (_1 action _2)sp-latex-skip-double-quote76,2465
(defun sp-latex-point-after-backslash (id action context)sp-latex-point-after-backslash83,2646

elpa/smartparens-20160619.322/smartparens-lua.el,90
(defun sp-lua-post-keyword-insert (id action _context)sp-lua-post-keyword-insert50,1550

elpa/smartparens-20160619.322/smartparens-pkg.el,148
(define-package "smartparens" "20160619.322" "Automatic insertion, wrapping and paredit-like navigation with user defined pairs.""smartparens"1,0

elpa/smartparens-20160619.322/smartparens-python.el,261
(defun sp-python-in-string-p (id action context)sp-python-in-string-p56,1792
(defun sp-python-pre-slurp-handler (id action context)sp-python-pre-slurp-handler71,2403
(defadvice python-indent-dedent-line-backspacepython-indent-dedent-line-backspace83,2917

elpa/smartparens-20160619.322/smartparens-racket.el,0

elpa/smartparens-20160619.322/smartparens-ruby.el,1315
(defun sp-ruby-forward-sexp ()sp-ruby-forward-sexp51,1568
(defun sp-ruby-backward-sexp ()sp-ruby-backward-sexp57,1710
(defun sp-ruby-maybe-one-space ()sp-ruby-maybe-one-space63,1856
(defun sp-ruby-delete-indentation (&optional arg)sp-ruby-delete-indentation78,2372
(defun sp-ruby-block-post-handler (id action context)sp-ruby-block-post-handler83,2516
(defun sp-ruby-def-post-handler (id action context)sp-ruby-def-post-handler92,2788
(defun sp-ruby-post-handler (id action context)sp-ruby-post-handler102,3064
(defun sp-ruby-pre-handler (id action context)sp-ruby-pre-handler121,3719
(defun sp-ruby-inline-p (id)sp-ruby-inline-p180,5815
(defun sp-ruby-method-p (id)sp-ruby-method-p197,6387
(defun sp-ruby-skip-inline-match-p (ms mb me)sp-ruby-skip-inline-match-p216,7004
(defun sp-ruby-skip-method-p (ms mb me)sp-ruby-skip-method-p220,7109
(defun sp-ruby-in-string-or-word-p (id action context)sp-ruby-in-string-or-word-p223,7175
(defun sp-ruby-in-string-word-or-inline-p (id action context)sp-ruby-in-string-word-or-inline-p229,7393
(defun sp-ruby-pre-pipe-handler (id action context)sp-ruby-pre-pipe-handler234,7575
(defun sp-ruby-should-insert-pipe-close (id action _ctx)sp-ruby-should-insert-pipe-close242,7776
(defun sp--ruby-skip-match (ms me mb)sp--ruby-skip-match249,8035

elpa/smartparens-20160619.322/smartparens-rust.el,174
(defun sp-in-rust-lifetime-context (&rest args)sp-in-rust-lifetime-context47,1347
(defun sp-rust-could-be-parameterized (&rest args)sp-rust-could-be-parameterized65,2016

elpa/smartparens-20160619.322/smartparens-scala.el,0

elpa/smartparens-20160619.322/smartparens.el,29655
(defun sp-cheat-sheet (&optional arg)sp-cheat-sheet76,2873
(defvar-local sp-forward-bound-fn nilsp-forward-bound-fn172,7295
(defvar-local sp-backward-bound-fn nilsp-backward-bound-fn175,7379
(defun sp--get-forward-bound ()sp--get-forward-bound178,7465
(defun sp--get-backward-bound ()sp--get-backward-bound185,7715
(defvar smartparens-mode-map (make-sparse-keymap)smartparens-mode-map194,7985
(defvaralias 'sp-keymap 'smartparens-mode-map)sp-keymap196,8076
(defvar sp-paredit-bindings '(sp-paredit-bindings199,8195
(defun sp--populate-keymap (bindings)sp--populate-keymap223,9616
(defun sp-use-paredit-bindings ()sp-use-paredit-bindings229,9830
(defvar sp-smartparens-bindings '(sp-smartparens-bindings236,10085
(defun sp-use-smartparens-bindings ()sp-use-smartparens-bindings267,11988
(defun sp--set-base-key-bindings (&optional symbol value)sp--set-base-key-bindings273,12220
(defun sp--update-override-key-bindings (&optional symbol value)sp--update-override-key-bindings284,12600
(defcustom sp-base-key-bindings nilsp-base-key-bindings293,12994
(defcustom sp-override-key-bindings nilsp-override-key-bindings314,13844
(defvar sp-escape-char nilsp-escape-char335,14468
(defvar sp-comment-char nilsp-comment-char339,14594
(defvar sp-pair-list nilsp-pair-list343,14708
(defvar sp-local-pairs nilsp-local-pairs350,14906
(defvar sp-last-operation nilsp-last-operation354,15034
(defvar sp-state nilsp-state370,15654
(defvar sp-previous-point -1sp-previous-point375,15787
(defvar sp-wrap-point nilsp-wrap-point383,16048
(defvar sp-wrap-mark nilsp-wrap-mark391,16274
(defvar sp-last-inserted-characters ""sp-last-inserted-characters398,16472
(defvar sp-last-inserted-pair nilsp-last-inserted-pair405,16729
(defvar sp-delayed-pair nilsp-delayed-pair409,16841
(defvar sp-last-wrapped-region nilsp-last-wrapped-region415,17066
(defvar sp-point-inside-string nilsp-point-inside-string420,17256
(defvar sp-buffer-modified-p nilsp-buffer-modified-p426,17404
(defvar sp-pre-command-point nilsp-pre-command-point430,17527
(defconst sp-max-pair-length 10sp-max-pair-length433,17623
(defconst sp-max-prefix-length 100sp-max-prefix-length439,17798
(defvar sp-pairs '((tsp-pairs447,18111
(defvar sp-tags nilsp-tags464,19199
(defvar sp-prefix-tag-object nilsp-prefix-tag-object467,19292
(defvar sp-prefix-pair-object nilsp-prefix-pair-object470,19394
(defvar sp-prefix-symbol-object nilsp-prefix-symbol-object476,19572
(define-obsolete-variable-alias 'sp--lisp-modes 'sp-lisp-modes "2015-11-08")sp--lisp-modes482,19753
(defcustom sp-lisp-modes '(sp-lisp-modes484,19831
(defcustom sp-no-reindent-after-kill-modes '(sp-no-reindent-after-kill-modes512,20913
(defvar sp--html-modes '(sp--html-modes523,21397
(defvar sp-message-alistsp-message-alist535,21764
(defgroup smartparens ()smartparens580,23658
(define-minor-mode smartparens-modesmartparens-mode586,23762
(defvar smartparens-strict-mode-mapsmartparens-strict-mode-map604,24269
(define-minor-mode smartparens-strict-modesmartparens-strict-mode618,24954
(define-globalized-minor-mode smartparens-global-strict-modesmartparens-global-strict-mode648,26486
(defun turn-on-smartparens-strict-mode ()turn-on-smartparens-strict-mode654,26646
(defun sp--init ()sp--init662,26952
(defun sp--maybe-init ()sp--maybe-init678,27484
(defun sp--update-local-pairs ()sp--update-local-pairs683,27626
(defun sp--update-local-pairs-everywhere (&rest modes)sp--update-local-pairs-everywhere697,28259
(defcustom smartparens-enabled-hook nilsmartparens-enabled-hook711,28738
(defcustom smartparens-disabled-hook nilsmartparens-disabled-hook716,28866
(defcustom sp-ignore-modes-list '(sp-ignore-modes-list722,29013
(define-globalized-minor-mode smartparens-global-modesmartparens-global-mode730,29273
(defun turn-on-smartparens-mode ()turn-on-smartparens-mode735,29390
(defun turn-off-smartparens-mode ()turn-off-smartparens-mode755,30069
(defcustom sp-autoinsert-pair tsp-autoinsert-pair761,30197
(defcustom sp-autoinsert-quote-if-followed-by-closing-pair nilsp-autoinsert-quote-if-followed-by-closing-pair766,30327
(defcustom sp-autoskip-closing-pair 'always-endsp-autoskip-closing-pair790,31234
(defcustom sp-autoskip-opening-pair nilsp-autoskip-opening-pair818,32395
(defcustom sp-cancel-autoskip-on-backward-movement tsp-cancel-autoskip-on-backward-movement825,32627
(defcustom sp-autodelete-pair tsp-autodelete-pair833,32924
(defcustom sp-autodelete-closing-pair tsp-autodelete-closing-pair838,33055
(defcustom sp-autodelete-opening-pair tsp-autodelete-opening-pair843,33211
(defcustom sp-undo-pairs-separately nilsp-undo-pairs-separately848,33367
(defcustom sp-successive-kill-preserve-whitespace 1sp-successive-kill-preserve-whitespace863,33951
(defcustom sp-autowrap-region tsp-autowrap-region875,34431
(defcustom sp-wrap-show-possible-pairs tsp-wrap-show-possible-pairs880,34554
(defcustom sp-autodelete-wrap tsp-autodelete-wrap885,34705
(defcustom sp-wrap-repeat-last 1sp-wrap-repeat-last893,34970
(defcustom sp-wrap-entire-symbol nilsp-wrap-entire-symbol905,35511
(defcustom sp-wrap-from-point nilsp-wrap-from-point928,36205
(defcustom sp-wrap-respect-direction nilsp-wrap-respect-direction937,36513
(defcustom sp-autoescape-string-quote tsp-autoescape-string-quote951,36974
(defcustom sp-autoescape-string-quote-if-empty '(sp-autoescape-string-quote-if-empty957,37239
(defcustom sp-navigate-consider-sgml-tags '(sp-navigate-consider-sgml-tags971,37927
(defcustom sp-navigate-consider-stringlike-sexp '(sp-navigate-consider-stringlike-sexp978,38183
(defcustom sp-navigate-use-textmode-stringlike-parser '((derived . text-mode))sp-navigate-use-textmode-stringlike-parser996,38967
(defvaralias 'sp-nagivate-use-textmode-stringlike-parser 'sp-navigate-use-textmode-stringlike-parser)sp-nagivate-use-textmode-stringlike-parser1011,39569
(defcustom sp-navigate-consider-symbols tsp-navigate-consider-symbols1014,39703
(defcustom sp-navigate-comments-as-sexps tsp-navigate-comments-as-sexps1030,40299
(defcustom sp-navigate-skip-match `(sp-navigate-skip-match1038,40589
(defcustom sp-navigate-reindent-after-up `(sp-navigate-reindent-after-up1057,41415
(defcustom sp-navigate-reindent-after-up-in-string tsp-navigate-reindent-after-up-in-string1079,42279
(defcustom sp-navigate-close-if-unbalanced nilsp-navigate-close-if-unbalanced1088,42602
(defcustom sp-sexp-prefix nilsp-sexp-prefix1096,42859
(defcustom sp-sexp-suffix nilsp-sexp-suffix1122,43673
(defcustom sp-split-sexp-always-split-as-string tsp-split-sexp-always-split-as-string1148,44484
(defcustom sp-hybrid-kill-excessive-whitespace nilsp-hybrid-kill-excessive-whitespace1195,45530
(defcustom sp-hybrid-kill-entire-symbol nilsp-hybrid-kill-entire-symbol1202,45766
(defcustom sp-comment-string nilsp-comment-string1218,46383
(defcustom sp-highlight-pair-overlay tsp-highlight-pair-overlay1230,46713
(defcustom sp-highlight-wrap-overlay tsp-highlight-wrap-overlay1235,46876
(defcustom sp-highlight-wrap-tag-overlay tsp-highlight-wrap-tag-overlay1240,47039
(defcustom sp-message-width 'framesp-message-width1245,47214
(defcustom sp-use-subword nilsp-use-subword1256,47688
(defun sp--delete-selection-p ()sp--delete-selection-p1266,47966
(defadvice cua-replace-region (around fix-sp-wrap activate)cua-replace-region1271,48219
(defadvice delete-selection-pre-hook (around fix-sp-wrap activate)delete-selection-pre-hook1276,48345
(defun sp--indent-region (start end &optional column)sp--indent-region1284,48550
(defmacro sp-with-modes (arg &rest forms)sp-with-modes1291,48871
(defun sp--evil-normal-state-p ()sp--evil-normal-state-p1308,49635
(defun sp--evil-motion-state-p ()sp--evil-motion-state-p1312,49797
(defun sp--evil-visual-state-p ()sp--evil-visual-state-p1316,49959
(defun sp--reverse-string (str)sp--reverse-string1320,50121
(defun sp-point-in-blank-line (&optional p)sp-point-in-blank-line1324,50221
(defun sp-point-in-blank-sexp (&optional p)sp-point-in-blank-sexp1333,50491
(defun sp-point-in-string (&optional p)sp-point-in-string1347,51005
(defun sp-point-in-comment (&optional p)sp-point-in-comment1355,51249
(defun sp-point-in-string-or-comment (&optional p)sp-point-in-string-or-comment1384,52601
(defun sp-point-in-symbol (&optional p)sp-point-in-symbol1391,52859
(defun sp--single-key-description (event)sp--single-key-description1402,53224
(defun sp--split-string (string by)sp--split-string1413,53566
(defun sp--current-indentation ()sp--current-indentation1421,53902
(defun sp--calculate-indentation-offset (old-column old-indentation)sp--calculate-indentation-offset1427,54056
(defun sp--back-to-indentation (old-column old-indentation)sp--back-to-indentation1440,54643
(defmacro sp--keep-indentation (&rest body)sp--keep-indentation1444,54814
(defvar sp--self-insert-commandssp--self-insert-commands1456,55199
(defvar sp--special-self-insert-commandssp--special-self-insert-commands1469,55709
(defun sp--self-insert-command-p ()sp--self-insert-command-p1492,56523
(defun sp--special-self-insert-command-p ()sp--special-self-insert-command-p1496,56684
(defun sp--signum (x)sp--signum1503,56967
(defmacro sp-get (struct &rest forms)sp-get1629,63086
(defmacro sp-compare-sexps (a b &optional fun what-a what-b)sp-compare-sexps1686,65428
(defun sp-message (key)sp-message1699,65918
(defun sp--merge-prop (old-pair new-pair prop)sp--merge-prop1725,66900
(defun sp--merge-pairs (old-pair new-pair)sp--merge-pairs1752,68207
(defun sp--update-pair (old-pair new-pair)sp--update-pair1762,68480
(defun sp--update-pair-list (pair mode)sp--update-pair-list1777,69073
(defun sp--get-pair (open list)sp--get-pair1796,69944
(defun sp--get-pair-definition (open list &optional prop)sp--get-pair-definition1800,70075
(defun sp-get-pair-definition (open mode &optional prop)sp-get-pair-definition1824,71025
(defun sp-get-pair (open &optional prop)sp-get-pair1832,71340
(defun sp--merge-with-local (mode)sp--merge-with-local1839,71616
(defun sp-wrap-with-pair (pair)sp-wrap-with-pair1870,72965
(defface sp-pair-overlay-facesp-pair-overlay-face2276,90106
(defface sp-wrap-overlay-facesp-wrap-overlay-face2281,90236
(defface sp-wrap-overlay-opening-pairsp-wrap-overlay-opening-pair2286,90377
(defface sp-wrap-overlay-closing-pairsp-wrap-overlay-closing-pair2292,90554
(defface sp-wrap-tag-overlay-facesp-wrap-tag-overlay-face2298,90729
(defvar sp-pair-overlay-list '()sp-pair-overlay-list2303,90878
(defvar sp-wrap-overlays nilsp-wrap-overlays2312,91234
(defvar sp-wrap-tag-overlays nilsp-wrap-tag-overlays2316,91344
(defvar sp-pair-overlay-keymap (make-sparse-keymap)sp-pair-overlay-keymap2320,91466
(define-key sp-pair-overlay-keymap (kbd "C-g") 'sp-remove-active-pair-overlay)sp-pair-overlay-keymap2322,91553
(defvar sp-wrap-overlay-keymap (make-sparse-keymap)sp-wrap-overlay-keymap2324,91633
(define-key sp-wrap-overlay-keymap (kbd "C-g") 'sp-wrap-cancel)sp-wrap-overlay-keymap2326,91720
(defun sp--overlays-at (&optional pos)sp--overlays-at2328,91785
(defun sp--point-in-overlay-p (overlay)sp--point-in-overlay-p2334,92049
(defun sp--get-overlay-length (overlay)sp--get-overlay-length2339,92213
(defun sp--get-active-overlay (&optional type)sp--get-active-overlay2343,92342
(defun sp--pair-overlay-create (start end id)sp--pair-overlay-create2356,92856
(defun sp-wrap-cancel ()sp-wrap-cancel2369,93450
(defun sp-wrap--clean-overlays ()sp-wrap--clean-overlays2384,94054
(defun sp--pair-overlay-fix-highlight ()sp--pair-overlay-fix-highlight2391,94242
(defun sp--pair-overlay-post-command-handler ()sp--pair-overlay-post-command-handler2410,95074
(defun sp-remove-active-pair-overlay ()sp-remove-active-pair-overlay2426,95815
(defun sp--remove-overlay (overlay)sp--remove-overlay2432,96041
(defun sp--replace-overlay-text (o string)sp--replace-overlay-text2447,96779
(defun sp--get-overlay-text (o)sp--get-overlay-text2454,96988
(defun sp-in-string-p (id action context)sp-in-string-p2462,97193
(defun sp-in-docstring-p (id action context)sp-in-docstring-p2466,97326
(defun sp-in-code-p (id action context)sp-in-code-p2477,97825
(defun sp-in-comment-p (id action context)sp-in-comment-p2481,97941
(defun sp-in-math-p (id action context)sp-in-math-p2485,98066
(defun sp-point-before-eol-p (id action context)sp-point-before-eol-p2490,98207
(defun sp-point-after-bol-p (id action context)sp-point-after-bol-p2496,98462
(defun sp-point-at-bol-p (id action context)sp-point-at-bol-p2502,98744
(defun sp-point-before-symbol-p (id action context)sp-point-before-symbol-p2508,98994
(defun sp-point-before-word-p (id action context)sp-point-before-word-p2514,99221
(defun sp-point-after-word-p (id action context)sp-point-after-word-p2520,99451
(defun sp-point-before-same-p (id action context)sp-point-before-same-p2526,99709
(defun sp-point-in-empty-line-p (id action context)sp-point-in-empty-line-p2532,99939
(defun sp--do-action-p (id action &optional use-inside-string)sp--do-action-p2541,100250
(defun sp--get-handler-context (type)sp--get-handler-context2573,101495
(defun sp--get-context (&optional point in-string in-comment)sp--get-context2584,101950
(defun sp--parse-insertion-spec (fun)sp--parse-insertion-spec2596,102331
(defun sp--run-function-or-insertion (fun id action context)sp--run-function-or-insertion2643,104709
(defun sp--run-hook-with-args (id type action)sp--run-hook-with-args2657,105117
(defun sp--post-command-hook-handler ()sp--post-command-hook-handler2676,106046
(defmacro sp--setaction (action &rest forms)sp--setaction2764,110145
(defun sp--post-self-insert-hook-handler ()sp--post-self-insert-hook-handler2772,110448
(defun sp--save-pre-command-state ()sp--save-pre-command-state2810,112362
(defun sp--pre-command-hook-handler ()sp--pre-command-hook-handler2817,112600
(defun sp--get-pair-list ()sp--get-pair-list2823,112753
(defun sp--get-stringlike-list ()sp--get-stringlike-list2829,112996
(defun sp--get-allowed-pair-list ()sp--get-allowed-pair-list2834,113194
(defun sp--get-allowed-stringlike-list ()sp--get-allowed-stringlike-list2842,113531
(defun sp--get-pair-list-context (&optional action)sp--get-pair-list-context2849,113834
(defun sp--get-pair-list-wrap ()sp--get-pair-list-wrap2855,114086
(defun sp--wrap-regexp (string start end)sp--wrap-regexp2859,114244
(defun sp--regexp-for-group (parens &rest strings)sp--regexp-for-group2864,114450
(defun sp--strict-regexp-opt (strings &optional ignored)sp--strict-regexp-opt2871,114728
(defun sp--strict-regexp-quote (string)sp--strict-regexp-quote2889,115510
(defun sp-pair-is-stringlike-p (delim)sp-pair-is-stringlike-p2912,116529
(defun sp--get-last-wraped-region (beg end open close)sp--get-last-wraped-region2915,116639
(defun sp-wrap--can-wrap-p ()sp-wrap--can-wrap-p2940,117596
(defun sp--pair-to-wrap-comparator (prop a b)sp--pair-to-wrap-comparator2949,118003
(defun sp--pair-to-wrap (&optional prefix)sp--pair-to-wrap2958,118432
(defun sp-wrap--initialize ()sp-wrap--initialize2979,119476
(defun sp-wrap--finalize (wrapping-end open close)sp-wrap--finalize3011,121057
(defun sp-wrap ()sp-wrap3040,122159
(defun sp-match-sgml-tags (tag)sp-match-sgml-tags3076,123669
(defun sp--is-number-cons (c)sp--is-number-cons3083,123963
(defun sp--undo-pop-to-last-insertion-node ()sp--undo-pop-to-last-insertion-node3087,124082
(defun sp--split-last-insertion-undo (len)sp--split-last-insertion-undo3098,124594
(defun sp--string-empty-p (delimeter)sp--string-empty-p3122,125648
(defun sp--all-pairs-to-insert (&optional looking-fn)sp--all-pairs-to-insert3127,125841
(defun sp--pair-to-insert-comparator (prop a b)sp--pair-to-insert-comparator3148,126845
(defun sp--pair-to-insert ()sp--pair-to-insert3163,127569
(defun sp--longest-prefix-to-insert ()sp--longest-prefix-to-insert3173,127897
(defun sp--pair-to-uninsert ()sp--pair-to-uninsert3178,128217
(defun sp--insert-pair-get-pair-info (active-pair)sp--insert-pair-get-pair-info3202,129462
(defun sp-insert-pair (&optional pair)sp-insert-pair3212,129826
(defun sp--wrap-repeat-last (active-pair)sp--wrap-repeat-last3315,135659
(defun sp--char-is-part-of-stringlike (char)sp--char-is-part-of-stringlike3357,137507
(defun sp--char-is-part-of-closing (char)sp--char-is-part-of-closing3364,137771
(defun sp-skip-closing-pair (&optional last test-only)sp-skip-closing-pair3373,138106
(defun sp-delete-pair (&optional arg)sp-delete-pair3501,144908
(defun sp--looking-at (regexp)sp--looking-at3597,149675
(defun sp--looking-at-p (regexp)sp--looking-at-p3602,149815
(defun sp--looking-back (regexp &optional limit not-greedy)sp--looking-back3607,149961
(defun sp--looking-back-p (regexp &optional limit not-greedy)sp--looking-back-p3634,150944
(defun sp--search-backward-regexp (regexp &optional bound noerror count)sp--search-backward-regexp3639,151140
(defun sp--search-forward-regexp (regexp &optional bound noerror count)sp--search-forward-regexp3658,151850
(defun sp-get-quoted-string-bounds ()sp-get-quoted-string-bounds3664,152128
(defun sp-get-comment-bounds ()sp-get-comment-bounds3679,152677
(defun sp--get-string-or-comment-bounds ()sp--get-string-or-comment-bounds3719,154620
(defmacro sp--search-and-save-match (search-fn pattern bound res beg end str)sp--search-and-save-match3724,154789
(defmacro sp--valid-initial-delimiter-p (form)sp--valid-initial-delimiter-p3751,155872
(defun sp--elisp-skip-match (ms mb me)sp--elisp-skip-match3761,156201
(defun sp--backslash-skip-match (ms mb me)sp--backslash-skip-match3779,156931
(defun sp-get-paired-expression (&optional back)sp-get-paired-expression3789,157294
(defun sp--find-next-stringlike-delimiter (needle search-fn-f &optional limit skip-fn)sp--find-next-stringlike-delimiter3993,168342
(defun sp-get-stringlike-expression (&optional back)sp-get-stringlike-expression4013,169319
(defun sp--textmode-stringlike-regexp (delimiters &optional direction)sp--textmode-stringlike-regexp4051,171199
(defun sp--find-next-textmode-stringlike-delimiter (needle search-fn-f &optional limit)sp--find-next-textmode-stringlike-delimiter4073,172111
(defun sp-get-textmode-stringlike-expression (&optional back)sp-get-textmode-stringlike-expression4089,172829
(defun sp-use-textmode-stringlike-parser-p ()sp-use-textmode-stringlike-parser-p4163,176728
(defun sp-get-stringlike-or-textmode-expression (&optional back delimiter)sp-get-stringlike-or-textmode-expression4170,177092
(defun sp-get-expression (&optional back)sp-get-expression4188,177894
(defun sp-get-sexp (&optional back)sp-get-sexp4245,180838
(defun sp--get-hybrid-sexp-beg ()sp--get-hybrid-sexp-beg4313,183671
(defun sp--narrow-to-line ()sp--narrow-to-line4343,184891
(defun sp--get-hybrid-sexp-end ()sp--get-hybrid-sexp-end4347,185021
(defun sp--get-hybrid-suffix (p)sp--get-hybrid-suffix4389,186719
(defun sp-get-hybrid-sexp ()sp-get-hybrid-sexp4404,187128
(defun sp-get-enclosing-sexp (&optional arg)sp-get-enclosing-sexp4419,187657
(defun sp-get-list-items (&optional lst)sp-get-list-items4473,189650
(defun sp-get-symbol (&optional back)sp-get-symbol4554,192719
(defun sp--get-string (bounds)sp--get-string4585,193871
(defun sp-get-string (&optional back)sp-get-string4604,194544
(defun sp-get-whitespace ()sp-get-whitespace4626,195340
(defun sp--sgml-get-tag-name (match)sp--sgml-get-tag-name4638,195689
(defun sp--sgml-opening-p (tag)sp--sgml-opening-p4644,195898
(defun sp--sgml-ignore-tag (tag)sp--sgml-ignore-tag4647,195972
(defun sp-get-sgml-tag (&optional back)sp-get-sgml-tag4651,196112
(defun sp--end-delimiter-closure (pairs pair-list)sp--end-delimiter-closure4708,198632
(defun sp-restrict-to-pairs (pairs function)sp-restrict-to-pairs4730,199462
(defun sp-restrict-to-object (object function)sp-restrict-to-object4746,200012
(defun sp-restrict-to-pairs-interactive (pairs function)sp-restrict-to-pairs-interactive4769,200676
(defun sp-restrict-to-object-interactive (object function)sp-restrict-to-object-interactive4793,201491
(defun sp-prefix-tag-object (&optional arg)sp-prefix-tag-object4819,202413
(defun sp-prefix-pair-object (&optional arg)sp-prefix-pair-object4837,203063
(defun sp-prefix-symbol-object (&optional arg)sp-prefix-symbol-object4854,203716
(defun sp-prefix-save-excursion (&optional arg)sp-prefix-save-excursion4872,204359
(defun sp-get-thing (&optional back)sp-get-thing4885,204755
(defun sp-narrow-to-sexp (arg)sp-narrow-to-sexp4974,209158
(defun sp-forward-sexp (&optional arg)sp-forward-sexp4983,209493
(defun sp-backward-sexp (&optional arg)sp-backward-sexp5017,210389
(defun sp-next-sexp (&optional arg)sp-next-sexp5051,211305
(defun sp-previous-sexp (&optional arg)sp-previous-sexp5083,212289
(defun sp--raw-argument-p (arg)sp--raw-argument-p5115,213267
(defun sp--negate-argument (arg)sp--negate-argument5119,213402
(defun sp-down-sexp (&optional arg)sp-down-sexp5132,213804
(defun sp-backward-down-sexp (&optional arg)sp-backward-down-sexp5190,215722
(defun sp-beginning-of-sexp (&optional arg)sp-beginning-of-sexp5222,216753
(defun sp-end-of-sexp (&optional arg)sp-end-of-sexp5274,218494
(defun sp-beginning-of-next-sexp (&optional arg)sp-beginning-of-next-sexp5326,220249
(defun sp-beginning-of-previous-sexp (&optional arg)sp-beginning-of-previous-sexp5347,220822
(defun sp-end-of-next-sexp (&optional arg)sp-end-of-next-sexp5368,221449
(defun sp-end-of-previous-sexp (&optional arg)sp-end-of-previous-sexp5389,221980
(defun sp-up-sexp (&optional arg interactive)sp-up-sexp5410,222565
(defun sp-backward-up-sexp (&optional arg interactive)sp-backward-up-sexp5499,226365
(defvar sp-last-kill-whitespace nilsp-last-kill-whitespace5526,227152
(defun sp-kill-sexp (&optional arg dont-kill)sp-kill-sexp5532,227335
(defun sp--cleanup-after-kill ()sp--cleanup-after-kill5652,231848
(defun sp-backward-kill-sexp (&optional arg dont-kill)sp-backward-kill-sexp5684,233169
(defun sp-copy-sexp (&optional arg)sp-copy-sexp5701,233697
(defun sp-backward-copy-sexp (&optional arg)sp-backward-copy-sexp5710,233978
(defun sp-clone-sexp ()sp-clone-sexp5719,234298
(defun sp-kill-hybrid-sexp (arg)sp-kill-hybrid-sexp5755,235703
(defun sp--transpose-objects (first second)sp--transpose-objects5821,238280
(defun sp-transpose-sexp (&optional arg)sp-transpose-sexp5831,238699
(defun sp-transpose-hybrid-sexp (&optional arg)sp-transpose-hybrid-sexp5874,240117
(defun sp-push-hybrid-sexp ()sp-push-hybrid-sexp5915,241299
(defun sp-indent-adjust-sexp ()sp-indent-adjust-sexp5940,242171
(defun sp-dedent-adjust-sexp ()sp-dedent-adjust-sexp5966,243241
(defun sp-slurp-hybrid-sexp ()sp-slurp-hybrid-sexp6013,245212
(defun sp-forward-slurp-sexp (&optional arg)sp-forward-slurp-sexp6081,248071
(defun sp-backward-slurp-sexp (&optional arg)sp-backward-slurp-sexp6167,252015
(defun sp-add-to-previous-sexp (&optional arg)sp-add-to-previous-sexp6245,255588
(defun sp-add-to-next-sexp (&optional arg)sp-add-to-next-sexp6278,256605
(defun sp-forward-barf-sexp (&optional arg)sp-forward-barf-sexp6310,257573
(defun sp-backward-barf-sexp (&optional arg)sp-backward-barf-sexp6363,259589
(defmacro sp--skip-to-symbol-1 (forward)sp--skip-to-symbol-16408,261339
(defun sp-skip-forward-to-symbol (&optional stop-at-string stop-after-string stop-inside-string)sp-skip-forward-to-symbol6442,263215
(defun sp-skip-backward-to-symbol (&optional stop-at-string stop-after-string stop-inside-string)sp-skip-backward-to-symbol6462,263753
(defun sp-skip-into-string (&optional back)sp-skip-into-string6481,264295
(defun sp-forward-symbol (&optional arg)sp-forward-symbol6494,264733
(defun sp-backward-symbol (&optional arg)sp-backward-symbol6549,266919
(defun sp-rewrap-sexp (pair &optional keep-old)sp-rewrap-sexp6597,268734
(defun sp-swap-enclosing-sexp (&optional arg)sp-swap-enclosing-sexp6640,270323
(defun sp--unwrap-sexp (sexp &optional no-cleanup)sp--unwrap-sexp6672,271382
(defun sp-unwrap-sexp (&optional arg)sp-unwrap-sexp6704,272763
(defun sp-backward-unwrap-sexp (&optional arg)sp-backward-unwrap-sexp6729,273465
(defun sp-splice-sexp (&optional arg)sp-splice-sexp6746,273897
(defun sp--splice-sexp-do-killing (beg end expr &optional jump-end)sp--splice-sexp-do-killing6770,274566
(defun sp-splice-sexp-killing-backward (&optional arg)sp-splice-sexp-killing-backward6785,275145
(defun sp-splice-sexp-killing-forward (&optional arg)sp-splice-sexp-killing-forward6813,276113
(defun sp-splice-sexp-killing-around (&optional arg)sp-splice-sexp-killing-around6843,277027
(defalias 'sp-raise-sexp 'sp-splice-sexp-killing-around)sp-raise-sexp6954,282004
(defun sp-convolute-sexp (&optional arg)sp-convolute-sexp6956,282062
(defun sp-absorb-sexp (&optional arg)sp-absorb-sexp7009,284267
(defun sp-emit-sexp (&optional arg)sp-emit-sexp7040,285137
(defun sp-extract-before-sexp (&optional arg)sp-extract-before-sexp7075,286240
(defun sp-extract-after-sexp (&optional arg)sp-extract-after-sexp7118,287970
(defun sp-forward-whitespace (&optional arg)sp-forward-whitespace7173,290168
(defun sp-backward-whitespace (&optional arg)sp-backward-whitespace7182,290460
(defun sp-split-sexp (arg)sp-split-sexp7191,290756
(defun sp--join-sexp (prev next)sp--join-sexp7253,292974
(defun sp-join-sexp (&optional arg)sp-join-sexp7279,294033
(defun sp--next-thing-selection (&optional arg point)sp--next-thing-selection7325,295584
(defun sp-select-next-thing (&optional arg point)sp-select-next-thing7457,300458
(defun sp-select-previous-thing (&optional arg point)sp-select-previous-thing7525,303128
(defun sp-select-next-thing-exchange (&optional arg point)sp-select-next-thing-exchange7535,303502
(defun sp-select-previous-thing-exchange (&optional arg point)sp-select-previous-thing-exchange7542,303745
(defun sp-delete-char (&optional arg)sp-delete-char7549,304000
(defun sp-backward-delete-char (&optional arg)sp-backward-delete-char7624,306645
(defun sp-point-in-empty-sexp (&optional pos)sp-point-in-empty-sexp7702,309433
(defun sp-point-in-empty-string (&optional pos)sp-point-in-empty-string7716,309971
(defun sp-zap-syntax (syntax &optional back)sp-zap-syntax7730,310558
(defun sp--use-subword ()sp--use-subword7740,310850
(defun sp--kill-word (&optional n)sp--kill-word7750,311212
(defun sp--forward-word (&optional n)sp--forward-word7757,311374
(defun sp--backward-word (&optional n)sp--backward-word7764,311553
(defun sp-kill-symbol (&optional arg word)sp-kill-symbol7771,311736
(defun sp-kill-word (&optional arg)sp-kill-word7803,313014
(defun sp-backward-kill-symbol (&optional arg word)sp-backward-kill-symbol7813,313301
(defun sp-backward-kill-word (&optional arg)sp-backward-kill-word7844,314492
(defun sp-indent-defun (&optional arg)sp-indent-defun7854,314798
(defun sp--balanced-context-p (count start-context end-context)sp--balanced-context-p7873,315379
(defun sp-newline ()sp-newline7909,317011
(defun sp-comment ()sp-comment7933,317708
(defgroup show-smartparens nilshow-smartparens7979,319551
(defcustom sp-show-pair-delay 0.125sp-show-pair-delay7983,319639
(defcustom sp-show-enclosing-pair-commands '(sp-show-enclosing-pair-commands7988,319798
(defcustom sp-show-pair-from-inside nilsp-show-pair-from-inside8001,320412
(defface sp-show-pair-match-facesp-show-pair-match-face8007,320619
(defface sp-show-pair-mismatch-facesp-show-pair-mismatch-face8012,320777
(defface sp-show-pair-enclosingsp-show-pair-enclosing8017,320944
(defvar sp-show-pair-idle-timer nil)sp-show-pair-idle-timer8022,321081
(defvar sp-show-pair-overlays nil)sp-show-pair-overlays8024,321119
(defvar sp-show-pair-enc-overlays nil)sp-show-pair-enc-overlays8026,321155
(define-minor-mode show-smartparens-modeshow-smartparens-mode8029,321210
(define-globalized-minor-mode show-smartparens-global-modeshow-smartparens-global-mode8046,321882
(defun turn-on-show-smartparens-mode ()turn-on-show-smartparens-mode8051,322014
(defun turn-off-show-smartparens-mode ()turn-off-show-smartparens-mode8060,322329
(defun sp-show-enclosing-pair ()sp-show-enclosing-pair8065,322455
(defun sp-highlight-current-sexp (arg)sp-highlight-current-sexp8069,322553
(defun sp-show--pair-function ()sp-show--pair-function8080,322946
(defun sp-show--pair-enc-function (&optional thing)sp-show--pair-enc-function8126,325493
(defun sp-show--pair-create-overlays (start end olen clen)sp-show--pair-create-overlays8132,325773
(defun sp-show--pair-create-enc-overlays (start end olen clen)sp-show--pair-create-enc-overlays8145,326345
(defun sp-show--pair-create-mismatch-overlay (start len)sp-show--pair-create-mismatch-overlay8158,326944
(defun sp-show--pair-delete-overlays ()sp-show--pair-delete-overlays8168,327339
(defun sp-show--pair-delete-enc-overlays ()sp-show--pair-delete-enc-overlays8177,327665
(defadvice delete-backward-char (before sp-delete-pair-advice activate)delete-backward-char8188,328056
(defadvice haskell-indentation-delete-backward-char (before sp-delete-pair-advice activate)haskell-indentation-delete-backward-char8191,328185
(defadvice company--insert-candidate (after sp-company--insert-candidate activate)company--insert-candidate8199,328518
(defadvice hippie-expand (after sp-auto-complete-advice activate)hippie-expand8206,328797
(defvar sp--mc/cursor-specific-varssp--mc/cursor-specific-vars8210,328912
(defvar mc/cursor-specific-vars)mc/cursor-specific-vars8223,329204

elpa/smex-20151212.1409/smex-autoloads.el,0

elpa/smex-20151212.1409/smex-pkg.el,196
(define-package "smex" "20151212.1409" "M-x interface with Ido-style fuzzy matching." '((emacs "24")) :url "http://github.com/nonsequitur/smex/" :keywords '("convenience" "usability"))"smex"1,0

elpa/smex-20151212.1409/smex.el,3210
(defgroup smex nilsmex33,747
(defcustom smex-auto-update tsmex-auto-update39,940
(defcustom smex-save-file (locate-user-emacs-file "smex-items" ".smex-items")smex-save-file45,1131
(defcustom smex-history-length 7smex-history-length52,1397
(defcustom smex-prompt-string "M-x "smex-prompt-string59,1583
(defcustom smex-flex-matching tsmex-flex-matching64,1695
(defvar smex-initialized-p nil)smex-initialized-p70,1850
(defvar smex-cache)smex-cache71,1882
(defvar smex-ido-cache)smex-ido-cache72,1902
(defvar smex-data)smex-data73,1926
(defvar smex-history)smex-history74,1945
(defvar smex-command-count 0)smex-command-count75,1967
(defvar smex-custom-action nil)smex-custom-action76,1997
(defun smex ()smex88,2415
(defun smex-already-running ()smex-already-running99,2685
(defun smex-update-and-rerun ()smex-update-and-rerun104,2850
(defun smex-read-and-run (commands &optional initial-input)smex-read-and-run108,2989
(defun smex-major-mode-commands ()smex-major-mode-commands121,3566
(defun smex-completing-read (choices initial-input)smex-completing-read132,4089
(defun smex-prompt-with-prefix-arg ()smex-prompt-with-prefix-arg142,4581
(defun smex-prepare-ido-bindings ()smex-prepare-ido-bindings155,4969
(defun smex-rebuild-cache ()smex-rebuild-cache165,5454
(defun smex-convert-for-ido (command-items)smex-convert-for-ido186,6249
(defun smex-restore-history ()smex-restore-history189,6377
(defun smex-sort-according-to-cache (list)smex-sort-according-to-cache206,7217
(defun smex-update ()smex-update216,7580
(defun smex-detect-new-commands ()smex-detect-new-commands221,7665
(defun smex-auto-update (&optional idle-time)smex-auto-update227,7862
(defun smex-initialize ()smex-initialize234,8140
(defun smex-initialize-ido ()smex-initialize-ido243,8381
(defsubst smex-save-file-not-empty-p ()smex-save-file-not-empty-p249,8643
(defun smex-load-save-file ()smex-load-save-file252,8737
(defun smex-save-history ()smex-save-history268,9528
(defmacro smex-pp (list-var)smex-pp277,9810
(defun smex-save-to-file ()smex-save-to-file280,9889
(defun smex-sorting-rules (command-item other-command-item)smex-sorting-rules290,10156
(defun smex-rank (command)smex-rank304,10913
(defun smex-update-counter (command-item)smex-update-counter332,12177
(defun smex-sort-item-at (n)smex-sort-item-at344,12610
(defun smex-detect-position (cell function)smex-detect-position364,13552
(defun smex-remove-nth-cell (n list)smex-remove-nth-cell378,14033
(defun smex-insert-cell (new-cell n list)smex-insert-cell385,14256
(defun smex-do-with-selected-item (fn)smex-do-with-selected-item394,14564
(defun smex-describe-function ()smex-describe-function398,14660
(defun smex-where-is ()smex-where-is404,14876
(defun smex-find-function ()smex-find-function408,14959
(defun smex-extract-commands-from-keymap (map)smex-extract-commands-from-keymap412,15052
(defun smex-parse-keymap (map commands)smex-parse-keymap417,15170
(defun smex-extract-commands-from-features (mode)smex-extract-commands-from-features426,15573
(defun smex-show-unbound-commands ()smex-show-unbound-commands449,16544
(defun smex-pp* (list list-name)smex-pp*468,17327

elpa/solarized-theme-20160515.442/solarized-dark-theme.el,95
(deftheme solarized-dark "The dark variant of the Solarized colour theme")solarized-dark3,22

elpa/solarized-theme-20160515.442/solarized-light-theme.el,98
(deftheme solarized-light "The light variant of the Solarized colour theme")solarized-light3,22

elpa/solarized-theme-20160515.442/solarized-theme-autoloads.el,0

elpa/solarized-theme-20160515.442/solarized-theme-pkg.el,117
(define-package "solarized-theme" "20160515.442" "The Solarized color theme, ported to Emacs.""solarized-theme"1,0

elpa/solarized-theme-20160515.442/solarized-theme-utils.el,96
(defun solarized-import-faces (&optional regexp already-defined)solarized-import-faces30,1005

elpa/solarized-theme-20160515.442/solarized-theme.el,0

elpa/solarized-theme-20160515.442/solarized.el,1347
(defgroup solarized nilsolarized47,1342
(defcustom solarized-distinct-fringe-background nilsolarized-distinct-fringe-background52,1481
(defcustom solarized-distinct-doc-face nilsolarized-distinct-doc-face58,1685
(defcustom solarized-use-variable-pitch tsolarized-use-variable-pitch64,1887
(defcustom solarized-use-less-bold nilsolarized-use-less-bold69,2026
(defcustom solarized-use-more-italic nilsolarized-use-more-italic74,2136
(defcustom solarized-emphasize-indicators tsolarized-emphasize-indicators79,2249
(defcustom solarized-high-contrast-mode-line nilsolarized-high-contrast-mode-line84,2409
(defcustom solarized-height-minus-1 0.8solarized-height-minus-189,2552
(defcustom solarized-height-plus-1 1.1solarized-height-plus-194,2648
(defcustom solarized-height-plus-2 1.15solarized-height-plus-299,2743
(defcustom solarized-height-plus-3 1.2solarized-height-plus-3104,2839
(defcustom solarized-height-plus-4 1.3solarized-height-plus-4109,2934
(defcustom solarized-scale-org-headlines tsolarized-scale-org-headlines114,3029
(defun solarized-color-blend (color1 color2 alpha)solarized-color-blend122,3220
(defmacro solarized-with-color-variables (variant &rest body)solarized-with-color-variables136,3700
(defun create-solarized-theme (variant theme-name &optional childtheme)create-solarized-theme255,8810

elpa/stickyfunc-enhance-20150429.1114/stickyfunc-enhance-autoloads.el,0

elpa/stickyfunc-enhance-20150429.1114/stickyfunc-enhance-pkg.el,247
(define-package "stickyfunc-enhance" "20150429.1114" "An enhancement to stock `semantic-stickyfunc-mode'" '((emacs "24.3")) :url "https://github.com/tuhdo/semantic-stickyfunc-enhance" :keywords '("c" "languages" "tools"))"stickyfunc-enhance"1,0

elpa/stickyfunc-enhance-20150429.1114/stickyfunc-enhance.el,625
(defun semantic-stickyfunc-fetch-stickyline ()semantic-stickyfunc-fetch-stickyline74,2730
(defun stickyfunc-enhance--function-parameter-string (tag)stickyfunc-enhance--function-parameter-string125,5378
(defun stickyfunc-enhance--function-argument-separator ()stickyfunc-enhance--function-argument-separator154,6591
(defun stickyfunc-enhance--text-to-replace (tag)stickyfunc-enhance--text-to-replace165,6889
(defun stickyfunc-enhance--parameters-regexp (tag)stickyfunc-enhance--parameters-regexp177,7270
(defun stickyfunc-enhance--tags-out-of-screen (tags parent-tag)stickyfunc-enhance--tags-out-of-screen189,7576

elpa/switch-window-20160229.334/switch-window-autoloads.el,0

elpa/switch-window-20160229.334/switch-window-pkg.el,218
(define-package "switch-window" "20160229.334" "A *visual* way to choose a window to switch to" '((cl-lib "0.5")) :url "https://github.com/dimitri/switch-window" :keywords '("window" "navigation"))"switch-window"1,0

elpa/switch-window-20160229.334/switch-window.el,2302
(defgroup switch-window nilswitch-window67,1849
(defcustom switch-window-increase 12switch-window-increase71,1939
(defcustom switch-window-timeout 5switch-window-timeout76,2087
(defcustom switch-window-threshold 2switch-window-threshold81,2222
(defcustom switch-window-relative nilswitch-window-relative86,2361
(defcustom switch-window-shortcut-style 'quailswitch-window-shortcut-style91,2520
(defcustom switch-window-qwerty-shortcutsswitch-window-qwerty-shortcuts98,2821
(defcustom switch-window-minibuffer-shortcut nilswitch-window-minibuffer-shortcut104,3034
(defcustom switch-window-configuration-change-hook-inhibit nilswitch-window-configuration-change-hook-inhibit112,3417
(defun switch-window--list-keyboard-keys ()switch-window--list-keyboard-keys117,3600
(defun switch-window--list-keys ()switch-window--list-keys124,3915
(defun switch-window--enumerate ()switch-window--enumerate136,4449
(defun switch-window--label (num)switch-window--label145,4861
(defun switch-window--list (&optional from-current-window)switch-window--list149,4996
(defun switch-window--display-number (win num)switch-window--display-number156,5282
(defun switch-window--jump-to-window (index)switch-window--jump-to-window176,6183
(defun switch-window--list-eobp ()switch-window--list-eobp183,6414
(defun switch-window--restore-eobp (eobp-window-list)switch-window--restore-eobp191,6745
(defun switch-window-then-delete ()switch-window-then-delete200,7101
(defalias 'delete-other-window 'switch-window-then-delete)delete-other-window209,7337
(defun switch-window-then-maximize ()switch-window-then-maximize214,7519
(defun switch-window ()switch-window224,7790
(defun switch-window-then-split-horizontally (arg)switch-window-then-split-horizontally233,8030
(defun switch-window-then-split-vertically (arg)switch-window-then-split-vertically242,8284
(defun switch-window-then-split-below (arg)switch-window-then-split-below251,8530
(defun switch-window-then-split-right (arg)switch-window-then-split-right260,8781
(defun switch-window-then-swap-buffer (arg)switch-window-then-swap-buffer269,9032
(defun switch-window--then (prompt function1 &optional function2switch-window--then284,9516
(defun switch-window--prompt (prompt-message)switch-window--prompt312,10691

elpa/theme-looper-20150723.1104/theme-looper-autoloads.el,0

elpa/theme-looper-20150723.1104/theme-looper-pkg.el,203
(define-package "theme-looper" "20150723.1104" "Loop thru the available color-themes" '((cl-lib "0.5")) :url "http://ismail.teamfluxion.com" :keywords '("convenience" "color-themes"))"theme-looper"1,0

elpa/theme-looper-20150723.1104/theme-looper.el,988
(defvar theme-looper--favorite-themes)theme-looper--favorite-themes69,2035
(defun theme-looper--further-customizetheme-looper--further-customize71,2075
(defun theme-looper-set-theme-set (themes)theme-looper-set-theme-set75,2139
(defun theme-looper-set-customizations (func)theme-looper-set-customizations81,2295
(defun theme-looper--get-current-theme ()theme-looper--get-current-theme86,2459
(defun theme-looper--get-current-theme-index ()theme-looper--get-current-theme-index90,2576
(defun theme-looper--get-next-theme-index ()theme-looper--get-next-theme-index95,2807
(defun theme-looper--get-next-theme ()theme-looper--get-next-theme109,3245
(defun theme-looper--disable-all-themes ()theme-looper--disable-all-themes114,3418
(defun theme-looper-enable-theme (theme)theme-looper-enable-theme120,3571
(defun theme-looper-enable-next-theme ()theme-looper-enable-next-theme130,3830
(defun theme-looper-enable-random-theme ()theme-looper-enable-random-theme137,4072

elpa/undo-tree-20140509.522/undo-tree-autoloads.el,66
(defvar global-undo-tree-mode nil "\global-undo-tree-mode29,827

elpa/undo-tree-20140509.522/undo-tree-pkg.el,203
(define-package "undo-tree" "20140509.522" "Treat undo history as a tree" 'nil :url "http://www.dr-qubit.org/emacs.php" :keywords '("convenience" "files" "undo" "redo" "history" "tree"))"undo-tree"1,0

elpa/undo-tree-20140509.522/undo-tree.el,13563
(defvar buffer-undo-tree nilbuffer-undo-tree867,34364
(defgroup undo-tree nilundo-tree873,34530
(defcustom undo-tree-mode-lighter " Undo-Tree"undo-tree-mode-lighter877,34591
(defcustom undo-tree-incompatible-major-modes '(term-mode)undo-tree-incompatible-major-modes884,34746
(defcustom undo-tree-enable-undo-in-region tundo-tree-enable-undo-in-region891,34960
(defcustom undo-tree-auto-save-history nilundo-tree-auto-save-history902,35295
(defcustom undo-tree-history-directory-alist nilundo-tree-history-directory-alist927,36275
(defcustom undo-tree-visualizer-relative-timestamps tundo-tree-visualizer-relative-timestamps953,37348
(defcustom undo-tree-visualizer-timestamps nilundo-tree-visualizer-timestamps962,37578
(defcustom undo-tree-visualizer-diff nilundo-tree-visualizer-diff973,37914
(defcustom undo-tree-visualizer-lazy-drawing 100undo-tree-visualizer-lazy-drawing983,38225
(defface undo-tree-visualizer-default-faceundo-tree-visualizer-default-face1008,39212
(defface undo-tree-visualizer-current-faceundo-tree-visualizer-current-face1013,39366
(defface undo-tree-visualizer-active-branch-faceundo-tree-visualizer-active-branch-face1018,39537
(defface undo-tree-visualizer-register-faceundo-tree-visualizer-register-face1026,39836
(defface undo-tree-visualizer-unmodified-faceundo-tree-visualizer-unmodified-face1032,40024
(defvar undo-tree-visualizer-parent-buffer nilundo-tree-visualizer-parent-buffer1039,40219
(defvar undo-tree-visualizer-parent-mtime nil)undo-tree-visualizer-parent-mtime1045,40487
(defvar undo-tree-visualizer-spacing nil)undo-tree-visualizer-spacing1050,40725
(defsubst undo-tree-visualizer-calculate-spacing ()undo-tree-visualizer-calculate-spacing1056,40965
(defvar undo-tree-visualizer-initial-node nil)undo-tree-visualizer-initial-node1062,41180
(defvar undo-tree-visualizer-selected-node nil)undo-tree-visualizer-selected-node1067,41414
(defvar undo-tree-visualizer-needs-extending-down nil)undo-tree-visualizer-needs-extending-down1072,41650
(defvar undo-tree-visualizer-needs-extending-up nil)undo-tree-visualizer-needs-extending-up1075,41845
(defvar undo-tree-inhibit-kill-visualizer nil)undo-tree-inhibit-kill-visualizer1081,42164
(defvar undo-tree-insert-face nil)undo-tree-insert-face1084,42274
(defconst undo-tree-visualizer-buffer-name " *undo-tree*")undo-tree-visualizer-buffer-name1087,42337
(defconst undo-tree-diff-buffer-name "*undo-tree Diff*")undo-tree-diff-buffer-name1088,42396
(defvar undo-tree-map nilundo-tree-map1100,42728
(defvar undo-tree-visualizer-mode-map nilundo-tree-visualizer-mode-map1125,43778
(defvar undo-tree-visualizer-selection-mode-map nilundo-tree-visualizer-selection-mode-map1180,46584
(defvar undo-tree-old-undo-menu-item nil)undo-tree-old-undo-menu-item1229,49017
(defun undo-tree-update-menu-bar ()undo-tree-update-menu-bar1231,49060
(defmacro undo-tree-node-p (n)undo-tree-node-p1310,51435
(defmacro undo-tree-region-data-p (r)undo-tree-region-data-p1331,52017
(defmacro undo-tree-node-clear-region-data (node)undo-tree-node-clear-region-data1335,52156
(defmacro undo-tree-node-undo-beginning (node)undo-tree-node-undo-beginning1343,52356
(defmacro undo-tree-node-undo-end (node)undo-tree-node-undo-end1348,52561
(defmacro undo-tree-node-redo-beginning (node)undo-tree-node-redo-beginning1353,52754
(defmacro undo-tree-node-redo-end (node)undo-tree-node-redo-end1358,52959
(defsetf undo-tree-node-undo-beginning (node) (val)undo-tree-node-undo-beginning1364,53153
(defsetf undo-tree-node-undo-end (node) (val)undo-tree-node-undo-end1372,53522
(defsetf undo-tree-node-redo-beginning (node) (val)undo-tree-node-redo-beginning1380,53879
(defsetf undo-tree-node-redo-end (node) (val)undo-tree-node-redo-end1388,54248
(defmacro undo-tree-visualizer-data-p (v)undo-tree-visualizer-data-p1408,54856
(defun undo-tree-node-clear-visualizer-data (node)undo-tree-node-clear-visualizer-data1412,55003
(defmacro undo-tree-node-lwidth (node)undo-tree-node-lwidth1420,55338
(defmacro undo-tree-node-cwidth (node)undo-tree-node-cwidth1425,55539
(defmacro undo-tree-node-rwidth (node)undo-tree-node-rwidth1430,55740
(defmacro undo-tree-node-marker (node)undo-tree-node-marker1435,55941
(defsetf undo-tree-node-lwidth (node) (val)undo-tree-node-lwidth1441,56143
(defsetf undo-tree-node-cwidth (node) (val)undo-tree-node-cwidth1449,56516
(defsetf undo-tree-node-rwidth (node) (val)undo-tree-node-rwidth1457,56889
(defsetf undo-tree-node-marker (node) (val)undo-tree-node-marker1465,57262
(defun undo-tree-register-data-p (data)undo-tree-register-data-p1482,57793
(defun undo-tree-register-data-print-func (data)undo-tree-register-data-print-func1487,57947
(defmacro undo-tree-node-register (node)undo-tree-node-register1491,58093
(defsetf undo-tree-node-register (node) (val)undo-tree-node-register1494,58194
(defun undo-tree-grow (undo)undo-tree-grow1504,58484
(defun undo-tree-grow-backwards (node undo &optional redo)undo-tree-grow-backwards1512,58783
(defun undo-tree-splice-node (node splice)undo-tree-splice-node1522,59183
(defun undo-tree-snip-node (node)undo-tree-snip-node1536,59780
(defun undo-tree-mapc (--undo-tree-mapc-function-- node)undo-tree-mapc1569,61252
(defmacro undo-tree-num-branches ()undo-tree-num-branches1579,61549
(defun undo-tree-position (node list)undo-tree-position1584,61716
(defvar *undo-tree-id-counter* 0)*undo-tree-id-counter*1597,62083
(defmacro undo-tree-generate-id ()undo-tree-generate-id1600,62171
(defun undo-tree-decircle (undo-tree)undo-tree-decircle1608,62491
(defun undo-tree-recircle (undo-tree)undo-tree-recircle1618,62791
(defmacro undo-list-marker-elt-p (elt)undo-list-marker-elt-p1633,63233
(defmacro undo-list-GCd-marker-elt-p (elt)undo-list-GCd-marker-elt-p1636,63303
(defun undo-tree-move-GC-elts-to-pool (elt)undo-tree-move-GC-elts-to-pool1651,63986
(defun undo-tree-restore-GC-elts-from-pool (elt)undo-tree-restore-GC-elts-from-pool1661,64415
(defun undo-list-clean-GCd-elts (undo-list)undo-list-clean-GCd-elts1672,64805
(defun undo-list-pop-changeset (&optional discard-pos)undo-list-pop-changeset1689,65410
(defun undo-tree-copy-list (undo-list)undo-tree-copy-list1715,66485
(defun undo-list-transfer-to-tree ()undo-list-transfer-to-tree1738,67326
(defun undo-list-byte-size (undo-list)undo-list-byte-size1790,69745
(defun undo-list-rebuild-from-tree ()undo-list-rebuild-from-tree1802,70055
(defun undo-tree-oldest-leaf (node)undo-tree-oldest-leaf1844,71440
(defun undo-tree-discard-node (node)undo-tree-discard-node1855,71816
(defun undo-tree-discard-history ()undo-tree-discard-history1928,74937
(defun undo-tree-compute-widths (node)undo-tree-compute-widths2014,78631
(defun undo-tree-node-compute-widths (node)undo-tree-node-compute-widths2032,79365
(defun undo-tree-clear-visualizer-data (tree)undo-tree-clear-visualizer-data2101,82256
(defun undo-tree-node-unmodified-p (node &optional mtime)undo-tree-node-unmodified-p2108,82445
(defvar undo-adjusted-markers nil)undo-adjusted-markers2138,83499
(defun undo-tree-pull-undo-in-region-branch (start end)undo-tree-pull-undo-in-region-branch2141,83536
(defun undo-tree-pull-redo-in-region-branch (start end)undo-tree-pull-redo-in-region-branch2375,93457
(defun undo-tree-adjust-elements-to-elt (node undo-elt &optional below)undo-tree-adjust-elements-to-elt2537,100209
(defun undo-tree-apply-deltas (undo-elt deltas &optional sgn)undo-tree-apply-deltas2561,101222
(defun undo-tree-repeated-undo-in-region-p (start end)undo-tree-repeated-undo-in-region-p2598,102402
(defun undo-tree-repeated-redo-in-region-p (start end)undo-tree-repeated-redo-in-region-p2608,102792
(defalias 'undo-tree-reverting-undo-in-region-pundo-tree-reverting-undo-in-region-p2618,103203
(defalias 'undo-tree-reverting-redo-in-region-pundo-tree-reverting-redo-in-region-p2624,103398
(define-minor-mode undo-tree-modeundo-tree-mode2634,103627
(defun turn-on-undo-tree-mode (&optional print-message)turn-on-undo-tree-mode2663,104477
(defun undo-tree-overridden-undo-bindings-p ()undo-tree-overridden-undo-bindings-p2688,105551
(define-globalized-minor-mode global-undo-tree-modeglobal-undo-tree-mode2708,106347
(defun undo-tree-undo (&optional arg)undo-tree-undo2713,106443
(defun undo-tree-undo-1 (&optional arg preserve-redo preserve-timestamps)undo-tree-undo-12731,107102
(defun undo-tree-redo (&optional arg)undo-tree-redo2822,111265
(defun undo-tree-redo-1 (&optional arg preserve-undo preserve-timestamps)undo-tree-redo-12838,111882
(defun undo-tree-switch-branch (branch)undo-tree-switch-branch2930,116016
(defun undo-tree-set (node &optional preserve-timestamps)undo-tree-set2965,117358
(defun undo-tree-save-state-to-register (register)undo-tree-save-state-to-register2999,119030
(defun undo-tree-restore-state-from-register (register)undo-tree-restore-state-from-register3022,119917
(defun undo-tree-make-history-save-file-name (file)undo-tree-make-history-save-file-name3048,121062
(defun undo-tree-save-history (&optional filename overwrite)undo-tree-save-history3062,121639
(defun undo-tree-load-history (&optional filename noerror)undo-tree-load-history3116,123665
(defun undo-tree-save-history-hook ()undo-tree-save-history-hook3176,125702
(defun undo-tree-load-history-hook ()undo-tree-load-history-hook3181,125875
(defun undo-tree-visualize ()undo-tree-visualize3193,126215
(defun undo-tree-kill-visualizer (&rest _dummy)undo-tree-kill-visualizer3232,127997
(defun undo-tree-draw-tree (undo-tree)undo-tree-draw-tree3242,128366
(defun undo-tree-extend-down (node &optional bottom)undo-tree-extend-down3291,130504
(defun undo-tree-extend-up (node &optional top)undo-tree-extend-up3334,132208
(defun undo-tree-expand-down (from &optional to)undo-tree-expand-down3387,134438
(defun undo-tree-expand-up (from &optional to)undo-tree-expand-up3412,135482
(defun undo-tree-highlight-active-branch (node &optional end)undo-tree-highlight-active-branch3449,137076
(defun undo-tree-draw-node (node &optional current)undo-tree-draw-node3463,137577
(defun undo-tree-draw-subtree (node &optional active-branch)undo-tree-draw-subtree3517,139682
(defun undo-tree-node-char-lwidth (node)undo-tree-node-char-lwidth3648,145147
(defun undo-tree-node-char-rwidth (node)undo-tree-node-char-rwidth3656,145473
(defun undo-tree-insert (str &optional arg)undo-tree-insert3664,145800
(defun undo-tree-move-down (&optional arg)undo-tree-move-down3682,146463
(defun undo-tree-move-up (&optional arg)undo-tree-move-up3700,147019
(defun undo-tree-move-forward (&optional arg)undo-tree-move-forward3706,147168
(defun undo-tree-move-backward (&optional arg)undo-tree-move-backward3732,147951
(defun undo-tree-move-to-parent (node)undo-tree-move-to-parent3738,148115
(defun undo-tree-timestamp-to-stringundo-tree-timestamp-to-string3787,149766
(defun undo-tree-visualize-undo (&optional arg)undo-tree-visualize-undo3857,151808
(defun undo-tree-visualize-redo (&optional arg)undo-tree-visualize-redo3882,152881
(defun undo-tree-visualize-switch-branch-right (arg)undo-tree-visualize-switch-branch-right3907,153991
(defun undo-tree-visualize-switch-branch-left (arg)undo-tree-visualize-switch-branch-left3934,155299
(defun undo-tree-visualizer-quit ()undo-tree-visualizer-quit3942,155593
(defun undo-tree-visualizer-abort ()undo-tree-visualizer-abort3963,156334
(defun undo-tree-visualizer-set (&optional pos)undo-tree-visualizer-set3971,156569
(defun undo-tree-visualizer-mouse-set (pos)undo-tree-visualizer-mouse-set3987,157289
(defun undo-tree-visualize-undo-to-x (&optional x)undo-tree-visualize-undo-to-x3994,157488
(defun undo-tree-visualize-redo-to-x (&optional x)undo-tree-visualize-redo-to-x4046,159395
(defun undo-tree-visualizer-toggle-timestamps ()undo-tree-visualizer-toggle-timestamps4098,161294
(defun undo-tree-visualizer-scroll-left (&optional arg)undo-tree-visualizer-scroll-left4107,161643
(defun undo-tree-visualizer-scroll-right (&optional arg)undo-tree-visualizer-scroll-right4112,161751
(defun undo-tree-visualizer-scroll-up (&optional arg)undo-tree-visualizer-scroll-up4117,161861
(defun undo-tree-visualizer-scroll-down (&optional arg)undo-tree-visualizer-scroll-down4132,162429
(define-minor-mode undo-tree-visualizer-selection-modeundo-tree-visualizer-selection-mode4160,163466
(defun undo-tree-visualizer-select-previous (&optional arg)undo-tree-visualizer-select-previous4184,164384
(defun undo-tree-visualizer-select-next (&optional arg)undo-tree-visualizer-select-next4204,165179
(defun undo-tree-visualizer-select-right (&optional arg)undo-tree-visualizer-select-right4226,166048
(defun undo-tree-visualizer-select-left (&optional arg)undo-tree-visualizer-select-left4247,166862
(defun undo-tree-visualizer-select (pos)undo-tree-visualizer-select4268,167690
(defun undo-tree-visualizer-mouse-select (pos)undo-tree-visualizer-mouse-select4286,168394
(defun undo-tree-visualizer-toggle-diff ()undo-tree-visualizer-toggle-diff4297,168696
(defun undo-tree-visualizer-selection-toggle-diff ()undo-tree-visualizer-selection-toggle-diff4305,168916
(defun undo-tree-visualizer-show-diff (&optional node)undo-tree-visualizer-show-diff4314,169243
(defun undo-tree-visualizer-hide-diff ()undo-tree-visualizer-hide-diff4326,169623
(defun undo-tree-diff (&optional node)undo-tree-diff4333,169870
(defun undo-tree-visualizer-update-diff (&optional node)undo-tree-visualizer-update-diff4360,170886

elpa/use-package-20160614.803/use-package-autoloads.el,0

elpa/use-package-20160614.803/use-package-pkg.el,266
(define-package "use-package" "20160614.803" "A use-package declaration for simplifying your .emacs" '((bind-key "1.0") (diminish "0.44")) :url "https://github.com/jwiegley/use-package" :keywords '("dotemacs" "startup" "speed" "config" "package"))"use-package"1,0

elpa/use-package-20160614.803/use-package.el,9755
(defgroup use-package niluse-package52,1879
(defcustom use-package-verbose niluse-package-verbose56,1986
(defcustom use-package-debug niluse-package-debug67,2464
(defcustom use-package-check-before-init niluse-package-check-before-init72,2611
(defcustom use-package-always-defer niluse-package-always-defer78,2848
(defcustom use-package-always-ensure niluse-package-always-ensure83,2992
(defcustom use-package-always-pin niluse-package-always-pin88,3138
(defcustom use-package-minimum-reported-time 0.1use-package-minimum-reported-time93,3278
(defcustom use-package-inject-hooks niluse-package-inject-hooks106,3745
(defcustom use-package-keywordsuse-package-keywords127,4462
(defcustom use-package-expand-minimally niluse-package-expand-minimally161,5093
(defcustom use-package-enable-imenu-support niluse-package-enable-imenu-support172,5576
(defun use-package-as-symbol (string-or-symbol)use-package-as-symbol200,6440
(defun use-package-as-string (string-or-symbol)use-package-as-string206,6678
(defun use-package-load-name (name &optional noerror)use-package-load-name212,6921
(defun use-package-expand (name label form)use-package-expand219,7159
(defun use-package-hook-injector (name-string keyword body)use-package-hook-injector238,7816
(defun use-package--with-elapsed-timer (text body)use-package--with-elapsed-timer258,8892
(defsubst use-package-error (msg)use-package-error278,9696
(defsubst use-package-plist-maybe-put (plist property value)use-package-plist-maybe-put282,9837
(defsubst use-package-plist-cons (plist property value)use-package-plist-cons288,10055
(defsubst use-package-plist-append (plist property value)use-package-plist-append292,10245
(defun use-package-plist-delete (plist property)use-package-plist-delete296,10442
(defun use-package-split-list (pred xs)use-package-split-list306,10735
(defun use-package-keyword-index (keyword)use-package-keyword-index318,11061
(defun use-package-sort-keywords (plist)use-package-sort-keywords326,11278
(defsubst use-package-concat (&rest elems)use-package-concat341,11790
(defconst use-package-font-lock-keywordsuse-package-font-lock-keywords345,11968
(defun use-package-normalize-plist (name input)use-package-normalize-plist362,12443
(defun use-package-process-keywords (name plist &optional state)use-package-process-keywords386,13383
(defun use-package-only-one (label args f)use-package-only-one420,14752
(defun use-package-normalize/:pin (name keyword args)use-package-normalize/:pin433,15143
(defun use-package--archive-exists-p (archive)use-package--archive-exists-p447,15529
(defun use-package-pin-package (package archive)use-package-pin-package460,15924
(defun use-package-handler/:pin (name keyword archive-name rest state)use-package-handler/:pin473,16560
(defvar package-archive-contents)package-archive-contents489,17257
(defun use-package-normalize/:ensure (name keyword args)use-package-normalize/:ensure490,17291
(defun use-package-ensure-elpa (package &optional no-refresh)use-package-ensure-elpa501,17640
(defun use-package-handler/:ensure (name keyword ensure rest state)use-package-handler/:ensure510,17942
(defsubst use-package-normalize-value (label arg)use-package-normalize-value530,18904
(defun use-package-normalize-test (name keyword args)use-package-normalize-test538,19104
(defalias 'use-package-normalize/:if 'use-package-normalize-test)use-package-normalize/:if542,19246
(defalias 'use-package-normalize/:when 'use-package-normalize-test)use-package-normalize/:when543,19312
(defalias 'use-package-normalize/:unless 'use-package-normalize-test)use-package-normalize/:unless544,19380
(defun use-package-handler/:if (name keyword pred rest state)use-package-handler/:if546,19451
(defalias 'use-package-handler/:when 'use-package-handler/:if)use-package-handler/:when550,19606
(defun use-package-handler/:unless (name keyword pred rest state)use-package-handler/:unless552,19670
(defun use-package-as-one (label args f)use-package-as-one561,19930
(defun use-package-normalize-symbols (label arg &optional recursed)use-package-normalize-symbols573,20337
(defun use-package-normalize-symlist (name keyword args)use-package-normalize-symlist584,20708
(defalias 'use-package-normalize/:requires 'use-package-normalize-symlist)use-package-normalize/:requires588,20853
(defun use-package-handler/:requires (name keyword requires rest state)use-package-handler/:requires590,20929
(defun use-package-normalize-paths (label arg &optional recursed)use-package-normalize-paths604,21371
(defun use-package-normalize/:load-path (name keyword args)use-package-normalize/:load-path622,22074
(defun use-package-handler/:load-path (name keyword arg rest state)use-package-handler/:load-path626,22220
(defun use-package-normalize-predicate (name keyword args)use-package-normalize-predicate638,22594
(defalias 'use-package-normalize/:no-require 'use-package-normalize-predicate)use-package-normalize/:no-require644,22772
(defun use-package-handler/:no-require (name keyword arg rest state)use-package-handler/:no-require646,22852
(defun use-package-normalize-form (label args)use-package-normalize-form655,23115
(defun use-package-normalize-forms (name keyword args)use-package-normalize-forms665,23505
(defalias 'use-package-normalize/:preface 'use-package-normalize-forms)use-package-normalize/:preface668,23620
(defun use-package-handler/:preface (name keyword arg rest state)use-package-handler/:preface670,23693
(defsubst use-package-is-sympair (x &optional allow-vector)use-package-is-sympair682,24023
(defsubst use-package-is-string-pair (x)use-package-is-string-pair689,24256
(defun use-package-normalize-pairsuse-package-normalize-pairs695,24417
(defun use-package-normalize-binder (name keyword args)use-package-normalize-binder719,25422
(defalias 'use-package-normalize/:bind 'use-package-normalize-binder)use-package-normalize/:bind724,25614
(defalias 'use-package-normalize/:bind* 'use-package-normalize-binder)use-package-normalize/:bind*725,25684
(defun use-package-handler/:binduse-package-handler/:bind727,25756
(defun use-package-handler/:bind* (name keyword arg rest state)use-package-handler/:bind*743,26402
(defalias 'use-package-normalize/:bind-keymap 'use-package-normalize-binder)use-package-normalize/:bind-keymap751,26655
(defalias 'use-package-normalize/:bind-keymap* 'use-package-normalize-binder)use-package-normalize/:bind-keymap*752,26732
(defun use-package-autoload-keymap (keymap-symbol package override)use-package-autoload-keymap754,26811
(defun use-package-handler/:bind-keymapuse-package-handler/:bind-keymap781,28063
(defun use-package-handler/:bind-keymap* (name keyword arg rest state)use-package-handler/:bind-keymap*800,28770
(defun use-package-normalize-mode (name keyword args)use-package-normalize-mode808,29012
(defalias 'use-package-normalize/:interpreter 'use-package-normalize-mode)use-package-normalize/:interpreter812,29175
(defun use-package-handler/:interpreter (name keyword arg rest state)use-package-handler/:interpreter814,29251
(defalias 'use-package-normalize/:mode 'use-package-normalize-mode)use-package-normalize/:mode831,29869
(defun use-package-handler/:mode (name keyword arg rest state)use-package-handler/:mode833,29938
(defalias 'use-package-normalize/:commands 'use-package-normalize-symlist)use-package-normalize/:commands850,30525
(defun use-package-handler/:commands (name keyword arg rest state)use-package-handler/:commands852,30601
(defalias 'use-package-normalize/:defines 'use-package-normalize-symlist)use-package-normalize/:defines864,30996
(defun use-package-handler/:defines (name keyword arg rest state)use-package-handler/:defines866,31071
(defalias 'use-package-normalize/:functions 'use-package-normalize-symlist)use-package-normalize/:functions875,31312
(defun use-package-handler/:functions (name keyword arg rest state)use-package-handler/:functions877,31389
(defalias 'use-package-normalize/:defer 'use-package-normalize-predicate)use-package-normalize/:defer894,31924
(defun use-package-handler/:defer (name keyword arg rest state)use-package-handler/:defer896,31999
(defalias 'use-package-normalize/:after 'use-package-normalize-symlist)use-package-normalize/:after928,33194
(defun use-package-require-after-load (features name)use-package-require-after-load930,33267
(defun use-package-handler/:after (name keyword arg rest state)use-package-handler/:after940,33556
(defalias 'use-package-normalize/:demand 'use-package-normalize-predicate)use-package-normalize/:demand954,33981
(defun use-package-handler/:demand (name keyword arg rest state)use-package-handler/:demand956,34057
(defalias 'use-package-normalize/:init 'use-package-normalize-forms)use-package-normalize/:init965,34309
(defun use-package-handler/:init (name keyword arg rest state)use-package-handler/:init967,34379
(defalias 'use-package-normalize/:config 'use-package-normalize-forms)use-package-normalize/:config985,34990
(defun use-package-handler/:config (name keyword arg rest state)use-package-handler/:config987,35062
(defun use-package-normalize-diminish (name label arg &optional recursed)use-package-normalize-diminish1019,36342
(defun use-package-normalize/:diminish (name keyword args)use-package-normalize/:diminish1038,37029
(defun use-package-handler/:diminish (name keyword arg rest state)use-package-handler/:diminish1042,37200
(defun use-package-normalize/:delight (name keyword args)use-package-normalize/:delight1058,37702
(defun use-package-handler/:delight (name keyword args rest state)use-package-handler/:delight1073,38173
(defmacro use-package (name &rest args)use-package1085,38538

elpa/websocket-20160510.2001/websocket-autoloads.el,0

elpa/websocket-20160510.2001/websocket-pkg.el,152
(define-package "websocket" "20160510.2001" "Emacs WebSocket client and server" 'nil :keywords '("communication" "websocket" "server"))"websocket"1,0

elpa/websocket-20160510.2001/websocket.el,3537
(defvar websocket-version "1.5"websocket-version103,3765
(defvar websocket-debug nilwebsocket-debug106,3852
(defconst websocket-guid "258EAFA5-E914-47DA-95CA-C5AB0DC85B11"websocket-guid111,4029
(defvar websocket-callback-debug-on-error nilwebsocket-callback-debug-on-error115,4180
(defmacro websocket-document-function (function docstring)websocket-document-function121,4488
(defun websocket-genbytes (nbytes)websocket-genbytes151,5323
(defun websocket-try-callback (websocket-callback callback-type websocketwebsocket-try-callback158,5494
(defun websocket-genkey ()websocket-genkey180,6577
(defun websocket-calculate-accept (key)websocket-calculate-accept184,6712
(defun websocket-get-bytes (s n)websocket-get-bytes190,6940
(defun websocket-to-bytes (val nbytes)websocket-to-bytes224,8213
(defun websocket-get-opcode (s)websocket-get-opcode256,9541
(defun websocket-get-payload-len (s)websocket-get-payload-len267,9917
(defstruct websocket-frame opcode payload length completep)websocket-frame281,10520
(defun websocket-mask (key data)websocket-mask283,10581
(defun websocket-ensure-length (s n)websocket-ensure-length292,10886
(defun websocket-encode-frame (frame should-mask)websocket-encode-frame298,11099
(defun websocket-read-frame (s)websocket-read-frame339,13352
(defun websocket-format-error (err)websocket-format-error369,14801
(defun websocket-default-error-handler (_websocket type err)websocket-default-error-handler381,15255
(defun websocket-intersect (a b)websocket-intersect423,17319
(defun websocket-get-debug-buffer-create (websocket)websocket-get-debug-buffer-create430,17550
(defun websocket-debug (websocket msg &rest args)websocket-debug438,17867
(defun websocket-verify-response-code (output)websocket-verify-response-code449,18275
(defun websocket-parse-repeated-field (output field)websocket-parse-repeated-field461,18794
(defun websocket-process-frame (websocket frame)websocket-process-frame474,19295
(defun websocket-process-input-on-open-ws (websocket text)websocket-process-input-on-open-ws497,20509
(defun websocket-send-text (websocket text)websocket-send-text512,21195
(defun websocket-check (frame)websocket-check521,21511
(defun websocket-send (websocket frame)websocket-send534,22100
(defun websocket-openp (websocket)websocket-openp563,23414
(defun websocket-close (websocket)websocket-close570,23685
(defun websocket-ensure-connected (websocket)websocket-ensure-connected581,24177
(defun* websocket-open (url &key protocols extensions (on-open 'identity)websocket-open600,25018
(defun websocket-process-headers (url headers)websocket-process-headers731,31297
(defun websocket-outer-filter (websocket output)websocket-outer-filter739,31679
(defun websocket-verify-headers (websocket output)websocket-verify-headers770,33195
(defvar websocket-server-websockets nilwebsocket-server-websockets822,35745
(defun* websocket-server (port &rest plist)websocket-server825,35840
(defun websocket-server-close (conn)websocket-server-close849,36833
(defun websocket-server-accept (server client _message)websocket-server-accept862,37358
(defun websocket-create-headers (url key protocol extensions)websocket-create-headers894,39006
(defun websocket-get-server-response (websocket client-protocols client-extensions)websocket-get-server-response932,40793
(defun websocket-server-filter (process output)websocket-server-filter960,42171
(defun websocket-verify-client-headers (output)websocket-verify-client-headers998,44414

elpa/with-editor-20160408.201/with-editor-autoloads.el,0

elpa/with-editor-20160408.201/with-editor-pkg.el,96
(define-package "with-editor" "20160408.201" "Use the Emacsclient as $EDITOR""with-editor"1,0

elpa/with-editor-20160408.201/with-editor.el,4075
(defvar eshell-preoutput-filter-functions)eshell-preoutput-filter-functions100,4045
(defgroup with-editor nilwith-editor104,4102
(defun with-editor-locate-emacsclient ()with-editor-locate-emacsclient109,4202
(defun with-editor-locate-emacsclient-1 (path depth)with-editor-locate-emacsclient-1121,4650
(defun with-editor-emacsclient-version (exec)with-editor-emacsclient-version140,5548
(defun with-editor-emacsclient-path ()with-editor-emacsclient-path144,5695
(defcustom with-editor-emacsclient-executable (with-editor-locate-emacsclient)with-editor-emacsclient-executable162,6540
(defcustom with-editor-sleeping-editor "\with-editor-sleeping-editor168,6811
(defcustom with-editor-finish-query-functions nilwith-editor-finish-query-functions191,7730
(defcustom with-editor-cancel-query-functions nilwith-editor-cancel-query-functions205,8376
(defcustom with-editor-mode-lighter " WE"with-editor-mode-lighter219,9022
(defvar with-editor-server-window-alist nilwith-editor-server-window-alist224,9193
(defvar with-editor-pre-finish-hook nil)with-editor-pre-finish-hook237,9625
(defvar with-editor-pre-cancel-hook nil)with-editor-pre-cancel-hook238,9666
(defvar with-editor-post-finish-hook nil)with-editor-post-finish-hook239,9707
(defvar with-editor-post-finish-hook-1 nil)with-editor-post-finish-hook-1240,9749
(defvar with-editor-post-cancel-hook nil)with-editor-post-cancel-hook241,9793
(defvar with-editor-post-cancel-hook-1 nil)with-editor-post-cancel-hook-1242,9835
(defvar with-editor-cancel-alist nil)with-editor-cancel-alist243,9879
(defvar with-editor-show-usage t)with-editor-show-usage249,10136
(defvar with-editor-cancel-message nil)with-editor-cancel-message250,10170
(defvar with-editor-previous-winconf nil)with-editor-previous-winconf251,10210
(defvar-local with-editor--pid nil "For internal use.")with-editor--pid258,10530
(defun with-editor-finish (force)with-editor-finish261,10630
(defun with-editor-cancel (force)with-editor-cancel273,11094
(defun with-editor-return (cancel)with-editor-return290,11782
(defvar with-editor-mode-mapwith-editor-mode-map325,13126
(define-minor-mode with-editor-modewith-editor-mode338,13904
(defun with-editor-kill-buffer-noop ()with-editor-kill-buffer-noop355,14578
(defun with-editor-usage-message ()with-editor-usage-message359,14730
(defvar with-editor--envvar nil "For internal use.")with-editor--envvar371,15106
(defmacro with-editor (&rest body)with-editor373,15160
(defun with-editor-server-window ()with-editor-server-window417,17317
(defun server-switch-buffer--with-editor-server-window-alistserver-switch-buffer--with-editor-server-window-alist423,17532
(defun start-file-process--with-editor-process-filterstart-file-process--with-editor-process-filter437,18199
(defun with-editor-set-process-filter (process filter)with-editor-set-process-filter464,19414
(defvar with-editor-filter-visit-hook nil)with-editor-filter-visit-hook481,20146
(defun with-editor-output-filter (string)with-editor-output-filter483,20190
(defun with-editor-process-filterwith-editor-process-filter505,21140
(defun with-editor-export-git-editor ()with-editor-export-git-editor547,22913
(defun with-editor-export-hg-editor ()with-editor-export-hg-editor552,23081
(defun with-editor-emulate-terminal (process string)with-editor-emulate-terminal557,23246
(defvar with-editor-envvars '("EDITOR" "GIT_EDITOR" "HG_EDITOR"))with-editor-envvars562,23452
(define-minor-mode shell-command-with-editor-modeshell-command-with-editor-mode573,23960
(defun with-editor-async-shell-commandwith-editor-async-shell-command591,24725
(defun with-editor-shell-commandwith-editor-shell-command613,25719
(defun with-editor-shell-command-read-args (prompt &optional async)with-editor-shell-command-read-args624,26207
(defun shell-command--shell-command-with-editor-modeshell-command--shell-command-with-editor-mode638,26883
(defun with-editor-debug ()with-editor-debug667,28155
(defconst with-editor-font-lock-keywordswith-editor-font-lock-keywords724,31005

elpa/ws-butler-20150126.759/ws-butler-autoloads.el,66
(defvar ws-butler-global-mode nil "\ws-butler-global-mode17,485

elpa/ws-butler-20150126.759/ws-butler-pkg.el,152
(define-package "ws-butler" "20150126.759" "Unobtrusively remove trailing whitespace." 'nil :url "https://github.com/lewang/ws-butler")"ws-butler"1,0

elpa/ws-butler-20150126.759/ws-butler.el,1194
(defgroup ws-butler nilws-butler60,1604
(defcustom ws-butler-keep-whitespace-before-pointws-butler-keep-whitespace-before-point64,1705
(defvar ws-butler-saved)ws-butler-saved76,2029
(defmacro ws-butler-with-save (&rest forms)ws-butler-with-save78,2055
(defun ws-butler-trim-eob-lines ()ws-butler-trim-eob-lines90,2389
(defun ws-butler-maybe-trim-eob-lines (last-modified-pos)ws-butler-maybe-trim-eob-lines114,3218
(defun ws-butler-clean-region (beg end)ws-butler-clean-region134,3924
(defvar ws-butler-presave-coord nilws-butler-presave-coord159,4713
(defun ws-butler-map-changes (func &optional start-position end-position)ws-butler-map-changes165,4946
(defun ws-butler-before-save ()ws-butler-before-save182,5618
(defun ws-butler-clear-properties ()ws-butler-clear-properties208,6622
(defun ws-butler-after-change (beg end length-before)ws-butler-after-change214,6886
(defun ws-butler-after-save ()ws-butler-after-save229,7502
(defun ws-butler-before-revert ()ws-butler-before-revert245,8028
(define-minor-mode ws-butler-modews-butler-mode250,8153
(define-globalized-minor-mode ws-butler-global-mode ws-butler-mode ws-butler-mode)ws-butler-global-mode273,9211

elpa/yasnippet-20160624.1326/snippets/c++-mode/.yas-setup.el,143
(defun yas-c++-class-name (str)yas-c++-class-name1,0
(defun yas-c++-class-method-declare-choice ()yas-c++-class-method-declare-choice8,253

elpa/yasnippet-20160624.1326/snippets/fundamental-mode/.yas-setup.el,53
(defun ca-all-asscs (asslist query)ca-all-asscs1,0

elpa/yasnippet-20160624.1326/snippets/js-mode/req.html,0

elpa/yasnippet-20160624.1326/snippets/prog-mode/.yas-setup.el,51
(defun yas-with-comment (str)yas-with-comment1,0

elpa/yasnippet-20160624.1326/snippets/python-mode/.yas-setup.el,158
(defvar yas-text)yas-text1,0
(defun python-split-args (arg-string)python-split-args3,19
(defun python-args-to-docstring ()python-args-to-docstring9,276

elpa/yasnippet-20160624.1326/snippets/rename_add_contr.py,322
import osos2,22
import rere3,32
from os.path import joinjoin4,42
from shutil import movemove5,67
def rename(root, f):rename8,93
CONT = "# contributor: Andrea crotti\n# --"CONT15,293
END = "# --\n\n"END16,337
orig = "# --\n\n"orig18,355
to  = "# --\n"to19,373
def insert(root, f, orig, to):insert21,389

elpa/yasnippet-20160624.1326/yasnippet-autoloads.el,54
(defvar yas-global-mode nil "\yas-global-mode25,665

elpa/yasnippet-20160624.1326/yasnippet-pkg.el,103
(define-package "yasnippet" "20160624.1326" "Yet another snippet extension for Emacs.""yasnippet"1,0

elpa/yasnippet-20160624.1326/yasnippet.el,21309
(defvar yas--editing-template)yas--editing-template139,4891
(defvar yas--guessed-modes)yas--guessed-modes140,4922
(defvar yas--indent-original-column)yas--indent-original-column141,4950
(defvar yas--scheduled-jit-loads)yas--scheduled-jit-loads142,4987
(defvar yas-keymap)yas-keymap143,5021
(defvar yas-selected-text)yas-selected-text144,5041
(defvar yas-verbosity)yas-verbosity145,5068
(defvar yas--current-template)yas--current-template146,5091
(defgroup yasnippet nilyasnippet151,5158
(defvar yas-installed-snippets-dir nil)yas-installed-snippets-dir156,5253
(defconst yas--default-user-snippets-diryas--default-user-snippets-dir161,5431
(defcustom yas-snippet-dirs (remove nilyas-snippet-dirs164,5527
(defun yas-snippet-dirs ()yas-snippet-dirs191,6578
(defcustom yas-new-snippet-default "\yas-new-snippet-default205,7111
(defcustom yas-prompt-functions '(yas-dropdown-promptyas-prompt-functions216,7385
(defcustom yas-indent-line 'autoyas-indent-line246,8348
(defcustom yas-also-auto-indent-first-line nilyas-also-auto-indent-first-line263,8909
(defcustom yas-snippet-revival tyas-snippet-revival270,9123
(defcustom yas-triggers-in-field nilyas-triggers-in-field275,9257
(defcustom yas-fallback-behavior 'call-other-commandyas-fallback-behavior283,9478
(defcustom yas-choose-keys-first nilyas-choose-keys-first300,10147
(defcustom yas-choose-tables-first nilyas-choose-tables-first309,10404
(defcustom yas-use-menu 'abbreviateyas-use-menu319,10706
(defcustom yas-trigger-symbol (or (and (eq window-system 'mac)yas-trigger-symbol338,11287
(defcustom yas-wrap-around-region nilyas-wrap-around-region346,11635
(defcustom yas-good-grace tyas-good-grace359,12189
(defcustom yas-visit-from-menu nilyas-visit-from-menu366,12373
(defcustom yas-expand-only-for-last-commands nilyas-expand-only-for-last-commands373,12580
(defcustom yas-alias-to-yas/prefix-p tyas-alias-to-yas/prefix-p387,13118
(defface yas-field-highlight-faceyas-field-highlight-face395,13392
(defface yas--field-debug-faceyas--field-debug-face400,13547
(defvar yas-keymap  (let ((map (make-sparse-keymap)))yas-keymap408,13698
(defvar yas-key-syntaxes (list "w" "w_" "w_." "w_.()"yas-key-syntaxes418,14313
(defvar yas-after-exit-snippet-hookyas-after-exit-snippet-hook457,15924
(defvar yas-before-expand-snippet-hookyas-before-expand-snippet-hook470,16280
(defvar yas-buffer-local-conditionyas-buffer-local-condition474,16377
(defconst yas--version "0.10.0")yas--version537,18484
(defvar yas--menu-table (make-hash-table)yas--menu-table539,18518
(defvar yas--escaped-charactersyas--escaped-characters542,18618
(defconst yas--field-regexpyas--field-regexp546,18745
(defconst yas--multi-dollar-lisp-expression-regexpyas--multi-dollar-lisp-expression-regexp550,18852
(defconst yas--backquote-lisp-expression-regexpyas--backquote-lisp-expression-regexp554,18993
(defconst yas--transform-mirror-regexpyas--transform-mirror-regexp558,19124
(defconst yas--simple-mirror-regexpyas--simple-mirror-regexp562,19277
(defvar yas--snippet-id-seed 0yas--snippet-id-seed566,19376
(defun yas--snippet-next-id ()yas--snippet-next-id569,19449
(defvar last-buffer-undo-list nil)last-buffer-undo-list578,19661
(defvar yas--minor-mode-menu nilyas--minor-mode-menu580,19697
(defvar yas-minor-mode-mapyas-minor-mode-map583,19762
(defvar yas--extra-modes nilyas--extra-modes698,25371
(define-obsolete-variable-alias 'yas-extra-modes 'yas--extra-modes "0.9.1")yas-extra-modes703,25582
(defvar yas--tables (make-hash-table)yas--tables705,25659
(defvar yas--parents (make-hash-table)yas--parents708,25757
(defvar yas--direct-keymaps (list)yas--direct-keymaps719,26151
(defun yas-direct-keymaps-reload ()yas-direct-keymaps-reload731,26659
(defun yas--modes-to-activate (&optional mode)yas--modes-to-activate741,27041
(defvar yas-minor-mode-hook nilyas-minor-mode-hook762,28115
(define-minor-mode yas-minor-modeyas-minor-mode766,28213
(defun yas-activate-extra-mode (mode)yas-activate-extra-mode809,29813
(defun yas-deactivate-extra-mode (mode)yas-deactivate-extra-mode829,30444
(define-obsolete-variable-alias 'yas-dont-activateyas-dont-activate839,30785
(defvar yas-dont-activate-functions (list #'minibufferp)yas-dont-activate-functions841,30876
(defun yas-minor-mode-on ()yas-minor-mode-on861,31716
(define-globalized-minor-mode yas-global-mode yas-minor-mode yas-minor-mode-onyas-global-mode875,32218
(defun yas--global-mode-reload-with-jit-maybe ()yas--global-mode-reload-with-jit-maybe879,32341
(defvar yas--font-lock-keywordsyas--font-lock-keywords888,32588
(defvar snippet-mode-mapsnippet-mode-map909,33408
(define-derived-mode snippet-mode text-mode "Snippet"snippet-mode927,34112
(defun yas--get-template-by-uuid (mode uuid)yas--get-template-by-uuid1015,37171
(defun yas--remove-template-by-uuid (table uuid)yas--remove-template-by-uuid1075,39251
(defun yas--add-template (table template)yas--add-template1102,40395
(defun yas--update-template (table template)yas--update-template1127,41367
(defun yas--update-template-menu (table template)yas--update-template-menu1143,41791
(defun yas--namehash-templates-alist (namehash)yas--namehash-templates-alist1187,43741
(defun yas--fetch (table key)yas--fetch1195,43944
(defun yas--eval-condition (condition)yas--eval-condition1208,44360
(defun yas--filter-templates-by-condition (templates)yas--filter-templates-by-condition1219,44662
(defun yas--require-template-specific-condition-p ()yas--require-template-specific-condition-p1235,45325
(defun yas--template-can-expand-p (condition requirement)yas--template-can-expand-p1251,46040
(defun yas--table-templates (table)yas--table-templates1260,46355
(defun yas--templates-for-key-at-point ()yas--templates-for-key-at-point1270,46719
(defun yas--table-all-keys (table)yas--table-all-keys1308,48277
(defun yas--table-mode (table)yas--table-mode1317,48605
(defun yas--handle-error (err)yas--handle-error1323,48711
(defun yas--eval-lisp (form)yas--eval-lisp1329,48927
(defun yas--eval-lisp-no-saves (form)yas--eval-lisp-no-saves1346,49579
(defun yas--read-lisp (string &optional nil-on-error)yas--read-lisp1351,49711
(defun yas--read-keybinding (keybinding)yas--read-keybinding1361,50081
(defun yas--table-get-create (mode)yas--table-get-create1375,50641
(defun yas--get-snippet-tables (&optional mode)yas--get-snippet-tables1387,51082
(defun yas--menu-keymap-get-create (mode &optional parents)yas--menu-keymap-get-create1399,51478
(defun yas--parse-template (&optional file)yas--parse-template1415,52115
(defun yas--calculate-group (file)yas--calculate-group1493,55241
(defun yas--subdirs (directory &optional filep)yas--subdirs1507,55887
(defun yas--make-menu-binding (template)yas--make-menu-binding1521,56553
(defun yas--expand-or-visit-from-menu (mode uuid)yas--expand-or-visit-from-menu1525,56764
(defun yas--key-from-desc (text)yas--key-from-desc1540,57509
(defun yas--prompt-for-template (templates &optional prompt)yas--prompt-for-template1547,57699
(defun yas--prompt-for-keys (keys &optional prompt)yas--prompt-for-keys1564,58319
(defun yas--prompt-for-table (tables &optional prompt)yas--prompt-for-table1573,58615
(defun yas-x-prompt (prompt choices &optional display-fn)yas-x-prompt1584,58979
(defun yas-maybe-ido-prompt (prompt choices &optional display-fn)yas-maybe-ido-prompt1604,59720
(defun yas-ido-prompt (prompt choices &optional display-fn)yas-ido-prompt1608,59872
(defun yas-dropdown-prompt (_prompt choices &optional display-fn)yas-dropdown-prompt1612,60025
(defun yas-completing-prompt (prompt choices &optional display-fn completion-fn)yas-completing-prompt1620,60326
(defun yas-no-prompt (_prompt choices &optional _display-fn)yas-no-prompt1631,60816
(defvar yas--creating-compiled-snippets nil)yas--creating-compiled-snippets1640,61020
(defun yas--define-snippets-1 (snippet snippet-table)yas--define-snippets-11642,61066
(defun yas-define-snippets (mode snippets)yas-define-snippets1649,61380
(defun yas--template-get-file (template)yas--template-get-file1701,63212
(defun yas--load-yas-setup-file (file)yas--load-yas-setup-file1710,63571
(defun yas--define-parents (mode parents)yas--define-parents1720,63948
(defun yas-load-directory (top-level-dir &optional use-jit interactive)yas-load-directory1727,64187
(defun yas--load-directory-1 (directory mode-sym)yas--load-directory-11779,66618
(defun yas--load-directory-2 (directory mode-sym)yas--load-directory-21797,67627
(defun yas--load-snippet-dirs (&optional nojit)yas--load-snippet-dirs1823,68576
(defun yas-reload-all (&optional no-jit interactive)yas-reload-all1841,69410
(defvar yas-after-reload-hook nilyas-after-reload-hook1905,72035
(defun yas--load-pending-jits ()yas--load-pending-jits1908,72109
(defun yas--quote-string (string)yas--quote-string1920,72599
(defun yas-compile-directory (top-level-dir)yas-compile-directory1932,72938
(defun yas-recompile-all ()yas-recompile-all1941,73273
(defvar yas--scheduled-jit-loads (make-hash-table)yas--scheduled-jit-loads1950,73438
(defun yas--schedule-jit (mode fun)yas--schedule-jit1953,73571
(defun yas-about ()yas-about1960,73696
(defun yas--template-menu-binding-pair-get-create (template &optional type)yas--template-menu-binding-pair-get-create1998,75267
(defun yas--template-menu-managed-by-yas-define-menu (template)yas--template-menu-managed-by-yas-define-menu2013,75989
(defun yas--show-menu-p (mode)yas--show-menu-p2018,76186
(defun yas--delete-from-keymap (keymap uuid)yas--delete-from-keymap2026,76449
(defun yas-define-menu (mode menu &optional omit-items)yas-define-menu2051,77418
(defun yas--define-menu-1 (table menu-keymap menu uuidhash &optional group-list)yas--define-menu-12082,78727
(defun yas--define (mode key template &optional name condition group)yas--define2110,80110
(defun yas-hippie-try-expand (first-time?)yas-hippie-try-expand2120,80587
(defvar yas--condition-cache-timestamp nil)yas--condition-cache-timestamp2137,80926
(defmacro yas-define-condition-cache (func doc &rest body)yas-define-condition-cache2138,80970
(defalias 'yas-expand 'yas-expand-from-trigger-key)yas-expand2161,82002
(defun yas-expand-from-trigger-key (&optional field)yas-expand-from-trigger-key2162,82054
(defun yas-expand-from-keymap ()yas-expand-from-keymap2191,83407
(defun yas--expand-or-prompt-for-template (templates &optional start end)yas--expand-or-prompt-for-template2208,84170
(defun yas--fallback ()yas--fallback2230,85215
(defun yas--keybinding-beyond-yasnippet ()yas--keybinding-beyond-yasnippet2272,87086
(defun yas--fallback-translate-input (keys)yas--fallback-translate-input2280,87394
(defun yas--all-templates (tables)yas--all-templates2307,88404
(defun yas--lookup-snippet-1 (name mode)yas--lookup-snippet-12325,89143
(defun yas-lookup-snippet (name &optional mode noerror)yas-lookup-snippet2333,89475
(defun yas-insert-snippet (&optional no-condition)yas-insert-snippet2347,89959
(defun yas-visit-snippet-file ()yas-visit-snippet-file2373,91266
(defun yas--visit-snippet-file-1 (template)yas--visit-snippet-file-12390,91945
(defun yas--guess-snippet-directories-1 (table)yas--guess-snippet-directories-12420,93507
(defun yas--guess-snippet-directories (&optional table)yas--guess-snippet-directories2428,93806
(defun yas--make-directory-maybe (table-and-dirs &optional main-table-string)yas--make-directory-maybe2453,94851
(defun yas-new-snippet (&optional no-template)yas-new-snippet2473,95962
(defun yas--compute-major-mode-and-parents (file)yas--compute-major-mode-and-parents2496,96960
(defvar yas--editing-template nilyas--editing-template2526,98636
(defvar yas--current-template nilyas--current-template2529,98752
(defvar yas--guessed-modes nilyas--guessed-modes2532,98850
(defun yas--read-table ()yas--read-table2535,98947
(defun yas-load-snippet-buffer (table &optional interactive)yas-load-snippet-buffer2556,99805
(defun yas-load-snippet-buffer-and-close (table &optional kill)yas-load-snippet-buffer-and-close2583,101165
(defun yas-tryout-snippet (&optional debug)yas-tryout-snippet2621,103125
(defun yas-active-keys ()yas-active-keys2657,105085
(defun yas--template-fine-group (template)yas--template-fine-group2663,105305
(defun yas-describe-table-by-namehash ()yas-describe-table-by-namehash2667,105454
(defun yas-describe-tables (&optional with-nonactive)yas-describe-tables2691,106374
(defun yas--describe-pretty-table (table &optional original-buffer)yas--describe-pretty-table2711,107077
(defun yas-try-key-from-whitespace (_start-point)yas-try-key-from-whitespace2767,109928
(defun yas-shortest-key-until-whitespace (_start-point)yas-shortest-key-until-whitespace2774,110208
(defun yas-longest-key-from-whitespace (start-point)yas-longest-key-from-whitespace2779,110413
(defvar yas-modified-p nilyas-modified-p2794,110892
(defvar yas-moving-away-p nilyas-moving-away-p2797,110987
(defvar yas-text nilyas-text2800,111063
(defun yas-substr (str pattern &optional subexp)yas-substr2803,111119
(defun yas-choose-value (&rest possibilities)yas-choose-value2814,111488
(defun yas-key-to-value (alist)yas-key-to-value2829,112028
(defun yas-throw (text)yas-throw2837,112272
(defun yas-verify-value (possibilities)yas-verify-value2841,112404
(defun yas-field-value (number)yas-field-value2848,112698
(defun yas-text ()yas-text2858,113035
(defun yas-selected-text ()yas-selected-text2864,113197
(defun yas--get-field-once (number &optional transform-fn)yas--get-field-once2870,113404
(defun yas-default-from-field (number)yas-default-from-field2876,113600
(defun yas-inside-string ()yas-inside-string2880,113696
(defun yas-unimplemented (&optional missing-feature)yas-unimplemented2884,113873
(defvar yas--active-field-overlay nilyas--active-field-overlay2895,114342
(defvar yas--field-protection-overlays nilyas--field-protection-overlays2898,114423
(defvar yas-selected-text nilyas-selected-text2901,114519
(defvar yas--start-column nilyas--start-column2904,114614
(defun yas--apply-transform (field-or-mirror field &optional empty-on-nil-p)yas--apply-transform2964,116375
(defsubst yas--replace-all (from to &optional text)yas--replace-all2986,117432
(defun yas--snippet-find-field (snippet number)yas--snippet-find-field2996,117759
(defun yas--snippet-sort-fields (snippet)yas--snippet-sort-fields3001,117934
(defun yas--snippet-field-compare (field1 field2)yas--snippet-field-compare3007,118157
(defun yas--field-probably-deleted-p (snippet field)yas--field-probably-deleted-p3025,118737
(defun yas--snippets-at-point (&optional all-snippets)yas--snippets-at-point3049,119507
(defun yas-next-field-or-maybe-expand ()yas-next-field-or-maybe-expand3062,120039
(defun yas-next-field-will-exit-p (&optional arg)yas-next-field-will-exit-p3075,120488
(defun yas--find-next-field (n snippet active)yas--find-next-field3082,120808
(defun yas-next-field (&optional arg)yas-next-field3092,121287
(defun yas--place-overlays (snippet field)yas--place-overlays3111,121974
(defun yas--move-to-field (snippet field)yas--move-to-field3116,122182
(defun yas-prev-field ()yas-prev-field3139,123092
(defun yas-abort-snippet (&optional snippet)yas-abort-snippet3144,123221
(defun yas-exit-snippet (snippet)yas-exit-snippet3151,123437
(defun yas-exit-all-snippets ()yas-exit-all-snippets3160,123811
(defvar yas--inhibit-overlay-hooks nilyas--inhibit-overlay-hooks3171,124080
(defvar yas-snippet-beg nil "Beginning position of the last snippet committed.")yas-snippet-beg3174,124203
(defvar yas-snippet-end nil "End position of the last snippet committed.")yas-snippet-end3175,124284
(defun yas--commit-snippet (snippet)yas--commit-snippet3177,124360
(defun yas--safely-run-hooks (hook-var)yas--safely-run-hooks3222,126008
(defun yas--check-commit-snippet ()yas--check-commit-snippet3229,126190
(defun yas--markers-to-points (snippet)yas--markers-to-points3274,128159
(defun yas--points-to-markers (snippet)yas--points-to-markers3298,129527
(defun yas--field-contains-point-p (field &optional point)yas--field-contains-point-p3317,130690
(defun yas--field-text-for-display (field)yas--field-text-for-display3323,130896
(defun yas--undo-in-progress ()yas--undo-in-progress3327,131067
(defun yas--make-control-overlay (snippet start end)yas--make-control-overlay3333,131231
(defun yas-skip-and-clear-or-delete-char (&optional field)yas-skip-and-clear-or-delete-char3346,131690
(defun yas--skip-and-clear (field &optional from)yas--skip-and-clear3363,132399
(defun yas--mark-this-and-children-modified (field)yas--mark-this-and-children-modified3375,133011
(defun yas--make-move-active-field-overlay (snippet field)yas--make-move-active-field-overlay3385,133394
(defun yas--skip-and-clear-field-p (field beg _end length)yas--skip-and-clear-field-p3407,134503
(defun yas--on-field-overlay-modification (overlay after? beg end &optional length)yas--on-field-overlay-modification3414,134858
(defun yas--make-move-field-protection-overlays (snippet field)yas--make-move-field-protection-overlays3445,136289
(defun yas--on-protection-overlay-modification (_overlay after? beg end &optional length)yas--on-protection-overlay-modification3477,137781
(defun yas-expand-snippet (content &optional start end expand-env)yas-expand-snippet3516,139530
(defun yas--take-care-of-redo (_beg _end snippet)yas--take-care-of-redo3630,144933
(defun yas--snippet-revive (beg end snippet)yas--snippet-revive3639,145267
(defun yas--snippet-create (begin end)yas--snippet-create3665,146316
(defun yas--fom-start (fom)yas--fom-start3706,147700
(defun yas--fom-end (fom)yas--fom-end3714,147899
(defun yas--fom-next (fom)yas--fom-next3722,148092
(defun yas--fom-parent-field (fom)yas--fom-parent-field3730,148286
(defun yas--calculate-adjacencies (snippet)yas--calculate-adjacencies3738,148487
(defun yas--calculate-mirrors-in-fields (snippet mirror)yas--calculate-mirrors-in-fields3770,149733
(defun yas--advance-end-maybe (fom newend)yas--advance-end-maybe3787,150496
(defun yas--advance-start-maybe (fom newstart)yas--advance-start-maybe3807,151233
(defun yas--advance-end-of-parents-maybe (field newend)yas--advance-end-of-parents-maybe3815,151538
(defvar yas--dollar-regions nilyas--dollar-regions3825,151974
(defvar yas--backquote-markers-and-strings nilyas--backquote-markers-and-strings3829,152098
(defvar yas--indent-markers nilyas--indent-markers3834,152279
(defun yas--snippet-parse-create (snippet)yas--snippet-parse-create3837,152357
(defun yas--indent-region (from to snippet)yas--indent-region3907,154616
(defvar yas--indent-original-column nil)yas--indent-original-column3944,156318
(defun yas--indent (snippet)yas--indent3945,156359
(defun yas--collect-snippet-markers (snippet)yas--collect-snippet-markers3970,157337
(defun yas--escape-string (escaped)yas--escape-string3985,157964
(defun yas--protect-escapes (&optional text escaped)yas--protect-escapes3988,158062
(defun yas--restore-escapes (&optional text escaped)yas--restore-escapes4002,158654
(defun yas--save-backquotes ()yas--save-backquotes4016,159236
(defun yas--restore-backquotes ()yas--restore-backquotes4048,160875
(defun yas--scan-sexps (from count)yas--scan-sexps4063,161403
(defun yas--make-marker (pos)yas--make-marker4069,161601
(defun yas--indent-parse-create ()yas--indent-parse-create4075,161798
(defun yas--field-parse-create (snippet &optional parent-field)yas--field-parse-create4085,162200
(defun yas--transform-mirror-parse-create (snippet)yas--transform-mirror-parse-create4159,166082
(defun yas--simple-mirror-parse-create (snippet)yas--simple-mirror-parse-create4182,167339
(defun yas--delete-regions (regions)yas--delete-regions4209,168842
(defun yas--calculate-mirror-depth (mirror &optional traversed)yas--calculate-mirror-depth4217,169120
(defun yas--update-mirrors (snippet)yas--update-mirrors4237,170047
(defun yas--mirror-update-display (mirror field snippet)yas--mirror-update-display4281,172263
(defun yas--field-update-display (field)yas--field-update-display4306,173608
(defun yas--post-command-handler ()yas--post-command-handler4327,174563
(defun yas--expand-from-trigger-key-doc (context)yas--expand-from-trigger-key-doc4355,175832
(defun yas--expand-from-keymap-doc (context)yas--expand-from-keymap-doc4376,176930
(defun yas--template-pretty-list (templates)yas--template-pretty-list4396,178091
(define-button-type 'help-snippet-defhelp-snippet-def4405,178413
(defun yas--snippet-description-finish-runonce ()yas--snippet-description-finish-runonce4410,178618
(defun yas--create-snippet-xrefs ()yas--create-snippet-xrefs4416,178867
(defvar yas-verbosity 3yas-verbosity4429,179364
(defun yas--message (level message &rest args)yas--message4432,179469
(defun yas--warning (format-control &rest format-args)yas--warning4437,179674
(defun yas--format (format-control &rest format-args)yas--format4442,179862
(defun yas-initialize ()yas-initialize4505,182751
(defvar yas--backported-syms '(;; `defcustom'syas--backported-syms4510,182930
(defvar yas--exported-symsyas--exported-syms4632,188351

elpa/ztree-20160127.1542/ztree-autoloads.el,0

elpa/ztree-20160127.1542/ztree-diff-model.el,2168
(defvar-local ztree-diff-model-ignore-fun nilztree-diff-model-ignore-fun36,1126
(defvar-local ztree-diff-model-progress-fun nilztree-diff-model-progress-fun39,1252
(defun ztree-diff-model-update-progress ()ztree-diff-model-update-progress43,1385
(defun ztree-diff-model-ignore-p (node)ztree-diff-model-ignore-p70,2592
(defun ztree-diff-node-to-string (node)ztree-diff-node-to-string75,2788
(defun ztree-diff-node-short-name-wrapper (node &optional right-side)ztree-diff-node-short-name-wrapper105,4233
(defun ztree-diff-node-is-directory (node)ztree-diff-node-is-directory113,4506
(defun ztree-diff-node-side (node)ztree-diff-node-side121,4771
(defun ztree-diff-node-equal (node1 node2)ztree-diff-node-equal132,5143
(defun ztree-diff-untrampify-filename (file)ztree-diff-untrampify-filename141,5571
(defun ztree-diff-modef-quotify-string (x)ztree-diff-modef-quotify-string152,6041
(defun ztree-diff-model-files-equal (file1 file2)ztree-diff-model-files-equal156,6144
(defun ztree-directory-files (dir)ztree-directory-files169,6875
(defun ztree-diff-model-partial-rescan (node)ztree-diff-model-partial-rescan177,7279
(defun ztree-diff-model-subtree (parent path side diff)ztree-diff-model-subtree197,8192
(defun ztree-diff-node-update-diff-from-children (node)ztree-diff-node-update-diff-from-children221,9132
(defun ztree-diff-node-update-all-parents-diff (node)ztree-diff-node-update-all-parents-diff230,9587
(defun ztree-diff-model-update-diff (old new)ztree-diff-model-update-diff237,9844
(defun ztree-diff-node-update-diff-from-parent (node)ztree-diff-node-update-diff-from-parent252,10440
(defun ztree-diff-model-find-in-files (list shortname is-dir)ztree-diff-model-find-in-files271,11308
(defun ztree-diff-model-should-ignore (node)ztree-diff-model-should-ignore280,11702
(defun ztree-diff-node-recreate (node)ztree-diff-node-recreate291,12081
(defun ztree-diff-model-update-node (node)ztree-diff-model-update-node376,16344
(defun ztree-diff-model-set-ignore-fun (ignore-p)ztree-diff-model-set-ignore-fun382,16447
(defun ztree-diff-model-set-progress-fun (progess-fun)ztree-diff-model-set-progress-fun389,16745

elpa/ztree-20160127.1542/ztree-diff.el,3243
(defconst ztree-diff-hidden-files-regexp "^\\."ztree-diff-hidden-files-regexp34,1099
(defface ztreep-diff-header-faceztreep-diff-header-face38,1238
(defvar ztreep-diff-header-face 'ztreep-diff-header-face)ztreep-diff-header-face44,1589
(defface ztreep-diff-header-small-faceztreep-diff-header-small-face46,1648
(defvar ztreep-diff-header-small-face 'ztreep-diff-header-small-face)ztreep-diff-header-small-face52,1981
(defface ztreep-diff-model-diff-faceztreep-diff-model-diff-face54,2052
(defvar ztreep-diff-model-diff-face 'ztreep-diff-model-diff-face)ztreep-diff-model-diff-face58,2245
(defface ztreep-diff-model-add-faceztreep-diff-model-add-face60,2312
(defvar ztreep-diff-model-add-face 'ztreep-diff-model-add-face)ztreep-diff-model-add-face64,2501
(defface ztreep-diff-model-ignored-faceztreep-diff-model-ignored-face66,2566
(defvar ztreep-diff-model-ignored-face 'ztreep-diff-model-ignored-face)ztreep-diff-model-ignored-face72,2935
(defface ztreep-diff-model-normal-faceztreep-diff-model-normal-face74,3008
(defvar ztreep-diff-model-normal-face 'ztreep-diff-model-normal-face)ztreep-diff-model-normal-face79,3281
(defvar-local ztree-diff-filter-list (list ztree-diff-hidden-files-regexp)ztree-diff-filter-list82,3353
(defvar-local ztree-diff-dirs-pair nilztree-diff-dirs-pair86,3534
(defvar-local ztree-diff-show-equal-files tztree-diff-show-equal-files89,3645
(defvar-local ztree-diff-show-filtered-files nilztree-diff-show-filtered-files92,3746
(defvar-local ztree-diff-wait-message nilztree-diff-wait-message95,3843
(define-minor-mode ztreediff-modeztreediff-mode100,3957
(defun ztree-diff-node-face (node)ztree-diff-node-face119,4564
(defun ztree-diff-insert-buffer-header ()ztree-diff-insert-buffer-header127,4941
(defun ztree-diff-full-rescan ()ztree-diff-full-rescan156,6311
(defun ztree-diff-existing-common (node)ztree-diff-existing-common165,6574
(defun ztree-diff-existing-common-parent (node)ztree-diff-existing-common-parent175,6891
(defun ztree-diff-do-partial-rescan (node)ztree-diff-do-partial-rescan182,7176
(defun ztree-diff-partial-rescan ()ztree-diff-partial-rescan196,7730
(defun ztree-diff-simple-diff (node)ztree-diff-simple-diff204,7944
(defun ztree-diff-simple-diff-files ()ztree-diff-simple-diff-files219,8499
(defun ztree-diff-node-action (node hard)ztree-diff-node-action227,8759
(defun ztree-diff-copy-file (node source-path destination-path copy-to-right)ztree-diff-copy-file254,9791
(defun ztree-diff-copy-dir (node source-path destination-path copy-to-right)ztree-diff-copy-dir284,11169
(defun ztree-diff-copy ()ztree-diff-copy321,12824
(defun ztree-diff-view-file ()ztree-diff-view-file367,15135
(defun ztree-diff-delete-file ()ztree-diff-delete-file387,15832
(defun ztree-diff-node-ignore-p (node)ztree-diff-node-ignore-p459,19256
(defun ztree-node-is-visible (node)ztree-node-is-visible470,19664
(defun ztree-diff-toggle-show-equal-files ()ztree-diff-toggle-show-equal-files486,20305
(defun ztree-diff-toggle-show-filtered-files ()ztree-diff-toggle-show-filtered-files493,20589
(defun ztree-diff-update-wait-message (&optional msg)ztree-diff-update-wait-message501,20892
(defun ztree-diff (dir1 dir2)ztree-diff510,21226

elpa/ztree-20160127.1542/ztree-dir.el,849
(defconst ztree-hidden-files-regexp "^\\."ztree-hidden-files-regexp54,1492
(defvar ztree-dir-move-focus nilztree-dir-move-focus62,1660
(defvar-local ztree-dir-filter-list (list ztree-hidden-files-regexp)ztree-dir-filter-list66,1783
(defvar-local ztree-dir-show-filtered-files nilztree-dir-show-filtered-files74,2089
(defface ztreep-header-faceztreep-header-face82,2202
(defvar ztreep-header-face 'ztreep-header-face)ztreep-header-face88,2538
(define-minor-mode ztreedir-modeztreedir-mode91,2588
(defun ztree-insert-buffer-header ()ztree-insert-buffer-header108,2888
(defun ztree-file-not-hidden (filename)ztree-file-not-hidden117,3157
(defun ztree-find-file (node hard)ztree-find-file126,3514
(defun ztree-dir-toggle-show-filtered-files ()ztree-dir-toggle-show-filtered-files140,3955
(defun ztree-dir (path)ztree-dir151,4271

elpa/ztree-20160127.1542/ztree-pkg.el,79
(define-package "ztree" "20160127.1542" "Text mode directory tree""ztree"1,0

elpa/ztree-20160127.1542/ztree-util.el,366
(defun ztree-find (where which)ztree-find31,1055
(defun ztree-filter (condp lst)ztree-filter39,1260
(defun ztree-printable-string (string)ztree-printable-string46,1502
(defun ztree-file-short-name (file)ztree-file-short-name51,1683
(defun ztree-car-atom (value)ztree-car-atom56,1935
(defun ztree-insert-with-face (text face)ztree-insert-with-face62,2118

elpa/ztree-20160127.1542/ztree-view.el,4369
(defvar ztree-draw-unicode-lines nilztree-draw-unicode-lines51,1347
(defvar-local ztree-expanded-nodes-list nilztree-expanded-nodes-list54,1449
(defvar-local ztree-start-node nilztree-start-node57,1552
(defvar-local ztree-line-to-node-table nilztree-line-to-node-table60,1636
(defvar-local ztree-start-line nilztree-start-line63,1754
(defvar-local ztree-parent-lines-array nilztree-parent-lines-array66,1831
(defvar-local ztree-count-subsequent-bs nilztree-count-subsequent-bs71,2001
(defvar-local ztree-line-tree-properties nilztree-line-tree-properties75,2168
(defvar-local ztree-tree-header-fun nilztree-tree-header-fun80,2375
(defvar-local ztree-node-short-name-fun nilztree-node-short-name-fun84,2505
(defvar-local ztree-node-is-expandable-fun nilztree-node-is-expandable-fun87,2625
(defvar-local ztree-node-equal-fun nilztree-node-equal-fun91,2770
(defvar-local ztree-node-contents-fun nilztree-node-contents-fun94,2867
(defvar-local ztree-node-side-fun nilztree-node-side-fun97,2957
(defvar-local ztree-node-face-fun nilztree-node-face-fun102,3162
(defvar-local ztree-node-action-fun nilztree-node-action-fun105,3244
(defvar-local ztree-node-showp-fun nilztree-node-showp-fun108,3344
(defvar ztree-mode-mapztree-mode-map116,3480
(defface ztreep-node-faceztreep-node-face131,4061
(defvar ztreep-node-face 'ztreep-node-face)ztreep-node-face137,4378
(defface ztreep-leaf-faceztreep-leaf-face139,4423
(defvar ztreep-leaf-face 'ztreep-leaf-face)ztreep-leaf-face145,4746
(defface ztreep-arrow-faceztreep-arrow-face147,4791
(defvar ztreep-arrow-face 'ztreep-arrow-face)ztreep-arrow-face152,5016
(defface ztreep-expand-sign-faceztreep-expand-sign-face154,5063
(defvar ztreep-expand-sign-face 'ztreep-expand-sign-face)ztreep-expand-sign-face159,5303
(define-derived-mode ztree-mode special-mode "Ztree"ztree-mode163,5378
(defun ztree-find-node-in-line (line)ztree-find-node-in-line170,5574
(defun ztree-find-node-at-point ()ztree-find-node-at-point175,5745
(defun ztree-is-expanded-node (node)ztree-is-expanded-node185,6073
(defun ztree-set-parent-for-line (line parent)ztree-set-parent-for-line191,6276
(defun ztree-get-parent-for-line (line)ztree-get-parent-for-line195,6447
(defun scroll-to-line (line)scroll-to-line201,6706
(defun ztree-do-toggle-expand-subtree-iter (node state)ztree-do-toggle-expand-subtree-iter207,6848
(defun ztree-do-toggle-expand-subtree ()ztree-do-toggle-expand-subtree218,7251
(defun ztree-do-perform-action (hard)ztree-do-perform-action235,7954
(defun ztree-perform-action ()ztree-perform-action256,8790
(defun ztree-perform-soft-action ()ztree-perform-soft-action262,8986
(defun ztree-toggle-expand-subtree()ztree-toggle-expand-subtree269,9192
(defun ztree-do-toggle-expand-state (node do-expand)ztree-do-toggle-expand-state274,9346
(defun ztree-toggle-expand-state (node)ztree-toggle-expand-state284,9697
(defun ztree-move-up-in-tree ()ztree-move-up-in-tree289,9860
(defun ztree-get-splitted-node-contens (node)ztree-get-splitted-node-contens309,10640
(defun ztree-draw-char (c x y &optional face)ztree-draw-char326,11360
(defun ztree-vertical-line-char ()ztree-vertical-line-char337,11751
(defun ztree-horizontal-line-char ()ztree-horizontal-line-char341,11883
(defun ztree-left-bottom-corner-char ()ztree-left-bottom-corner-char345,12017
(defun ztree-left-intersection-char ()ztree-left-intersection-char349,12154
(defun ztree-draw-vertical-line (y1 y2 x &optional face)ztree-draw-vertical-line354,12324
(defun ztree-draw-vertical-rounded-line (y1 y2 x &optional face)ztree-draw-vertical-rounded-line369,12936
(defun ztree-draw-horizontal-line (x1 x2 y)ztree-draw-horizontal-line387,13657
(defun ztree-draw-tree (tree depth start-offset)ztree-draw-tree397,14018
(defun ztree-fill-parent-array (tree)ztree-fill-parent-array451,16611
(defun ztree-insert-node-contents (path)ztree-insert-node-contents462,16958
(defun ztree-insert-node-contents-1 (node depth)ztree-insert-node-contents-1493,18413
(defun ztree-insert-entry (node depth expanded)ztree-insert-entry526,20002
(defun ztree-insert-single-entry (short-name depthztree-insert-single-entry551,21370
(defun ztree-jump-side ()ztree-jump-side588,23164
(defun ztree-refresh-buffer (&optional line)ztree-refresh-buffer601,23531
(defun ztree-view (ztree-view620,24241

elpa/ztree-20160127.1542/ztree.el,0

init.el,0

super-emacs/interface.el,667
(defun hrs/mac? ()hrs/mac?14,187
(defun hrs/set-font-size ()hrs/set-font-size58,1154
(defun hrs/reset-font-size ()hrs/reset-font-size63,1344
(defun hrs/increase-font-size ()hrs/increase-font-size69,1521
(defun hrs/decrease-font-size ()hrs/decrease-font-size76,1770
(define-key global-map (kbd "C-)") 'hrs/reset-font-size)global-map86,2088
(define-key global-map (kbd "C-+") 'hrs/increase-font-size)global-map87,2145
(define-key global-map (kbd "C-=") 'hrs/increase-font-size)global-map88,2205
(define-key global-map (kbd "C-_") 'hrs/decrease-font-size)global-map89,2265
(define-key global-map (kbd "C--") 'hrs/decrease-font-size)global-map90,2325

super-emacs/key-bindings.el,383
(defun zl/split-window-horizontally ()zl/split-window-horizontally1,0
(defun zl/split-window-vertically ()zl/split-window-vertically7,132
(defun zl/select-current-line ()zl/select-current-line13,260
(defvar super-emacs--my-keyboard-bindings super-emacs--my-keyboard-bindings19,416
(defun super-emacs-apply-keyboard-bindings (pair)super-emacs-apply-keyboard-bindings42,1275

super-emacs/misc.el,78
(defun super-emacs-reload-current-file ()super-emacs-reload-current-file1,0

super-emacs/packages.el,902
(defvar super-emacs--required-packagessuper-emacs--required-packages6,145
(defun zl/org-narrow-forward ()zl/org-narrow-forward210,5664
(defun zl/org-narrow-backward ()zl/org-narrow-backward217,5849
(defun zl/set-org-keys ()zl/set-org-keys224,6040
(defun mark-done-and-archive ()mark-done-and-archive265,6768
(define-key global-map "\C-c\C-x\C-s" 'mark-done-and-archive)global-map271,6924
(define-key global-map "\C-cl" 'org-store-link)global-map273,6987
(define-key global-map "\C-ca" 'org-agenda)global-map274,7035
(define-key global-map "\C-cc" 'org-capture)global-map275,7079
(defun zl/flymake-google-init ()zl/flymake-google-init378,9885
(defun zl/add-senmantic-to-autocompelte ()zl/add-senmantic-to-autocompelte407,10897
(defun zl/set-semantic-keys ()zl/set-semantic-keys416,11187
(defun zl/semantic-hook ()zl/semantic-hook437,11853
(defun save-all ()save-all554,15427

super-emacs/repositories.el,0
