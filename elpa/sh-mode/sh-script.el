<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US" lang="en-US">
<!-- git web interface version 2.7.4.GIT, (C) 2005-2006, Kay Sievers <kay.sievers@vrfy.org>, Christian Gierke -->
<!-- git core binaries version 2.7.4.GIT -->
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
<meta name="generator" content="gitweb/2.7.4.GIT git/2.7.4.GIT"/>
<meta name="robots" content="index, nofollow"/>
<title>Public Git Hosting - emacs.git/blob - lisp/progmodes/sh-script.el</title>
<script type="text/javascript">/* <![CDATA[ */
function fixBlameLinks() {
	var allLinks = document.getElementsByTagName("a");
	for (var i = 0; i < allLinks.length; i++) {
		var link = allLinks.item(i);
		if (link.className == 'blamelink')
			link.href = link.href.replace("/blame/", "/blame_incremental/");
	}
}
/* ]]> */</script>
<base href="/" />
<link rel="stylesheet" type="text/css" href="/gitweb.css"/>
<link rel="alternate" title="emacs.git - history of lisp/progmodes/sh-script.el - RSS feed" href="/emacs.git/rss?f=lisp/progmodes/sh-script.el" type="application/rss+xml" />
<link rel="alternate" title="emacs.git - history of lisp/progmodes/sh-script.el - RSS feed (no merges)" href="/emacs.git/rss?f=lisp/progmodes/sh-script.el;opt=--no-merges" type="application/rss+xml" />
<link rel="alternate" title="emacs.git - history of lisp/progmodes/sh-script.el - Atom feed" href="/emacs.git/atom?f=lisp/progmodes/sh-script.el" type="application/atom+xml" />
<link rel="alternate" title="emacs.git - history of lisp/progmodes/sh-script.el - Atom feed (no merges)" href="/emacs.git/atom?f=lisp/progmodes/sh-script.el;opt=--no-merges" type="application/atom+xml" />
<link rel="shortcut icon" href="/git-favicon.png" type="image/png" />
</head>
<body><span class="body">
<div class="page_header">
<span class="logo-container"><span class="logo-default"><a class="logo-link" title="git homepage" href="http://git-scm.com/"><img class="logo" height="27" src="/git-logo.png" alt="git" width="72" /></a></span></span><span class="banner-container"><a href="/">repo.or.cz</a> / <a href="/emacs.git">emacs.git</a> / blob
</span></div>
<form method="get" action="/emacs.git" enctype="multipart/form-data">
<div class="search">
<input name="a" type="hidden" value="search" />
<input name="h" type="hidden" value="HEAD" />
<select name="st" >
<option selected="selected" value="commit">commit</option>
<option value="grep">grep</option>
<option value="author">author</option>
<option value="committer">committer</option>
<option value="pickaxe">pickaxe</option>
</select><sup><a title="search help" href="/emacs.git/search_help"><span style="padding-bottom:1em">?&#160;</span></a></sup> search:
<input type="text" name="s"  />
<span title="Extended regular expression"><label><input type="checkbox" name="sr" value="1" />re</label></span></div><div><input type="hidden" name=".cgifields" value="sr"  /></div>
</form>
<div class="page_nav">
<span class="tab"><a href="/emacs.git">summary</a></span><span class="barsep">&#160;|&#160;</span><span class="tab"><a href="/emacs.git/shortlog">log</a></span><span class="barsep">&#160;|&#160;</span><span class="tab"><a href="/git-browser/by-commit.html?r=emacs.git">graphiclog</a></span><span class="barsep">&#160;|&#160;</span><span class="tab"><a href="/emacs.git/commit/HEAD">commit</a></span><span class="barsep">&#160;|&#160;</span><span class="tab"><a href="/emacs.git/commitdiff/HEAD">commitdiff</a></span><span class="barsep">&#160;|&#160;</span><span class="tab"><a href="/emacs.git/tree/HEAD">tree</a></span><span class="barsep">&#160;|&#160;</span><span class="tab"><a href="/emacs.git/refs">refs</a></span><span class="barsep">&#160;|&#160;</span><span class="tab"><a href="/editproj.cgi?name=emacs.git">edit</a></span><span class="barsep">&#160;|&#160;</span><span class="tab"><a href="/regproj.cgi?fork=emacs.git">fork</a></span><br/>
<span class="page_nav_sub"><span class="tab"><a class="blamelink" href="/emacs.git/blame/HEAD:/lisp/progmodes/sh-script.el">blame</a></span><span class="barsep">&#160;|&#160;</span><span class="tab"><a href="/emacs.git/history/HEAD:/lisp/progmodes/sh-script.el">history</a></span><span class="barsep">&#160;|&#160;</span><span class="tab"><a href="/emacs.git/blob_plain/HEAD:/lisp/progmodes/sh-script.el">raw</a></span><span class="barsep">&#160;|&#160;</span><span class="tab"><a href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el">HEAD</a></span></span><br/>
</div>
<div class="header">
<span class="title"><a class="title" href="/emacs.git/commit/HEAD">Port January __morecore changes to AIX 7.1</a><a class="cover" href="/emacs.git/commit/HEAD"></a></span>
</div>
<div class="page_path"><a title="tree root" href="/emacs.git/tree/HEAD">[emacs.git]</a> / <a title="lisp" href="/emacs.git/tree/HEAD:/lisp">lisp</a> / <a title="lisp/progmodes" href="/emacs.git/tree/HEAD:/lisp/progmodes">progmodes</a> / <a title="lisp/progmodes/sh-script.el" href="/emacs.git/blob_plain/HEAD:/lisp/progmodes/sh-script.el">sh-script.el</a><br/></div>
<div class="title_text">
<table class="object_header">
<tr><td>blob</td><td class="sha1">7a9e6c7422d1e88459be475eeb4e35660d48865a</td></tr>
</table></div>
<div class="page_body">
<div class="pre"><a id="l1" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1" class="linenr">   1 </a><span class="hl slc">;;; sh-script.el --- shell-script editing commands for Emacs  -*- lexical-binding:t -*-</span></div>
<div class="pre"><a id="l2" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2" class="linenr">   2 </a></div>
<div class="pre"><a id="l3" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3" class="linenr">   3 </a><span class="hl slc">;; Copyright (C) 1993-1997, 1999, 2001-2016 Free Software Foundation,</span></div>
<div class="pre"><a id="l4" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4" class="linenr">   4 </a><span class="hl slc">;; Inc.</span></div>
<div class="pre"><a id="l5" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l5" class="linenr">   5 </a></div>
<div class="pre"><a id="l6" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l6" class="linenr">   6 </a><span class="hl slc">;; Author: Daniel Pfeiffer &lt;occitan&#64;esperanto.org&gt;</span></div>
<div class="pre"><a id="l7" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l7" class="linenr">   7 </a><span class="hl slc">;; Version: 2.0f</span></div>
<div class="pre"><a id="l8" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l8" class="linenr">   8 </a><span class="hl slc">;; Maintainer: emacs-devel&#64;gnu.org</span></div>
<div class="pre"><a id="l9" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l9" class="linenr">   9 </a><span class="hl slc">;; Keywords: languages, unix</span></div>
<div class="pre"><a id="l10" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l10" class="linenr">  10 </a></div>
<div class="pre"><a id="l11" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l11" class="linenr">  11 </a><span class="hl slc">;; This file is part of GNU Emacs.</span></div>
<div class="pre"><a id="l12" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l12" class="linenr">  12 </a></div>
<div class="pre"><a id="l13" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l13" class="linenr">  13 </a><span class="hl slc">;; GNU Emacs is free software: you can redistribute it and/or modify</span></div>
<div class="pre"><a id="l14" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l14" class="linenr">  14 </a><span class="hl slc">;; it under the terms of the GNU General Public License as published by</span></div>
<div class="pre"><a id="l15" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l15" class="linenr">  15 </a><span class="hl slc">;; the Free Software Foundation, either version 3 of the License, or</span></div>
<div class="pre"><a id="l16" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l16" class="linenr">  16 </a><span class="hl slc">;; (at your option) any later version.</span></div>
<div class="pre"><a id="l17" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l17" class="linenr">  17 </a></div>
<div class="pre"><a id="l18" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l18" class="linenr">  18 </a><span class="hl slc">;; GNU Emacs is distributed in the hope that it will be useful,</span></div>
<div class="pre"><a id="l19" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l19" class="linenr">  19 </a><span class="hl slc">;; but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div>
<div class="pre"><a id="l20" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l20" class="linenr">  20 </a><span class="hl slc">;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div>
<div class="pre"><a id="l21" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l21" class="linenr">  21 </a><span class="hl slc">;; GNU General Public License for more details.</span></div>
<div class="pre"><a id="l22" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l22" class="linenr">  22 </a></div>
<div class="pre"><a id="l23" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l23" class="linenr">  23 </a><span class="hl slc">;; You should have received a copy of the GNU General Public License</span></div>
<div class="pre"><a id="l24" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l24" class="linenr">  24 </a><span class="hl slc">;; along with GNU Emacs.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="pre"><a id="l25" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l25" class="linenr">  25 </a></div>
<div class="pre"><a id="l26" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l26" class="linenr">  26 </a><span class="hl slc">;;; Commentary:</span></div>
<div class="pre"><a id="l27" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l27" class="linenr">  27 </a></div>
<div class="pre"><a id="l28" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l28" class="linenr">  28 </a><span class="hl slc">;; Major mode for editing shell scripts.  Bourne, C and rc shells as well</span></div>
<div class="pre"><a id="l29" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l29" class="linenr">  29 </a><span class="hl slc">;; as various derivatives are supported and easily derived from.  Structured</span></div>
<div class="pre"><a id="l30" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l30" class="linenr">  30 </a><span class="hl slc">;; statements can be inserted with one command or abbrev.  Completion is</span></div>
<div class="pre"><a id="l31" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l31" class="linenr">  31 </a><span class="hl slc">;; available for filenames, variables known from the script, the shell and</span></div>
<div class="pre"><a id="l32" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l32" class="linenr">  32 </a><span class="hl slc">;; the environment as well as commands.</span></div>
<div class="pre"><a id="l33" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l33" class="linenr">  33 </a></div>
<div class="pre"><a id="l34" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l34" class="linenr">  34 </a><span class="hl slc">;;; Known Bugs:</span></div>
<div class="pre"><a id="l35" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l35" class="linenr">  35 </a></div>
<div class="pre"><a id="l36" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l36" class="linenr">  36 </a><span class="hl slc">;; - In Bourne the keyword `in' is not anchored to case, for, select ...</span></div>
<div class="pre"><a id="l37" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l37" class="linenr">  37 </a><span class="hl slc">;; - Variables in `&quot;' strings aren't fontified because there's no way of</span></div>
<div class="pre"><a id="l38" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l38" class="linenr">  38 </a><span class="hl slc">;;   syntactically distinguishing those from `'' strings.</span></div>
<div class="pre"><a id="l39" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l39" class="linenr">  39 </a></div>
<div class="pre"><a id="l40" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l40" class="linenr">  40 </a><span class="hl slc">;;              Indentation</span></div>
<div class="pre"><a id="l41" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l41" class="linenr">  41 </a><span class="hl slc">;;              ===========</span></div>
<div class="pre"><a id="l42" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l42" class="linenr">  42 </a><span class="hl slc">;; Indentation for rc and es modes is very limited, but for Bourne shells</span></div>
<div class="pre"><a id="l43" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l43" class="linenr">  43 </a><span class="hl slc">;; and its derivatives it is quite customizable.</span></div>
<div class="pre"><a id="l44" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l44" class="linenr">  44 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l45" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l45" class="linenr">  45 </a><span class="hl slc">;; The following description applies to sh and derived shells (bash,</span></div>
<div class="pre"><a id="l46" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l46" class="linenr">  46 </a><span class="hl slc">;; zsh, ...).</span></div>
<div class="pre"><a id="l47" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l47" class="linenr">  47 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l48" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l48" class="linenr">  48 </a><span class="hl slc">;; There are various customization variables which allow tailoring to</span></div>
<div class="pre"><a id="l49" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l49" class="linenr">  49 </a><span class="hl slc">;; a wide variety of styles.  Most of these variables are named</span></div>
<div class="pre"><a id="l50" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l50" class="linenr">  50 </a><span class="hl slc">;; sh-indent-for-XXX and sh-indent-after-XXX.  For example.</span></div>
<div class="pre"><a id="l51" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l51" class="linenr">  51 </a><span class="hl slc">;; sh-indent-after-if controls the indenting of a line following</span></div>
<div class="pre"><a id="l52" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l52" class="linenr">  52 </a><span class="hl slc">;; an if statement, and sh-indent-for-fi controls the indentation</span></div>
<div class="pre"><a id="l53" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l53" class="linenr">  53 </a><span class="hl slc">;; of the line containing the fi.</span></div>
<div class="pre"><a id="l54" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l54" class="linenr">  54 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l55" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l55" class="linenr">  55 </a><span class="hl slc">;; You can set each to a numeric value, but it is often more convenient</span></div>
<div class="pre"><a id="l56" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l56" class="linenr">  56 </a><span class="hl slc">;; to a symbol such as `+' which uses the value of variable `sh-basic-offset'.</span></div>
<div class="pre"><a id="l57" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l57" class="linenr">  57 </a><span class="hl slc">;; By changing this one variable you can increase or decrease how much</span></div>
<div class="pre"><a id="l58" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l58" class="linenr">  58 </a><span class="hl slc">;; indentation there is.  Valid symbols:</span></div>
<div class="pre"><a id="l59" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l59" class="linenr">  59 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l60" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l60" class="linenr">  60 </a><span class="hl slc">;;      +   Indent right by sh-basic-offset</span></div>
<div class="pre"><a id="l61" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l61" class="linenr">  61 </a><span class="hl slc">;;      -   Indent left  by sh-basic-offset</span></div>
<div class="pre"><a id="l62" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l62" class="linenr">  62 </a><span class="hl slc">;;      ++  Indent right twice sh-basic-offset</span></div>
<div class="pre"><a id="l63" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l63" class="linenr">  63 </a><span class="hl slc">;;      --  Indent left  twice sh-basic-offset</span></div>
<div class="pre"><a id="l64" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l64" class="linenr">  64 </a><span class="hl slc">;;      *   Indent right half sh-basic-offset</span></div>
<div class="pre"><a id="l65" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l65" class="linenr">  65 </a><span class="hl slc">;;      /   Indent left  half sh-basic-offset.</span></div>
<div class="pre"><a id="l66" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l66" class="linenr">  66 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l67" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l67" class="linenr">  67 </a><span class="hl slc">;; There are 4 commands to help set the indentation variables:</span></div>
<div class="pre"><a id="l68" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l68" class="linenr">  68 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l69" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l69" class="linenr">  69 </a><span class="hl slc">;; `sh-show-indent'</span></div>
<div class="pre"><a id="l70" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l70" class="linenr">  70 </a><span class="hl slc">;;    This shows what variable controls the indentation of the current</span></div>
<div class="pre"><a id="l71" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l71" class="linenr">  71 </a><span class="hl slc">;;    line and its value.</span></div>
<div class="pre"><a id="l72" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l72" class="linenr">  72 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l73" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l73" class="linenr">  73 </a><span class="hl slc">;; `sh-set-indent'</span></div>
<div class="pre"><a id="l74" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l74" class="linenr">  74 </a><span class="hl slc">;;    This allows you to set the value of the variable controlling the</span></div>
<div class="pre"><a id="l75" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l75" class="linenr">  75 </a><span class="hl slc">;;    current line's indentation.  You can enter a number or one of a</span></div>
<div class="pre"><a id="l76" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l76" class="linenr">  76 </a><span class="hl slc">;;    number of special symbols to denote the value of sh-basic-offset,</span></div>
<div class="pre"><a id="l77" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l77" class="linenr">  77 </a><span class="hl slc">;;    or its negative, or half it, or twice it, etc.  If you've used</span></div>
<div class="pre"><a id="l78" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l78" class="linenr">  78 </a><span class="hl slc">;;    cc-mode this should be familiar.  If you forget which symbols are</span></div>
<div class="pre"><a id="l79" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l79" class="linenr">  79 </a><span class="hl slc">;;    valid simply press C-h at the prompt.</span></div>
<div class="pre"><a id="l80" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l80" class="linenr">  80 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l81" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l81" class="linenr">  81 </a><span class="hl slc">;; `sh-learn-line-indent'</span></div>
<div class="pre"><a id="l82" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l82" class="linenr">  82 </a><span class="hl slc">;;    Simply make the line look the way you want it, then invoke this</span></div>
<div class="pre"><a id="l83" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l83" class="linenr">  83 </a><span class="hl slc">;;    command.  It will set the variable to the value that makes the line</span></div>
<div class="pre"><a id="l84" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l84" class="linenr">  84 </a><span class="hl slc">;;    indent like that.  If called with a prefix argument then it will set</span></div>
<div class="pre"><a id="l85" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l85" class="linenr">  85 </a><span class="hl slc">;;    the value to one of the symbols if applicable.</span></div>
<div class="pre"><a id="l86" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l86" class="linenr">  86 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l87" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l87" class="linenr">  87 </a><span class="hl slc">;; `sh-learn-buffer-indent'</span></div>
<div class="pre"><a id="l88" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l88" class="linenr">  88 </a><span class="hl slc">;;    This is the deluxe function!  It &quot;learns&quot; the whole buffer (use</span></div>
<div class="pre"><a id="l89" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l89" class="linenr">  89 </a><span class="hl slc">;;    narrowing if you want it to process only part).  It outputs to a</span></div>
<div class="pre"><a id="l90" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l90" class="linenr">  90 </a><span class="hl slc">;;    buffer *indent* any conflicts it finds, and all the variables it has</span></div>
<div class="pre"><a id="l91" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l91" class="linenr">  91 </a><span class="hl slc">;;    learned.  This buffer is a sort of Occur mode buffer, allowing you to</span></div>
<div class="pre"><a id="l92" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l92" class="linenr">  92 </a><span class="hl slc">;;    easily find where something was set.  It is popped to automatically</span></div>
<div class="pre"><a id="l93" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l93" class="linenr">  93 </a><span class="hl slc">;;    if there are any conflicts found or if `sh-popup-occur-buffer' is</span></div>
<div class="pre"><a id="l94" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l94" class="linenr">  94 </a><span class="hl slc">;;    non-nil.</span></div>
<div class="pre"><a id="l95" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l95" class="linenr">  95 </a><span class="hl slc">;;    `sh-indent-comment' will be set if all comments follow  the same</span></div>
<div class="pre"><a id="l96" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l96" class="linenr">  96 </a><span class="hl slc">;;    pattern;  if they don't it will be set to nil.</span></div>
<div class="pre"><a id="l97" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l97" class="linenr">  97 </a><span class="hl slc">;;    Whether `sh-basic-offset' is set is determined by variable</span></div>
<div class="pre"><a id="l98" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l98" class="linenr">  98 </a><span class="hl slc">;;    `sh-learn-basic-offset'.</span></div>
<div class="pre"><a id="l99" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l99" class="linenr">  99 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l100" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l100" class="linenr"> 100 </a><span class="hl slc">;;    Unfortunately, `sh-learn-buffer-indent' can take a long time to run</span></div>
<div class="pre"><a id="l101" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l101" class="linenr"> 101 </a><span class="hl slc">;;    (e.g. if there are large case statements).  Perhaps it does not make</span></div>
<div class="pre"><a id="l102" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l102" class="linenr"> 102 </a><span class="hl slc">;;    sense to run it on large buffers: if lots of lines have different</span></div>
<div class="pre"><a id="l103" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l103" class="linenr"> 103 </a><span class="hl slc">;;    indentation styles it will produce a lot of diagnostics in the</span></div>
<div class="pre"><a id="l104" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l104" class="linenr"> 104 </a><span class="hl slc">;;    *indent* buffer; if there is a consistent style then running</span></div>
<div class="pre"><a id="l105" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l105" class="linenr"> 105 </a><span class="hl slc">;;    `sh-learn-buffer-indent' on a small region of the buffer should</span></div>
<div class="pre"><a id="l106" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l106" class="linenr"> 106 </a><span class="hl slc">;;    suffice.</span></div>
<div class="pre"><a id="l107" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l107" class="linenr"> 107 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l108" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l108" class="linenr"> 108 </a><span class="hl slc">;;      Saving indentation values</span></div>
<div class="pre"><a id="l109" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l109" class="linenr"> 109 </a><span class="hl slc">;;      -------------------------</span></div>
<div class="pre"><a id="l110" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l110" class="linenr"> 110 </a><span class="hl slc">;; After you've learned the values in a buffer, how to you remember</span></div>
<div class="pre"><a id="l111" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l111" class="linenr"> 111 </a><span class="hl slc">;; them?   Originally I had hoped that `sh-learn-buffer-indent'</span></div>
<div class="pre"><a id="l112" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l112" class="linenr"> 112 </a><span class="hl slc">;; would make this unnecessary;  simply learn the values when you visit</span></div>
<div class="pre"><a id="l113" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l113" class="linenr"> 113 </a><span class="hl slc">;; the buffer.</span></div>
<div class="pre"><a id="l114" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l114" class="linenr"> 114 </a><span class="hl slc">;; You can do this automatically like this:</span></div>
<div class="pre"><a id="l115" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l115" class="linenr"> 115 </a><span class="hl slc">;;   (add-hook 'sh-set-shell-hook 'sh-learn-buffer-indent)</span></div>
<div class="pre"><a id="l116" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l116" class="linenr"> 116 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l117" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l117" class="linenr"> 117 </a><span class="hl slc">;; However...  `sh-learn-buffer-indent' is extremely slow,</span></div>
<div class="pre"><a id="l118" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l118" class="linenr"> 118 </a><span class="hl slc">;; especially on large-ish buffer.  Also, if there are conflicts the</span></div>
<div class="pre"><a id="l119" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l119" class="linenr"> 119 </a><span class="hl slc">;; &quot;last one wins&quot; which may not produce the desired setting.</span></div>
<div class="pre"><a id="l120" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l120" class="linenr"> 120 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l121" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l121" class="linenr"> 121 </a><span class="hl slc">;; So...There is a minimal way of being able to save indentation values and</span></div>
<div class="pre"><a id="l122" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l122" class="linenr"> 122 </a><span class="hl slc">;; to reload them in another buffer or at another point in time.</span></div>
<div class="pre"><a id="l123" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l123" class="linenr"> 123 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l124" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l124" class="linenr"> 124 </a><span class="hl slc">;; Use `sh-name-style' to give a name to the indentation settings of</span></div>
<div class="pre"><a id="l125" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l125" class="linenr"> 125 </a><span class="hl slc">;;      the current buffer.</span></div>
<div class="pre"><a id="l126" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l126" class="linenr"> 126 </a><span class="hl slc">;; Use `sh-load-style' to load indentation settings for the current</span></div>
<div class="pre"><a id="l127" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l127" class="linenr"> 127 </a><span class="hl slc">;;      buffer from a specific style.</span></div>
<div class="pre"><a id="l128" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l128" class="linenr"> 128 </a><span class="hl slc">;; Use `sh-save-styles-to-buffer' to write all the styles to a buffer</span></div>
<div class="pre"><a id="l129" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l129" class="linenr"> 129 </a><span class="hl slc">;;      in lisp code.  You can then store it in a file and later use</span></div>
<div class="pre"><a id="l130" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l130" class="linenr"> 130 </a><span class="hl slc">;;      `load-file' to load it.</span></div>
<div class="pre"><a id="l131" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l131" class="linenr"> 131 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l132" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l132" class="linenr"> 132 </a><span class="hl slc">;;      Indentation variables - buffer local or global?</span></div>
<div class="pre"><a id="l133" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l133" class="linenr"> 133 </a><span class="hl slc">;;      ----------------------------------------------</span></div>
<div class="pre"><a id="l134" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l134" class="linenr"> 134 </a><span class="hl slc">;; I think that often having them buffer-local makes sense,</span></div>
<div class="pre"><a id="l135" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l135" class="linenr"> 135 </a><span class="hl slc">;; especially if one is using `sh-learn-buffer-indent'.  However, if</span></div>
<div class="pre"><a id="l136" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l136" class="linenr"> 136 </a><span class="hl slc">;; a user sets values using customization, these changes won't appear</span></div>
<div class="pre"><a id="l137" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l137" class="linenr"> 137 </a><span class="hl slc">;; to work if the variables are already local!</span></div>
<div class="pre"><a id="l138" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l138" class="linenr"> 138 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l139" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l139" class="linenr"> 139 </a><span class="hl slc">;; To get round this, there is a variable `sh-make-vars-local' and 2</span></div>
<div class="pre"><a id="l140" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l140" class="linenr"> 140 </a><span class="hl slc">;; functions: `sh-make-vars-local' and `sh-reset-indent-vars-to-global-values'.</span></div>
<div class="pre"><a id="l141" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l141" class="linenr"> 141 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l142" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l142" class="linenr"> 142 </a><span class="hl slc">;; If `sh-make-vars-local' is non-nil, then these variables become</span></div>
<div class="pre"><a id="l143" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l143" class="linenr"> 143 </a><span class="hl slc">;; buffer local when the mode is established.</span></div>
<div class="pre"><a id="l144" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l144" class="linenr"> 144 </a><span class="hl slc">;; If this is nil, then the variables are global.  At any time you</span></div>
<div class="pre"><a id="l145" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l145" class="linenr"> 145 </a><span class="hl slc">;; can make them local with the command `sh-make-vars-local'.</span></div>
<div class="pre"><a id="l146" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l146" class="linenr"> 146 </a><span class="hl slc">;; Conversely, to update with the global values you can use the</span></div>
<div class="pre"><a id="l147" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l147" class="linenr"> 147 </a><span class="hl slc">;; command `sh-reset-indent-vars-to-global-values'.</span></div>
<div class="pre"><a id="l148" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l148" class="linenr"> 148 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l149" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l149" class="linenr"> 149 </a><span class="hl slc">;; This may be awkward, but the intent is to cover all cases.</span></div>
<div class="pre"><a id="l150" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l150" class="linenr"> 150 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l151" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l151" class="linenr"> 151 </a><span class="hl slc">;;      Awkward things, pitfalls</span></div>
<div class="pre"><a id="l152" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l152" class="linenr"> 152 </a><span class="hl slc">;;      ------------------------</span></div>
<div class="pre"><a id="l153" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l153" class="linenr"> 153 </a><span class="hl slc">;; Indentation for a sh script is complicated for a number of reasons:</span></div>
<div class="pre"><a id="l154" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l154" class="linenr"> 154 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l155" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l155" class="linenr"> 155 </a><span class="hl slc">;; 1. You can't format by simply looking at symbols, you need to look</span></div>
<div class="pre"><a id="l156" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l156" class="linenr"> 156 </a><span class="hl slc">;;    at keywords.  [This is not the case for rc and es shells.]</span></div>
<div class="pre"><a id="l157" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l157" class="linenr"> 157 </a><span class="hl slc">;; 2. The character &quot;)&quot; is used both as a matched pair &quot;(&quot; ... &quot;)&quot; and</span></div>
<div class="pre"><a id="l158" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l158" class="linenr"> 158 </a><span class="hl slc">;;    as a stand-alone symbol (in a case alternative).  This makes</span></div>
<div class="pre"><a id="l159" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l159" class="linenr"> 159 </a><span class="hl slc">;;    things quite tricky!</span></div>
<div class="pre"><a id="l160" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l160" class="linenr"> 160 </a><span class="hl slc">;; 3. Here-documents in a script should be treated &quot;as is&quot;, and when</span></div>
<div class="pre"><a id="l161" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l161" class="linenr"> 161 </a><span class="hl slc">;;    they terminate we want to revert to the indentation of the line</span></div>
<div class="pre"><a id="l162" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l162" class="linenr"> 162 </a><span class="hl slc">;;    containing the &quot;&lt;&lt;&quot; symbol.</span></div>
<div class="pre"><a id="l163" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l163" class="linenr"> 163 </a><span class="hl slc">;; 4. A line may be continued using the &quot;\&quot;.</span></div>
<div class="pre"><a id="l164" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l164" class="linenr"> 164 </a><span class="hl slc">;; 5. The character &quot;#&quot; (outside a string) normally starts a comment,</span></div>
<div class="pre"><a id="l165" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l165" class="linenr"> 165 </a><span class="hl slc">;;    but it doesn't in the sequence &quot;$#&quot;!</span></div>
<div class="pre"><a id="l166" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l166" class="linenr"> 166 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l167" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l167" class="linenr"> 167 </a><span class="hl slc">;; To try and address points 2 3 and 5 I used a feature that cperl mode</span></div>
<div class="pre"><a id="l168" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l168" class="linenr"> 168 </a><span class="hl slc">;; uses, that of a text's syntax property.  This, however, has 2</span></div>
<div class="pre"><a id="l169" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l169" class="linenr"> 169 </a><span class="hl slc">;; disadvantages:</span></div>
<div class="pre"><a id="l170" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l170" class="linenr"> 170 </a><span class="hl slc">;; 1. We need to scan the buffer to find which &quot;)&quot; symbols belong to a</span></div>
<div class="pre"><a id="l171" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l171" class="linenr"> 171 </a><span class="hl slc">;;    case alternative, to find any here documents, and handle &quot;$#&quot;.</span></div>
<div class="pre"><a id="l172" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l172" class="linenr"> 172 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l173" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l173" class="linenr"> 173 </a><span class="hl slc">;;      Bugs</span></div>
<div class="pre"><a id="l174" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l174" class="linenr"> 174 </a><span class="hl slc">;;      ----</span></div>
<div class="pre"><a id="l175" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l175" class="linenr"> 175 </a><span class="hl slc">;; - Indenting many lines is slow.  It currently does each line</span></div>
<div class="pre"><a id="l176" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l176" class="linenr"> 176 </a><span class="hl slc">;;   independently, rather than saving state information.</span></div>
<div class="pre"><a id="l177" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l177" class="linenr"> 177 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l178" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l178" class="linenr"> 178 </a><span class="hl slc">;; - `sh-learn-buffer-indent' is extremely slow.</span></div>
<div class="pre"><a id="l179" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l179" class="linenr"> 179 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l180" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l180" class="linenr"> 180 </a><span class="hl slc">;; - &quot;case $x in y) echo ;; esac)&quot; the last ) is mis-identified as being</span></div>
<div class="pre"><a id="l181" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l181" class="linenr"> 181 </a><span class="hl slc">;;   part of a case-pattern.  You need to add a semi-colon after &quot;esac&quot; to</span></div>
<div class="pre"><a id="l182" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l182" class="linenr"> 182 </a><span class="hl slc">;;   coerce sh-script into doing the right thing.</span></div>
<div class="pre"><a id="l183" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l183" class="linenr"> 183 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l184" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l184" class="linenr"> 184 </a><span class="hl slc">;; - &quot;echo $z in ps | head)&quot; the last ) is mis-identified as being part of</span></div>
<div class="pre"><a id="l185" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l185" class="linenr"> 185 </a><span class="hl slc">;;   a case-pattern.  You need to put the &quot;in&quot; between quotes to coerce</span></div>
<div class="pre"><a id="l186" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l186" class="linenr"> 186 </a><span class="hl slc">;;   sh-script into doing the right thing.</span></div>
<div class="pre"><a id="l187" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l187" class="linenr"> 187 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l188" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l188" class="linenr"> 188 </a><span class="hl slc">;; - A line starting with &quot;}&gt;foo&quot; is not indented like &quot;} &gt;foo&quot;.</span></div>
<div class="pre"><a id="l189" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l189" class="linenr"> 189 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l190" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l190" class="linenr"> 190 </a><span class="hl slc">;; Richard Sharman &lt;rsharman&#64;pobox.com&gt;  June 1999.</span></div>
<div class="pre"><a id="l191" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l191" class="linenr"> 191 </a></div>
<div class="pre"><a id="l192" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l192" class="linenr"> 192 </a><span class="hl slc">;;; Code:</span></div>
<div class="pre"><a id="l193" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l193" class="linenr"> 193 </a></div>
<div class="pre"><a id="l194" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l194" class="linenr"> 194 </a><span class="hl slc">;; page 1:      variables and settings</span></div>
<div class="pre"><a id="l195" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l195" class="linenr"> 195 </a><span class="hl slc">;; page 2:      indentation stuff</span></div>
<div class="pre"><a id="l196" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l196" class="linenr"> 196 </a><span class="hl slc">;; page 3:      mode-command and utility functions</span></div>
<div class="pre"><a id="l197" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l197" class="linenr"> 197 </a><span class="hl slc">;; page 4:      statement syntax-commands for various shells</span></div>
<div class="pre"><a id="l198" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l198" class="linenr"> 198 </a><span class="hl slc">;; page 5:      various other commands</span></div>
<div class="pre"><a id="l199" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l199" class="linenr"> 199 </a></div>
<div class="pre"><a id="l200" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l200" class="linenr"> 200 </a><span class="hl opt">(</span><span class="hl kwa">eval-when-compile</span></div>
<div class="pre"><a id="l201" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l201" class="linenr"> 201 </a>  <span class="hl opt">(</span><span class="hl kwa">require</span> <span class="hl opt">'</span>skeleton<span class="hl opt">)</span></div>
<div class="pre"><a id="l202" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l202" class="linenr"> 202 </a>  <span class="hl opt">(</span><span class="hl kwa">require</span> <span class="hl opt">'</span>cl-lib<span class="hl opt">)</span></div>
<div class="pre"><a id="l203" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l203" class="linenr"> 203 </a>  <span class="hl opt">(</span><span class="hl kwa">require</span> <span class="hl opt">'</span>comint<span class="hl opt">))</span></div>
<div class="pre"><a id="l204" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l204" class="linenr"> 204 </a><span class="hl opt">(</span><span class="hl kwa">require</span> <span class="hl opt">'</span>executable<span class="hl opt">)</span></div>
<div class="pre"><a id="l205" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l205" class="linenr"> 205 </a></div>
<div class="pre"><a id="l206" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l206" class="linenr"> 206 </a><span class="hl opt">(</span><span class="hl kwa">autoload</span> <span class="hl opt">'</span>comint-completion-at-point <span class="hl str">&quot;comint&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l207" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l207" class="linenr"> 207 </a><span class="hl opt">(</span><span class="hl kwa">autoload</span> <span class="hl opt">'</span>comint-filename-completion <span class="hl str">&quot;comint&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l208" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l208" class="linenr"> 208 </a><span class="hl opt">(</span><span class="hl kwa">autoload</span> <span class="hl opt">'</span>comint-send-string <span class="hl str">&quot;comint&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l209" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l209" class="linenr"> 209 </a><span class="hl opt">(</span><span class="hl kwa">autoload</span> <span class="hl opt">'</span>shell-command-completion <span class="hl str">&quot;shell&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l210" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l210" class="linenr"> 210 </a><span class="hl opt">(</span><span class="hl kwa">autoload</span> <span class="hl opt">'</span>shell-environment-variable-completion <span class="hl str">&quot;shell&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l211" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l211" class="linenr"> 211 </a></div>
<div class="pre"><a id="l212" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l212" class="linenr"> 212 </a><span class="hl opt">(</span><span class="hl kwa">defvar</span> font-lock-comment-face<span class="hl opt">)</span></div>
<div class="pre"><a id="l213" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l213" class="linenr"> 213 </a><span class="hl opt">(</span><span class="hl kwa">defvar</span> font-lock-set-defaults<span class="hl opt">)</span></div>
<div class="pre"><a id="l214" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l214" class="linenr"> 214 </a><span class="hl opt">(</span><span class="hl kwa">defvar</span> font-lock-string-face<span class="hl opt">)</span></div>
<div class="pre"><a id="l215" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l215" class="linenr"> 215 </a></div>
<div class="pre"><a id="l216" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l216" class="linenr"> 216 </a></div>
<div class="pre"><a id="l217" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l217" class="linenr"> 217 </a><span class="hl opt">(</span><span class="hl kwa">defgroup</span> sh nil</div>
<div class="pre"><a id="l218" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l218" class="linenr"> 218 </a>  <span class="hl str">&quot;Shell programming utilities.&quot;</span></div>
<div class="pre"><a id="l219" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l219" class="linenr"> 219 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>languages<span class="hl opt">)</span></div>
<div class="pre"><a id="l220" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l220" class="linenr"> 220 </a></div>
<div class="pre"><a id="l221" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l221" class="linenr"> 221 </a><span class="hl opt">(</span><span class="hl kwa">defgroup</span> sh-script nil</div>
<div class="pre"><a id="l222" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l222" class="linenr"> 222 </a>  <span class="hl str">&quot;Shell script mode.&quot;</span></div>
<div class="pre"><a id="l223" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l223" class="linenr"> 223 </a>  <span class="hl opt">:</span>link <span class="hl opt">'(</span><span class="hl kwa">custom-group-link</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;Font Lock Faces group&quot;</span> font-lock-faces<span class="hl opt">)</span></div>
<div class="pre"><a id="l224" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l224" class="linenr"> 224 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh</div>
<div class="pre"><a id="l225" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l225" class="linenr"> 225 </a>  <span class="hl opt">:</span>prefix <span class="hl str">&quot;sh-&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l226" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l226" class="linenr"> 226 </a></div>
<div class="pre"><a id="l227" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l227" class="linenr"> 227 </a></div>
<div class="pre"><a id="l228" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l228" class="linenr"> 228 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-ancestor-alist</div>
<div class="pre"><a id="l229" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l229" class="linenr"> 229 </a>  <span class="hl opt">'((</span><span class="hl kwa">ash</span> . sh<span class="hl opt">)</span></div>
<div class="pre"><a id="l230" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l230" class="linenr"> 230 </a>    <span class="hl opt">(</span><span class="hl kwa">bash</span> . jsh<span class="hl opt">)</span></div>
<div class="pre"><a id="l231" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l231" class="linenr"> 231 </a>    <span class="hl opt">(</span><span class="hl kwa">bash2</span> . jsh<span class="hl opt">)</span></div>
<div class="pre"><a id="l232" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l232" class="linenr"> 232 </a>    <span class="hl opt">(</span><span class="hl kwa">dash</span> . ash<span class="hl opt">)</span></div>
<div class="pre"><a id="l233" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l233" class="linenr"> 233 </a>    <span class="hl opt">(</span><span class="hl kwa">dtksh</span> . ksh<span class="hl opt">)</span></div>
<div class="pre"><a id="l234" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l234" class="linenr"> 234 </a>    <span class="hl opt">(</span><span class="hl kwa">es</span> . rc<span class="hl opt">)</span></div>
<div class="pre"><a id="l235" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l235" class="linenr"> 235 </a>    <span class="hl opt">(</span><span class="hl kwa">itcsh</span> . tcsh<span class="hl opt">)</span></div>
<div class="pre"><a id="l236" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l236" class="linenr"> 236 </a>    <span class="hl opt">(</span><span class="hl kwa">jcsh</span> . csh<span class="hl opt">)</span></div>
<div class="pre"><a id="l237" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l237" class="linenr"> 237 </a>    <span class="hl opt">(</span><span class="hl kwa">jsh</span> . sh<span class="hl opt">)</span></div>
<div class="pre"><a id="l238" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l238" class="linenr"> 238 </a>    <span class="hl opt">(</span><span class="hl kwa">ksh</span> . ksh88<span class="hl opt">)</span></div>
<div class="pre"><a id="l239" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l239" class="linenr"> 239 </a>    <span class="hl opt">(</span><span class="hl kwa">ksh88</span> . jsh<span class="hl opt">)</span></div>
<div class="pre"><a id="l240" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l240" class="linenr"> 240 </a>    <span class="hl opt">(</span><span class="hl kwa">oash</span> . sh<span class="hl opt">)</span></div>
<div class="pre"><a id="l241" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l241" class="linenr"> 241 </a>    <span class="hl opt">(</span><span class="hl kwa">pdksh</span> . ksh88<span class="hl opt">)</span></div>
<div class="pre"><a id="l242" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l242" class="linenr"> 242 </a>    <span class="hl opt">(</span><span class="hl kwa">mksh</span> . pdksh<span class="hl opt">)</span></div>
<div class="pre"><a id="l243" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l243" class="linenr"> 243 </a>    <span class="hl opt">(</span><span class="hl kwa">posix</span> . sh<span class="hl opt">)</span></div>
<div class="pre"><a id="l244" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l244" class="linenr"> 244 </a>    <span class="hl opt">(</span><span class="hl kwa">tcsh</span> . csh<span class="hl opt">)</span></div>
<div class="pre"><a id="l245" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l245" class="linenr"> 245 </a>    <span class="hl opt">(</span><span class="hl kwa">wksh</span> . ksh88<span class="hl opt">)</span></div>
<div class="pre"><a id="l246" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l246" class="linenr"> 246 </a>    <span class="hl opt">(</span><span class="hl kwa">wsh</span> . sh<span class="hl opt">)</span></div>
<div class="pre"><a id="l247" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l247" class="linenr"> 247 </a>    <span class="hl opt">(</span><span class="hl kwa">zsh</span> . ksh88<span class="hl opt">)</span></div>
<div class="pre"><a id="l248" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l248" class="linenr"> 248 </a>    <span class="hl opt">(</span><span class="hl kwa">rpm</span> . sh<span class="hl opt">))</span></div>
<div class="pre"><a id="l249" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l249" class="linenr"> 249 </a>  <span class="hl str">&quot;Alist showing the direct ancestor of various shells.</span></div>
<div class="pre"><a id="l250" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l250" class="linenr"> 250 </a><span class="hl str">This is the basis for `sh-feature'.  See also `sh-alias-alist'.</span></div>
<div class="pre"><a id="l251" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l251" class="linenr"> 251 </a><span class="hl str">By default we have the following three hierarchies:</span></div>
<div class="pre"><a id="l252" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l252" class="linenr"> 252 </a><span class="hl str"></span></div>
<div class="pre"><a id="l253" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l253" class="linenr"> 253 </a><span class="hl str">csh             C Shell</span></div>
<div class="pre"><a id="l254" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l254" class="linenr"> 254 </a><span class="hl str">  jcsh          C Shell with Job Control</span></div>
<div class="pre"><a id="l255" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l255" class="linenr"> 255 </a><span class="hl str">  tcsh          TENEX C Shell</span></div>
<div class="pre"><a id="l256" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l256" class="linenr"> 256 </a><span class="hl str">    itcsh       Ian's TENEX C Shell</span></div>
<div class="pre"><a id="l257" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l257" class="linenr"> 257 </a><span class="hl str">rc              Plan 9 Shell</span></div>
<div class="pre"><a id="l258" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l258" class="linenr"> 258 </a><span class="hl str">  es            Extensible Shell</span></div>
<div class="pre"><a id="l259" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l259" class="linenr"> 259 </a><span class="hl str">sh              Bourne Shell</span></div>
<div class="pre"><a id="l260" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l260" class="linenr"> 260 </a><span class="hl str">  ash           Almquist Shell</span></div>
<div class="pre"><a id="l261" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l261" class="linenr"> 261 </a><span class="hl str">    dash        Debian Almquist Shell</span></div>
<div class="pre"><a id="l262" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l262" class="linenr"> 262 </a><span class="hl str">  jsh           Bourne Shell with Job Control</span></div>
<div class="pre"><a id="l263" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l263" class="linenr"> 263 </a><span class="hl str">    bash        GNU Bourne Again Shell</span></div>
<div class="pre"><a id="l264" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l264" class="linenr"> 264 </a><span class="hl str">    ksh88       Korn Shell '88</span></div>
<div class="pre"><a id="l265" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l265" class="linenr"> 265 </a><span class="hl str">      ksh       Korn Shell '93</span></div>
<div class="pre"><a id="l266" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l266" class="linenr"> 266 </a><span class="hl str">        dtksh   CDE Desktop Korn Shell</span></div>
<div class="pre"><a id="l267" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l267" class="linenr"> 267 </a><span class="hl str">      pdksh     Public Domain Korn Shell</span></div>
<div class="pre"><a id="l268" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l268" class="linenr"> 268 </a><span class="hl str">        mksh    MirOS BSD Korn Shell</span></div>
<div class="pre"><a id="l269" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l269" class="linenr"> 269 </a><span class="hl str">      wksh      Window Korn Shell</span></div>
<div class="pre"><a id="l270" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l270" class="linenr"> 270 </a><span class="hl str">      zsh       Z Shell</span></div>
<div class="pre"><a id="l271" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l271" class="linenr"> 271 </a><span class="hl str">  oash          SCO OA (curses) Shell</span></div>
<div class="pre"><a id="l272" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l272" class="linenr"> 272 </a><span class="hl str">  posix         IEEE 1003.2 Shell Standard</span></div>
<div class="pre"><a id="l273" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l273" class="linenr"> 273 </a><span class="hl str">  wsh           ? Shell&quot;</span></div>
<div class="pre"><a id="l274" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l274" class="linenr"> 274 </a>  <span class="hl opt">:</span>type <span class="hl opt">'(</span><span class="hl kwa">repeat</span> <span class="hl opt">(</span><span class="hl kwa">cons</span> symbol symbol<span class="hl opt">))</span></div>
<div class="pre"><a id="l275" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l275" class="linenr"> 275 </a>  <span class="hl opt">:</span>version <span class="hl str">&quot;24.4&quot;</span>                       <span class="hl slc">; added dash</span></div>
<div class="pre"><a id="l276" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l276" class="linenr"> 276 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-script<span class="hl opt">)</span></div>
<div class="pre"><a id="l277" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l277" class="linenr"> 277 </a></div>
<div class="pre"><a id="l278" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l278" class="linenr"> 278 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-alias-alist</div>
<div class="pre"><a id="l279" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l279" class="linenr"> 279 </a>  <span class="hl opt">(</span><span class="hl kwa">append</span> <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> system-type <span class="hl opt">'</span>gnu<span class="hl opt">/</span>linux<span class="hl opt">)</span></div>
<div class="pre"><a id="l280" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l280" class="linenr"> 280 </a>             <span class="hl opt">'((</span><span class="hl kwa">csh</span> . tcsh<span class="hl opt">)</span></div>
<div class="pre"><a id="l281" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l281" class="linenr"> 281 </a>               <span class="hl opt">(</span><span class="hl kwa">ksh</span> . pdksh<span class="hl opt">)))</span></div>
<div class="pre"><a id="l282" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l282" class="linenr"> 282 </a>         <span class="hl slc">;; for the time being</span></div>
<div class="pre"><a id="l283" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l283" class="linenr"> 283 </a>         <span class="hl opt">'((</span><span class="hl kwa">ksh</span> . ksh88<span class="hl opt">)</span></div>
<div class="pre"><a id="l284" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l284" class="linenr"> 284 </a>           <span class="hl opt">(</span><span class="hl kwa">bash2</span> . bash<span class="hl opt">)</span></div>
<div class="pre"><a id="l285" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l285" class="linenr"> 285 </a>           <span class="hl opt">(</span><span class="hl kwa">sh5</span> . sh<span class="hl opt">)</span></div>
<div class="pre"><a id="l286" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l286" class="linenr"> 286 </a>           <span class="hl slc">;; Android's system shell</span></div>
<div class="pre"><a id="l287" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l287" class="linenr"> 287 </a>           <span class="hl opt">(</span><span class="hl str">&quot;^/system/bin/sh$&quot;</span> . mksh<span class="hl opt">)))</span></div>
<div class="pre"><a id="l288" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l288" class="linenr"> 288 </a>  <span class="hl str">&quot;Alist for transforming shell names to what they really are.</span></div>
<div class="pre"><a id="l289" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l289" class="linenr"> 289 </a><span class="hl str">Use this where the name of the executable doesn't correspond to</span></div>
<div class="pre"><a id="l290" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l290" class="linenr"> 290 </a><span class="hl str">the type of shell it really is.  Keys are regular expressions</span></div>
<div class="pre"><a id="l291" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l291" class="linenr"> 291 </a><span class="hl str">matched against the full path of the interpreter.  (For backward</span></div>
<div class="pre"><a id="l292" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l292" class="linenr"> 292 </a><span class="hl str">compatibility, keys may also be symbols, which are matched</span></div>
<div class="pre"><a id="l293" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l293" class="linenr"> 293 </a><span class="hl str">against the interpreter's basename.  The values are symbols</span></div>
<div class="pre"><a id="l294" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l294" class="linenr"> 294 </a><span class="hl str">naming the shell.&quot;</span></div>
<div class="pre"><a id="l295" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l295" class="linenr"> 295 </a>  <span class="hl opt">:</span>type <span class="hl opt">'(</span><span class="hl kwa">repeat</span> <span class="hl opt">(</span><span class="hl kwa">cons</span> <span class="hl opt">(</span><span class="hl kwa">radio</span></div>
<div class="pre"><a id="l296" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l296" class="linenr"> 296 </a>                        <span class="hl opt">(</span><span class="hl kwa">regexp</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;Regular expression&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l297" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l297" class="linenr"> 297 </a>                        <span class="hl opt">(</span><span class="hl kwa">symbol</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;Basename&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l298" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l298" class="linenr"> 298 </a>                       <span class="hl opt">(</span><span class="hl kwa">symbol</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;Shell&quot;</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l299" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l299" class="linenr"> 299 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-script<span class="hl opt">)</span></div>
<div class="pre"><a id="l300" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l300" class="linenr"> 300 </a></div>
<div class="pre"><a id="l301" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l301" class="linenr"> 301 </a></div>
<div class="pre"><a id="l302" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l302" class="linenr"> 302 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-shell-file</div>
<div class="pre"><a id="l303" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l303" class="linenr"> 303 </a>  <span class="hl opt">(</span><span class="hl kwa">or</span></div>
<div class="pre"><a id="l304" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l304" class="linenr"> 304 </a>   <span class="hl slc">;; On MSDOS and Windows, collapse $SHELL to lower-case and remove</span></div>
<div class="pre"><a id="l305" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l305" class="linenr"> 305 </a>   <span class="hl slc">;; the executable extension, so comparisons with the list of</span></div>
<div class="pre"><a id="l306" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l306" class="linenr"> 306 </a>   <span class="hl slc">;; known shells work.</span></div>
<div class="pre"><a id="l307" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l307" class="linenr"> 307 </a>   <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">memq</span> system-type <span class="hl opt">'(</span><span class="hl kwa">ms-dos</span> windows-nt<span class="hl opt">))</span></div>
<div class="pre"><a id="l308" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l308" class="linenr"> 308 </a>        <span class="hl opt">(</span><span class="hl kwa">let</span><span class="hl opt">* ((</span><span class="hl kwa">shell</span> <span class="hl opt">(</span><span class="hl kwa">getenv</span> <span class="hl str">&quot;SHELL&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l309" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l309" class="linenr"> 309 </a>               <span class="hl opt">(</span><span class="hl kwa">shell-base</span></div>
<div class="pre"><a id="l310" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l310" class="linenr"> 310 </a>                <span class="hl opt">(</span><span class="hl kwa">and</span> shell <span class="hl opt">(</span><span class="hl kwa">file-name-nondirectory</span> shell<span class="hl opt">))))</span></div>
<div class="pre"><a id="l311" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l311" class="linenr"> 311 </a>          <span class="hl slc">;; shell-script mode doesn't support DOS/Windows shells,</span></div>
<div class="pre"><a id="l312" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l312" class="linenr"> 312 </a>          <span class="hl slc">;; so use the default instead.</span></div>
<div class="pre"><a id="l313" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l313" class="linenr"> 313 </a>          <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">null</span> shell<span class="hl opt">)</span></div>
<div class="pre"><a id="l314" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l314" class="linenr"> 314 </a>                  <span class="hl opt">(</span><span class="hl kwa">member</span> <span class="hl opt">(</span><span class="hl kwa">downcase</span> shell-base<span class="hl opt">)</span></div>
<div class="pre"><a id="l315" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l315" class="linenr"> 315 </a>                          <span class="hl opt">'(</span><span class="hl str">&quot;command.com&quot;</span> <span class="hl str">&quot;cmd.exe&quot;</span> <span class="hl str">&quot;4dos.com&quot;</span> <span class="hl str">&quot;ndos.com&quot;</span></div>
<div class="pre"><a id="l316" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l316" class="linenr"> 316 </a>                            <span class="hl str">&quot;cmdproxy.exe&quot;</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l317" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l317" class="linenr"> 317 </a>              <span class="hl str">&quot;/bin/sh&quot;</span></div>
<div class="pre"><a id="l318" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l318" class="linenr"> 318 </a>            <span class="hl opt">(</span><span class="hl kwa">file-name-sans-extension</span> <span class="hl opt">(</span><span class="hl kwa">downcase</span> shell<span class="hl opt">)))))</span></div>
<div class="pre"><a id="l319" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l319" class="linenr"> 319 </a>   <span class="hl opt">(</span><span class="hl kwa">getenv</span> <span class="hl str">&quot;SHELL&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l320" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l320" class="linenr"> 320 </a>   <span class="hl str">&quot;/bin/sh&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l321" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l321" class="linenr"> 321 </a>  <span class="hl str">&quot;The executable file name for the shell being programmed.&quot;</span></div>
<div class="pre"><a id="l322" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l322" class="linenr"> 322 </a>  <span class="hl opt">:</span>type <span class="hl opt">'</span>string</div>
<div class="pre"><a id="l323" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l323" class="linenr"> 323 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-script<span class="hl opt">)</span></div>
<div class="pre"><a id="l324" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l324" class="linenr"> 324 </a></div>
<div class="pre"><a id="l325" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l325" class="linenr"> 325 </a></div>
<div class="pre"><a id="l326" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l326" class="linenr"> 326 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-shell-arg</div>
<div class="pre"><a id="l327" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l327" class="linenr"> 327 </a>  <span class="hl slc">;; bash does not need any options when run in a shell script,</span></div>
<div class="pre"><a id="l328" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l328" class="linenr"> 328 </a>  <span class="hl opt">'((</span><span class="hl kwa">bash</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l329" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l329" class="linenr"> 329 </a>    <span class="hl opt">(</span><span class="hl kwa">csh</span> . <span class="hl str">&quot;-f&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l330" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l330" class="linenr"> 330 </a>    <span class="hl opt">(</span><span class="hl kwa">pdksh</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l331" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l331" class="linenr"> 331 </a>    <span class="hl slc">;; Bill_Mann&#64;praxisint.com says -p with ksh can do harm.</span></div>
<div class="pre"><a id="l332" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l332" class="linenr"> 332 </a>    <span class="hl opt">(</span><span class="hl kwa">ksh88</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l333" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l333" class="linenr"> 333 </a>    <span class="hl slc">;; -p means don't initialize functions from the environment.</span></div>
<div class="pre"><a id="l334" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l334" class="linenr"> 334 </a>    <span class="hl opt">(</span><span class="hl kwa">rc</span> . <span class="hl str">&quot;-p&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l335" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l335" class="linenr"> 335 </a>    <span class="hl slc">;; Someone proposed -motif, but we don't want to encourage</span></div>
<div class="pre"><a id="l336" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l336" class="linenr"> 336 </a>    <span class="hl slc">;; use of a non-free widget set.</span></div>
<div class="pre"><a id="l337" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l337" class="linenr"> 337 </a>    <span class="hl opt">(</span><span class="hl kwa">wksh</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l338" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l338" class="linenr"> 338 </a>    <span class="hl slc">;; -f means don't run .zshrc.</span></div>
<div class="pre"><a id="l339" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l339" class="linenr"> 339 </a>    <span class="hl opt">(</span><span class="hl kwa">zsh</span> . <span class="hl str">&quot;-f&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l340" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l340" class="linenr"> 340 </a>  <span class="hl str">&quot;Single argument string for the magic number.  See `sh-feature'.&quot;</span></div>
<div class="pre"><a id="l341" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l341" class="linenr"> 341 </a>  <span class="hl opt">:</span>type <span class="hl opt">'(</span><span class="hl kwa">repeat</span> <span class="hl opt">(</span><span class="hl kwa">cons</span> <span class="hl opt">(</span><span class="hl kwa">symbol</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;Shell&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l342" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l342" class="linenr"> 342 </a>                       <span class="hl opt">(</span><span class="hl kwa">choice</span> <span class="hl opt">(</span><span class="hl kwa">const</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;No Arguments&quot;</span> nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l343" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l343" class="linenr"> 343 </a>                               <span class="hl opt">(</span><span class="hl kwa">string</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;Arguments&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l344" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l344" class="linenr"> 344 </a>                               <span class="hl opt">(</span><span class="hl kwa">sexp</span> <span class="hl opt">:</span>format <span class="hl str">&quot;Evaluate: %v&quot;</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l345" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l345" class="linenr"> 345 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-script<span class="hl opt">)</span></div>
<div class="pre"><a id="l346" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l346" class="linenr"> 346 </a></div>
<div class="pre"><a id="l347" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l347" class="linenr"> 347 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-imenu-generic-expression</div>
<div class="pre"><a id="l348" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l348" class="linenr"> 348 </a>  <span class="hl opt">`((</span><span class="hl kwa">sh</span></div>
<div class="pre"><a id="l349" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l349" class="linenr"> 349 </a>     . <span class="hl opt">((</span><span class="hl kwa">nil</span></div>
<div class="pre"><a id="l350" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l350" class="linenr"> 350 </a>         <span class="hl slc">;; function FOO</span></div>
<div class="pre"><a id="l351" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l351" class="linenr"> 351 </a>         <span class="hl slc">;; function FOO()</span></div>
<div class="pre"><a id="l352" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l352" class="linenr"> 352 </a>         <span class="hl str">&quot;^</span><span class="hl esc">\\</span><span class="hl str">s-*function</span><span class="hl esc">\\</span><span class="hl str">s-+</span><span class="hl esc">\\</span><span class="hl str">([[:alpha:]_][[:alnum:]_]*</span><span class="hl esc">\\</span><span class="hl str">)</span><span class="hl esc">\\</span><span class="hl str">s-*</span><span class="hl esc">\\</span><span class="hl str">(?:()</span><span class="hl esc">\\</span><span class="hl str">)?&quot;</span></div>
<div class="pre"><a id="l353" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l353" class="linenr"> 353 </a>         <span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l354" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l354" class="linenr"> 354 </a>        <span class="hl slc">;; FOO()</span></div>
<div class="pre"><a id="l355" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l355" class="linenr"> 355 </a>        <span class="hl opt">(</span><span class="hl kwa">nil</span></div>
<div class="pre"><a id="l356" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l356" class="linenr"> 356 </a>         <span class="hl str">&quot;^</span><span class="hl esc">\\</span><span class="hl str">s-*</span><span class="hl esc">\\</span><span class="hl str">([[:alpha:]_][[:alnum:]_]*</span><span class="hl esc">\\</span><span class="hl str">)</span><span class="hl esc">\\</span><span class="hl str">s-*()&quot;</span></div>
<div class="pre"><a id="l357" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l357" class="linenr"> 357 </a>         <span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l358" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l358" class="linenr"> 358 </a>        <span class="hl opt">)))</span></div>
<div class="pre"><a id="l359" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l359" class="linenr"> 359 </a>  <span class="hl str">&quot;Alist of regular expressions for recognizing shell function definitions.</span></div>
<div class="pre"><a id="l360" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l360" class="linenr"> 360 </a><span class="hl str">See `sh-feature' and `imenu-generic-expression'.&quot;</span></div>
<div class="pre"><a id="l361" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l361" class="linenr"> 361 </a>  <span class="hl opt">:</span>type <span class="hl opt">'(</span><span class="hl kwa">alist</span> <span class="hl opt">:</span>key-type <span class="hl opt">(</span><span class="hl kwa">symbol</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;Shell&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l362" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l362" class="linenr"> 362 </a>                <span class="hl opt">:</span>value-type <span class="hl opt">(</span><span class="hl kwa">alist</span> <span class="hl opt">:</span>key-type <span class="hl opt">(</span><span class="hl kwa">choice</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;Title&quot;</span></div>
<div class="pre"><a id="l363" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l363" class="linenr"> 363 </a>                                                     string</div>
<div class="pre"><a id="l364" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l364" class="linenr"> 364 </a>                                                     <span class="hl opt">(</span><span class="hl kwa">const</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;None&quot;</span> nil<span class="hl opt">))</span></div>
<div class="pre"><a id="l365" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l365" class="linenr"> 365 </a>                                   <span class="hl opt">:</span>value-type</div>
<div class="pre"><a id="l366" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l366" class="linenr"> 366 </a>                                   <span class="hl opt">(</span><span class="hl kwa">repeat</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;Regexp, index...&quot;</span> sexp<span class="hl opt">)))</span></div>
<div class="pre"><a id="l367" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l367" class="linenr"> 367 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-script</div>
<div class="pre"><a id="l368" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l368" class="linenr"> 368 </a>  <span class="hl opt">:</span>version <span class="hl str">&quot;20.4&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l369" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l369" class="linenr"> 369 </a></div>
<div class="pre"><a id="l370" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l370" class="linenr"> 370 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-current-defun-name <span class="hl opt">()</span></div>
<div class="pre"><a id="l371" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l371" class="linenr"> 371 </a>  <span class="hl str">&quot;Find the name of function or variable at point.</span></div>
<div class="pre"><a id="l372" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l372" class="linenr"> 372 </a><span class="hl str">For use in `add-log-current-defun-function'.&quot;</span></div>
<div class="pre"><a id="l373" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l373" class="linenr"> 373 </a>  <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l374" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l374" class="linenr"> 374 </a>    <span class="hl opt">(</span><span class="hl kwa">end-of-line</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l375" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l375" class="linenr"> 375 </a>    <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">re-search-backward</span></div>
<div class="pre"><a id="l376" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l376" class="linenr"> 376 </a>           <span class="hl opt">(</span><span class="hl kwa">concat</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">(?:&quot;</span></div>
<div class="pre"><a id="l377" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l377" class="linenr"> 377 </a>                   <span class="hl slc">;; function FOO</span></div>
<div class="pre"><a id="l378" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l378" class="linenr"> 378 </a>                   <span class="hl slc">;; function FOO()</span></div>
<div class="pre"><a id="l379" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l379" class="linenr"> 379 </a>                   <span class="hl str">&quot;^</span><span class="hl esc">\\</span><span class="hl str">s-*function</span><span class="hl esc">\\</span><span class="hl str">s-+</span><span class="hl esc">\\</span><span class="hl str">([[:alpha:]_][[:alnum:]_]*</span><span class="hl esc">\\</span><span class="hl str">)</span><span class="hl esc">\\</span><span class="hl str">s-*</span><span class="hl esc">\\</span><span class="hl str">(?:()</span><span class="hl esc">\\</span><span class="hl str">)?&quot;</span></div>
<div class="pre"><a id="l380" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l380" class="linenr"> 380 </a>                   <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">)</span><span class="hl esc">\\</span><span class="hl str">|</span><span class="hl esc">\\</span><span class="hl str">(?:&quot;</span></div>
<div class="pre"><a id="l381" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l381" class="linenr"> 381 </a>                   <span class="hl slc">;; FOO()</span></div>
<div class="pre"><a id="l382" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l382" class="linenr"> 382 </a>                   <span class="hl str">&quot;^</span><span class="hl esc">\\</span><span class="hl str">s-*</span><span class="hl esc">\\</span><span class="hl str">([[:alpha:]_][[:alnum:]_]*</span><span class="hl esc">\\</span><span class="hl str">)</span><span class="hl esc">\\</span><span class="hl str">s-*()&quot;</span></div>
<div class="pre"><a id="l383" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l383" class="linenr"> 383 </a>                   <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">)</span><span class="hl esc">\\</span><span class="hl str">|</span><span class="hl esc">\\</span><span class="hl str">(?:&quot;</span></div>
<div class="pre"><a id="l384" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l384" class="linenr"> 384 </a>                   <span class="hl slc">;; FOO=</span></div>
<div class="pre"><a id="l385" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l385" class="linenr"> 385 </a>                   <span class="hl str">&quot;^</span><span class="hl esc">\\</span><span class="hl str">([[:alpha:]_][[:alnum:]_]*</span><span class="hl esc">\\</span><span class="hl str">)=&quot;</span></div>
<div class="pre"><a id="l386" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l386" class="linenr"> 386 </a>                   <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">)&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l387" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l387" class="linenr"> 387 </a>           nil t<span class="hl opt">)</span></div>
<div class="pre"><a id="l388" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l388" class="linenr"> 388 </a>      <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">match-string-no-properties</span> <span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l389" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l389" class="linenr"> 389 </a>          <span class="hl opt">(</span><span class="hl kwa">match-string-no-properties</span> <span class="hl num">2</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l390" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l390" class="linenr"> 390 </a>          <span class="hl opt">(</span><span class="hl kwa">match-string-no-properties</span> <span class="hl num">3</span><span class="hl opt">)))))</span></div>
<div class="pre"><a id="l391" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l391" class="linenr"> 391 </a></div>
<div class="pre"><a id="l392" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l392" class="linenr"> 392 </a><span class="hl opt">(</span><span class="hl kwa">defvar</span> sh-shell-variables nil</div>
<div class="pre"><a id="l393" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l393" class="linenr"> 393 </a>  <span class="hl str">&quot;Alist of shell variable names that should be included in completion.</span></div>
<div class="pre"><a id="l394" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l394" class="linenr"> 394 </a><span class="hl str">These are used for completion in addition to all the variables named</span></div>
<div class="pre"><a id="l395" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l395" class="linenr"> 395 </a><span class="hl str">in `process-environment'.  Each element looks like (VAR . VAR), where</span></div>
<div class="pre"><a id="l396" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l396" class="linenr"> 396 </a><span class="hl str">the car and cdr are the same symbol.&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l397" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l397" class="linenr"> 397 </a></div>
<div class="pre"><a id="l398" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l398" class="linenr"> 398 </a><span class="hl opt">(</span><span class="hl kwa">defvar</span> sh-shell-variables-initialized nil</div>
<div class="pre"><a id="l399" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l399" class="linenr"> 399 </a>  <span class="hl str">&quot;Non-nil if `sh-shell-variables' is initialized.&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l400" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l400" class="linenr"> 400 </a></div>
<div class="pre"><a id="l401" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l401" class="linenr"> 401 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-canonicalize-shell <span class="hl opt">(</span><span class="hl kwa">shell</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l402" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l402" class="linenr"> 402 </a>  <span class="hl str">&quot;Convert a shell name SHELL to the one we should handle it as.</span></div>
<div class="pre"><a id="l403" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l403" class="linenr"> 403 </a><span class="hl str">SHELL is a full path to the shell interpreter; return a shell</span></div>
<div class="pre"><a id="l404" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l404" class="linenr"> 404 </a><span class="hl str">name symbol.&quot;</span></div>
<div class="pre"><a id="l405" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l405" class="linenr"> 405 </a>  <span class="hl opt">(</span><span class="hl kwa">cl-loop</span></div>
<div class="pre"><a id="l406" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l406" class="linenr"> 406 </a>     with shell <span class="hl opt">= (</span><span class="hl kwa">cond</span> <span class="hl opt">((</span><span class="hl kwa">string-match</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">.exe</span><span class="hl esc">\\</span><span class="hl str">'&quot;</span> shell<span class="hl opt">)</span></div>
<div class="pre"><a id="l407" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l407" class="linenr"> 407 </a>                         <span class="hl opt">(</span><span class="hl kwa">substring</span> shell <span class="hl num">0</span> <span class="hl opt">(</span><span class="hl kwa">match-beginning</span> <span class="hl num">0</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l408" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l408" class="linenr"> 408 </a>                        <span class="hl opt">(</span><span class="hl kwa">t</span> shell<span class="hl opt">))</span></div>
<div class="pre"><a id="l409" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l409" class="linenr"> 409 </a>     with shell-base <span class="hl opt">= (</span><span class="hl kwa">intern</span> <span class="hl opt">(</span><span class="hl kwa">file-name-nondirectory</span> shell<span class="hl opt">))</span></div>
<div class="pre"><a id="l410" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l410" class="linenr"> 410 </a>     for <span class="hl opt">(</span><span class="hl kwa">key</span> . value<span class="hl opt">)</span> in sh-alias-alist</div>
<div class="pre"><a id="l411" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l411" class="linenr"> 411 </a>     if <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">stringp</span> key<span class="hl opt">) (</span><span class="hl kwa">string-match</span> key shell<span class="hl opt">))</span> return value</div>
<div class="pre"><a id="l412" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l412" class="linenr"> 412 </a>     if <span class="hl opt">(</span><span class="hl kwa">eq</span> key shell-base<span class="hl opt">)</span> return value</div>
<div class="pre"><a id="l413" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l413" class="linenr"> 413 </a>     finally return shell-base<span class="hl opt">))</span></div>
<div class="pre"><a id="l414" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l414" class="linenr"> 414 </a></div>
<div class="pre"><a id="l415" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l415" class="linenr"> 415 </a><span class="hl opt">(</span><span class="hl kwa">defvar</span> sh-shell <span class="hl opt">(</span><span class="hl kwa">sh-canonicalize-shell</span> sh-shell-file<span class="hl opt">)</span></div>
<div class="pre"><a id="l416" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l416" class="linenr"> 416 </a>  <span class="hl str">&quot;The shell being programmed.  This is set by</span> <span class="hl esc">\\</span><span class="hl str">[sh-set-shell].&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l417" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l417" class="linenr"> 417 </a><span class="hl slc">;;;###autoload(put 'sh-shell 'safe-local-variable 'symbolp)</span></div>
<div class="pre"><a id="l418" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l418" class="linenr"> 418 </a></div>
<div class="pre"><a id="l419" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l419" class="linenr"> 419 </a><span class="hl opt">(</span><span class="hl kwa">define-abbrev-table</span> <span class="hl opt">'</span>sh-mode-abbrev-table <span class="hl opt">())</span></div>
<div class="pre"><a id="l420" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l420" class="linenr"> 420 </a></div>
<div class="pre"><a id="l421" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l421" class="linenr"> 421 </a></div>
<div class="pre"><a id="l422" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l422" class="linenr"> 422 </a><span class="hl slc">;; I turned off this feature because it doesn't permit typing commands</span></div>
<div class="pre"><a id="l423" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l423" class="linenr"> 423 </a><span class="hl slc">;; in the usual way without help.</span></div>
<div class="pre"><a id="l424" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l424" class="linenr"> 424 </a><span class="hl slc">;;(defvar sh-abbrevs</span></div>
<div class="pre"><a id="l425" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l425" class="linenr"> 425 </a><span class="hl slc">;;  '((csh sh-abbrevs shell</span></div>
<div class="pre"><a id="l426" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l426" class="linenr"> 426 </a><span class="hl slc">;;       &quot;switch&quot; 'sh-case</span></div>
<div class="pre"><a id="l427" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l427" class="linenr"> 427 </a><span class="hl slc">;;       &quot;getopts&quot; 'sh-while-getopts)</span></div>
<div class="pre"><a id="l428" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l428" class="linenr"> 428 </a></div>
<div class="pre"><a id="l429" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l429" class="linenr"> 429 </a><span class="hl slc">;;    (es sh-abbrevs shell</span></div>
<div class="pre"><a id="l430" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l430" class="linenr"> 430 </a><span class="hl slc">;;      &quot;function&quot; 'sh-function)</span></div>
<div class="pre"><a id="l431" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l431" class="linenr"> 431 </a></div>
<div class="pre"><a id="l432" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l432" class="linenr"> 432 </a><span class="hl slc">;;    (ksh88 sh-abbrevs sh</span></div>
<div class="pre"><a id="l433" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l433" class="linenr"> 433 </a><span class="hl slc">;;         &quot;select&quot; 'sh-select)</span></div>
<div class="pre"><a id="l434" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l434" class="linenr"> 434 </a></div>
<div class="pre"><a id="l435" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l435" class="linenr"> 435 </a><span class="hl slc">;;    (rc sh-abbrevs shell</span></div>
<div class="pre"><a id="l436" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l436" class="linenr"> 436 </a><span class="hl slc">;;      &quot;case&quot; 'sh-case</span></div>
<div class="pre"><a id="l437" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l437" class="linenr"> 437 </a><span class="hl slc">;;      &quot;function&quot; 'sh-function)</span></div>
<div class="pre"><a id="l438" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l438" class="linenr"> 438 </a></div>
<div class="pre"><a id="l439" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l439" class="linenr"> 439 </a><span class="hl slc">;;    (sh sh-abbrevs shell</span></div>
<div class="pre"><a id="l440" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l440" class="linenr"> 440 </a><span class="hl slc">;;      &quot;case&quot; 'sh-case</span></div>
<div class="pre"><a id="l441" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l441" class="linenr"> 441 </a><span class="hl slc">;;      &quot;function&quot; 'sh-function</span></div>
<div class="pre"><a id="l442" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l442" class="linenr"> 442 </a><span class="hl slc">;;      &quot;until&quot; 'sh-until</span></div>
<div class="pre"><a id="l443" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l443" class="linenr"> 443 </a><span class="hl slc">;;      &quot;getopts&quot; 'sh-while-getopts)</span></div>
<div class="pre"><a id="l444" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l444" class="linenr"> 444 </a></div>
<div class="pre"><a id="l445" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l445" class="linenr"> 445 </a><span class="hl slc">;;    ;; The next entry is only used for defining the others</span></div>
<div class="pre"><a id="l446" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l446" class="linenr"> 446 </a><span class="hl slc">;;    (shell &quot;for&quot; sh-for</span></div>
<div class="pre"><a id="l447" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l447" class="linenr"> 447 </a><span class="hl slc">;;         &quot;loop&quot; sh-indexed-loop</span></div>
<div class="pre"><a id="l448" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l448" class="linenr"> 448 </a><span class="hl slc">;;         &quot;if&quot; sh-if</span></div>
<div class="pre"><a id="l449" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l449" class="linenr"> 449 </a><span class="hl slc">;;         &quot;tmpfile&quot; sh-tmp-file</span></div>
<div class="pre"><a id="l450" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l450" class="linenr"> 450 </a><span class="hl slc">;;         &quot;while&quot; sh-while)</span></div>
<div class="pre"><a id="l451" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l451" class="linenr"> 451 </a></div>
<div class="pre"><a id="l452" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l452" class="linenr"> 452 </a><span class="hl slc">;;    (zsh sh-abbrevs ksh88</span></div>
<div class="pre"><a id="l453" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l453" class="linenr"> 453 </a><span class="hl slc">;;       &quot;repeat&quot; 'sh-repeat))</span></div>
<div class="pre"><a id="l454" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l454" class="linenr"> 454 </a><span class="hl slc">;;  &quot;Abbrev-table used in Shell-Script mode.  See `sh-feature'.</span></div>
<div class="pre"><a id="l455" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l455" class="linenr"> 455 </a><span class="hl slc">;;;Due to the internal workings of abbrev tables, the shell name symbol is</span></div>
<div class="pre"><a id="l456" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l456" class="linenr"> 456 </a><span class="hl slc">;;;actually defined as the table for the like of \\[edit-abbrevs].&quot;)</span></div>
<div class="pre"><a id="l457" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l457" class="linenr"> 457 </a></div>
<div class="pre"><a id="l458" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l458" class="linenr"> 458 </a></div>
<div class="pre"><a id="l459" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l459" class="linenr"> 459 </a></div>
<div class="pre"><a id="l460" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l460" class="linenr"> 460 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-mode-syntax-table <span class="hl opt">(</span><span class="hl kwa">table</span> <span class="hl opt">&amp;</span>rest list<span class="hl opt">)</span></div>
<div class="pre"><a id="l461" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l461" class="linenr"> 461 </a>  <span class="hl str">&quot;Copy TABLE and set syntax for successive CHARs according to strings S.&quot;</span></div>
<div class="pre"><a id="l462" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l462" class="linenr"> 462 </a>  <span class="hl opt">(</span><span class="hl kwa">setq</span> table <span class="hl opt">(</span><span class="hl kwa">copy-syntax-table</span> table<span class="hl opt">))</span></div>
<div class="pre"><a id="l463" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l463" class="linenr"> 463 </a>  <span class="hl opt">(</span><span class="hl kwa">while</span> list</div>
<div class="pre"><a id="l464" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l464" class="linenr"> 464 </a>    <span class="hl opt">(</span><span class="hl kwa">modify-syntax-entry</span> <span class="hl opt">(</span><span class="hl kwa">pop</span> list<span class="hl opt">) (</span><span class="hl kwa">pop</span> list<span class="hl opt">)</span> table<span class="hl opt">))</span></div>
<div class="pre"><a id="l465" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l465" class="linenr"> 465 </a>  table<span class="hl opt">)</span></div>
<div class="pre"><a id="l466" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l466" class="linenr"> 466 </a></div>
<div class="pre"><a id="l467" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l467" class="linenr"> 467 </a><span class="hl opt">(</span><span class="hl kwa">defvar</span> sh-mode-syntax-table</div>
<div class="pre"><a id="l468" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l468" class="linenr"> 468 </a>  <span class="hl opt">(</span><span class="hl kwa">sh-mode-syntax-table</span> <span class="hl opt">()</span></div>
<div class="pre"><a id="l469" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l469" class="linenr"> 469 </a>        ?\<span class="hl opt">#</span> <span class="hl str">&quot;&lt;&quot;</span></div>
<div class="pre"><a id="l470" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l470" class="linenr"> 470 </a>        ?<span class="hl esc">\n</span> <span class="hl str">&quot;&gt;#&quot;</span></div>
<div class="pre"><a id="l471" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l471" class="linenr"> 471 </a>        ?<span class="hl esc">\&quot;</span> <span class="hl str">&quot;</span><span class="hl esc">\&quot;\&quot;</span><span class="hl str">&quot;</span></div>
<div class="pre"><a id="l472" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l472" class="linenr"> 472 </a>        ?<span class="hl esc">\'</span> <span class="hl str">&quot;</span><span class="hl esc">\&quot;</span><span class="hl str">'&quot;</span></div>
<div class="pre"><a id="l473" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l473" class="linenr"> 473 </a>        ?\<span class="hl opt">`</span> <span class="hl str">&quot;</span><span class="hl esc">\&quot;</span><span class="hl str">`&quot;</span></div>
<div class="pre"><a id="l474" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l474" class="linenr"> 474 </a>        <span class="hl slc">;; ?$ might also have a &quot;. p&quot; syntax. Both &quot;'&quot; and &quot;. p&quot; seem</span></div>
<div class="pre"><a id="l475" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l475" class="linenr"> 475 </a>        <span class="hl slc">;; to work fine. This is needed so that dabbrev-expand</span></div>
<div class="pre"><a id="l476" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l476" class="linenr"> 476 </a>        <span class="hl slc">;; $VARNAME works.</span></div>
<div class="pre"><a id="l477" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l477" class="linenr"> 477 </a>        ?$ <span class="hl str">&quot;'&quot;</span></div>
<div class="pre"><a id="l478" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l478" class="linenr"> 478 </a>        ?<span class="hl opt">!</span> <span class="hl str">&quot;_&quot;</span></div>
<div class="pre"><a id="l479" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l479" class="linenr"> 479 </a>        ?% <span class="hl str">&quot;_&quot;</span></div>
<div class="pre"><a id="l480" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l480" class="linenr"> 480 </a>        ?<span class="hl opt">:</span> <span class="hl str">&quot;_&quot;</span></div>
<div class="pre"><a id="l481" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l481" class="linenr"> 481 </a>        ?. <span class="hl str">&quot;_&quot;</span></div>
<div class="pre"><a id="l482" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l482" class="linenr"> 482 </a>        ?^ <span class="hl str">&quot;_&quot;</span></div>
<div class="pre"><a id="l483" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l483" class="linenr"> 483 </a>        ?~ <span class="hl str">&quot;_&quot;</span></div>
<div class="pre"><a id="l484" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l484" class="linenr"> 484 </a>        ?<span class="hl opt">,</span> <span class="hl str">&quot;_&quot;</span></div>
<div class="pre"><a id="l485" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l485" class="linenr"> 485 </a>        ?<span class="hl opt">=</span> <span class="hl str">&quot;.&quot;</span></div>
<div class="pre"><a id="l486" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l486" class="linenr"> 486 </a>        ?\<span class="hl slc">; &quot;.&quot;</span></div>
<div class="pre"><a id="l487" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l487" class="linenr"> 487 </a>        ?| <span class="hl str">&quot;.&quot;</span></div>
<div class="pre"><a id="l488" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l488" class="linenr"> 488 </a>        ?<span class="hl opt">&amp;</span> <span class="hl str">&quot;.&quot;</span></div>
<div class="pre"><a id="l489" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l489" class="linenr"> 489 </a>        ?<span class="hl opt">&lt;</span> <span class="hl str">&quot;.&quot;</span></div>
<div class="pre"><a id="l490" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l490" class="linenr"> 490 </a>        ?<span class="hl opt">&gt;</span> <span class="hl str">&quot;.&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l491" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l491" class="linenr"> 491 </a>  <span class="hl str">&quot;The syntax table to use for Shell-Script mode.</span></div>
<div class="pre"><a id="l492" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l492" class="linenr"> 492 </a><span class="hl str">This is buffer-local in every such buffer.&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l493" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l493" class="linenr"> 493 </a></div>
<div class="pre"><a id="l494" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l494" class="linenr"> 494 </a><span class="hl opt">(</span><span class="hl kwa">defvar</span> sh-mode-syntax-table-input</div>
<div class="pre"><a id="l495" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l495" class="linenr"> 495 </a>  <span class="hl opt">'((</span><span class="hl kwa">sh</span> . nil<span class="hl opt">))</span></div>
<div class="pre"><a id="l496" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l496" class="linenr"> 496 </a>  <span class="hl str">&quot;Syntax-table used in Shell-Script mode.  See `sh-feature'.&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l497" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l497" class="linenr"> 497 </a></div>
<div class="pre"><a id="l498" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l498" class="linenr"> 498 </a><span class="hl opt">(</span><span class="hl kwa">defvar</span> sh-mode-map</div>
<div class="pre"><a id="l499" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l499" class="linenr"> 499 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">map</span> <span class="hl opt">(</span><span class="hl kwa">make-sparse-keymap</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l500" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l500" class="linenr"> 500 </a>        <span class="hl opt">(</span><span class="hl kwa">menu-map</span> <span class="hl opt">(</span><span class="hl kwa">make-sparse-keymap</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l501" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l501" class="linenr"> 501 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;\C-c(&quot;</span> <span class="hl opt">'</span>sh-function<span class="hl opt">)</span></div>
<div class="pre"><a id="l502" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l502" class="linenr"> 502 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;\C-c\C-w&quot;</span> <span class="hl opt">'</span>sh-while<span class="hl opt">)</span></div>
<div class="pre"><a id="l503" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l503" class="linenr"> 503 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;\C-c\C-u&quot;</span> <span class="hl opt">'</span>sh-until<span class="hl opt">)</span></div>
<div class="pre"><a id="l504" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l504" class="linenr"> 504 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;\C-c\C-t&quot;</span> <span class="hl opt">'</span>sh-tmp-file<span class="hl opt">)</span></div>
<div class="pre"><a id="l505" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l505" class="linenr"> 505 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;\C-c\C-s&quot;</span> <span class="hl opt">'</span>sh-select<span class="hl opt">)</span></div>
<div class="pre"><a id="l506" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l506" class="linenr"> 506 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;\C-c\C-r&quot;</span> <span class="hl opt">'</span>sh-repeat<span class="hl opt">)</span></div>
<div class="pre"><a id="l507" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l507" class="linenr"> 507 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;\C-c\C-o&quot;</span> <span class="hl opt">'</span>sh-while-getopts<span class="hl opt">)</span></div>
<div class="pre"><a id="l508" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l508" class="linenr"> 508 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;\C-c\C-l&quot;</span> <span class="hl opt">'</span>sh-indexed-loop<span class="hl opt">)</span></div>
<div class="pre"><a id="l509" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l509" class="linenr"> 509 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;\C-c\C-i&quot;</span> <span class="hl opt">'</span>sh-if<span class="hl opt">)</span></div>
<div class="pre"><a id="l510" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l510" class="linenr"> 510 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;\C-c\C-f&quot;</span> <span class="hl opt">'</span>sh-for<span class="hl opt">)</span></div>
<div class="pre"><a id="l511" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l511" class="linenr"> 511 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;\C-c\C-c&quot;</span> <span class="hl opt">'</span>sh-case<span class="hl opt">)</span></div>
<div class="pre"><a id="l512" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l512" class="linenr"> 512 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;\C-c?&quot;</span> <span class="hl opt">'</span>sh-show-indent<span class="hl opt">)</span></div>
<div class="pre"><a id="l513" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l513" class="linenr"> 513 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;\C-c=&quot;</span> <span class="hl opt">'</span>sh-set-indent<span class="hl opt">)</span></div>
<div class="pre"><a id="l514" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l514" class="linenr"> 514 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;\C-c&lt;&quot;</span> <span class="hl opt">'</span>sh-learn-line-indent<span class="hl opt">)</span></div>
<div class="pre"><a id="l515" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l515" class="linenr"> 515 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;\C-c&gt;&quot;</span> <span class="hl opt">'</span>sh-learn-buffer-indent<span class="hl opt">)</span></div>
<div class="pre"><a id="l516" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l516" class="linenr"> 516 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;\C-c\C-</span><span class="hl esc">\\</span><span class="hl str">&quot;</span> <span class="hl opt">'</span>sh-backslash-region<span class="hl opt">)</span></div>
<div class="pre"><a id="l517" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l517" class="linenr"> 517 </a></div>
<div class="pre"><a id="l518" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l518" class="linenr"> 518 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;=&quot;</span> <span class="hl opt">'</span>sh-assignment<span class="hl opt">)</span></div>
<div class="pre"><a id="l519" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l519" class="linenr"> 519 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;\C-c+&quot;</span> <span class="hl opt">'</span>sh-add<span class="hl opt">)</span></div>
<div class="pre"><a id="l520" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l520" class="linenr"> 520 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;\C-\M-x&quot;</span> <span class="hl opt">'</span>sh-execute-region<span class="hl opt">)</span></div>
<div class="pre"><a id="l521" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l521" class="linenr"> 521 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;\C-c\C-x&quot;</span> <span class="hl opt">'</span>executable-interpret<span class="hl opt">)</span></div>
<div class="pre"><a id="l522" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l522" class="linenr"> 522 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;\C-c\C-n&quot;</span> <span class="hl opt">'</span>sh-send-line-or-region-and-step<span class="hl opt">)</span></div>
<div class="pre"><a id="l523" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l523" class="linenr"> 523 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;\C-c\C-d&quot;</span> <span class="hl opt">'</span>sh-cd-here<span class="hl opt">)</span></div>
<div class="pre"><a id="l524" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l524" class="linenr"> 524 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;\C-c\C-z&quot;</span> <span class="hl opt">'</span>sh-show-shell<span class="hl opt">)</span></div>
<div class="pre"><a id="l525" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l525" class="linenr"> 525 </a></div>
<div class="pre"><a id="l526" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l526" class="linenr"> 526 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl opt">[</span>remap delete-backward-char<span class="hl opt">]</span></div>
<div class="pre"><a id="l527" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l527" class="linenr"> 527 </a>      <span class="hl opt">'</span>backward-delete-char-untabify<span class="hl opt">)</span></div>
<div class="pre"><a id="l528" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l528" class="linenr"> 528 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;\C-c:&quot;</span> <span class="hl opt">'</span>sh-set-shell<span class="hl opt">)</span></div>
<div class="pre"><a id="l529" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l529" class="linenr"> 529 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl opt">[</span>remap backward-sentence<span class="hl opt">] '</span>sh-beginning-of-command<span class="hl opt">)</span></div>
<div class="pre"><a id="l530" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l530" class="linenr"> 530 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl opt">[</span>remap forward-sentence<span class="hl opt">] '</span>sh-end-of-command<span class="hl opt">)</span></div>
<div class="pre"><a id="l531" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l531" class="linenr"> 531 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl opt">[</span>menu-bar sh-script<span class="hl opt">] (</span><span class="hl kwa">cons</span> <span class="hl str">&quot;Sh-Script&quot;</span> menu-map<span class="hl opt">))</span></div>
<div class="pre"><a id="l532" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l532" class="linenr"> 532 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> menu-map <span class="hl opt">[</span>sh-learn-buffer-indent<span class="hl opt">]</span></div>
<div class="pre"><a id="l533" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l533" class="linenr"> 533 </a>      <span class="hl opt">'(</span><span class="hl kwa">menu-item</span> <span class="hl str">&quot;Learn buffer indentation&quot;</span> sh-learn-buffer-indent</div>
<div class="pre"><a id="l534" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l534" class="linenr"> 534 </a>        <span class="hl opt">:</span>help <span class="hl str">&quot;Learn how to indent the buffer the way it currently is.&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l535" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l535" class="linenr"> 535 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> menu-map <span class="hl opt">[</span>sh-learn-line-indent<span class="hl opt">]</span></div>
<div class="pre"><a id="l536" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l536" class="linenr"> 536 </a>      <span class="hl opt">'(</span><span class="hl kwa">menu-item</span> <span class="hl str">&quot;Learn line indentation&quot;</span> sh-learn-line-indent</div>
<div class="pre"><a id="l537" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l537" class="linenr"> 537 </a>        <span class="hl opt">:</span>help <span class="hl str">&quot;Learn how to indent a line as it currently is indented&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l538" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l538" class="linenr"> 538 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> menu-map <span class="hl opt">[</span>sh-show-indent<span class="hl opt">]</span></div>
<div class="pre"><a id="l539" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l539" class="linenr"> 539 </a>      <span class="hl opt">'(</span><span class="hl kwa">menu-item</span> <span class="hl str">&quot;Show indentation&quot;</span> sh-show-indent</div>
<div class="pre"><a id="l540" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l540" class="linenr"> 540 </a>                  <span class="hl opt">:</span>help <span class="hl str">&quot;Show the how the current line would be indented&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l541" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l541" class="linenr"> 541 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> menu-map <span class="hl opt">[</span>sh-set-indent<span class="hl opt">]</span></div>
<div class="pre"><a id="l542" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l542" class="linenr"> 542 </a>      <span class="hl opt">'(</span><span class="hl kwa">menu-item</span> <span class="hl str">&quot;Set indentation&quot;</span> sh-set-indent</div>
<div class="pre"><a id="l543" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l543" class="linenr"> 543 </a>                  <span class="hl opt">:</span>help <span class="hl str">&quot;Set the indentation for the current line&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l544" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l544" class="linenr"> 544 </a></div>
<div class="pre"><a id="l545" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l545" class="linenr"> 545 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> menu-map <span class="hl opt">[</span>sh-pair<span class="hl opt">]</span></div>
<div class="pre"><a id="l546" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l546" class="linenr"> 546 </a>      <span class="hl opt">'(</span><span class="hl kwa">menu-item</span> <span class="hl str">&quot;Insert braces and quotes in pairs&quot;</span></div>
<div class="pre"><a id="l547" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l547" class="linenr"> 547 </a>        electric-pair-mode</div>
<div class="pre"><a id="l548" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l548" class="linenr"> 548 </a>        <span class="hl opt">:</span>button <span class="hl opt">(:</span>toggle . <span class="hl opt">(</span><span class="hl kwa">bound-and-true-p</span> electric-pair-mode<span class="hl opt">))</span></div>
<div class="pre"><a id="l549" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l549" class="linenr"> 549 </a>        <span class="hl opt">:</span>help <span class="hl str">&quot;Inserting a brace or quote automatically inserts the matching pair&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l550" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l550" class="linenr"> 550 </a></div>
<div class="pre"><a id="l551" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l551" class="linenr"> 551 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> menu-map <span class="hl opt">[</span>sh-s0<span class="hl opt">] '(</span><span class="hl str">&quot;--&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l552" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l552" class="linenr"> 552 </a>    <span class="hl slc">;; Insert</span></div>
<div class="pre"><a id="l553" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l553" class="linenr"> 553 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> menu-map <span class="hl opt">[</span>sh-function<span class="hl opt">]</span></div>
<div class="pre"><a id="l554" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l554" class="linenr"> 554 </a>      <span class="hl opt">'(</span><span class="hl kwa">menu-item</span> <span class="hl str">&quot;Function...&quot;</span> sh-function</div>
<div class="pre"><a id="l555" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l555" class="linenr"> 555 </a>                  <span class="hl opt">:</span>help <span class="hl str">&quot;Insert a function definition&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l556" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l556" class="linenr"> 556 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> menu-map <span class="hl opt">[</span>sh-add<span class="hl opt">]</span></div>
<div class="pre"><a id="l557" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l557" class="linenr"> 557 </a>      <span class="hl opt">'(</span><span class="hl kwa">menu-item</span> <span class="hl str">&quot;Addition...&quot;</span> sh-add</div>
<div class="pre"><a id="l558" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l558" class="linenr"> 558 </a>        <span class="hl opt">:</span>help <span class="hl str">&quot;Insert an addition of VAR and prefix DELTA for Bourne (type) shell&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l559" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l559" class="linenr"> 559 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> menu-map <span class="hl opt">[</span>sh-until<span class="hl opt">]</span></div>
<div class="pre"><a id="l560" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l560" class="linenr"> 560 </a>      <span class="hl opt">'(</span><span class="hl kwa">menu-item</span> <span class="hl str">&quot;Until Loop&quot;</span> sh-until</div>
<div class="pre"><a id="l561" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l561" class="linenr"> 561 </a>                  <span class="hl opt">:</span>help <span class="hl str">&quot;Insert an until loop&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l562" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l562" class="linenr"> 562 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> menu-map <span class="hl opt">[</span>sh-repeat<span class="hl opt">]</span></div>
<div class="pre"><a id="l563" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l563" class="linenr"> 563 </a>      <span class="hl opt">'(</span><span class="hl kwa">menu-item</span> <span class="hl str">&quot;Repeat Loop&quot;</span> sh-repeat</div>
<div class="pre"><a id="l564" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l564" class="linenr"> 564 </a>                  <span class="hl opt">:</span>help <span class="hl str">&quot;Insert a repeat loop definition&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l565" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l565" class="linenr"> 565 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> menu-map <span class="hl opt">[</span>sh-while<span class="hl opt">]</span></div>
<div class="pre"><a id="l566" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l566" class="linenr"> 566 </a>      <span class="hl opt">'(</span><span class="hl kwa">menu-item</span> <span class="hl str">&quot;While Loop&quot;</span> sh-while</div>
<div class="pre"><a id="l567" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l567" class="linenr"> 567 </a>                  <span class="hl opt">:</span>help <span class="hl str">&quot;Insert a while loop&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l568" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l568" class="linenr"> 568 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> menu-map <span class="hl opt">[</span>sh-getopts<span class="hl opt">]</span></div>
<div class="pre"><a id="l569" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l569" class="linenr"> 569 </a>      <span class="hl opt">'(</span><span class="hl kwa">menu-item</span> <span class="hl str">&quot;Options Loop&quot;</span> sh-while-getopts</div>
<div class="pre"><a id="l570" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l570" class="linenr"> 570 </a>                  <span class="hl opt">:</span>help <span class="hl str">&quot;Insert a while getopts loop.&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l571" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l571" class="linenr"> 571 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> menu-map <span class="hl opt">[</span>sh-indexed-loop<span class="hl opt">]</span></div>
<div class="pre"><a id="l572" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l572" class="linenr"> 572 </a>      <span class="hl opt">'(</span><span class="hl kwa">menu-item</span> <span class="hl str">&quot;Indexed Loop&quot;</span> sh-indexed-loop</div>
<div class="pre"><a id="l573" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l573" class="linenr"> 573 </a>                  <span class="hl opt">:</span>help <span class="hl str">&quot;Insert an indexed loop from 1 to n.&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l574" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l574" class="linenr"> 574 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> menu-map <span class="hl opt">[</span>sh-select<span class="hl opt">]</span></div>
<div class="pre"><a id="l575" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l575" class="linenr"> 575 </a>      <span class="hl opt">'(</span><span class="hl kwa">menu-item</span> <span class="hl str">&quot;Select Statement&quot;</span> sh-select</div>
<div class="pre"><a id="l576" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l576" class="linenr"> 576 </a>                  <span class="hl opt">:</span>help <span class="hl str">&quot;Insert a select statement &quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l577" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l577" class="linenr"> 577 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> menu-map <span class="hl opt">[</span>sh-if<span class="hl opt">]</span></div>
<div class="pre"><a id="l578" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l578" class="linenr"> 578 </a>      <span class="hl opt">'(</span><span class="hl kwa">menu-item</span> <span class="hl str">&quot;If Statement&quot;</span> sh-if</div>
<div class="pre"><a id="l579" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l579" class="linenr"> 579 </a>                  <span class="hl opt">:</span>help <span class="hl str">&quot;Insert an if statement&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l580" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l580" class="linenr"> 580 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> menu-map <span class="hl opt">[</span>sh-for<span class="hl opt">]</span></div>
<div class="pre"><a id="l581" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l581" class="linenr"> 581 </a>      <span class="hl opt">'(</span><span class="hl kwa">menu-item</span> <span class="hl str">&quot;For Loop&quot;</span> sh-for</div>
<div class="pre"><a id="l582" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l582" class="linenr"> 582 </a>                  <span class="hl opt">:</span>help <span class="hl str">&quot;Insert a for loop&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l583" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l583" class="linenr"> 583 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> menu-map <span class="hl opt">[</span>sh-case<span class="hl opt">]</span></div>
<div class="pre"><a id="l584" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l584" class="linenr"> 584 </a>      <span class="hl opt">'(</span><span class="hl kwa">menu-item</span> <span class="hl str">&quot;Case Statement&quot;</span> sh-case</div>
<div class="pre"><a id="l585" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l585" class="linenr"> 585 </a>                  <span class="hl opt">:</span>help <span class="hl str">&quot;Insert a case/switch statement&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l586" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l586" class="linenr"> 586 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> menu-map <span class="hl opt">[</span>sh-s1<span class="hl opt">] '(</span><span class="hl str">&quot;--&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l587" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l587" class="linenr"> 587 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> menu-map <span class="hl opt">[</span>sh-exec<span class="hl opt">]</span></div>
<div class="pre"><a id="l588" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l588" class="linenr"> 588 </a>      <span class="hl opt">'(</span><span class="hl kwa">menu-item</span> <span class="hl str">&quot;Execute region&quot;</span> sh-execute-region</div>
<div class="pre"><a id="l589" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l589" class="linenr"> 589 </a>        <span class="hl opt">:</span>help <span class="hl str">&quot;Pass optional header and region to a subshell for noninteractive execution&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l590" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l590" class="linenr"> 590 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> menu-map <span class="hl opt">[</span>sh-exec-interpret<span class="hl opt">]</span></div>
<div class="pre"><a id="l591" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l591" class="linenr"> 591 </a>      <span class="hl opt">'(</span><span class="hl kwa">menu-item</span> <span class="hl str">&quot;Execute script...&quot;</span> executable-interpret</div>
<div class="pre"><a id="l592" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l592" class="linenr"> 592 </a>        <span class="hl opt">:</span>help <span class="hl str">&quot;Run script with user-specified args, and collect output in a buffer&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l593" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l593" class="linenr"> 593 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> menu-map <span class="hl opt">[</span>sh-set-shell<span class="hl opt">]</span></div>
<div class="pre"><a id="l594" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l594" class="linenr"> 594 </a>      <span class="hl opt">'(</span><span class="hl kwa">menu-item</span> <span class="hl str">&quot;Set shell type...&quot;</span> sh-set-shell</div>
<div class="pre"><a id="l595" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l595" class="linenr"> 595 </a>                  <span class="hl opt">:</span>help <span class="hl str">&quot;Set this buffer's shell to SHELL (a string)&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l596" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l596" class="linenr"> 596 </a>    <span class="hl opt">(</span><span class="hl kwa">define-key</span> menu-map <span class="hl opt">[</span>sh-backslash-region<span class="hl opt">]</span></div>
<div class="pre"><a id="l597" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l597" class="linenr"> 597 </a>      <span class="hl opt">'(</span><span class="hl kwa">menu-item</span> <span class="hl str">&quot;Backslash region&quot;</span> sh-backslash-region</div>
<div class="pre"><a id="l598" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l598" class="linenr"> 598 </a>        <span class="hl opt">:</span>help <span class="hl str">&quot;Insert, align, or delete end-of-line backslashes on the lines in the region.&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l599" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l599" class="linenr"> 599 </a>    map<span class="hl opt">)</span></div>
<div class="pre"><a id="l600" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l600" class="linenr"> 600 </a>  <span class="hl str">&quot;Keymap used in Shell-Script mode.&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l601" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l601" class="linenr"> 601 </a></div>
<div class="pre"><a id="l602" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l602" class="linenr"> 602 </a><span class="hl opt">(</span><span class="hl kwa">defvar</span> sh-skeleton-pair-default-alist <span class="hl opt">'((</span>?<span class="hl opt">(</span> _ ?<span class="hl opt">)) (</span>?\<span class="hl opt">))</span></div>
<div class="pre"><a id="l603" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l603" class="linenr"> 603 </a>                                      <span class="hl opt">(</span>?<span class="hl opt">[</span> ?\s _ ?\s ?<span class="hl opt">]) (</span>?\<span class="hl opt">])</span></div>
<div class="pre"><a id="l604" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l604" class="linenr"> 604 </a>                                      <span class="hl opt">(</span>?<span class="hl opt">{</span> _ ?<span class="hl opt">}) (</span>?\<span class="hl opt">}))</span></div>
<div class="pre"><a id="l605" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l605" class="linenr"> 605 </a>  <span class="hl str">&quot;Value to use for `skeleton-pair-default-alist' in Shell-Script mode.&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l606" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l606" class="linenr"> 606 </a></div>
<div class="pre"><a id="l607" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l607" class="linenr"> 607 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-dynamic-complete-functions</div>
<div class="pre"><a id="l608" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l608" class="linenr"> 608 </a>  <span class="hl opt">'(</span><span class="hl kwa">shell-environment-variable-completion</span></div>
<div class="pre"><a id="l609" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l609" class="linenr"> 609 </a>    shell-command-completion</div>
<div class="pre"><a id="l610" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l610" class="linenr"> 610 </a>    comint-filename-completion<span class="hl opt">)</span></div>
<div class="pre"><a id="l611" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l611" class="linenr"> 611 </a>  <span class="hl str">&quot;Functions for doing TAB dynamic completion.&quot;</span></div>
<div class="pre"><a id="l612" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l612" class="linenr"> 612 </a>  <span class="hl opt">:</span>type <span class="hl opt">'(</span><span class="hl kwa">repeat</span> function<span class="hl opt">)</span></div>
<div class="pre"><a id="l613" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l613" class="linenr"> 613 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-script<span class="hl opt">)</span></div>
<div class="pre"><a id="l614" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l614" class="linenr"> 614 </a></div>
<div class="pre"><a id="l615" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l615" class="linenr"> 615 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-assignment-regexp</div>
<div class="pre"><a id="l616" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l616" class="linenr"> 616 </a>  <span class="hl opt">`((</span><span class="hl kwa">csh</span> . <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">&lt;</span><span class="hl esc">\\</span><span class="hl str">([[:alnum:]_]+</span><span class="hl esc">\\</span><span class="hl str">)</span><span class="hl esc">\\</span><span class="hl str">(</span><span class="hl esc">\\</span><span class="hl str">[.+</span><span class="hl esc">\\</span><span class="hl str">]</span><span class="hl esc">\\</span><span class="hl str">)?[</span> <span class="hl esc">\t</span><span class="hl str">]*[-+*/%^]?=&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l617" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l617" class="linenr"> 617 </a>    <span class="hl slc">;; actually spaces are only supported in let/(( ... ))</span></div>
<div class="pre"><a id="l618" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l618" class="linenr"> 618 </a>    <span class="hl opt">(</span><span class="hl kwa">ksh88</span> . <span class="hl opt">,(</span><span class="hl kwa">concat</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">&lt;</span><span class="hl esc">\\</span><span class="hl str">([[:alnum:]_]+</span><span class="hl esc">\\</span><span class="hl str">)</span><span class="hl esc">\\</span><span class="hl str">(</span><span class="hl esc">\\</span><span class="hl str">[.+</span><span class="hl esc">\\</span><span class="hl str">]</span><span class="hl esc">\\</span><span class="hl str">)?&quot;</span></div>
<div class="pre"><a id="l619" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l619" class="linenr"> 619 </a>                      <span class="hl str">&quot;[</span> <span class="hl esc">\t</span><span class="hl str">]*</span><span class="hl esc">\\</span><span class="hl str">(?:[-+*/%&amp;|~^]</span><span class="hl esc">\\</span><span class="hl str">|&lt;&lt;</span><span class="hl esc">\\</span><span class="hl str">|&gt;&gt;</span><span class="hl esc">\\</span><span class="hl str">)?=&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l620" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l620" class="linenr"> 620 </a>    <span class="hl opt">(</span><span class="hl kwa">bash</span> . <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">&lt;</span><span class="hl esc">\\</span><span class="hl str">([[:alnum:]_]+</span><span class="hl esc">\\</span><span class="hl str">)</span><span class="hl esc">\\</span><span class="hl str">(</span><span class="hl esc">\\</span><span class="hl str">[.+</span><span class="hl esc">\\</span><span class="hl str">]</span><span class="hl esc">\\</span><span class="hl str">)?</span><span class="hl esc">\\</span><span class="hl str">+?=&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l621" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l621" class="linenr"> 621 </a>    <span class="hl opt">(</span><span class="hl kwa">rc</span> . <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">&lt;</span><span class="hl esc">\\</span><span class="hl str">([[:alnum:]_*]+</span><span class="hl esc">\\</span><span class="hl str">)[</span> <span class="hl esc">\t</span><span class="hl str">]*=&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l622" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l622" class="linenr"> 622 </a>    <span class="hl opt">(</span><span class="hl kwa">sh</span> . <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">&lt;</span><span class="hl esc">\\</span><span class="hl str">([[:alnum:]_]+</span><span class="hl esc">\\</span><span class="hl str">)=&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l623" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l623" class="linenr"> 623 </a>  <span class="hl str">&quot;Regexp for the variable name and what may follow in an assignment.</span></div>
<div class="pre"><a id="l624" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l624" class="linenr"> 624 </a><span class="hl str">First grouping matches the variable name.  This is upto and including the `='</span></div>
<div class="pre"><a id="l625" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l625" class="linenr"> 625 </a><span class="hl str">sign.  See `sh-feature'.&quot;</span></div>
<div class="pre"><a id="l626" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l626" class="linenr"> 626 </a>  <span class="hl opt">:</span>type <span class="hl opt">'(</span><span class="hl kwa">repeat</span> <span class="hl opt">(</span><span class="hl kwa">cons</span> <span class="hl opt">(</span><span class="hl kwa">symbol</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;Shell&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l627" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l627" class="linenr"> 627 </a>                       <span class="hl opt">(</span><span class="hl kwa">choice</span> regexp</div>
<div class="pre"><a id="l628" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l628" class="linenr"> 628 </a>                               <span class="hl opt">(</span><span class="hl kwa">sexp</span> <span class="hl opt">:</span>format <span class="hl str">&quot;Evaluate: %v&quot;</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l629" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l629" class="linenr"> 629 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-script<span class="hl opt">)</span></div>
<div class="pre"><a id="l630" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l630" class="linenr"> 630 </a></div>
<div class="pre"><a id="l631" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l631" class="linenr"> 631 </a></div>
<div class="pre"><a id="l632" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l632" class="linenr"> 632 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-indentation <span class="hl num">4</span></div>
<div class="pre"><a id="l633" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l633" class="linenr"> 633 </a>  <span class="hl str">&quot;The width for further indentation in Shell-Script mode.&quot;</span></div>
<div class="pre"><a id="l634" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l634" class="linenr"> 634 </a>  <span class="hl opt">:</span>type <span class="hl opt">'</span>integer</div>
<div class="pre"><a id="l635" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l635" class="linenr"> 635 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-script<span class="hl opt">)</span></div>
<div class="pre"><a id="l636" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l636" class="linenr"> 636 </a><span class="hl opt">(</span><span class="hl kwa">put</span> <span class="hl opt">'</span>sh-indentation <span class="hl opt">'</span>safe-local-variable <span class="hl opt">'</span>integerp<span class="hl opt">)</span></div>
<div class="pre"><a id="l637" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l637" class="linenr"> 637 </a></div>
<div class="pre"><a id="l638" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l638" class="linenr"> 638 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-remember-variable-min <span class="hl num">3</span></div>
<div class="pre"><a id="l639" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l639" class="linenr"> 639 </a>  <span class="hl str">&quot;Don't remember variables less than this length for completing reads.&quot;</span></div>
<div class="pre"><a id="l640" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l640" class="linenr"> 640 </a>  <span class="hl opt">:</span>type <span class="hl opt">'</span>integer</div>
<div class="pre"><a id="l641" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l641" class="linenr"> 641 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-script<span class="hl opt">)</span></div>
<div class="pre"><a id="l642" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l642" class="linenr"> 642 </a></div>
<div class="pre"><a id="l643" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l643" class="linenr"> 643 </a></div>
<div class="pre"><a id="l644" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l644" class="linenr"> 644 </a><span class="hl opt">(</span><span class="hl kwa">defvar</span> sh-header-marker nil</div>
<div class="pre"><a id="l645" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l645" class="linenr"> 645 </a>  <span class="hl str">&quot;When non-nil is the end of header for prepending by</span> <span class="hl esc">\\</span><span class="hl str">[sh-execute-region].</span></div>
<div class="pre"><a id="l646" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l646" class="linenr"> 646 </a><span class="hl str">That command is also used for setting this variable.&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l647" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l647" class="linenr"> 647 </a><span class="hl opt">(</span><span class="hl kwa">make-variable-buffer-local</span> <span class="hl opt">'</span>sh-header-marker<span class="hl opt">)</span></div>
<div class="pre"><a id="l648" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l648" class="linenr"> 648 </a></div>
<div class="pre"><a id="l649" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l649" class="linenr"> 649 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-beginning-of-command</div>
<div class="pre"><a id="l650" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l650" class="linenr"> 650 </a>  <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">([;({`|&amp;]</span><span class="hl esc">\\</span><span class="hl str">|</span><span class="hl esc">\\</span><span class="hl str">`</span><span class="hl esc">\\</span><span class="hl str">|[^</span><span class="hl esc">\\</span><span class="hl str">]</span><span class="hl esc">\n\\</span><span class="hl str">)[</span> <span class="hl esc">\t</span><span class="hl str">]*</span><span class="hl esc">\\</span><span class="hl str">([/~[:alnum:]:]</span><span class="hl esc">\\</span><span class="hl str">)&quot;</span></div>
<div class="pre"><a id="l651" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l651" class="linenr"> 651 </a>  <span class="hl str">&quot;Regexp to determine the beginning of a shell command.</span></div>
<div class="pre"><a id="l652" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l652" class="linenr"> 652 </a><span class="hl str">The actual command starts at the beginning of the second</span> <span class="hl esc">\\</span><span class="hl str">(grouping</span><span class="hl esc">\\</span><span class="hl str">).&quot;</span></div>
<div class="pre"><a id="l653" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l653" class="linenr"> 653 </a>  <span class="hl opt">:</span>type <span class="hl opt">'</span>regexp</div>
<div class="pre"><a id="l654" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l654" class="linenr"> 654 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-script<span class="hl opt">)</span></div>
<div class="pre"><a id="l655" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l655" class="linenr"> 655 </a></div>
<div class="pre"><a id="l656" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l656" class="linenr"> 656 </a></div>
<div class="pre"><a id="l657" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l657" class="linenr"> 657 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-end-of-command</div>
<div class="pre"><a id="l658" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l658" class="linenr"> 658 </a>  <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">([/~[:alnum:]:]</span><span class="hl esc">\\</span><span class="hl str">)[</span> <span class="hl esc">\t</span><span class="hl str">]*</span><span class="hl esc">\\</span><span class="hl str">([;#)}`|&amp;]</span><span class="hl esc">\\</span><span class="hl str">|$</span><span class="hl esc">\\</span><span class="hl str">)&quot;</span></div>
<div class="pre"><a id="l659" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l659" class="linenr"> 659 </a>  <span class="hl str">&quot;Regexp to determine the end of a shell command.</span></div>
<div class="pre"><a id="l660" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l660" class="linenr"> 660 </a><span class="hl str">The actual command ends at the end of the first</span> <span class="hl esc">\\</span><span class="hl str">(grouping</span><span class="hl esc">\\</span><span class="hl str">).&quot;</span></div>
<div class="pre"><a id="l661" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l661" class="linenr"> 661 </a>  <span class="hl opt">:</span>type <span class="hl opt">'</span>regexp</div>
<div class="pre"><a id="l662" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l662" class="linenr"> 662 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-script<span class="hl opt">)</span></div>
<div class="pre"><a id="l663" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l663" class="linenr"> 663 </a></div>
<div class="pre"><a id="l664" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l664" class="linenr"> 664 </a></div>
<div class="pre"><a id="l665" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l665" class="linenr"> 665 </a></div>
<div class="pre"><a id="l666" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l666" class="linenr"> 666 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-here-document-word <span class="hl str">&quot;EOF&quot;</span></div>
<div class="pre"><a id="l667" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l667" class="linenr"> 667 </a>  <span class="hl str">&quot;Word to delimit here documents.</span></div>
<div class="pre"><a id="l668" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l668" class="linenr"> 668 </a><span class="hl str">If the first character of this string is</span> <span class="hl esc">\&quot;</span><span class="hl str">-</span><span class="hl esc">\&quot;</span><span class="hl str">, this is taken as</span></div>
<div class="pre"><a id="l669" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l669" class="linenr"> 669 </a><span class="hl str">part of the redirection operator, rather than part of the</span></div>
<div class="pre"><a id="l670" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l670" class="linenr"> 670 </a><span class="hl str">word (that is,</span> <span class="hl esc">\&quot;</span><span class="hl str">&lt;&lt;-</span><span class="hl esc">\&quot;</span> <span class="hl str">instead of</span> <span class="hl esc">\&quot;</span><span class="hl str">&lt;&lt;</span><span class="hl esc">\&quot;</span><span class="hl str">).  This is a feature</span></div>
<div class="pre"><a id="l671" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l671" class="linenr"> 671 </a><span class="hl str">used by some shells (for example Bash) to indicate that leading</span></div>
<div class="pre"><a id="l672" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l672" class="linenr"> 672 </a><span class="hl str">tabs inside the here document should be ignored.  In this case,</span></div>
<div class="pre"><a id="l673" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l673" class="linenr"> 673 </a><span class="hl str">Emacs indents the initial body and end of the here document with</span></div>
<div class="pre"><a id="l674" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l674" class="linenr"> 674 </a><span class="hl str">tabs, to the same level as the start (note that apart from this</span></div>
<div class="pre"><a id="l675" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l675" class="linenr"> 675 </a><span class="hl str">there is no support for indentation of here documents).  This</span></div>
<div class="pre"><a id="l676" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l676" class="linenr"> 676 </a><span class="hl str">will only work correctly if `sh-basic-offset' is a multiple of</span></div>
<div class="pre"><a id="l677" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l677" class="linenr"> 677 </a><span class="hl str">`tab-width'.</span></div>
<div class="pre"><a id="l678" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l678" class="linenr"> 678 </a><span class="hl str"></span></div>
<div class="pre"><a id="l679" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l679" class="linenr"> 679 </a><span class="hl str">Any quote characters or leading whitespace in the word are</span></div>
<div class="pre"><a id="l680" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l680" class="linenr"> 680 </a><span class="hl str">removed when closing the here document.&quot;</span></div>
<div class="pre"><a id="l681" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l681" class="linenr"> 681 </a>  <span class="hl opt">:</span>type <span class="hl opt">'</span>string</div>
<div class="pre"><a id="l682" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l682" class="linenr"> 682 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-script<span class="hl opt">)</span></div>
<div class="pre"><a id="l683" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l683" class="linenr"> 683 </a></div>
<div class="pre"><a id="l684" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l684" class="linenr"> 684 </a></div>
<div class="pre"><a id="l685" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l685" class="linenr"> 685 </a><span class="hl opt">(</span><span class="hl kwa">defvar</span> sh-test</div>
<div class="pre"><a id="l686" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l686" class="linenr"> 686 </a>  <span class="hl opt">'((</span><span class="hl kwa">sh</span> <span class="hl str">&quot;[  ]&quot;</span> . <span class="hl num">3</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l687" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l687" class="linenr"> 687 </a>    <span class="hl opt">(</span><span class="hl kwa">ksh88</span> <span class="hl str">&quot;[[  ]]&quot;</span> . <span class="hl num">4</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l688" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l688" class="linenr"> 688 </a>  <span class="hl str">&quot;Initial input in Bourne if, while and until skeletons.  See `sh-feature'.&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l689" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l689" class="linenr"> 689 </a></div>
<div class="pre"><a id="l690" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l690" class="linenr"> 690 </a></div>
<div class="pre"><a id="l691" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l691" class="linenr"> 691 </a><span class="hl slc">;; customized this out of sheer bravado.  not for the faint of heart.</span></div>
<div class="pre"><a id="l692" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l692" class="linenr"> 692 </a><span class="hl slc">;; but it *did* have an asterisk in the docstring!</span></div>
<div class="pre"><a id="l693" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l693" class="linenr"> 693 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-builtins</div>
<div class="pre"><a id="l694" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l694" class="linenr"> 694 </a>  <span class="hl opt">'((</span><span class="hl kwa">bash</span> sh-append posix</div>
<div class="pre"><a id="l695" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l695" class="linenr"> 695 </a>          <span class="hl str">&quot;.&quot;</span> <span class="hl str">&quot;alias&quot;</span> <span class="hl str">&quot;bg&quot;</span> <span class="hl str">&quot;bind&quot;</span> <span class="hl str">&quot;builtin&quot;</span> <span class="hl str">&quot;caller&quot;</span> <span class="hl str">&quot;compgen&quot;</span> <span class="hl str">&quot;complete&quot;</span></div>
<div class="pre"><a id="l696" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l696" class="linenr"> 696 </a>          <span class="hl str">&quot;declare&quot;</span> <span class="hl str">&quot;dirs&quot;</span> <span class="hl str">&quot;disown&quot;</span> <span class="hl str">&quot;enable&quot;</span> <span class="hl str">&quot;fc&quot;</span> <span class="hl str">&quot;fg&quot;</span> <span class="hl str">&quot;help&quot;</span> <span class="hl str">&quot;history&quot;</span></div>
<div class="pre"><a id="l697" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l697" class="linenr"> 697 </a>          <span class="hl str">&quot;jobs&quot;</span> <span class="hl str">&quot;kill&quot;</span> <span class="hl str">&quot;let&quot;</span> <span class="hl str">&quot;local&quot;</span> <span class="hl str">&quot;popd&quot;</span> <span class="hl str">&quot;printf&quot;</span> <span class="hl str">&quot;pushd&quot;</span> <span class="hl str">&quot;shopt&quot;</span></div>
<div class="pre"><a id="l698" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l698" class="linenr"> 698 </a>          <span class="hl str">&quot;source&quot;</span> <span class="hl str">&quot;suspend&quot;</span> <span class="hl str">&quot;typeset&quot;</span> <span class="hl str">&quot;unalias&quot;</span></div>
<div class="pre"><a id="l699" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l699" class="linenr"> 699 </a>          <span class="hl slc">;; bash4</span></div>
<div class="pre"><a id="l700" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l700" class="linenr"> 700 </a>          <span class="hl str">&quot;mapfile&quot;</span> <span class="hl str">&quot;readarray&quot;</span> <span class="hl str">&quot;coproc&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l701" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l701" class="linenr"> 701 </a></div>
<div class="pre"><a id="l702" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l702" class="linenr"> 702 </a>    <span class="hl slc">;; The next entry is only used for defining the others</span></div>
<div class="pre"><a id="l703" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l703" class="linenr"> 703 </a>    <span class="hl opt">(</span><span class="hl kwa">bourne</span> sh-append shell</div>
<div class="pre"><a id="l704" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l704" class="linenr"> 704 </a>            <span class="hl str">&quot;eval&quot;</span> <span class="hl str">&quot;export&quot;</span> <span class="hl str">&quot;getopts&quot;</span> <span class="hl str">&quot;newgrp&quot;</span> <span class="hl str">&quot;pwd&quot;</span> <span class="hl str">&quot;read&quot;</span> <span class="hl str">&quot;readonly&quot;</span></div>
<div class="pre"><a id="l705" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l705" class="linenr"> 705 </a>            <span class="hl str">&quot;times&quot;</span> <span class="hl str">&quot;ulimit&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l706" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l706" class="linenr"> 706 </a></div>
<div class="pre"><a id="l707" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l707" class="linenr"> 707 </a>    <span class="hl opt">(</span><span class="hl kwa">csh</span> sh-append shell</div>
<div class="pre"><a id="l708" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l708" class="linenr"> 708 </a>         <span class="hl str">&quot;alias&quot;</span> <span class="hl str">&quot;chdir&quot;</span> <span class="hl str">&quot;glob&quot;</span> <span class="hl str">&quot;history&quot;</span> <span class="hl str">&quot;limit&quot;</span> <span class="hl str">&quot;nice&quot;</span> <span class="hl str">&quot;nohup&quot;</span> <span class="hl str">&quot;rehash&quot;</span></div>
<div class="pre"><a id="l709" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l709" class="linenr"> 709 </a>         <span class="hl str">&quot;setenv&quot;</span> <span class="hl str">&quot;source&quot;</span> <span class="hl str">&quot;time&quot;</span> <span class="hl str">&quot;unalias&quot;</span> <span class="hl str">&quot;unhash&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l710" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l710" class="linenr"> 710 </a></div>
<div class="pre"><a id="l711" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l711" class="linenr"> 711 </a>    <span class="hl opt">(</span><span class="hl kwa">dtksh</span> sh-append wksh<span class="hl opt">)</span></div>
<div class="pre"><a id="l712" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l712" class="linenr"> 712 </a></div>
<div class="pre"><a id="l713" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l713" class="linenr"> 713 </a>    <span class="hl opt">(</span><span class="hl kwa">es</span> <span class="hl str">&quot;access&quot;</span> <span class="hl str">&quot;apids&quot;</span> <span class="hl str">&quot;cd&quot;</span> <span class="hl str">&quot;echo&quot;</span> <span class="hl str">&quot;eval&quot;</span> <span class="hl str">&quot;false&quot;</span> <span class="hl str">&quot;let&quot;</span> <span class="hl str">&quot;limit&quot;</span> <span class="hl str">&quot;local&quot;</span></div>
<div class="pre"><a id="l714" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l714" class="linenr"> 714 </a>        <span class="hl str">&quot;newpgrp&quot;</span> <span class="hl str">&quot;result&quot;</span> <span class="hl str">&quot;time&quot;</span> <span class="hl str">&quot;umask&quot;</span> <span class="hl str">&quot;var&quot;</span> <span class="hl str">&quot;vars&quot;</span> <span class="hl str">&quot;wait&quot;</span> <span class="hl str">&quot;whatis&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l715" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l715" class="linenr"> 715 </a></div>
<div class="pre"><a id="l716" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l716" class="linenr"> 716 </a>    <span class="hl opt">(</span><span class="hl kwa">jsh</span> sh-append sh</div>
<div class="pre"><a id="l717" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l717" class="linenr"> 717 </a>         <span class="hl str">&quot;bg&quot;</span> <span class="hl str">&quot;fg&quot;</span> <span class="hl str">&quot;jobs&quot;</span> <span class="hl str">&quot;kill&quot;</span> <span class="hl str">&quot;stop&quot;</span> <span class="hl str">&quot;suspend&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l718" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l718" class="linenr"> 718 </a></div>
<div class="pre"><a id="l719" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l719" class="linenr"> 719 </a>    <span class="hl opt">(</span><span class="hl kwa">jcsh</span> sh-append csh</div>
<div class="pre"><a id="l720" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l720" class="linenr"> 720 </a>          <span class="hl str">&quot;bg&quot;</span> <span class="hl str">&quot;fg&quot;</span> <span class="hl str">&quot;jobs&quot;</span> <span class="hl str">&quot;kill&quot;</span> <span class="hl str">&quot;notify&quot;</span> <span class="hl str">&quot;stop&quot;</span> <span class="hl str">&quot;suspend&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l721" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l721" class="linenr"> 721 </a></div>
<div class="pre"><a id="l722" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l722" class="linenr"> 722 </a>    <span class="hl opt">(</span><span class="hl kwa">ksh88</span> sh-append bourne</div>
<div class="pre"><a id="l723" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l723" class="linenr"> 723 </a>           <span class="hl str">&quot;alias&quot;</span> <span class="hl str">&quot;bg&quot;</span> <span class="hl str">&quot;false&quot;</span> <span class="hl str">&quot;fc&quot;</span> <span class="hl str">&quot;fg&quot;</span> <span class="hl str">&quot;jobs&quot;</span> <span class="hl str">&quot;kill&quot;</span> <span class="hl str">&quot;let&quot;</span> <span class="hl str">&quot;print&quot;</span> <span class="hl str">&quot;time&quot;</span></div>
<div class="pre"><a id="l724" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l724" class="linenr"> 724 </a>           <span class="hl str">&quot;typeset&quot;</span> <span class="hl str">&quot;unalias&quot;</span> <span class="hl str">&quot;whence&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l725" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l725" class="linenr"> 725 </a></div>
<div class="pre"><a id="l726" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l726" class="linenr"> 726 </a>    <span class="hl opt">(</span><span class="hl kwa">oash</span> sh-append sh</div>
<div class="pre"><a id="l727" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l727" class="linenr"> 727 </a>          <span class="hl str">&quot;checkwin&quot;</span> <span class="hl str">&quot;dateline&quot;</span> <span class="hl str">&quot;error&quot;</span> <span class="hl str">&quot;form&quot;</span> <span class="hl str">&quot;menu&quot;</span> <span class="hl str">&quot;newwin&quot;</span> <span class="hl str">&quot;oadeinit&quot;</span></div>
<div class="pre"><a id="l728" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l728" class="linenr"> 728 </a>          <span class="hl str">&quot;oaed&quot;</span> <span class="hl str">&quot;oahelp&quot;</span> <span class="hl str">&quot;oainit&quot;</span> <span class="hl str">&quot;pp&quot;</span> <span class="hl str">&quot;ppfile&quot;</span> <span class="hl str">&quot;scan&quot;</span> <span class="hl str">&quot;scrollok&quot;</span> <span class="hl str">&quot;wattr&quot;</span></div>
<div class="pre"><a id="l729" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l729" class="linenr"> 729 </a>          <span class="hl str">&quot;wclear&quot;</span> <span class="hl str">&quot;werase&quot;</span> <span class="hl str">&quot;win&quot;</span> <span class="hl str">&quot;wmclose&quot;</span> <span class="hl str">&quot;wmmessage&quot;</span> <span class="hl str">&quot;wmopen&quot;</span> <span class="hl str">&quot;wmove&quot;</span></div>
<div class="pre"><a id="l730" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l730" class="linenr"> 730 </a>          <span class="hl str">&quot;wmtitle&quot;</span> <span class="hl str">&quot;wrefresh&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l731" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l731" class="linenr"> 731 </a></div>
<div class="pre"><a id="l732" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l732" class="linenr"> 732 </a>    <span class="hl opt">(</span><span class="hl kwa">pdksh</span> sh-append ksh88</div>
<div class="pre"><a id="l733" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l733" class="linenr"> 733 </a>           <span class="hl str">&quot;bind&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l734" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l734" class="linenr"> 734 </a></div>
<div class="pre"><a id="l735" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l735" class="linenr"> 735 </a>    <span class="hl opt">(</span><span class="hl kwa">posix</span> sh-append sh</div>
<div class="pre"><a id="l736" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l736" class="linenr"> 736 </a>           <span class="hl str">&quot;command&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l737" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l737" class="linenr"> 737 </a></div>
<div class="pre"><a id="l738" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l738" class="linenr"> 738 </a>    <span class="hl opt">(</span><span class="hl kwa">rc</span> <span class="hl str">&quot;builtin&quot;</span> <span class="hl str">&quot;cd&quot;</span> <span class="hl str">&quot;echo&quot;</span> <span class="hl str">&quot;eval&quot;</span> <span class="hl str">&quot;limit&quot;</span> <span class="hl str">&quot;newpgrp&quot;</span> <span class="hl str">&quot;shift&quot;</span> <span class="hl str">&quot;umask&quot;</span> <span class="hl str">&quot;wait&quot;</span></div>
<div class="pre"><a id="l739" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l739" class="linenr"> 739 </a>        <span class="hl str">&quot;whatis&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l740" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l740" class="linenr"> 740 </a></div>
<div class="pre"><a id="l741" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l741" class="linenr"> 741 </a>    <span class="hl opt">(</span><span class="hl kwa">sh</span> sh-append bourne</div>
<div class="pre"><a id="l742" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l742" class="linenr"> 742 </a>        <span class="hl str">&quot;hash&quot;</span> <span class="hl str">&quot;test&quot;</span> <span class="hl str">&quot;type&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l743" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l743" class="linenr"> 743 </a></div>
<div class="pre"><a id="l744" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l744" class="linenr"> 744 </a>    <span class="hl slc">;; The next entry is only used for defining the others</span></div>
<div class="pre"><a id="l745" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l745" class="linenr"> 745 </a>    <span class="hl opt">(</span><span class="hl kwa">shell</span> <span class="hl str">&quot;cd&quot;</span> <span class="hl str">&quot;echo&quot;</span> <span class="hl str">&quot;eval&quot;</span> <span class="hl str">&quot;set&quot;</span> <span class="hl str">&quot;shift&quot;</span> <span class="hl str">&quot;umask&quot;</span> <span class="hl str">&quot;unset&quot;</span> <span class="hl str">&quot;wait&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l746" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l746" class="linenr"> 746 </a></div>
<div class="pre"><a id="l747" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l747" class="linenr"> 747 </a>    <span class="hl opt">(</span><span class="hl kwa">wksh</span> sh-append ksh88</div>
<div class="pre"><a id="l748" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l748" class="linenr"> 748 </a>          <span class="hl slc">;; FIXME: This looks too much like a regexp.  --Stef</span></div>
<div class="pre"><a id="l749" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l749" class="linenr"> 749 </a>          <span class="hl str">&quot;Xt[A-Z][A-Za-z]*&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l750" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l750" class="linenr"> 750 </a></div>
<div class="pre"><a id="l751" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l751" class="linenr"> 751 </a>    <span class="hl opt">(</span><span class="hl kwa">zsh</span> sh-append ksh88</div>
<div class="pre"><a id="l752" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l752" class="linenr"> 752 </a>         <span class="hl str">&quot;autoload&quot;</span> <span class="hl str">&quot;bindkey&quot;</span> <span class="hl str">&quot;builtin&quot;</span> <span class="hl str">&quot;chdir&quot;</span> <span class="hl str">&quot;compctl&quot;</span> <span class="hl str">&quot;declare&quot;</span> <span class="hl str">&quot;dirs&quot;</span></div>
<div class="pre"><a id="l753" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l753" class="linenr"> 753 </a>         <span class="hl str">&quot;disable&quot;</span> <span class="hl str">&quot;disown&quot;</span> <span class="hl str">&quot;echotc&quot;</span> <span class="hl str">&quot;enable&quot;</span> <span class="hl str">&quot;functions&quot;</span> <span class="hl str">&quot;getln&quot;</span> <span class="hl str">&quot;hash&quot;</span></div>
<div class="pre"><a id="l754" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l754" class="linenr"> 754 </a>         <span class="hl str">&quot;history&quot;</span> <span class="hl str">&quot;integer&quot;</span> <span class="hl str">&quot;limit&quot;</span> <span class="hl str">&quot;local&quot;</span> <span class="hl str">&quot;log&quot;</span> <span class="hl str">&quot;popd&quot;</span> <span class="hl str">&quot;pushd&quot;</span> <span class="hl str">&quot;r&quot;</span></div>
<div class="pre"><a id="l755" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l755" class="linenr"> 755 </a>         <span class="hl str">&quot;readonly&quot;</span> <span class="hl str">&quot;rehash&quot;</span> <span class="hl str">&quot;sched&quot;</span> <span class="hl str">&quot;setopt&quot;</span> <span class="hl str">&quot;source&quot;</span> <span class="hl str">&quot;suspend&quot;</span> <span class="hl str">&quot;true&quot;</span></div>
<div class="pre"><a id="l756" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l756" class="linenr"> 756 </a>         <span class="hl str">&quot;ttyctl&quot;</span> <span class="hl str">&quot;type&quot;</span> <span class="hl str">&quot;unfunction&quot;</span> <span class="hl str">&quot;unhash&quot;</span> <span class="hl str">&quot;unlimit&quot;</span> <span class="hl str">&quot;unsetopt&quot;</span> <span class="hl str">&quot;vared&quot;</span></div>
<div class="pre"><a id="l757" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l757" class="linenr"> 757 </a>         <span class="hl str">&quot;which&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l758" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l758" class="linenr"> 758 </a>  <span class="hl str">&quot;List of all shell builtins for completing read and fontification.</span></div>
<div class="pre"><a id="l759" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l759" class="linenr"> 759 </a><span class="hl str">Note that on some systems not all builtins are available or some are</span></div>
<div class="pre"><a id="l760" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l760" class="linenr"> 760 </a><span class="hl str">implemented as aliases.  See `sh-feature'.&quot;</span></div>
<div class="pre"><a id="l761" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l761" class="linenr"> 761 </a>  <span class="hl opt">:</span>type <span class="hl opt">'(</span><span class="hl kwa">repeat</span> <span class="hl opt">(</span><span class="hl kwa">cons</span> <span class="hl opt">(</span><span class="hl kwa">symbol</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;Shell&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l762" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l762" class="linenr"> 762 </a>                       <span class="hl opt">(</span><span class="hl kwa">choice</span> <span class="hl opt">(</span><span class="hl kwa">repeat</span> string<span class="hl opt">)</span></div>
<div class="pre"><a id="l763" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l763" class="linenr"> 763 </a>                               <span class="hl opt">(</span><span class="hl kwa">sexp</span> <span class="hl opt">:</span>format <span class="hl str">&quot;Evaluate: %v&quot;</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l764" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l764" class="linenr"> 764 </a>  <span class="hl opt">:</span>version <span class="hl str">&quot;24.4&quot;</span>                       <span class="hl slc">; bash4 additions</span></div>
<div class="pre"><a id="l765" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l765" class="linenr"> 765 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-script<span class="hl opt">)</span></div>
<div class="pre"><a id="l766" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l766" class="linenr"> 766 </a></div>
<div class="pre"><a id="l767" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l767" class="linenr"> 767 </a></div>
<div class="pre"><a id="l768" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l768" class="linenr"> 768 </a></div>
<div class="pre"><a id="l769" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l769" class="linenr"> 769 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-leading-keywords</div>
<div class="pre"><a id="l770" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l770" class="linenr"> 770 </a>  <span class="hl opt">'((</span><span class="hl kwa">bash</span> sh-append sh</div>
<div class="pre"><a id="l771" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l771" class="linenr"> 771 </a>          <span class="hl str">&quot;time&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l772" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l772" class="linenr"> 772 </a></div>
<div class="pre"><a id="l773" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l773" class="linenr"> 773 </a>    <span class="hl opt">(</span><span class="hl kwa">csh</span> <span class="hl str">&quot;else&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l774" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l774" class="linenr"> 774 </a></div>
<div class="pre"><a id="l775" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l775" class="linenr"> 775 </a>    <span class="hl opt">(</span><span class="hl kwa">es</span> <span class="hl str">&quot;true&quot;</span> <span class="hl str">&quot;unwind-protect&quot;</span> <span class="hl str">&quot;whatis&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l776" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l776" class="linenr"> 776 </a></div>
<div class="pre"><a id="l777" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l777" class="linenr"> 777 </a>    <span class="hl opt">(</span><span class="hl kwa">rc</span> <span class="hl str">&quot;else&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l778" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l778" class="linenr"> 778 </a></div>
<div class="pre"><a id="l779" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l779" class="linenr"> 779 </a>    <span class="hl opt">(</span><span class="hl kwa">sh</span> <span class="hl str">&quot;!&quot;</span> <span class="hl str">&quot;do&quot;</span> <span class="hl str">&quot;elif&quot;</span> <span class="hl str">&quot;else&quot;</span> <span class="hl str">&quot;if&quot;</span> <span class="hl str">&quot;then&quot;</span> <span class="hl str">&quot;trap&quot;</span> <span class="hl str">&quot;type&quot;</span> <span class="hl str">&quot;until&quot;</span> <span class="hl str">&quot;while&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l780" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l780" class="linenr"> 780 </a>  <span class="hl str">&quot;List of keywords that may be immediately followed by a builtin or keyword.</span></div>
<div class="pre"><a id="l781" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l781" class="linenr"> 781 </a><span class="hl str">Given some confusion between keywords and builtins depending on shell and</span></div>
<div class="pre"><a id="l782" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l782" class="linenr"> 782 </a><span class="hl str">system, the distinction here has been based on whether they influence the</span></div>
<div class="pre"><a id="l783" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l783" class="linenr"> 783 </a><span class="hl str">flow of control or syntax.  See `sh-feature'.&quot;</span></div>
<div class="pre"><a id="l784" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l784" class="linenr"> 784 </a>  <span class="hl opt">:</span>type <span class="hl opt">'(</span><span class="hl kwa">repeat</span> <span class="hl opt">(</span><span class="hl kwa">cons</span> <span class="hl opt">(</span><span class="hl kwa">symbol</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;Shell&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l785" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l785" class="linenr"> 785 </a>                       <span class="hl opt">(</span><span class="hl kwa">choice</span> <span class="hl opt">(</span><span class="hl kwa">repeat</span> string<span class="hl opt">)</span></div>
<div class="pre"><a id="l786" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l786" class="linenr"> 786 </a>                               <span class="hl opt">(</span><span class="hl kwa">sexp</span> <span class="hl opt">:</span>format <span class="hl str">&quot;Evaluate: %v&quot;</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l787" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l787" class="linenr"> 787 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-script<span class="hl opt">)</span></div>
<div class="pre"><a id="l788" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l788" class="linenr"> 788 </a></div>
<div class="pre"><a id="l789" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l789" class="linenr"> 789 </a></div>
<div class="pre"><a id="l790" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l790" class="linenr"> 790 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-other-keywords</div>
<div class="pre"><a id="l791" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l791" class="linenr"> 791 </a>  <span class="hl opt">'((</span><span class="hl kwa">bash</span> sh-append bourne</div>
<div class="pre"><a id="l792" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l792" class="linenr"> 792 </a>          <span class="hl str">&quot;bye&quot;</span> <span class="hl str">&quot;logout&quot;</span> <span class="hl str">&quot;select&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l793" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l793" class="linenr"> 793 </a></div>
<div class="pre"><a id="l794" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l794" class="linenr"> 794 </a>    <span class="hl slc">;; The next entry is only used for defining the others</span></div>
<div class="pre"><a id="l795" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l795" class="linenr"> 795 </a>    <span class="hl opt">(</span><span class="hl kwa">bourne</span> sh-append sh</div>
<div class="pre"><a id="l796" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l796" class="linenr"> 796 </a>            <span class="hl str">&quot;function&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l797" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l797" class="linenr"> 797 </a></div>
<div class="pre"><a id="l798" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l798" class="linenr"> 798 </a>    <span class="hl opt">(</span><span class="hl kwa">csh</span> sh-append shell</div>
<div class="pre"><a id="l799" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l799" class="linenr"> 799 </a>         <span class="hl str">&quot;breaksw&quot;</span> <span class="hl str">&quot;default&quot;</span> <span class="hl str">&quot;end&quot;</span> <span class="hl str">&quot;endif&quot;</span> <span class="hl str">&quot;endsw&quot;</span> <span class="hl str">&quot;foreach&quot;</span> <span class="hl str">&quot;goto&quot;</span></div>
<div class="pre"><a id="l800" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l800" class="linenr"> 800 </a>         <span class="hl str">&quot;if&quot;</span> <span class="hl str">&quot;logout&quot;</span> <span class="hl str">&quot;onintr&quot;</span> <span class="hl str">&quot;repeat&quot;</span> <span class="hl str">&quot;switch&quot;</span> <span class="hl str">&quot;then&quot;</span> <span class="hl str">&quot;while&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l801" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l801" class="linenr"> 801 </a></div>
<div class="pre"><a id="l802" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l802" class="linenr"> 802 </a>    <span class="hl opt">(</span><span class="hl kwa">es</span> <span class="hl str">&quot;break&quot;</span> <span class="hl str">&quot;catch&quot;</span> <span class="hl str">&quot;exec&quot;</span> <span class="hl str">&quot;exit&quot;</span> <span class="hl str">&quot;fn&quot;</span> <span class="hl str">&quot;for&quot;</span> <span class="hl str">&quot;forever&quot;</span> <span class="hl str">&quot;fork&quot;</span> <span class="hl str">&quot;if&quot;</span></div>
<div class="pre"><a id="l803" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l803" class="linenr"> 803 </a>        <span class="hl str">&quot;return&quot;</span> <span class="hl str">&quot;throw&quot;</span> <span class="hl str">&quot;while&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l804" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l804" class="linenr"> 804 </a></div>
<div class="pre"><a id="l805" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l805" class="linenr"> 805 </a>    <span class="hl opt">(</span><span class="hl kwa">ksh88</span> sh-append bourne</div>
<div class="pre"><a id="l806" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l806" class="linenr"> 806 </a>           <span class="hl str">&quot;select&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l807" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l807" class="linenr"> 807 </a></div>
<div class="pre"><a id="l808" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l808" class="linenr"> 808 </a>    <span class="hl opt">(</span><span class="hl kwa">rc</span> <span class="hl str">&quot;break&quot;</span> <span class="hl str">&quot;case&quot;</span> <span class="hl str">&quot;exec&quot;</span> <span class="hl str">&quot;exit&quot;</span> <span class="hl str">&quot;fn&quot;</span> <span class="hl str">&quot;for&quot;</span> <span class="hl str">&quot;if&quot;</span> <span class="hl str">&quot;in&quot;</span> <span class="hl str">&quot;return&quot;</span> <span class="hl str">&quot;switch&quot;</span></div>
<div class="pre"><a id="l809" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l809" class="linenr"> 809 </a>        <span class="hl str">&quot;while&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l810" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l810" class="linenr"> 810 </a></div>
<div class="pre"><a id="l811" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l811" class="linenr"> 811 </a>    <span class="hl opt">(</span><span class="hl kwa">sh</span> sh-append shell</div>
<div class="pre"><a id="l812" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l812" class="linenr"> 812 </a>        <span class="hl str">&quot;done&quot;</span> <span class="hl str">&quot;esac&quot;</span> <span class="hl str">&quot;fi&quot;</span> <span class="hl str">&quot;for&quot;</span> <span class="hl str">&quot;in&quot;</span> <span class="hl str">&quot;return&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l813" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l813" class="linenr"> 813 </a></div>
<div class="pre"><a id="l814" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l814" class="linenr"> 814 </a>    <span class="hl slc">;; The next entry is only used for defining the others</span></div>
<div class="pre"><a id="l815" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l815" class="linenr"> 815 </a>    <span class="hl opt">(</span><span class="hl kwa">shell</span> <span class="hl str">&quot;break&quot;</span> <span class="hl str">&quot;case&quot;</span> <span class="hl str">&quot;continue&quot;</span> <span class="hl str">&quot;exec&quot;</span> <span class="hl str">&quot;exit&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l816" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l816" class="linenr"> 816 </a></div>
<div class="pre"><a id="l817" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l817" class="linenr"> 817 </a>    <span class="hl opt">(</span><span class="hl kwa">zsh</span> sh-append bash</div>
<div class="pre"><a id="l818" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l818" class="linenr"> 818 </a>         <span class="hl str">&quot;select&quot;</span> <span class="hl str">&quot;foreach&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l819" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l819" class="linenr"> 819 </a>  <span class="hl str">&quot;List of keywords not in `sh-leading-keywords'.</span></div>
<div class="pre"><a id="l820" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l820" class="linenr"> 820 </a><span class="hl str">See `sh-feature'.&quot;</span></div>
<div class="pre"><a id="l821" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l821" class="linenr"> 821 </a>  <span class="hl opt">:</span>type <span class="hl opt">'(</span><span class="hl kwa">repeat</span> <span class="hl opt">(</span><span class="hl kwa">cons</span> <span class="hl opt">(</span><span class="hl kwa">symbol</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;Shell&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l822" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l822" class="linenr"> 822 </a>                       <span class="hl opt">(</span><span class="hl kwa">choice</span> <span class="hl opt">(</span><span class="hl kwa">repeat</span> string<span class="hl opt">)</span></div>
<div class="pre"><a id="l823" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l823" class="linenr"> 823 </a>                               <span class="hl opt">(</span><span class="hl kwa">sexp</span> <span class="hl opt">:</span>format <span class="hl str">&quot;Evaluate: %v&quot;</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l824" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l824" class="linenr"> 824 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-script<span class="hl opt">)</span></div>
<div class="pre"><a id="l825" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l825" class="linenr"> 825 </a></div>
<div class="pre"><a id="l826" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l826" class="linenr"> 826 </a></div>
<div class="pre"><a id="l827" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l827" class="linenr"> 827 </a></div>
<div class="pre"><a id="l828" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l828" class="linenr"> 828 </a><span class="hl opt">(</span><span class="hl kwa">defvar</span> sh-variables</div>
<div class="pre"><a id="l829" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l829" class="linenr"> 829 </a>  <span class="hl opt">'((</span><span class="hl kwa">bash</span> sh-append sh</div>
<div class="pre"><a id="l830" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l830" class="linenr"> 830 </a>          <span class="hl str">&quot;allow_null_glob_expansion&quot;</span> <span class="hl str">&quot;auto_resume&quot;</span> <span class="hl str">&quot;BASH&quot;</span> <span class="hl str">&quot;BASH_ENV&quot;</span></div>
<div class="pre"><a id="l831" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l831" class="linenr"> 831 </a>          <span class="hl str">&quot;BASH_VERSINFO&quot;</span> <span class="hl str">&quot;BASH_VERSION&quot;</span> <span class="hl str">&quot;cdable_vars&quot;</span> <span class="hl str">&quot;COMP_CWORD&quot;</span></div>
<div class="pre"><a id="l832" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l832" class="linenr"> 832 </a>          <span class="hl str">&quot;COMP_LINE&quot;</span> <span class="hl str">&quot;COMP_POINT&quot;</span> <span class="hl str">&quot;COMP_WORDS&quot;</span> <span class="hl str">&quot;COMPREPLY&quot;</span> <span class="hl str">&quot;DIRSTACK&quot;</span></div>
<div class="pre"><a id="l833" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l833" class="linenr"> 833 </a>          <span class="hl str">&quot;ENV&quot;</span> <span class="hl str">&quot;EUID&quot;</span> <span class="hl str">&quot;FCEDIT&quot;</span> <span class="hl str">&quot;FIGNORE&quot;</span> <span class="hl str">&quot;FUNCNAME&quot;</span></div>
<div class="pre"><a id="l834" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l834" class="linenr"> 834 </a>          <span class="hl str">&quot;glob_dot_filenames&quot;</span> <span class="hl str">&quot;GLOBIGNORE&quot;</span> <span class="hl str">&quot;GROUPS&quot;</span> <span class="hl str">&quot;histchars&quot;</span></div>
<div class="pre"><a id="l835" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l835" class="linenr"> 835 </a>          <span class="hl str">&quot;HISTCMD&quot;</span> <span class="hl str">&quot;HISTCONTROL&quot;</span> <span class="hl str">&quot;HISTFILE&quot;</span> <span class="hl str">&quot;HISTFILESIZE&quot;</span></div>
<div class="pre"><a id="l836" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l836" class="linenr"> 836 </a>          <span class="hl str">&quot;HISTIGNORE&quot;</span> <span class="hl str">&quot;history_control&quot;</span> <span class="hl str">&quot;HISTSIZE&quot;</span></div>
<div class="pre"><a id="l837" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l837" class="linenr"> 837 </a>          <span class="hl str">&quot;hostname_completion_file&quot;</span> <span class="hl str">&quot;HOSTFILE&quot;</span> <span class="hl str">&quot;HOSTTYPE&quot;</span> <span class="hl str">&quot;IGNOREEOF&quot;</span></div>
<div class="pre"><a id="l838" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l838" class="linenr"> 838 </a>          <span class="hl str">&quot;ignoreeof&quot;</span> <span class="hl str">&quot;INPUTRC&quot;</span> <span class="hl str">&quot;LINENO&quot;</span> <span class="hl str">&quot;MACHTYPE&quot;</span> <span class="hl str">&quot;MAIL_WARNING&quot;</span></div>
<div class="pre"><a id="l839" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l839" class="linenr"> 839 </a>          <span class="hl str">&quot;noclobber&quot;</span> <span class="hl str">&quot;nolinks&quot;</span> <span class="hl str">&quot;notify&quot;</span> <span class="hl str">&quot;no_exit_on_failed_exec&quot;</span></div>
<div class="pre"><a id="l840" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l840" class="linenr"> 840 </a>          <span class="hl str">&quot;NO_PROMPT_VARS&quot;</span> <span class="hl str">&quot;OLDPWD&quot;</span> <span class="hl str">&quot;OPTERR&quot;</span> <span class="hl str">&quot;OSTYPE&quot;</span> <span class="hl str">&quot;PIPESTATUS&quot;</span></div>
<div class="pre"><a id="l841" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l841" class="linenr"> 841 </a>          <span class="hl str">&quot;PPID&quot;</span> <span class="hl str">&quot;POSIXLY_CORRECT&quot;</span> <span class="hl str">&quot;PROMPT_COMMAND&quot;</span> <span class="hl str">&quot;PS3&quot;</span> <span class="hl str">&quot;PS4&quot;</span></div>
<div class="pre"><a id="l842" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l842" class="linenr"> 842 </a>          <span class="hl str">&quot;pushd_silent&quot;</span> <span class="hl str">&quot;PWD&quot;</span> <span class="hl str">&quot;RANDOM&quot;</span> <span class="hl str">&quot;REPLY&quot;</span> <span class="hl str">&quot;SECONDS&quot;</span> <span class="hl str">&quot;SHELLOPTS&quot;</span></div>
<div class="pre"><a id="l843" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l843" class="linenr"> 843 </a>          <span class="hl str">&quot;SHLVL&quot;</span> <span class="hl str">&quot;TIMEFORMAT&quot;</span> <span class="hl str">&quot;TMOUT&quot;</span> <span class="hl str">&quot;UID&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l844" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l844" class="linenr"> 844 </a></div>
<div class="pre"><a id="l845" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l845" class="linenr"> 845 </a>    <span class="hl opt">(</span><span class="hl kwa">csh</span> sh-append shell</div>
<div class="pre"><a id="l846" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l846" class="linenr"> 846 </a>         <span class="hl str">&quot;argv&quot;</span> <span class="hl str">&quot;cdpath&quot;</span> <span class="hl str">&quot;child&quot;</span> <span class="hl str">&quot;echo&quot;</span> <span class="hl str">&quot;histchars&quot;</span> <span class="hl str">&quot;history&quot;</span> <span class="hl str">&quot;home&quot;</span></div>
<div class="pre"><a id="l847" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l847" class="linenr"> 847 </a>         <span class="hl str">&quot;ignoreeof&quot;</span> <span class="hl str">&quot;mail&quot;</span> <span class="hl str">&quot;noclobber&quot;</span> <span class="hl str">&quot;noglob&quot;</span> <span class="hl str">&quot;nonomatch&quot;</span> <span class="hl str">&quot;path&quot;</span> <span class="hl str">&quot;prompt&quot;</span></div>
<div class="pre"><a id="l848" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l848" class="linenr"> 848 </a>         <span class="hl str">&quot;shell&quot;</span> <span class="hl str">&quot;status&quot;</span> <span class="hl str">&quot;time&quot;</span> <span class="hl str">&quot;verbose&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l849" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l849" class="linenr"> 849 </a></div>
<div class="pre"><a id="l850" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l850" class="linenr"> 850 </a>    <span class="hl opt">(</span><span class="hl kwa">es</span> sh-append shell</div>
<div class="pre"><a id="l851" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l851" class="linenr"> 851 </a>        <span class="hl str">&quot;apid&quot;</span> <span class="hl str">&quot;cdpath&quot;</span> <span class="hl str">&quot;CDPATH&quot;</span> <span class="hl str">&quot;history&quot;</span> <span class="hl str">&quot;home&quot;</span> <span class="hl str">&quot;ifs&quot;</span> <span class="hl str">&quot;noexport&quot;</span> <span class="hl str">&quot;path&quot;</span></div>
<div class="pre"><a id="l852" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l852" class="linenr"> 852 </a>        <span class="hl str">&quot;pid&quot;</span> <span class="hl str">&quot;prompt&quot;</span> <span class="hl str">&quot;signals&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l853" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l853" class="linenr"> 853 </a></div>
<div class="pre"><a id="l854" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l854" class="linenr"> 854 </a>    <span class="hl opt">(</span><span class="hl kwa">jcsh</span> sh-append csh</div>
<div class="pre"><a id="l855" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l855" class="linenr"> 855 </a>          <span class="hl str">&quot;notify&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l856" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l856" class="linenr"> 856 </a></div>
<div class="pre"><a id="l857" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l857" class="linenr"> 857 </a>    <span class="hl opt">(</span><span class="hl kwa">ksh88</span> sh-append sh</div>
<div class="pre"><a id="l858" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l858" class="linenr"> 858 </a>           <span class="hl str">&quot;ENV&quot;</span> <span class="hl str">&quot;ERRNO&quot;</span> <span class="hl str">&quot;FCEDIT&quot;</span> <span class="hl str">&quot;FPATH&quot;</span> <span class="hl str">&quot;HISTFILE&quot;</span> <span class="hl str">&quot;HISTSIZE&quot;</span> <span class="hl str">&quot;LINENO&quot;</span></div>
<div class="pre"><a id="l859" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l859" class="linenr"> 859 </a>           <span class="hl str">&quot;OLDPWD&quot;</span> <span class="hl str">&quot;PPID&quot;</span> <span class="hl str">&quot;PS3&quot;</span> <span class="hl str">&quot;PS4&quot;</span> <span class="hl str">&quot;PWD&quot;</span> <span class="hl str">&quot;RANDOM&quot;</span> <span class="hl str">&quot;REPLY&quot;</span> <span class="hl str">&quot;SECONDS&quot;</span></div>
<div class="pre"><a id="l860" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l860" class="linenr"> 860 </a>           <span class="hl str">&quot;TMOUT&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l861" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l861" class="linenr"> 861 </a></div>
<div class="pre"><a id="l862" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l862" class="linenr"> 862 </a>    <span class="hl opt">(</span><span class="hl kwa">oash</span> sh-append sh</div>
<div class="pre"><a id="l863" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l863" class="linenr"> 863 </a>          <span class="hl str">&quot;FIELD&quot;</span> <span class="hl str">&quot;FIELD_MAX&quot;</span> <span class="hl str">&quot;LAST_KEY&quot;</span> <span class="hl str">&quot;OALIB&quot;</span> <span class="hl str">&quot;PP_ITEM&quot;</span> <span class="hl str">&quot;PP_NUM&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l864" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l864" class="linenr"> 864 </a></div>
<div class="pre"><a id="l865" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l865" class="linenr"> 865 </a>    <span class="hl opt">(</span><span class="hl kwa">rc</span> sh-append shell</div>
<div class="pre"><a id="l866" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l866" class="linenr"> 866 </a>        <span class="hl str">&quot;apid&quot;</span> <span class="hl str">&quot;apids&quot;</span> <span class="hl str">&quot;cdpath&quot;</span> <span class="hl str">&quot;CDPATH&quot;</span> <span class="hl str">&quot;history&quot;</span> <span class="hl str">&quot;home&quot;</span> <span class="hl str">&quot;ifs&quot;</span> <span class="hl str">&quot;path&quot;</span> <span class="hl str">&quot;pid&quot;</span></div>
<div class="pre"><a id="l867" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l867" class="linenr"> 867 </a>        <span class="hl str">&quot;prompt&quot;</span> <span class="hl str">&quot;status&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l868" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l868" class="linenr"> 868 </a></div>
<div class="pre"><a id="l869" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l869" class="linenr"> 869 </a>    <span class="hl opt">(</span><span class="hl kwa">sh</span> sh-append shell</div>
<div class="pre"><a id="l870" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l870" class="linenr"> 870 </a>        <span class="hl str">&quot;CDPATH&quot;</span> <span class="hl str">&quot;IFS&quot;</span> <span class="hl str">&quot;OPTARG&quot;</span> <span class="hl str">&quot;OPTIND&quot;</span> <span class="hl str">&quot;PS1&quot;</span> <span class="hl str">&quot;PS2&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l871" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l871" class="linenr"> 871 </a></div>
<div class="pre"><a id="l872" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l872" class="linenr"> 872 </a>    <span class="hl slc">;; The next entry is only used for defining the others</span></div>
<div class="pre"><a id="l873" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l873" class="linenr"> 873 </a>    <span class="hl opt">(</span><span class="hl kwa">shell</span> <span class="hl str">&quot;COLUMNS&quot;</span> <span class="hl str">&quot;EDITOR&quot;</span> <span class="hl str">&quot;HOME&quot;</span> <span class="hl str">&quot;HUSHLOGIN&quot;</span> <span class="hl str">&quot;LANG&quot;</span> <span class="hl str">&quot;LC_COLLATE&quot;</span></div>
<div class="pre"><a id="l874" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l874" class="linenr"> 874 </a>           <span class="hl str">&quot;LC_CTYPE&quot;</span> <span class="hl str">&quot;LC_MESSAGES&quot;</span> <span class="hl str">&quot;LC_MONETARY&quot;</span> <span class="hl str">&quot;LC_NUMERIC&quot;</span> <span class="hl str">&quot;LC_TIME&quot;</span></div>
<div class="pre"><a id="l875" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l875" class="linenr"> 875 </a>           <span class="hl str">&quot;LINES&quot;</span> <span class="hl str">&quot;LOGNAME&quot;</span> <span class="hl str">&quot;MAIL&quot;</span> <span class="hl str">&quot;MAILCHECK&quot;</span> <span class="hl str">&quot;MAILPATH&quot;</span> <span class="hl str">&quot;PAGER&quot;</span> <span class="hl str">&quot;PATH&quot;</span></div>
<div class="pre"><a id="l876" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l876" class="linenr"> 876 </a>           <span class="hl str">&quot;SHELL&quot;</span> <span class="hl str">&quot;TERM&quot;</span> <span class="hl str">&quot;TERMCAP&quot;</span> <span class="hl str">&quot;TERMINFO&quot;</span> <span class="hl str">&quot;VISUAL&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l877" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l877" class="linenr"> 877 </a></div>
<div class="pre"><a id="l878" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l878" class="linenr"> 878 </a>    <span class="hl opt">(</span><span class="hl kwa">tcsh</span> sh-append csh</div>
<div class="pre"><a id="l879" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l879" class="linenr"> 879 </a>          <span class="hl str">&quot;addsuffix&quot;</span> <span class="hl str">&quot;ampm&quot;</span> <span class="hl str">&quot;autocorrect&quot;</span> <span class="hl str">&quot;autoexpand&quot;</span> <span class="hl str">&quot;autolist&quot;</span></div>
<div class="pre"><a id="l880" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l880" class="linenr"> 880 </a>          <span class="hl str">&quot;autologout&quot;</span> <span class="hl str">&quot;chase_symlinks&quot;</span> <span class="hl str">&quot;correct&quot;</span> <span class="hl str">&quot;dextract&quot;</span> <span class="hl str">&quot;edit&quot;</span> <span class="hl str">&quot;el&quot;</span></div>
<div class="pre"><a id="l881" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l881" class="linenr"> 881 </a>          <span class="hl str">&quot;fignore&quot;</span> <span class="hl str">&quot;gid&quot;</span> <span class="hl str">&quot;histlit&quot;</span> <span class="hl str">&quot;HOST&quot;</span> <span class="hl str">&quot;HOSTTYPE&quot;</span> <span class="hl str">&quot;HPATH&quot;</span></div>
<div class="pre"><a id="l882" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l882" class="linenr"> 882 </a>          <span class="hl str">&quot;ignore_symlinks&quot;</span> <span class="hl str">&quot;listjobs&quot;</span> <span class="hl str">&quot;listlinks&quot;</span> <span class="hl str">&quot;listmax&quot;</span> <span class="hl str">&quot;matchbeep&quot;</span></div>
<div class="pre"><a id="l883" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l883" class="linenr"> 883 </a>          <span class="hl str">&quot;nobeep&quot;</span> <span class="hl str">&quot;NOREBIND&quot;</span> <span class="hl str">&quot;oid&quot;</span> <span class="hl str">&quot;printexitvalue&quot;</span> <span class="hl str">&quot;prompt2&quot;</span> <span class="hl str">&quot;prompt3&quot;</span></div>
<div class="pre"><a id="l884" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l884" class="linenr"> 884 </a>          <span class="hl str">&quot;pushdsilent&quot;</span> <span class="hl str">&quot;pushdtohome&quot;</span> <span class="hl str">&quot;recexact&quot;</span> <span class="hl str">&quot;recognize_only_executables&quot;</span></div>
<div class="pre"><a id="l885" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l885" class="linenr"> 885 </a>          <span class="hl str">&quot;rmstar&quot;</span> <span class="hl str">&quot;savehist&quot;</span> <span class="hl str">&quot;SHLVL&quot;</span> <span class="hl str">&quot;showdots&quot;</span> <span class="hl str">&quot;sl&quot;</span> <span class="hl str">&quot;SYSTYPE&quot;</span> <span class="hl str">&quot;tcsh&quot;</span> <span class="hl str">&quot;term&quot;</span></div>
<div class="pre"><a id="l886" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l886" class="linenr"> 886 </a>          <span class="hl str">&quot;tperiod&quot;</span> <span class="hl str">&quot;tty&quot;</span> <span class="hl str">&quot;uid&quot;</span> <span class="hl str">&quot;version&quot;</span> <span class="hl str">&quot;visiblebell&quot;</span> <span class="hl str">&quot;watch&quot;</span> <span class="hl str">&quot;who&quot;</span></div>
<div class="pre"><a id="l887" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l887" class="linenr"> 887 </a>          <span class="hl str">&quot;wordchars&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l888" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l888" class="linenr"> 888 </a></div>
<div class="pre"><a id="l889" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l889" class="linenr"> 889 </a>    <span class="hl opt">(</span><span class="hl kwa">zsh</span> sh-append ksh88</div>
<div class="pre"><a id="l890" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l890" class="linenr"> 890 </a>         <span class="hl str">&quot;BAUD&quot;</span> <span class="hl str">&quot;bindcmds&quot;</span> <span class="hl str">&quot;cdpath&quot;</span> <span class="hl str">&quot;DIRSTACKSIZE&quot;</span> <span class="hl str">&quot;fignore&quot;</span> <span class="hl str">&quot;FIGNORE&quot;</span> <span class="hl str">&quot;fpath&quot;</span></div>
<div class="pre"><a id="l891" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l891" class="linenr"> 891 </a>         <span class="hl str">&quot;HISTCHARS&quot;</span> <span class="hl str">&quot;hostcmds&quot;</span> <span class="hl str">&quot;hosts&quot;</span> <span class="hl str">&quot;HOSTS&quot;</span> <span class="hl str">&quot;LISTMAX&quot;</span> <span class="hl str">&quot;LITHISTSIZE&quot;</span></div>
<div class="pre"><a id="l892" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l892" class="linenr"> 892 </a>         <span class="hl str">&quot;LOGCHECK&quot;</span> <span class="hl str">&quot;mailpath&quot;</span> <span class="hl str">&quot;manpath&quot;</span> <span class="hl str">&quot;NULLCMD&quot;</span> <span class="hl str">&quot;optcmds&quot;</span> <span class="hl str">&quot;path&quot;</span> <span class="hl str">&quot;POSTEDIT&quot;</span></div>
<div class="pre"><a id="l893" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l893" class="linenr"> 893 </a>         <span class="hl str">&quot;prompt&quot;</span> <span class="hl str">&quot;PROMPT&quot;</span> <span class="hl str">&quot;PROMPT2&quot;</span> <span class="hl str">&quot;PROMPT3&quot;</span> <span class="hl str">&quot;PROMPT4&quot;</span> <span class="hl str">&quot;psvar&quot;</span> <span class="hl str">&quot;PSVAR&quot;</span></div>
<div class="pre"><a id="l894" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l894" class="linenr"> 894 </a>         <span class="hl str">&quot;READNULLCMD&quot;</span> <span class="hl str">&quot;REPORTTIME&quot;</span> <span class="hl str">&quot;RPROMPT&quot;</span> <span class="hl str">&quot;RPS1&quot;</span> <span class="hl str">&quot;SAVEHIST&quot;</span> <span class="hl str">&quot;SPROMPT&quot;</span></div>
<div class="pre"><a id="l895" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l895" class="linenr"> 895 </a>         <span class="hl str">&quot;STTY&quot;</span> <span class="hl str">&quot;TIMEFMT&quot;</span> <span class="hl str">&quot;TMOUT&quot;</span> <span class="hl str">&quot;TMPPREFIX&quot;</span> <span class="hl str">&quot;varcmds&quot;</span> <span class="hl str">&quot;watch&quot;</span> <span class="hl str">&quot;WATCH&quot;</span></div>
<div class="pre"><a id="l896" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l896" class="linenr"> 896 </a>         <span class="hl str">&quot;WATCHFMT&quot;</span> <span class="hl str">&quot;WORDCHARS&quot;</span> <span class="hl str">&quot;ZDOTDIR&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l897" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l897" class="linenr"> 897 </a>  <span class="hl str">&quot;List of all shell variables available for completing read.</span></div>
<div class="pre"><a id="l898" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l898" class="linenr"> 898 </a><span class="hl str">See `sh-feature'.&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l899" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l899" class="linenr"> 899 </a></div>
<div class="pre"><a id="l900" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l900" class="linenr"> 900 </a><span class="cntrl">\f</span></div>
<div class="pre"><a id="l901" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l901" class="linenr"> 901 </a><span class="hl slc">;; Font-Lock support</span></div>
<div class="pre"><a id="l902" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l902" class="linenr"> 902 </a></div>
<div class="pre"><a id="l903" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l903" class="linenr"> 903 </a><span class="hl opt">(</span><span class="hl kwa">defface</span> sh-heredoc</div>
<div class="pre"><a id="l904" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l904" class="linenr"> 904 </a>  <span class="hl opt">'((((</span><span class="hl kwa">min-colors</span> <span class="hl num">88</span><span class="hl opt">) (</span><span class="hl kwa">class</span> color<span class="hl opt">)</span></div>
<div class="pre"><a id="l905" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l905" class="linenr"> 905 </a>      <span class="hl opt">(</span><span class="hl kwa">background</span> dark<span class="hl opt">))</span></div>
<div class="pre"><a id="l906" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l906" class="linenr"> 906 </a>     <span class="hl opt">(:</span>foreground <span class="hl str">&quot;yellow1&quot;</span> <span class="hl opt">:</span>weight bold<span class="hl opt">))</span></div>
<div class="pre"><a id="l907" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l907" class="linenr"> 907 </a>    <span class="hl opt">(((</span><span class="hl kwa">class</span> color<span class="hl opt">)</span></div>
<div class="pre"><a id="l908" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l908" class="linenr"> 908 </a>      <span class="hl opt">(</span><span class="hl kwa">background</span> dark<span class="hl opt">))</span></div>
<div class="pre"><a id="l909" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l909" class="linenr"> 909 </a>     <span class="hl opt">(:</span>foreground <span class="hl str">&quot;yellow&quot;</span> <span class="hl opt">:</span>weight bold<span class="hl opt">))</span></div>
<div class="pre"><a id="l910" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l910" class="linenr"> 910 </a>    <span class="hl opt">(((</span><span class="hl kwa">class</span> color<span class="hl opt">)</span></div>
<div class="pre"><a id="l911" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l911" class="linenr"> 911 </a>      <span class="hl opt">(</span><span class="hl kwa">background</span> light<span class="hl opt">))</span></div>
<div class="pre"><a id="l912" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l912" class="linenr"> 912 </a>     <span class="hl opt">(:</span>foreground <span class="hl str">&quot;tan1&quot;</span> <span class="hl opt">))</span></div>
<div class="pre"><a id="l913" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l913" class="linenr"> 913 </a>    <span class="hl opt">(</span><span class="hl kwa">t</span></div>
<div class="pre"><a id="l914" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l914" class="linenr"> 914 </a>     <span class="hl opt">(:</span>weight bold<span class="hl opt">)))</span></div>
<div class="pre"><a id="l915" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l915" class="linenr"> 915 </a>  <span class="hl str">&quot;Face to show a here-document.&quot;</span></div>
<div class="pre"><a id="l916" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l916" class="linenr"> 916 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-indentation<span class="hl opt">)</span></div>
<div class="pre"><a id="l917" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l917" class="linenr"> 917 </a></div>
<div class="pre"><a id="l918" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l918" class="linenr"> 918 </a><span class="hl slc">;; These colors are probably icky.  It's just a placeholder though.</span></div>
<div class="pre"><a id="l919" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l919" class="linenr"> 919 </a><span class="hl opt">(</span><span class="hl kwa">defface</span> sh-quoted-exec</div>
<div class="pre"><a id="l920" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l920" class="linenr"> 920 </a>  <span class="hl opt">'((((</span><span class="hl kwa">class</span> color<span class="hl opt">) (</span><span class="hl kwa">background</span> dark<span class="hl opt">))</span></div>
<div class="pre"><a id="l921" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l921" class="linenr"> 921 </a>     <span class="hl opt">(:</span>foreground <span class="hl str">&quot;salmon&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l922" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l922" class="linenr"> 922 </a>    <span class="hl opt">(((</span><span class="hl kwa">class</span> color<span class="hl opt">) (</span><span class="hl kwa">background</span> light<span class="hl opt">))</span></div>
<div class="pre"><a id="l923" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l923" class="linenr"> 923 </a>     <span class="hl opt">(:</span>foreground <span class="hl str">&quot;magenta&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l924" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l924" class="linenr"> 924 </a>    <span class="hl opt">(</span><span class="hl kwa">t</span></div>
<div class="pre"><a id="l925" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l925" class="linenr"> 925 </a>     <span class="hl opt">(:</span>weight bold<span class="hl opt">)))</span></div>
<div class="pre"><a id="l926" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l926" class="linenr"> 926 </a>  <span class="hl str">&quot;Face to show quoted execs like</span> <span class="hl esc">\\</span><span class="hl str">=`blabla</span><span class="hl esc">\\</span><span class="hl str">=`.&quot;</span></div>
<div class="pre"><a id="l927" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l927" class="linenr"> 927 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-indentation<span class="hl opt">)</span></div>
<div class="pre"><a id="l928" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l928" class="linenr"> 928 </a></div>
<div class="pre"><a id="l929" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l929" class="linenr"> 929 </a><span class="hl opt">(</span><span class="hl kwa">defface</span> sh-escaped-newline <span class="hl opt">'((</span><span class="hl kwa">t</span> <span class="hl opt">:</span>inherit font-lock-string-face<span class="hl opt">))</span></div>
<div class="pre"><a id="l930" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l930" class="linenr"> 930 </a>  <span class="hl str">&quot;Face used for (non-escaped) backslash at end of a line in Shell-script mode.&quot;</span></div>
<div class="pre"><a id="l931" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l931" class="linenr"> 931 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-script</div>
<div class="pre"><a id="l932" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l932" class="linenr"> 932 </a>  <span class="hl opt">:</span>version <span class="hl str">&quot;22.1&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l933" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l933" class="linenr"> 933 </a></div>
<div class="pre"><a id="l934" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l934" class="linenr"> 934 </a><span class="hl opt">(</span><span class="hl kwa">defvar</span> sh-font-lock-keywords-var</div>
<div class="pre"><a id="l935" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l935" class="linenr"> 935 </a>  <span class="hl opt">'((</span><span class="hl kwa">csh</span> sh-append shell</div>
<div class="pre"><a id="l936" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l936" class="linenr"> 936 </a>         <span class="hl opt">(</span><span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">${?[#?]?</span><span class="hl esc">\\</span><span class="hl str">([[:alpha:]_][[:alnum:]_]*</span><span class="hl esc">\\</span><span class="hl str">|0</span><span class="hl esc">\\</span><span class="hl str">)&quot;</span> <span class="hl num">1</span></div>
<div class="pre"><a id="l937" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l937" class="linenr"> 937 </a>          font-lock-variable-name-face<span class="hl opt">))</span></div>
<div class="pre"><a id="l938" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l938" class="linenr"> 938 </a></div>
<div class="pre"><a id="l939" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l939" class="linenr"> 939 </a>    <span class="hl opt">(</span><span class="hl kwa">es</span> sh-append executable-font-lock-keywords</div>
<div class="pre"><a id="l940" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l940" class="linenr"> 940 </a>        <span class="hl opt">(</span><span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">$#?</span><span class="hl esc">\\</span><span class="hl str">([[:alpha:]_][[:alnum:]_]*</span><span class="hl esc">\\</span><span class="hl str">|[0-9]+</span><span class="hl esc">\\</span><span class="hl str">)&quot;</span> <span class="hl num">1</span></div>
<div class="pre"><a id="l941" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l941" class="linenr"> 941 </a>         font-lock-variable-name-face<span class="hl opt">))</span></div>
<div class="pre"><a id="l942" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l942" class="linenr"> 942 </a></div>
<div class="pre"><a id="l943" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l943" class="linenr"> 943 </a>    <span class="hl opt">(</span><span class="hl kwa">rc</span> sh-append es<span class="hl opt">)</span></div>
<div class="pre"><a id="l944" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l944" class="linenr"> 944 </a>    <span class="hl opt">(</span><span class="hl kwa">bash</span> sh-append sh <span class="hl opt">(</span><span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">$(</span><span class="hl esc">\\</span><span class="hl str">(</span><span class="hl esc">\\</span><span class="hl str">sw+</span><span class="hl esc">\\</span><span class="hl str">)&quot;</span> <span class="hl opt">(</span><span class="hl kwa">1</span> <span class="hl opt">'</span>sh-quoted-exec t<span class="hl opt">) ))</span></div>
<div class="pre"><a id="l945" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l945" class="linenr"> 945 </a>    <span class="hl opt">(</span><span class="hl kwa">sh</span> sh-append shell</div>
<div class="pre"><a id="l946" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l946" class="linenr"> 946 </a>        <span class="hl slc">;; Variable names.</span></div>
<div class="pre"><a id="l947" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l947" class="linenr"> 947 </a>        <span class="hl opt">(</span><span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">$</span><span class="hl esc">\\</span><span class="hl str">({#?</span><span class="hl esc">\\</span><span class="hl str">)?</span><span class="hl esc">\\</span><span class="hl str">([[:alpha:]_][[:alnum:]_]*</span><span class="hl esc">\\</span><span class="hl str">|[-#?&#64;!]</span><span class="hl esc">\\</span><span class="hl str">)&quot;</span> <span class="hl num">2</span></div>
<div class="pre"><a id="l948" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l948" class="linenr"> 948 </a>          font-lock-variable-name-face<span class="hl opt">)</span></div>
<div class="pre"><a id="l949" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l949" class="linenr"> 949 </a>        <span class="hl slc">;; Function names.</span></div>
<div class="pre"><a id="l950" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l950" class="linenr"> 950 </a>        <span class="hl opt">(</span><span class="hl str">&quot;^</span><span class="hl esc">\\</span><span class="hl str">(</span><span class="hl esc">\\</span><span class="hl str">sw+</span><span class="hl esc">\\</span><span class="hl str">)[</span> <span class="hl esc">\t</span><span class="hl str">]*(&quot;</span> <span class="hl num">1</span> font-lock-function-name-face<span class="hl opt">)</span></div>
<div class="pre"><a id="l951" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l951" class="linenr"> 951 </a>        <span class="hl opt">(</span><span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">&lt;</span><span class="hl esc">\\</span><span class="hl str">(function</span><span class="hl esc">\\</span><span class="hl str">)</span><span class="hl esc">\\</span><span class="hl str">&gt;[</span> <span class="hl esc">\t</span><span class="hl str">]*</span><span class="hl esc">\\</span><span class="hl str">(</span><span class="hl esc">\\</span><span class="hl str">sw+</span><span class="hl esc">\\</span><span class="hl str">)?&quot;</span></div>
<div class="pre"><a id="l952" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l952" class="linenr"> 952 </a>          <span class="hl opt">(</span><span class="hl kwa">1</span> font-lock-keyword-face<span class="hl opt">) (</span><span class="hl kwa">2</span> font-lock-function-name-face nil t<span class="hl opt">))</span></div>
<div class="pre"><a id="l953" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l953" class="linenr"> 953 </a>        <span class="hl opt">(</span><span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">(?:^</span><span class="hl esc">\\</span><span class="hl str">s *</span><span class="hl esc">\\</span><span class="hl str">|[[();&amp;|]</span><span class="hl esc">\\</span><span class="hl str">s *</span><span class="hl esc">\\</span><span class="hl str">|</span><span class="hl esc">\\</span><span class="hl str">(?:</span><span class="hl esc">\\</span><span class="hl str">s +-[ao]</span><span class="hl esc">\\</span><span class="hl str">|if</span><span class="hl esc">\\</span><span class="hl str">|else</span><span class="hl esc">\\</span><span class="hl str">|then</span><span class="hl esc">\\</span><span class="hl str">|while</span><span class="hl esc">\\</span><span class="hl str">|do</span><span class="hl esc">\\</span><span class="hl str">)</span><span class="hl esc">\\</span><span class="hl str">s +</span><span class="hl esc">\\</span><span class="hl str">)</span><span class="hl esc">\\</span><span class="hl str">(!</span><span class="hl esc">\\</span><span class="hl str">)&quot;</span></div>
<div class="pre"><a id="l954" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l954" class="linenr"> 954 </a>         <span class="hl num">1</span> font-lock-negation-char-face<span class="hl opt">))</span></div>
<div class="pre"><a id="l955" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l955" class="linenr"> 955 </a></div>
<div class="pre"><a id="l956" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l956" class="linenr"> 956 </a>    <span class="hl slc">;; The next entry is only used for defining the others</span></div>
<div class="pre"><a id="l957" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l957" class="linenr"> 957 </a>    <span class="hl opt">(</span><span class="hl kwa">shell</span></div>
<div class="pre"><a id="l958" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l958" class="linenr"> 958 </a>           <span class="hl slc">;; Using font-lock-string-face here confuses sh-get-indent-info.</span></div>
<div class="pre"><a id="l959" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l959" class="linenr"> 959 </a>           <span class="hl opt">(</span><span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">(^</span><span class="hl esc">\\</span><span class="hl str">|[^</span><span class="hl esc">\\</span><span class="hl str">]</span><span class="hl esc">\\</span><span class="hl str">)</span><span class="hl esc">\\</span><span class="hl str">(</span><span class="hl esc">\\\\\\\\\\</span><span class="hl str">)*</span><span class="hl esc">\\</span><span class="hl str">(</span><span class="hl esc">\\\\\\</span><span class="hl str">)$&quot;</span> <span class="hl num">3</span> <span class="hl opt">'</span>sh-escaped-newline<span class="hl opt">)</span></div>
<div class="pre"><a id="l960" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l960" class="linenr"> 960 </a>           <span class="hl opt">(</span><span class="hl str">&quot;</span><span class="hl esc">\\\\</span><span class="hl str">[^[:alnum:]]&quot;</span> <span class="hl num">0</span> font-lock-string-face<span class="hl opt">)</span></div>
<div class="pre"><a id="l961" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l961" class="linenr"> 961 </a>           <span class="hl opt">(</span><span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">${?</span><span class="hl esc">\\</span><span class="hl str">([[:alpha:]_][[:alnum:]_]*</span><span class="hl esc">\\</span><span class="hl str">|[0-9]+</span><span class="hl esc">\\</span><span class="hl str">|[$*_]</span><span class="hl esc">\\</span><span class="hl str">)&quot;</span> <span class="hl num">1</span></div>
<div class="pre"><a id="l962" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l962" class="linenr"> 962 </a>             font-lock-variable-name-face<span class="hl opt">))</span></div>
<div class="pre"><a id="l963" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l963" class="linenr"> 963 </a>    <span class="hl opt">(</span><span class="hl kwa">rpm</span> sh-append rpm2</div>
<div class="pre"><a id="l964" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l964" class="linenr"> 964 </a>         <span class="hl opt">(</span><span class="hl str">&quot;%{?</span><span class="hl esc">\\</span><span class="hl str">(</span><span class="hl esc">\\</span><span class="hl str">sw+</span><span class="hl esc">\\</span><span class="hl str">)&quot;</span>  <span class="hl num">1</span> font-lock-keyword-face<span class="hl opt">))</span></div>
<div class="pre"><a id="l965" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l965" class="linenr"> 965 </a>    <span class="hl opt">(</span><span class="hl kwa">rpm2</span> sh-append shell</div>
<div class="pre"><a id="l966" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l966" class="linenr"> 966 </a>          <span class="hl opt">(</span><span class="hl str">&quot;^Summary:</span><span class="hl esc">\\</span><span class="hl str">(.*</span><span class="hl esc">\\</span><span class="hl str">)$&quot;</span> <span class="hl opt">(</span><span class="hl kwa">1</span> font-lock-doc-face t<span class="hl opt">))</span></div>
<div class="pre"><a id="l967" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l967" class="linenr"> 967 </a>          <span class="hl opt">(</span><span class="hl str">&quot;^</span><span class="hl esc">\\</span><span class="hl str">(</span><span class="hl esc">\\</span><span class="hl str">sw+</span><span class="hl esc">\\</span><span class="hl str">):&quot;</span>  <span class="hl num">1</span> font-lock-variable-name-face<span class="hl opt">)))</span></div>
<div class="pre"><a id="l968" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l968" class="linenr"> 968 </a>  <span class="hl str">&quot;Default expressions to highlight in Shell Script modes.  See `sh-feature'.&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l969" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l969" class="linenr"> 969 </a></div>
<div class="pre"><a id="l970" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l970" class="linenr"> 970 </a><span class="hl opt">(</span><span class="hl kwa">defvar</span> sh-font-lock-keywords-var-1</div>
<div class="pre"><a id="l971" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l971" class="linenr"> 971 </a>  <span class="hl opt">'((</span><span class="hl kwa">sh</span> <span class="hl str">&quot;[</span> <span class="hl esc">\t</span><span class="hl str">]in</span><span class="hl esc">\\</span><span class="hl str">&gt;&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l972" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l972" class="linenr"> 972 </a>  <span class="hl str">&quot;Subdued level highlighting for Shell Script modes.&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l973" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l973" class="linenr"> 973 </a></div>
<div class="pre"><a id="l974" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l974" class="linenr"> 974 </a><span class="hl opt">(</span><span class="hl kwa">defvar</span> sh-font-lock-keywords-var-2 <span class="hl opt">()</span></div>
<div class="pre"><a id="l975" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l975" class="linenr"> 975 </a>  <span class="hl str">&quot;Gaudy level highlighting for Shell Script modes.&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l976" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l976" class="linenr"> 976 </a></div>
<div class="pre"><a id="l977" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l977" class="linenr"> 977 </a><span class="hl slc">;; These are used for the syntax table stuff (derived from cperl-mode).</span></div>
<div class="pre"><a id="l978" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l978" class="linenr"> 978 </a><span class="hl slc">;; Note: parse-sexp-lookup-properties must be set to t for it to work.</span></div>
<div class="pre"><a id="l979" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l979" class="linenr"> 979 </a><span class="hl opt">(</span><span class="hl kwa">defconst</span> sh-st-punc <span class="hl opt">(</span><span class="hl kwa">string-to-syntax</span> <span class="hl str">&quot;.&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l980" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l980" class="linenr"> 980 </a><span class="hl opt">(</span><span class="hl kwa">defconst</span> sh-here-doc-syntax <span class="hl opt">(</span><span class="hl kwa">string-to-syntax</span> <span class="hl str">&quot;|&quot;</span><span class="hl opt">))</span> <span class="hl slc">;; generic string</span></div>
<div class="pre"><a id="l981" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l981" class="linenr"> 981 </a></div>
<div class="pre"><a id="l982" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l982" class="linenr"> 982 </a><span class="hl opt">(</span><span class="hl kwa">eval-and-compile</span></div>
<div class="pre"><a id="l983" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l983" class="linenr"> 983 </a>  <span class="hl opt">(</span><span class="hl kwa">defconst</span> sh-escaped-line-re</div>
<div class="pre"><a id="l984" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l984" class="linenr"> 984 </a>    <span class="hl slc">;; Should match until the real end-of-continued-line, but if that is not</span></div>
<div class="pre"><a id="l985" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l985" class="linenr"> 985 </a>    <span class="hl slc">;; possible (because we bump into EOB or the search bound), then we should</span></div>
<div class="pre"><a id="l986" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l986" class="linenr"> 986 </a>    <span class="hl slc">;; match until the search bound.</span></div>
<div class="pre"><a id="l987" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l987" class="linenr"> 987 </a>    <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">(?:</span><span class="hl esc">\\</span><span class="hl str">(?:.*[^</span><span class="hl esc">\\\n</span><span class="hl str">]</span><span class="hl esc">\\</span><span class="hl str">)?</span><span class="hl esc">\\</span><span class="hl str">(?:</span><span class="hl esc">\\\\\\\\\\</span><span class="hl str">)*</span><span class="hl esc">\\\\\n\\</span><span class="hl str">)*.*&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l988" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l988" class="linenr"> 988 </a></div>
<div class="pre"><a id="l989" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l989" class="linenr"> 989 </a>  <span class="hl opt">(</span><span class="hl kwa">defconst</span> sh-here-doc-open-re</div>
<div class="pre"><a id="l990" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l990" class="linenr"> 990 </a>    <span class="hl opt">(</span><span class="hl kwa">concat</span> <span class="hl str">&quot;[^&lt;]&lt;&lt;-?</span><span class="hl esc">\\</span><span class="hl str">s-*</span><span class="hl esc">\\\\</span><span class="hl str">?</span><span class="hl esc">\\</span><span class="hl str">(</span><span class="hl esc">\\</span><span class="hl str">(?:['</span><span class="hl esc">\&quot;</span><span class="hl str">][^'</span><span class="hl esc">\&quot;</span><span class="hl str">]+['</span><span class="hl esc">\&quot;</span><span class="hl str">]</span><span class="hl esc">\\</span><span class="hl str">|</span><span class="hl esc">\\</span><span class="hl str">sw</span><span class="hl esc">\\</span><span class="hl str">|[-/~._]</span><span class="hl esc">\\</span><span class="hl str">)+</span><span class="hl esc">\\</span><span class="hl str">)&quot;</span></div>
<div class="pre"><a id="l991" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l991" class="linenr"> 991 </a>            sh-escaped-line-re <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">(</span><span class="hl esc">\n\\</span><span class="hl str">)&quot;</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l992" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l992" class="linenr"> 992 </a></div>
<div class="pre"><a id="l993" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l993" class="linenr"> 993 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh--inside-noncommand-expression <span class="hl opt">(</span><span class="hl kwa">pos</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l994" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l994" class="linenr"> 994 </a>  <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l995" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l995" class="linenr"> 995 </a>    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">ppss</span> <span class="hl opt">(</span><span class="hl kwa">syntax-ppss</span> pos<span class="hl opt">)))</span></div>
<div class="pre"><a id="l996" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l996" class="linenr"> 996 </a>      <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">1</span> ppss<span class="hl opt">)</span></div>
<div class="pre"><a id="l997" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l997" class="linenr"> 997 </a>        <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">1</span> ppss<span class="hl opt">))</span></div>
<div class="pre"><a id="l998" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l998" class="linenr"> 998 </a>        <span class="hl opt">(</span><span class="hl kwa">or</span></div>
<div class="pre"><a id="l999" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l999" class="linenr"> 999 </a>         <span class="hl opt">(</span><span class="hl kwa">pcase</span> <span class="hl opt">(</span><span class="hl kwa">char-after</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1000" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1000" class="linenr">1000 </a>           <span class="hl slc">;; ((...)) or $((...)) or $[...] or ${...}. Nested</span></div>
<div class="pre"><a id="l1001" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1001" class="linenr">1001 </a>           <span class="hl slc">;; parenthesis can occur inside the first of these forms, so</span></div>
<div class="pre"><a id="l1002" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1002" class="linenr">1002 </a>           <span class="hl slc">;; parse backward recursively.</span></div>
<div class="pre"><a id="l1003" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1003" class="linenr">1003 </a>           <span class="hl opt">(`</span>?\<span class="hl opt">( (</span><span class="hl kwa">eq</span> ?\<span class="hl opt">( (</span><span class="hl kwa">char-before</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1004" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1004" class="linenr">1004 </a>           <span class="hl opt">((</span><span class="hl kwa">or</span> <span class="hl opt">`</span>?\<span class="hl opt">{ `</span>?\<span class="hl opt">[) (</span><span class="hl kwa">eq</span> ?\$ <span class="hl opt">(</span><span class="hl kwa">char-before</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l1005" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1005" class="linenr">1005 </a>         <span class="hl opt">(</span><span class="hl kwa">sh--inside-noncommand-expression</span> <span class="hl opt">(</span><span class="hl kwa">1-</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))))))))</span></div>
<div class="pre"><a id="l1006" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1006" class="linenr">1006 </a></div>
<div class="pre"><a id="l1007" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1007" class="linenr">1007 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-font-lock-open-heredoc <span class="hl opt">(</span><span class="hl kwa">start</span> string eol<span class="hl opt">)</span></div>
<div class="pre"><a id="l1008" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1008" class="linenr">1008 </a>  <span class="hl str">&quot;Determine the syntax of the</span> <span class="hl esc">\\</span><span class="hl str">n after a &lt;&lt;EOF.</span></div>
<div class="pre"><a id="l1009" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1009" class="linenr">1009 </a><span class="hl str">START is the position of &lt;&lt;.</span></div>
<div class="pre"><a id="l1010" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1010" class="linenr">1010 </a><span class="hl str">STRING is the actual word used as delimiter (e.g.</span> <span class="hl esc">\&quot;</span><span class="hl str">EOF</span><span class="hl esc">\&quot;</span><span class="hl str">).</span></div>
<div class="pre"><a id="l1011" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1011" class="linenr">1011 </a><span class="hl str">INDENTED is non-nil if the here document's content (and the EOF mark) can</span></div>
<div class="pre"><a id="l1012" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1012" class="linenr">1012 </a><span class="hl str">be indented (i.e. a &lt;&lt;- was used rather than just &lt;&lt;).</span></div>
<div class="pre"><a id="l1013" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1013" class="linenr">1013 </a><span class="hl str">Point is at the beginning of the next line.&quot;</span></div>
<div class="pre"><a id="l1014" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1014" class="linenr">1014 </a>  <span class="hl opt">(</span><span class="hl kwa">unless</span> <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">memq</span> <span class="hl opt">(</span><span class="hl kwa">char-before</span> start<span class="hl opt">) '(</span>?<span class="hl opt">&lt;</span> ?<span class="hl opt">&gt;))</span></div>
<div class="pre"><a id="l1015" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1015" class="linenr">1015 </a>              <span class="hl opt">(</span><span class="hl kwa">sh-in-comment-or-string</span> start<span class="hl opt">)</span></div>
<div class="pre"><a id="l1016" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1016" class="linenr">1016 </a>              <span class="hl opt">(</span><span class="hl kwa">sh--inside-noncommand-expression</span> start<span class="hl opt">))</span></div>
<div class="pre"><a id="l1017" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1017" class="linenr">1017 </a>    <span class="hl slc">;; We're looking at &lt;&lt;STRING, so we add &quot;^STRING$&quot; to the syntactic</span></div>
<div class="pre"><a id="l1018" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1018" class="linenr">1018 </a>    <span class="hl slc">;; font-lock keywords to detect the end of this here document.</span></div>
<div class="pre"><a id="l1019" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1019" class="linenr">1019 </a>    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">str</span> <span class="hl opt">(</span><span class="hl kwa">replace-regexp-in-string</span> <span class="hl str">&quot;['</span><span class="hl esc">\&quot;</span><span class="hl str">]&quot;</span> <span class="hl str">&quot;&quot;</span> string<span class="hl opt">))</span></div>
<div class="pre"><a id="l1020" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1020" class="linenr">1020 </a>          <span class="hl opt">(</span><span class="hl kwa">ppss</span> <span class="hl opt">(</span><span class="hl kwa">save-excursion</span> <span class="hl opt">(</span><span class="hl kwa">syntax-ppss</span> eol<span class="hl opt">))))</span></div>
<div class="pre"><a id="l1021" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1021" class="linenr">1021 </a>      <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">4</span> ppss<span class="hl opt">)</span></div>
<div class="pre"><a id="l1022" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1022" class="linenr">1022 </a>          <span class="hl slc">;; The \n not only starts the heredoc but also closes a comment.</span></div>
<div class="pre"><a id="l1023" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1023" class="linenr">1023 </a>          <span class="hl slc">;; Let's close the comment just before the \n.</span></div>
<div class="pre"><a id="l1024" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1024" class="linenr">1024 </a>          <span class="hl opt">(</span><span class="hl kwa">put-text-property</span> <span class="hl opt">(</span><span class="hl kwa">1-</span> eol<span class="hl opt">)</span> eol <span class="hl opt">'</span>syntax-table <span class="hl opt">'(</span><span class="hl kwa">12</span><span class="hl opt">)))</span> <span class="hl slc">;&quot;&gt;&quot;</span></div>
<div class="pre"><a id="l1025" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1025" class="linenr">1025 </a>      <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">5</span> ppss<span class="hl opt">) (&gt; (</span><span class="hl kwa">count-lines</span> start eol<span class="hl opt">)</span> <span class="hl num">1</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1026" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1026" class="linenr">1026 </a>          <span class="hl slc">;; If the sh-escaped-line-re part of sh-here-doc-open-re has matched</span></div>
<div class="pre"><a id="l1027" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1027" class="linenr">1027 </a>          <span class="hl slc">;; several lines, make sure we refontify them together.</span></div>
<div class="pre"><a id="l1028" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1028" class="linenr">1028 </a>          <span class="hl slc">;; Furthermore, if (nth 5 ppss) is non-nil (i.e. the \n is</span></div>
<div class="pre"><a id="l1029" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1029" class="linenr">1029 </a>          <span class="hl slc">;; escaped), it means the right \n is actually further down.</span></div>
<div class="pre"><a id="l1030" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1030" class="linenr">1030 </a>          <span class="hl slc">;; Don't bother fixing it now, but place a multiline property so</span></div>
<div class="pre"><a id="l1031" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1031" class="linenr">1031 </a>          <span class="hl slc">;; that when jit-lock-context-* refontifies the rest of the</span></div>
<div class="pre"><a id="l1032" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1032" class="linenr">1032 </a>          <span class="hl slc">;; buffer, it also refontifies the current line with it.</span></div>
<div class="pre"><a id="l1033" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1033" class="linenr">1033 </a>          <span class="hl opt">(</span><span class="hl kwa">put-text-property</span> start <span class="hl opt">(</span><span class="hl kwa">1</span><span class="hl opt">+</span> eol<span class="hl opt">) '</span>syntax-multiline t<span class="hl opt">))</span></div>
<div class="pre"><a id="l1034" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1034" class="linenr">1034 </a>      <span class="hl opt">(</span><span class="hl kwa">put-text-property</span> eol <span class="hl opt">(</span><span class="hl kwa">1</span><span class="hl opt">+</span> eol<span class="hl opt">) '</span>sh-here-doc-marker str<span class="hl opt">)</span></div>
<div class="pre"><a id="l1035" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1035" class="linenr">1035 </a>      <span class="hl opt">(</span><span class="hl kwa">prog1</span> sh-here-doc-syntax</div>
<div class="pre"><a id="l1036" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1036" class="linenr">1036 </a>        <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(+</span> <span class="hl num">2</span> start<span class="hl opt">))))))</span></div>
<div class="pre"><a id="l1037" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1037" class="linenr">1037 </a></div>
<div class="pre"><a id="l1038" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1038" class="linenr">1038 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-syntax-propertize-here-doc <span class="hl opt">(</span><span class="hl kwa">end</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1039" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1039" class="linenr">1039 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">ppss</span> <span class="hl opt">(</span><span class="hl kwa">syntax-ppss</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1040" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1040" class="linenr">1040 </a>    <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> t <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">3</span> ppss<span class="hl opt">))</span></div>
<div class="pre"><a id="l1041" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1041" class="linenr">1041 </a>      <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">key</span> <span class="hl opt">(</span><span class="hl kwa">get-text-property</span> <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">8</span> ppss<span class="hl opt">) '</span>sh-here-doc-marker<span class="hl opt">))</span></div>
<div class="pre"><a id="l1042" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1042" class="linenr">1042 </a>            <span class="hl opt">(</span><span class="hl kwa">case-fold-search</span> nil<span class="hl opt">))</span></div>
<div class="pre"><a id="l1043" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1043" class="linenr">1043 </a>        <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">re-search-forward</span></div>
<div class="pre"><a id="l1044" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1044" class="linenr">1044 </a>               <span class="hl opt">(</span><span class="hl kwa">concat</span> <span class="hl str">&quot;^</span><span class="hl esc">\\</span><span class="hl str">([</span> <span class="hl esc">\t</span><span class="hl str">]*</span><span class="hl esc">\\</span><span class="hl str">)&quot;</span> <span class="hl opt">(</span><span class="hl kwa">regexp-quote</span> key<span class="hl opt">)</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">(</span><span class="hl esc">\n\\</span><span class="hl str">)&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1045" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1045" class="linenr">1045 </a>               end <span class="hl opt">'</span>move<span class="hl opt">)</span></div>
<div class="pre"><a id="l1046" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1046" class="linenr">1046 </a>          <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">eol</span> <span class="hl opt">(</span><span class="hl kwa">match-beginning</span> <span class="hl num">2</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1047" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1047" class="linenr">1047 </a>            <span class="hl opt">(</span><span class="hl kwa">put-text-property</span> eol <span class="hl opt">(</span><span class="hl kwa">1</span><span class="hl opt">+</span> eol<span class="hl opt">)</span></div>
<div class="pre"><a id="l1048" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1048" class="linenr">1048 </a>                               <span class="hl opt">'</span>syntax-table sh-here-doc-syntax<span class="hl opt">)))))))</span></div>
<div class="pre"><a id="l1049" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1049" class="linenr">1049 </a></div>
<div class="pre"><a id="l1050" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1050" class="linenr">1050 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-font-lock-quoted-subshell <span class="hl opt">(</span><span class="hl kwa">limit</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1051" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1051" class="linenr">1051 </a>  <span class="hl str">&quot;Search for a subshell embedded in a string.</span></div>
<div class="pre"><a id="l1052" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1052" class="linenr">1052 </a><span class="hl str">Find all the unescaped</span> <span class="hl esc">\&quot;</span> <span class="hl str">characters within said subshell, remembering that</span></div>
<div class="pre"><a id="l1053" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1053" class="linenr">1053 </a><span class="hl str">subshells can nest.&quot;</span></div>
<div class="pre"><a id="l1054" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1054" class="linenr">1054 </a>  <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> ?<span class="hl esc">\&quot;</span> <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">3</span> <span class="hl opt">(</span><span class="hl kwa">syntax-ppss</span><span class="hl opt">)))</span> <span class="hl slc">; Check we matched an opening quote.</span></div>
<div class="pre"><a id="l1055" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1055" class="linenr">1055 </a>    <span class="hl slc">;; bingo we have a $( or a ` inside a &quot;&quot;</span></div>
<div class="pre"><a id="l1056" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1056" class="linenr">1056 </a>    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">(</span><span class="hl slc">;; `state' can be: double-quote, backquote, code.</span></div>
<div class="pre"><a id="l1057" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1057" class="linenr">1057 </a>          <span class="hl opt">(</span><span class="hl kwa">state</span> <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl opt">(</span><span class="hl kwa">char-before</span><span class="hl opt">)</span> ?<span class="hl opt">`) '</span>backquote <span class="hl opt">'</span>code<span class="hl opt">))</span></div>
<div class="pre"><a id="l1058" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1058" class="linenr">1058 </a>          <span class="hl opt">(</span><span class="hl kwa">startpos</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1059" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1059" class="linenr">1059 </a>          <span class="hl slc">;; Stacked states in the context.</span></div>
<div class="pre"><a id="l1060" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1060" class="linenr">1060 </a>          <span class="hl opt">(</span><span class="hl kwa">states</span> <span class="hl opt">'(</span><span class="hl kwa">double-quote</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1061" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1061" class="linenr">1061 </a>      <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">and</span> state <span class="hl opt">(</span><span class="hl kwa">progn</span> <span class="hl opt">(</span><span class="hl kwa">skip-chars-forward</span> <span class="hl str">&quot;^'</span><span class="hl esc">\\\\\&quot;</span><span class="hl str">`$()&quot;</span> limit<span class="hl opt">)</span></div>
<div class="pre"><a id="l1062" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1062" class="linenr">1062 </a>                               <span class="hl opt">(&lt; (</span><span class="hl kwa">point</span><span class="hl opt">)</span> limit<span class="hl opt">)))</span></div>
<div class="pre"><a id="l1063" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1063" class="linenr">1063 </a>        <span class="hl slc">;; unescape &quot; inside a $( ... ) construct.</span></div>
<div class="pre"><a id="l1064" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1064" class="linenr">1064 </a>        <span class="hl opt">(</span><span class="hl kwa">pcase</span> <span class="hl opt">(</span><span class="hl kwa">char-after</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1065" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1065" class="linenr">1065 </a>          <span class="hl opt">(</span>?<span class="hl esc">\'</span> <span class="hl opt">(</span><span class="hl kwa">pcase</span> state</div>
<div class="pre"><a id="l1066" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1066" class="linenr">1066 </a>                 <span class="hl opt">(`</span>double-quote nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l1067" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1067" class="linenr">1067 </a>                 <span class="hl opt">(</span><span class="hl kwa">_</span> <span class="hl opt">(</span><span class="hl kwa">forward-char</span> <span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1068" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1068" class="linenr">1068 </a>                    <span class="hl slc">;; FIXME: mark skipped double quotes as punctuation syntax.</span></div>
<div class="pre"><a id="l1069" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1069" class="linenr">1069 </a>                    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">spos</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1070" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1070" class="linenr">1070 </a>                      <span class="hl opt">(</span><span class="hl kwa">skip-chars-forward</span> <span class="hl str">&quot;^'&quot;</span> limit<span class="hl opt">)</span></div>
<div class="pre"><a id="l1071" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1071" class="linenr">1071 </a>                      <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l1072" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1072" class="linenr">1072 </a>                        <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">epos</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1073" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1073" class="linenr">1073 </a>                          <span class="hl opt">(</span><span class="hl kwa">goto-char</span> spos<span class="hl opt">)</span></div>
<div class="pre"><a id="l1074" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1074" class="linenr">1074 </a>                          <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">search-forward</span> <span class="hl str">&quot;</span><span class="hl esc">\&quot;</span><span class="hl str">&quot;</span> epos t<span class="hl opt">)</span></div>
<div class="pre"><a id="l1075" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1075" class="linenr">1075 </a>                            <span class="hl opt">(</span><span class="hl kwa">put-text-property</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">) (</span><span class="hl kwa">1-</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1076" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1076" class="linenr">1076 </a>                                            <span class="hl opt">'</span>syntax-table <span class="hl opt">'(</span><span class="hl kwa">1</span><span class="hl opt">)))))))))</span></div>
<div class="pre"><a id="l1077" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1077" class="linenr">1077 </a>          <span class="hl opt">(</span>?<span class="hl esc">\\</span> <span class="hl opt">(</span><span class="hl kwa">forward-char</span> <span class="hl num">1</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1078" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1078" class="linenr">1078 </a>          <span class="hl opt">(</span>?<span class="hl esc">\&quot;</span> <span class="hl opt">(</span><span class="hl kwa">pcase</span> state</div>
<div class="pre"><a id="l1079" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1079" class="linenr">1079 </a>                 <span class="hl opt">(`</span>double-quote <span class="hl opt">(</span><span class="hl kwa">setq</span> state <span class="hl opt">(</span><span class="hl kwa">pop</span> states<span class="hl opt">)))</span></div>
<div class="pre"><a id="l1080" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1080" class="linenr">1080 </a>                 <span class="hl opt">(</span><span class="hl kwa">_</span> <span class="hl opt">(</span><span class="hl kwa">push</span> state states<span class="hl opt">) (</span><span class="hl kwa">setq</span> state <span class="hl opt">'</span>double-quote<span class="hl opt">)))</span></div>
<div class="pre"><a id="l1081" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1081" class="linenr">1081 </a>               <span class="hl opt">(</span><span class="hl kwa">if</span> state <span class="hl opt">(</span><span class="hl kwa">put-text-property</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">) (</span><span class="hl kwa">1</span><span class="hl opt">+ (</span><span class="hl kwa">point</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1082" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1082" class="linenr">1082 </a>                                            <span class="hl opt">'</span>syntax-table <span class="hl opt">'(</span><span class="hl kwa">1</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l1083" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1083" class="linenr">1083 </a>          <span class="hl opt">(</span>?\<span class="hl opt">` (</span><span class="hl kwa">pcase</span> state</div>
<div class="pre"><a id="l1084" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1084" class="linenr">1084 </a>                 <span class="hl opt">(`</span>backquote <span class="hl opt">(</span><span class="hl kwa">setq</span> state <span class="hl opt">(</span><span class="hl kwa">pop</span> states<span class="hl opt">)))</span></div>
<div class="pre"><a id="l1085" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1085" class="linenr">1085 </a>                 <span class="hl opt">(</span><span class="hl kwa">_</span> <span class="hl opt">(</span><span class="hl kwa">push</span> state states<span class="hl opt">) (</span><span class="hl kwa">setq</span> state <span class="hl opt">'</span>backquote<span class="hl opt">))))</span></div>
<div class="pre"><a id="l1086" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1086" class="linenr">1086 </a>          <span class="hl opt">(</span>?\$ <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl opt">(</span><span class="hl kwa">char-after</span> <span class="hl opt">(</span><span class="hl kwa">1</span><span class="hl opt">+ (</span><span class="hl kwa">point</span><span class="hl opt">)))</span> ?\<span class="hl opt">())</span></div>
<div class="pre"><a id="l1087" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1087" class="linenr">1087 </a>                   nil</div>
<div class="pre"><a id="l1088" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1088" class="linenr">1088 </a>                 <span class="hl opt">(</span><span class="hl kwa">forward-char</span> <span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1089" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1089" class="linenr">1089 </a>                 <span class="hl opt">(</span><span class="hl kwa">pcase</span> state</div>
<div class="pre"><a id="l1090" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1090" class="linenr">1090 </a>                   <span class="hl opt">(</span><span class="hl kwa">_</span> <span class="hl opt">(</span><span class="hl kwa">push</span> state states<span class="hl opt">) (</span><span class="hl kwa">setq</span> state <span class="hl opt">'</span>code<span class="hl opt">)))))</span></div>
<div class="pre"><a id="l1091" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1091" class="linenr">1091 </a>          <span class="hl opt">(</span>?\<span class="hl opt">( (</span><span class="hl kwa">pcase</span> state</div>
<div class="pre"><a id="l1092" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1092" class="linenr">1092 </a>                 <span class="hl opt">(`</span>double-quote nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l1093" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1093" class="linenr">1093 </a>                 <span class="hl opt">(</span><span class="hl kwa">_</span> <span class="hl opt">(</span><span class="hl kwa">push</span> state states<span class="hl opt">) (</span><span class="hl kwa">setq</span> state <span class="hl opt">'</span>code<span class="hl opt">))))</span></div>
<div class="pre"><a id="l1094" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1094" class="linenr">1094 </a>          <span class="hl opt">(</span>?\<span class="hl opt">) (</span><span class="hl kwa">pcase</span> state</div>
<div class="pre"><a id="l1095" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1095" class="linenr">1095 </a>                 <span class="hl opt">(`</span>double-quote nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l1096" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1096" class="linenr">1096 </a>                 <span class="hl opt">(</span><span class="hl kwa">_</span> <span class="hl opt">(</span><span class="hl kwa">setq</span> state <span class="hl opt">(</span><span class="hl kwa">pop</span> states<span class="hl opt">)))))</span></div>
<div class="pre"><a id="l1097" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1097" class="linenr">1097 </a>          <span class="hl opt">(</span><span class="hl kwa">_</span> <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Internal error in sh-font-lock-quoted-subshell&quot;</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1098" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1098" class="linenr">1098 </a>        <span class="hl opt">(</span><span class="hl kwa">forward-char</span> <span class="hl num">1</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1099" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1099" class="linenr">1099 </a>      <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(&lt;</span> startpos <span class="hl opt">(</span><span class="hl kwa">line-beginning-position</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1100" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1100" class="linenr">1100 </a>        <span class="hl opt">(</span><span class="hl kwa">put-text-property</span> startpos <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">) '</span>syntax-multiline t<span class="hl opt">)</span></div>
<div class="pre"><a id="l1101" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1101" class="linenr">1101 </a>        <span class="hl opt">(</span><span class="hl kwa">add-hook</span> <span class="hl opt">'</span>syntax-propertize-extend-region-functions</div>
<div class="pre"><a id="l1102" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1102" class="linenr">1102 </a>                  <span class="hl opt">'</span>syntax-propertize-multiline nil t<span class="hl opt">))</span></div>
<div class="pre"><a id="l1103" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1103" class="linenr">1103 </a>      <span class="hl opt">)))</span></div>
<div class="pre"><a id="l1104" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1104" class="linenr">1104 </a></div>
<div class="pre"><a id="l1105" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1105" class="linenr">1105 </a></div>
<div class="pre"><a id="l1106" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1106" class="linenr">1106 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-is-quoted-p <span class="hl opt">(</span><span class="hl kwa">pos</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1107" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1107" class="linenr">1107 </a>  <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl opt">(</span><span class="hl kwa">char-before</span> pos<span class="hl opt">)</span> ?<span class="hl esc">\\</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1108" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1108" class="linenr">1108 </a>       <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">sh-is-quoted-p</span> <span class="hl opt">(</span><span class="hl kwa">1-</span> pos<span class="hl opt">)))))</span></div>
<div class="pre"><a id="l1109" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1109" class="linenr">1109 </a></div>
<div class="pre"><a id="l1110" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1110" class="linenr">1110 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-font-lock-paren <span class="hl opt">(</span><span class="hl kwa">start</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1111" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1111" class="linenr">1111 </a>  <span class="hl opt">(</span><span class="hl kwa">unless</span> <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">8</span> <span class="hl opt">(</span><span class="hl kwa">syntax-ppss</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1112" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1112" class="linenr">1112 </a>    <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l1113" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1113" class="linenr">1113 </a>      <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">open</span> nil<span class="hl opt">))</span></div>
<div class="pre"><a id="l1114" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1114" class="linenr">1114 </a>        <span class="hl opt">(</span><span class="hl kwa">goto-char</span> start<span class="hl opt">)</span></div>
<div class="pre"><a id="l1115" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1115" class="linenr">1115 </a>        <span class="hl slc">;; Skip through all patterns</span></div>
<div class="pre"><a id="l1116" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1116" class="linenr">1116 </a>        <span class="hl opt">(</span><span class="hl kwa">while</span></div>
<div class="pre"><a id="l1117" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1117" class="linenr">1117 </a>            <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l1118" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1118" class="linenr">1118 </a>              <span class="hl opt">(</span><span class="hl kwa">while</span></div>
<div class="pre"><a id="l1119" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1119" class="linenr">1119 </a>                  <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l1120" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1120" class="linenr">1120 </a>                    <span class="hl opt">(</span><span class="hl kwa">forward-comment</span> <span class="hl opt">(</span><span class="hl kwa">-</span> <span class="hl opt">(</span><span class="hl kwa">point-max</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1121" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1121" class="linenr">1121 </a>                    <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">eolp</span><span class="hl opt">) (</span><span class="hl kwa">sh-is-quoted-p</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1122" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1122" class="linenr">1122 </a>                      <span class="hl opt">(</span><span class="hl kwa">forward-char</span> -<span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1123" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1123" class="linenr">1123 </a>                      t<span class="hl opt">)))</span></div>
<div class="pre"><a id="l1124" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1124" class="linenr">1124 </a>              <span class="hl slc">;; Skip through one pattern</span></div>
<div class="pre"><a id="l1125" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1125" class="linenr">1125 </a>              <span class="hl opt">(</span><span class="hl kwa">while</span></div>
<div class="pre"><a id="l1126" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1126" class="linenr">1126 </a>                  <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(/=</span> <span class="hl num">0</span> <span class="hl opt">(</span><span class="hl kwa">skip-syntax-backward</span> <span class="hl str">&quot;w_&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1127" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1127" class="linenr">1127 </a>                      <span class="hl opt">(/=</span> <span class="hl num">0</span> <span class="hl opt">(</span><span class="hl kwa">skip-chars-backward</span> <span class="hl str">&quot;-$=?[]*&#64;/</span><span class="hl esc">\\\\</span><span class="hl str">&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1128" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1128" class="linenr">1128 </a>                      <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">sh-is-quoted-p</span> <span class="hl opt">(</span><span class="hl kwa">1-</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1129" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1129" class="linenr">1129 </a>                           <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">-</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)</span> <span class="hl num">2</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1130" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1130" class="linenr">1130 </a>                      <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">memq</span> <span class="hl opt">(</span><span class="hl kwa">char-before</span><span class="hl opt">) '(</span>?<span class="hl esc">\&quot;</span> ?<span class="hl esc">\'</span> ?\<span class="hl opt">}))</span></div>
<div class="pre"><a id="l1131" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1131" class="linenr">1131 </a>                        <span class="hl opt">(</span><span class="hl kwa">condition-case</span> nil <span class="hl opt">(</span><span class="hl kwa">progn</span> <span class="hl opt">(</span><span class="hl kwa">backward-sexp</span> <span class="hl num">1</span><span class="hl opt">)</span> t<span class="hl opt">)</span></div>
<div class="pre"><a id="l1132" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1132" class="linenr">1132 </a>                          <span class="hl opt">(</span><span class="hl kwa">error</span> nil<span class="hl opt">)))))</span></div>
<div class="pre"><a id="l1133" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1133" class="linenr">1133 </a>              <span class="hl slc">;; Patterns can be preceded by an open-paren (bug#1320).</span></div>
<div class="pre"><a id="l1134" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1134" class="linenr">1134 </a>              <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl opt">(</span><span class="hl kwa">char-before</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))</span> ?\<span class="hl opt">()</span></div>
<div class="pre"><a id="l1135" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1135" class="linenr">1135 </a>                <span class="hl opt">(</span><span class="hl kwa">backward-char</span> <span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1136" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1136" class="linenr">1136 </a>                <span class="hl opt">(</span><span class="hl kwa">setq</span> open <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1137" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1137" class="linenr">1137 </a>              <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l1138" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1138" class="linenr">1138 </a>                       <span class="hl opt">(</span><span class="hl kwa">forward-comment</span> <span class="hl opt">(</span><span class="hl kwa">-</span> <span class="hl opt">(</span><span class="hl kwa">point-max</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1139" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1139" class="linenr">1139 </a>                       <span class="hl slc">;; Maybe we've bumped into an escaped newline.</span></div>
<div class="pre"><a id="l1140" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1140" class="linenr">1140 </a>                       <span class="hl opt">(</span><span class="hl kwa">sh-is-quoted-p</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1141" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1141" class="linenr">1141 </a>                <span class="hl opt">(</span><span class="hl kwa">backward-char</span> <span class="hl num">1</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1142" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1142" class="linenr">1142 </a>              <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl opt">(</span><span class="hl kwa">char-before</span><span class="hl opt">)</span> ?|<span class="hl opt">)</span></div>
<div class="pre"><a id="l1143" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1143" class="linenr">1143 </a>                <span class="hl opt">(</span><span class="hl kwa">backward-char</span> <span class="hl num">1</span><span class="hl opt">)</span> t<span class="hl opt">)))</span></div>
<div class="pre"><a id="l1144" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1144" class="linenr">1144 </a>        <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(&gt; (</span><span class="hl kwa">point</span><span class="hl opt">) (</span><span class="hl kwa">1</span><span class="hl opt">+ (</span><span class="hl kwa">point-min</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1145" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1145" class="linenr">1145 </a>             <span class="hl opt">(</span><span class="hl kwa">progn</span> <span class="hl opt">(</span><span class="hl kwa">backward-char</span> <span class="hl num">2</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1146" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1146" class="linenr">1146 </a>                    <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(&gt;</span> start <span class="hl opt">(</span><span class="hl kwa">line-end-position</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1147" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1147" class="linenr">1147 </a>                        <span class="hl opt">(</span><span class="hl kwa">put-text-property</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">) (</span><span class="hl kwa">1</span><span class="hl opt">+</span> start<span class="hl opt">)</span></div>
<div class="pre"><a id="l1148" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1148" class="linenr">1148 </a>                                           <span class="hl opt">'</span>syntax-multiline t<span class="hl opt">))</span></div>
<div class="pre"><a id="l1149" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1149" class="linenr">1149 </a>                    <span class="hl slc">;; FIXME: The `in' may just be a random argument to</span></div>
<div class="pre"><a id="l1150" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1150" class="linenr">1150 </a>                    <span class="hl slc">;; a normal command rather than the real `in' keyword.</span></div>
<div class="pre"><a id="l1151" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1151" class="linenr">1151 </a>                    <span class="hl slc">;; I.e. we should look back to try and find the</span></div>
<div class="pre"><a id="l1152" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1152" class="linenr">1152 </a>                    <span class="hl slc">;; corresponding `case'.</span></div>
<div class="pre"><a id="l1153" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1153" class="linenr">1153 </a>                    <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">looking-at</span> <span class="hl str">&quot;;[;&amp;]</span><span class="hl esc">\\</span><span class="hl str">|</span><span class="hl esc">\\</span><span class="hl str">_&lt;in&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1154" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1154" class="linenr">1154 </a>                         <span class="hl slc">;; &quot;;; esac )&quot; is a case that looks</span></div>
<div class="pre"><a id="l1155" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1155" class="linenr">1155 </a>                         <span class="hl slc">;; like a case-pattern but it's really just a close</span></div>
<div class="pre"><a id="l1156" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1156" class="linenr">1156 </a>                         <span class="hl slc">;; paren after a case statement.  I.e. if we skipped</span></div>
<div class="pre"><a id="l1157" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1157" class="linenr">1157 </a>                         <span class="hl slc">;; over `esac' just now, we're not looking</span></div>
<div class="pre"><a id="l1158" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1158" class="linenr">1158 </a>                         <span class="hl slc">;; at a case-pattern.</span></div>
<div class="pre"><a id="l1159" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1159" class="linenr">1159 </a>                         <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">looking-at</span> <span class="hl str">&quot;..[</span> <span class="hl esc">\t\n</span><span class="hl str">]+esac[^[:word:]_]&quot;</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l1160" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1160" class="linenr">1160 </a>             <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l1161" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1161" class="linenr">1161 </a>               <span class="hl opt">(</span><span class="hl kwa">when</span> open</div>
<div class="pre"><a id="l1162" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1162" class="linenr">1162 </a>                 <span class="hl opt">(</span><span class="hl kwa">put-text-property</span> open <span class="hl opt">(</span><span class="hl kwa">1</span><span class="hl opt">+</span> open<span class="hl opt">) '</span>syntax-table sh-st-punc<span class="hl opt">))</span></div>
<div class="pre"><a id="l1163" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1163" class="linenr">1163 </a>               sh-st-punc<span class="hl opt">))))))</span></div>
<div class="pre"><a id="l1164" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1164" class="linenr">1164 </a></div>
<div class="pre"><a id="l1165" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1165" class="linenr">1165 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-font-lock-backslash-quote <span class="hl opt">()</span></div>
<div class="pre"><a id="l1166" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1166" class="linenr">1166 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl opt">(</span><span class="hl kwa">save-excursion</span> <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">3</span> <span class="hl opt">(</span><span class="hl kwa">syntax-ppss</span> <span class="hl opt">(</span><span class="hl kwa">match-beginning</span> <span class="hl num">0</span><span class="hl opt">))))</span> ?<span class="hl esc">\'</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1167" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1167" class="linenr">1167 </a>      <span class="hl slc">;; In a '...' the backslash is not escaping.</span></div>
<div class="pre"><a id="l1168" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1168" class="linenr">1168 </a>      sh-st-punc</div>
<div class="pre"><a id="l1169" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1169" class="linenr">1169 </a>    nil<span class="hl opt">))</span></div>
<div class="pre"><a id="l1170" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1170" class="linenr">1170 </a></div>
<div class="pre"><a id="l1171" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1171" class="linenr">1171 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-syntax-propertize-function <span class="hl opt">(</span><span class="hl kwa">start</span> end<span class="hl opt">)</span></div>
<div class="pre"><a id="l1172" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1172" class="linenr">1172 </a>  <span class="hl opt">(</span><span class="hl kwa">goto-char</span> start<span class="hl opt">)</span></div>
<div class="pre"><a id="l1173" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1173" class="linenr">1173 </a>  <span class="hl opt">(</span><span class="hl kwa">sh-syntax-propertize-here-doc</span> end<span class="hl opt">)</span></div>
<div class="pre"><a id="l1174" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1174" class="linenr">1174 </a>  <span class="hl opt">(</span><span class="hl kwa">funcall</span></div>
<div class="pre"><a id="l1175" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1175" class="linenr">1175 </a>   <span class="hl opt">(</span><span class="hl kwa">syntax-propertize-rules</span></div>
<div class="pre"><a id="l1176" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1176" class="linenr">1176 </a>    <span class="hl opt">(</span><span class="hl kwa">sh-here-doc-open-re</span></div>
<div class="pre"><a id="l1177" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1177" class="linenr">1177 </a>     <span class="hl opt">(</span><span class="hl kwa">2</span> <span class="hl opt">(</span><span class="hl kwa">sh-font-lock-open-heredoc</span></div>
<div class="pre"><a id="l1178" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1178" class="linenr">1178 </a>         <span class="hl opt">(</span><span class="hl kwa">match-beginning</span> <span class="hl num">0</span><span class="hl opt">) (</span><span class="hl kwa">match-string</span> <span class="hl num">1</span><span class="hl opt">) (</span><span class="hl kwa">match-beginning</span> <span class="hl num">2</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l1179" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1179" class="linenr">1179 </a>    <span class="hl opt">(</span><span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">s|&quot;</span> <span class="hl opt">(</span><span class="hl kwa">0</span> <span class="hl opt">(</span><span class="hl kwa">prog1</span> nil <span class="hl opt">(</span><span class="hl kwa">sh-syntax-propertize-here-doc</span> end<span class="hl opt">))))</span></div>
<div class="pre"><a id="l1180" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1180" class="linenr">1180 </a>    <span class="hl slc">;; A `#' begins a comment when it is unquoted and at the</span></div>
<div class="pre"><a id="l1181" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1181" class="linenr">1181 </a>    <span class="hl slc">;; beginning of a word.  In the shell, words are separated by</span></div>
<div class="pre"><a id="l1182" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1182" class="linenr">1182 </a>    <span class="hl slc">;; metacharacters.  The list of special chars is taken from</span></div>
<div class="pre"><a id="l1183" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1183" class="linenr">1183 </a>    <span class="hl slc">;; the single-unix spec of the shell command language (under</span></div>
<div class="pre"><a id="l1184" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1184" class="linenr">1184 </a>    <span class="hl slc">;; `quoting') but with `$' removed.</span></div>
<div class="pre"><a id="l1185" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1185" class="linenr">1185 </a>    <span class="hl opt">(</span><span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">(?:[^|&amp;;&lt;&gt;()`</span><span class="hl esc">\\\&quot;</span><span class="hl str">'</span> <span class="hl esc">\t\n</span><span class="hl str">]</span><span class="hl esc">\\</span><span class="hl str">|</span><span class="hl esc">\\</span><span class="hl str">${</span><span class="hl esc">\\</span><span class="hl str">)</span><span class="hl esc">\\</span><span class="hl str">(#+</span><span class="hl esc">\\</span><span class="hl str">)&quot;</span> <span class="hl opt">(</span><span class="hl kwa">1</span> <span class="hl str">&quot;_&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1186" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1186" class="linenr">1186 </a>    <span class="hl slc">;; In a '...' the backslash is not escaping.</span></div>
<div class="pre"><a id="l1187" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1187" class="linenr">1187 </a>    <span class="hl opt">(</span><span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">(</span><span class="hl esc">\\\\\\</span><span class="hl str">)'&quot;</span> <span class="hl opt">(</span><span class="hl kwa">1</span> <span class="hl opt">(</span><span class="hl kwa">sh-font-lock-backslash-quote</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1188" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1188" class="linenr">1188 </a>    <span class="hl slc">;; Make sure $&#64; and $? are correctly recognized as sexps.</span></div>
<div class="pre"><a id="l1189" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1189" class="linenr">1189 </a>    <span class="hl opt">(</span><span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">$</span><span class="hl esc">\\</span><span class="hl str">([?&#64;]</span><span class="hl esc">\\</span><span class="hl str">)&quot;</span> <span class="hl opt">(</span><span class="hl kwa">1</span> <span class="hl str">&quot;_&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1190" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1190" class="linenr">1190 </a>    <span class="hl slc">;; Distinguish the special close-paren in `case'.</span></div>
<div class="pre"><a id="l1191" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1191" class="linenr">1191 </a>    <span class="hl opt">(</span><span class="hl str">&quot;)&quot;</span> <span class="hl opt">(</span><span class="hl kwa">0</span> <span class="hl opt">(</span><span class="hl kwa">sh-font-lock-paren</span> <span class="hl opt">(</span><span class="hl kwa">match-beginning</span> <span class="hl num">0</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l1192" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1192" class="linenr">1192 </a>    <span class="hl slc">;; Highlight (possibly nested) subshells inside &quot;&quot; quoted</span></div>
<div class="pre"><a id="l1193" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1193" class="linenr">1193 </a>    <span class="hl slc">;; regions correctly.</span></div>
<div class="pre"><a id="l1194" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1194" class="linenr">1194 </a>    <span class="hl opt">(</span><span class="hl str">&quot;</span><span class="hl esc">\&quot;\\</span><span class="hl str">(?:</span><span class="hl esc">\\</span><span class="hl str">(?:[^</span><span class="hl esc">\\\&quot;</span><span class="hl str">]</span><span class="hl esc">\\</span><span class="hl str">|</span><span class="hl esc">\\\\</span><span class="hl str">.</span><span class="hl esc">\\</span><span class="hl str">)*?</span><span class="hl esc">\\</span><span class="hl str">)??</span><span class="hl esc">\\</span><span class="hl str">(</span><span class="hl esc">\\</span><span class="hl str">$(</span><span class="hl esc">\\</span><span class="hl str">|`</span><span class="hl esc">\\</span><span class="hl str">)&quot;</span></div>
<div class="pre"><a id="l1195" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1195" class="linenr">1195 </a>     <span class="hl opt">(</span><span class="hl kwa">1</span> <span class="hl opt">(</span><span class="hl kwa">ignore</span></div>
<div class="pre"><a id="l1196" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1196" class="linenr">1196 </a>         <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">8</span> <span class="hl opt">(</span><span class="hl kwa">save-excursion</span> <span class="hl opt">(</span><span class="hl kwa">syntax-ppss</span> <span class="hl opt">(</span><span class="hl kwa">match-beginning</span> <span class="hl num">0</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l1197" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1197" class="linenr">1197 </a>             <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">1</span><span class="hl opt">+ (</span><span class="hl kwa">match-beginning</span> <span class="hl num">0</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1198" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1198" class="linenr">1198 </a>           <span class="hl slc">;; Save excursion because we want to also apply other</span></div>
<div class="pre"><a id="l1199" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1199" class="linenr">1199 </a>           <span class="hl slc">;; syntax-propertize rules within the affected region.</span></div>
<div class="pre"><a id="l1200" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1200" class="linenr">1200 </a>           <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l1201" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1201" class="linenr">1201 </a>             <span class="hl opt">(</span><span class="hl kwa">sh-font-lock-quoted-subshell</span> end<span class="hl opt">)))))))</span></div>
<div class="pre"><a id="l1202" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1202" class="linenr">1202 </a>   <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)</span> end<span class="hl opt">))</span></div>
<div class="pre"><a id="l1203" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1203" class="linenr">1203 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-font-lock-syntactic-face-function <span class="hl opt">(</span><span class="hl kwa">state</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1204" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1204" class="linenr">1204 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">q</span> <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">3</span> state<span class="hl opt">)))</span></div>
<div class="pre"><a id="l1205" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1205" class="linenr">1205 </a>    <span class="hl opt">(</span><span class="hl kwa">if</span> q</div>
<div class="pre"><a id="l1206" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1206" class="linenr">1206 </a>        <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">characterp</span> q<span class="hl opt">)</span></div>
<div class="pre"><a id="l1207" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1207" class="linenr">1207 </a>            <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> q ?\<span class="hl opt">`) '</span>sh-quoted-exec font-lock-string-face<span class="hl opt">)</span></div>
<div class="pre"><a id="l1208" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1208" class="linenr">1208 </a>          <span class="hl opt">'</span>sh-heredoc<span class="hl opt">)</span></div>
<div class="pre"><a id="l1209" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1209" class="linenr">1209 </a>      font-lock-comment-face<span class="hl opt">)))</span></div>
<div class="pre"><a id="l1210" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1210" class="linenr">1210 </a></div>
<div class="pre"><a id="l1211" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1211" class="linenr">1211 </a><span class="hl opt">(</span><span class="hl kwa">defgroup</span> sh-indentation nil</div>
<div class="pre"><a id="l1212" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1212" class="linenr">1212 </a>  <span class="hl str">&quot;Variables controlling indentation in shell scripts.</span></div>
<div class="pre"><a id="l1213" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1213" class="linenr">1213 </a><span class="hl str"></span></div>
<div class="pre"><a id="l1214" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1214" class="linenr">1214 </a><span class="hl str">Note: customizing these variables will not affect existing buffers if</span></div>
<div class="pre"><a id="l1215" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1215" class="linenr">1215 </a><span class="hl str">`sh-make-vars-local' is non-nil.  See the documentation for</span></div>
<div class="pre"><a id="l1216" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1216" class="linenr">1216 </a><span class="hl str">variable `sh-make-vars-local', command `sh-make-vars-local'</span></div>
<div class="pre"><a id="l1217" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1217" class="linenr">1217 </a><span class="hl str">and command `sh-reset-indent-vars-to-global-values'.&quot;</span></div>
<div class="pre"><a id="l1218" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1218" class="linenr">1218 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-script<span class="hl opt">)</span></div>
<div class="pre"><a id="l1219" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1219" class="linenr">1219 </a></div>
<div class="pre"><a id="l1220" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1220" class="linenr">1220 </a></div>
<div class="pre"><a id="l1221" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1221" class="linenr">1221 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-set-shell-hook nil</div>
<div class="pre"><a id="l1222" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1222" class="linenr">1222 </a>  <span class="hl str">&quot;Hook run by `sh-set-shell'.&quot;</span></div>
<div class="pre"><a id="l1223" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1223" class="linenr">1223 </a>  <span class="hl opt">:</span>type <span class="hl opt">'</span>hook</div>
<div class="pre"><a id="l1224" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1224" class="linenr">1224 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-script<span class="hl opt">)</span></div>
<div class="pre"><a id="l1225" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1225" class="linenr">1225 </a></div>
<div class="pre"><a id="l1226" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1226" class="linenr">1226 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-mode-hook <span class="hl opt">'(</span><span class="hl kwa">sh-electric-here-document-mode</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1227" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1227" class="linenr">1227 </a>  <span class="hl str">&quot;Hook run by `sh-mode'.&quot;</span></div>
<div class="pre"><a id="l1228" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1228" class="linenr">1228 </a>  <span class="hl opt">:</span>type <span class="hl opt">'</span>hook</div>
<div class="pre"><a id="l1229" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1229" class="linenr">1229 </a>  <span class="hl opt">:</span>options <span class="hl opt">'(</span><span class="hl kwa">sh-electric-here-document-mode</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1230" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1230" class="linenr">1230 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-script<span class="hl opt">)</span></div>
<div class="pre"><a id="l1231" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1231" class="linenr">1231 </a></div>
<div class="pre"><a id="l1232" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1232" class="linenr">1232 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-learn-basic-offset nil</div>
<div class="pre"><a id="l1233" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1233" class="linenr">1233 </a>  <span class="hl str">&quot;When `sh-guess-basic-offset' should learn `sh-basic-offset'.</span></div>
<div class="pre"><a id="l1234" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1234" class="linenr">1234 </a><span class="hl str"></span></div>
<div class="pre"><a id="l1235" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1235" class="linenr">1235 </a><span class="hl str">nil mean:              never.</span></div>
<div class="pre"><a id="l1236" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1236" class="linenr">1236 </a><span class="hl str">t means:               only if there seems to be an obvious value.</span></div>
<div class="pre"><a id="l1237" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1237" class="linenr">1237 </a><span class="hl str">Anything else means:   whenever we have a</span> <span class="hl esc">\&quot;</span><span class="hl str">good guess</span><span class="hl esc">\&quot;</span> <span class="hl str">as to the value.&quot;</span></div>
<div class="pre"><a id="l1238" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1238" class="linenr">1238 </a>  <span class="hl opt">:</span>type <span class="hl opt">'(</span><span class="hl kwa">choice</span></div>
<div class="pre"><a id="l1239" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1239" class="linenr">1239 </a>          <span class="hl opt">(</span><span class="hl kwa">const</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;Never&quot;</span> nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l1240" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1240" class="linenr">1240 </a>          <span class="hl opt">(</span><span class="hl kwa">const</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;Only if sure&quot;</span>  t<span class="hl opt">)</span></div>
<div class="pre"><a id="l1241" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1241" class="linenr">1241 </a>          <span class="hl opt">(</span><span class="hl kwa">const</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;If have a good guess&quot;</span> usually<span class="hl opt">))</span></div>
<div class="pre"><a id="l1242" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1242" class="linenr">1242 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-indentation<span class="hl opt">)</span></div>
<div class="pre"><a id="l1243" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1243" class="linenr">1243 </a></div>
<div class="pre"><a id="l1244" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1244" class="linenr">1244 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-popup-occur-buffer nil</div>
<div class="pre"><a id="l1245" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1245" class="linenr">1245 </a>  <span class="hl str">&quot;Controls when  `sh-learn-buffer-indent' pops the `*indent*' buffer.</span></div>
<div class="pre"><a id="l1246" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1246" class="linenr">1246 </a><span class="hl str">If t it is always shown.  If nil, it is shown only when there</span></div>
<div class="pre"><a id="l1247" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1247" class="linenr">1247 </a><span class="hl str">are conflicts.&quot;</span></div>
<div class="pre"><a id="l1248" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1248" class="linenr">1248 </a>  <span class="hl opt">:</span>type <span class="hl opt">'(</span><span class="hl kwa">choice</span></div>
<div class="pre"><a id="l1249" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1249" class="linenr">1249 </a>          <span class="hl opt">(</span><span class="hl kwa">const</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;Only when there are conflicts.&quot;</span> nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l1250" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1250" class="linenr">1250 </a>          <span class="hl opt">(</span><span class="hl kwa">const</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;Always&quot;</span>  t<span class="hl opt">))</span></div>
<div class="pre"><a id="l1251" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1251" class="linenr">1251 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-indentation<span class="hl opt">)</span></div>
<div class="pre"><a id="l1252" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1252" class="linenr">1252 </a></div>
<div class="pre"><a id="l1253" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1253" class="linenr">1253 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-blink t</div>
<div class="pre"><a id="l1254" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1254" class="linenr">1254 </a>  <span class="hl str">&quot;If non-nil, `sh-show-indent' shows the line indentation is relative to.</span></div>
<div class="pre"><a id="l1255" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1255" class="linenr">1255 </a><span class="hl str">The position on the line is not necessarily meaningful.</span></div>
<div class="pre"><a id="l1256" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1256" class="linenr">1256 </a><span class="hl str">In some cases the line will be the matching keyword, but this is not</span></div>
<div class="pre"><a id="l1257" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1257" class="linenr">1257 </a><span class="hl str">always the case.&quot;</span></div>
<div class="pre"><a id="l1258" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1258" class="linenr">1258 </a>  <span class="hl opt">:</span>type <span class="hl opt">'</span>boolean</div>
<div class="pre"><a id="l1259" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1259" class="linenr">1259 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-indentation<span class="hl opt">)</span></div>
<div class="pre"><a id="l1260" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1260" class="linenr">1260 </a></div>
<div class="pre"><a id="l1261" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1261" class="linenr">1261 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-first-lines-indent <span class="hl num">0</span></div>
<div class="pre"><a id="l1262" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1262" class="linenr">1262 </a>  <span class="hl str">&quot;The indentation of the first non-blank non-comment line.</span></div>
<div class="pre"><a id="l1263" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1263" class="linenr">1263 </a><span class="hl str">Usually 0 meaning first column.</span></div>
<div class="pre"><a id="l1264" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1264" class="linenr">1264 </a><span class="hl str">Can be set to a number, or to nil which means leave it as is.&quot;</span></div>
<div class="pre"><a id="l1265" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1265" class="linenr">1265 </a>  <span class="hl opt">:</span>type <span class="hl opt">'(</span><span class="hl kwa">choice</span></div>
<div class="pre"><a id="l1266" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1266" class="linenr">1266 </a>          <span class="hl opt">(</span><span class="hl kwa">const</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;Leave as is&quot;</span>     nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l1267" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1267" class="linenr">1267 </a>          <span class="hl opt">(</span><span class="hl kwa">integer</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;Column number&quot;</span></div>
<div class="pre"><a id="l1268" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1268" class="linenr">1268 </a>                   <span class="hl opt">:</span>menu-tag <span class="hl str">&quot;Indent to this col (0 means first col)&quot;</span> <span class="hl opt">))</span></div>
<div class="pre"><a id="l1269" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1269" class="linenr">1269 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-indentation<span class="hl opt">)</span></div>
<div class="pre"><a id="l1270" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1270" class="linenr">1270 </a></div>
<div class="pre"><a id="l1271" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1271" class="linenr">1271 </a></div>
<div class="pre"><a id="l1272" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1272" class="linenr">1272 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-basic-offset <span class="hl num">4</span></div>
<div class="pre"><a id="l1273" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1273" class="linenr">1273 </a>  <span class="hl str">&quot;The default indentation increment.</span></div>
<div class="pre"><a id="l1274" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1274" class="linenr">1274 </a><span class="hl str">This value is used for the `+' and `-' symbols in an indentation variable.&quot;</span></div>
<div class="pre"><a id="l1275" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1275" class="linenr">1275 </a>  <span class="hl opt">:</span>type <span class="hl opt">'</span>integer</div>
<div class="pre"><a id="l1276" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1276" class="linenr">1276 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-indentation<span class="hl opt">)</span></div>
<div class="pre"><a id="l1277" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1277" class="linenr">1277 </a><span class="hl opt">(</span><span class="hl kwa">put</span> <span class="hl opt">'</span>sh-basic-offset <span class="hl opt">'</span>safe-local-variable <span class="hl opt">'</span>integerp<span class="hl opt">)</span></div>
<div class="pre"><a id="l1278" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1278" class="linenr">1278 </a></div>
<div class="pre"><a id="l1279" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1279" class="linenr">1279 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-indent-comment t</div>
<div class="pre"><a id="l1280" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1280" class="linenr">1280 </a>  <span class="hl str">&quot;How a comment line is to be indented.</span></div>
<div class="pre"><a id="l1281" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1281" class="linenr">1281 </a><span class="hl str">nil means leave it as it is;</span></div>
<div class="pre"><a id="l1282" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1282" class="linenr">1282 </a><span class="hl str">t  means indent it as a normal line, aligning it to previous non-blank</span></div>
<div class="pre"><a id="l1283" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1283" class="linenr">1283 </a><span class="hl str">   non-comment line;</span></div>
<div class="pre"><a id="l1284" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1284" class="linenr">1284 </a><span class="hl str">a number means align to that column, e.g. 0 means first column.&quot;</span></div>
<div class="pre"><a id="l1285" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1285" class="linenr">1285 </a>  <span class="hl opt">:</span>type <span class="hl opt">'(</span><span class="hl kwa">choice</span></div>
<div class="pre"><a id="l1286" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1286" class="linenr">1286 </a>          <span class="hl opt">(</span><span class="hl kwa">const</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;Leave as is.&quot;</span> nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l1287" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1287" class="linenr">1287 </a>          <span class="hl opt">(</span><span class="hl kwa">const</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;Indent as a normal line.&quot;</span>  t<span class="hl opt">)</span></div>
<div class="pre"><a id="l1288" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1288" class="linenr">1288 </a>          <span class="hl opt">(</span><span class="hl kwa">integer</span> <span class="hl opt">:</span>menu-tag <span class="hl str">&quot;Indent to this col (0 means first col).&quot;</span></div>
<div class="pre"><a id="l1289" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1289" class="linenr">1289 </a>                   <span class="hl opt">:</span>tag <span class="hl str">&quot;Indent to column number.&quot;</span><span class="hl opt">) )</span></div>
<div class="pre"><a id="l1290" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1290" class="linenr">1290 </a>  <span class="hl opt">:</span>version <span class="hl str">&quot;24.3&quot;</span></div>
<div class="pre"><a id="l1291" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1291" class="linenr">1291 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-indentation<span class="hl opt">)</span></div>
<div class="pre"><a id="l1292" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1292" class="linenr">1292 </a></div>
<div class="pre"><a id="l1293" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1293" class="linenr">1293 </a></div>
<div class="pre"><a id="l1294" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1294" class="linenr">1294 </a><span class="hl opt">(</span><span class="hl kwa">defvar</span> sh-debug nil</div>
<div class="pre"><a id="l1295" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1295" class="linenr">1295 </a>  <span class="hl str">&quot;Enable lots of debug messages - if function `sh-debug' is enabled.&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1296" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1296" class="linenr">1296 </a></div>
<div class="pre"><a id="l1297" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1297" class="linenr">1297 </a></div>
<div class="pre"><a id="l1298" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1298" class="linenr">1298 </a><span class="hl slc">;; Uncomment this defun and comment the defmacro for debugging.</span></div>
<div class="pre"><a id="l1299" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1299" class="linenr">1299 </a><span class="hl slc">;; (defun sh-debug (&amp;rest args)</span></div>
<div class="pre"><a id="l1300" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1300" class="linenr">1300 </a><span class="hl slc">;;   &quot;For debugging:  display message ARGS if variable SH-DEBUG is non-nil.&quot;</span></div>
<div class="pre"><a id="l1301" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1301" class="linenr">1301 </a><span class="hl slc">;;   (if sh-debug</span></div>
<div class="pre"><a id="l1302" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1302" class="linenr">1302 </a><span class="hl slc">;;       (apply 'message args)))</span></div>
<div class="pre"><a id="l1303" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1303" class="linenr">1303 </a><span class="hl opt">(</span><span class="hl kwa">defmacro</span> sh-debug <span class="hl opt">(&amp;</span>rest _args<span class="hl opt">))</span></div>
<div class="pre"><a id="l1304" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1304" class="linenr">1304 </a></div>
<div class="pre"><a id="l1305" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1305" class="linenr">1305 </a><span class="hl opt">(</span><span class="hl kwa">defconst</span> sh-symbol-list</div>
<div class="pre"><a id="l1306" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1306" class="linenr">1306 </a>  <span class="hl opt">'((</span><span class="hl kwa">const</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;+ &quot;</span>  <span class="hl opt">:</span>value <span class="hl opt">+</span></div>
<div class="pre"><a id="l1307" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1307" class="linenr">1307 </a>           <span class="hl opt">:</span>menu-tag <span class="hl str">&quot;+   Indent right by sh-basic-offset&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1308" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1308" class="linenr">1308 </a>    <span class="hl opt">(</span><span class="hl kwa">const</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;- &quot;</span>  <span class="hl opt">:</span>value -</div>
<div class="pre"><a id="l1309" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1309" class="linenr">1309 </a>           <span class="hl opt">:</span>menu-tag <span class="hl str">&quot;-   Indent left  by sh-basic-offset&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1310" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1310" class="linenr">1310 </a>    <span class="hl opt">(</span><span class="hl kwa">const</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;++&quot;</span>  <span class="hl opt">:</span>value  <span class="hl opt">++</span></div>
<div class="pre"><a id="l1311" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1311" class="linenr">1311 </a>           <span class="hl opt">:</span>menu-tag <span class="hl str">&quot;++  Indent right twice sh-basic-offset&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1312" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1312" class="linenr">1312 </a>    <span class="hl opt">(</span><span class="hl kwa">const</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;--&quot;</span>  <span class="hl opt">:</span>value --</div>
<div class="pre"><a id="l1313" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1313" class="linenr">1313 </a>           <span class="hl opt">:</span>menu-tag <span class="hl str">&quot;--  Indent left  twice sh-basic-offset&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1314" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1314" class="linenr">1314 </a>    <span class="hl opt">(</span><span class="hl kwa">const</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;* &quot;</span> <span class="hl opt">:</span>value <span class="hl opt">*</span></div>
<div class="pre"><a id="l1315" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1315" class="linenr">1315 </a>           <span class="hl opt">:</span>menu-tag <span class="hl str">&quot;*   Indent right half sh-basic-offset&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1316" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1316" class="linenr">1316 </a>    <span class="hl opt">(</span><span class="hl kwa">const</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;/ &quot;</span> <span class="hl opt">:</span>value <span class="hl opt">/</span></div>
<div class="pre"><a id="l1317" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1317" class="linenr">1317 </a>           <span class="hl opt">:</span>menu-tag <span class="hl str">&quot;/   Indent left  half sh-basic-offset&quot;</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1318" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1318" class="linenr">1318 </a></div>
<div class="pre"><a id="l1319" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1319" class="linenr">1319 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-indent-for-else <span class="hl num">0</span></div>
<div class="pre"><a id="l1320" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1320" class="linenr">1320 </a>  <span class="hl str">&quot;How much to indent an `else' relative to its `if'.  Usually 0.&quot;</span></div>
<div class="pre"><a id="l1321" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1321" class="linenr">1321 </a>  <span class="hl opt">:</span>type <span class="hl opt">`(</span><span class="hl kwa">choice</span></div>
<div class="pre"><a id="l1322" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1322" class="linenr">1322 </a>          <span class="hl opt">(</span><span class="hl kwa">integer</span> <span class="hl opt">:</span>menu-tag <span class="hl str">&quot;A number (positive=&gt;indent right)&quot;</span></div>
<div class="pre"><a id="l1323" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1323" class="linenr">1323 </a>                   <span class="hl opt">:</span>tag <span class="hl str">&quot;A number&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1324" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1324" class="linenr">1324 </a>          <span class="hl opt">(</span><span class="hl kwa">const</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;--&quot;</span><span class="hl opt">)</span> <span class="hl slc">;; separator!</span></div>
<div class="pre"><a id="l1325" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1325" class="linenr">1325 </a>          <span class="hl opt">,&#64;</span> sh-symbol-list</div>
<div class="pre"><a id="l1326" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1326" class="linenr">1326 </a>          <span class="hl opt">)</span></div>
<div class="pre"><a id="l1327" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1327" class="linenr">1327 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-indentation<span class="hl opt">)</span></div>
<div class="pre"><a id="l1328" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1328" class="linenr">1328 </a></div>
<div class="pre"><a id="l1329" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1329" class="linenr">1329 </a><span class="hl opt">(</span><span class="hl kwa">defconst</span> sh-number-or-symbol-list</div>
<div class="pre"><a id="l1330" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1330" class="linenr">1330 </a>  <span class="hl opt">(</span><span class="hl kwa">append</span> <span class="hl opt">'((</span><span class="hl kwa">integer</span> <span class="hl opt">:</span>menu-tag <span class="hl str">&quot;A number (positive=&gt;indent right)&quot;</span></div>
<div class="pre"><a id="l1331" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1331" class="linenr">1331 </a>                     <span class="hl opt">:</span>tag <span class="hl str">&quot;A number&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1332" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1332" class="linenr">1332 </a>            <span class="hl opt">(</span><span class="hl kwa">const</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;--&quot;</span><span class="hl opt">))</span>          <span class="hl slc">; separator</span></div>
<div class="pre"><a id="l1333" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1333" class="linenr">1333 </a>          sh-symbol-list<span class="hl opt">))</span></div>
<div class="pre"><a id="l1334" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1334" class="linenr">1334 </a></div>
<div class="pre"><a id="l1335" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1335" class="linenr">1335 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-indent-for-fi <span class="hl num">0</span></div>
<div class="pre"><a id="l1336" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1336" class="linenr">1336 </a>  <span class="hl str">&quot;How much to indent a `fi' relative to its `if'.  Usually 0.&quot;</span></div>
<div class="pre"><a id="l1337" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1337" class="linenr">1337 </a>  <span class="hl opt">:</span>type <span class="hl opt">`(</span><span class="hl kwa">choice</span> <span class="hl opt">,&#64;</span> sh-number-or-symbol-list <span class="hl opt">)</span></div>
<div class="pre"><a id="l1338" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1338" class="linenr">1338 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-indentation<span class="hl opt">)</span></div>
<div class="pre"><a id="l1339" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1339" class="linenr">1339 </a></div>
<div class="pre"><a id="l1340" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1340" class="linenr">1340 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-indent-for-done <span class="hl num">0</span></div>
<div class="pre"><a id="l1341" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1341" class="linenr">1341 </a>  <span class="hl str">&quot;How much to indent a `done' relative to its matching stmt.  Usually 0.&quot;</span></div>
<div class="pre"><a id="l1342" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1342" class="linenr">1342 </a>  <span class="hl opt">:</span>type <span class="hl opt">`(</span><span class="hl kwa">choice</span> <span class="hl opt">,&#64;</span> sh-number-or-symbol-list <span class="hl opt">)</span></div>
<div class="pre"><a id="l1343" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1343" class="linenr">1343 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-indentation<span class="hl opt">)</span></div>
<div class="pre"><a id="l1344" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1344" class="linenr">1344 </a></div>
<div class="pre"><a id="l1345" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1345" class="linenr">1345 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-indent-after-else <span class="hl opt">'+</span></div>
<div class="pre"><a id="l1346" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1346" class="linenr">1346 </a>  <span class="hl str">&quot;How much to indent a statement after an `else' statement.&quot;</span></div>
<div class="pre"><a id="l1347" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1347" class="linenr">1347 </a>  <span class="hl opt">:</span>type <span class="hl opt">`(</span><span class="hl kwa">choice</span> <span class="hl opt">,&#64;</span> sh-number-or-symbol-list <span class="hl opt">)</span></div>
<div class="pre"><a id="l1348" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1348" class="linenr">1348 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-indentation<span class="hl opt">)</span></div>
<div class="pre"><a id="l1349" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1349" class="linenr">1349 </a></div>
<div class="pre"><a id="l1350" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1350" class="linenr">1350 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-indent-after-if <span class="hl opt">'+</span></div>
<div class="pre"><a id="l1351" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1351" class="linenr">1351 </a>  <span class="hl str">&quot;How much to indent a statement after an `if' statement.</span></div>
<div class="pre"><a id="l1352" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1352" class="linenr">1352 </a><span class="hl str">This includes lines after `else' and `elif' statements, too, but</span></div>
<div class="pre"><a id="l1353" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1353" class="linenr">1353 </a><span class="hl str">does not affect the `else', `elif' or `fi' statements themselves.&quot;</span></div>
<div class="pre"><a id="l1354" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1354" class="linenr">1354 </a>  <span class="hl opt">:</span>type <span class="hl opt">`(</span><span class="hl kwa">choice</span> <span class="hl opt">,&#64;</span> sh-number-or-symbol-list <span class="hl opt">)</span></div>
<div class="pre"><a id="l1355" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1355" class="linenr">1355 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-indentation<span class="hl opt">)</span></div>
<div class="pre"><a id="l1356" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1356" class="linenr">1356 </a></div>
<div class="pre"><a id="l1357" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1357" class="linenr">1357 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-indent-for-then <span class="hl num">0</span></div>
<div class="pre"><a id="l1358" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1358" class="linenr">1358 </a>  <span class="hl str">&quot;How much to indent a `then' relative to its `if'.&quot;</span></div>
<div class="pre"><a id="l1359" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1359" class="linenr">1359 </a>  <span class="hl opt">:</span>type <span class="hl opt">`(</span><span class="hl kwa">choice</span> <span class="hl opt">,&#64;</span> sh-number-or-symbol-list <span class="hl opt">)</span></div>
<div class="pre"><a id="l1360" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1360" class="linenr">1360 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-indentation<span class="hl opt">)</span></div>
<div class="pre"><a id="l1361" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1361" class="linenr">1361 </a></div>
<div class="pre"><a id="l1362" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1362" class="linenr">1362 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-indent-for-do <span class="hl num">0</span></div>
<div class="pre"><a id="l1363" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1363" class="linenr">1363 </a>  <span class="hl str">&quot;How much to indent a `do' statement.</span></div>
<div class="pre"><a id="l1364" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1364" class="linenr">1364 </a><span class="hl str">This is relative to the statement before the `do', typically a</span></div>
<div class="pre"><a id="l1365" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1365" class="linenr">1365 </a><span class="hl str">`while', `until', `for', `repeat' or `select' statement.&quot;</span></div>
<div class="pre"><a id="l1366" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1366" class="linenr">1366 </a>  <span class="hl opt">:</span>type <span class="hl opt">`(</span><span class="hl kwa">choice</span> <span class="hl opt">,&#64;</span> sh-number-or-symbol-list<span class="hl opt">)</span></div>
<div class="pre"><a id="l1367" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1367" class="linenr">1367 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-indentation<span class="hl opt">)</span></div>
<div class="pre"><a id="l1368" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1368" class="linenr">1368 </a></div>
<div class="pre"><a id="l1369" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1369" class="linenr">1369 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-indent-after-do <span class="hl opt">'+</span></div>
<div class="pre"><a id="l1370" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1370" class="linenr">1370 </a>  <span class="hl str">&quot;How much to indent a line after a `do' statement.</span></div>
<div class="pre"><a id="l1371" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1371" class="linenr">1371 </a><span class="hl str">This is used when the `do' is the first word of the line.</span></div>
<div class="pre"><a id="l1372" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1372" class="linenr">1372 </a><span class="hl str">This is relative to the statement before the `do', typically a</span></div>
<div class="pre"><a id="l1373" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1373" class="linenr">1373 </a><span class="hl str">`while', `until', `for', `repeat' or `select' statement.&quot;</span></div>
<div class="pre"><a id="l1374" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1374" class="linenr">1374 </a>  <span class="hl opt">:</span>type <span class="hl opt">`(</span><span class="hl kwa">choice</span> <span class="hl opt">,&#64;</span> sh-number-or-symbol-list<span class="hl opt">)</span></div>
<div class="pre"><a id="l1375" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1375" class="linenr">1375 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-indentation<span class="hl opt">)</span></div>
<div class="pre"><a id="l1376" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1376" class="linenr">1376 </a></div>
<div class="pre"><a id="l1377" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1377" class="linenr">1377 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-indent-after-loop-construct <span class="hl opt">'+</span></div>
<div class="pre"><a id="l1378" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1378" class="linenr">1378 </a>  <span class="hl str">&quot;How much to indent a statement after a loop construct.</span></div>
<div class="pre"><a id="l1379" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1379" class="linenr">1379 </a><span class="hl str"></span></div>
<div class="pre"><a id="l1380" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1380" class="linenr">1380 </a><span class="hl str">This variable is used when the keyword `do' is on the same line as the</span></div>
<div class="pre"><a id="l1381" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1381" class="linenr">1381 </a><span class="hl str">loop statement (e.g., `until', `while' or `for').</span></div>
<div class="pre"><a id="l1382" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1382" class="linenr">1382 </a><span class="hl str">If the `do' is on a line by itself, then `sh-indent-after-do' is used instead.&quot;</span></div>
<div class="pre"><a id="l1383" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1383" class="linenr">1383 </a>  <span class="hl opt">:</span>type <span class="hl opt">`(</span><span class="hl kwa">choice</span> <span class="hl opt">,&#64;</span> sh-number-or-symbol-list<span class="hl opt">)</span></div>
<div class="pre"><a id="l1384" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1384" class="linenr">1384 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-indentation<span class="hl opt">)</span></div>
<div class="pre"><a id="l1385" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1385" class="linenr">1385 </a></div>
<div class="pre"><a id="l1386" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1386" class="linenr">1386 </a></div>
<div class="pre"><a id="l1387" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1387" class="linenr">1387 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-indent-after-done <span class="hl num">0</span></div>
<div class="pre"><a id="l1388" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1388" class="linenr">1388 </a>  <span class="hl str">&quot;How much to indent a statement after a `done' keyword.</span></div>
<div class="pre"><a id="l1389" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1389" class="linenr">1389 </a><span class="hl str">Normally this is 0, which aligns the `done' to the matching</span></div>
<div class="pre"><a id="l1390" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1390" class="linenr">1390 </a><span class="hl str">looping construct line.</span></div>
<div class="pre"><a id="l1391" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1391" class="linenr">1391 </a><span class="hl str">Setting it non-zero allows you to have the `do' statement on a line</span></div>
<div class="pre"><a id="l1392" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1392" class="linenr">1392 </a><span class="hl str">by itself and align the done under to do.&quot;</span></div>
<div class="pre"><a id="l1393" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1393" class="linenr">1393 </a>  <span class="hl opt">:</span>type <span class="hl opt">`(</span><span class="hl kwa">choice</span> <span class="hl opt">,&#64;</span> sh-number-or-symbol-list<span class="hl opt">)</span></div>
<div class="pre"><a id="l1394" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1394" class="linenr">1394 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-indentation<span class="hl opt">)</span></div>
<div class="pre"><a id="l1395" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1395" class="linenr">1395 </a></div>
<div class="pre"><a id="l1396" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1396" class="linenr">1396 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-indent-for-case-label <span class="hl opt">'+</span></div>
<div class="pre"><a id="l1397" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1397" class="linenr">1397 </a>  <span class="hl str">&quot;How much to indent a case label statement.</span></div>
<div class="pre"><a id="l1398" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1398" class="linenr">1398 </a><span class="hl str">This is relative to the line containing the `case' statement.&quot;</span></div>
<div class="pre"><a id="l1399" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1399" class="linenr">1399 </a>  <span class="hl opt">:</span>type <span class="hl opt">`(</span><span class="hl kwa">choice</span> <span class="hl opt">,&#64;</span> sh-number-or-symbol-list<span class="hl opt">)</span></div>
<div class="pre"><a id="l1400" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1400" class="linenr">1400 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-indentation<span class="hl opt">)</span></div>
<div class="pre"><a id="l1401" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1401" class="linenr">1401 </a></div>
<div class="pre"><a id="l1402" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1402" class="linenr">1402 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-indent-for-case-alt <span class="hl opt">'++</span></div>
<div class="pre"><a id="l1403" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1403" class="linenr">1403 </a>  <span class="hl str">&quot;How much to indent statements after the case label.</span></div>
<div class="pre"><a id="l1404" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1404" class="linenr">1404 </a><span class="hl str">This is relative to the line containing the `case' statement.&quot;</span></div>
<div class="pre"><a id="l1405" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1405" class="linenr">1405 </a>  <span class="hl opt">:</span>type <span class="hl opt">`(</span><span class="hl kwa">choice</span> <span class="hl opt">,&#64;</span> sh-number-or-symbol-list<span class="hl opt">)</span></div>
<div class="pre"><a id="l1406" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1406" class="linenr">1406 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-indentation<span class="hl opt">)</span></div>
<div class="pre"><a id="l1407" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1407" class="linenr">1407 </a></div>
<div class="pre"><a id="l1408" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1408" class="linenr">1408 </a></div>
<div class="pre"><a id="l1409" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1409" class="linenr">1409 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-indent-for-continuation <span class="hl opt">'+</span></div>
<div class="pre"><a id="l1410" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1410" class="linenr">1410 </a>  <span class="hl str">&quot;How much to indent for a continuation statement.&quot;</span></div>
<div class="pre"><a id="l1411" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1411" class="linenr">1411 </a>  <span class="hl opt">:</span>type <span class="hl opt">`(</span><span class="hl kwa">choice</span> <span class="hl opt">,&#64;</span> sh-number-or-symbol-list<span class="hl opt">)</span></div>
<div class="pre"><a id="l1412" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1412" class="linenr">1412 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-indentation<span class="hl opt">)</span></div>
<div class="pre"><a id="l1413" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1413" class="linenr">1413 </a></div>
<div class="pre"><a id="l1414" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1414" class="linenr">1414 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-indent-after-open <span class="hl opt">'+</span></div>
<div class="pre"><a id="l1415" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1415" class="linenr">1415 </a>  <span class="hl str">&quot;How much to indent after a line with an opening parenthesis or brace.</span></div>
<div class="pre"><a id="l1416" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1416" class="linenr">1416 </a><span class="hl str">For an open paren after a function, `sh-indent-after-function' is used.&quot;</span></div>
<div class="pre"><a id="l1417" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1417" class="linenr">1417 </a>  <span class="hl opt">:</span>type <span class="hl opt">`(</span><span class="hl kwa">choice</span> <span class="hl opt">,&#64;</span> sh-number-or-symbol-list<span class="hl opt">)</span></div>
<div class="pre"><a id="l1418" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1418" class="linenr">1418 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-indentation<span class="hl opt">)</span></div>
<div class="pre"><a id="l1419" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1419" class="linenr">1419 </a></div>
<div class="pre"><a id="l1420" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1420" class="linenr">1420 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-indent-after-function <span class="hl opt">'+</span></div>
<div class="pre"><a id="l1421" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1421" class="linenr">1421 </a>  <span class="hl str">&quot;How much to indent after a function line.&quot;</span></div>
<div class="pre"><a id="l1422" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1422" class="linenr">1422 </a>  <span class="hl opt">:</span>type <span class="hl opt">`(</span><span class="hl kwa">choice</span> <span class="hl opt">,&#64;</span> sh-number-or-symbol-list<span class="hl opt">)</span></div>
<div class="pre"><a id="l1423" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1423" class="linenr">1423 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-indentation<span class="hl opt">)</span></div>
<div class="pre"><a id="l1424" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1424" class="linenr">1424 </a></div>
<div class="pre"><a id="l1425" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1425" class="linenr">1425 </a><span class="hl slc">;; These 2 are for the rc shell:</span></div>
<div class="pre"><a id="l1426" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1426" class="linenr">1426 </a></div>
<div class="pre"><a id="l1427" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1427" class="linenr">1427 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-indent-after-switch <span class="hl opt">'+</span></div>
<div class="pre"><a id="l1428" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1428" class="linenr">1428 </a>  <span class="hl str">&quot;How much to indent a `case' statement relative to the `switch' statement.</span></div>
<div class="pre"><a id="l1429" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1429" class="linenr">1429 </a><span class="hl str">This is for the rc shell.&quot;</span></div>
<div class="pre"><a id="l1430" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1430" class="linenr">1430 </a>  <span class="hl opt">:</span>type <span class="hl opt">`(</span><span class="hl kwa">choice</span> <span class="hl opt">,&#64;</span> sh-number-or-symbol-list<span class="hl opt">)</span></div>
<div class="pre"><a id="l1431" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1431" class="linenr">1431 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-indentation<span class="hl opt">)</span></div>
<div class="pre"><a id="l1432" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1432" class="linenr">1432 </a></div>
<div class="pre"><a id="l1433" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1433" class="linenr">1433 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-indent-after-case <span class="hl opt">'+</span></div>
<div class="pre"><a id="l1434" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1434" class="linenr">1434 </a>  <span class="hl str">&quot;How much to indent a statement relative to the `case' statement.</span></div>
<div class="pre"><a id="l1435" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1435" class="linenr">1435 </a><span class="hl str">This is for the rc shell.&quot;</span></div>
<div class="pre"><a id="l1436" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1436" class="linenr">1436 </a>  <span class="hl opt">:</span>type <span class="hl opt">`(</span><span class="hl kwa">choice</span> <span class="hl opt">,&#64;</span> sh-number-or-symbol-list<span class="hl opt">)</span></div>
<div class="pre"><a id="l1437" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1437" class="linenr">1437 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-indentation<span class="hl opt">)</span></div>
<div class="pre"><a id="l1438" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1438" class="linenr">1438 </a></div>
<div class="pre"><a id="l1439" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1439" class="linenr">1439 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-backslash-column <span class="hl num">48</span></div>
<div class="pre"><a id="l1440" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1440" class="linenr">1440 </a>  <span class="hl str">&quot;Column in which `sh-backslash-region' inserts backslashes.&quot;</span></div>
<div class="pre"><a id="l1441" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1441" class="linenr">1441 </a>  <span class="hl opt">:</span>type <span class="hl opt">'</span>integer</div>
<div class="pre"><a id="l1442" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1442" class="linenr">1442 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh<span class="hl opt">)</span></div>
<div class="pre"><a id="l1443" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1443" class="linenr">1443 </a></div>
<div class="pre"><a id="l1444" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1444" class="linenr">1444 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-backslash-align t</div>
<div class="pre"><a id="l1445" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1445" class="linenr">1445 </a>  <span class="hl str">&quot;If non-nil, `sh-backslash-region' will align backslashes.&quot;</span></div>
<div class="pre"><a id="l1446" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1446" class="linenr">1446 </a>  <span class="hl opt">:</span>type <span class="hl opt">'</span>boolean</div>
<div class="pre"><a id="l1447" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1447" class="linenr">1447 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh<span class="hl opt">)</span></div>
<div class="pre"><a id="l1448" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1448" class="linenr">1448 </a></div>
<div class="pre"><a id="l1449" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1449" class="linenr">1449 </a><span class="hl slc">;; Internal use - not designed to be changed by the user:</span></div>
<div class="pre"><a id="l1450" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1450" class="linenr">1450 </a></div>
<div class="pre"><a id="l1451" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1451" class="linenr">1451 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-mkword-regexpr <span class="hl opt">(</span><span class="hl kwa">word</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1452" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1452" class="linenr">1452 </a>  <span class="hl str">&quot;Make a regexp which matches WORD as a word.</span></div>
<div class="pre"><a id="l1453" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1453" class="linenr">1453 </a><span class="hl str">This specifically excludes an occurrence of WORD followed by</span></div>
<div class="pre"><a id="l1454" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1454" class="linenr">1454 </a><span class="hl str">punctuation characters like `-'.&quot;</span></div>
<div class="pre"><a id="l1455" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1455" class="linenr">1455 </a>  <span class="hl opt">(</span><span class="hl kwa">concat</span> word <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">([^-[:alnum:]_]</span><span class="hl esc">\\</span><span class="hl str">|$</span><span class="hl esc">\\</span><span class="hl str">)&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1456" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1456" class="linenr">1456 </a></div>
<div class="pre"><a id="l1457" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1457" class="linenr">1457 </a><span class="hl opt">(</span><span class="hl kwa">defconst</span> sh-re-done <span class="hl opt">(</span><span class="hl kwa">sh-mkword-regexpr</span> <span class="hl str">&quot;done&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1458" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1458" class="linenr">1458 </a></div>
<div class="pre"><a id="l1459" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1459" class="linenr">1459 </a></div>
<div class="pre"><a id="l1460" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1460" class="linenr">1460 </a><span class="hl opt">(</span><span class="hl kwa">defconst</span> sh-kws-for-done</div>
<div class="pre"><a id="l1461" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1461" class="linenr">1461 </a>  <span class="hl opt">'((</span><span class="hl kwa">sh</span> .  <span class="hl opt">(</span> <span class="hl str">&quot;while&quot;</span> <span class="hl str">&quot;until&quot;</span> <span class="hl str">&quot;for&quot;</span> <span class="hl opt">) )</span></div>
<div class="pre"><a id="l1462" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1462" class="linenr">1462 </a>    <span class="hl opt">(</span><span class="hl kwa">bash</span> . <span class="hl opt">(</span> <span class="hl str">&quot;while&quot;</span> <span class="hl str">&quot;until&quot;</span> <span class="hl str">&quot;for&quot;</span> <span class="hl str">&quot;select&quot;</span>  <span class="hl opt">) )</span></div>
<div class="pre"><a id="l1463" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1463" class="linenr">1463 </a>    <span class="hl opt">(</span><span class="hl kwa">ksh88</span> . <span class="hl opt">(</span> <span class="hl str">&quot;while&quot;</span> <span class="hl str">&quot;until&quot;</span> <span class="hl str">&quot;for&quot;</span> <span class="hl str">&quot;select&quot;</span>  <span class="hl opt">) )</span></div>
<div class="pre"><a id="l1464" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1464" class="linenr">1464 </a>    <span class="hl opt">(</span><span class="hl kwa">zsh</span> .  <span class="hl opt">(</span> <span class="hl str">&quot;while&quot;</span> <span class="hl str">&quot;until&quot;</span> <span class="hl str">&quot;for&quot;</span> <span class="hl str">&quot;repeat&quot;</span> <span class="hl str">&quot;select&quot;</span> <span class="hl opt">) ) )</span></div>
<div class="pre"><a id="l1465" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1465" class="linenr">1465 </a>  <span class="hl str">&quot;Which keywords can match the word `done' in this shell.&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1466" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1466" class="linenr">1466 </a></div>
<div class="pre"><a id="l1467" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1467" class="linenr">1467 </a></div>
<div class="pre"><a id="l1468" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1468" class="linenr">1468 </a><span class="hl opt">(</span><span class="hl kwa">defconst</span> sh-indent-supported</div>
<div class="pre"><a id="l1469" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1469" class="linenr">1469 </a>  <span class="hl opt">'((</span><span class="hl kwa">sh</span> . sh<span class="hl opt">)</span></div>
<div class="pre"><a id="l1470" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1470" class="linenr">1470 </a>    <span class="hl opt">(</span><span class="hl kwa">csh</span> . nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l1471" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1471" class="linenr">1471 </a>    <span class="hl opt">(</span><span class="hl kwa">rc</span> . rc<span class="hl opt">))</span></div>
<div class="pre"><a id="l1472" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1472" class="linenr">1472 </a>  <span class="hl str">&quot;Indentation rule set to use for each shell type.&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1473" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1473" class="linenr">1473 </a></div>
<div class="pre"><a id="l1474" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1474" class="linenr">1474 </a><span class="hl opt">(</span><span class="hl kwa">defvar</span> sh-indent-supported-here nil</div>
<div class="pre"><a id="l1475" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1475" class="linenr">1475 </a>  <span class="hl str">&quot;Non-nil if we support indentation for the current buffer's shell type.&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1476" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1476" class="linenr">1476 </a></div>
<div class="pre"><a id="l1477" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1477" class="linenr">1477 </a><span class="hl opt">(</span><span class="hl kwa">defconst</span> sh-var-list</div>
<div class="pre"><a id="l1478" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1478" class="linenr">1478 </a>  <span class="hl opt">'(</span></div>
<div class="pre"><a id="l1479" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1479" class="linenr">1479 </a>    sh-basic-offset sh-first-lines-indent sh-indent-after-case</div>
<div class="pre"><a id="l1480" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1480" class="linenr">1480 </a>    sh-indent-after-do sh-indent-after-done</div>
<div class="pre"><a id="l1481" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1481" class="linenr">1481 </a>    sh-indent-after-else</div>
<div class="pre"><a id="l1482" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1482" class="linenr">1482 </a>    sh-indent-after-if</div>
<div class="pre"><a id="l1483" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1483" class="linenr">1483 </a>    sh-indent-after-loop-construct</div>
<div class="pre"><a id="l1484" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1484" class="linenr">1484 </a>    sh-indent-after-open</div>
<div class="pre"><a id="l1485" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1485" class="linenr">1485 </a>    sh-indent-comment</div>
<div class="pre"><a id="l1486" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1486" class="linenr">1486 </a>    sh-indent-for-case-alt</div>
<div class="pre"><a id="l1487" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1487" class="linenr">1487 </a>    sh-indent-for-case-label</div>
<div class="pre"><a id="l1488" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1488" class="linenr">1488 </a>    sh-indent-for-continuation</div>
<div class="pre"><a id="l1489" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1489" class="linenr">1489 </a>    sh-indent-for-do</div>
<div class="pre"><a id="l1490" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1490" class="linenr">1490 </a>    sh-indent-for-done</div>
<div class="pre"><a id="l1491" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1491" class="linenr">1491 </a>    sh-indent-for-else</div>
<div class="pre"><a id="l1492" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1492" class="linenr">1492 </a>    sh-indent-for-fi</div>
<div class="pre"><a id="l1493" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1493" class="linenr">1493 </a>    sh-indent-for-then</div>
<div class="pre"><a id="l1494" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1494" class="linenr">1494 </a>    <span class="hl opt">)</span></div>
<div class="pre"><a id="l1495" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1495" class="linenr">1495 </a>  <span class="hl str">&quot;A list of variables used by script mode to control indentation.</span></div>
<div class="pre"><a id="l1496" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1496" class="linenr">1496 </a><span class="hl str">This list is used when switching between buffer-local and global</span></div>
<div class="pre"><a id="l1497" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1497" class="linenr">1497 </a><span class="hl str">values of variables, and for the commands using indentation styles.&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1498" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1498" class="linenr">1498 </a></div>
<div class="pre"><a id="l1499" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1499" class="linenr">1499 </a><span class="hl opt">(</span><span class="hl kwa">defvar</span> sh-make-vars-local t</div>
<div class="pre"><a id="l1500" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1500" class="linenr">1500 </a>  <span class="hl str">&quot;Controls whether indentation variables are local to the buffer.</span></div>
<div class="pre"><a id="l1501" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1501" class="linenr">1501 </a><span class="hl str">If non-nil, indentation variables are made local initially.</span></div>
<div class="pre"><a id="l1502" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1502" class="linenr">1502 </a><span class="hl str">If nil, you can later make the variables local by invoking</span></div>
<div class="pre"><a id="l1503" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1503" class="linenr">1503 </a><span class="hl str">command `sh-make-vars-local'.</span></div>
<div class="pre"><a id="l1504" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1504" class="linenr">1504 </a><span class="hl str">The default is t because I assume that in one Emacs session one is</span></div>
<div class="pre"><a id="l1505" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1505" class="linenr">1505 </a><span class="hl str">frequently editing existing scripts with different styles.&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1506" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1506" class="linenr">1506 </a></div>
<div class="pre"><a id="l1507" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1507" class="linenr">1507 </a><span class="cntrl">\f</span></div>
<div class="pre"><a id="l1508" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1508" class="linenr">1508 </a><span class="hl slc">;; inferior shell interaction</span></div>
<div class="pre"><a id="l1509" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1509" class="linenr">1509 </a><span class="hl slc">;; TODO: support multiple interactive shells</span></div>
<div class="pre"><a id="l1510" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1510" class="linenr">1510 </a><span class="hl opt">(</span><span class="hl kwa">defvar-local</span> sh-shell-process nil</div>
<div class="pre"><a id="l1511" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1511" class="linenr">1511 </a>  <span class="hl str">&quot;The inferior shell process for interaction.&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1512" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1512" class="linenr">1512 </a></div>
<div class="pre"><a id="l1513" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1513" class="linenr">1513 </a><span class="hl opt">(</span><span class="hl kwa">defvar</span> explicit-shell-file-name<span class="hl opt">)</span></div>
<div class="pre"><a id="l1514" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1514" class="linenr">1514 </a></div>
<div class="pre"><a id="l1515" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1515" class="linenr">1515 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-shell-process <span class="hl opt">(</span><span class="hl kwa">force</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1516" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1516" class="linenr">1516 </a>  <span class="hl str">&quot;Get a shell process for interaction.</span></div>
<div class="pre"><a id="l1517" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1517" class="linenr">1517 </a><span class="hl str">If FORCE is non-nil and no process found, create one.&quot;</span></div>
<div class="pre"><a id="l1518" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1518" class="linenr">1518 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">process-live-p</span> sh-shell-process<span class="hl opt">)</span></div>
<div class="pre"><a id="l1519" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1519" class="linenr">1519 </a>      sh-shell-process</div>
<div class="pre"><a id="l1520" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1520" class="linenr">1520 </a>    <span class="hl opt">(</span><span class="hl kwa">setq</span> sh-shell-process</div>
<div class="pre"><a id="l1521" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1521" class="linenr">1521 </a>          <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">found</span> nil<span class="hl opt">)</span> proc</div>
<div class="pre"><a id="l1522" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1522" class="linenr">1522 </a>                <span class="hl opt">(</span><span class="hl kwa">procs</span> <span class="hl opt">(</span><span class="hl kwa">process-list</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1523" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1523" class="linenr">1523 </a>            <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">not</span> found<span class="hl opt">)</span> procs</div>
<div class="pre"><a id="l1524" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1524" class="linenr">1524 </a>                        <span class="hl opt">(</span><span class="hl kwa">process-live-p</span> <span class="hl opt">(</span><span class="hl kwa">setq</span> proc <span class="hl opt">(</span><span class="hl kwa">pop</span> procs<span class="hl opt">)))</span></div>
<div class="pre"><a id="l1525" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1525" class="linenr">1525 </a>                        <span class="hl opt">(</span><span class="hl kwa">process-command</span> proc<span class="hl opt">))</span></div>
<div class="pre"><a id="l1526" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1526" class="linenr">1526 </a>              <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">string-equal</span> sh-shell <span class="hl opt">(</span><span class="hl kwa">file-name-nondirectory</span></div>
<div class="pre"><a id="l1527" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1527" class="linenr">1527 </a>                                            <span class="hl opt">(</span><span class="hl kwa">car</span> <span class="hl opt">(</span><span class="hl kwa">process-command</span> proc<span class="hl opt">))))</span></div>
<div class="pre"><a id="l1528" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1528" class="linenr">1528 </a>                <span class="hl opt">(</span><span class="hl kwa">setq</span> found proc<span class="hl opt">)))</span></div>
<div class="pre"><a id="l1529" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1529" class="linenr">1529 </a>            <span class="hl opt">(</span><span class="hl kwa">or</span> found</div>
<div class="pre"><a id="l1530" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1530" class="linenr">1530 </a>                <span class="hl opt">(</span><span class="hl kwa">and</span> force</div>
<div class="pre"><a id="l1531" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1531" class="linenr">1531 </a>                     <span class="hl opt">(</span><span class="hl kwa">get-buffer-process</span></div>
<div class="pre"><a id="l1532" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1532" class="linenr">1532 </a>                      <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">explicit-shell-file-name</span> sh-shell-file<span class="hl opt">))</span></div>
<div class="pre"><a id="l1533" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1533" class="linenr">1533 </a>                        <span class="hl opt">(</span><span class="hl kwa">shell</span><span class="hl opt">)))))))))</span></div>
<div class="pre"><a id="l1534" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1534" class="linenr">1534 </a></div>
<div class="pre"><a id="l1535" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1535" class="linenr">1535 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-show-shell <span class="hl opt">()</span></div>
<div class="pre"><a id="l1536" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1536" class="linenr">1536 </a>  <span class="hl str">&quot;Pop the shell interaction buffer.&quot;</span></div>
<div class="pre"><a id="l1537" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1537" class="linenr">1537 </a>  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1538" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1538" class="linenr">1538 </a>  <span class="hl opt">(</span><span class="hl kwa">pop-to-buffer</span> <span class="hl opt">(</span><span class="hl kwa">process-buffer</span> <span class="hl opt">(</span><span class="hl kwa">sh-shell-process</span> t<span class="hl opt">))))</span></div>
<div class="pre"><a id="l1539" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1539" class="linenr">1539 </a></div>
<div class="pre"><a id="l1540" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1540" class="linenr">1540 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-send-text <span class="hl opt">(</span><span class="hl kwa">text</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1541" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1541" class="linenr">1541 </a>  <span class="hl str">&quot;Send the text to the `sh-shell-process'.&quot;</span></div>
<div class="pre"><a id="l1542" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1542" class="linenr">1542 </a>  <span class="hl opt">(</span><span class="hl kwa">comint-send-string</span> <span class="hl opt">(</span><span class="hl kwa">sh-shell-process</span> t<span class="hl opt">) (</span><span class="hl kwa">concat</span> text <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1543" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1543" class="linenr">1543 </a></div>
<div class="pre"><a id="l1544" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1544" class="linenr">1544 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-cd-here <span class="hl opt">()</span></div>
<div class="pre"><a id="l1545" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1545" class="linenr">1545 </a>  <span class="hl str">&quot;Change directory in the current interaction shell to the current one.&quot;</span></div>
<div class="pre"><a id="l1546" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1546" class="linenr">1546 </a>  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1547" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1547" class="linenr">1547 </a>  <span class="hl opt">(</span><span class="hl kwa">sh-send-text</span> <span class="hl opt">(</span><span class="hl kwa">concat</span> <span class="hl str">&quot;cd &quot;</span> default-directory<span class="hl opt">)))</span></div>
<div class="pre"><a id="l1548" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1548" class="linenr">1548 </a></div>
<div class="pre"><a id="l1549" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1549" class="linenr">1549 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-send-line-or-region-and-step <span class="hl opt">()</span></div>
<div class="pre"><a id="l1550" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1550" class="linenr">1550 </a>  <span class="hl str">&quot;Send the current line to the inferior shell and step to the next line.</span></div>
<div class="pre"><a id="l1551" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1551" class="linenr">1551 </a><span class="hl str">When the region is active, send the region instead.&quot;</span></div>
<div class="pre"><a id="l1552" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1552" class="linenr">1552 </a>  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1553" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1553" class="linenr">1553 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">(</span><span class="hl kwa">from</span> to end<span class="hl opt">)</span></div>
<div class="pre"><a id="l1554" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1554" class="linenr">1554 </a>    <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">use-region-p</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1555" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1555" class="linenr">1555 </a>        <span class="hl opt">(</span><span class="hl kwa">setq</span> from <span class="hl opt">(</span><span class="hl kwa">region-beginning</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1556" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1556" class="linenr">1556 </a>              to <span class="hl opt">(</span><span class="hl kwa">region-end</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1557" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1557" class="linenr">1557 </a>              end to<span class="hl opt">)</span></div>
<div class="pre"><a id="l1558" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1558" class="linenr">1558 </a>      <span class="hl opt">(</span><span class="hl kwa">setq</span> from <span class="hl opt">(</span><span class="hl kwa">line-beginning-position</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1559" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1559" class="linenr">1559 </a>            to <span class="hl opt">(</span><span class="hl kwa">line-end-position</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1560" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1560" class="linenr">1560 </a>            end <span class="hl opt">(</span><span class="hl kwa">1</span><span class="hl opt">+</span> to<span class="hl opt">)))</span></div>
<div class="pre"><a id="l1561" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1561" class="linenr">1561 </a>    <span class="hl opt">(</span><span class="hl kwa">sh-send-text</span> <span class="hl opt">(</span><span class="hl kwa">buffer-substring-no-properties</span> from to<span class="hl opt">))</span></div>
<div class="pre"><a id="l1562" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1562" class="linenr">1562 </a>    <span class="hl opt">(</span><span class="hl kwa">goto-char</span> end<span class="hl opt">)))</span></div>
<div class="pre"><a id="l1563" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1563" class="linenr">1563 </a></div>
<div class="pre"><a id="l1564" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1564" class="linenr">1564 </a><span class="cntrl">\f</span></div>
<div class="pre"><a id="l1565" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1565" class="linenr">1565 </a><span class="hl slc">;; mode-command and utility functions</span></div>
<div class="pre"><a id="l1566" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1566" class="linenr">1566 </a></div>
<div class="pre"><a id="l1567" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1567" class="linenr">1567 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-after-hack-local-variables <span class="hl opt">()</span></div>
<div class="pre"><a id="l1568" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1568" class="linenr">1568 </a>  <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">assq</span> <span class="hl opt">'</span>sh-shell file-local-variables-alist<span class="hl opt">)</span></div>
<div class="pre"><a id="l1569" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1569" class="linenr">1569 </a>    <span class="hl opt">(</span><span class="hl kwa">sh-set-shell</span> <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">symbolp</span> sh-shell<span class="hl opt">)</span></div>
<div class="pre"><a id="l1570" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1570" class="linenr">1570 </a>                      <span class="hl opt">(</span><span class="hl kwa">symbol-name</span> sh-shell<span class="hl opt">)</span></div>
<div class="pre"><a id="l1571" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1571" class="linenr">1571 </a>                    sh-shell<span class="hl opt">))))</span></div>
<div class="pre"><a id="l1572" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1572" class="linenr">1572 </a></div>
<div class="pre"><a id="l1573" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1573" class="linenr">1573 </a><span class="hl slc">;;;###autoload</span></div>
<div class="pre"><a id="l1574" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1574" class="linenr">1574 </a><span class="hl opt">(</span><span class="hl kwa">define-derived-mode</span> sh-mode prog-mode <span class="hl str">&quot;Shell-script&quot;</span></div>
<div class="pre"><a id="l1575" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1575" class="linenr">1575 </a>  <span class="hl str">&quot;Major mode for editing shell scripts.</span></div>
<div class="pre"><a id="l1576" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1576" class="linenr">1576 </a><span class="hl str">This mode works for many shells, since they all have roughly the same syntax,</span></div>
<div class="pre"><a id="l1577" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1577" class="linenr">1577 </a><span class="hl str">as far as commands, arguments, variables, pipes, comments etc. are concerned.</span></div>
<div class="pre"><a id="l1578" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1578" class="linenr">1578 </a><span class="hl str">Unless the file's magic number indicates the shell, your usual shell is</span></div>
<div class="pre"><a id="l1579" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1579" class="linenr">1579 </a><span class="hl str">assumed.  Since filenames rarely give a clue, they are not further analyzed.</span></div>
<div class="pre"><a id="l1580" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1580" class="linenr">1580 </a><span class="hl str"></span></div>
<div class="pre"><a id="l1581" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1581" class="linenr">1581 </a><span class="hl str">This mode adapts to the variations between shells (see `sh-set-shell') by</span></div>
<div class="pre"><a id="l1582" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1582" class="linenr">1582 </a><span class="hl str">means of an inheritance based feature lookup (see `sh-feature').  This</span></div>
<div class="pre"><a id="l1583" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1583" class="linenr">1583 </a><span class="hl str">mechanism applies to all variables (including skeletons) that pertain to</span></div>
<div class="pre"><a id="l1584" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1584" class="linenr">1584 </a><span class="hl str">shell-specific features.  Shell script files can use the `sh-shell' local</span></div>
<div class="pre"><a id="l1585" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1585" class="linenr">1585 </a><span class="hl str">variable to indicate the shell variant to be used for the file.</span></div>
<div class="pre"><a id="l1586" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1586" class="linenr">1586 </a><span class="hl str"></span></div>
<div class="pre"><a id="l1587" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1587" class="linenr">1587 </a><span class="hl str">The default style of this mode is that of Rosenblatt's Korn shell book.</span></div>
<div class="pre"><a id="l1588" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1588" class="linenr">1588 </a><span class="hl str">The syntax of the statements varies with the shell being used.  The</span></div>
<div class="pre"><a id="l1589" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1589" class="linenr">1589 </a><span class="hl str">following commands are available, based on the current shell's syntax:</span></div>
<div class="pre"><a id="l1590" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1590" class="linenr">1590 </a><span class="hl str"></span><span class="hl esc">\\</span><span class="hl str">&lt;sh-mode-map&gt;</span></div>
<div class="pre"><a id="l1591" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1591" class="linenr">1591 </a><span class="hl str"></span><span class="hl esc">\\</span><span class="hl str">[sh-case]      case statement</span></div>
<div class="pre"><a id="l1592" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1592" class="linenr">1592 </a><span class="hl str"></span><span class="hl esc">\\</span><span class="hl str">[sh-for]       for loop</span></div>
<div class="pre"><a id="l1593" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1593" class="linenr">1593 </a><span class="hl str"></span><span class="hl esc">\\</span><span class="hl str">[sh-function]  function definition</span></div>
<div class="pre"><a id="l1594" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1594" class="linenr">1594 </a><span class="hl str"></span><span class="hl esc">\\</span><span class="hl str">[sh-if]        if statement</span></div>
<div class="pre"><a id="l1595" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1595" class="linenr">1595 </a><span class="hl str"></span><span class="hl esc">\\</span><span class="hl str">[sh-indexed-loop]      indexed loop from 1 to n</span></div>
<div class="pre"><a id="l1596" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1596" class="linenr">1596 </a><span class="hl str"></span><span class="hl esc">\\</span><span class="hl str">[sh-while-getopts]     while getopts loop</span></div>
<div class="pre"><a id="l1597" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1597" class="linenr">1597 </a><span class="hl str"></span><span class="hl esc">\\</span><span class="hl str">[sh-repeat]    repeat loop</span></div>
<div class="pre"><a id="l1598" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1598" class="linenr">1598 </a><span class="hl str"></span><span class="hl esc">\\</span><span class="hl str">[sh-select]    select loop</span></div>
<div class="pre"><a id="l1599" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1599" class="linenr">1599 </a><span class="hl str"></span><span class="hl esc">\\</span><span class="hl str">[sh-until]     until loop</span></div>
<div class="pre"><a id="l1600" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1600" class="linenr">1600 </a><span class="hl str"></span><span class="hl esc">\\</span><span class="hl str">[sh-while]     while loop</span></div>
<div class="pre"><a id="l1601" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1601" class="linenr">1601 </a><span class="hl str"></span></div>
<div class="pre"><a id="l1602" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1602" class="linenr">1602 </a><span class="hl str">For sh and rc shells indentation commands are:</span></div>
<div class="pre"><a id="l1603" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1603" class="linenr">1603 </a><span class="hl str"></span><span class="hl esc">\\</span><span class="hl str">[sh-show-indent]      Show the variable controlling this line's indentation.</span></div>
<div class="pre"><a id="l1604" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1604" class="linenr">1604 </a><span class="hl str"></span><span class="hl esc">\\</span><span class="hl str">[sh-set-indent]       Set then variable controlling this line's indentation.</span></div>
<div class="pre"><a id="l1605" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1605" class="linenr">1605 </a><span class="hl str"></span><span class="hl esc">\\</span><span class="hl str">[sh-learn-line-indent]        Change the indentation variable so this line</span></div>
<div class="pre"><a id="l1606" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1606" class="linenr">1606 </a><span class="hl str">would indent to the way it currently is.</span></div>
<div class="pre"><a id="l1607" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1607" class="linenr">1607 </a><span class="hl str"></span><span class="hl esc">\\</span><span class="hl str">[sh-learn-buffer-indent]  Set the indentation variables so the</span></div>
<div class="pre"><a id="l1608" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1608" class="linenr">1608 </a><span class="hl str">buffer indents as it currently is indented.</span></div>
<div class="pre"><a id="l1609" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1609" class="linenr">1609 </a><span class="hl str"></span></div>
<div class="pre"><a id="l1610" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1610" class="linenr">1610 </a><span class="hl str"></span></div>
<div class="pre"><a id="l1611" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1611" class="linenr">1611 </a><span class="hl str"></span><span class="hl esc">\\</span><span class="hl str">[backward-delete-char-untabify]        Delete backward one position, even if it was a tab.</span></div>
<div class="pre"><a id="l1612" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1612" class="linenr">1612 </a><span class="hl str"></span><span class="hl esc">\\</span><span class="hl str">[sh-end-of-command]    Go to end of successive commands.</span></div>
<div class="pre"><a id="l1613" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1613" class="linenr">1613 </a><span class="hl str"></span><span class="hl esc">\\</span><span class="hl str">[sh-beginning-of-command]      Go to beginning of successive commands.</span></div>
<div class="pre"><a id="l1614" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1614" class="linenr">1614 </a><span class="hl str"></span><span class="hl esc">\\</span><span class="hl str">[sh-set-shell]         Set this buffer's shell, and maybe its magic number.</span></div>
<div class="pre"><a id="l1615" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1615" class="linenr">1615 </a><span class="hl str"></span><span class="hl esc">\\</span><span class="hl str">[sh-execute-region]    Have optional header and region be executed in a subshell.</span></div>
<div class="pre"><a id="l1616" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1616" class="linenr">1616 </a><span class="hl str"></span></div>
<div class="pre"><a id="l1617" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1617" class="linenr">1617 </a><span class="hl str">`sh-electric-here-document-mode' controls whether insertion of two</span></div>
<div class="pre"><a id="l1618" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1618" class="linenr">1618 </a><span class="hl str">unquoted &lt; insert a here document.  You can control this behavior by</span></div>
<div class="pre"><a id="l1619" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1619" class="linenr">1619 </a><span class="hl str">modifying `sh-mode-hook'.</span></div>
<div class="pre"><a id="l1620" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1620" class="linenr">1620 </a><span class="hl str"></span></div>
<div class="pre"><a id="l1621" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1621" class="linenr">1621 </a><span class="hl str">If you generally program a shell different from your login shell you can</span></div>
<div class="pre"><a id="l1622" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1622" class="linenr">1622 </a><span class="hl str">set `sh-shell-file' accordingly.  If your shell's file name doesn't correctly</span></div>
<div class="pre"><a id="l1623" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1623" class="linenr">1623 </a><span class="hl str">indicate what shell it is use `sh-alias-alist' to translate.</span></div>
<div class="pre"><a id="l1624" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1624" class="linenr">1624 </a><span class="hl str"></span></div>
<div class="pre"><a id="l1625" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1625" class="linenr">1625 </a><span class="hl str">If your shell gives error messages with line numbers, you can use</span> <span class="hl esc">\\</span><span class="hl str">[executable-interpret]</span></div>
<div class="pre"><a id="l1626" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1626" class="linenr">1626 </a><span class="hl str">with your script for an edit-interpret-debug cycle.&quot;</span></div>
<div class="pre"><a id="l1627" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1627" class="linenr">1627 </a>  <span class="hl opt">(</span><span class="hl kwa">make-local-variable</span> <span class="hl opt">'</span>sh-shell-file<span class="hl opt">)</span></div>
<div class="pre"><a id="l1628" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1628" class="linenr">1628 </a>  <span class="hl opt">(</span><span class="hl kwa">make-local-variable</span> <span class="hl opt">'</span>sh-shell<span class="hl opt">)</span></div>
<div class="pre"><a id="l1629" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1629" class="linenr">1629 </a></div>
<div class="pre"><a id="l1630" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1630" class="linenr">1630 </a>  <span class="hl opt">(</span><span class="hl kwa">setq-local</span> skeleton-pair-default-alist</div>
<div class="pre"><a id="l1631" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1631" class="linenr">1631 </a>              sh-skeleton-pair-default-alist<span class="hl opt">)</span></div>
<div class="pre"><a id="l1632" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1632" class="linenr">1632 </a>  <span class="hl opt">(</span><span class="hl kwa">setq-local</span> skeleton-end-hook</div>
<div class="pre"><a id="l1633" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1633" class="linenr">1633 </a>              <span class="hl opt">(</span><span class="hl kwa">lambda</span> <span class="hl opt">() (</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">eolp</span><span class="hl opt">) (</span><span class="hl kwa">newline</span><span class="hl opt">) (</span><span class="hl kwa">indent-relative</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l1634" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1634" class="linenr">1634 </a></div>
<div class="pre"><a id="l1635" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1635" class="linenr">1635 </a>  <span class="hl opt">(</span><span class="hl kwa">setq-local</span> paragraph-start <span class="hl opt">(</span><span class="hl kwa">concat</span> page-delimiter <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">|$&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1636" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1636" class="linenr">1636 </a>  <span class="hl opt">(</span><span class="hl kwa">setq-local</span> paragraph-separate <span class="hl opt">(</span><span class="hl kwa">concat</span> paragraph-start <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">|#!/&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1637" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1637" class="linenr">1637 </a>  <span class="hl opt">(</span><span class="hl kwa">setq-local</span> comment-start <span class="hl str">&quot;# &quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1638" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1638" class="linenr">1638 </a>  <span class="hl opt">(</span><span class="hl kwa">setq-local</span> comment-start-skip <span class="hl str">&quot;#+[</span><span class="hl esc">\t</span> <span class="hl str">]*&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1639" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1639" class="linenr">1639 </a>  <span class="hl opt">(</span><span class="hl kwa">setq-local</span> local-abbrev-table sh-mode-abbrev-table<span class="hl opt">)</span></div>
<div class="pre"><a id="l1640" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1640" class="linenr">1640 </a>  <span class="hl opt">(</span><span class="hl kwa">setq-local</span> comint-dynamic-complete-functions</div>
<div class="pre"><a id="l1641" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1641" class="linenr">1641 </a>              sh-dynamic-complete-functions<span class="hl opt">)</span></div>
<div class="pre"><a id="l1642" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1642" class="linenr">1642 </a>  <span class="hl opt">(</span><span class="hl kwa">add-hook</span> <span class="hl opt">'</span>completion-at-point-functions <span class="hl opt">'</span>comint-completion-at-point nil t<span class="hl opt">)</span></div>
<div class="pre"><a id="l1643" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1643" class="linenr">1643 </a>  <span class="hl slc">;; we can't look if previous line ended with `\'</span></div>
<div class="pre"><a id="l1644" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1644" class="linenr">1644 </a>  <span class="hl opt">(</span><span class="hl kwa">setq-local</span> comint-prompt-regexp <span class="hl str">&quot;^[</span> <span class="hl esc">\t</span><span class="hl str">]*&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1645" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1645" class="linenr">1645 </a>  <span class="hl opt">(</span><span class="hl kwa">setq-local</span> imenu-case-fold-search nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l1646" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1646" class="linenr">1646 </a>  <span class="hl opt">(</span><span class="hl kwa">setq</span> font-lock-defaults</div>
<div class="pre"><a id="l1647" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1647" class="linenr">1647 </a>        <span class="hl opt">`((</span><span class="hl kwa">sh-font-lock-keywords</span></div>
<div class="pre"><a id="l1648" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1648" class="linenr">1648 </a>           sh-font-lock-keywords-1 sh-font-lock-keywords-2<span class="hl opt">)</span></div>
<div class="pre"><a id="l1649" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1649" class="linenr">1649 </a>          nil nil</div>
<div class="pre"><a id="l1650" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1650" class="linenr">1650 </a>          <span class="hl opt">((</span>?<span class="hl opt">/</span> . <span class="hl str">&quot;w&quot;</span><span class="hl opt">) (</span>?~ . <span class="hl str">&quot;w&quot;</span><span class="hl opt">) (</span>?. . <span class="hl str">&quot;w&quot;</span><span class="hl opt">) (</span>?- . <span class="hl str">&quot;w&quot;</span><span class="hl opt">) (</span>?_ . <span class="hl str">&quot;w&quot;</span><span class="hl opt">))</span> nil</div>
<div class="pre"><a id="l1651" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1651" class="linenr">1651 </a>          <span class="hl opt">(</span><span class="hl kwa">font-lock-syntactic-face-function</span></div>
<div class="pre"><a id="l1652" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1652" class="linenr">1652 </a>           . sh-font-lock-syntactic-face-function<span class="hl opt">)))</span></div>
<div class="pre"><a id="l1653" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1653" class="linenr">1653 </a>  <span class="hl opt">(</span><span class="hl kwa">setq-local</span> syntax-propertize-function <span class="hl opt">#'</span>sh-syntax-propertize-function<span class="hl opt">)</span></div>
<div class="pre"><a id="l1654" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1654" class="linenr">1654 </a>  <span class="hl opt">(</span><span class="hl kwa">add-hook</span> <span class="hl opt">'</span>syntax-propertize-extend-region-functions</div>
<div class="pre"><a id="l1655" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1655" class="linenr">1655 </a>            <span class="hl opt">#'</span>syntax-propertize-multiline <span class="hl opt">'</span>append <span class="hl opt">'</span>local<span class="hl opt">)</span></div>
<div class="pre"><a id="l1656" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1656" class="linenr">1656 </a>  <span class="hl opt">(</span><span class="hl kwa">setq-local</span> skeleton-pair-alist <span class="hl opt">'((</span>?<span class="hl opt">`</span> _ ?<span class="hl opt">`)))</span></div>
<div class="pre"><a id="l1657" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1657" class="linenr">1657 </a>  <span class="hl opt">(</span><span class="hl kwa">setq-local</span> skeleton-pair-filter-function <span class="hl opt">'</span>sh-quoted-p<span class="hl opt">)</span></div>
<div class="pre"><a id="l1658" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1658" class="linenr">1658 </a>  <span class="hl opt">(</span><span class="hl kwa">setq-local</span> skeleton-further-elements</div>
<div class="pre"><a id="l1659" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1659" class="linenr">1659 </a>              <span class="hl opt">'((&lt; '(</span><span class="hl kwa">-</span> <span class="hl opt">(</span><span class="hl kwa">min</span> sh-indentation <span class="hl opt">(</span><span class="hl kwa">current-column</span><span class="hl opt">))))))</span></div>
<div class="pre"><a id="l1660" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1660" class="linenr">1660 </a>  <span class="hl opt">(</span><span class="hl kwa">setq-local</span> skeleton-filter-function <span class="hl opt">'</span>sh-feature<span class="hl opt">)</span></div>
<div class="pre"><a id="l1661" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1661" class="linenr">1661 </a>  <span class="hl opt">(</span><span class="hl kwa">setq-local</span> skeleton-newline-indent-rigidly t<span class="hl opt">)</span></div>
<div class="pre"><a id="l1662" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1662" class="linenr">1662 </a>  <span class="hl opt">(</span><span class="hl kwa">setq-local</span> defun-prompt-regexp</div>
<div class="pre"><a id="l1663" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1663" class="linenr">1663 </a>              <span class="hl opt">(</span><span class="hl kwa">concat</span></div>
<div class="pre"><a id="l1664" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1664" class="linenr">1664 </a>               <span class="hl str">&quot;^</span><span class="hl esc">\\</span><span class="hl str">(&quot;</span></div>
<div class="pre"><a id="l1665" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1665" class="linenr">1665 </a>               <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">(function[</span> <span class="hl esc">\t</span><span class="hl str">]</span><span class="hl esc">\\</span><span class="hl str">)?[</span> <span class="hl esc">\t</span><span class="hl str">]*[[:alnum:]]+[</span> <span class="hl esc">\t</span><span class="hl str">]*([</span> <span class="hl esc">\t</span><span class="hl str">]*)&quot;</span></div>
<div class="pre"><a id="l1666" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1666" class="linenr">1666 </a>               <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">|&quot;</span></div>
<div class="pre"><a id="l1667" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1667" class="linenr">1667 </a>               <span class="hl str">&quot;function[</span> <span class="hl esc">\t</span><span class="hl str">]+[[:alnum:]]+[</span> <span class="hl esc">\t</span><span class="hl str">]*</span><span class="hl esc">\\</span><span class="hl str">(([</span> <span class="hl esc">\t</span><span class="hl str">]*)</span><span class="hl esc">\\</span><span class="hl str">)?&quot;</span></div>
<div class="pre"><a id="l1668" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1668" class="linenr">1668 </a>               <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">)[</span> <span class="hl esc">\t</span><span class="hl str">]*&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1669" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1669" class="linenr">1669 </a>  <span class="hl opt">(</span><span class="hl kwa">setq-local</span> add-log-current-defun-function <span class="hl opt">#'</span>sh-current-defun-name<span class="hl opt">)</span></div>
<div class="pre"><a id="l1670" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1670" class="linenr">1670 </a>  <span class="hl opt">(</span><span class="hl kwa">add-hook</span> <span class="hl opt">'</span>completion-at-point-functions</div>
<div class="pre"><a id="l1671" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1671" class="linenr">1671 </a>            <span class="hl opt">#'</span>sh-completion-at-point-function nil t<span class="hl opt">)</span></div>
<div class="pre"><a id="l1672" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1672" class="linenr">1672 </a>  <span class="hl slc">;; Parse or insert magic number for exec, and set all variables depending</span></div>
<div class="pre"><a id="l1673" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1673" class="linenr">1673 </a>  <span class="hl slc">;; on the shell thus determined.</span></div>
<div class="pre"><a id="l1674" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1674" class="linenr">1674 </a>  <span class="hl opt">(</span><span class="hl kwa">sh-set-shell</span></div>
<div class="pre"><a id="l1675" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1675" class="linenr">1675 </a>   <span class="hl opt">(</span><span class="hl kwa">cond</span> <span class="hl opt">((</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l1676" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1676" class="linenr">1676 </a>            <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1677" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1677" class="linenr">1677 </a>            <span class="hl opt">(</span><span class="hl kwa">looking-at</span> <span class="hl str">&quot;#![</span> <span class="hl esc">\t</span><span class="hl str">]?</span><span class="hl esc">\\</span><span class="hl str">([^</span> <span class="hl esc">\t\n</span><span class="hl str">]*/bin/env[</span> <span class="hl esc">\t</span><span class="hl str">]</span><span class="hl esc">\\</span><span class="hl str">)?</span><span class="hl esc">\\</span><span class="hl str">([^</span> <span class="hl esc">\t\n</span><span class="hl str">]+</span><span class="hl esc">\\</span><span class="hl str">)&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1678" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1678" class="linenr">1678 </a>          <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">2</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1679" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1679" class="linenr">1679 </a>         <span class="hl opt">((</span><span class="hl kwa">not</span> buffer-file-name<span class="hl opt">)</span> sh-shell-file<span class="hl opt">)</span></div>
<div class="pre"><a id="l1680" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1680" class="linenr">1680 </a>         <span class="hl slc">;; Checks that use `buffer-file-name' follow.</span></div>
<div class="pre"><a id="l1681" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1681" class="linenr">1681 </a>         <span class="hl opt">((</span><span class="hl kwa">string-match</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">.m?spec</span><span class="hl esc">\\</span><span class="hl str">'&quot;</span> buffer-file-name<span class="hl opt">)</span> <span class="hl str">&quot;rpm&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1682" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1682" class="linenr">1682 </a>         <span class="hl opt">((</span><span class="hl kwa">string-match</span> <span class="hl str">&quot;[.]sh</span><span class="hl esc">\\</span><span class="hl str">&gt;&quot;</span>     buffer-file-name<span class="hl opt">)</span> <span class="hl str">&quot;sh&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1683" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1683" class="linenr">1683 </a>         <span class="hl opt">((</span><span class="hl kwa">string-match</span> <span class="hl str">&quot;[.]bash</span><span class="hl esc">\\</span><span class="hl str">&gt;&quot;</span>   buffer-file-name<span class="hl opt">)</span> <span class="hl str">&quot;bash&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1684" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1684" class="linenr">1684 </a>         <span class="hl opt">((</span><span class="hl kwa">string-match</span> <span class="hl str">&quot;[.]ksh</span><span class="hl esc">\\</span><span class="hl str">&gt;&quot;</span>    buffer-file-name<span class="hl opt">)</span> <span class="hl str">&quot;ksh&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1685" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1685" class="linenr">1685 </a>         <span class="hl opt">((</span><span class="hl kwa">string-match</span> <span class="hl str">&quot;[.]t?csh</span><span class="hl esc">\\</span><span class="hl str">(rc</span><span class="hl esc">\\</span><span class="hl str">)?</span><span class="hl esc">\\</span><span class="hl str">&gt;&quot;</span> buffer-file-name<span class="hl opt">)</span> <span class="hl str">&quot;csh&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1686" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1686" class="linenr">1686 </a>         <span class="hl opt">((</span><span class="hl kwa">equal</span> <span class="hl opt">(</span><span class="hl kwa">file-name-nondirectory</span> buffer-file-name<span class="hl opt">)</span> <span class="hl str">&quot;.profile&quot;</span><span class="hl opt">)</span> <span class="hl str">&quot;sh&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1687" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1687" class="linenr">1687 </a>         <span class="hl opt">(</span><span class="hl kwa">t</span> sh-shell-file<span class="hl opt">))</span></div>
<div class="pre"><a id="l1688" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1688" class="linenr">1688 </a>   nil nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l1689" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1689" class="linenr">1689 </a>  <span class="hl opt">(</span><span class="hl kwa">add-hook</span> <span class="hl opt">'</span>hack-local-variables-hook</div>
<div class="pre"><a id="l1690" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1690" class="linenr">1690 </a>    <span class="hl opt">#'</span>sh-after-hack-local-variables nil t<span class="hl opt">))</span></div>
<div class="pre"><a id="l1691" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1691" class="linenr">1691 </a></div>
<div class="pre"><a id="l1692" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1692" class="linenr">1692 </a><span class="hl slc">;;;###autoload</span></div>
<div class="pre"><a id="l1693" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1693" class="linenr">1693 </a><span class="hl opt">(</span><span class="hl kwa">defalias</span> <span class="hl opt">'</span>shell-script-mode <span class="hl opt">'</span>sh-mode<span class="hl opt">)</span></div>
<div class="pre"><a id="l1694" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1694" class="linenr">1694 </a></div>
<div class="pre"><a id="l1695" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1695" class="linenr">1695 </a></div>
<div class="pre"><a id="l1696" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1696" class="linenr">1696 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-font-lock-keywords <span class="hl opt">(&amp;</span>optional keywords<span class="hl opt">)</span></div>
<div class="pre"><a id="l1697" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1697" class="linenr">1697 </a>  <span class="hl str">&quot;Function to get simple fontification based on `sh-font-lock-keywords'.</span></div>
<div class="pre"><a id="l1698" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1698" class="linenr">1698 </a><span class="hl str">This adds rules for comments and assignments.&quot;</span></div>
<div class="pre"><a id="l1699" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1699" class="linenr">1699 </a>  <span class="hl opt">(</span><span class="hl kwa">sh-feature</span> sh-font-lock-keywords-var</div>
<div class="pre"><a id="l1700" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1700" class="linenr">1700 </a>              <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">stringp</span> <span class="hl opt">(</span><span class="hl kwa">sh-feature</span> sh-assignment-regexp<span class="hl opt">))</span></div>
<div class="pre"><a id="l1701" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1701" class="linenr">1701 </a>                <span class="hl opt">(</span><span class="hl kwa">lambda</span> <span class="hl opt">(</span><span class="hl kwa">list</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1702" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1702" class="linenr">1702 </a>                  <span class="hl opt">`((,(</span><span class="hl kwa">sh-feature</span> sh-assignment-regexp<span class="hl opt">)</span></div>
<div class="pre"><a id="l1703" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1703" class="linenr">1703 </a>                     <span class="hl num">1</span> font-lock-variable-name-face<span class="hl opt">)</span></div>
<div class="pre"><a id="l1704" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1704" class="linenr">1704 </a>                    <span class="hl opt">,&#64;</span>keywords</div>
<div class="pre"><a id="l1705" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1705" class="linenr">1705 </a>                    <span class="hl opt">,&#64;</span>list</div>
<div class="pre"><a id="l1706" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1706" class="linenr">1706 </a>                    <span class="hl opt">,&#64;</span>executable-font-lock-keywords<span class="hl opt">)))))</span></div>
<div class="pre"><a id="l1707" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1707" class="linenr">1707 </a></div>
<div class="pre"><a id="l1708" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1708" class="linenr">1708 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-font-lock-keywords-1 <span class="hl opt">(&amp;</span>optional builtins<span class="hl opt">)</span></div>
<div class="pre"><a id="l1709" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1709" class="linenr">1709 </a>  <span class="hl str">&quot;Function to get better fontification including keywords.&quot;</span></div>
<div class="pre"><a id="l1710" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1710" class="linenr">1710 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">keywords</span> <span class="hl opt">(</span><span class="hl kwa">concat</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">([;(){}`|&amp;]</span><span class="hl esc">\\</span><span class="hl str">|^</span><span class="hl esc">\\</span><span class="hl str">)[</span> <span class="hl esc">\t</span><span class="hl str">]*</span><span class="hl esc">\\</span><span class="hl str">(</span><span class="hl esc">\\</span><span class="hl str">(&quot;</span></div>
<div class="pre"><a id="l1711" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1711" class="linenr">1711 </a>                          <span class="hl opt">(</span><span class="hl kwa">regexp-opt</span> <span class="hl opt">(</span><span class="hl kwa">sh-feature</span> sh-leading-keywords<span class="hl opt">)</span> t<span class="hl opt">)</span></div>
<div class="pre"><a id="l1712" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1712" class="linenr">1712 </a>                          <span class="hl str">&quot;[</span> <span class="hl esc">\t</span><span class="hl str">]+</span><span class="hl esc">\\</span><span class="hl str">)?&quot;</span></div>
<div class="pre"><a id="l1713" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1713" class="linenr">1713 </a>                          <span class="hl opt">(</span><span class="hl kwa">regexp-opt</span> <span class="hl opt">(</span><span class="hl kwa">append</span> <span class="hl opt">(</span><span class="hl kwa">sh-feature</span> sh-leading-keywords<span class="hl opt">)</span></div>
<div class="pre"><a id="l1714" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1714" class="linenr">1714 </a>                                              <span class="hl opt">(</span><span class="hl kwa">sh-feature</span> sh-other-keywords<span class="hl opt">))</span></div>
<div class="pre"><a id="l1715" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1715" class="linenr">1715 </a>                                      t<span class="hl opt">))))</span></div>
<div class="pre"><a id="l1716" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1716" class="linenr">1716 </a>    <span class="hl opt">(</span><span class="hl kwa">sh-font-lock-keywords</span></div>
<div class="pre"><a id="l1717" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1717" class="linenr">1717 </a>     <span class="hl opt">`(,&#64;(</span><span class="hl kwa">if</span> builtins</div>
<div class="pre"><a id="l1718" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1718" class="linenr">1718 </a>             <span class="hl opt">`((,(</span><span class="hl kwa">concat</span> keywords <span class="hl str">&quot;[</span> <span class="hl esc">\t</span><span class="hl str">]+</span><span class="hl esc">\\</span><span class="hl str">)?&quot;</span></div>
<div class="pre"><a id="l1719" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1719" class="linenr">1719 </a>                         <span class="hl opt">(</span><span class="hl kwa">regexp-opt</span> <span class="hl opt">(</span><span class="hl kwa">sh-feature</span> sh-builtins<span class="hl opt">)</span> t<span class="hl opt">)</span></div>
<div class="pre"><a id="l1720" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1720" class="linenr">1720 </a>                         <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">&gt;&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1721" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1721" class="linenr">1721 </a>                <span class="hl opt">(</span><span class="hl kwa">2</span> font-lock-keyword-face nil t<span class="hl opt">)</span></div>
<div class="pre"><a id="l1722" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1722" class="linenr">1722 </a>                <span class="hl opt">(</span><span class="hl kwa">6</span> font-lock-builtin-face<span class="hl opt">))</span></div>
<div class="pre"><a id="l1723" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1723" class="linenr">1723 </a>               <span class="hl opt">,&#64;(</span><span class="hl kwa">sh-feature</span> sh-font-lock-keywords-var-2<span class="hl opt">)))</span></div>
<div class="pre"><a id="l1724" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1724" class="linenr">1724 </a>         <span class="hl opt">(,(</span><span class="hl kwa">concat</span> keywords <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">)</span><span class="hl esc">\\</span><span class="hl str">&gt;&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1725" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1725" class="linenr">1725 </a>          <span class="hl num">2</span> font-lock-keyword-face<span class="hl opt">)</span></div>
<div class="pre"><a id="l1726" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1726" class="linenr">1726 </a>         <span class="hl opt">,&#64;(</span><span class="hl kwa">sh-feature</span> sh-font-lock-keywords-var-1<span class="hl opt">)))))</span></div>
<div class="pre"><a id="l1727" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1727" class="linenr">1727 </a></div>
<div class="pre"><a id="l1728" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1728" class="linenr">1728 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-font-lock-keywords-2 <span class="hl opt">()</span></div>
<div class="pre"><a id="l1729" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1729" class="linenr">1729 </a>  <span class="hl str">&quot;Function to get better fontification including keywords and builtins.&quot;</span></div>
<div class="pre"><a id="l1730" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1730" class="linenr">1730 </a>  <span class="hl opt">(</span><span class="hl kwa">sh-font-lock-keywords-1</span> t<span class="hl opt">))</span></div>
<div class="pre"><a id="l1731" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1731" class="linenr">1731 </a></div>
<div class="pre"><a id="l1732" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1732" class="linenr">1732 </a><span class="hl slc">;;; Completion</span></div>
<div class="pre"><a id="l1733" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1733" class="linenr">1733 </a></div>
<div class="pre"><a id="l1734" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1734" class="linenr">1734 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh--vars-before-point <span class="hl opt">()</span></div>
<div class="pre"><a id="l1735" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1735" class="linenr">1735 </a>  <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l1736" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1736" class="linenr">1736 </a>    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">vars</span> <span class="hl opt">()))</span></div>
<div class="pre"><a id="l1737" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1737" class="linenr">1737 </a>      <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">re-search-backward</span> <span class="hl str">&quot;^[</span> <span class="hl esc">\t</span><span class="hl str">]*</span><span class="hl esc">\\</span><span class="hl str">([[:alnum:]_]+</span><span class="hl esc">\\</span><span class="hl str">)=&quot;</span> nil t<span class="hl opt">)</span></div>
<div class="pre"><a id="l1738" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1738" class="linenr">1738 </a>        <span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">1</span><span class="hl opt">)</span> vars<span class="hl opt">))</span></div>
<div class="pre"><a id="l1739" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1739" class="linenr">1739 </a>      vars<span class="hl opt">)))</span></div>
<div class="pre"><a id="l1740" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1740" class="linenr">1740 </a></div>
<div class="pre"><a id="l1741" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1741" class="linenr">1741 </a><span class="hl slc">;; (defun sh--var-completion-table (string pred action)</span></div>
<div class="pre"><a id="l1742" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1742" class="linenr">1742 </a><span class="hl slc">;;   (complete-with-action action (sh--vars-before-point) string pred))</span></div>
<div class="pre"><a id="l1743" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1743" class="linenr">1743 </a></div>
<div class="pre"><a id="l1744" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1744" class="linenr">1744 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh--cmd-completion-table <span class="hl opt">(</span><span class="hl kwa">string</span> pred action<span class="hl opt">)</span></div>
<div class="pre"><a id="l1745" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1745" class="linenr">1745 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">cmds</span></div>
<div class="pre"><a id="l1746" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1746" class="linenr">1746 </a>         <span class="hl opt">(</span><span class="hl kwa">append</span> <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">fboundp</span> <span class="hl opt">'</span>imenu--make-index-alist<span class="hl opt">)</span></div>
<div class="pre"><a id="l1747" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1747" class="linenr">1747 </a>                   <span class="hl opt">(</span><span class="hl kwa">mapcar</span> <span class="hl opt">#'</span>car <span class="hl opt">(</span><span class="hl kwa">imenu--make-index-alist</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1748" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1748" class="linenr">1748 </a>                 <span class="hl opt">(</span><span class="hl kwa">mapcar</span> <span class="hl opt">(</span><span class="hl kwa">lambda</span> <span class="hl opt">(</span><span class="hl kwa">v</span><span class="hl opt">) (</span><span class="hl kwa">concat</span> v <span class="hl str">&quot;=&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1749" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1749" class="linenr">1749 </a>                         <span class="hl opt">(</span><span class="hl kwa">sh--vars-before-point</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1750" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1750" class="linenr">1750 </a>                 <span class="hl opt">(</span><span class="hl kwa">locate-file-completion-table</span></div>
<div class="pre"><a id="l1751" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1751" class="linenr">1751 </a>                  exec-path exec-suffixes string pred t<span class="hl opt">)</span></div>
<div class="pre"><a id="l1752" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1752" class="linenr">1752 </a>                 <span class="hl opt">'(</span><span class="hl str">&quot;if&quot;</span> <span class="hl str">&quot;while&quot;</span> <span class="hl str">&quot;until&quot;</span> <span class="hl str">&quot;for&quot;</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l1753" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1753" class="linenr">1753 </a>    <span class="hl opt">(</span><span class="hl kwa">complete-with-action</span> action cmds string pred<span class="hl opt">)))</span></div>
<div class="pre"><a id="l1754" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1754" class="linenr">1754 </a></div>
<div class="pre"><a id="l1755" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1755" class="linenr">1755 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-completion-at-point-function <span class="hl opt">()</span></div>
<div class="pre"><a id="l1756" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1756" class="linenr">1756 </a>  <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l1757" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1757" class="linenr">1757 </a>    <span class="hl opt">(</span><span class="hl kwa">skip-chars-forward</span> <span class="hl str">&quot;[:alnum:]_&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1758" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1758" class="linenr">1758 </a>    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">end</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1759" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1759" class="linenr">1759 </a>          <span class="hl opt">(</span><span class="hl kwa">_</span> <span class="hl opt">(</span><span class="hl kwa">skip-chars-backward</span> <span class="hl str">&quot;[:alnum:]_&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1760" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1760" class="linenr">1760 </a>          <span class="hl opt">(</span><span class="hl kwa">start</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1761" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1761" class="linenr">1761 </a>      <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l1762" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1762" class="linenr">1762 </a>       <span class="hl opt">((</span><span class="hl kwa">eq</span> <span class="hl opt">(</span><span class="hl kwa">char-before</span><span class="hl opt">)</span> ?$<span class="hl opt">)</span></div>
<div class="pre"><a id="l1763" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1763" class="linenr">1763 </a>        <span class="hl opt">(</span><span class="hl kwa">list</span> start end <span class="hl opt">(</span><span class="hl kwa">sh--vars-before-point</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1764" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1764" class="linenr">1764 </a>       <span class="hl opt">((</span><span class="hl kwa">sh-smie--keyword-p</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1765" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1765" class="linenr">1765 </a>        <span class="hl opt">(</span><span class="hl kwa">list</span> start end <span class="hl opt">#'</span>sh--cmd-completion-table<span class="hl opt">))))))</span></div>
<div class="pre"><a id="l1766" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1766" class="linenr">1766 </a></div>
<div class="pre"><a id="l1767" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1767" class="linenr">1767 </a><span class="hl slc">;;; Indentation and navigation with SMIE.</span></div>
<div class="pre"><a id="l1768" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1768" class="linenr">1768 </a></div>
<div class="pre"><a id="l1769" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1769" class="linenr">1769 </a><span class="hl opt">(</span><span class="hl kwa">require</span> <span class="hl opt">'</span>smie<span class="hl opt">)</span></div>
<div class="pre"><a id="l1770" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1770" class="linenr">1770 </a></div>
<div class="pre"><a id="l1771" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1771" class="linenr">1771 </a><span class="hl slc">;; The SMIE code should generally be preferred, but it currently does not obey</span></div>
<div class="pre"><a id="l1772" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1772" class="linenr">1772 </a><span class="hl slc">;; the various indentation custom-vars, and it misses some important features</span></div>
<div class="pre"><a id="l1773" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1773" class="linenr">1773 </a><span class="hl slc">;; of the old code, mostly: sh-learn-line/buffer-indent, sh-show-indent,</span></div>
<div class="pre"><a id="l1774" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1774" class="linenr">1774 </a><span class="hl slc">;; sh-name/save/load-style.</span></div>
<div class="pre"><a id="l1775" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1775" class="linenr">1775 </a><span class="hl opt">(</span><span class="hl kwa">defvar</span> sh-use-smie t</div>
<div class="pre"><a id="l1776" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1776" class="linenr">1776 </a>  <span class="hl str">&quot;Whether to use the SMIE code for navigation and indentation.&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1777" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1777" class="linenr">1777 </a></div>
<div class="pre"><a id="l1778" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1778" class="linenr">1778 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-smie--keyword-p <span class="hl opt">()</span></div>
<div class="pre"><a id="l1779" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1779" class="linenr">1779 </a>  <span class="hl str">&quot;Non-nil if we're at a keyword position.</span></div>
<div class="pre"><a id="l1780" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1780" class="linenr">1780 </a><span class="hl str">A keyword position is one where if we're looking at something that looks</span></div>
<div class="pre"><a id="l1781" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1781" class="linenr">1781 </a><span class="hl str">like a keyword, then it is a keyword.&quot;</span></div>
<div class="pre"><a id="l1782" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1782" class="linenr">1782 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">prev</span> <span class="hl opt">(</span><span class="hl kwa">funcall</span> smie-backward-token-function<span class="hl opt">)))</span></div>
<div class="pre"><a id="l1783" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1783" class="linenr">1783 </a>    <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">zerop</span> <span class="hl opt">(</span><span class="hl kwa">length</span> prev<span class="hl opt">))</span></div>
<div class="pre"><a id="l1784" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1784" class="linenr">1784 </a>        <span class="hl opt">(</span><span class="hl kwa">looking-back</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">`</span><span class="hl esc">\\</span><span class="hl str">|</span><span class="hl esc">\\</span><span class="hl str">s(&quot;</span> <span class="hl opt">(</span><span class="hl kwa">1-</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1785" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1785" class="linenr">1785 </a>      <span class="hl opt">(</span><span class="hl kwa">assoc</span> prev smie-grammar<span class="hl opt">))))</span></div>
<div class="pre"><a id="l1786" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1786" class="linenr">1786 </a></div>
<div class="pre"><a id="l1787" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1787" class="linenr">1787 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-smie--newline-semi-p <span class="hl opt">(&amp;</span>optional tok<span class="hl opt">)</span></div>
<div class="pre"><a id="l1788" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1788" class="linenr">1788 </a>  <span class="hl str">&quot;Return non-nil if a newline should be treated as a semi-colon.</span></div>
<div class="pre"><a id="l1789" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1789" class="linenr">1789 </a><span class="hl str">Here we assume that a newline should be treated as a semi-colon unless it</span></div>
<div class="pre"><a id="l1790" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1790" class="linenr">1790 </a><span class="hl str">comes right after a special keyword.</span></div>
<div class="pre"><a id="l1791" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1791" class="linenr">1791 </a><span class="hl str">This function does not pay attention to line-continuations.</span></div>
<div class="pre"><a id="l1792" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1792" class="linenr">1792 </a><span class="hl str">If TOK is nil, point should be before the newline; otherwise, TOK is the token</span></div>
<div class="pre"><a id="l1793" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1793" class="linenr">1793 </a><span class="hl str">before the newline and in that case point should be just before the token.&quot;</span></div>
<div class="pre"><a id="l1794" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1794" class="linenr">1794 </a>  <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l1795" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1795" class="linenr">1795 </a>    <span class="hl opt">(</span><span class="hl kwa">unless</span> tok</div>
<div class="pre"><a id="l1796" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1796" class="linenr">1796 </a>      <span class="hl opt">(</span><span class="hl kwa">setq</span> tok <span class="hl opt">(</span><span class="hl kwa">funcall</span> smie-backward-token-function<span class="hl opt">)))</span></div>
<div class="pre"><a id="l1797" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1797" class="linenr">1797 </a>    <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">zerop</span> <span class="hl opt">(</span><span class="hl kwa">length</span> tok<span class="hl opt">))</span></div>
<div class="pre"><a id="l1798" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1798" class="linenr">1798 </a>             <span class="hl opt">(</span><span class="hl kwa">looking-back</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">s(&quot;</span> <span class="hl opt">(</span><span class="hl kwa">1-</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l1799" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1799" class="linenr">1799 </a>        nil</div>
<div class="pre"><a id="l1800" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1800" class="linenr">1800 </a>      <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">numberp</span> <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">2</span> <span class="hl opt">(</span><span class="hl kwa">assoc</span> tok smie-grammar<span class="hl opt">)))))))</span></div>
<div class="pre"><a id="l1801" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1801" class="linenr">1801 </a></div>
<div class="pre"><a id="l1802" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1802" class="linenr">1802 </a><span class="hl slc">;;;; SMIE support for `sh'.</span></div>
<div class="pre"><a id="l1803" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1803" class="linenr">1803 </a></div>
<div class="pre"><a id="l1804" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1804" class="linenr">1804 </a><span class="hl opt">(</span><span class="hl kwa">defconst</span> sh-smie-sh-grammar</div>
<div class="pre"><a id="l1805" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1805" class="linenr">1805 </a>  <span class="hl opt">(</span><span class="hl kwa">smie-prec2-</span><span class="hl opt">&gt;</span>grammar</div>
<div class="pre"><a id="l1806" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1806" class="linenr">1806 </a>   <span class="hl opt">(</span><span class="hl kwa">smie-bnf-</span><span class="hl opt">&gt;</span>prec2</div>
<div class="pre"><a id="l1807" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1807" class="linenr">1807 </a>    <span class="hl opt">'((</span><span class="hl kwa">exp</span><span class="hl opt">)</span>                    <span class="hl slc">;A constant, or a $var, or a sequence of them...</span></div>
<div class="pre"><a id="l1808" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1808" class="linenr">1808 </a>      <span class="hl opt">(</span><span class="hl kwa">cmd</span> <span class="hl opt">(</span><span class="hl str">&quot;case&quot;</span> exp <span class="hl str">&quot;in&quot;</span> branches <span class="hl str">&quot;esac&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1809" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1809" class="linenr">1809 </a>           <span class="hl opt">(</span><span class="hl str">&quot;if&quot;</span> cmd <span class="hl str">&quot;then&quot;</span> cmd <span class="hl str">&quot;fi&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1810" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1810" class="linenr">1810 </a>           <span class="hl opt">(</span><span class="hl str">&quot;if&quot;</span> cmd <span class="hl str">&quot;then&quot;</span> cmd <span class="hl str">&quot;else&quot;</span> cmd <span class="hl str">&quot;fi&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1811" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1811" class="linenr">1811 </a>           <span class="hl opt">(</span><span class="hl str">&quot;if&quot;</span> cmd <span class="hl str">&quot;then&quot;</span> cmd <span class="hl str">&quot;elif&quot;</span> cmd <span class="hl str">&quot;then&quot;</span> cmd <span class="hl str">&quot;fi&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1812" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1812" class="linenr">1812 </a>           <span class="hl opt">(</span><span class="hl str">&quot;if&quot;</span> cmd <span class="hl str">&quot;then&quot;</span> cmd <span class="hl str">&quot;elif&quot;</span> cmd <span class="hl str">&quot;then&quot;</span> cmd <span class="hl str">&quot;else&quot;</span> cmd <span class="hl str">&quot;fi&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1813" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1813" class="linenr">1813 </a>           <span class="hl opt">(</span><span class="hl str">&quot;if&quot;</span> cmd <span class="hl str">&quot;then&quot;</span> cmd <span class="hl str">&quot;elif&quot;</span> cmd <span class="hl str">&quot;then&quot;</span> cmd</div>
<div class="pre"><a id="l1814" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1814" class="linenr">1814 </a>                                <span class="hl str">&quot;elif&quot;</span> cmd <span class="hl str">&quot;then&quot;</span> cmd <span class="hl str">&quot;else&quot;</span> cmd <span class="hl str">&quot;fi&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1815" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1815" class="linenr">1815 </a>           <span class="hl opt">(</span><span class="hl str">&quot;while&quot;</span> cmd <span class="hl str">&quot;do&quot;</span> cmd <span class="hl str">&quot;done&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1816" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1816" class="linenr">1816 </a>           <span class="hl opt">(</span><span class="hl str">&quot;until&quot;</span> cmd <span class="hl str">&quot;do&quot;</span> cmd <span class="hl str">&quot;done&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1817" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1817" class="linenr">1817 </a>           <span class="hl opt">(</span><span class="hl str">&quot;for&quot;</span> exp <span class="hl str">&quot;in&quot;</span> cmd <span class="hl str">&quot;do&quot;</span> cmd <span class="hl str">&quot;done&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1818" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1818" class="linenr">1818 </a>           <span class="hl opt">(</span><span class="hl str">&quot;for&quot;</span> exp <span class="hl str">&quot;do&quot;</span> cmd <span class="hl str">&quot;done&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1819" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1819" class="linenr">1819 </a>           <span class="hl opt">(</span><span class="hl str">&quot;select&quot;</span> exp <span class="hl str">&quot;in&quot;</span> cmd <span class="hl str">&quot;do&quot;</span> cmd <span class="hl str">&quot;done&quot;</span><span class="hl opt">)</span>   <span class="hl slc">;bash&amp;zsh&amp;ksh88.</span></div>
<div class="pre"><a id="l1820" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1820" class="linenr">1820 </a>           <span class="hl opt">(</span><span class="hl str">&quot;repeat&quot;</span> exp <span class="hl str">&quot;do&quot;</span> cmd <span class="hl str">&quot;done&quot;</span><span class="hl opt">)</span>            <span class="hl slc">;zsh.</span></div>
<div class="pre"><a id="l1821" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1821" class="linenr">1821 </a>           <span class="hl opt">(</span><span class="hl kwa">exp</span> <span class="hl str">&quot;always&quot;</span> exp<span class="hl opt">)</span>                        <span class="hl slc">;zsh.</span></div>
<div class="pre"><a id="l1822" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1822" class="linenr">1822 </a>           <span class="hl opt">(</span><span class="hl kwa">cmd</span> <span class="hl str">&quot;|&quot;</span> cmd<span class="hl opt">) (</span><span class="hl kwa">cmd</span> <span class="hl str">&quot;|&amp;&quot;</span> cmd<span class="hl opt">)</span></div>
<div class="pre"><a id="l1823" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1823" class="linenr">1823 </a>           <span class="hl opt">(</span><span class="hl kwa">cmd</span> <span class="hl str">&quot;&amp;&amp;&quot;</span> cmd<span class="hl opt">) (</span><span class="hl kwa">cmd</span> <span class="hl str">&quot;||&quot;</span> cmd<span class="hl opt">)</span></div>
<div class="pre"><a id="l1824" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1824" class="linenr">1824 </a>           <span class="hl opt">(</span><span class="hl kwa">cmd</span> <span class="hl str">&quot;;&quot;</span> cmd<span class="hl opt">) (</span><span class="hl kwa">cmd</span> <span class="hl str">&quot;&amp;&quot;</span> cmd<span class="hl opt">))</span></div>
<div class="pre"><a id="l1825" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1825" class="linenr">1825 </a>      <span class="hl opt">(</span><span class="hl kwa">rpattern</span> <span class="hl opt">(</span><span class="hl kwa">rpattern</span> <span class="hl str">&quot;|&quot;</span> rpattern<span class="hl opt">))</span></div>
<div class="pre"><a id="l1826" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1826" class="linenr">1826 </a>      <span class="hl opt">(</span><span class="hl kwa">pattern</span> <span class="hl opt">(</span><span class="hl kwa">rpattern</span><span class="hl opt">) (</span><span class="hl str">&quot;case-(&quot;</span> rpattern<span class="hl opt">))</span></div>
<div class="pre"><a id="l1827" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1827" class="linenr">1827 </a>      <span class="hl opt">(</span><span class="hl kwa">branches</span> <span class="hl opt">(</span><span class="hl kwa">branches</span> <span class="hl str">&quot;;;&quot;</span> branches<span class="hl opt">)</span></div>
<div class="pre"><a id="l1828" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1828" class="linenr">1828 </a>                <span class="hl opt">(</span><span class="hl kwa">branches</span> <span class="hl str">&quot;;&amp;&quot;</span> branches<span class="hl opt">) (</span><span class="hl kwa">branches</span> <span class="hl str">&quot;;;&amp;&quot;</span> branches<span class="hl opt">)</span> <span class="hl slc">;bash.</span></div>
<div class="pre"><a id="l1829" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1829" class="linenr">1829 </a>                <span class="hl opt">(</span><span class="hl kwa">pattern</span> <span class="hl str">&quot;case-)&quot;</span> cmd<span class="hl opt">)))</span></div>
<div class="pre"><a id="l1830" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1830" class="linenr">1830 </a>    <span class="hl opt">'((</span><span class="hl kwa">assoc</span> <span class="hl str">&quot;;;&quot;</span> <span class="hl str">&quot;;&amp;&quot;</span> <span class="hl str">&quot;;;&amp;&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1831" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1831" class="linenr">1831 </a>    <span class="hl opt">'((</span><span class="hl kwa">assoc</span> <span class="hl str">&quot;;&quot;</span> <span class="hl str">&quot;&amp;&quot;</span><span class="hl opt">) (</span><span class="hl kwa">assoc</span> <span class="hl str">&quot;&amp;&amp;&quot;</span> <span class="hl str">&quot;||&quot;</span><span class="hl opt">) (</span><span class="hl kwa">assoc</span> <span class="hl str">&quot;|&quot;</span> <span class="hl str">&quot;|&amp;&quot;</span><span class="hl opt">)))))</span></div>
<div class="pre"><a id="l1832" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1832" class="linenr">1832 </a></div>
<div class="pre"><a id="l1833" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1833" class="linenr">1833 </a><span class="hl opt">(</span><span class="hl kwa">defconst</span> sh-smie--sh-operators</div>
<div class="pre"><a id="l1834" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1834" class="linenr">1834 </a>  <span class="hl opt">(</span><span class="hl kwa">delq</span> nil <span class="hl opt">(</span><span class="hl kwa">mapcar</span> <span class="hl opt">(</span><span class="hl kwa">lambda</span> <span class="hl opt">(</span><span class="hl kwa">x</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1835" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1835" class="linenr">1835 </a>                      <span class="hl opt">(</span><span class="hl kwa">setq</span> x <span class="hl opt">(</span><span class="hl kwa">car</span> x<span class="hl opt">))</span></div>
<div class="pre"><a id="l1836" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1836" class="linenr">1836 </a>                      <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">stringp</span> x<span class="hl opt">)</span></div>
<div class="pre"><a id="l1837" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1837" class="linenr">1837 </a>                           <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">string-match</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">`[a-z]&quot;</span> x<span class="hl opt">))</span></div>
<div class="pre"><a id="l1838" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1838" class="linenr">1838 </a>                           x<span class="hl opt">))</span></div>
<div class="pre"><a id="l1839" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1839" class="linenr">1839 </a>                    sh-smie-sh-grammar<span class="hl opt">)))</span></div>
<div class="pre"><a id="l1840" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1840" class="linenr">1840 </a></div>
<div class="pre"><a id="l1841" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1841" class="linenr">1841 </a><span class="hl opt">(</span><span class="hl kwa">defconst</span> sh-smie--sh-operators-re <span class="hl opt">(</span><span class="hl kwa">regexp-opt</span> sh-smie--sh-operators<span class="hl opt">))</span></div>
<div class="pre"><a id="l1842" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1842" class="linenr">1842 </a><span class="hl opt">(</span><span class="hl kwa">defconst</span> sh-smie--sh-operators-back-re</div>
<div class="pre"><a id="l1843" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1843" class="linenr">1843 </a>  <span class="hl opt">(</span><span class="hl kwa">concat</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">(?:^</span><span class="hl esc">\\</span><span class="hl str">|[^</span><span class="hl esc">\\</span><span class="hl str">]</span><span class="hl esc">\\</span><span class="hl str">)</span><span class="hl esc">\\</span><span class="hl str">(?:</span><span class="hl esc">\\\\\\\\\\</span><span class="hl str">)*&quot;</span></div>
<div class="pre"><a id="l1844" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1844" class="linenr">1844 </a>          <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">(&quot;</span> sh-smie--sh-operators-re <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">)&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1845" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1845" class="linenr">1845 </a></div>
<div class="pre"><a id="l1846" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1846" class="linenr">1846 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-smie--sh-keyword-in-p <span class="hl opt">()</span></div>
<div class="pre"><a id="l1847" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1847" class="linenr">1847 </a>  <span class="hl str">&quot;Assuming we're looking at</span> <span class="hl esc">\&quot;</span><span class="hl str">in</span><span class="hl esc">\&quot;</span><span class="hl str">, return non-nil if it's a keyword.</span></div>
<div class="pre"><a id="l1848" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1848" class="linenr">1848 </a><span class="hl str">Does not preserve point.&quot;</span></div>
<div class="pre"><a id="l1849" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1849" class="linenr">1849 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">forward-sexp-function</span> nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l1850" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1850" class="linenr">1850 </a>        <span class="hl opt">(</span><span class="hl kwa">words</span> nil<span class="hl opt">)</span>                     <span class="hl slc">;We've seen words.</span></div>
<div class="pre"><a id="l1851" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1851" class="linenr">1851 </a>        <span class="hl opt">(</span><span class="hl kwa">newline</span> nil<span class="hl opt">)</span>                   <span class="hl slc">;We've seen newlines after the words.</span></div>
<div class="pre"><a id="l1852" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1852" class="linenr">1852 </a>        <span class="hl opt">(</span><span class="hl kwa">res</span> nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l1853" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1853" class="linenr">1853 </a>        prev<span class="hl opt">)</span></div>
<div class="pre"><a id="l1854" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1854" class="linenr">1854 </a>    <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">not</span> res<span class="hl opt">)</span></div>
<div class="pre"><a id="l1855" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1855" class="linenr">1855 </a>      <span class="hl opt">(</span><span class="hl kwa">setq</span> prev <span class="hl opt">(</span><span class="hl kwa">funcall</span> smie-backward-token-function<span class="hl opt">))</span></div>
<div class="pre"><a id="l1856" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1856" class="linenr">1856 </a>      <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l1857" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1857" class="linenr">1857 </a>       <span class="hl opt">((</span><span class="hl kwa">zerop</span> <span class="hl opt">(</span><span class="hl kwa">length</span> prev<span class="hl opt">))</span></div>
<div class="pre"><a id="l1858" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1858" class="linenr">1858 </a>        <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l1859" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1859" class="linenr">1859 </a>         <span class="hl opt">(</span><span class="hl kwa">newline</span> <span class="hl opt">(</span><span class="hl kwa">cl-assert</span> words<span class="hl opt">) (</span><span class="hl kwa">setq</span> res <span class="hl opt">'</span>word<span class="hl opt">))</span></div>
<div class="pre"><a id="l1860" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1860" class="linenr">1860 </a>         <span class="hl opt">((</span><span class="hl kwa">bobp</span><span class="hl opt">) (</span><span class="hl kwa">setq</span> res <span class="hl opt">'</span>word<span class="hl opt">))</span></div>
<div class="pre"><a id="l1861" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1861" class="linenr">1861 </a>         <span class="hl opt">(</span><span class="hl kwa">t</span></div>
<div class="pre"><a id="l1862" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1862" class="linenr">1862 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> words t<span class="hl opt">)</span></div>
<div class="pre"><a id="l1863" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1863" class="linenr">1863 </a>          <span class="hl opt">(</span><span class="hl kwa">condition-case</span> nil</div>
<div class="pre"><a id="l1864" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1864" class="linenr">1864 </a>              <span class="hl opt">(</span><span class="hl kwa">forward-sexp</span> -<span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1865" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1865" class="linenr">1865 </a>            <span class="hl opt">(</span><span class="hl kwa">scan-error</span> <span class="hl opt">(</span><span class="hl kwa">setq</span> res <span class="hl opt">'</span>unknown<span class="hl opt">))))))</span></div>
<div class="pre"><a id="l1866" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1866" class="linenr">1866 </a>       <span class="hl opt">((</span><span class="hl kwa">equal</span> prev <span class="hl str">&quot;;&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1867" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1867" class="linenr">1867 </a>        <span class="hl opt">(</span><span class="hl kwa">if</span> words <span class="hl opt">(</span><span class="hl kwa">setq</span> newline t<span class="hl opt">)</span></div>
<div class="pre"><a id="l1868" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1868" class="linenr">1868 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> res <span class="hl opt">'</span>keyword<span class="hl opt">)))</span></div>
<div class="pre"><a id="l1869" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1869" class="linenr">1869 </a>       <span class="hl opt">((</span><span class="hl kwa">member</span> prev <span class="hl opt">'(</span><span class="hl str">&quot;case&quot;</span> <span class="hl str">&quot;for&quot;</span> <span class="hl str">&quot;select&quot;</span><span class="hl opt">)) (</span><span class="hl kwa">setq</span> res <span class="hl opt">'</span>keyword<span class="hl opt">))</span></div>
<div class="pre"><a id="l1870" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1870" class="linenr">1870 </a>       <span class="hl opt">((</span><span class="hl kwa">assoc</span> prev smie-grammar<span class="hl opt">) (</span><span class="hl kwa">setq</span> res <span class="hl opt">'</span>word<span class="hl opt">))</span></div>
<div class="pre"><a id="l1871" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1871" class="linenr">1871 </a>       <span class="hl opt">(</span><span class="hl kwa">t</span></div>
<div class="pre"><a id="l1872" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1872" class="linenr">1872 </a>        <span class="hl opt">(</span><span class="hl kwa">if</span> newline</div>
<div class="pre"><a id="l1873" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1873" class="linenr">1873 </a>            <span class="hl opt">(</span><span class="hl kwa">progn</span> <span class="hl opt">(</span><span class="hl kwa">cl-assert</span> words<span class="hl opt">) (</span><span class="hl kwa">setq</span> res <span class="hl opt">'</span>word<span class="hl opt">))</span></div>
<div class="pre"><a id="l1874" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1874" class="linenr">1874 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> words t<span class="hl opt">)))))</span></div>
<div class="pre"><a id="l1875" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1875" class="linenr">1875 </a>    <span class="hl opt">(</span><span class="hl kwa">eq</span> res <span class="hl opt">'</span>keyword<span class="hl opt">)))</span></div>
<div class="pre"><a id="l1876" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1876" class="linenr">1876 </a></div>
<div class="pre"><a id="l1877" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1877" class="linenr">1877 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-smie--sh-keyword-p <span class="hl opt">(</span><span class="hl kwa">tok</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1878" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1878" class="linenr">1878 </a>  <span class="hl str">&quot;Non-nil if TOK (at which we're looking) really is a keyword.&quot;</span></div>
<div class="pre"><a id="l1879" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1879" class="linenr">1879 </a>  <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l1880" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1880" class="linenr">1880 </a>   <span class="hl opt">((</span><span class="hl kwa">looking-at</span> <span class="hl str">&quot;[[:alnum:]_]+=&quot;</span><span class="hl opt">)</span> nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l1881" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1881" class="linenr">1881 </a>   <span class="hl opt">((</span><span class="hl kwa">equal</span> tok <span class="hl str">&quot;in&quot;</span><span class="hl opt">) (</span><span class="hl kwa">sh-smie--sh-keyword-in-p</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1882" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1882" class="linenr">1882 </a>   <span class="hl opt">(</span><span class="hl kwa">t</span> <span class="hl opt">(</span><span class="hl kwa">sh-smie--keyword-p</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l1883" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1883" class="linenr">1883 </a></div>
<div class="pre"><a id="l1884" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1884" class="linenr">1884 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-smie--default-forward-token <span class="hl opt">()</span></div>
<div class="pre"><a id="l1885" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1885" class="linenr">1885 </a>  <span class="hl opt">(</span><span class="hl kwa">forward-comment</span> <span class="hl opt">(</span><span class="hl kwa">point-max</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1886" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1886" class="linenr">1886 </a>  <span class="hl opt">(</span><span class="hl kwa">buffer-substring-no-properties</span></div>
<div class="pre"><a id="l1887" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1887" class="linenr">1887 </a>   <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1888" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1888" class="linenr">1888 </a>   <span class="hl opt">(</span><span class="hl kwa">progn</span> <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">zerop</span> <span class="hl opt">(</span><span class="hl kwa">skip-syntax-forward</span> <span class="hl str">&quot;.&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1889" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1889" class="linenr">1889 </a>              <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">progn</span> <span class="hl opt">(</span><span class="hl kwa">skip-syntax-forward</span> <span class="hl str">&quot;w_'&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1890" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1890" class="linenr">1890 </a>                            <span class="hl opt">(</span><span class="hl kwa">looking-at</span> <span class="hl str">&quot;</span><span class="hl esc">\\\\</span><span class="hl str">&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1891" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1891" class="linenr">1891 </a>                <span class="hl opt">(</span><span class="hl kwa">forward-char</span> <span class="hl num">2</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1892" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1892" class="linenr">1892 </a>          <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l1893" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1893" class="linenr">1893 </a></div>
<div class="pre"><a id="l1894" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1894" class="linenr">1894 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-smie--default-backward-token <span class="hl opt">()</span></div>
<div class="pre"><a id="l1895" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1895" class="linenr">1895 </a>  <span class="hl opt">(</span><span class="hl kwa">forward-comment</span> <span class="hl opt">(</span><span class="hl kwa">-</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1896" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1896" class="linenr">1896 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">pos</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1897" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1897" class="linenr">1897 </a>        <span class="hl opt">(</span><span class="hl kwa">n</span> <span class="hl opt">(</span><span class="hl kwa">skip-syntax-backward</span> <span class="hl str">&quot;.&quot;</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1898" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1898" class="linenr">1898 </a>    <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">zerop</span> n<span class="hl opt">)</span></div>
<div class="pre"><a id="l1899" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1899" class="linenr">1899 </a>            <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> n -<span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1900" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1900" class="linenr">1900 </a>                 <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">p</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1901" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1901" class="linenr">1901 </a>                   <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> -<span class="hl num">1</span> <span class="hl opt">(</span>% <span class="hl opt">(</span><span class="hl kwa">skip-syntax-backward</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">&quot;</span><span class="hl opt">)</span> <span class="hl num">2</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1902" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1902" class="linenr">1902 </a>                       t</div>
<div class="pre"><a id="l1903" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1903" class="linenr">1903 </a>                     <span class="hl opt">(</span><span class="hl kwa">goto-char</span> p<span class="hl opt">)</span></div>
<div class="pre"><a id="l1904" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1904" class="linenr">1904 </a>                     nil<span class="hl opt">))))</span></div>
<div class="pre"><a id="l1905" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1905" class="linenr">1905 </a>        <span class="hl opt">(</span><span class="hl kwa">while</span></div>
<div class="pre"><a id="l1906" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1906" class="linenr">1906 </a>            <span class="hl opt">(</span><span class="hl kwa">progn</span> <span class="hl opt">(</span><span class="hl kwa">skip-syntax-backward</span> <span class="hl str">&quot;w_'&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1907" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1907" class="linenr">1907 </a>                   <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">zerop</span> <span class="hl opt">(</span><span class="hl kwa">skip-syntax-backward</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">&quot;</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1908" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1908" class="linenr">1908 </a>                       <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> ?<span class="hl esc">\\</span> <span class="hl opt">(</span><span class="hl kwa">char-before</span> <span class="hl opt">(</span><span class="hl kwa">1-</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l1909" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1909" class="linenr">1909 </a>                         <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">p</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1910" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1910" class="linenr">1910 </a>                           <span class="hl opt">(</span><span class="hl kwa">forward-char</span> -<span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1911" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1911" class="linenr">1911 </a>                           <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> -<span class="hl num">1</span> <span class="hl opt">(</span>% <span class="hl opt">(</span><span class="hl kwa">skip-syntax-backward</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">&quot;</span><span class="hl opt">)</span> <span class="hl num">2</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1912" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1912" class="linenr">1912 </a>                               t</div>
<div class="pre"><a id="l1913" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1913" class="linenr">1913 </a>                             <span class="hl opt">(</span><span class="hl kwa">goto-char</span> p<span class="hl opt">)</span></div>
<div class="pre"><a id="l1914" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1914" class="linenr">1914 </a>                             nil<span class="hl opt">))))))</span></div>
<div class="pre"><a id="l1915" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1915" class="linenr">1915 </a>      <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">-</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">) (</span>% <span class="hl opt">(</span><span class="hl kwa">skip-syntax-backward</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">&quot;</span><span class="hl opt">)</span> <span class="hl num">2</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l1916" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1916" class="linenr">1916 </a>    <span class="hl opt">(</span><span class="hl kwa">buffer-substring-no-properties</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)</span> pos<span class="hl opt">)))</span></div>
<div class="pre"><a id="l1917" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1917" class="linenr">1917 </a></div>
<div class="pre"><a id="l1918" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1918" class="linenr">1918 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-smie-sh-forward-token <span class="hl opt">()</span></div>
<div class="pre"><a id="l1919" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1919" class="linenr">1919 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">looking-at</span> <span class="hl str">&quot;[</span> <span class="hl esc">\t</span><span class="hl str">]*</span><span class="hl esc">\\</span><span class="hl str">(?:#</span><span class="hl esc">\\</span><span class="hl str">|</span><span class="hl esc">\\</span><span class="hl str">(</span><span class="hl esc">\\</span><span class="hl str">s|</span><span class="hl esc">\\</span><span class="hl str">)</span><span class="hl esc">\\</span><span class="hl str">|$</span><span class="hl esc">\\</span><span class="hl str">)&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1920" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1920" class="linenr">1920 </a>           <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l1921" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1921" class="linenr">1921 </a>             <span class="hl opt">(</span><span class="hl kwa">skip-chars-backward</span> <span class="hl str">&quot;</span> <span class="hl esc">\t</span><span class="hl str">&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1922" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1922" class="linenr">1922 </a>             <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">bolp</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l1923" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1923" class="linenr">1923 </a>      <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">match-end</span> <span class="hl num">1</span><span class="hl opt">) (</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">3</span> <span class="hl opt">(</span><span class="hl kwa">syntax-ppss</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l1924" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1924" class="linenr">1924 </a>          <span class="hl slc">;; Right before a here-doc.</span></div>
<div class="pre"><a id="l1925" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1925" class="linenr">1925 </a>          <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">forward-sexp-function</span> nil<span class="hl opt">))</span></div>
<div class="pre"><a id="l1926" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1926" class="linenr">1926 </a>            <span class="hl opt">(</span><span class="hl kwa">forward-sexp</span> <span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1927" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1927" class="linenr">1927 </a>            <span class="hl slc">;; Pretend the here-document is a &quot;newline representing a</span></div>
<div class="pre"><a id="l1928" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1928" class="linenr">1928 </a>            <span class="hl slc">;; semi-colon&quot;, since the here-doc otherwise covers the newline(s).</span></div>
<div class="pre"><a id="l1929" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1929" class="linenr">1929 </a>            <span class="hl str">&quot;;&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1930" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1930" class="linenr">1930 </a>        <span class="hl opt">(</span><span class="hl kwa">unless</span> <span class="hl opt">(</span><span class="hl kwa">eobp</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1931" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1931" class="linenr">1931 </a>          <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">semi</span> <span class="hl opt">(</span><span class="hl kwa">sh-smie--newline-semi-p</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1932" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1932" class="linenr">1932 </a>            <span class="hl opt">(</span><span class="hl kwa">forward-line</span> <span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1933" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1933" class="linenr">1933 </a>            <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">or</span> semi <span class="hl opt">(</span><span class="hl kwa">eobp</span><span class="hl opt">))</span> <span class="hl str">&quot;;&quot;</span></div>
<div class="pre"><a id="l1934" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1934" class="linenr">1934 </a>              <span class="hl opt">(</span><span class="hl kwa">sh-smie-sh-forward-token</span><span class="hl opt">)))))</span></div>
<div class="pre"><a id="l1935" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1935" class="linenr">1935 </a>    <span class="hl opt">(</span><span class="hl kwa">forward-comment</span> <span class="hl opt">(</span><span class="hl kwa">point-max</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1936" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1936" class="linenr">1936 </a>    <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l1937" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1937" class="linenr">1937 </a>     <span class="hl opt">((</span><span class="hl kwa">looking-at</span> <span class="hl str">&quot;</span><span class="hl esc">\\\\\n</span><span class="hl str">&quot;</span><span class="hl opt">) (</span><span class="hl kwa">forward-line</span> <span class="hl num">1</span><span class="hl opt">) (</span><span class="hl kwa">sh-smie-sh-forward-token</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1938" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1938" class="linenr">1938 </a>     <span class="hl opt">((</span><span class="hl kwa">looking-at</span> sh-smie--sh-operators-re<span class="hl opt">)</span></div>
<div class="pre"><a id="l1939" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1939" class="linenr">1939 </a>      <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">match-end</span> <span class="hl num">0</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1940" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1940" class="linenr">1940 </a>      <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">tok</span> <span class="hl opt">(</span><span class="hl kwa">match-string-no-properties</span> <span class="hl num">0</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1941" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1941" class="linenr">1941 </a>        <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">memq</span> <span class="hl opt">(</span><span class="hl kwa">aref</span> tok <span class="hl opt">(</span><span class="hl kwa">1-</span> <span class="hl opt">(</span><span class="hl kwa">length</span> tok<span class="hl opt">))) '(</span>?\<span class="hl slc">; ?\&amp; ?\|))</span></div>
<div class="pre"><a id="l1942" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1942" class="linenr">1942 </a>                 <span class="hl opt">(</span><span class="hl kwa">looking-at</span> <span class="hl str">&quot;[</span> <span class="hl esc">\t</span><span class="hl str">]*</span><span class="hl esc">\\</span><span class="hl str">(?:#</span><span class="hl esc">\\</span><span class="hl str">|$</span><span class="hl esc">\\</span><span class="hl str">)&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1943" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1943" class="linenr">1943 </a>            <span class="hl opt">(</span><span class="hl kwa">forward-line</span> <span class="hl num">1</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1944" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1944" class="linenr">1944 </a>        tok<span class="hl opt">))</span></div>
<div class="pre"><a id="l1945" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1945" class="linenr">1945 </a>     <span class="hl opt">(</span><span class="hl kwa">t</span></div>
<div class="pre"><a id="l1946" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1946" class="linenr">1946 </a>      <span class="hl opt">(</span><span class="hl kwa">let</span><span class="hl opt">* ((</span><span class="hl kwa">pos</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1947" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1947" class="linenr">1947 </a>             <span class="hl opt">(</span><span class="hl kwa">tok</span> <span class="hl opt">(</span><span class="hl kwa">sh-smie--default-forward-token</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1948" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1948" class="linenr">1948 </a>        <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l1949" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1949" class="linenr">1949 </a>         <span class="hl opt">((</span><span class="hl kwa">equal</span> tok <span class="hl str">&quot;)&quot;</span><span class="hl opt">)</span> <span class="hl str">&quot;case-)&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1950" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1950" class="linenr">1950 </a>         <span class="hl opt">((</span><span class="hl kwa">equal</span> tok <span class="hl str">&quot;(&quot;</span><span class="hl opt">)</span> <span class="hl str">&quot;case-(&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1951" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1951" class="linenr">1951 </a>         <span class="hl opt">((</span><span class="hl kwa">and</span> tok <span class="hl opt">(</span><span class="hl kwa">string-match</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">`[a-z]&quot;</span> tok<span class="hl opt">)</span></div>
<div class="pre"><a id="l1952" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1952" class="linenr">1952 </a>               <span class="hl opt">(</span><span class="hl kwa">assoc</span> tok smie-grammar<span class="hl opt">)</span></div>
<div class="pre"><a id="l1953" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1953" class="linenr">1953 </a>               <span class="hl opt">(</span><span class="hl kwa">not</span></div>
<div class="pre"><a id="l1954" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1954" class="linenr">1954 </a>                <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l1955" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1955" class="linenr">1955 </a>                  <span class="hl opt">(</span><span class="hl kwa">goto-char</span> pos<span class="hl opt">)</span></div>
<div class="pre"><a id="l1956" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1956" class="linenr">1956 </a>                  <span class="hl opt">(</span><span class="hl kwa">sh-smie--sh-keyword-p</span> tok<span class="hl opt">))))</span></div>
<div class="pre"><a id="l1957" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1957" class="linenr">1957 </a>          <span class="hl str">&quot; word &quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1958" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1958" class="linenr">1958 </a>         <span class="hl opt">(</span><span class="hl kwa">t</span> tok<span class="hl opt">)))))))</span></div>
<div class="pre"><a id="l1959" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1959" class="linenr">1959 </a></div>
<div class="pre"><a id="l1960" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1960" class="linenr">1960 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-smie--looking-back-at-continuation-p <span class="hl opt">()</span></div>
<div class="pre"><a id="l1961" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1961" class="linenr">1961 </a>  <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l1962" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1962" class="linenr">1962 </a>    <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl opt">(</span><span class="hl kwa">char-before</span><span class="hl opt">)</span> ?<span class="hl esc">\n</span><span class="hl opt">) (</span><span class="hl kwa">progn</span> <span class="hl opt">(</span><span class="hl kwa">forward-char</span> -<span class="hl num">1</span><span class="hl opt">)</span> t<span class="hl opt">) (</span><span class="hl kwa">eolp</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1963" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1963" class="linenr">1963 </a>         <span class="hl opt">(</span><span class="hl kwa">looking-back</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">(?:^</span><span class="hl esc">\\</span><span class="hl str">|[^</span><span class="hl esc">\\</span><span class="hl str">]</span><span class="hl esc">\\</span><span class="hl str">)</span><span class="hl esc">\\</span><span class="hl str">(?:</span><span class="hl esc">\\\\\\\\\\</span><span class="hl str">)*</span><span class="hl esc">\\\\</span><span class="hl str">&quot;</span></div>
<div class="pre"><a id="l1964" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1964" class="linenr">1964 </a>                       <span class="hl opt">(</span><span class="hl kwa">line-beginning-position</span><span class="hl opt">)))))</span></div>
<div class="pre"><a id="l1965" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1965" class="linenr">1965 </a></div>
<div class="pre"><a id="l1966" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1966" class="linenr">1966 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-smie-sh-backward-token <span class="hl opt">()</span></div>
<div class="pre"><a id="l1967" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1967" class="linenr">1967 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">bol</span> <span class="hl opt">(</span><span class="hl kwa">line-beginning-position</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1968" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1968" class="linenr">1968 </a>    <span class="hl opt">(</span><span class="hl kwa">forward-comment</span> <span class="hl opt">(</span><span class="hl kwa">-</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1969" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1969" class="linenr">1969 </a>    <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l1970" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1970" class="linenr">1970 </a>     <span class="hl opt">((</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">bolp</span><span class="hl opt">) (</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">bobp</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1971" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1971" class="linenr">1971 </a>           <span class="hl opt">(</span><span class="hl kwa">equal</span> <span class="hl opt">(</span><span class="hl kwa">syntax-after</span> <span class="hl opt">(</span><span class="hl kwa">1-</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))) (</span><span class="hl kwa">string-to-syntax</span> <span class="hl str">&quot;|&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1972" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1972" class="linenr">1972 </a>           <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">3</span> <span class="hl opt">(</span><span class="hl kwa">syntax-ppss</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l1973" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1973" class="linenr">1973 </a>      <span class="hl slc">;; Right after a here-document.</span></div>
<div class="pre"><a id="l1974" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1974" class="linenr">1974 </a>      <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">forward-sexp-function</span> nil<span class="hl opt">))</span></div>
<div class="pre"><a id="l1975" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1975" class="linenr">1975 </a>        <span class="hl opt">(</span><span class="hl kwa">forward-sexp</span> -<span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1976" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1976" class="linenr">1976 </a>        <span class="hl slc">;; Pretend the here-document is a &quot;newline representing a</span></div>
<div class="pre"><a id="l1977" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1977" class="linenr">1977 </a>        <span class="hl slc">;; semi-colon&quot;, since the here-doc otherwise covers the newline(s).</span></div>
<div class="pre"><a id="l1978" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1978" class="linenr">1978 </a>        <span class="hl str">&quot;;&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1979" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1979" class="linenr">1979 </a>     <span class="hl opt">((&lt; (</span><span class="hl kwa">point</span><span class="hl opt">)</span> bol<span class="hl opt">)</span></div>
<div class="pre"><a id="l1980" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1980" class="linenr">1980 </a>      <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l1981" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1981" class="linenr">1981 </a>       <span class="hl opt">((</span><span class="hl kwa">sh-smie--looking-back-at-continuation-p</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1982" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1982" class="linenr">1982 </a>        <span class="hl opt">(</span><span class="hl kwa">forward-char</span> -<span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1983" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1983" class="linenr">1983 </a>        <span class="hl opt">(</span><span class="hl kwa">funcall</span> smie-backward-token-function<span class="hl opt">))</span></div>
<div class="pre"><a id="l1984" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1984" class="linenr">1984 </a>       <span class="hl opt">((</span><span class="hl kwa">sh-smie--newline-semi-p</span><span class="hl opt">)</span> <span class="hl str">&quot;;&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1985" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1985" class="linenr">1985 </a>       <span class="hl opt">(</span><span class="hl kwa">t</span> <span class="hl opt">(</span><span class="hl kwa">funcall</span> smie-backward-token-function<span class="hl opt">))))</span></div>
<div class="pre"><a id="l1986" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1986" class="linenr">1986 </a>     <span class="hl opt">((</span><span class="hl kwa">looking-back</span> sh-smie--sh-operators-back-re</div>
<div class="pre"><a id="l1987" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1987" class="linenr">1987 </a>                    <span class="hl opt">(</span><span class="hl kwa">line-beginning-position</span><span class="hl opt">) '</span>greedy<span class="hl opt">)</span></div>
<div class="pre"><a id="l1988" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1988" class="linenr">1988 </a>      <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">match-beginning</span> <span class="hl num">1</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1989" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1989" class="linenr">1989 </a>      <span class="hl opt">(</span><span class="hl kwa">match-string-no-properties</span> <span class="hl num">1</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l1990" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1990" class="linenr">1990 </a>     <span class="hl opt">(</span><span class="hl kwa">t</span></div>
<div class="pre"><a id="l1991" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1991" class="linenr">1991 </a>      <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">tok</span> <span class="hl opt">(</span><span class="hl kwa">sh-smie--default-backward-token</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l1992" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1992" class="linenr">1992 </a>        <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l1993" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1993" class="linenr">1993 </a>         <span class="hl opt">((</span><span class="hl kwa">equal</span> tok <span class="hl str">&quot;)&quot;</span><span class="hl opt">)</span> <span class="hl str">&quot;case-)&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1994" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1994" class="linenr">1994 </a>         <span class="hl opt">((</span><span class="hl kwa">equal</span> tok <span class="hl str">&quot;(&quot;</span><span class="hl opt">)</span> <span class="hl str">&quot;case-(&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1995" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1995" class="linenr">1995 </a>         <span class="hl opt">((</span><span class="hl kwa">and</span> tok <span class="hl opt">(</span><span class="hl kwa">string-match</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">`[a-z]&quot;</span> tok<span class="hl opt">)</span></div>
<div class="pre"><a id="l1996" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1996" class="linenr">1996 </a>               <span class="hl opt">(</span><span class="hl kwa">assoc</span> tok smie-grammar<span class="hl opt">)</span></div>
<div class="pre"><a id="l1997" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1997" class="linenr">1997 </a>               <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">save-excursion</span> <span class="hl opt">(</span><span class="hl kwa">sh-smie--sh-keyword-p</span> tok<span class="hl opt">))))</span></div>
<div class="pre"><a id="l1998" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1998" class="linenr">1998 </a>          <span class="hl str">&quot; word &quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l1999" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l1999" class="linenr">1999 </a>         <span class="hl opt">(</span><span class="hl kwa">t</span> tok<span class="hl opt">)))))))</span></div>
<div class="pre"><a id="l2000" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2000" class="linenr">2000 </a></div>
<div class="pre"><a id="l2001" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2001" class="linenr">2001 </a><span class="hl opt">(</span><span class="hl kwa">defcustom</span> sh-indent-after-continuation t</div>
<div class="pre"><a id="l2002" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2002" class="linenr">2002 </a>  <span class="hl str">&quot;If non-nil, indent relative to the continued line's beginning.</span></div>
<div class="pre"><a id="l2003" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2003" class="linenr">2003 </a><span class="hl str">Continued lines can either be indented as</span> <span class="hl esc">\&quot;</span><span class="hl str">one long wrapped line</span><span class="hl esc">\&quot;</span> <span class="hl str">without</span></div>
<div class="pre"><a id="l2004" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2004" class="linenr">2004 </a><span class="hl str">paying attention to the actual syntactic structure, as in:</span></div>
<div class="pre"><a id="l2005" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2005" class="linenr">2005 </a><span class="hl str"></span></div>
<div class="pre"><a id="l2006" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2006" class="linenr">2006 </a><span class="hl str">   for f</span> <span class="hl esc">\\</span></div>
<div class="pre"><a id="l2007" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2007" class="linenr">2007 </a><span class="hl str">       in a; do</span> <span class="hl esc">\\</span></div>
<div class="pre"><a id="l2008" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2008" class="linenr">2008 </a><span class="hl str">       toto;</span> <span class="hl esc">\\</span></div>
<div class="pre"><a id="l2009" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2009" class="linenr">2009 </a><span class="hl str">       done</span></div>
<div class="pre"><a id="l2010" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2010" class="linenr">2010 </a><span class="hl str"></span></div>
<div class="pre"><a id="l2011" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2011" class="linenr">2011 </a><span class="hl str">or as lines that just don't have implicit semi-colons between them, as in:</span></div>
<div class="pre"><a id="l2012" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2012" class="linenr">2012 </a><span class="hl str"></span></div>
<div class="pre"><a id="l2013" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2013" class="linenr">2013 </a><span class="hl str">   for f</span> <span class="hl esc">\\</span></div>
<div class="pre"><a id="l2014" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2014" class="linenr">2014 </a><span class="hl str">   in a; do</span> <span class="hl esc">\\</span></div>
<div class="pre"><a id="l2015" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2015" class="linenr">2015 </a><span class="hl str">       toto;</span> <span class="hl esc">\\</span></div>
<div class="pre"><a id="l2016" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2016" class="linenr">2016 </a><span class="hl str">   done</span></div>
<div class="pre"><a id="l2017" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2017" class="linenr">2017 </a><span class="hl str"></span></div>
<div class="pre"><a id="l2018" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2018" class="linenr">2018 </a><span class="hl str">With `always' you get the former behavior whereas with nil you get the latter.</span></div>
<div class="pre"><a id="l2019" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2019" class="linenr">2019 </a><span class="hl str">With t, you get the latter as long as that would indent the continuation line</span></div>
<div class="pre"><a id="l2020" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2020" class="linenr">2020 </a><span class="hl str">deeper than the initial line.&quot;</span></div>
<div class="pre"><a id="l2021" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2021" class="linenr">2021 </a>  <span class="hl opt">:</span>version <span class="hl str">&quot;25.1&quot;</span></div>
<div class="pre"><a id="l2022" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2022" class="linenr">2022 </a>  <span class="hl opt">:</span>type <span class="hl opt">'(</span><span class="hl kwa">choice</span></div>
<div class="pre"><a id="l2023" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2023" class="linenr">2023 </a>          <span class="hl opt">(</span><span class="hl kwa">const</span> nil <span class="hl opt">:</span>tag <span class="hl str">&quot;Never&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2024" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2024" class="linenr">2024 </a>          <span class="hl opt">(</span><span class="hl kwa">const</span> t   <span class="hl opt">:</span>tag <span class="hl str">&quot;Only if needed to make it deeper&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2025" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2025" class="linenr">2025 </a>          <span class="hl opt">(</span><span class="hl kwa">const</span> always <span class="hl opt">:</span>tag <span class="hl str">&quot;Always&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2026" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2026" class="linenr">2026 </a>  <span class="hl opt">:</span>group <span class="hl opt">'</span>sh-indentation<span class="hl opt">)</span></div>
<div class="pre"><a id="l2027" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2027" class="linenr">2027 </a></div>
<div class="pre"><a id="l2028" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2028" class="linenr">2028 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-smie--continuation-start-indent <span class="hl opt">()</span></div>
<div class="pre"><a id="l2029" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2029" class="linenr">2029 </a>  <span class="hl str">&quot;Return the initial indentation of a continued line.</span></div>
<div class="pre"><a id="l2030" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2030" class="linenr">2030 </a><span class="hl str">May return nil if the line should not be treated as continued.&quot;</span></div>
<div class="pre"><a id="l2031" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2031" class="linenr">2031 </a>  <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l2032" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2032" class="linenr">2032 </a>    <span class="hl opt">(</span><span class="hl kwa">forward-line</span> -<span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2033" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2033" class="linenr">2033 </a>    <span class="hl opt">(</span><span class="hl kwa">unless</span> <span class="hl opt">(</span><span class="hl kwa">sh-smie--looking-back-at-continuation-p</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2034" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2034" class="linenr">2034 </a>      <span class="hl opt">(</span><span class="hl kwa">current-indentation</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l2035" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2035" class="linenr">2035 </a></div>
<div class="pre"><a id="l2036" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2036" class="linenr">2036 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-smie--indent-continuation <span class="hl opt">()</span></div>
<div class="pre"><a id="l2037" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2037" class="linenr">2037 </a>  <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l2038" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2038" class="linenr">2038 </a>   <span class="hl opt">((</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">and</span> sh-indent-after-continuation</div>
<div class="pre"><a id="l2039" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2039" class="linenr">2039 </a>              <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l2040" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2040" class="linenr">2040 </a>                <span class="hl opt">(</span><span class="hl kwa">ignore-errors</span></div>
<div class="pre"><a id="l2041" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2041" class="linenr">2041 </a>                  <span class="hl opt">(</span><span class="hl kwa">skip-chars-backward</span> <span class="hl str">&quot;</span> <span class="hl esc">\t</span><span class="hl str">&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2042" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2042" class="linenr">2042 </a>                  <span class="hl opt">(</span><span class="hl kwa">sh-smie--looking-back-at-continuation-p</span><span class="hl opt">)))))</span></div>
<div class="pre"><a id="l2043" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2043" class="linenr">2043 </a>    nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l2044" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2044" class="linenr">2044 </a>   <span class="hl opt">((</span><span class="hl kwa">eq</span> sh-indent-after-continuation <span class="hl opt">'</span>always<span class="hl opt">)</span></div>
<div class="pre"><a id="l2045" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2045" class="linenr">2045 </a>    <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l2046" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2046" class="linenr">2046 </a>      <span class="hl opt">(</span><span class="hl kwa">forward-line</span> -<span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2047" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2047" class="linenr">2047 </a>      <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">sh-smie--looking-back-at-continuation-p</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2048" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2048" class="linenr">2048 </a>          <span class="hl opt">(</span><span class="hl kwa">current-indentation</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2049" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2049" class="linenr">2049 </a>        <span class="hl opt">(+ (</span><span class="hl kwa">current-indentation</span><span class="hl opt">)</span> sh-indentation<span class="hl opt">))))</span></div>
<div class="pre"><a id="l2050" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2050" class="linenr">2050 </a>   <span class="hl opt">(</span><span class="hl kwa">t</span></div>
<div class="pre"><a id="l2051" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2051" class="linenr">2051 </a>    <span class="hl slc">;; Just make sure a line-continuation is indented deeper.</span></div>
<div class="pre"><a id="l2052" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2052" class="linenr">2052 </a>    <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l2053" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2053" class="linenr">2053 </a>      <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">indent</span> <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">sh-indent-after-continuation</span> nil<span class="hl opt">))</span></div>
<div class="pre"><a id="l2054" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2054" class="linenr">2054 </a>                      <span class="hl opt">(</span><span class="hl kwa">smie-indent-calculate</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2055" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2055" class="linenr">2055 </a>            <span class="hl opt">(</span><span class="hl kwa">max</span> most-positive-fixnum<span class="hl opt">))</span></div>
<div class="pre"><a id="l2056" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2056" class="linenr">2056 </a>        <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">numberp</span> indent<span class="hl opt">))</span> indent</div>
<div class="pre"><a id="l2057" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2057" class="linenr">2057 </a>          <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l2058" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2058" class="linenr">2058 </a>                   <span class="hl opt">(</span><span class="hl kwa">forward-line</span> -<span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2059" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2059" class="linenr">2059 </a>                   <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">ci</span> <span class="hl opt">(</span><span class="hl kwa">current-indentation</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2060" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2060" class="linenr">2060 </a>                     <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l2061" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2061" class="linenr">2061 </a>                      <span class="hl slc">;; Previous line is less indented, we're good.</span></div>
<div class="pre"><a id="l2062" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2062" class="linenr">2062 </a>                      <span class="hl opt">((&lt;</span> ci indent<span class="hl opt">)</span> nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l2063" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2063" class="linenr">2063 </a>                      <span class="hl opt">((</span><span class="hl kwa">sh-smie--looking-back-at-continuation-p</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2064" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2064" class="linenr">2064 </a>                       <span class="hl opt">(</span><span class="hl kwa">setq</span> max <span class="hl opt">(</span><span class="hl kwa">min</span> max ci<span class="hl opt">))</span></div>
<div class="pre"><a id="l2065" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2065" class="linenr">2065 </a>                       <span class="hl slc">;; Previous line is itself a continuation.</span></div>
<div class="pre"><a id="l2066" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2066" class="linenr">2066 </a>                       <span class="hl slc">;; If it's indented like us, we're good, otherwise</span></div>
<div class="pre"><a id="l2067" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2067" class="linenr">2067 </a>                       <span class="hl slc">;; check the line before that one.</span></div>
<div class="pre"><a id="l2068" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2068" class="linenr">2068 </a>                       <span class="hl opt">(&gt;</span> ci indent<span class="hl opt">))</span></div>
<div class="pre"><a id="l2069" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2069" class="linenr">2069 </a>                      <span class="hl opt">(</span><span class="hl kwa">t</span> <span class="hl slc">;Previous line is the beginning of the continued line.</span></div>
<div class="pre"><a id="l2070" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2070" class="linenr">2070 </a>                       <span class="hl opt">(</span><span class="hl kwa">setq</span> indent <span class="hl opt">(</span><span class="hl kwa">min</span> <span class="hl opt">(+</span> ci sh-indentation<span class="hl opt">)</span> max<span class="hl opt">))</span></div>
<div class="pre"><a id="l2071" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2071" class="linenr">2071 </a>                       nil<span class="hl opt">)))))</span></div>
<div class="pre"><a id="l2072" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2072" class="linenr">2072 </a>          indent<span class="hl opt">))))))</span></div>
<div class="pre"><a id="l2073" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2073" class="linenr">2073 </a></div>
<div class="pre"><a id="l2074" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2074" class="linenr">2074 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-smie-sh-rules <span class="hl opt">(</span><span class="hl kwa">kind</span> token<span class="hl opt">)</span></div>
<div class="pre"><a id="l2075" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2075" class="linenr">2075 </a>  <span class="hl opt">(</span><span class="hl kwa">pcase</span> <span class="hl opt">(</span><span class="hl kwa">cons</span> kind token<span class="hl opt">)</span></div>
<div class="pre"><a id="l2076" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2076" class="linenr">2076 </a>    <span class="hl opt">(`(:</span>elem . basic<span class="hl opt">)</span> sh-indentation<span class="hl opt">)</span></div>
<div class="pre"><a id="l2077" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2077" class="linenr">2077 </a>    <span class="hl opt">(`(:</span>after . <span class="hl str">&quot;case-)&quot;</span><span class="hl opt">) (</span><span class="hl kwa">-</span> <span class="hl opt">(</span><span class="hl kwa">sh-var-value</span> <span class="hl opt">'</span>sh-indent-for-case-alt<span class="hl opt">)</span></div>
<div class="pre"><a id="l2078" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2078" class="linenr">2078 </a>                             <span class="hl opt">(</span><span class="hl kwa">sh-var-value</span> <span class="hl opt">'</span>sh-indent-for-case-label<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2079" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2079" class="linenr">2079 </a>    <span class="hl opt">(`(:</span>before . <span class="hl opt">,(</span><span class="hl kwa">or</span> <span class="hl opt">`</span><span class="hl str">&quot;(&quot;</span> <span class="hl opt">`</span><span class="hl str">&quot;{&quot;</span> <span class="hl opt">`</span><span class="hl str">&quot;[&quot;</span> <span class="hl str">&quot;while&quot;</span> <span class="hl str">&quot;if&quot;</span> <span class="hl str">&quot;for&quot;</span> <span class="hl str">&quot;case&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2080" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2080" class="linenr">2080 </a>     <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">smie-rule-prev-p</span> <span class="hl str">&quot;&amp;&amp;&quot;</span> <span class="hl str">&quot;||&quot;</span> <span class="hl str">&quot;|&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2081" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2081" class="linenr">2081 </a>         <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">smie-rule-hanging-p</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2082" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2082" class="linenr">2082 </a>           <span class="hl opt">(</span><span class="hl kwa">smie-rule-parent</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2083" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2083" class="linenr">2083 </a>       <span class="hl opt">(</span><span class="hl kwa">unless</span> <span class="hl opt">(</span><span class="hl kwa">smie-rule-bolp</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2084" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2084" class="linenr">2084 </a>         <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">equal</span> <span class="hl str">&quot;|&quot;</span> <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">2</span> <span class="hl opt">(</span><span class="hl kwa">smie-backward-sexp</span> <span class="hl opt">'</span>halfexp<span class="hl opt">))))</span></div>
<div class="pre"><a id="l2085" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2085" class="linenr">2085 </a>         <span class="hl opt">`(</span><span class="hl kwa">column</span> . <span class="hl opt">,(</span><span class="hl kwa">smie-indent-virtual</span><span class="hl opt">)))))</span></div>
<div class="pre"><a id="l2086" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2086" class="linenr">2086 </a>    <span class="hl slc">;; FIXME: Maybe this handling of ;; should be made into</span></div>
<div class="pre"><a id="l2087" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2087" class="linenr">2087 </a>    <span class="hl slc">;; a smie-rule-terminator function that takes the substitute &quot;;&quot; as arg.</span></div>
<div class="pre"><a id="l2088" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2088" class="linenr">2088 </a>    <span class="hl opt">(`(:</span>before . <span class="hl opt">,(</span><span class="hl kwa">or</span> <span class="hl opt">`</span><span class="hl str">&quot;;;&quot;</span> <span class="hl opt">`</span><span class="hl str">&quot;;&amp;&quot;</span> <span class="hl opt">`</span><span class="hl str">&quot;;;&amp;&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2089" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2089" class="linenr">2089 </a>     <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">smie-rule-bolp</span><span class="hl opt">) (</span><span class="hl kwa">looking-at</span> <span class="hl str">&quot;;;?&amp;?[</span> <span class="hl esc">\t</span><span class="hl str">]*</span><span class="hl esc">\\</span><span class="hl str">(#</span><span class="hl esc">\\</span><span class="hl str">|$</span><span class="hl esc">\\</span><span class="hl str">)&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2090" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2090" class="linenr">2090 </a>         <span class="hl opt">(</span><span class="hl kwa">cons</span> <span class="hl opt">'</span>column <span class="hl opt">(</span><span class="hl kwa">smie-indent-keyword</span> <span class="hl str">&quot;;&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2091" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2091" class="linenr">2091 </a>       <span class="hl opt">(</span><span class="hl kwa">smie-rule-separator</span> kind<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2092" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2092" class="linenr">2092 </a>    <span class="hl opt">(`(:</span>after . <span class="hl opt">,(</span><span class="hl kwa">or</span> <span class="hl opt">`</span><span class="hl str">&quot;;;&quot;</span> <span class="hl opt">`</span><span class="hl str">&quot;;&amp;&quot;</span> <span class="hl opt">`</span><span class="hl str">&quot;;;&amp;&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2093" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2093" class="linenr">2093 </a>     <span class="hl opt">(</span><span class="hl kwa">with-demoted-errors</span></div>
<div class="pre"><a id="l2094" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2094" class="linenr">2094 </a>       <span class="hl opt">(</span><span class="hl kwa">smie-backward-sexp</span> token<span class="hl opt">)</span></div>
<div class="pre"><a id="l2095" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2095" class="linenr">2095 </a>       <span class="hl opt">(</span><span class="hl kwa">cons</span> <span class="hl opt">'</span>column</div>
<div class="pre"><a id="l2096" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2096" class="linenr">2096 </a>             <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">smie-rule-bolp</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2097" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2097" class="linenr">2097 </a>                     <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l2098" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2098" class="linenr">2098 </a>                       <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">member</span> <span class="hl opt">(</span><span class="hl kwa">funcall</span> smie-backward-token-function<span class="hl opt">)</span></div>
<div class="pre"><a id="l2099" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2099" class="linenr">2099 </a>                                    <span class="hl opt">'(</span><span class="hl str">&quot;in&quot;</span> <span class="hl str">&quot;;;&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2100" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2100" class="linenr">2100 </a>                            <span class="hl opt">(</span><span class="hl kwa">smie-rule-bolp</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l2101" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2101" class="linenr">2101 </a>                 <span class="hl opt">(</span><span class="hl kwa">current-column</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2102" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2102" class="linenr">2102 </a>               <span class="hl opt">(</span><span class="hl kwa">smie-indent-calculate</span><span class="hl opt">)))))</span></div>
<div class="pre"><a id="l2103" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2103" class="linenr">2103 </a>    <span class="hl opt">(`(:</span>before . <span class="hl opt">,(</span><span class="hl kwa">or</span> <span class="hl opt">`</span><span class="hl str">&quot;|&quot;</span> <span class="hl opt">`</span><span class="hl str">&quot;&amp;&amp;&quot;</span> <span class="hl opt">`</span><span class="hl str">&quot;||&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2104" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2104" class="linenr">2104 </a>     <span class="hl opt">(</span><span class="hl kwa">unless</span> <span class="hl opt">(</span><span class="hl kwa">smie-rule-parent-p</span> token<span class="hl opt">)</span></div>
<div class="pre"><a id="l2105" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2105" class="linenr">2105 </a>       <span class="hl opt">(</span><span class="hl kwa">smie-backward-sexp</span> token<span class="hl opt">)</span></div>
<div class="pre"><a id="l2106" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2106" class="linenr">2106 </a>       <span class="hl opt">`(</span><span class="hl kwa">column</span> . <span class="hl opt">,(+ (</span><span class="hl kwa">funcall</span> smie-rules-function <span class="hl opt">:</span>elem <span class="hl opt">'</span>basic<span class="hl opt">)</span></div>
<div class="pre"><a id="l2107" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2107" class="linenr">2107 </a>                      <span class="hl opt">(</span><span class="hl kwa">smie-indent-virtual</span><span class="hl opt">)))))</span></div>
<div class="pre"><a id="l2108" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2108" class="linenr">2108 </a></div>
<div class="pre"><a id="l2109" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2109" class="linenr">2109 </a>    <span class="hl slc">;; Attempt at backward compatibility with the old config variables.</span></div>
<div class="pre"><a id="l2110" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2110" class="linenr">2110 </a>    <span class="hl opt">(`(:</span>before . <span class="hl str">&quot;fi&quot;</span><span class="hl opt">) (</span><span class="hl kwa">sh-var-value</span> <span class="hl opt">'</span>sh-indent-for-fi<span class="hl opt">))</span></div>
<div class="pre"><a id="l2111" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2111" class="linenr">2111 </a>    <span class="hl opt">(`(:</span>before . <span class="hl str">&quot;done&quot;</span><span class="hl opt">) (</span><span class="hl kwa">sh-var-value</span> <span class="hl opt">'</span>sh-indent-for-done<span class="hl opt">))</span></div>
<div class="pre"><a id="l2112" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2112" class="linenr">2112 </a>    <span class="hl opt">(`(:</span>after . <span class="hl str">&quot;else&quot;</span><span class="hl opt">) (</span><span class="hl kwa">sh-var-value</span> <span class="hl opt">'</span>sh-indent-after-else<span class="hl opt">))</span></div>
<div class="pre"><a id="l2113" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2113" class="linenr">2113 </a>    <span class="hl opt">(`(:</span>after . <span class="hl str">&quot;if&quot;</span><span class="hl opt">) (</span><span class="hl kwa">sh-var-value</span> <span class="hl opt">'</span>sh-indent-after-if<span class="hl opt">))</span></div>
<div class="pre"><a id="l2114" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2114" class="linenr">2114 </a>    <span class="hl opt">(`(:</span>before . <span class="hl str">&quot;then&quot;</span><span class="hl opt">) (</span><span class="hl kwa">sh-var-value</span> <span class="hl opt">'</span>sh-indent-for-then<span class="hl opt">))</span></div>
<div class="pre"><a id="l2115" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2115" class="linenr">2115 </a>    <span class="hl opt">(`(:</span>before . <span class="hl str">&quot;do&quot;</span><span class="hl opt">) (</span><span class="hl kwa">sh-var-value</span> <span class="hl opt">'</span>sh-indent-for-do<span class="hl opt">))</span></div>
<div class="pre"><a id="l2116" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2116" class="linenr">2116 </a>    <span class="hl opt">(`(:</span>after . <span class="hl str">&quot;do&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2117" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2117" class="linenr">2117 </a>     <span class="hl opt">(</span><span class="hl kwa">sh-var-value</span> <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">smie-rule-hanging-p</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2118" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2118" class="linenr">2118 </a>                       <span class="hl opt">'</span>sh-indent-after-loop-construct <span class="hl opt">'</span>sh-indent-after-do<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2119" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2119" class="linenr">2119 </a>    <span class="hl slc">;; sh-indent-after-done: aligned completely differently.</span></div>
<div class="pre"><a id="l2120" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2120" class="linenr">2120 </a>    <span class="hl opt">(`(:</span>after . <span class="hl str">&quot;in&quot;</span><span class="hl opt">) (</span><span class="hl kwa">sh-var-value</span> <span class="hl opt">'</span>sh-indent-for-case-label<span class="hl opt">))</span></div>
<div class="pre"><a id="l2121" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2121" class="linenr">2121 </a>    <span class="hl slc">;; sh-indent-for-continuation: Line continuations are handled differently.</span></div>
<div class="pre"><a id="l2122" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2122" class="linenr">2122 </a>    <span class="hl opt">(`(:</span>after . <span class="hl opt">,(</span><span class="hl kwa">or</span> <span class="hl opt">`</span><span class="hl str">&quot;(&quot;</span> <span class="hl opt">`</span><span class="hl str">&quot;{&quot;</span> <span class="hl opt">`</span><span class="hl str">&quot;[&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2123" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2123" class="linenr">2123 </a>     <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">looking-at</span> <span class="hl str">&quot;.[</span> <span class="hl esc">\t</span><span class="hl str">]*[^</span><span class="hl esc">\n \t</span><span class="hl str">#]&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2124" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2124" class="linenr">2124 </a>         <span class="hl opt">(</span><span class="hl kwa">sh-var-value</span> <span class="hl opt">'</span>sh-indent-after-open<span class="hl opt">)</span></div>
<div class="pre"><a id="l2125" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2125" class="linenr">2125 </a>       <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">1-</span> <span class="hl opt">(</span><span class="hl kwa">match-end</span> <span class="hl num">0</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2126" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2126" class="linenr">2126 </a>       <span class="hl opt">`(</span><span class="hl kwa">column</span> . <span class="hl opt">,(</span><span class="hl kwa">current-column</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l2127" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2127" class="linenr">2127 </a>    <span class="hl slc">;; sh-indent-after-function: we don't handle it differently.</span></div>
<div class="pre"><a id="l2128" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2128" class="linenr">2128 </a>    <span class="hl opt">))</span></div>
<div class="pre"><a id="l2129" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2129" class="linenr">2129 </a></div>
<div class="pre"><a id="l2130" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2130" class="linenr">2130 </a><span class="hl slc">;; (defconst sh-smie-csh-grammar</span></div>
<div class="pre"><a id="l2131" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2131" class="linenr">2131 </a><span class="hl slc">;;   (smie-prec2-&gt;grammar</span></div>
<div class="pre"><a id="l2132" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2132" class="linenr">2132 </a><span class="hl slc">;;    (smie-bnf-&gt;prec2</span></div>
<div class="pre"><a id="l2133" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2133" class="linenr">2133 </a><span class="hl slc">;;     '((exp)              ;A constant, or a $var, or a sequence of them...</span></div>
<div class="pre"><a id="l2134" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2134" class="linenr">2134 </a><span class="hl slc">;;       (elseifcmd (cmd)</span></div>
<div class="pre"><a id="l2135" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2135" class="linenr">2135 </a><span class="hl slc">;;                  (cmd &quot;else&quot; &quot;else-if&quot; exp &quot;then&quot; elseifcmd))</span></div>
<div class="pre"><a id="l2136" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2136" class="linenr">2136 </a><span class="hl slc">;;       (cmd (&quot;switch&quot; branches &quot;endsw&quot;)</span></div>
<div class="pre"><a id="l2137" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2137" class="linenr">2137 </a><span class="hl slc">;;            (&quot;if&quot; exp)</span></div>
<div class="pre"><a id="l2138" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2138" class="linenr">2138 </a><span class="hl slc">;;            (&quot;if&quot; exp &quot;then&quot; cmd &quot;endif&quot;)</span></div>
<div class="pre"><a id="l2139" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2139" class="linenr">2139 </a><span class="hl slc">;;            (&quot;if&quot; exp &quot;then&quot; cmd &quot;else&quot; cmd &quot;endif&quot;)</span></div>
<div class="pre"><a id="l2140" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2140" class="linenr">2140 </a><span class="hl slc">;;            (&quot;if&quot; exp &quot;then&quot; elseifcmd &quot;endif&quot;)</span></div>
<div class="pre"><a id="l2141" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2141" class="linenr">2141 </a><span class="hl slc">;;            ;; (&quot;if&quot; exp &quot;then&quot; cmd &quot;else&quot; cmd &quot;endif&quot;)</span></div>
<div class="pre"><a id="l2142" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2142" class="linenr">2142 </a><span class="hl slc">;;            ;; (&quot;if&quot; exp &quot;then&quot; cmd &quot;else&quot; &quot;if&quot; exp &quot;then&quot; cmd &quot;endif&quot;)</span></div>
<div class="pre"><a id="l2143" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2143" class="linenr">2143 </a><span class="hl slc">;;            ;; (&quot;if&quot; exp &quot;then&quot; cmd &quot;else&quot; &quot;if&quot; exp &quot;then&quot; cmd</span></div>
<div class="pre"><a id="l2144" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2144" class="linenr">2144 </a><span class="hl slc">;;            ;;                      &quot;else&quot; cmd &quot;endif&quot;)</span></div>
<div class="pre"><a id="l2145" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2145" class="linenr">2145 </a><span class="hl slc">;;            ;; (&quot;if&quot; exp &quot;then&quot; cmd &quot;else&quot; &quot;if&quot; exp &quot;then&quot; cmd</span></div>
<div class="pre"><a id="l2146" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2146" class="linenr">2146 </a><span class="hl slc">;;            ;;                      &quot;else&quot; &quot;if&quot; exp &quot;then&quot; cmd &quot;endif&quot;)</span></div>
<div class="pre"><a id="l2147" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2147" class="linenr">2147 </a><span class="hl slc">;;            (&quot;while&quot; cmd &quot;end&quot;)</span></div>
<div class="pre"><a id="l2148" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2148" class="linenr">2148 </a><span class="hl slc">;;            (&quot;foreach&quot; cmd &quot;end&quot;)</span></div>
<div class="pre"><a id="l2149" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2149" class="linenr">2149 </a><span class="hl slc">;;            (cmd &quot;|&quot; cmd) (cmd &quot;|&amp;&quot; cmd)</span></div>
<div class="pre"><a id="l2150" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2150" class="linenr">2150 </a><span class="hl slc">;;            (cmd &quot;&amp;&amp;&quot; cmd) (cmd &quot;||&quot; cmd)</span></div>
<div class="pre"><a id="l2151" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2151" class="linenr">2151 </a><span class="hl slc">;;            (cmd &quot;;&quot; cmd) (cmd &quot;&amp;&quot; cmd))</span></div>
<div class="pre"><a id="l2152" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2152" class="linenr">2152 </a><span class="hl slc">;;       ;; This is a lie, but (combined with the corresponding disambiguation</span></div>
<div class="pre"><a id="l2153" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2153" class="linenr">2153 </a><span class="hl slc">;;       ;; rule) it makes it more clear that `case' and `default' are the key</span></div>
<div class="pre"><a id="l2154" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2154" class="linenr">2154 </a><span class="hl slc">;;       ;; separators and the `:' is a secondary tokens.</span></div>
<div class="pre"><a id="l2155" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2155" class="linenr">2155 </a><span class="hl slc">;;       (branches (branches &quot;case&quot; branches)</span></div>
<div class="pre"><a id="l2156" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2156" class="linenr">2156 </a><span class="hl slc">;;                 (branches &quot;default&quot; branches)</span></div>
<div class="pre"><a id="l2157" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2157" class="linenr">2157 </a><span class="hl slc">;;                 (exp &quot;:&quot; branches)))</span></div>
<div class="pre"><a id="l2158" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2158" class="linenr">2158 </a><span class="hl slc">;;     '((assoc &quot;else&quot; &quot;then&quot; &quot;endif&quot;))</span></div>
<div class="pre"><a id="l2159" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2159" class="linenr">2159 </a><span class="hl slc">;;     '((assoc &quot;case&quot; &quot;default&quot;) (nonassoc &quot;:&quot;))</span></div>
<div class="pre"><a id="l2160" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2160" class="linenr">2160 </a><span class="hl slc">;;     '((assoc &quot;;;&quot; &quot;;&amp;&quot; &quot;;;&amp;&quot;))</span></div>
<div class="pre"><a id="l2161" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2161" class="linenr">2161 </a><span class="hl slc">;;     '((assoc &quot;;&quot; &quot;&amp;&quot;) (assoc &quot;&amp;&amp;&quot; &quot;||&quot;) (assoc &quot;|&quot; &quot;|&amp;&quot;)))))</span></div>
<div class="pre"><a id="l2162" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2162" class="linenr">2162 </a></div>
<div class="pre"><a id="l2163" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2163" class="linenr">2163 </a><span class="hl slc">;;;; SMIE support for `rc'.</span></div>
<div class="pre"><a id="l2164" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2164" class="linenr">2164 </a></div>
<div class="pre"><a id="l2165" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2165" class="linenr">2165 </a><span class="hl opt">(</span><span class="hl kwa">defconst</span> sh-smie-rc-grammar</div>
<div class="pre"><a id="l2166" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2166" class="linenr">2166 </a>  <span class="hl opt">(</span><span class="hl kwa">smie-prec2-</span><span class="hl opt">&gt;</span>grammar</div>
<div class="pre"><a id="l2167" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2167" class="linenr">2167 </a>   <span class="hl opt">(</span><span class="hl kwa">smie-bnf-</span><span class="hl opt">&gt;</span>prec2</div>
<div class="pre"><a id="l2168" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2168" class="linenr">2168 </a>    <span class="hl opt">'((</span><span class="hl kwa">exp</span><span class="hl opt">)</span>                    <span class="hl slc">;A constant, or a $var, or a sequence of them...</span></div>
<div class="pre"><a id="l2169" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2169" class="linenr">2169 </a>      <span class="hl opt">(</span><span class="hl kwa">cmd</span> <span class="hl opt">(</span><span class="hl kwa">cmd</span> <span class="hl str">&quot;case&quot;</span> cmd<span class="hl opt">)</span></div>
<div class="pre"><a id="l2170" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2170" class="linenr">2170 </a>           <span class="hl opt">(</span><span class="hl str">&quot;if&quot;</span> exp<span class="hl opt">)</span></div>
<div class="pre"><a id="l2171" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2171" class="linenr">2171 </a>           <span class="hl opt">(</span><span class="hl str">&quot;switch&quot;</span> exp<span class="hl opt">)</span></div>
<div class="pre"><a id="l2172" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2172" class="linenr">2172 </a>           <span class="hl opt">(</span><span class="hl str">&quot;for&quot;</span> exp<span class="hl opt">) (</span><span class="hl str">&quot;while&quot;</span> exp<span class="hl opt">)</span></div>
<div class="pre"><a id="l2173" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2173" class="linenr">2173 </a>           <span class="hl opt">(</span><span class="hl kwa">cmd</span> <span class="hl str">&quot;|&quot;</span> cmd<span class="hl opt">) (</span><span class="hl kwa">cmd</span> <span class="hl str">&quot;|&amp;&quot;</span> cmd<span class="hl opt">)</span></div>
<div class="pre"><a id="l2174" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2174" class="linenr">2174 </a>           <span class="hl opt">(</span><span class="hl kwa">cmd</span> <span class="hl str">&quot;&amp;&amp;&quot;</span> cmd<span class="hl opt">) (</span><span class="hl kwa">cmd</span> <span class="hl str">&quot;||&quot;</span> cmd<span class="hl opt">)</span></div>
<div class="pre"><a id="l2175" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2175" class="linenr">2175 </a>           <span class="hl opt">(</span><span class="hl kwa">cmd</span> <span class="hl str">&quot;;&quot;</span> cmd<span class="hl opt">) (</span><span class="hl kwa">cmd</span> <span class="hl str">&quot;&amp;&quot;</span> cmd<span class="hl opt">))</span></div>
<div class="pre"><a id="l2176" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2176" class="linenr">2176 </a>      <span class="hl opt">(</span><span class="hl kwa">pattern</span> <span class="hl opt">(</span><span class="hl kwa">pattern</span> <span class="hl str">&quot;|&quot;</span> pattern<span class="hl opt">))</span></div>
<div class="pre"><a id="l2177" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2177" class="linenr">2177 </a>      <span class="hl opt">(</span><span class="hl kwa">branches</span> <span class="hl opt">(</span><span class="hl kwa">branches</span> <span class="hl str">&quot;;;&quot;</span> branches<span class="hl opt">)</span></div>
<div class="pre"><a id="l2178" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2178" class="linenr">2178 </a>                <span class="hl opt">(</span><span class="hl kwa">branches</span> <span class="hl str">&quot;;&amp;&quot;</span> branches<span class="hl opt">) (</span><span class="hl kwa">branches</span> <span class="hl str">&quot;;;&amp;&quot;</span> branches<span class="hl opt">)</span> <span class="hl slc">;bash.</span></div>
<div class="pre"><a id="l2179" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2179" class="linenr">2179 </a>                <span class="hl opt">(</span><span class="hl kwa">pattern</span> <span class="hl str">&quot;case-)&quot;</span> cmd<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2180" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2180" class="linenr">2180 </a>    <span class="hl opt">'((</span><span class="hl kwa">assoc</span> <span class="hl str">&quot;;;&quot;</span> <span class="hl str">&quot;;&amp;&quot;</span> <span class="hl str">&quot;;;&amp;&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2181" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2181" class="linenr">2181 </a>    <span class="hl opt">'((</span><span class="hl kwa">assoc</span> <span class="hl str">&quot;case&quot;</span><span class="hl opt">) (</span><span class="hl kwa">assoc</span> <span class="hl str">&quot;;&quot;</span> <span class="hl str">&quot;&amp;&quot;</span><span class="hl opt">) (</span><span class="hl kwa">assoc</span> <span class="hl str">&quot;&amp;&amp;&quot;</span> <span class="hl str">&quot;||&quot;</span><span class="hl opt">) (</span><span class="hl kwa">assoc</span> <span class="hl str">&quot;|&quot;</span> <span class="hl str">&quot;|&amp;&quot;</span><span class="hl opt">)))))</span></div>
<div class="pre"><a id="l2182" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2182" class="linenr">2182 </a></div>
<div class="pre"><a id="l2183" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2183" class="linenr">2183 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-smie--rc-after-special-arg-p <span class="hl opt">()</span></div>
<div class="pre"><a id="l2184" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2184" class="linenr">2184 </a>  <span class="hl str">&quot;Check if we're after the first arg of an if/while/for/... construct.</span></div>
<div class="pre"><a id="l2185" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2185" class="linenr">2185 </a><span class="hl str">Returns the construct's token and moves point before it, if so.&quot;</span></div>
<div class="pre"><a id="l2186" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2186" class="linenr">2186 </a>  <span class="hl opt">(</span><span class="hl kwa">forward-comment</span> <span class="hl opt">(</span><span class="hl kwa">-</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2187" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2187" class="linenr">2187 </a>  <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">looking-back</span> <span class="hl str">&quot;)</span><span class="hl esc">\\</span><span class="hl str">|</span><span class="hl esc">\\</span><span class="hl str">_&lt;not&quot;</span> <span class="hl opt">(</span><span class="hl kwa">-</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)</span> <span class="hl num">3</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2188" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2188" class="linenr">2188 </a>    <span class="hl opt">(</span><span class="hl kwa">ignore-errors</span></div>
<div class="pre"><a id="l2189" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2189" class="linenr">2189 </a>      <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">forward-sexp-function</span> nil<span class="hl opt">))</span></div>
<div class="pre"><a id="l2190" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2190" class="linenr">2190 </a>        <span class="hl opt">(</span><span class="hl kwa">forward-sexp</span> -<span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2191" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2191" class="linenr">2191 </a>        <span class="hl opt">(</span><span class="hl kwa">car</span> <span class="hl opt">(</span><span class="hl kwa">member</span> <span class="hl opt">(</span><span class="hl kwa">funcall</span> smie-backward-token-function<span class="hl opt">)</span></div>
<div class="pre"><a id="l2192" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2192" class="linenr">2192 </a>                     <span class="hl opt">'(</span><span class="hl str">&quot;if&quot;</span> <span class="hl str">&quot;for&quot;</span> <span class="hl str">&quot;switch&quot;</span> <span class="hl str">&quot;while&quot;</span><span class="hl opt">)))))))</span></div>
<div class="pre"><a id="l2193" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2193" class="linenr">2193 </a></div>
<div class="pre"><a id="l2194" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2194" class="linenr">2194 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-smie--rc-newline-semi-p <span class="hl opt">()</span></div>
<div class="pre"><a id="l2195" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2195" class="linenr">2195 </a>  <span class="hl str">&quot;Return non-nil if a newline should be treated as a semi-colon.</span></div>
<div class="pre"><a id="l2196" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2196" class="linenr">2196 </a><span class="hl str">Point should be before the newline.&quot;</span></div>
<div class="pre"><a id="l2197" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2197" class="linenr">2197 </a>  <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l2198" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2198" class="linenr">2198 </a>    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">tok</span> <span class="hl opt">(</span><span class="hl kwa">funcall</span> smie-backward-token-function<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2199" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2199" class="linenr">2199 </a>      <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">equal</span> tok <span class="hl str">&quot;not&quot;</span><span class="hl opt">) (</span><span class="hl kwa">forward-word-strictly</span> <span class="hl num">1</span><span class="hl opt">)</span> t<span class="hl opt">)</span></div>
<div class="pre"><a id="l2200" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2200" class="linenr">2200 </a>              <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">zerop</span> <span class="hl opt">(</span><span class="hl kwa">length</span> tok<span class="hl opt">)) (</span><span class="hl kwa">eq</span> <span class="hl opt">(</span><span class="hl kwa">char-before</span><span class="hl opt">)</span> ?\<span class="hl opt">))))</span></div>
<div class="pre"><a id="l2201" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2201" class="linenr">2201 </a>          <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">sh-smie--rc-after-special-arg-p</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2202" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2202" class="linenr">2202 </a>        <span class="hl opt">(</span><span class="hl kwa">sh-smie--newline-semi-p</span> tok<span class="hl opt">)))))</span></div>
<div class="pre"><a id="l2203" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2203" class="linenr">2203 </a></div>
<div class="pre"><a id="l2204" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2204" class="linenr">2204 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-smie-rc-forward-token <span class="hl opt">()</span></div>
<div class="pre"><a id="l2205" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2205" class="linenr">2205 </a>  <span class="hl slc">;; FIXME: Code duplication with sh-smie-sh-forward-token.</span></div>
<div class="pre"><a id="l2206" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2206" class="linenr">2206 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">looking-at</span> <span class="hl str">&quot;[</span> <span class="hl esc">\t</span><span class="hl str">]*</span><span class="hl esc">\\</span><span class="hl str">(?:#</span><span class="hl esc">\\</span><span class="hl str">|</span><span class="hl esc">\\</span><span class="hl str">(</span><span class="hl esc">\\</span><span class="hl str">s|</span><span class="hl esc">\\</span><span class="hl str">)</span><span class="hl esc">\\</span><span class="hl str">|$</span><span class="hl esc">\\</span><span class="hl str">)&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2207" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2207" class="linenr">2207 </a>           <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l2208" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2208" class="linenr">2208 </a>             <span class="hl opt">(</span><span class="hl kwa">skip-chars-backward</span> <span class="hl str">&quot;</span> <span class="hl esc">\t</span><span class="hl str">&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2209" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2209" class="linenr">2209 </a>             <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">bolp</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l2210" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2210" class="linenr">2210 </a>      <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">match-end</span> <span class="hl num">1</span><span class="hl opt">) (</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">3</span> <span class="hl opt">(</span><span class="hl kwa">syntax-ppss</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l2211" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2211" class="linenr">2211 </a>          <span class="hl slc">;; Right before a here-doc.</span></div>
<div class="pre"><a id="l2212" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2212" class="linenr">2212 </a>          <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">forward-sexp-function</span> nil<span class="hl opt">))</span></div>
<div class="pre"><a id="l2213" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2213" class="linenr">2213 </a>            <span class="hl opt">(</span><span class="hl kwa">forward-sexp</span> <span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2214" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2214" class="linenr">2214 </a>            <span class="hl slc">;; Pretend the here-document is a &quot;newline representing a</span></div>
<div class="pre"><a id="l2215" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2215" class="linenr">2215 </a>            <span class="hl slc">;; semi-colon&quot;, since the here-doc otherwise covers the newline(s).</span></div>
<div class="pre"><a id="l2216" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2216" class="linenr">2216 </a>            <span class="hl str">&quot;;&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2217" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2217" class="linenr">2217 </a>        <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">semi</span> <span class="hl opt">(</span><span class="hl kwa">sh-smie--rc-newline-semi-p</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2218" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2218" class="linenr">2218 </a>          <span class="hl opt">(</span><span class="hl kwa">forward-line</span> <span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2219" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2219" class="linenr">2219 </a>          <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">or</span> semi <span class="hl opt">(</span><span class="hl kwa">eobp</span><span class="hl opt">))</span> <span class="hl str">&quot;;&quot;</span></div>
<div class="pre"><a id="l2220" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2220" class="linenr">2220 </a>            <span class="hl opt">(</span><span class="hl kwa">sh-smie-rc-forward-token</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l2221" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2221" class="linenr">2221 </a>    <span class="hl opt">(</span><span class="hl kwa">forward-comment</span> <span class="hl opt">(</span><span class="hl kwa">point-max</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2222" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2222" class="linenr">2222 </a>    <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l2223" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2223" class="linenr">2223 </a>     <span class="hl opt">((</span><span class="hl kwa">looking-at</span> <span class="hl str">&quot;</span><span class="hl esc">\\\\\n</span><span class="hl str">&quot;</span><span class="hl opt">) (</span><span class="hl kwa">forward-line</span> <span class="hl num">1</span><span class="hl opt">) (</span><span class="hl kwa">sh-smie-rc-forward-token</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2224" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2224" class="linenr">2224 </a>     <span class="hl slc">;; ((looking-at sh-smie--rc-operators-re)</span></div>
<div class="pre"><a id="l2225" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2225" class="linenr">2225 </a>     <span class="hl slc">;;  (goto-char (match-end 0))</span></div>
<div class="pre"><a id="l2226" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2226" class="linenr">2226 </a>     <span class="hl slc">;;  (let ((tok (match-string-no-properties 0)))</span></div>
<div class="pre"><a id="l2227" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2227" class="linenr">2227 </a>     <span class="hl slc">;;    (if (and (memq (aref tok (1- (length tok))) '(?\; ?\&amp; ?\|))</span></div>
<div class="pre"><a id="l2228" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2228" class="linenr">2228 </a>     <span class="hl slc">;;             (looking-at &quot;[ \t]*\\(?:#\\|$\\)&quot;))</span></div>
<div class="pre"><a id="l2229" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2229" class="linenr">2229 </a>     <span class="hl slc">;;        (forward-line 1))</span></div>
<div class="pre"><a id="l2230" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2230" class="linenr">2230 </a>     <span class="hl slc">;;    tok))</span></div>
<div class="pre"><a id="l2231" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2231" class="linenr">2231 </a>     <span class="hl opt">(</span><span class="hl kwa">t</span></div>
<div class="pre"><a id="l2232" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2232" class="linenr">2232 </a>      <span class="hl opt">(</span><span class="hl kwa">let</span><span class="hl opt">* ((</span><span class="hl kwa">pos</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2233" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2233" class="linenr">2233 </a>             <span class="hl opt">(</span><span class="hl kwa">tok</span> <span class="hl opt">(</span><span class="hl kwa">sh-smie--default-forward-token</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2234" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2234" class="linenr">2234 </a>        <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l2235" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2235" class="linenr">2235 </a>         <span class="hl slc">;; ((equal tok &quot;)&quot;) &quot;case-)&quot;)</span></div>
<div class="pre"><a id="l2236" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2236" class="linenr">2236 </a>         <span class="hl opt">((</span><span class="hl kwa">and</span> tok <span class="hl opt">(</span><span class="hl kwa">string-match</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">`[a-z]&quot;</span> tok<span class="hl opt">)</span></div>
<div class="pre"><a id="l2237" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2237" class="linenr">2237 </a>               <span class="hl opt">(</span><span class="hl kwa">assoc</span> tok smie-grammar<span class="hl opt">)</span></div>
<div class="pre"><a id="l2238" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2238" class="linenr">2238 </a>               <span class="hl opt">(</span><span class="hl kwa">not</span></div>
<div class="pre"><a id="l2239" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2239" class="linenr">2239 </a>                <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l2240" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2240" class="linenr">2240 </a>                  <span class="hl opt">(</span><span class="hl kwa">goto-char</span> pos<span class="hl opt">)</span></div>
<div class="pre"><a id="l2241" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2241" class="linenr">2241 </a>                  <span class="hl opt">(</span><span class="hl kwa">sh-smie--keyword-p</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l2242" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2242" class="linenr">2242 </a>          <span class="hl str">&quot; word &quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2243" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2243" class="linenr">2243 </a>         <span class="hl opt">(</span><span class="hl kwa">t</span> tok<span class="hl opt">)))))))</span></div>
<div class="pre"><a id="l2244" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2244" class="linenr">2244 </a></div>
<div class="pre"><a id="l2245" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2245" class="linenr">2245 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-smie-rc-backward-token <span class="hl opt">()</span></div>
<div class="pre"><a id="l2246" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2246" class="linenr">2246 </a>  <span class="hl slc">;; FIXME: Code duplication with sh-smie-sh-backward-token.</span></div>
<div class="pre"><a id="l2247" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2247" class="linenr">2247 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">bol</span> <span class="hl opt">(</span><span class="hl kwa">line-beginning-position</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2248" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2248" class="linenr">2248 </a>    <span class="hl opt">(</span><span class="hl kwa">forward-comment</span> <span class="hl opt">(</span><span class="hl kwa">-</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2249" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2249" class="linenr">2249 </a>    <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l2250" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2250" class="linenr">2250 </a>     <span class="hl opt">((</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">bolp</span><span class="hl opt">) (</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">bobp</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2251" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2251" class="linenr">2251 </a>           <span class="hl opt">(</span><span class="hl kwa">equal</span> <span class="hl opt">(</span><span class="hl kwa">syntax-after</span> <span class="hl opt">(</span><span class="hl kwa">1-</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))) (</span><span class="hl kwa">string-to-syntax</span> <span class="hl str">&quot;|&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2252" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2252" class="linenr">2252 </a>           <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">3</span> <span class="hl opt">(</span><span class="hl kwa">syntax-ppss</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l2253" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2253" class="linenr">2253 </a>      <span class="hl slc">;; Right after a here-document.</span></div>
<div class="pre"><a id="l2254" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2254" class="linenr">2254 </a>      <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">forward-sexp-function</span> nil<span class="hl opt">))</span></div>
<div class="pre"><a id="l2255" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2255" class="linenr">2255 </a>        <span class="hl opt">(</span><span class="hl kwa">forward-sexp</span> -<span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2256" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2256" class="linenr">2256 </a>        <span class="hl slc">;; Pretend the here-document is a &quot;newline representing a</span></div>
<div class="pre"><a id="l2257" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2257" class="linenr">2257 </a>        <span class="hl slc">;; semi-colon&quot;, since the here-doc otherwise covers the newline(s).</span></div>
<div class="pre"><a id="l2258" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2258" class="linenr">2258 </a>        <span class="hl str">&quot;;&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2259" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2259" class="linenr">2259 </a>     <span class="hl opt">((&lt; (</span><span class="hl kwa">point</span><span class="hl opt">)</span> bol<span class="hl opt">)</span>                   <span class="hl slc">;We skipped over a newline.</span></div>
<div class="pre"><a id="l2260" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2260" class="linenr">2260 </a>      <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l2261" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2261" class="linenr">2261 </a>       <span class="hl slc">;; A continued line.</span></div>
<div class="pre"><a id="l2262" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2262" class="linenr">2262 </a>       <span class="hl opt">((</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">eolp</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2263" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2263" class="linenr">2263 </a>             <span class="hl opt">(</span><span class="hl kwa">looking-back</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">(?:^</span><span class="hl esc">\\</span><span class="hl str">|[^</span><span class="hl esc">\\</span><span class="hl str">]</span><span class="hl esc">\\</span><span class="hl str">)</span><span class="hl esc">\\</span><span class="hl str">(?:</span><span class="hl esc">\\\\\\\\\\</span><span class="hl str">)*</span><span class="hl esc">\\\\</span><span class="hl str">&quot;</span></div>
<div class="pre"><a id="l2264" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2264" class="linenr">2264 </a>                           <span class="hl opt">(</span><span class="hl kwa">line-beginning-position</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2265" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2265" class="linenr">2265 </a>        <span class="hl opt">(</span><span class="hl kwa">forward-char</span> -<span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2266" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2266" class="linenr">2266 </a>        <span class="hl opt">(</span><span class="hl kwa">funcall</span> smie-backward-token-function<span class="hl opt">))</span></div>
<div class="pre"><a id="l2267" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2267" class="linenr">2267 </a>       <span class="hl opt">((</span><span class="hl kwa">sh-smie--rc-newline-semi-p</span><span class="hl opt">)</span> <span class="hl str">&quot;;&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2268" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2268" class="linenr">2268 </a>       <span class="hl opt">(</span><span class="hl kwa">t</span> <span class="hl opt">(</span><span class="hl kwa">funcall</span> smie-backward-token-function<span class="hl opt">))))</span></div>
<div class="pre"><a id="l2269" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2269" class="linenr">2269 </a>     <span class="hl slc">;; ((looking-back sh-smie--sh-operators-back-re</span></div>
<div class="pre"><a id="l2270" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2270" class="linenr">2270 </a>     <span class="hl slc">;;                (line-beginning-position) 'greedy)</span></div>
<div class="pre"><a id="l2271" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2271" class="linenr">2271 </a>     <span class="hl slc">;;  (goto-char (match-beginning 1))</span></div>
<div class="pre"><a id="l2272" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2272" class="linenr">2272 </a>     <span class="hl slc">;;  (match-string-no-properties 1))</span></div>
<div class="pre"><a id="l2273" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2273" class="linenr">2273 </a>     <span class="hl opt">(</span><span class="hl kwa">t</span></div>
<div class="pre"><a id="l2274" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2274" class="linenr">2274 </a>      <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">tok</span> <span class="hl opt">(</span><span class="hl kwa">sh-smie--default-backward-token</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2275" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2275" class="linenr">2275 </a>        <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l2276" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2276" class="linenr">2276 </a>         <span class="hl slc">;; ((equal tok &quot;)&quot;) &quot;case-)&quot;)</span></div>
<div class="pre"><a id="l2277" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2277" class="linenr">2277 </a>         <span class="hl opt">((</span><span class="hl kwa">and</span> tok <span class="hl opt">(</span><span class="hl kwa">string-match</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">`[a-z]&quot;</span> tok<span class="hl opt">)</span></div>
<div class="pre"><a id="l2278" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2278" class="linenr">2278 </a>               <span class="hl opt">(</span><span class="hl kwa">assoc</span> tok smie-grammar<span class="hl opt">)</span></div>
<div class="pre"><a id="l2279" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2279" class="linenr">2279 </a>               <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">save-excursion</span> <span class="hl opt">(</span><span class="hl kwa">sh-smie--keyword-p</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l2280" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2280" class="linenr">2280 </a>          <span class="hl str">&quot; word &quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2281" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2281" class="linenr">2281 </a>         <span class="hl opt">(</span><span class="hl kwa">t</span> tok<span class="hl opt">)))))))</span></div>
<div class="pre"><a id="l2282" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2282" class="linenr">2282 </a></div>
<div class="pre"><a id="l2283" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2283" class="linenr">2283 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-smie-rc-rules <span class="hl opt">(</span><span class="hl kwa">kind</span> token<span class="hl opt">)</span></div>
<div class="pre"><a id="l2284" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2284" class="linenr">2284 </a>  <span class="hl opt">(</span><span class="hl kwa">pcase</span> <span class="hl opt">(</span><span class="hl kwa">cons</span> kind token<span class="hl opt">)</span></div>
<div class="pre"><a id="l2285" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2285" class="linenr">2285 </a>    <span class="hl opt">(`(:</span>elem . basic<span class="hl opt">)</span> sh-indentation<span class="hl opt">)</span></div>
<div class="pre"><a id="l2286" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2286" class="linenr">2286 </a>    <span class="hl slc">;; (`(:after . &quot;case&quot;) (or sh-indentation smie-indent-basic))</span></div>
<div class="pre"><a id="l2287" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2287" class="linenr">2287 </a>    <span class="hl opt">(`(:</span>after . <span class="hl str">&quot;;&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2288" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2288" class="linenr">2288 </a>     <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">smie-rule-parent-p</span> <span class="hl str">&quot;case&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2289" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2289" class="linenr">2289 </a>         <span class="hl opt">(</span><span class="hl kwa">smie-rule-parent</span> <span class="hl opt">(</span><span class="hl kwa">sh-var-value</span> <span class="hl opt">'</span>sh-indent-after-case<span class="hl opt">))))</span></div>
<div class="pre"><a id="l2290" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2290" class="linenr">2290 </a>    <span class="hl opt">(`(:</span>before . <span class="hl str">&quot;{&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2291" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2291" class="linenr">2291 </a>     <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l2292" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2292" class="linenr">2292 </a>       <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">sh-smie--rc-after-special-arg-p</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2293" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2293" class="linenr">2293 </a>         <span class="hl opt">`(</span><span class="hl kwa">column</span> . <span class="hl opt">,(</span><span class="hl kwa">current-column</span><span class="hl opt">)))))</span></div>
<div class="pre"><a id="l2294" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2294" class="linenr">2294 </a>    <span class="hl opt">(`(:</span>before . <span class="hl opt">,(</span><span class="hl kwa">or</span> <span class="hl opt">`</span><span class="hl str">&quot;(&quot;</span> <span class="hl opt">`</span><span class="hl str">&quot;{&quot;</span> <span class="hl opt">`</span><span class="hl str">&quot;[&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2295" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2295" class="linenr">2295 </a>     <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">smie-rule-hanging-p</span><span class="hl opt">) (</span><span class="hl kwa">smie-rule-parent</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2296" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2296" class="linenr">2296 </a>    <span class="hl slc">;; FIXME: SMIE parses &quot;if (exp) cmd&quot; as &quot;(if ((exp) cmd))&quot; so &quot;cmd&quot; is</span></div>
<div class="pre"><a id="l2297" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2297" class="linenr">2297 </a>    <span class="hl slc">;; treated as an arg to (exp) by default, which indents it all wrong.</span></div>
<div class="pre"><a id="l2298" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2298" class="linenr">2298 </a>    <span class="hl slc">;; To handle it right, we should extend smie-indent-exps so that the</span></div>
<div class="pre"><a id="l2299" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2299" class="linenr">2299 </a>    <span class="hl slc">;; preceding keyword can give special rules.  Currently the only special</span></div>
<div class="pre"><a id="l2300" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2300" class="linenr">2300 </a>    <span class="hl slc">;; rule we have is the :list-intro hack, which we use here to align &quot;cmd&quot;</span></div>
<div class="pre"><a id="l2301" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2301" class="linenr">2301 </a>    <span class="hl slc">;; with &quot;(exp)&quot;, which is rarely the right thing to do, but is better</span></div>
<div class="pre"><a id="l2302" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2302" class="linenr">2302 </a>    <span class="hl slc">;; than nothing.</span></div>
<div class="pre"><a id="l2303" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2303" class="linenr">2303 </a>    <span class="hl opt">(`(:</span>list-intro . <span class="hl opt">,(</span><span class="hl kwa">or</span> <span class="hl opt">`</span><span class="hl str">&quot;for&quot;</span> <span class="hl opt">`</span><span class="hl str">&quot;if&quot;</span> <span class="hl opt">`</span><span class="hl str">&quot;while&quot;</span><span class="hl opt">))</span> t<span class="hl opt">)</span></div>
<div class="pre"><a id="l2304" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2304" class="linenr">2304 </a>    <span class="hl slc">;; sh-indent-after-switch: handled implicitly by the default { rule.</span></div>
<div class="pre"><a id="l2305" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2305" class="linenr">2305 </a>    <span class="hl opt">))</span></div>
<div class="pre"><a id="l2306" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2306" class="linenr">2306 </a></div>
<div class="pre"><a id="l2307" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2307" class="linenr">2307 </a><span class="hl slc">;;; End of SMIE code.</span></div>
<div class="pre"><a id="l2308" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2308" class="linenr">2308 </a></div>
<div class="pre"><a id="l2309" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2309" class="linenr">2309 </a><span class="hl opt">(</span><span class="hl kwa">defvar</span> sh-regexp-for-done nil</div>
<div class="pre"><a id="l2310" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2310" class="linenr">2310 </a>  <span class="hl str">&quot;A buffer-local regexp to match opening keyword for done.&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2311" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2311" class="linenr">2311 </a></div>
<div class="pre"><a id="l2312" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2312" class="linenr">2312 </a><span class="hl opt">(</span><span class="hl kwa">defvar</span> sh-kw-alist nil</div>
<div class="pre"><a id="l2313" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2313" class="linenr">2313 </a>  <span class="hl str">&quot;A buffer-local, since it is shell-type dependent, list of keywords.&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2314" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2314" class="linenr">2314 </a></div>
<div class="pre"><a id="l2315" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2315" class="linenr">2315 </a><span class="hl slc">;; ( key-word  first-on-this  on-prev-line )</span></div>
<div class="pre"><a id="l2316" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2316" class="linenr">2316 </a><span class="hl slc">;; This is used to set `sh-kw-alist' which is a list of sublists each</span></div>
<div class="pre"><a id="l2317" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2317" class="linenr">2317 </a><span class="hl slc">;; having 3 elements:</span></div>
<div class="pre"><a id="l2318" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2318" class="linenr">2318 </a><span class="hl slc">;;   a keyword</span></div>
<div class="pre"><a id="l2319" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2319" class="linenr">2319 </a><span class="hl slc">;;   a rule to check when the keyword appears on &quot;this&quot; line</span></div>
<div class="pre"><a id="l2320" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2320" class="linenr">2320 </a><span class="hl slc">;;   a rule to check when the keyword appears on &quot;the previous&quot; line</span></div>
<div class="pre"><a id="l2321" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2321" class="linenr">2321 </a><span class="hl slc">;; The keyword is usually a string and is the first word on a line.</span></div>
<div class="pre"><a id="l2322" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2322" class="linenr">2322 </a><span class="hl slc">;; If this keyword appears on the line whose indentation is to be</span></div>
<div class="pre"><a id="l2323" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2323" class="linenr">2323 </a><span class="hl slc">;; calculated, the rule in element 2 is called.  If this returns</span></div>
<div class="pre"><a id="l2324" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2324" class="linenr">2324 </a><span class="hl slc">;; non-zero, the resulting point (which may be changed by the rule)</span></div>
<div class="pre"><a id="l2325" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2325" class="linenr">2325 </a><span class="hl slc">;; is used as the default indentation.</span></div>
<div class="pre"><a id="l2326" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2326" class="linenr">2326 </a><span class="hl slc">;; If it returned false or the keyword was not found in the table,</span></div>
<div class="pre"><a id="l2327" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2327" class="linenr">2327 </a><span class="hl slc">;; then the keyword from the previous line is looked up and the rule</span></div>
<div class="pre"><a id="l2328" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2328" class="linenr">2328 </a><span class="hl slc">;; in element 3 is called.  In this case, however,</span></div>
<div class="pre"><a id="l2329" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2329" class="linenr">2329 </a><span class="hl slc">;; `sh-get-indent-info' does not stop but may keep going and test</span></div>
<div class="pre"><a id="l2330" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2330" class="linenr">2330 </a><span class="hl slc">;; other keywords against rules in element 3.  This is because the</span></div>
<div class="pre"><a id="l2331" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2331" class="linenr">2331 </a><span class="hl slc">;; preceding line could have, for example, an opening &quot;if&quot; and an</span></div>
<div class="pre"><a id="l2332" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2332" class="linenr">2332 </a><span class="hl slc">;; opening &quot;while&quot; keyword and we need to add the indentation offsets</span></div>
<div class="pre"><a id="l2333" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2333" class="linenr">2333 </a><span class="hl slc">;; for both.</span></div>
<div class="pre"><a id="l2334" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2334" class="linenr">2334 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l2335" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2335" class="linenr">2335 </a><span class="hl opt">(</span><span class="hl kwa">defconst</span> sh-kw</div>
<div class="pre"><a id="l2336" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2336" class="linenr">2336 </a>  <span class="hl opt">'((</span><span class="hl kwa">sh</span></div>
<div class="pre"><a id="l2337" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2337" class="linenr">2337 </a>     <span class="hl opt">(</span><span class="hl str">&quot;if&quot;</span> nil sh-handle-prev-if<span class="hl opt">)</span></div>
<div class="pre"><a id="l2338" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2338" class="linenr">2338 </a>     <span class="hl opt">(</span><span class="hl str">&quot;elif&quot;</span> sh-handle-this-else sh-handle-prev-else<span class="hl opt">)</span></div>
<div class="pre"><a id="l2339" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2339" class="linenr">2339 </a>     <span class="hl opt">(</span><span class="hl str">&quot;else&quot;</span> sh-handle-this-else sh-handle-prev-else<span class="hl opt">)</span></div>
<div class="pre"><a id="l2340" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2340" class="linenr">2340 </a>     <span class="hl opt">(</span><span class="hl str">&quot;fi&quot;</span> sh-handle-this-fi sh-handle-prev-fi<span class="hl opt">)</span></div>
<div class="pre"><a id="l2341" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2341" class="linenr">2341 </a>     <span class="hl opt">(</span><span class="hl str">&quot;then&quot;</span> sh-handle-this-then sh-handle-prev-then<span class="hl opt">)</span></div>
<div class="pre"><a id="l2342" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2342" class="linenr">2342 </a>     <span class="hl opt">(</span><span class="hl str">&quot;(&quot;</span> nil sh-handle-prev-open<span class="hl opt">)</span></div>
<div class="pre"><a id="l2343" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2343" class="linenr">2343 </a>     <span class="hl opt">(</span><span class="hl str">&quot;{&quot;</span> nil sh-handle-prev-open<span class="hl opt">)</span></div>
<div class="pre"><a id="l2344" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2344" class="linenr">2344 </a>     <span class="hl opt">(</span><span class="hl str">&quot;[&quot;</span> nil sh-handle-prev-open<span class="hl opt">)</span></div>
<div class="pre"><a id="l2345" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2345" class="linenr">2345 </a>     <span class="hl opt">(</span><span class="hl str">&quot;}&quot;</span> sh-handle-this-close nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l2346" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2346" class="linenr">2346 </a>     <span class="hl opt">(</span><span class="hl str">&quot;)&quot;</span> sh-handle-this-close nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l2347" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2347" class="linenr">2347 </a>     <span class="hl opt">(</span><span class="hl str">&quot;]&quot;</span> sh-handle-this-close nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l2348" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2348" class="linenr">2348 </a>     <span class="hl opt">(</span><span class="hl str">&quot;case&quot;</span> nil sh-handle-prev-case<span class="hl opt">)</span></div>
<div class="pre"><a id="l2349" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2349" class="linenr">2349 </a>     <span class="hl opt">(</span><span class="hl str">&quot;esac&quot;</span> sh-handle-this-esac sh-handle-prev-esac<span class="hl opt">)</span></div>
<div class="pre"><a id="l2350" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2350" class="linenr">2350 </a>     <span class="hl opt">(</span><span class="hl kwa">case-label</span> nil sh-handle-after-case-label<span class="hl opt">)</span> <span class="hl slc">;; ???</span></div>
<div class="pre"><a id="l2351" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2351" class="linenr">2351 </a>     <span class="hl opt">(</span><span class="hl str">&quot;;;&quot;</span> nil sh-handle-prev-case-alt-end<span class="hl opt">)</span> <span class="hl slc">;; ???</span></div>
<div class="pre"><a id="l2352" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2352" class="linenr">2352 </a>     <span class="hl opt">(</span><span class="hl str">&quot;;;&amp;&quot;</span> nil sh-handle-prev-case-alt-end<span class="hl opt">)</span> <span class="hl slc">;Like &quot;;;&quot; with diff semantics.</span></div>
<div class="pre"><a id="l2353" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2353" class="linenr">2353 </a>     <span class="hl opt">(</span><span class="hl str">&quot;;&amp;&quot;</span> nil sh-handle-prev-case-alt-end<span class="hl opt">)</span> <span class="hl slc">;Like &quot;;;&quot; with diff semantics.</span></div>
<div class="pre"><a id="l2354" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2354" class="linenr">2354 </a>     <span class="hl opt">(</span><span class="hl str">&quot;done&quot;</span> sh-handle-this-done sh-handle-prev-done<span class="hl opt">)</span></div>
<div class="pre"><a id="l2355" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2355" class="linenr">2355 </a>     <span class="hl opt">(</span><span class="hl str">&quot;do&quot;</span> sh-handle-this-do sh-handle-prev-do<span class="hl opt">))</span></div>
<div class="pre"><a id="l2356" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2356" class="linenr">2356 </a></div>
<div class="pre"><a id="l2357" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2357" class="linenr">2357 </a>    <span class="hl slc">;; Note: we don't need specific stuff for bash and zsh shells;</span></div>
<div class="pre"><a id="l2358" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2358" class="linenr">2358 </a>    <span class="hl slc">;; the regexp `sh-regexp-for-done' handles the extra keywords</span></div>
<div class="pre"><a id="l2359" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2359" class="linenr">2359 </a>    <span class="hl slc">;; these shells use.</span></div>
<div class="pre"><a id="l2360" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2360" class="linenr">2360 </a>    <span class="hl opt">(</span><span class="hl kwa">rc</span></div>
<div class="pre"><a id="l2361" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2361" class="linenr">2361 </a>     <span class="hl opt">(</span><span class="hl str">&quot;{&quot;</span> nil sh-handle-prev-open<span class="hl opt">)</span></div>
<div class="pre"><a id="l2362" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2362" class="linenr">2362 </a>     <span class="hl opt">(</span><span class="hl str">&quot;}&quot;</span> sh-handle-this-close nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l2363" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2363" class="linenr">2363 </a>     <span class="hl opt">(</span><span class="hl str">&quot;case&quot;</span> sh-handle-this-rc-case sh-handle-prev-rc-case<span class="hl opt">))))</span></div>
<div class="pre"><a id="l2364" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2364" class="linenr">2364 </a></div>
<div class="pre"><a id="l2365" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2365" class="linenr">2365 </a></div>
<div class="pre"><a id="l2366" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2366" class="linenr">2366 </a></div>
<div class="pre"><a id="l2367" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2367" class="linenr">2367 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-set-shell <span class="hl opt">(</span><span class="hl kwa">shell</span> <span class="hl opt">&amp;</span>optional no-query-flag insert-flag<span class="hl opt">)</span></div>
<div class="pre"><a id="l2368" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2368" class="linenr">2368 </a>  <span class="hl str">&quot;Set this buffer's shell to SHELL (a string).</span></div>
<div class="pre"><a id="l2369" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2369" class="linenr">2369 </a><span class="hl str">When used interactively, insert the proper starting #!-line,</span></div>
<div class="pre"><a id="l2370" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2370" class="linenr">2370 </a><span class="hl str">and make the visited file executable via `executable-set-magic',</span></div>
<div class="pre"><a id="l2371" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2371" class="linenr">2371 </a><span class="hl str">perhaps querying depending on the value of `executable-query'.</span></div>
<div class="pre"><a id="l2372" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2372" class="linenr">2372 </a><span class="hl str"></span></div>
<div class="pre"><a id="l2373" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2373" class="linenr">2373 </a><span class="hl str">When this function is called noninteractively, INSERT-FLAG (the third</span></div>
<div class="pre"><a id="l2374" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2374" class="linenr">2374 </a><span class="hl str">argument) controls whether to insert a #!-line and think about making</span></div>
<div class="pre"><a id="l2375" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2375" class="linenr">2375 </a><span class="hl str">the visited file executable, and NO-QUERY-FLAG (the second argument)</span></div>
<div class="pre"><a id="l2376" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2376" class="linenr">2376 </a><span class="hl str">controls whether to query about making the visited file executable.</span></div>
<div class="pre"><a id="l2377" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2377" class="linenr">2377 </a><span class="hl str"></span></div>
<div class="pre"><a id="l2378" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2378" class="linenr">2378 </a><span class="hl str">Calls the value of `sh-set-shell-hook' if set.</span></div>
<div class="pre"><a id="l2379" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2379" class="linenr">2379 </a><span class="hl str"></span></div>
<div class="pre"><a id="l2380" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2380" class="linenr">2380 </a><span class="hl str">Shell script files can cause this function be called automatically</span></div>
<div class="pre"><a id="l2381" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2381" class="linenr">2381 </a><span class="hl str">when the file is visited by having a `sh-shell' file-local variable</span></div>
<div class="pre"><a id="l2382" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2382" class="linenr">2382 </a><span class="hl str">whose value is the shell name (don't quote it).&quot;</span></div>
<div class="pre"><a id="l2383" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2383" class="linenr">2383 </a>  <span class="hl opt">(</span><span class="hl kwa">interactive</span> <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">(</span><span class="hl kwa">completing-read</span></div>
<div class="pre"><a id="l2384" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2384" class="linenr">2384 </a>                      <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;Shell (default %s): &quot;</span></div>
<div class="pre"><a id="l2385" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2385" class="linenr">2385 </a>                              sh-shell-file<span class="hl opt">)</span></div>
<div class="pre"><a id="l2386" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2386" class="linenr">2386 </a>                      <span class="hl slc">;; This used to use interpreter-mode-alist, but that is</span></div>
<div class="pre"><a id="l2387" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2387" class="linenr">2387 </a>                      <span class="hl slc">;; no longer appropriate now that uses regexps.</span></div>
<div class="pre"><a id="l2388" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2388" class="linenr">2388 </a>                      <span class="hl slc">;; Maybe there could be a separate variable that lists</span></div>
<div class="pre"><a id="l2389" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2389" class="linenr">2389 </a>                      <span class="hl slc">;; the shells, used here and to construct i-mode-alist.</span></div>
<div class="pre"><a id="l2390" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2390" class="linenr">2390 </a>                      <span class="hl slc">;; But the following is probably good enough:</span></div>
<div class="pre"><a id="l2391" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2391" class="linenr">2391 </a>                      <span class="hl opt">(</span><span class="hl kwa">append</span> <span class="hl opt">(</span><span class="hl kwa">mapcar</span> <span class="hl opt">(</span><span class="hl kwa">lambda</span> <span class="hl opt">(</span><span class="hl kwa">e</span><span class="hl opt">) (</span><span class="hl kwa">symbol-name</span> <span class="hl opt">(</span><span class="hl kwa">car</span> e<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2392" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2392" class="linenr">2392 </a>                                      sh-ancestor-alist<span class="hl opt">)</span></div>
<div class="pre"><a id="l2393" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2393" class="linenr">2393 </a>                              <span class="hl opt">'(</span><span class="hl str">&quot;csh&quot;</span> <span class="hl str">&quot;rc&quot;</span> <span class="hl str">&quot;sh&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2394" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2394" class="linenr">2394 </a>                      nil nil nil nil sh-shell-file<span class="hl opt">)</span></div>
<div class="pre"><a id="l2395" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2395" class="linenr">2395 </a>                     <span class="hl opt">(</span><span class="hl kwa">eq</span> executable-query <span class="hl opt">'</span>function<span class="hl opt">)</span></div>
<div class="pre"><a id="l2396" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2396" class="linenr">2396 </a>                     t<span class="hl opt">))</span></div>
<div class="pre"><a id="l2397" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2397" class="linenr">2397 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">string-match</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">.exe</span><span class="hl esc">\\</span><span class="hl str">'&quot;</span> shell<span class="hl opt">)</span></div>
<div class="pre"><a id="l2398" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2398" class="linenr">2398 </a>      <span class="hl opt">(</span><span class="hl kwa">setq</span> shell <span class="hl opt">(</span><span class="hl kwa">substring</span> shell <span class="hl num">0</span> <span class="hl opt">(</span><span class="hl kwa">match-beginning</span> <span class="hl num">0</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l2399" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2399" class="linenr">2399 </a>  <span class="hl opt">(</span><span class="hl kwa">setq</span> sh-shell <span class="hl opt">(</span><span class="hl kwa">sh-canonicalize-shell</span> shell<span class="hl opt">))</span></div>
<div class="pre"><a id="l2400" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2400" class="linenr">2400 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> insert-flag</div>
<div class="pre"><a id="l2401" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2401" class="linenr">2401 </a>      <span class="hl opt">(</span><span class="hl kwa">setq</span> sh-shell-file</div>
<div class="pre"><a id="l2402" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2402" class="linenr">2402 </a>            <span class="hl opt">(</span><span class="hl kwa">executable-set-magic</span> shell <span class="hl opt">(</span><span class="hl kwa">sh-feature</span> sh-shell-arg<span class="hl opt">)</span></div>
<div class="pre"><a id="l2403" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2403" class="linenr">2403 </a>                                  no-query-flag insert-flag<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2404" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2404" class="linenr">2404 </a>  <span class="hl opt">(</span><span class="hl kwa">setq</span> mode-line-process <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;[%s]&quot;</span> sh-shell<span class="hl opt">))</span></div>
<div class="pre"><a id="l2405" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2405" class="linenr">2405 </a>  <span class="hl opt">(</span><span class="hl kwa">setq-local</span> sh-shell-variables nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l2406" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2406" class="linenr">2406 </a>  <span class="hl opt">(</span><span class="hl kwa">setq-local</span> sh-shell-variables-initialized nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l2407" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2407" class="linenr">2407 </a>  <span class="hl opt">(</span><span class="hl kwa">setq-local</span> imenu-generic-expression</div>
<div class="pre"><a id="l2408" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2408" class="linenr">2408 </a>              <span class="hl opt">(</span><span class="hl kwa">sh-feature</span> sh-imenu-generic-expression<span class="hl opt">))</span></div>
<div class="pre"><a id="l2409" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2409" class="linenr">2409 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">tem</span> <span class="hl opt">(</span><span class="hl kwa">sh-feature</span> sh-mode-syntax-table-input<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2410" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2410" class="linenr">2410 </a>    <span class="hl opt">(</span><span class="hl kwa">when</span> tem</div>
<div class="pre"><a id="l2411" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2411" class="linenr">2411 </a>      <span class="hl opt">(</span><span class="hl kwa">setq-local</span> sh-mode-syntax-table</div>
<div class="pre"><a id="l2412" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2412" class="linenr">2412 </a>                  <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">'</span>sh-mode-syntax-table tem<span class="hl opt">))</span></div>
<div class="pre"><a id="l2413" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2413" class="linenr">2413 </a>      <span class="hl opt">(</span><span class="hl kwa">set-syntax-table</span> sh-mode-syntax-table<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2414" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2414" class="linenr">2414 </a>  <span class="hl opt">(</span><span class="hl kwa">dolist</span> <span class="hl opt">(</span><span class="hl kwa">var</span> <span class="hl opt">(</span><span class="hl kwa">sh-feature</span> sh-variables<span class="hl opt">))</span></div>
<div class="pre"><a id="l2415" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2415" class="linenr">2415 </a>    <span class="hl opt">(</span><span class="hl kwa">sh-remember-variable</span> var<span class="hl opt">))</span></div>
<div class="pre"><a id="l2416" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2416" class="linenr">2416 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">setq-local</span> sh-indent-supported-here</div>
<div class="pre"><a id="l2417" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2417" class="linenr">2417 </a>                  <span class="hl opt">(</span><span class="hl kwa">sh-feature</span> sh-indent-supported<span class="hl opt">))</span></div>
<div class="pre"><a id="l2418" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2418" class="linenr">2418 </a>      <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l2419" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2419" class="linenr">2419 </a>        <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;Setting up indent for shell type %s&quot;</span> sh-shell<span class="hl opt">)</span></div>
<div class="pre"><a id="l2420" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2420" class="linenr">2420 </a>        <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">mksym</span> <span class="hl opt">(</span><span class="hl kwa">lambda</span> <span class="hl opt">(</span><span class="hl kwa">name</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2421" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2421" class="linenr">2421 </a>                       <span class="hl opt">(</span><span class="hl kwa">intern</span> <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;sh-smie-%s-%s&quot;</span></div>
<div class="pre"><a id="l2422" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2422" class="linenr">2422 </a>                                       sh-indent-supported-here name<span class="hl opt">)))))</span></div>
<div class="pre"><a id="l2423" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2423" class="linenr">2423 </a>          <span class="hl opt">(</span><span class="hl kwa">add-function</span> <span class="hl opt">:</span>around <span class="hl opt">(</span><span class="hl kwa">local</span> <span class="hl opt">'</span>smie--hanging-eolp-function<span class="hl opt">)</span></div>
<div class="pre"><a id="l2424" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2424" class="linenr">2424 </a>                        <span class="hl opt">(</span><span class="hl kwa">lambda</span> <span class="hl opt">(</span><span class="hl kwa">orig</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2425" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2425" class="linenr">2425 </a>                          <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">looking-at</span> <span class="hl str">&quot;[</span> <span class="hl esc">\t</span><span class="hl str">]*</span><span class="hl esc">\\\\\n</span><span class="hl str">&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2426" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2426" class="linenr">2426 </a>                              <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">match-end</span> <span class="hl num">0</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2427" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2427" class="linenr">2427 </a>                            <span class="hl opt">(</span><span class="hl kwa">funcall</span> orig<span class="hl opt">))))</span></div>
<div class="pre"><a id="l2428" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2428" class="linenr">2428 </a>          <span class="hl opt">(</span><span class="hl kwa">add-hook</span> <span class="hl opt">'</span>smie-indent-functions <span class="hl opt">#'</span>sh-smie--indent-continuation nil t<span class="hl opt">)</span></div>
<div class="pre"><a id="l2429" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2429" class="linenr">2429 </a>          <span class="hl opt">(</span><span class="hl kwa">smie-setup</span> <span class="hl opt">(</span><span class="hl kwa">symbol-value</span> <span class="hl opt">(</span><span class="hl kwa">funcall</span> mksym <span class="hl str">&quot;grammar&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2430" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2430" class="linenr">2430 </a>                      <span class="hl opt">(</span><span class="hl kwa">funcall</span> mksym <span class="hl str">&quot;rules&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2431" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2431" class="linenr">2431 </a>                      <span class="hl opt">:</span>forward-token  <span class="hl opt">(</span><span class="hl kwa">funcall</span> mksym <span class="hl str">&quot;forward-token&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2432" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2432" class="linenr">2432 </a>                      <span class="hl opt">:</span>backward-token <span class="hl opt">(</span><span class="hl kwa">funcall</span> mksym <span class="hl str">&quot;backward-token&quot;</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2433" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2433" class="linenr">2433 </a>        <span class="hl opt">(</span><span class="hl kwa">setq-local</span> parse-sexp-lookup-properties t<span class="hl opt">)</span></div>
<div class="pre"><a id="l2434" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2434" class="linenr">2434 </a>        <span class="hl opt">(</span><span class="hl kwa">unless</span> sh-use-smie</div>
<div class="pre"><a id="l2435" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2435" class="linenr">2435 </a>          <span class="hl opt">(</span><span class="hl kwa">setq-local</span> sh-kw-alist <span class="hl opt">(</span><span class="hl kwa">sh-feature</span> sh-kw<span class="hl opt">))</span></div>
<div class="pre"><a id="l2436" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2436" class="linenr">2436 </a>          <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">regexp</span> <span class="hl opt">(</span><span class="hl kwa">sh-feature</span> sh-kws-for-done<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2437" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2437" class="linenr">2437 </a>            <span class="hl opt">(</span><span class="hl kwa">if</span> regexp</div>
<div class="pre"><a id="l2438" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2438" class="linenr">2438 </a>                <span class="hl opt">(</span><span class="hl kwa">setq-local</span> sh-regexp-for-done</div>
<div class="pre"><a id="l2439" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2439" class="linenr">2439 </a>                            <span class="hl opt">(</span><span class="hl kwa">sh-mkword-regexpr</span> <span class="hl opt">(</span><span class="hl kwa">regexp-opt</span> regexp t<span class="hl opt">)))))</span></div>
<div class="pre"><a id="l2440" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2440" class="linenr">2440 </a>          <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;setting up indent stuff&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2441" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2441" class="linenr">2441 </a>          <span class="hl slc">;; sh-mode has already made indent-line-function local</span></div>
<div class="pre"><a id="l2442" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2442" class="linenr">2442 </a>          <span class="hl slc">;; but do it in case this is called before that.</span></div>
<div class="pre"><a id="l2443" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2443" class="linenr">2443 </a>          <span class="hl opt">(</span><span class="hl kwa">setq-local</span> indent-line-function <span class="hl opt">'</span>sh-indent-line<span class="hl opt">))</span></div>
<div class="pre"><a id="l2444" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2444" class="linenr">2444 </a>        <span class="hl opt">(</span><span class="hl kwa">if</span> sh-make-vars-local</div>
<div class="pre"><a id="l2445" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2445" class="linenr">2445 </a>            <span class="hl opt">(</span><span class="hl kwa">sh-make-vars-local</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2446" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2446" class="linenr">2446 </a>        <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;Indentation setup for shell type %s&quot;</span> sh-shell<span class="hl opt">))</span></div>
<div class="pre"><a id="l2447" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2447" class="linenr">2447 </a>    <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;No indentation for this shell type.&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2448" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2448" class="linenr">2448 </a>    <span class="hl opt">(</span><span class="hl kwa">setq-local</span> indent-line-function <span class="hl opt">'</span>sh-basic-indent-line<span class="hl opt">))</span></div>
<div class="pre"><a id="l2449" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2449" class="linenr">2449 </a>  <span class="hl opt">(</span><span class="hl kwa">when</span> font-lock-mode</div>
<div class="pre"><a id="l2450" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2450" class="linenr">2450 </a>    <span class="hl opt">(</span><span class="hl kwa">setq</span> font-lock-set-defaults nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l2451" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2451" class="linenr">2451 </a>    <span class="hl opt">(</span><span class="hl kwa">font-lock-set-defaults</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2452" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2452" class="linenr">2452 </a>    <span class="hl opt">(</span><span class="hl kwa">font-lock-flush</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2453" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2453" class="linenr">2453 </a>  <span class="hl opt">(</span><span class="hl kwa">setq</span> sh-shell-process nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l2454" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2454" class="linenr">2454 </a>  <span class="hl opt">(</span><span class="hl kwa">run-hooks</span> <span class="hl opt">'</span>sh-set-shell-hook<span class="hl opt">))</span></div>
<div class="pre"><a id="l2455" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2455" class="linenr">2455 </a></div>
<div class="pre"><a id="l2456" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2456" class="linenr">2456 </a></div>
<div class="pre"><a id="l2457" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2457" class="linenr">2457 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-feature <span class="hl opt">(</span><span class="hl kwa">alist</span> <span class="hl opt">&amp;</span>optional function<span class="hl opt">)</span></div>
<div class="pre"><a id="l2458" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2458" class="linenr">2458 </a>  <span class="hl str">&quot;Index ALIST by the current shell.</span></div>
<div class="pre"><a id="l2459" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2459" class="linenr">2459 </a><span class="hl str">If ALIST isn't a list where every element is a cons, it is returned as is.</span></div>
<div class="pre"><a id="l2460" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2460" class="linenr">2460 </a><span class="hl str">Else indexing follows an inheritance logic which works in two ways:</span></div>
<div class="pre"><a id="l2461" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2461" class="linenr">2461 </a><span class="hl str"></span></div>
<div class="pre"><a id="l2462" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2462" class="linenr">2462 </a><span class="hl str">  - Fall back on successive ancestors (see `sh-ancestor-alist') as long as</span></div>
<div class="pre"><a id="l2463" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2463" class="linenr">2463 </a><span class="hl str">    the alist contains no value for the current shell.</span></div>
<div class="pre"><a id="l2464" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2464" class="linenr">2464 </a><span class="hl str">    The ultimate default is always `sh'.</span></div>
<div class="pre"><a id="l2465" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2465" class="linenr">2465 </a><span class="hl str"></span></div>
<div class="pre"><a id="l2466" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2466" class="linenr">2466 </a><span class="hl str">  - If the value thus looked up is a list starting with `sh-append',</span></div>
<div class="pre"><a id="l2467" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2467" class="linenr">2467 </a><span class="hl str">    we call the function `sh-append' with the rest of the list as</span></div>
<div class="pre"><a id="l2468" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2468" class="linenr">2468 </a><span class="hl str">    arguments, and use the value.  However, the next element of the</span></div>
<div class="pre"><a id="l2469" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2469" class="linenr">2469 </a><span class="hl str">    list is not used as-is; instead, we look it up recursively</span></div>
<div class="pre"><a id="l2470" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2470" class="linenr">2470 </a><span class="hl str">    in ALIST to allow the function called to define the value for</span></div>
<div class="pre"><a id="l2471" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2471" class="linenr">2471 </a><span class="hl str">    one shell to be derived from another shell.</span></div>
<div class="pre"><a id="l2472" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2472" class="linenr">2472 </a><span class="hl str">    The value thus determined is physically replaced into the alist.</span></div>
<div class="pre"><a id="l2473" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2473" class="linenr">2473 </a><span class="hl str"></span></div>
<div class="pre"><a id="l2474" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2474" class="linenr">2474 </a><span class="hl str">If FUNCTION is non-nil, it is called with one argument,</span></div>
<div class="pre"><a id="l2475" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2475" class="linenr">2475 </a><span class="hl str">the value thus obtained, and the result is used instead.&quot;</span></div>
<div class="pre"><a id="l2476" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2476" class="linenr">2476 </a>  <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">consp</span> alist<span class="hl opt">)</span></div>
<div class="pre"><a id="l2477" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2477" class="linenr">2477 </a>          <span class="hl slc">;; Check for something that isn't a valid alist.</span></div>
<div class="pre"><a id="l2478" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2478" class="linenr">2478 </a>          <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">l</span> alist<span class="hl opt">))</span></div>
<div class="pre"><a id="l2479" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2479" class="linenr">2479 </a>            <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">and</span> l <span class="hl opt">(</span><span class="hl kwa">consp</span> <span class="hl opt">(</span><span class="hl kwa">car</span> l<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2480" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2480" class="linenr">2480 </a>              <span class="hl opt">(</span><span class="hl kwa">setq</span> l <span class="hl opt">(</span><span class="hl kwa">cdr</span> l<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2481" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2481" class="linenr">2481 </a>            <span class="hl opt">(</span><span class="hl kwa">if</span> l alist<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2482" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2482" class="linenr">2482 </a></div>
<div class="pre"><a id="l2483" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2483" class="linenr">2483 </a>      <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">orig-sh-shell</span> sh-shell<span class="hl opt">))</span></div>
<div class="pre"><a id="l2484" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2484" class="linenr">2484 </a>        <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">sh-shell</span> sh-shell<span class="hl opt">)</span></div>
<div class="pre"><a id="l2485" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2485" class="linenr">2485 </a>              elt val<span class="hl opt">)</span></div>
<div class="pre"><a id="l2486" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2486" class="linenr">2486 </a>          <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">and</span> sh-shell</div>
<div class="pre"><a id="l2487" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2487" class="linenr">2487 </a>                      <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">setq</span> elt <span class="hl opt">(</span><span class="hl kwa">assq</span> sh-shell alist<span class="hl opt">))))</span></div>
<div class="pre"><a id="l2488" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2488" class="linenr">2488 </a>            <span class="hl opt">(</span><span class="hl kwa">setq</span> sh-shell <span class="hl opt">(</span><span class="hl kwa">cdr</span> <span class="hl opt">(</span><span class="hl kwa">assq</span> sh-shell sh-ancestor-alist<span class="hl opt">))))</span></div>
<div class="pre"><a id="l2489" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2489" class="linenr">2489 </a>          <span class="hl slc">;; If the shell is not known, treat it as sh.</span></div>
<div class="pre"><a id="l2490" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2490" class="linenr">2490 </a>          <span class="hl opt">(</span><span class="hl kwa">unless</span> elt</div>
<div class="pre"><a id="l2491" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2491" class="linenr">2491 </a>            <span class="hl opt">(</span><span class="hl kwa">setq</span> elt <span class="hl opt">(</span><span class="hl kwa">assq</span> <span class="hl opt">'</span>sh alist<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2492" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2492" class="linenr">2492 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> val <span class="hl opt">(</span><span class="hl kwa">cdr</span> elt<span class="hl opt">))</span></div>
<div class="pre"><a id="l2493" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2493" class="linenr">2493 </a>          <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">consp</span> val<span class="hl opt">)</span></div>
<div class="pre"><a id="l2494" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2494" class="linenr">2494 </a>                   <span class="hl opt">(</span><span class="hl kwa">memq</span> <span class="hl opt">(</span><span class="hl kwa">car</span> val<span class="hl opt">) '(</span><span class="hl kwa">sh-append</span> sh-modify<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2495" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2495" class="linenr">2495 </a>              <span class="hl opt">(</span><span class="hl kwa">setq</span> val</div>
<div class="pre"><a id="l2496" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2496" class="linenr">2496 </a>                    <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">(</span><span class="hl kwa">car</span> val<span class="hl opt">)</span></div>
<div class="pre"><a id="l2497" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2497" class="linenr">2497 </a>                           <span class="hl slc">;; Refer to the value for a different shell,</span></div>
<div class="pre"><a id="l2498" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2498" class="linenr">2498 </a>                           <span class="hl slc">;; as a kind of inheritance.</span></div>
<div class="pre"><a id="l2499" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2499" class="linenr">2499 </a>                           <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">sh-shell</span> <span class="hl opt">(</span><span class="hl kwa">car</span> <span class="hl opt">(</span><span class="hl kwa">cdr</span> val<span class="hl opt">))))</span></div>
<div class="pre"><a id="l2500" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2500" class="linenr">2500 </a>                             <span class="hl opt">(</span><span class="hl kwa">sh-feature</span> alist<span class="hl opt">))</span></div>
<div class="pre"><a id="l2501" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2501" class="linenr">2501 </a>                           <span class="hl opt">(</span><span class="hl kwa">cddr</span> val<span class="hl opt">))))</span></div>
<div class="pre"><a id="l2502" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2502" class="linenr">2502 </a>          <span class="hl opt">(</span><span class="hl kwa">if</span> function</div>
<div class="pre"><a id="l2503" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2503" class="linenr">2503 </a>              <span class="hl opt">(</span><span class="hl kwa">setq</span> sh-shell orig-sh-shell</div>
<div class="pre"><a id="l2504" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2504" class="linenr">2504 </a>                    val <span class="hl opt">(</span><span class="hl kwa">funcall</span> function val<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2505" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2505" class="linenr">2505 </a>          val<span class="hl opt">))))</span></div>
<div class="pre"><a id="l2506" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2506" class="linenr">2506 </a></div>
<div class="pre"><a id="l2507" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2507" class="linenr">2507 </a></div>
<div class="pre"><a id="l2508" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2508" class="linenr">2508 </a></div>
<div class="pre"><a id="l2509" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2509" class="linenr">2509 </a><span class="hl slc">;; I commented this out because nobody calls it -- rms.</span></div>
<div class="pre"><a id="l2510" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2510" class="linenr">2510 </a><span class="hl slc">;;(defun sh-abbrevs (ancestor &amp;rest list)</span></div>
<div class="pre"><a id="l2511" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2511" class="linenr">2511 </a><span class="hl slc">;;  &quot;If it isn't, define the current shell as abbrev table and fill that.</span></div>
<div class="pre"><a id="l2512" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2512" class="linenr">2512 </a><span class="hl slc">;;Abbrev table will inherit all abbrevs from ANCESTOR, which is either an abbrev</span></div>
<div class="pre"><a id="l2513" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2513" class="linenr">2513 </a><span class="hl slc">;;table or a list of (NAME1 EXPANSION1 ...).  In addition it will define abbrevs</span></div>
<div class="pre"><a id="l2514" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2514" class="linenr">2514 </a><span class="hl slc">;;according to the remaining arguments NAMEi EXPANSIONi ...</span></div>
<div class="pre"><a id="l2515" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2515" class="linenr">2515 </a><span class="hl slc">;;EXPANSION may be either a string or a skeleton command.&quot;</span></div>
<div class="pre"><a id="l2516" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2516" class="linenr">2516 </a><span class="hl slc">;;  (or (if (boundp sh-shell)</span></div>
<div class="pre"><a id="l2517" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2517" class="linenr">2517 </a><span class="hl slc">;;        (symbol-value sh-shell))</span></div>
<div class="pre"><a id="l2518" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2518" class="linenr">2518 </a><span class="hl slc">;;      (progn</span></div>
<div class="pre"><a id="l2519" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2519" class="linenr">2519 </a><span class="hl slc">;;      (if (listp ancestor)</span></div>
<div class="pre"><a id="l2520" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2520" class="linenr">2520 </a><span class="hl slc">;;          (nconc list ancestor))</span></div>
<div class="pre"><a id="l2521" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2521" class="linenr">2521 </a><span class="hl slc">;;      (define-abbrev-table sh-shell ())</span></div>
<div class="pre"><a id="l2522" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2522" class="linenr">2522 </a><span class="hl slc">;;      (if (vectorp ancestor)</span></div>
<div class="pre"><a id="l2523" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2523" class="linenr">2523 </a><span class="hl slc">;;          (mapatoms (lambda (atom)</span></div>
<div class="pre"><a id="l2524" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2524" class="linenr">2524 </a><span class="hl slc">;;                      (or (eq atom 0)</span></div>
<div class="pre"><a id="l2525" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2525" class="linenr">2525 </a><span class="hl slc">;;                          (define-abbrev (symbol-value sh-shell)</span></div>
<div class="pre"><a id="l2526" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2526" class="linenr">2526 </a><span class="hl slc">;;                            (symbol-name atom)</span></div>
<div class="pre"><a id="l2527" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2527" class="linenr">2527 </a><span class="hl slc">;;                            (symbol-value atom)</span></div>
<div class="pre"><a id="l2528" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2528" class="linenr">2528 </a><span class="hl slc">;;                            (symbol-function atom))))</span></div>
<div class="pre"><a id="l2529" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2529" class="linenr">2529 </a><span class="hl slc">;;                    ancestor))</span></div>
<div class="pre"><a id="l2530" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2530" class="linenr">2530 </a><span class="hl slc">;;      (while list</span></div>
<div class="pre"><a id="l2531" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2531" class="linenr">2531 </a><span class="hl slc">;;        (define-abbrev (symbol-value sh-shell)</span></div>
<div class="pre"><a id="l2532" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2532" class="linenr">2532 </a><span class="hl slc">;;          (car list)</span></div>
<div class="pre"><a id="l2533" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2533" class="linenr">2533 </a><span class="hl slc">;;          (if (stringp (car (cdr list)))</span></div>
<div class="pre"><a id="l2534" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2534" class="linenr">2534 </a><span class="hl slc">;;              (car (cdr list))</span></div>
<div class="pre"><a id="l2535" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2535" class="linenr">2535 </a><span class="hl slc">;;            &quot;&quot;)</span></div>
<div class="pre"><a id="l2536" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2536" class="linenr">2536 </a><span class="hl slc">;;          (if (symbolp (car (cdr list)))</span></div>
<div class="pre"><a id="l2537" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2537" class="linenr">2537 </a><span class="hl slc">;;              (car (cdr list))))</span></div>
<div class="pre"><a id="l2538" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2538" class="linenr">2538 </a><span class="hl slc">;;        (setq list (cdr (cdr list)))))</span></div>
<div class="pre"><a id="l2539" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2539" class="linenr">2539 </a><span class="hl slc">;;      (symbol-value sh-shell)))</span></div>
<div class="pre"><a id="l2540" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2540" class="linenr">2540 </a></div>
<div class="pre"><a id="l2541" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2541" class="linenr">2541 </a></div>
<div class="pre"><a id="l2542" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2542" class="linenr">2542 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-append <span class="hl opt">(</span><span class="hl kwa">ancestor</span> <span class="hl opt">&amp;</span>rest list<span class="hl opt">)</span></div>
<div class="pre"><a id="l2543" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2543" class="linenr">2543 </a>  <span class="hl str">&quot;Return list composed of first argument (a list) physically appended to rest.&quot;</span></div>
<div class="pre"><a id="l2544" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2544" class="linenr">2544 </a>  <span class="hl opt">(</span><span class="hl kwa">nconc</span> list ancestor<span class="hl opt">))</span></div>
<div class="pre"><a id="l2545" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2545" class="linenr">2545 </a></div>
<div class="pre"><a id="l2546" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2546" class="linenr">2546 </a></div>
<div class="pre"><a id="l2547" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2547" class="linenr">2547 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-modify <span class="hl opt">(</span><span class="hl kwa">skeleton</span> <span class="hl opt">&amp;</span>rest list<span class="hl opt">)</span></div>
<div class="pre"><a id="l2548" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2548" class="linenr">2548 </a>  <span class="hl str">&quot;Modify a copy of SKELETON by replacing I1 with REPL1, I2 with REPL2 ...&quot;</span></div>
<div class="pre"><a id="l2549" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2549" class="linenr">2549 </a>  <span class="hl opt">(</span><span class="hl kwa">setq</span> skeleton <span class="hl opt">(</span><span class="hl kwa">copy-sequence</span> skeleton<span class="hl opt">))</span></div>
<div class="pre"><a id="l2550" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2550" class="linenr">2550 </a>  <span class="hl opt">(</span><span class="hl kwa">while</span> list</div>
<div class="pre"><a id="l2551" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2551" class="linenr">2551 </a>    <span class="hl opt">(</span><span class="hl kwa">setcar</span> <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">nthcdr</span> <span class="hl opt">(</span><span class="hl kwa">car</span> list<span class="hl opt">)</span> skeleton<span class="hl opt">)</span></div>
<div class="pre"><a id="l2552" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2552" class="linenr">2552 </a>                <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Index %d out of bounds&quot;</span> <span class="hl opt">(</span><span class="hl kwa">car</span> list<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2553" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2553" class="linenr">2553 </a>            <span class="hl opt">(</span><span class="hl kwa">car</span> <span class="hl opt">(</span><span class="hl kwa">cdr</span> list<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2554" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2554" class="linenr">2554 </a>    <span class="hl opt">(</span><span class="hl kwa">setq</span> list <span class="hl opt">(</span><span class="hl kwa">nthcdr</span> <span class="hl num">2</span> list<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2555" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2555" class="linenr">2555 </a>  skeleton<span class="hl opt">)</span></div>
<div class="pre"><a id="l2556" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2556" class="linenr">2556 </a></div>
<div class="pre"><a id="l2557" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2557" class="linenr">2557 </a></div>
<div class="pre"><a id="l2558" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2558" class="linenr">2558 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-basic-indent-line <span class="hl opt">()</span></div>
<div class="pre"><a id="l2559" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2559" class="linenr">2559 </a>  <span class="hl str">&quot;Indent a line for Sh mode (shell script mode).</span></div>
<div class="pre"><a id="l2560" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2560" class="linenr">2560 </a><span class="hl str">Indent as far as preceding non-empty line, then by steps of `sh-indentation'.</span></div>
<div class="pre"><a id="l2561" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2561" class="linenr">2561 </a><span class="hl str">Lines containing only comments are considered empty.&quot;</span></div>
<div class="pre"><a id="l2562" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2562" class="linenr">2562 </a>  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2563" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2563" class="linenr">2563 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">previous</span> <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l2564" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2564" class="linenr">2564 </a>                    <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">progn</span> <span class="hl opt">(</span><span class="hl kwa">beginning-of-line</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2565" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2565" class="linenr">2565 </a>                                       <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">bobp</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2566" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2566" class="linenr">2566 </a>                                <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l2567" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2567" class="linenr">2567 </a>                                  <span class="hl opt">(</span><span class="hl kwa">forward-line</span> -<span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2568" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2568" class="linenr">2568 </a>                                  <span class="hl opt">(</span><span class="hl kwa">back-to-indentation</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2569" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2569" class="linenr">2569 </a>                                  <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">eolp</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2570" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2570" class="linenr">2570 </a>                                      <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl opt">(</span><span class="hl kwa">following-char</span><span class="hl opt">)</span> ?<span class="hl opt">#)))))</span></div>
<div class="pre"><a id="l2571" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2571" class="linenr">2571 </a>                    <span class="hl opt">(</span><span class="hl kwa">current-column</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2572" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2572" class="linenr">2572 </a>        current<span class="hl opt">)</span></div>
<div class="pre"><a id="l2573" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2573" class="linenr">2573 </a>    <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l2574" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2574" class="linenr">2574 </a>      <span class="hl opt">(</span><span class="hl kwa">indent-to</span> <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> this-command <span class="hl opt">'</span>newline-and-indent<span class="hl opt">)</span></div>
<div class="pre"><a id="l2575" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2575" class="linenr">2575 </a>                         <span class="hl opt">(</span><span class="hl kwa">and</span> electric-indent-mode <span class="hl opt">(</span><span class="hl kwa">eq</span> this-command <span class="hl opt">'</span>newline<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2576" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2576" class="linenr">2576 </a>                     previous</div>
<div class="pre"><a id="l2577" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2577" class="linenr">2577 </a>                   <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(&lt; (</span><span class="hl kwa">current-column</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2578" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2578" class="linenr">2578 </a>                          <span class="hl opt">(</span><span class="hl kwa">setq</span> current <span class="hl opt">(</span><span class="hl kwa">progn</span> <span class="hl opt">(</span><span class="hl kwa">back-to-indentation</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2579" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2579" class="linenr">2579 </a>                                               <span class="hl opt">(</span><span class="hl kwa">current-column</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l2580" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2580" class="linenr">2580 </a>                       <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">eolp</span><span class="hl opt">)</span> previous <span class="hl num">0</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2581" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2581" class="linenr">2581 </a>                     <span class="hl opt">(</span><span class="hl kwa">delete-region</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2582" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2582" class="linenr">2582 </a>                                    <span class="hl opt">(</span><span class="hl kwa">progn</span> <span class="hl opt">(</span><span class="hl kwa">beginning-of-line</span><span class="hl opt">) (</span><span class="hl kwa">point</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2583" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2583" class="linenr">2583 </a>                     <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">eolp</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2584" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2584" class="linenr">2584 </a>                         <span class="hl opt">(</span><span class="hl kwa">max</span> previous <span class="hl opt">(* (</span><span class="hl kwa">1</span><span class="hl opt">+ (/</span> current sh-indentation<span class="hl opt">))</span></div>
<div class="pre"><a id="l2585" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2585" class="linenr">2585 </a>                                          sh-indentation<span class="hl opt">))</span></div>
<div class="pre"><a id="l2586" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2586" class="linenr">2586 </a>                       <span class="hl opt">(* (</span><span class="hl kwa">1</span><span class="hl opt">+ (/</span> current sh-indentation<span class="hl opt">))</span> sh-indentation<span class="hl opt">))))))</span></div>
<div class="pre"><a id="l2587" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2587" class="linenr">2587 </a>    <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(&lt; (</span><span class="hl kwa">current-column</span><span class="hl opt">) (</span><span class="hl kwa">current-indentation</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2588" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2588" class="linenr">2588 </a>        <span class="hl opt">(</span><span class="hl kwa">skip-chars-forward</span> <span class="hl str">&quot;</span> <span class="hl esc">\t</span><span class="hl str">&quot;</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l2589" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2589" class="linenr">2589 </a></div>
<div class="pre"><a id="l2590" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2590" class="linenr">2590 </a></div>
<div class="pre"><a id="l2591" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2591" class="linenr">2591 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-execute-region <span class="hl opt">(</span><span class="hl kwa">start</span> end <span class="hl opt">&amp;</span>optional flag<span class="hl opt">)</span></div>
<div class="pre"><a id="l2592" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2592" class="linenr">2592 </a>  <span class="hl str">&quot;Pass optional header and region to a subshell for noninteractive execution.</span></div>
<div class="pre"><a id="l2593" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2593" class="linenr">2593 </a><span class="hl str">The working directory is that of the buffer, and only environment variables</span></div>
<div class="pre"><a id="l2594" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2594" class="linenr">2594 </a><span class="hl str">are already set which is why you can mark a header within the script.</span></div>
<div class="pre"><a id="l2595" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2595" class="linenr">2595 </a><span class="hl str"></span></div>
<div class="pre"><a id="l2596" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2596" class="linenr">2596 </a><span class="hl str">With a positive prefix ARG, instead of sending region, define header from</span></div>
<div class="pre"><a id="l2597" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2597" class="linenr">2597 </a><span class="hl str">beginning of buffer to point.  With a negative prefix ARG, instead of sending</span></div>
<div class="pre"><a id="l2598" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2598" class="linenr">2598 </a><span class="hl str">region, clear header.&quot;</span></div>
<div class="pre"><a id="l2599" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2599" class="linenr">2599 </a>  <span class="hl opt">(</span><span class="hl kwa">interactive</span> <span class="hl str">&quot;r</span><span class="hl esc">\n</span><span class="hl str">P&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2600" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2600" class="linenr">2600 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> flag</div>
<div class="pre"><a id="l2601" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2601" class="linenr">2601 </a>      <span class="hl opt">(</span><span class="hl kwa">setq</span> sh-header-marker <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(&gt; (</span><span class="hl kwa">prefix-numeric-value</span> flag<span class="hl opt">)</span> <span class="hl num">0</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2602" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2602" class="linenr">2602 </a>                                 <span class="hl opt">(</span><span class="hl kwa">point-marker</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2603" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2603" class="linenr">2603 </a>    <span class="hl opt">(</span><span class="hl kwa">if</span> sh-header-marker</div>
<div class="pre"><a id="l2604" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2604" class="linenr">2604 </a>        <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l2605" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2605" class="linenr">2605 </a>          <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">(</span><span class="hl kwa">buffer-undo-list</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2606" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2606" class="linenr">2606 </a>            <span class="hl opt">(</span><span class="hl kwa">goto-char</span> sh-header-marker<span class="hl opt">)</span></div>
<div class="pre"><a id="l2607" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2607" class="linenr">2607 </a>            <span class="hl opt">(</span><span class="hl kwa">append-to-buffer</span> <span class="hl opt">(</span><span class="hl kwa">current-buffer</span><span class="hl opt">)</span> start end<span class="hl opt">)</span></div>
<div class="pre"><a id="l2608" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2608" class="linenr">2608 </a>            <span class="hl opt">(</span><span class="hl kwa">shell-command-on-region</span> <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2609" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2609" class="linenr">2609 </a>                                     <span class="hl opt">(</span><span class="hl kwa">setq</span> end <span class="hl opt">(+</span> sh-header-marker</div>
<div class="pre"><a id="l2610" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2610" class="linenr">2610 </a>                                                  <span class="hl opt">(</span><span class="hl kwa">-</span> end start<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2611" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2611" class="linenr">2611 </a>                                     sh-shell-file<span class="hl opt">)</span></div>
<div class="pre"><a id="l2612" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2612" class="linenr">2612 </a>            <span class="hl opt">(</span><span class="hl kwa">delete-region</span> sh-header-marker end<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2613" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2613" class="linenr">2613 </a>      <span class="hl opt">(</span><span class="hl kwa">shell-command-on-region</span> start end <span class="hl opt">(</span><span class="hl kwa">concat</span> sh-shell-file <span class="hl str">&quot; -&quot;</span><span class="hl opt">)))))</span></div>
<div class="pre"><a id="l2614" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2614" class="linenr">2614 </a></div>
<div class="pre"><a id="l2615" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2615" class="linenr">2615 </a></div>
<div class="pre"><a id="l2616" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2616" class="linenr">2616 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-remember-variable <span class="hl opt">(</span><span class="hl kwa">var</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2617" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2617" class="linenr">2617 </a>  <span class="hl str">&quot;Make VARIABLE available for future completing reads in this buffer.&quot;</span></div>
<div class="pre"><a id="l2618" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2618" class="linenr">2618 </a>  <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(&lt; (</span><span class="hl kwa">length</span> var<span class="hl opt">)</span> sh-remember-variable-min<span class="hl opt">)</span></div>
<div class="pre"><a id="l2619" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2619" class="linenr">2619 </a>      <span class="hl opt">(</span><span class="hl kwa">getenv</span> var<span class="hl opt">)</span></div>
<div class="pre"><a id="l2620" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2620" class="linenr">2620 </a>      <span class="hl opt">(</span><span class="hl kwa">assoc</span> var sh-shell-variables<span class="hl opt">)</span></div>
<div class="pre"><a id="l2621" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2621" class="linenr">2621 </a>      <span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl opt">(</span><span class="hl kwa">cons</span> var var<span class="hl opt">)</span> sh-shell-variables<span class="hl opt">))</span></div>
<div class="pre"><a id="l2622" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2622" class="linenr">2622 </a>  var<span class="hl opt">)</span></div>
<div class="pre"><a id="l2623" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2623" class="linenr">2623 </a></div>
<div class="pre"><a id="l2624" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2624" class="linenr">2624 </a></div>
<div class="pre"><a id="l2625" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2625" class="linenr">2625 </a></div>
<div class="pre"><a id="l2626" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2626" class="linenr">2626 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-quoted-p <span class="hl opt">()</span></div>
<div class="pre"><a id="l2627" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2627" class="linenr">2627 </a>  <span class="hl str">&quot;Is point preceded by an odd number of backslashes?&quot;</span></div>
<div class="pre"><a id="l2628" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2628" class="linenr">2628 </a>  <span class="hl opt">(</span><span class="hl kwa">eq</span> -<span class="hl num">1</span> <span class="hl opt">(</span>% <span class="hl opt">(</span><span class="hl kwa">save-excursion</span> <span class="hl opt">(</span><span class="hl kwa">skip-chars-backward</span> <span class="hl str">&quot;</span><span class="hl esc">\\\\</span><span class="hl str">&quot;</span><span class="hl opt">))</span> <span class="hl num">2</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2629" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2629" class="linenr">2629 </a><span class="cntrl">\f</span></div>
<div class="pre"><a id="l2630" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2630" class="linenr">2630 </a><span class="hl slc">;; Indentation stuff.</span></div>
<div class="pre"><a id="l2631" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2631" class="linenr">2631 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-must-support-indent <span class="hl opt">()</span></div>
<div class="pre"><a id="l2632" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2632" class="linenr">2632 </a>  <span class="hl str">&quot;Signal an error if the shell type for this buffer is not supported.</span></div>
<div class="pre"><a id="l2633" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2633" class="linenr">2633 </a><span class="hl str">Also, the buffer must be in Shell-script mode.&quot;</span></div>
<div class="pre"><a id="l2634" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2634" class="linenr">2634 </a>  <span class="hl opt">(</span><span class="hl kwa">unless</span> sh-indent-supported-here</div>
<div class="pre"><a id="l2635" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2635" class="linenr">2635 </a>    <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;This buffer's shell does not support indentation through Emacs&quot;</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2636" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2636" class="linenr">2636 </a></div>
<div class="pre"><a id="l2637" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2637" class="linenr">2637 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-make-vars-local <span class="hl opt">()</span></div>
<div class="pre"><a id="l2638" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2638" class="linenr">2638 </a>  <span class="hl str">&quot;Make the indentation variables local to this buffer.</span></div>
<div class="pre"><a id="l2639" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2639" class="linenr">2639 </a><span class="hl str">Normally they already are local.  This command is provided in case</span></div>
<div class="pre"><a id="l2640" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2640" class="linenr">2640 </a><span class="hl str">variable `sh-make-vars-local' has been set to nil.</span></div>
<div class="pre"><a id="l2641" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2641" class="linenr">2641 </a><span class="hl str"></span></div>
<div class="pre"><a id="l2642" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2642" class="linenr">2642 </a><span class="hl str">To revert all these variables to the global values, use</span></div>
<div class="pre"><a id="l2643" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2643" class="linenr">2643 </a><span class="hl str">command `sh-reset-indent-vars-to-global-values'.&quot;</span></div>
<div class="pre"><a id="l2644" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2644" class="linenr">2644 </a>  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2645" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2645" class="linenr">2645 </a>  <span class="hl opt">(</span><span class="hl kwa">mapc</span> <span class="hl opt">'</span>make-local-variable sh-var-list<span class="hl opt">)</span></div>
<div class="pre"><a id="l2646" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2646" class="linenr">2646 </a>  <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;Indentation variables are now local.&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2647" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2647" class="linenr">2647 </a></div>
<div class="pre"><a id="l2648" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2648" class="linenr">2648 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-reset-indent-vars-to-global-values <span class="hl opt">()</span></div>
<div class="pre"><a id="l2649" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2649" class="linenr">2649 </a>  <span class="hl str">&quot;Reset local indentation variables to the global values.</span></div>
<div class="pre"><a id="l2650" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2650" class="linenr">2650 </a><span class="hl str">Then, if variable `sh-make-vars-local' is non-nil, make them local.&quot;</span></div>
<div class="pre"><a id="l2651" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2651" class="linenr">2651 </a>  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2652" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2652" class="linenr">2652 </a>  <span class="hl opt">(</span><span class="hl kwa">mapc</span> <span class="hl opt">'</span>kill-local-variable sh-var-list<span class="hl opt">)</span></div>
<div class="pre"><a id="l2653" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2653" class="linenr">2653 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> sh-make-vars-local</div>
<div class="pre"><a id="l2654" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2654" class="linenr">2654 </a>      <span class="hl opt">(</span><span class="hl kwa">mapcar</span> <span class="hl opt">'</span>make-local-variable sh-var-list<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2655" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2655" class="linenr">2655 </a></div>
<div class="pre"><a id="l2656" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2656" class="linenr">2656 </a></div>
<div class="pre"><a id="l2657" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2657" class="linenr">2657 </a><span class="hl slc">;; Theoretically these are only needed in shell and derived modes.</span></div>
<div class="pre"><a id="l2658" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2658" class="linenr">2658 </a><span class="hl slc">;; However, the routines which use them are only called in those modes.</span></div>
<div class="pre"><a id="l2659" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2659" class="linenr">2659 </a><span class="hl opt">(</span><span class="hl kwa">defconst</span> sh-special-keywords <span class="hl str">&quot;then</span><span class="hl esc">\\</span><span class="hl str">|do&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2660" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2660" class="linenr">2660 </a></div>
<div class="pre"><a id="l2661" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2661" class="linenr">2661 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-help-string-for-variable <span class="hl opt">(</span><span class="hl kwa">var</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2662" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2662" class="linenr">2662 </a>  <span class="hl str">&quot;Construct a string for `sh-read-variable' when changing variable VAR .&quot;</span></div>
<div class="pre"><a id="l2663" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2663" class="linenr">2663 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">msg</span> <span class="hl opt">(</span><span class="hl kwa">documentation-property</span> var <span class="hl opt">'</span>variable-documentation<span class="hl opt">))</span></div>
<div class="pre"><a id="l2664" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2664" class="linenr">2664 </a>        <span class="hl opt">(</span><span class="hl kwa">msg2</span> <span class="hl str">&quot;&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2665" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2665" class="linenr">2665 </a>    <span class="hl opt">(</span><span class="hl kwa">unless</span> <span class="hl opt">(</span><span class="hl kwa">memq</span> var <span class="hl opt">'(</span><span class="hl kwa">sh-first-lines-indent</span> sh-indent-comment<span class="hl opt">))</span></div>
<div class="pre"><a id="l2666" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2666" class="linenr">2666 </a>      <span class="hl opt">(</span><span class="hl kwa">setq</span> msg2</div>
<div class="pre"><a id="l2667" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2667" class="linenr">2667 </a>            <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span></div>
<div class="pre"><a id="l2668" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2668" class="linenr">2668 </a><span class="hl str">You can enter a number (positive to increase indentation,</span></div>
<div class="pre"><a id="l2669" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2669" class="linenr">2669 </a><span class="hl str">negative to decrease indentation, zero for no change to indentation).</span></div>
<div class="pre"><a id="l2670" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2670" class="linenr">2670 </a><span class="hl str"></span></div>
<div class="pre"><a id="l2671" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2671" class="linenr">2671 </a><span class="hl str">Or, you can enter one of the following symbols which are relative to</span></div>
<div class="pre"><a id="l2672" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2672" class="linenr">2672 </a><span class="hl str">the value of variable `sh-basic-offset'</span></div>
<div class="pre"><a id="l2673" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2673" class="linenr">2673 </a><span class="hl str">which in this buffer is currently %s.</span></div>
<div class="pre"><a id="l2674" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2674" class="linenr">2674 </a><span class="hl str"></span></div>
<div class="pre"><a id="l2675" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2675" class="linenr">2675 </a><span class="hl str"></span><span class="hl esc">\t</span><span class="hl str">%s.&quot;</span></div>
<div class="pre"><a id="l2676" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2676" class="linenr">2676 </a>                    sh-basic-offset</div>
<div class="pre"><a id="l2677" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2677" class="linenr">2677 </a>                    <span class="hl opt">(</span><span class="hl kwa">mapconcat</span> <span class="hl opt">(</span><span class="hl kwa">lambda</span> <span class="hl opt">(</span><span class="hl kwa">x</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2678" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2678" class="linenr">2678 </a>                                 <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl opt">(</span><span class="hl kwa">1-</span> <span class="hl opt">(</span><span class="hl kwa">length</span> x<span class="hl opt">))</span> x<span class="hl opt">))</span></div>
<div class="pre"><a id="l2679" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2679" class="linenr">2679 </a>                               sh-symbol-list  <span class="hl str">&quot;</span><span class="hl esc">\n\t</span><span class="hl str">&quot;</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l2680" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2680" class="linenr">2680 </a>    <span class="hl opt">(</span><span class="hl kwa">concat</span></div>
<div class="pre"><a id="l2681" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2681" class="linenr">2681 </a>     <span class="hl slc">;; The following shows the global not the local value!</span></div>
<div class="pre"><a id="l2682" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2682" class="linenr">2682 </a>     <span class="hl slc">;; (format &quot;Current value of %s is %s\n\n&quot; var (symbol-value var))</span></div>
<div class="pre"><a id="l2683" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2683" class="linenr">2683 </a>     msg msg2<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2684" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2684" class="linenr">2684 </a></div>
<div class="pre"><a id="l2685" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2685" class="linenr">2685 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-read-variable <span class="hl opt">(</span><span class="hl kwa">var</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2686" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2686" class="linenr">2686 </a>  <span class="hl str">&quot;Read a new value for indentation variable VAR.&quot;</span></div>
<div class="pre"><a id="l2687" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2687" class="linenr">2687 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">minibuffer-help-form</span> <span class="hl opt">`(</span><span class="hl kwa">sh-help-string-for-variable</span></div>
<div class="pre"><a id="l2688" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2688" class="linenr">2688 </a>                                <span class="hl opt">(</span><span class="hl kwa">quote</span> <span class="hl opt">,</span>var<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2689" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2689" class="linenr">2689 </a>        val<span class="hl opt">)</span></div>
<div class="pre"><a id="l2690" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2690" class="linenr">2690 </a>    <span class="hl opt">(</span><span class="hl kwa">setq</span> val <span class="hl opt">(</span><span class="hl kwa">read-from-minibuffer</span></div>
<div class="pre"><a id="l2691" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2691" class="linenr">2691 </a>               <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;New value for %s (press %s for help): &quot;</span></div>
<div class="pre"><a id="l2692" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2692" class="linenr">2692 </a>                       var  <span class="hl opt">(</span><span class="hl kwa">single-key-description</span> help-char<span class="hl opt">))</span></div>
<div class="pre"><a id="l2693" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2693" class="linenr">2693 </a>               <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;%s&quot;</span> <span class="hl opt">(</span><span class="hl kwa">symbol-value</span> var<span class="hl opt">))</span></div>
<div class="pre"><a id="l2694" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2694" class="linenr">2694 </a>               nil t<span class="hl opt">))</span></div>
<div class="pre"><a id="l2695" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2695" class="linenr">2695 </a>    val<span class="hl opt">))</span></div>
<div class="pre"><a id="l2696" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2696" class="linenr">2696 </a></div>
<div class="pre"><a id="l2697" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2697" class="linenr">2697 </a></div>
<div class="pre"><a id="l2698" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2698" class="linenr">2698 </a></div>
<div class="pre"><a id="l2699" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2699" class="linenr">2699 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-in-comment-or-string <span class="hl opt">(</span><span class="hl kwa">start</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2700" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2700" class="linenr">2700 </a>  <span class="hl str">&quot;Return non-nil if START is in a comment or string.&quot;</span></div>
<div class="pre"><a id="l2701" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2701" class="linenr">2701 </a>  <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l2702" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2702" class="linenr">2702 </a>    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">state</span> <span class="hl opt">(</span><span class="hl kwa">syntax-ppss</span> start<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2703" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2703" class="linenr">2703 </a>      <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">3</span> state<span class="hl opt">) (</span><span class="hl kwa">nth</span> <span class="hl num">4</span> state<span class="hl opt">)))))</span></div>
<div class="pre"><a id="l2704" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2704" class="linenr">2704 </a></div>
<div class="pre"><a id="l2705" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2705" class="linenr">2705 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-goto-matching-if <span class="hl opt">()</span></div>
<div class="pre"><a id="l2706" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2706" class="linenr">2706 </a>  <span class="hl str">&quot;Go to the matching if for a fi.</span></div>
<div class="pre"><a id="l2707" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2707" class="linenr">2707 </a><span class="hl str">This handles nested if..fi pairs.&quot;</span></div>
<div class="pre"><a id="l2708" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2708" class="linenr">2708 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">found</span> <span class="hl opt">(</span><span class="hl kwa">sh-find-prev-matching</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">bif</span><span class="hl esc">\\</span><span class="hl str">b&quot;</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">bfi</span><span class="hl esc">\\</span><span class="hl str">b&quot;</span> <span class="hl num">1</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2709" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2709" class="linenr">2709 </a>    <span class="hl opt">(</span><span class="hl kwa">if</span> found</div>
<div class="pre"><a id="l2710" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2710" class="linenr">2710 </a>        <span class="hl opt">(</span><span class="hl kwa">goto-char</span> found<span class="hl opt">))))</span></div>
<div class="pre"><a id="l2711" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2711" class="linenr">2711 </a></div>
<div class="pre"><a id="l2712" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2712" class="linenr">2712 </a></div>
<div class="pre"><a id="l2713" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2713" class="linenr">2713 </a><span class="hl slc">;; Functions named sh-handle-this-XXX are called when the keyword on the</span></div>
<div class="pre"><a id="l2714" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2714" class="linenr">2714 </a><span class="hl slc">;; line whose indentation is being handled contain XXX;</span></div>
<div class="pre"><a id="l2715" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2715" class="linenr">2715 </a><span class="hl slc">;; those named sh-handle-prev-XXX are when XXX appears on the previous line.</span></div>
<div class="pre"><a id="l2716" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2716" class="linenr">2716 </a></div>
<div class="pre"><a id="l2717" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2717" class="linenr">2717 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-handle-prev-if <span class="hl opt">()</span></div>
<div class="pre"><a id="l2718" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2718" class="linenr">2718 </a>  <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">'(+</span> sh-indent-after-if<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2719" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2719" class="linenr">2719 </a></div>
<div class="pre"><a id="l2720" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2720" class="linenr">2720 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-handle-this-else <span class="hl opt">()</span></div>
<div class="pre"><a id="l2721" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2721" class="linenr">2721 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">sh-goto-matching-if</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2722" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2722" class="linenr">2722 </a>      <span class="hl slc">;; (list &quot;aligned to if&quot;)</span></div>
<div class="pre"><a id="l2723" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2723" class="linenr">2723 </a>      <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl str">&quot;aligned to if&quot;</span> <span class="hl opt">'(+</span> sh-indent-for-else<span class="hl opt">))</span></div>
<div class="pre"><a id="l2724" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2724" class="linenr">2724 </a>    nil</div>
<div class="pre"><a id="l2725" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2725" class="linenr">2725 </a>    <span class="hl opt">))</span></div>
<div class="pre"><a id="l2726" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2726" class="linenr">2726 </a></div>
<div class="pre"><a id="l2727" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2727" class="linenr">2727 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-handle-prev-else <span class="hl opt">()</span></div>
<div class="pre"><a id="l2728" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2728" class="linenr">2728 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">sh-goto-matching-if</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2729" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2729" class="linenr">2729 </a>      <span class="hl opt">(</span><span class="hl kwa">list</span>  <span class="hl opt">'(+</span> sh-indent-after-if<span class="hl opt">))</span></div>
<div class="pre"><a id="l2730" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2730" class="linenr">2730 </a>    <span class="hl opt">))</span></div>
<div class="pre"><a id="l2731" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2731" class="linenr">2731 </a></div>
<div class="pre"><a id="l2732" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2732" class="linenr">2732 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-handle-this-fi <span class="hl opt">()</span></div>
<div class="pre"><a id="l2733" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2733" class="linenr">2733 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">sh-goto-matching-if</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2734" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2734" class="linenr">2734 </a>      <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl str">&quot;aligned to if&quot;</span> <span class="hl opt">'(+</span> sh-indent-for-fi<span class="hl opt">))</span></div>
<div class="pre"><a id="l2735" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2735" class="linenr">2735 </a>    nil</div>
<div class="pre"><a id="l2736" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2736" class="linenr">2736 </a>    <span class="hl opt">))</span></div>
<div class="pre"><a id="l2737" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2737" class="linenr">2737 </a></div>
<div class="pre"><a id="l2738" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2738" class="linenr">2738 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-handle-prev-fi <span class="hl opt">()</span></div>
<div class="pre"><a id="l2739" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2739" class="linenr">2739 </a>  <span class="hl slc">;; Why do we have this rule?  Because we must go back to the if</span></div>
<div class="pre"><a id="l2740" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2740" class="linenr">2740 </a>  <span class="hl slc">;; to get its indent.  We may continue back from there.</span></div>
<div class="pre"><a id="l2741" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2741" class="linenr">2741 </a>  <span class="hl slc">;; We return nil because we don't have anything to add to result,</span></div>
<div class="pre"><a id="l2742" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2742" class="linenr">2742 </a>  <span class="hl slc">;; the side affect of setting align-point is all that matters.</span></div>
<div class="pre"><a id="l2743" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2743" class="linenr">2743 </a>  <span class="hl slc">;; we could return a comment (a string) but I can't think of a good one...</span></div>
<div class="pre"><a id="l2744" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2744" class="linenr">2744 </a>  <span class="hl opt">(</span><span class="hl kwa">sh-goto-matching-if</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2745" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2745" class="linenr">2745 </a>  nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l2746" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2746" class="linenr">2746 </a></div>
<div class="pre"><a id="l2747" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2747" class="linenr">2747 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-handle-this-then <span class="hl opt">()</span></div>
<div class="pre"><a id="l2748" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2748" class="linenr">2748 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">p</span> <span class="hl opt">(</span><span class="hl kwa">sh-goto-matching-if</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2749" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2749" class="linenr">2749 </a>    <span class="hl opt">(</span><span class="hl kwa">if</span> p</div>
<div class="pre"><a id="l2750" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2750" class="linenr">2750 </a>        <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">'(+</span> sh-indent-for-then<span class="hl opt">))</span></div>
<div class="pre"><a id="l2751" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2751" class="linenr">2751 </a>      <span class="hl opt">)))</span></div>
<div class="pre"><a id="l2752" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2752" class="linenr">2752 </a></div>
<div class="pre"><a id="l2753" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2753" class="linenr">2753 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-handle-prev-then <span class="hl opt">()</span></div>
<div class="pre"><a id="l2754" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2754" class="linenr">2754 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">p</span> <span class="hl opt">(</span><span class="hl kwa">sh-goto-matching-if</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2755" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2755" class="linenr">2755 </a>    <span class="hl opt">(</span><span class="hl kwa">if</span> p</div>
<div class="pre"><a id="l2756" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2756" class="linenr">2756 </a>        <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">'(+</span> sh-indent-after-if<span class="hl opt">))</span></div>
<div class="pre"><a id="l2757" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2757" class="linenr">2757 </a>      <span class="hl opt">)))</span></div>
<div class="pre"><a id="l2758" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2758" class="linenr">2758 </a></div>
<div class="pre"><a id="l2759" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2759" class="linenr">2759 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-handle-prev-open <span class="hl opt">()</span></div>
<div class="pre"><a id="l2760" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2760" class="linenr">2760 </a>  <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l2761" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2761" class="linenr">2761 </a>    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">x</span> <span class="hl opt">(</span><span class="hl kwa">sh-prev-stmt</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2762" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2762" class="linenr">2762 </a>      <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">and</span> x</div>
<div class="pre"><a id="l2763" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2763" class="linenr">2763 </a>               <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l2764" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2764" class="linenr">2764 </a>                 <span class="hl opt">(</span><span class="hl kwa">goto-char</span> x<span class="hl opt">)</span></div>
<div class="pre"><a id="l2765" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2765" class="linenr">2765 </a>                 <span class="hl opt">(</span><span class="hl kwa">or</span></div>
<div class="pre"><a id="l2766" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2766" class="linenr">2766 </a>                  <span class="hl opt">(</span><span class="hl kwa">looking-at</span> <span class="hl str">&quot;function</span><span class="hl esc">\\</span><span class="hl str">b&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2767" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2767" class="linenr">2767 </a>                  <span class="hl opt">(</span><span class="hl kwa">looking-at</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">s-*</span><span class="hl esc">\\</span><span class="hl str">S-+</span><span class="hl esc">\\</span><span class="hl str">s-*()&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2768" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2768" class="linenr">2768 </a>                  <span class="hl opt">)))</span></div>
<div class="pre"><a id="l2769" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2769" class="linenr">2769 </a>          <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">'(+</span> sh-indent-after-function<span class="hl opt">))</span></div>
<div class="pre"><a id="l2770" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2770" class="linenr">2770 </a>        <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">'(+</span> sh-indent-after-open<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2771" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2771" class="linenr">2771 </a>      <span class="hl opt">)))</span></div>
<div class="pre"><a id="l2772" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2772" class="linenr">2772 </a></div>
<div class="pre"><a id="l2773" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2773" class="linenr">2773 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-handle-this-close <span class="hl opt">()</span></div>
<div class="pre"><a id="l2774" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2774" class="linenr">2774 </a>  <span class="hl opt">(</span><span class="hl kwa">forward-char</span> <span class="hl num">1</span><span class="hl opt">)</span> <span class="hl slc">;; move over &quot;)&quot;</span></div>
<div class="pre"><a id="l2775" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2775" class="linenr">2775 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">sh-safe-forward-sexp</span> -<span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2776" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2776" class="linenr">2776 </a>      <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl str">&quot;aligned to opening paren&quot;</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2777" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2777" class="linenr">2777 </a></div>
<div class="pre"><a id="l2778" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2778" class="linenr">2778 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-goto-matching-case <span class="hl opt">()</span></div>
<div class="pre"><a id="l2779" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2779" class="linenr">2779 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">found</span> <span class="hl opt">(</span><span class="hl kwa">sh-find-prev-matching</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">bcase</span><span class="hl esc">\\</span><span class="hl str">b&quot;</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">besac</span><span class="hl esc">\\</span><span class="hl str">b&quot;</span> <span class="hl num">1</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2780" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2780" class="linenr">2780 </a>    <span class="hl opt">(</span><span class="hl kwa">if</span> found <span class="hl opt">(</span><span class="hl kwa">goto-char</span> found<span class="hl opt">))))</span></div>
<div class="pre"><a id="l2781" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2781" class="linenr">2781 </a></div>
<div class="pre"><a id="l2782" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2782" class="linenr">2782 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-handle-prev-case <span class="hl opt">()</span></div>
<div class="pre"><a id="l2783" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2783" class="linenr">2783 </a>  <span class="hl slc">;; This is typically called when point is on same line as a case</span></div>
<div class="pre"><a id="l2784" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2784" class="linenr">2784 </a>  <span class="hl slc">;; we shouldn't -- and can't find prev-case</span></div>
<div class="pre"><a id="l2785" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2785" class="linenr">2785 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">looking-at</span> <span class="hl str">&quot;.*</span><span class="hl esc">\\</span><span class="hl str">&lt;case</span><span class="hl esc">\\</span><span class="hl str">&gt;&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2786" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2786" class="linenr">2786 </a>      <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">'(+</span> sh-indent-for-case-label<span class="hl opt">))</span></div>
<div class="pre"><a id="l2787" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2787" class="linenr">2787 </a>    <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;We don't seem to be on a line with a case&quot;</span><span class="hl opt">)))</span> <span class="hl slc">;; debug</span></div>
<div class="pre"><a id="l2788" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2788" class="linenr">2788 </a></div>
<div class="pre"><a id="l2789" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2789" class="linenr">2789 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-handle-this-esac <span class="hl opt">()</span></div>
<div class="pre"><a id="l2790" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2790" class="linenr">2790 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">sh-goto-matching-case</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2791" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2791" class="linenr">2791 </a>      <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl str">&quot;aligned to matching case&quot;</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2792" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2792" class="linenr">2792 </a></div>
<div class="pre"><a id="l2793" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2793" class="linenr">2793 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-handle-prev-esac <span class="hl opt">()</span></div>
<div class="pre"><a id="l2794" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2794" class="linenr">2794 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">sh-goto-matching-case</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2795" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2795" class="linenr">2795 </a>      <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl str">&quot;matching case&quot;</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2796" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2796" class="linenr">2796 </a></div>
<div class="pre"><a id="l2797" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2797" class="linenr">2797 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-handle-after-case-label <span class="hl opt">()</span></div>
<div class="pre"><a id="l2798" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2798" class="linenr">2798 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">sh-goto-matching-case</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2799" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2799" class="linenr">2799 </a>      <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">'(+</span> sh-indent-for-case-alt<span class="hl opt">))))</span></div>
<div class="pre"><a id="l2800" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2800" class="linenr">2800 </a></div>
<div class="pre"><a id="l2801" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2801" class="linenr">2801 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-handle-prev-case-alt-end <span class="hl opt">()</span></div>
<div class="pre"><a id="l2802" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2802" class="linenr">2802 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">sh-goto-matching-case</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2803" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2803" class="linenr">2803 </a>      <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">'(+</span> sh-indent-for-case-label<span class="hl opt">))))</span></div>
<div class="pre"><a id="l2804" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2804" class="linenr">2804 </a></div>
<div class="pre"><a id="l2805" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2805" class="linenr">2805 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-safe-forward-sexp <span class="hl opt">(&amp;</span>optional arg<span class="hl opt">)</span></div>
<div class="pre"><a id="l2806" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2806" class="linenr">2806 </a>  <span class="hl str">&quot;Try and do a `forward-sexp', but do not error.</span></div>
<div class="pre"><a id="l2807" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2807" class="linenr">2807 </a><span class="hl str">Return new point if successful, nil if an error occurred.&quot;</span></div>
<div class="pre"><a id="l2808" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2808" class="linenr">2808 </a>  <span class="hl opt">(</span><span class="hl kwa">condition-case</span> nil</div>
<div class="pre"><a id="l2809" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2809" class="linenr">2809 </a>      <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l2810" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2810" class="linenr">2810 </a>        <span class="hl opt">(</span><span class="hl kwa">forward-sexp</span> <span class="hl opt">(</span><span class="hl kwa">or</span> arg <span class="hl num">1</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2811" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2811" class="linenr">2811 </a>        <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))</span>        <span class="hl slc">;; return point if successful</span></div>
<div class="pre"><a id="l2812" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2812" class="linenr">2812 </a>    <span class="hl opt">(</span><span class="hl kwa">error</span></div>
<div class="pre"><a id="l2813" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2813" class="linenr">2813 </a>     <span class="hl opt">(</span><span class="hl kwa">sh-debug</span> <span class="hl str">&quot;oops!(1) %d&quot;</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2814" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2814" class="linenr">2814 </a>     nil<span class="hl opt">)))</span> <span class="hl slc">;; return nil if fail</span></div>
<div class="pre"><a id="l2815" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2815" class="linenr">2815 </a></div>
<div class="pre"><a id="l2816" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2816" class="linenr">2816 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-goto-match-for-done <span class="hl opt">()</span></div>
<div class="pre"><a id="l2817" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2817" class="linenr">2817 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">found</span> <span class="hl opt">(</span><span class="hl kwa">sh-find-prev-matching</span> sh-regexp-for-done sh-re-done <span class="hl num">1</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2818" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2818" class="linenr">2818 </a>    <span class="hl opt">(</span><span class="hl kwa">if</span> found</div>
<div class="pre"><a id="l2819" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2819" class="linenr">2819 </a>        <span class="hl opt">(</span><span class="hl kwa">goto-char</span> found<span class="hl opt">))))</span></div>
<div class="pre"><a id="l2820" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2820" class="linenr">2820 </a></div>
<div class="pre"><a id="l2821" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2821" class="linenr">2821 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-handle-this-done <span class="hl opt">()</span></div>
<div class="pre"><a id="l2822" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2822" class="linenr">2822 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">sh-goto-match-for-done</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2823" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2823" class="linenr">2823 </a>      <span class="hl opt">(</span><span class="hl kwa">list</span>  <span class="hl str">&quot;aligned to do stmt&quot;</span>  <span class="hl opt">'(+</span> sh-indent-for-done<span class="hl opt">))))</span></div>
<div class="pre"><a id="l2824" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2824" class="linenr">2824 </a></div>
<div class="pre"><a id="l2825" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2825" class="linenr">2825 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-handle-prev-done <span class="hl opt">()</span></div>
<div class="pre"><a id="l2826" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2826" class="linenr">2826 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">sh-goto-match-for-done</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2827" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2827" class="linenr">2827 </a>      <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl str">&quot;previous done&quot;</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2828" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2828" class="linenr">2828 </a></div>
<div class="pre"><a id="l2829" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2829" class="linenr">2829 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-handle-this-do <span class="hl opt">()</span></div>
<div class="pre"><a id="l2830" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2830" class="linenr">2830 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">sh-goto-match-for-done</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2831" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2831" class="linenr">2831 </a>      <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">'(+</span> sh-indent-for-do<span class="hl opt">))))</span></div>
<div class="pre"><a id="l2832" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2832" class="linenr">2832 </a></div>
<div class="pre"><a id="l2833" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2833" class="linenr">2833 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-handle-prev-do <span class="hl opt">()</span></div>
<div class="pre"><a id="l2834" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2834" class="linenr">2834 </a>  <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l2835" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2835" class="linenr">2835 </a>   <span class="hl opt">((</span><span class="hl kwa">save-restriction</span></div>
<div class="pre"><a id="l2836" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2836" class="linenr">2836 </a>      <span class="hl opt">(</span><span class="hl kwa">narrow-to-region</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">) (</span><span class="hl kwa">line-beginning-position</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2837" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2837" class="linenr">2837 </a>      <span class="hl opt">(</span><span class="hl kwa">sh-goto-match-for-done</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2838" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2838" class="linenr">2838 </a>    <span class="hl opt">(</span><span class="hl kwa">sh-debug</span> <span class="hl str">&quot;match for done found on THIS line&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2839" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2839" class="linenr">2839 </a>    <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">'(+</span> sh-indent-after-loop-construct<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2840" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2840" class="linenr">2840 </a>   <span class="hl opt">((</span><span class="hl kwa">sh-goto-match-for-done</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2841" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2841" class="linenr">2841 </a>    <span class="hl opt">(</span><span class="hl kwa">sh-debug</span> <span class="hl str">&quot;match for done found on PREV line&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2842" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2842" class="linenr">2842 </a>    <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">'(+</span> sh-indent-after-do<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2843" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2843" class="linenr">2843 </a>   <span class="hl opt">(</span><span class="hl kwa">t</span></div>
<div class="pre"><a id="l2844" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2844" class="linenr">2844 </a>    <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;match for done NOT found&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2845" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2845" class="linenr">2845 </a>    nil<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2846" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2846" class="linenr">2846 </a></div>
<div class="pre"><a id="l2847" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2847" class="linenr">2847 </a><span class="hl slc">;; for rc:</span></div>
<div class="pre"><a id="l2848" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2848" class="linenr">2848 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-find-prev-switch <span class="hl opt">()</span></div>
<div class="pre"><a id="l2849" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2849" class="linenr">2849 </a>  <span class="hl str">&quot;Find the line for the switch keyword matching this line's case keyword.&quot;</span></div>
<div class="pre"><a id="l2850" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2850" class="linenr">2850 </a>  <span class="hl opt">(</span><span class="hl kwa">re-search-backward</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">&lt;switch</span><span class="hl esc">\\</span><span class="hl str">&gt;&quot;</span> nil t<span class="hl opt">))</span></div>
<div class="pre"><a id="l2851" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2851" class="linenr">2851 </a></div>
<div class="pre"><a id="l2852" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2852" class="linenr">2852 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-handle-this-rc-case <span class="hl opt">()</span></div>
<div class="pre"><a id="l2853" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2853" class="linenr">2853 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">sh-find-prev-switch</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2854" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2854" class="linenr">2854 </a>      <span class="hl opt">(</span><span class="hl kwa">list</span>  <span class="hl opt">'(+</span> sh-indent-after-switch<span class="hl opt">))</span></div>
<div class="pre"><a id="l2855" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2855" class="linenr">2855 </a>    <span class="hl slc">;; (list  '(+ sh-indent-for-case-label))</span></div>
<div class="pre"><a id="l2856" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2856" class="linenr">2856 </a>    nil<span class="hl opt">))</span></div>
<div class="pre"><a id="l2857" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2857" class="linenr">2857 </a></div>
<div class="pre"><a id="l2858" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2858" class="linenr">2858 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-handle-prev-rc-case <span class="hl opt">()</span></div>
<div class="pre"><a id="l2859" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2859" class="linenr">2859 </a>  <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">'(+</span> sh-indent-after-case<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2860" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2860" class="linenr">2860 </a></div>
<div class="pre"><a id="l2861" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2861" class="linenr">2861 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-check-rule <span class="hl opt">(</span><span class="hl kwa">n</span> thing<span class="hl opt">)</span></div>
<div class="pre"><a id="l2862" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2862" class="linenr">2862 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">rule</span> <span class="hl opt">(</span><span class="hl kwa">nth</span> n <span class="hl opt">(</span><span class="hl kwa">assoc</span> thing sh-kw-alist<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2863" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2863" class="linenr">2863 </a>        <span class="hl opt">(</span><span class="hl kwa">val</span> nil<span class="hl opt">))</span></div>
<div class="pre"><a id="l2864" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2864" class="linenr">2864 </a>    <span class="hl opt">(</span><span class="hl kwa">if</span> rule</div>
<div class="pre"><a id="l2865" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2865" class="linenr">2865 </a>        <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l2866" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2866" class="linenr">2866 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> val <span class="hl opt">(</span><span class="hl kwa">funcall</span> rule<span class="hl opt">))</span></div>
<div class="pre"><a id="l2867" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2867" class="linenr">2867 </a>          <span class="hl opt">(</span><span class="hl kwa">sh-debug</span> <span class="hl str">&quot;rule (%d) for %s at %d is %s</span><span class="hl esc">\n</span><span class="hl str">-&gt; returned %s&quot;</span></div>
<div class="pre"><a id="l2868" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2868" class="linenr">2868 </a>                    n thing <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)</span> rule val<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2869" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2869" class="linenr">2869 </a>    val<span class="hl opt">))</span></div>
<div class="pre"><a id="l2870" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2870" class="linenr">2870 </a></div>
<div class="pre"><a id="l2871" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2871" class="linenr">2871 </a></div>
<div class="pre"><a id="l2872" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2872" class="linenr">2872 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-get-indent-info <span class="hl opt">()</span></div>
<div class="pre"><a id="l2873" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2873" class="linenr">2873 </a>  <span class="hl str">&quot;Return indent-info for this line.</span></div>
<div class="pre"><a id="l2874" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2874" class="linenr">2874 </a><span class="hl str">This is a list.  nil means the line is to be left as is.</span></div>
<div class="pre"><a id="l2875" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2875" class="linenr">2875 </a><span class="hl str">Otherwise it contains one or more of the following sublists:</span></div>
<div class="pre"><a id="l2876" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2876" class="linenr">2876 </a><span class="hl str">\(t NUMBER)   NUMBER is the base location in the buffer that indentation is</span></div>
<div class="pre"><a id="l2877" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2877" class="linenr">2877 </a><span class="hl str">             relative to.  If present, this is always the first of the</span></div>
<div class="pre"><a id="l2878" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2878" class="linenr">2878 </a><span class="hl str">             sublists.  The indentation of the line in question is</span></div>
<div class="pre"><a id="l2879" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2879" class="linenr">2879 </a><span class="hl str">             derived from the indentation of this point, possibly</span></div>
<div class="pre"><a id="l2880" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2880" class="linenr">2880 </a><span class="hl str">             modified by subsequent sublists.</span></div>
<div class="pre"><a id="l2881" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2881" class="linenr">2881 </a><span class="hl str">\(+ VAR)</span></div>
<div class="pre"><a id="l2882" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2882" class="linenr">2882 </a><span class="hl str">\(- VAR)      Get the value of variable VAR and add to or subtract from</span></div>
<div class="pre"><a id="l2883" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2883" class="linenr">2883 </a><span class="hl str">             the indentation calculated so far.</span></div>
<div class="pre"><a id="l2884" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2884" class="linenr">2884 </a><span class="hl str">\(= VAR)      Get the value of variable VAR and *replace* the</span></div>
<div class="pre"><a id="l2885" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2885" class="linenr">2885 </a><span class="hl str">             indentation with its value.  This only occurs for</span></div>
<div class="pre"><a id="l2886" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2886" class="linenr">2886 </a><span class="hl str">             special variables such as `sh-indent-comment'.</span></div>
<div class="pre"><a id="l2887" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2887" class="linenr">2887 </a><span class="hl str">STRING       This is ignored for the purposes of calculating</span></div>
<div class="pre"><a id="l2888" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2888" class="linenr">2888 </a><span class="hl str">             indentation, it is printed in certain cases to help show</span></div>
<div class="pre"><a id="l2889" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2889" class="linenr">2889 </a><span class="hl str">             what the indentation is based on.&quot;</span></div>
<div class="pre"><a id="l2890" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2890" class="linenr">2890 </a>  <span class="hl slc">;; See comments before `sh-kw'.</span></div>
<div class="pre"><a id="l2891" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2891" class="linenr">2891 </a>  <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l2892" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2892" class="linenr">2892 </a>    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">have-result</span> nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l2893" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2893" class="linenr">2893 </a>          this-kw</div>
<div class="pre"><a id="l2894" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2894" class="linenr">2894 </a>          val</div>
<div class="pre"><a id="l2895" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2895" class="linenr">2895 </a>          <span class="hl opt">(</span><span class="hl kwa">result</span> nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l2896" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2896" class="linenr">2896 </a>          <span class="hl opt">(</span><span class="hl kwa">align-point</span> nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l2897" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2897" class="linenr">2897 </a>          prev-line-end x<span class="hl opt">)</span></div>
<div class="pre"><a id="l2898" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2898" class="linenr">2898 </a>      <span class="hl opt">(</span><span class="hl kwa">beginning-of-line</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2899" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2899" class="linenr">2899 </a>      <span class="hl slc">;; Note: setting result to t means we are done and will return nil.</span></div>
<div class="pre"><a id="l2900" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2900" class="linenr">2900 </a>      <span class="hl slc">;;(This function never returns just t.)</span></div>
<div class="pre"><a id="l2901" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2901" class="linenr">2901 </a>      <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l2902" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2902" class="linenr">2902 </a>       <span class="hl opt">((</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">3</span> <span class="hl opt">(</span><span class="hl kwa">syntax-ppss</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2903" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2903" class="linenr">2903 </a>            <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl opt">(</span><span class="hl kwa">get-text-property</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">) '</span>face<span class="hl opt">) '</span>sh-heredoc<span class="hl opt">))</span></div>
<div class="pre"><a id="l2904" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2904" class="linenr">2904 </a>        <span class="hl slc">;; String continuation -- don't indent</span></div>
<div class="pre"><a id="l2905" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2905" class="linenr">2905 </a>        <span class="hl opt">(</span><span class="hl kwa">setq</span> result t<span class="hl opt">)</span></div>
<div class="pre"><a id="l2906" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2906" class="linenr">2906 </a>        <span class="hl opt">(</span><span class="hl kwa">setq</span> have-result t<span class="hl opt">))</span></div>
<div class="pre"><a id="l2907" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2907" class="linenr">2907 </a>       <span class="hl opt">((</span><span class="hl kwa">looking-at</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">s-*#&quot;</span><span class="hl opt">)</span>           <span class="hl slc">; was (equal this-kw &quot;#&quot;)</span></div>
<div class="pre"><a id="l2908" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2908" class="linenr">2908 </a>        <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">bobp</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2909" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2909" class="linenr">2909 </a>            <span class="hl opt">(</span><span class="hl kwa">setq</span> result t<span class="hl opt">)</span> <span class="hl slc">;; return nil if 1st line!</span></div>
<div class="pre"><a id="l2910" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2910" class="linenr">2910 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> result <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">'(=</span> sh-indent-comment<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2911" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2911" class="linenr">2911 </a>          <span class="hl slc">;; we still need to get previous line in case</span></div>
<div class="pre"><a id="l2912" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2912" class="linenr">2912 </a>          <span class="hl slc">;; sh-indent-comment is t (indent as normal)</span></div>
<div class="pre"><a id="l2913" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2913" class="linenr">2913 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> align-point <span class="hl opt">(</span><span class="hl kwa">sh-prev-line</span> nil<span class="hl opt">))</span></div>
<div class="pre"><a id="l2914" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2914" class="linenr">2914 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> have-result nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l2915" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2915" class="linenr">2915 </a>          <span class="hl opt">))</span></div>
<div class="pre"><a id="l2916" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2916" class="linenr">2916 </a>       <span class="hl opt">)</span> <span class="hl slc">;; cond</span></div>
<div class="pre"><a id="l2917" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2917" class="linenr">2917 </a></div>
<div class="pre"><a id="l2918" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2918" class="linenr">2918 </a>      <span class="hl opt">(</span><span class="hl kwa">unless</span> have-result</div>
<div class="pre"><a id="l2919" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2919" class="linenr">2919 </a>        <span class="hl slc">;; Continuation lines are handled specially</span></div>
<div class="pre"><a id="l2920" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2920" class="linenr">2920 </a>        <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">sh-this-is-a-continuation</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2921" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2921" class="linenr">2921 </a>            <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l2922" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2922" class="linenr">2922 </a>              <span class="hl opt">(</span><span class="hl kwa">setq</span> result</div>
<div class="pre"><a id="l2923" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2923" class="linenr">2923 </a>                    <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l2924" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2924" class="linenr">2924 </a>                          <span class="hl opt">(</span><span class="hl kwa">beginning-of-line</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2925" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2925" class="linenr">2925 </a>                          <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">memq</span> <span class="hl opt">(</span><span class="hl kwa">char-before</span> <span class="hl opt">(</span><span class="hl kwa">-</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)</span> <span class="hl num">2</span><span class="hl opt">)) '(</span>?\s ?<span class="hl esc">\t</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l2926" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2926" class="linenr">2926 </a>                        <span class="hl slc">;; By convention, if the continuation \ is not</span></div>
<div class="pre"><a id="l2927" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2927" class="linenr">2927 </a>                        <span class="hl slc">;; preceded by a SPC or a TAB it means that the line</span></div>
<div class="pre"><a id="l2928" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2928" class="linenr">2928 </a>                        <span class="hl slc">;; is cut at a place where spaces cannot be freely</span></div>
<div class="pre"><a id="l2929" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2929" class="linenr">2929 </a>                        <span class="hl slc">;; added/removed.  I.e. do not indent the line.</span></div>
<div class="pre"><a id="l2930" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2930" class="linenr">2930 </a>                        <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">'(=</span> nil<span class="hl opt">))</span></div>
<div class="pre"><a id="l2931" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2931" class="linenr">2931 </a>                      <span class="hl slc">;; We assume the line being continued is already</span></div>
<div class="pre"><a id="l2932" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2932" class="linenr">2932 </a>                      <span class="hl slc">;; properly indented...</span></div>
<div class="pre"><a id="l2933" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2933" class="linenr">2933 </a>                      <span class="hl slc">;; (setq prev-line-end (sh-prev-line))</span></div>
<div class="pre"><a id="l2934" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2934" class="linenr">2934 </a>                      <span class="hl opt">(</span><span class="hl kwa">setq</span> align-point <span class="hl opt">(</span><span class="hl kwa">sh-prev-line</span> nil<span class="hl opt">))</span></div>
<div class="pre"><a id="l2935" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2935" class="linenr">2935 </a>                      <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">'(+</span> sh-indent-for-continuation<span class="hl opt">))))</span></div>
<div class="pre"><a id="l2936" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2936" class="linenr">2936 </a>              <span class="hl opt">(</span><span class="hl kwa">setq</span> have-result t<span class="hl opt">))</span></div>
<div class="pre"><a id="l2937" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2937" class="linenr">2937 </a>          <span class="hl opt">(</span><span class="hl kwa">beginning-of-line</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2938" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2938" class="linenr">2938 </a>          <span class="hl opt">(</span><span class="hl kwa">skip-chars-forward</span> <span class="hl str">&quot;</span> <span class="hl esc">\t</span><span class="hl str">&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2939" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2939" class="linenr">2939 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> this-kw <span class="hl opt">(</span><span class="hl kwa">sh-get-kw</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2940" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2940" class="linenr">2940 </a></div>
<div class="pre"><a id="l2941" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2941" class="linenr">2941 </a>        <span class="hl slc">;; Handle &quot;this&quot; keyword:  first word on the line we're</span></div>
<div class="pre"><a id="l2942" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2942" class="linenr">2942 </a>        <span class="hl slc">;; calculating indentation info for.</span></div>
<div class="pre"><a id="l2943" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2943" class="linenr">2943 </a>        <span class="hl opt">(</span><span class="hl kwa">if</span> this-kw</div>
<div class="pre"><a id="l2944" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2944" class="linenr">2944 </a>            <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">setq</span> val <span class="hl opt">(</span><span class="hl kwa">sh-check-rule</span> <span class="hl num">1</span> this-kw<span class="hl opt">))</span></div>
<div class="pre"><a id="l2945" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2945" class="linenr">2945 </a>                <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l2946" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2946" class="linenr">2946 </a>                  <span class="hl opt">(</span><span class="hl kwa">setq</span> align-point <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2947" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2947" class="linenr">2947 </a>                  <span class="hl opt">(</span><span class="hl kwa">sh-debug</span></div>
<div class="pre"><a id="l2948" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2948" class="linenr">2948 </a>                   <span class="hl str">&quot;this - setting align-point to %d&quot;</span> align-point<span class="hl opt">)</span></div>
<div class="pre"><a id="l2949" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2949" class="linenr">2949 </a>                  <span class="hl opt">(</span><span class="hl kwa">setq</span> result <span class="hl opt">(</span><span class="hl kwa">append</span> result val<span class="hl opt">))</span></div>
<div class="pre"><a id="l2950" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2950" class="linenr">2950 </a>                  <span class="hl opt">(</span><span class="hl kwa">setq</span> have-result t<span class="hl opt">)</span></div>
<div class="pre"><a id="l2951" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2951" class="linenr">2951 </a>                  <span class="hl slc">;; set prev-line to continue processing remainder</span></div>
<div class="pre"><a id="l2952" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2952" class="linenr">2952 </a>                  <span class="hl slc">;; of this line as a previous line</span></div>
<div class="pre"><a id="l2953" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2953" class="linenr">2953 </a>                  <span class="hl opt">(</span><span class="hl kwa">setq</span> prev-line-end <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2954" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2954" class="linenr">2954 </a>                  <span class="hl opt">))))</span></div>
<div class="pre"><a id="l2955" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2955" class="linenr">2955 </a></div>
<div class="pre"><a id="l2956" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2956" class="linenr">2956 </a>      <span class="hl opt">(</span><span class="hl kwa">unless</span> have-result</div>
<div class="pre"><a id="l2957" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2957" class="linenr">2957 </a>        <span class="hl opt">(</span><span class="hl kwa">setq</span> prev-line-end <span class="hl opt">(</span><span class="hl kwa">sh-prev-line</span> <span class="hl opt">'</span>end<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2958" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2958" class="linenr">2958 </a></div>
<div class="pre"><a id="l2959" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2959" class="linenr">2959 </a>      <span class="hl opt">(</span><span class="hl kwa">if</span> prev-line-end</div>
<div class="pre"><a id="l2960" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2960" class="linenr">2960 </a>          <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l2961" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2961" class="linenr">2961 </a>            <span class="hl slc">;; We start off at beginning of this line.</span></div>
<div class="pre"><a id="l2962" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2962" class="linenr">2962 </a>            <span class="hl slc">;; Scan previous statements while this is &lt;=</span></div>
<div class="pre"><a id="l2963" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2963" class="linenr">2963 </a>            <span class="hl slc">;; start of previous line.</span></div>
<div class="pre"><a id="l2964" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2964" class="linenr">2964 </a>            <span class="hl opt">(</span><span class="hl kwa">goto-char</span> prev-line-end<span class="hl opt">)</span></div>
<div class="pre"><a id="l2965" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2965" class="linenr">2965 </a>            <span class="hl opt">(</span><span class="hl kwa">setq</span> x t<span class="hl opt">)</span></div>
<div class="pre"><a id="l2966" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2966" class="linenr">2966 </a>            <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">and</span> x <span class="hl opt">(</span><span class="hl kwa">setq</span> x  <span class="hl opt">(</span><span class="hl kwa">sh-prev-thing</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2967" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2967" class="linenr">2967 </a>              <span class="hl opt">(</span><span class="hl kwa">sh-debug</span> <span class="hl str">&quot;at %d x is: %s  result is: %s&quot;</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)</span> x result<span class="hl opt">)</span></div>
<div class="pre"><a id="l2968" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2968" class="linenr">2968 </a>              <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l2969" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2969" class="linenr">2969 </a>               <span class="hl opt">((</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">equal</span> x <span class="hl str">&quot;)&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2970" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2970" class="linenr">2970 </a>                     <span class="hl opt">(</span><span class="hl kwa">equal</span> <span class="hl opt">(</span><span class="hl kwa">get-text-property</span> <span class="hl opt">(</span><span class="hl kwa">1-</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)) '</span>syntax-table<span class="hl opt">)</span></div>
<div class="pre"><a id="l2971" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2971" class="linenr">2971 </a>                            sh-st-punc<span class="hl opt">))</span></div>
<div class="pre"><a id="l2972" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2972" class="linenr">2972 </a>                <span class="hl opt">(</span><span class="hl kwa">sh-debug</span> <span class="hl str">&quot;Case label) here&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2973" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2973" class="linenr">2973 </a>                <span class="hl opt">(</span><span class="hl kwa">setq</span> x <span class="hl opt">'</span>case-label<span class="hl opt">)</span></div>
<div class="pre"><a id="l2974" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2974" class="linenr">2974 </a>                <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">setq</span> val <span class="hl opt">(</span><span class="hl kwa">sh-check-rule</span> <span class="hl num">2</span> x<span class="hl opt">))</span></div>
<div class="pre"><a id="l2975" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2975" class="linenr">2975 </a>                    <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l2976" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2976" class="linenr">2976 </a>                      <span class="hl opt">(</span><span class="hl kwa">setq</span> result <span class="hl opt">(</span><span class="hl kwa">append</span> result val<span class="hl opt">))</span></div>
<div class="pre"><a id="l2977" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2977" class="linenr">2977 </a>                      <span class="hl opt">(</span><span class="hl kwa">setq</span> align-point <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l2978" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2978" class="linenr">2978 </a>                <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">bobp</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2979" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2979" class="linenr">2979 </a>                    <span class="hl opt">(</span><span class="hl kwa">forward-char</span> -<span class="hl num">1</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2980" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2980" class="linenr">2980 </a>                <span class="hl slc">;; FIXME: This charset looks too much like a regexp.  --Stef</span></div>
<div class="pre"><a id="l2981" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2981" class="linenr">2981 </a>                <span class="hl opt">(</span><span class="hl kwa">skip-chars-forward</span> <span class="hl str">&quot;[a-z0-9]*?&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2982" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2982" class="linenr">2982 </a>                <span class="hl opt">)</span></div>
<div class="pre"><a id="l2983" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2983" class="linenr">2983 </a>               <span class="hl opt">((</span><span class="hl kwa">string-match</span> <span class="hl str">&quot;[])}]&quot;</span> x<span class="hl opt">)</span></div>
<div class="pre"><a id="l2984" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2984" class="linenr">2984 </a>                <span class="hl opt">(</span><span class="hl kwa">setq</span> x <span class="hl opt">(</span><span class="hl kwa">sh-safe-forward-sexp</span> -<span class="hl num">1</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2985" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2985" class="linenr">2985 </a>                <span class="hl opt">(</span><span class="hl kwa">if</span> x</div>
<div class="pre"><a id="l2986" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2986" class="linenr">2986 </a>                    <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l2987" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2987" class="linenr">2987 </a>                      <span class="hl opt">(</span><span class="hl kwa">setq</span> align-point <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l2988" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2988" class="linenr">2988 </a>                      <span class="hl opt">(</span><span class="hl kwa">setq</span> result <span class="hl opt">(</span><span class="hl kwa">append</span> result</div>
<div class="pre"><a id="l2989" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2989" class="linenr">2989 </a>                                           <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl str">&quot;aligned to opening paren&quot;</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2990" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2990" class="linenr">2990 </a>                      <span class="hl opt">)))</span></div>
<div class="pre"><a id="l2991" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2991" class="linenr">2991 </a>               <span class="hl opt">((</span><span class="hl kwa">string-match</span> <span class="hl str">&quot;[[({]&quot;</span> x<span class="hl opt">)</span></div>
<div class="pre"><a id="l2992" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2992" class="linenr">2992 </a>                <span class="hl opt">(</span><span class="hl kwa">sh-debug</span> <span class="hl str">&quot;Checking special thing: %s&quot;</span> x<span class="hl opt">)</span></div>
<div class="pre"><a id="l2993" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2993" class="linenr">2993 </a>                <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">setq</span> val <span class="hl opt">(</span><span class="hl kwa">sh-check-rule</span> <span class="hl num">2</span> x<span class="hl opt">))</span></div>
<div class="pre"><a id="l2994" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2994" class="linenr">2994 </a>                    <span class="hl opt">(</span><span class="hl kwa">setq</span> result <span class="hl opt">(</span><span class="hl kwa">append</span> result val<span class="hl opt">)))</span></div>
<div class="pre"><a id="l2995" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2995" class="linenr">2995 </a>                <span class="hl opt">(</span><span class="hl kwa">forward-char</span> -<span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l2996" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2996" class="linenr">2996 </a>                <span class="hl opt">(</span><span class="hl kwa">setq</span> align-point <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l2997" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2997" class="linenr">2997 </a>               <span class="hl opt">((</span><span class="hl kwa">string-match</span> <span class="hl str">&quot;[</span><span class="hl esc">\&quot;</span><span class="hl str">'`]&quot;</span> x<span class="hl opt">)</span></div>
<div class="pre"><a id="l2998" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2998" class="linenr">2998 </a>                <span class="hl opt">(</span><span class="hl kwa">sh-debug</span> <span class="hl str">&quot;Skipping back for %s&quot;</span> x<span class="hl opt">)</span></div>
<div class="pre"><a id="l2999" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l2999" class="linenr">2999 </a>                <span class="hl slc">;; this was oops-2</span></div>
<div class="pre"><a id="l3000" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3000" class="linenr">3000 </a>                <span class="hl opt">(</span><span class="hl kwa">setq</span> x <span class="hl opt">(</span><span class="hl kwa">sh-safe-forward-sexp</span> -<span class="hl num">1</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3001" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3001" class="linenr">3001 </a>               <span class="hl opt">((</span><span class="hl kwa">stringp</span> x<span class="hl opt">)</span></div>
<div class="pre"><a id="l3002" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3002" class="linenr">3002 </a>                <span class="hl opt">(</span><span class="hl kwa">sh-debug</span> <span class="hl str">&quot;Checking string %s at %s&quot;</span> x <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3003" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3003" class="linenr">3003 </a>                <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">setq</span> val <span class="hl opt">(</span><span class="hl kwa">sh-check-rule</span> <span class="hl num">2</span> x<span class="hl opt">))</span></div>
<div class="pre"><a id="l3004" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3004" class="linenr">3004 </a>                    <span class="hl slc">;; (or (eq t (car val))</span></div>
<div class="pre"><a id="l3005" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3005" class="linenr">3005 </a>                    <span class="hl slc">;; (eq t (car (car val))))</span></div>
<div class="pre"><a id="l3006" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3006" class="linenr">3006 </a>                    <span class="hl opt">(</span><span class="hl kwa">setq</span> result <span class="hl opt">(</span><span class="hl kwa">append</span> result val<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3007" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3007" class="linenr">3007 </a>                <span class="hl slc">;; not sure about this test Wed Jan 27 23:48:35 1999</span></div>
<div class="pre"><a id="l3008" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3008" class="linenr">3008 </a>                <span class="hl opt">(</span><span class="hl kwa">setq</span> align-point <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3009" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3009" class="linenr">3009 </a>                <span class="hl opt">(</span><span class="hl kwa">unless</span> <span class="hl opt">(</span><span class="hl kwa">bolp</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3010" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3010" class="linenr">3010 </a>                  <span class="hl opt">(</span><span class="hl kwa">forward-char</span> -<span class="hl num">1</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3011" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3011" class="linenr">3011 </a>               <span class="hl opt">(</span><span class="hl kwa">t</span></div>
<div class="pre"><a id="l3012" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3012" class="linenr">3012 </a>                <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Don't know what to do with %s&quot;</span> x<span class="hl opt">))</span></div>
<div class="pre"><a id="l3013" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3013" class="linenr">3013 </a>               <span class="hl opt">)</span></div>
<div class="pre"><a id="l3014" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3014" class="linenr">3014 </a>              <span class="hl opt">)</span> <span class="hl slc">;; while</span></div>
<div class="pre"><a id="l3015" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3015" class="linenr">3015 </a>            <span class="hl opt">(</span><span class="hl kwa">sh-debug</span> <span class="hl str">&quot;result is %s&quot;</span> result<span class="hl opt">)</span></div>
<div class="pre"><a id="l3016" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3016" class="linenr">3016 </a>            <span class="hl opt">)</span></div>
<div class="pre"><a id="l3017" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3017" class="linenr">3017 </a>        <span class="hl opt">(</span><span class="hl kwa">sh-debug</span> <span class="hl str">&quot;No prev line!&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3018" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3018" class="linenr">3018 </a>        <span class="hl opt">(</span><span class="hl kwa">sh-debug</span> <span class="hl str">&quot;result: %s  align-point: %s&quot;</span> result align-point<span class="hl opt">)</span></div>
<div class="pre"><a id="l3019" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3019" class="linenr">3019 </a>        <span class="hl opt">)</span></div>
<div class="pre"><a id="l3020" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3020" class="linenr">3020 </a></div>
<div class="pre"><a id="l3021" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3021" class="linenr">3021 </a>      <span class="hl opt">(</span><span class="hl kwa">if</span> align-point</div>
<div class="pre"><a id="l3022" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3022" class="linenr">3022 </a>          <span class="hl slc">;; was: (setq result (append result (list (list t align-point))))</span></div>
<div class="pre"><a id="l3023" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3023" class="linenr">3023 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> result <span class="hl opt">(</span><span class="hl kwa">append</span>  <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">(</span><span class="hl kwa">list</span> t align-point<span class="hl opt">))</span> result<span class="hl opt">))</span></div>
<div class="pre"><a id="l3024" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3024" class="linenr">3024 </a>        <span class="hl opt">)</span></div>
<div class="pre"><a id="l3025" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3025" class="linenr">3025 </a>      <span class="hl opt">(</span><span class="hl kwa">sh-debug</span> <span class="hl str">&quot;result is now: %s&quot;</span> result<span class="hl opt">)</span></div>
<div class="pre"><a id="l3026" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3026" class="linenr">3026 </a></div>
<div class="pre"><a id="l3027" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3027" class="linenr">3027 </a>      <span class="hl opt">(</span><span class="hl kwa">or</span> result</div>
<div class="pre"><a id="l3028" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3028" class="linenr">3028 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> result <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">(</span><span class="hl kwa">if</span> prev-line-end</div>
<div class="pre"><a id="l3029" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3029" class="linenr">3029 </a>                                 <span class="hl opt">(</span><span class="hl kwa">list</span> t prev-line-end<span class="hl opt">)</span></div>
<div class="pre"><a id="l3030" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3030" class="linenr">3030 </a>                               <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">'= '</span>sh-first-lines-indent<span class="hl opt">)))))</span></div>
<div class="pre"><a id="l3031" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3031" class="linenr">3031 </a></div>
<div class="pre"><a id="l3032" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3032" class="linenr">3032 </a>      <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> result t<span class="hl opt">)</span></div>
<div class="pre"><a id="l3033" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3033" class="linenr">3033 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> result nil<span class="hl opt">))</span></div>
<div class="pre"><a id="l3034" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3034" class="linenr">3034 </a>      <span class="hl opt">(</span><span class="hl kwa">sh-debug</span>  <span class="hl str">&quot;result is: %s&quot;</span> result<span class="hl opt">)</span></div>
<div class="pre"><a id="l3035" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3035" class="linenr">3035 </a>      result</div>
<div class="pre"><a id="l3036" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3036" class="linenr">3036 </a>      <span class="hl opt">)</span> <span class="hl slc">;; let</span></div>
<div class="pre"><a id="l3037" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3037" class="linenr">3037 </a>    <span class="hl opt">))</span></div>
<div class="pre"><a id="l3038" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3038" class="linenr">3038 </a></div>
<div class="pre"><a id="l3039" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3039" class="linenr">3039 </a></div>
<div class="pre"><a id="l3040" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3040" class="linenr">3040 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-get-indent-var-for-line <span class="hl opt">(&amp;</span>optional info<span class="hl opt">)</span></div>
<div class="pre"><a id="l3041" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3041" class="linenr">3041 </a>  <span class="hl str">&quot;Return the variable controlling indentation for this line.</span></div>
<div class="pre"><a id="l3042" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3042" class="linenr">3042 </a><span class="hl str">If there is not [just] one such variable, return a string</span></div>
<div class="pre"><a id="l3043" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3043" class="linenr">3043 </a><span class="hl str">indicating the problem.</span></div>
<div class="pre"><a id="l3044" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3044" class="linenr">3044 </a><span class="hl str">If INFO is supplied it is used, else it is calculated.&quot;</span></div>
<div class="pre"><a id="l3045" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3045" class="linenr">3045 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">var</span> nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l3046" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3046" class="linenr">3046 </a>        <span class="hl opt">(</span><span class="hl kwa">result</span> nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l3047" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3047" class="linenr">3047 </a>        <span class="hl opt">(</span><span class="hl kwa">reason</span> nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l3048" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3048" class="linenr">3048 </a>        sym elt<span class="hl opt">)</span></div>
<div class="pre"><a id="l3049" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3049" class="linenr">3049 </a>    <span class="hl opt">(</span><span class="hl kwa">or</span> info</div>
<div class="pre"><a id="l3050" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3050" class="linenr">3050 </a>        <span class="hl opt">(</span><span class="hl kwa">setq</span> info <span class="hl opt">(</span><span class="hl kwa">sh-get-indent-info</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3051" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3051" class="linenr">3051 </a>    <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">null</span> info<span class="hl opt">)</span></div>
<div class="pre"><a id="l3052" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3052" class="linenr">3052 </a>        <span class="hl opt">(</span><span class="hl kwa">setq</span> result <span class="hl str">&quot;this line to be left as is&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3053" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3053" class="linenr">3053 </a>      <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">and</span> info <span class="hl opt">(</span><span class="hl kwa">null</span> result<span class="hl opt">))</span></div>
<div class="pre"><a id="l3054" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3054" class="linenr">3054 </a>        <span class="hl opt">(</span><span class="hl kwa">setq</span> elt <span class="hl opt">(</span><span class="hl kwa">car</span> info<span class="hl opt">))</span></div>
<div class="pre"><a id="l3055" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3055" class="linenr">3055 </a>        <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l3056" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3056" class="linenr">3056 </a>         <span class="hl opt">((</span><span class="hl kwa">stringp</span> elt<span class="hl opt">)</span></div>
<div class="pre"><a id="l3057" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3057" class="linenr">3057 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> reason elt<span class="hl opt">)</span></div>
<div class="pre"><a id="l3058" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3058" class="linenr">3058 </a>          <span class="hl opt">)</span></div>
<div class="pre"><a id="l3059" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3059" class="linenr">3059 </a>         <span class="hl opt">((</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">listp</span> elt<span class="hl opt">))</span></div>
<div class="pre"><a id="l3060" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3060" class="linenr">3060 </a>          <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;sh-get-indent-var-for-line invalid elt: %s&quot;</span> elt<span class="hl opt">))</span></div>
<div class="pre"><a id="l3061" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3061" class="linenr">3061 </a>         <span class="hl slc">;; so it is a list</span></div>
<div class="pre"><a id="l3062" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3062" class="linenr">3062 </a>         <span class="hl opt">((</span><span class="hl kwa">eq</span> t <span class="hl opt">(</span><span class="hl kwa">car</span> elt<span class="hl opt">))</span></div>
<div class="pre"><a id="l3063" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3063" class="linenr">3063 </a>          <span class="hl opt">)</span> <span class="hl slc">;; nothing</span></div>
<div class="pre"><a id="l3064" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3064" class="linenr">3064 </a>         <span class="hl opt">((</span><span class="hl kwa">symbolp</span>  <span class="hl opt">(</span><span class="hl kwa">setq</span> sym <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">1</span> elt<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3065" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3065" class="linenr">3065 </a>          <span class="hl slc">;; A bit of a kludge - when we see the sh-indent-comment</span></div>
<div class="pre"><a id="l3066" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3066" class="linenr">3066 </a>          <span class="hl slc">;; ignore other variables.  Otherwise it is tricky to</span></div>
<div class="pre"><a id="l3067" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3067" class="linenr">3067 </a>          <span class="hl slc">;; &quot;learn&quot; the comment indentation.</span></div>
<div class="pre"><a id="l3068" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3068" class="linenr">3068 </a>          <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> var <span class="hl opt">'</span>sh-indent-comment<span class="hl opt">)</span></div>
<div class="pre"><a id="l3069" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3069" class="linenr">3069 </a>              <span class="hl opt">(</span><span class="hl kwa">setq</span> result var<span class="hl opt">)</span></div>
<div class="pre"><a id="l3070" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3070" class="linenr">3070 </a>            <span class="hl opt">(</span><span class="hl kwa">if</span> var</div>
<div class="pre"><a id="l3071" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3071" class="linenr">3071 </a>                <span class="hl opt">(</span><span class="hl kwa">setq</span> result</div>
<div class="pre"><a id="l3072" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3072" class="linenr">3072 </a>                      <span class="hl str">&quot;this line is controlled by more than 1 variable.&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3073" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3073" class="linenr">3073 </a>              <span class="hl opt">(</span><span class="hl kwa">setq</span> var sym<span class="hl opt">))))</span></div>
<div class="pre"><a id="l3074" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3074" class="linenr">3074 </a>         <span class="hl opt">(</span><span class="hl kwa">t</span></div>
<div class="pre"><a id="l3075" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3075" class="linenr">3075 </a>          <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;sh-get-indent-var-for-line invalid list elt: %s&quot;</span> elt<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3076" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3076" class="linenr">3076 </a>        <span class="hl opt">(</span><span class="hl kwa">setq</span> info <span class="hl opt">(</span><span class="hl kwa">cdr</span> info<span class="hl opt">))</span></div>
<div class="pre"><a id="l3077" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3077" class="linenr">3077 </a>        <span class="hl opt">))</span></div>
<div class="pre"><a id="l3078" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3078" class="linenr">3078 </a>    <span class="hl opt">(</span><span class="hl kwa">or</span> result</div>
<div class="pre"><a id="l3079" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3079" class="linenr">3079 </a>        <span class="hl opt">(</span><span class="hl kwa">setq</span> result var<span class="hl opt">))</span></div>
<div class="pre"><a id="l3080" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3080" class="linenr">3080 </a>    <span class="hl opt">(</span><span class="hl kwa">or</span> result</div>
<div class="pre"><a id="l3081" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3081" class="linenr">3081 </a>        <span class="hl opt">(</span><span class="hl kwa">setq</span> result reason<span class="hl opt">))</span></div>
<div class="pre"><a id="l3082" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3082" class="linenr">3082 </a>    <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">null</span> result<span class="hl opt">)</span></div>
<div class="pre"><a id="l3083" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3083" class="linenr">3083 </a>        <span class="hl slc">;; e.g. just had (t POS)</span></div>
<div class="pre"><a id="l3084" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3084" class="linenr">3084 </a>        <span class="hl opt">(</span><span class="hl kwa">setq</span> result <span class="hl str">&quot;line has default indentation&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3085" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3085" class="linenr">3085 </a>    result<span class="hl opt">))</span></div>
<div class="pre"><a id="l3086" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3086" class="linenr">3086 </a></div>
<div class="pre"><a id="l3087" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3087" class="linenr">3087 </a></div>
<div class="pre"><a id="l3088" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3088" class="linenr">3088 </a></div>
<div class="pre"><a id="l3089" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3089" class="linenr">3089 </a><span class="hl slc">;; Finding the previous line isn't trivial.</span></div>
<div class="pre"><a id="l3090" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3090" class="linenr">3090 </a><span class="hl slc">;; We must *always* go back one more and see if that is a continuation</span></div>
<div class="pre"><a id="l3091" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3091" class="linenr">3091 </a><span class="hl slc">;; line -- it is the PREVIOUS line which is continued, not the one</span></div>
<div class="pre"><a id="l3092" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3092" class="linenr">3092 </a><span class="hl slc">;; we are going to!</span></div>
<div class="pre"><a id="l3093" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3093" class="linenr">3093 </a><span class="hl slc">;; Also, we want to treat a whole &quot;here document&quot; as one big line,</span></div>
<div class="pre"><a id="l3094" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3094" class="linenr">3094 </a><span class="hl slc">;; because we may want to a align to the beginning of it.</span></div>
<div class="pre"><a id="l3095" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3095" class="linenr">3095 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l3096" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3096" class="linenr">3096 </a><span class="hl slc">;; What we do:</span></div>
<div class="pre"><a id="l3097" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3097" class="linenr">3097 </a><span class="hl slc">;; - go back to previous non-empty line</span></div>
<div class="pre"><a id="l3098" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3098" class="linenr">3098 </a><span class="hl slc">;; - if this is in a here-document, go to the beginning of it</span></div>
<div class="pre"><a id="l3099" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3099" class="linenr">3099 </a><span class="hl slc">;; - while previous line is continued, go back one line</span></div>
<div class="pre"><a id="l3100" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3100" class="linenr">3100 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-prev-line <span class="hl opt">(&amp;</span>optional end<span class="hl opt">)</span></div>
<div class="pre"><a id="l3101" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3101" class="linenr">3101 </a>  <span class="hl str">&quot;Back to end of previous non-comment non-empty line.</span></div>
<div class="pre"><a id="l3102" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3102" class="linenr">3102 </a><span class="hl str">Go to beginning of logical line unless END is non-nil, in which case</span></div>
<div class="pre"><a id="l3103" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3103" class="linenr">3103 </a><span class="hl str">we go to the end of the previous line and do not check for continuations.&quot;</span></div>
<div class="pre"><a id="l3104" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3104" class="linenr">3104 </a>  <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l3105" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3105" class="linenr">3105 </a>    <span class="hl opt">(</span><span class="hl kwa">beginning-of-line</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3106" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3106" class="linenr">3106 </a>    <span class="hl opt">(</span><span class="hl kwa">forward-comment</span> <span class="hl opt">(</span><span class="hl kwa">-</span> <span class="hl opt">(</span><span class="hl kwa">point-max</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3107" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3107" class="linenr">3107 </a>    <span class="hl opt">(</span><span class="hl kwa">unless</span> end <span class="hl opt">(</span><span class="hl kwa">beginning-of-line</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3108" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3108" class="linenr">3108 </a>    <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">bobp</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3109" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3109" class="linenr">3109 </a>               <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl opt">(</span><span class="hl kwa">get-text-property</span> <span class="hl opt">(</span><span class="hl kwa">1-</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)) '</span>face<span class="hl opt">) '</span>sh-heredoc<span class="hl opt">))</span></div>
<div class="pre"><a id="l3110" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3110" class="linenr">3110 </a>      <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">p1</span> <span class="hl opt">(</span><span class="hl kwa">previous-single-property-change</span> <span class="hl opt">(</span><span class="hl kwa">1-</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)) '</span>face<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3111" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3111" class="linenr">3111 </a>        <span class="hl opt">(</span><span class="hl kwa">when</span> p1</div>
<div class="pre"><a id="l3112" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3112" class="linenr">3112 </a>          <span class="hl opt">(</span><span class="hl kwa">goto-char</span> p1<span class="hl opt">)</span></div>
<div class="pre"><a id="l3113" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3113" class="linenr">3113 </a>          <span class="hl opt">(</span><span class="hl kwa">if</span> end</div>
<div class="pre"><a id="l3114" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3114" class="linenr">3114 </a>              <span class="hl opt">(</span><span class="hl kwa">end-of-line</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3115" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3115" class="linenr">3115 </a>            <span class="hl opt">(</span><span class="hl kwa">beginning-of-line</span><span class="hl opt">)))))</span></div>
<div class="pre"><a id="l3116" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3116" class="linenr">3116 </a>    <span class="hl opt">(</span><span class="hl kwa">unless</span> end</div>
<div class="pre"><a id="l3117" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3117" class="linenr">3117 </a>      <span class="hl slc">;; we must check previous lines to see if they are continuation lines</span></div>
<div class="pre"><a id="l3118" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3118" class="linenr">3118 </a>      <span class="hl slc">;; if so, we must return position of first of them</span></div>
<div class="pre"><a id="l3119" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3119" class="linenr">3119 </a>      <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">sh-this-is-a-continuation</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3120" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3120" class="linenr">3120 </a>                  <span class="hl opt">(&gt;=</span> <span class="hl num">0</span> <span class="hl opt">(</span><span class="hl kwa">forward-line</span> -<span class="hl num">1</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l3121" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3121" class="linenr">3121 </a>      <span class="hl opt">(</span><span class="hl kwa">beginning-of-line</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3122" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3122" class="linenr">3122 </a>      <span class="hl opt">(</span><span class="hl kwa">skip-chars-forward</span> <span class="hl str">&quot;</span> <span class="hl esc">\t</span><span class="hl str">&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3123" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3123" class="linenr">3123 </a>    <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3124" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3124" class="linenr">3124 </a></div>
<div class="pre"><a id="l3125" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3125" class="linenr">3125 </a></div>
<div class="pre"><a id="l3126" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3126" class="linenr">3126 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-prev-stmt <span class="hl opt">()</span></div>
<div class="pre"><a id="l3127" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3127" class="linenr">3127 </a>  <span class="hl str">&quot;Return the address of the previous stmt or nil.&quot;</span></div>
<div class="pre"><a id="l3128" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3128" class="linenr">3128 </a>  <span class="hl slc">;; This is used when we are trying to find a matching keyword.</span></div>
<div class="pre"><a id="l3129" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3129" class="linenr">3129 </a>  <span class="hl slc">;; Searching backward for the keyword would certainly be quicker, but</span></div>
<div class="pre"><a id="l3130" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3130" class="linenr">3130 </a>  <span class="hl slc">;; it is hard to remove &quot;false matches&quot; -- such as if the keyword</span></div>
<div class="pre"><a id="l3131" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3131" class="linenr">3131 </a>  <span class="hl slc">;; appears in a string or quote.  This way is slower, but (I think) safer.</span></div>
<div class="pre"><a id="l3132" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3132" class="linenr">3132 </a>  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3133" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3133" class="linenr">3133 </a>  <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l3134" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3134" class="linenr">3134 </a>    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">going</span> t<span class="hl opt">)</span></div>
<div class="pre"><a id="l3135" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3135" class="linenr">3135 </a>          <span class="hl opt">(</span><span class="hl kwa">start</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3136" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3136" class="linenr">3136 </a>          <span class="hl opt">(</span><span class="hl kwa">found</span> nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l3137" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3137" class="linenr">3137 </a>          <span class="hl opt">(</span><span class="hl kwa">prev</span> nil<span class="hl opt">))</span></div>
<div class="pre"><a id="l3138" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3138" class="linenr">3138 </a>      <span class="hl opt">(</span><span class="hl kwa">skip-chars-backward</span> <span class="hl str">&quot;</span> <span class="hl esc">\t</span><span class="hl str">;|&amp;({[&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3139" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3139" class="linenr">3139 </a>      <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">not</span> found<span class="hl opt">)</span></div>
<div class="pre"><a id="l3140" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3140" class="linenr">3140 </a>                  <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">bobp</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3141" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3141" class="linenr">3141 </a>                  going<span class="hl opt">)</span></div>
<div class="pre"><a id="l3142" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3142" class="linenr">3142 </a>        <span class="hl slc">;; Do a backward-sexp if possible, else backup bit by bit...</span></div>
<div class="pre"><a id="l3143" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3143" class="linenr">3143 </a>        <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">sh-safe-forward-sexp</span> -<span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3144" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3144" class="linenr">3144 </a>            <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l3145" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3145" class="linenr">3145 </a>              <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">looking-at</span> sh-special-keywords<span class="hl opt">)</span></div>
<div class="pre"><a id="l3146" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3146" class="linenr">3146 </a>                  <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l3147" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3147" class="linenr">3147 </a>                    <span class="hl opt">(</span><span class="hl kwa">setq</span> found prev<span class="hl opt">))</span></div>
<div class="pre"><a id="l3148" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3148" class="linenr">3148 </a>                <span class="hl opt">(</span><span class="hl kwa">setq</span> prev <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3149" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3149" class="linenr">3149 </a>                <span class="hl opt">))</span></div>
<div class="pre"><a id="l3150" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3150" class="linenr">3150 </a>          <span class="hl slc">;; backward-sexp failed</span></div>
<div class="pre"><a id="l3151" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3151" class="linenr">3151 </a>          <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">zerop</span> <span class="hl opt">(</span><span class="hl kwa">skip-chars-backward</span> <span class="hl str">&quot;</span> <span class="hl esc">\t</span><span class="hl str">()[]{};`'&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3152" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3152" class="linenr">3152 </a>              <span class="hl opt">(</span><span class="hl kwa">forward-char</span> -<span class="hl num">1</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3153" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3153" class="linenr">3153 </a>          <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">bolp</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3154" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3154" class="linenr">3154 </a>              <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">back</span> <span class="hl opt">(</span><span class="hl kwa">sh-prev-line</span> nil<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3155" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3155" class="linenr">3155 </a>                <span class="hl opt">(</span><span class="hl kwa">if</span> back</div>
<div class="pre"><a id="l3156" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3156" class="linenr">3156 </a>                    <span class="hl opt">(</span><span class="hl kwa">goto-char</span> back<span class="hl opt">)</span></div>
<div class="pre"><a id="l3157" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3157" class="linenr">3157 </a>                  <span class="hl opt">(</span><span class="hl kwa">setq</span> going nil<span class="hl opt">)))))</span></div>
<div class="pre"><a id="l3158" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3158" class="linenr">3158 </a>        <span class="hl opt">(</span><span class="hl kwa">unless</span> found</div>
<div class="pre"><a id="l3159" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3159" class="linenr">3159 </a>          <span class="hl opt">(</span><span class="hl kwa">skip-chars-backward</span> <span class="hl str">&quot;</span> <span class="hl esc">\t</span><span class="hl str">&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3160" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3160" class="linenr">3160 </a>          <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">bolp</span><span class="hl opt">) (</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">sh-this-is-a-continuation</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3161" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3161" class="linenr">3161 </a>                  <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl opt">(</span><span class="hl kwa">char-before</span><span class="hl opt">)</span> ?\<span class="hl slc">;)</span></div>
<div class="pre"><a id="l3162" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3162" class="linenr">3162 </a>                  <span class="hl opt">(</span><span class="hl kwa">looking-at</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">s-*[|&amp;]&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3163" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3163" class="linenr">3163 </a>              <span class="hl opt">(</span><span class="hl kwa">setq</span> found <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)))))</span></div>
<div class="pre"><a id="l3164" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3164" class="linenr">3164 </a>      <span class="hl opt">(</span><span class="hl kwa">if</span> found</div>
<div class="pre"><a id="l3165" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3165" class="linenr">3165 </a>          <span class="hl opt">(</span><span class="hl kwa">goto-char</span> found<span class="hl opt">))</span></div>
<div class="pre"><a id="l3166" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3166" class="linenr">3166 </a>      <span class="hl opt">(</span><span class="hl kwa">if</span> found</div>
<div class="pre"><a id="l3167" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3167" class="linenr">3167 </a>          <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l3168" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3168" class="linenr">3168 </a>            <span class="hl opt">(</span><span class="hl kwa">skip-chars-forward</span> <span class="hl str">&quot;</span> <span class="hl esc">\t</span><span class="hl str">|&amp;({[&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3169" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3169" class="linenr">3169 </a>            <span class="hl opt">(</span><span class="hl kwa">setq</span> found <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l3170" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3170" class="linenr">3170 </a>      <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(&gt;= (</span><span class="hl kwa">point</span><span class="hl opt">)</span> start<span class="hl opt">)</span></div>
<div class="pre"><a id="l3171" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3171" class="linenr">3171 </a>          <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l3172" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3172" class="linenr">3172 </a>            <span class="hl opt">(</span><span class="hl kwa">debug</span> <span class="hl str">&quot;We didn't move!&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3173" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3173" class="linenr">3173 </a>            <span class="hl opt">(</span><span class="hl kwa">setq</span> found nil<span class="hl opt">))</span></div>
<div class="pre"><a id="l3174" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3174" class="linenr">3174 </a>        <span class="hl opt">(</span><span class="hl kwa">or</span> found</div>
<div class="pre"><a id="l3175" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3175" class="linenr">3175 </a>            <span class="hl opt">(</span><span class="hl kwa">sh-debug</span> <span class="hl str">&quot;Did not find prev stmt.&quot;</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3176" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3176" class="linenr">3176 </a>      found<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3177" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3177" class="linenr">3177 </a></div>
<div class="pre"><a id="l3178" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3178" class="linenr">3178 </a></div>
<div class="pre"><a id="l3179" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3179" class="linenr">3179 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-get-word <span class="hl opt">()</span></div>
<div class="pre"><a id="l3180" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3180" class="linenr">3180 </a>  <span class="hl str">&quot;Get a shell word skipping whitespace from point.&quot;</span></div>
<div class="pre"><a id="l3181" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3181" class="linenr">3181 </a>  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3182" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3182" class="linenr">3182 </a>  <span class="hl opt">(</span><span class="hl kwa">skip-chars-forward</span> <span class="hl str">&quot;</span><span class="hl esc">\t</span> <span class="hl str">&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3183" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3183" class="linenr">3183 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">start</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3184" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3184" class="linenr">3184 </a>    <span class="hl opt">(</span><span class="hl kwa">while</span></div>
<div class="pre"><a id="l3185" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3185" class="linenr">3185 </a>        <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">looking-at</span> <span class="hl str">&quot;[</span><span class="hl esc">\&quot;</span><span class="hl str">'`]&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3186" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3186" class="linenr">3186 </a>            <span class="hl opt">(</span><span class="hl kwa">sh-safe-forward-sexp</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3187" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3187" class="linenr">3187 </a>          <span class="hl slc">;; (&gt; (skip-chars-forward &quot;^ \t\n\&quot;'`&quot;) 0)</span></div>
<div class="pre"><a id="l3188" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3188" class="linenr">3188 </a>          <span class="hl opt">(&gt; (</span><span class="hl kwa">skip-chars-forward</span> <span class="hl str">&quot;-_$[:alnum:]&quot;</span><span class="hl opt">)</span> <span class="hl num">0</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3189" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3189" class="linenr">3189 </a>          <span class="hl opt">))</span></div>
<div class="pre"><a id="l3190" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3190" class="linenr">3190 </a>    <span class="hl opt">(</span><span class="hl kwa">buffer-substring</span> start <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3191" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3191" class="linenr">3191 </a>    <span class="hl opt">))</span></div>
<div class="pre"><a id="l3192" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3192" class="linenr">3192 </a></div>
<div class="pre"><a id="l3193" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3193" class="linenr">3193 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-prev-thing <span class="hl opt">()</span></div>
<div class="pre"><a id="l3194" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3194" class="linenr">3194 </a>  <span class="hl str">&quot;Return the previous thing this logical line.&quot;</span></div>
<div class="pre"><a id="l3195" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3195" class="linenr">3195 </a>  <span class="hl slc">;; This is called when `sh-get-indent-info' is working backwards on</span></div>
<div class="pre"><a id="l3196" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3196" class="linenr">3196 </a>  <span class="hl slc">;; the previous line(s) finding what keywords may be relevant for</span></div>
<div class="pre"><a id="l3197" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3197" class="linenr">3197 </a>  <span class="hl slc">;; indenting.  It moves over sexps if possible, and will stop</span></div>
<div class="pre"><a id="l3198" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3198" class="linenr">3198 </a>  <span class="hl slc">;; on a ; and at the beginning of a line if it is not a continuation</span></div>
<div class="pre"><a id="l3199" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3199" class="linenr">3199 </a>  <span class="hl slc">;; line.</span></div>
<div class="pre"><a id="l3200" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3200" class="linenr">3200 </a>  <span class="hl slc">;;</span></div>
<div class="pre"><a id="l3201" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3201" class="linenr">3201 </a>  <span class="hl slc">;; Added a kludge for &quot;;;&quot;</span></div>
<div class="pre"><a id="l3202" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3202" class="linenr">3202 </a>  <span class="hl slc">;; Possible return values:</span></div>
<div class="pre"><a id="l3203" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3203" class="linenr">3203 </a>  <span class="hl slc">;;  nil  -  nothing</span></div>
<div class="pre"><a id="l3204" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3204" class="linenr">3204 </a>  <span class="hl slc">;; a string - possibly a keyword</span></div>
<div class="pre"><a id="l3205" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3205" class="linenr">3205 </a>  <span class="hl slc">;;</span></div>
<div class="pre"><a id="l3206" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3206" class="linenr">3206 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">bolp</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3207" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3207" class="linenr">3207 </a>      nil</div>
<div class="pre"><a id="l3208" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3208" class="linenr">3208 </a>    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">start</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3209" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3209" class="linenr">3209 </a>          <span class="hl opt">(</span><span class="hl kwa">min-point</span> <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">sh-this-is-a-continuation</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3210" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3210" class="linenr">3210 </a>                         <span class="hl opt">(</span><span class="hl kwa">sh-prev-line</span> nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l3211" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3211" class="linenr">3211 </a>                       <span class="hl opt">(</span><span class="hl kwa">line-beginning-position</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l3212" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3212" class="linenr">3212 </a>      <span class="hl opt">(</span><span class="hl kwa">skip-chars-backward</span> <span class="hl str">&quot;</span> <span class="hl esc">\t</span><span class="hl str">;&quot;</span> min-point<span class="hl opt">)</span></div>
<div class="pre"><a id="l3213" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3213" class="linenr">3213 </a>      <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">looking-at</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">s-*;[;&amp;]&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3214" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3214" class="linenr">3214 </a>          <span class="hl slc">;; (message &quot;Found ;; !&quot;)</span></div>
<div class="pre"><a id="l3215" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3215" class="linenr">3215 </a>          <span class="hl str">&quot;;;&quot;</span></div>
<div class="pre"><a id="l3216" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3216" class="linenr">3216 </a>        <span class="hl opt">(</span><span class="hl kwa">skip-chars-backward</span> <span class="hl str">&quot;^)}];</span><span class="hl esc">\&quot;</span><span class="hl str">'`({[&quot;</span> min-point<span class="hl opt">)</span></div>
<div class="pre"><a id="l3217" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3217" class="linenr">3217 </a>        <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">c</span> <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(&gt; (</span><span class="hl kwa">point</span><span class="hl opt">)</span> min-point<span class="hl opt">) (</span><span class="hl kwa">char-before</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l3218" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3218" class="linenr">3218 </a>          <span class="hl opt">(</span><span class="hl kwa">sh-debug</span> <span class="hl str">&quot;stopping at %d c is %s  start=%d min-point=%d&quot;</span></div>
<div class="pre"><a id="l3219" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3219" class="linenr">3219 </a>                    <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)</span> c start min-point<span class="hl opt">)</span></div>
<div class="pre"><a id="l3220" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3220" class="linenr">3220 </a>          <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">memq</span> c <span class="hl opt">'(</span>?<span class="hl esc">\n</span> nil ?\<span class="hl slc">;)))</span></div>
<div class="pre"><a id="l3221" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3221" class="linenr">3221 </a>              <span class="hl slc">;; c      -- return a string</span></div>
<div class="pre"><a id="l3222" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3222" class="linenr">3222 </a>              <span class="hl opt">(</span><span class="hl kwa">char-to-string</span> c<span class="hl opt">)</span></div>
<div class="pre"><a id="l3223" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3223" class="linenr">3223 </a>            <span class="hl slc">;; Return the leading keyword of the &quot;command&quot; we supposedly</span></div>
<div class="pre"><a id="l3224" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3224" class="linenr">3224 </a>            <span class="hl slc">;; skipped over.  Maybe we skipped too far (e.g. past a `do' or</span></div>
<div class="pre"><a id="l3225" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3225" class="linenr">3225 </a>            <span class="hl slc">;; `then' that precedes the actual command), so check whether</span></div>
<div class="pre"><a id="l3226" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3226" class="linenr">3226 </a>            <span class="hl slc">;; we're looking at such a keyword and if so, move back forward.</span></div>
<div class="pre"><a id="l3227" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3227" class="linenr">3227 </a>            <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">boundary</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3228" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3228" class="linenr">3228 </a>                  kwd next<span class="hl opt">)</span></div>
<div class="pre"><a id="l3229" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3229" class="linenr">3229 </a>              <span class="hl opt">(</span><span class="hl kwa">while</span></div>
<div class="pre"><a id="l3230" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3230" class="linenr">3230 </a>                  <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l3231" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3231" class="linenr">3231 </a>                    <span class="hl slc">;; Skip forward over white space newline and \ at eol.</span></div>
<div class="pre"><a id="l3232" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3232" class="linenr">3232 </a>                    <span class="hl opt">(</span><span class="hl kwa">skip-chars-forward</span> <span class="hl str">&quot;</span> <span class="hl esc">\t\n\\\\</span><span class="hl str">&quot;</span> start<span class="hl opt">)</span></div>
<div class="pre"><a id="l3233" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3233" class="linenr">3233 </a>                    <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(&gt;= (</span><span class="hl kwa">point</span><span class="hl opt">)</span> start<span class="hl opt">)</span></div>
<div class="pre"><a id="l3234" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3234" class="linenr">3234 </a>                        <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l3235" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3235" class="linenr">3235 </a>                          <span class="hl opt">(</span><span class="hl kwa">sh-debug</span> <span class="hl str">&quot;point: %d &gt;= start: %d&quot;</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)</span> start<span class="hl opt">)</span></div>
<div class="pre"><a id="l3236" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3236" class="linenr">3236 </a>                          nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l3237" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3237" class="linenr">3237 </a>                      <span class="hl opt">(</span><span class="hl kwa">if</span> next <span class="hl opt">(</span><span class="hl kwa">setq</span> boundary next<span class="hl opt">))</span></div>
<div class="pre"><a id="l3238" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3238" class="linenr">3238 </a>                      <span class="hl opt">(</span><span class="hl kwa">sh-debug</span> <span class="hl str">&quot;Now at %d   start=%d&quot;</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)</span> start<span class="hl opt">)</span></div>
<div class="pre"><a id="l3239" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3239" class="linenr">3239 </a>                      <span class="hl opt">(</span><span class="hl kwa">setq</span> kwd <span class="hl opt">(</span><span class="hl kwa">sh-get-word</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3240" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3240" class="linenr">3240 </a>                      <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">member</span> kwd <span class="hl opt">(</span><span class="hl kwa">sh-feature</span> sh-leading-keywords<span class="hl opt">))</span></div>
<div class="pre"><a id="l3241" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3241" class="linenr">3241 </a>                          <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l3242" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3242" class="linenr">3242 </a>                            <span class="hl opt">(</span><span class="hl kwa">setq</span> next <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3243" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3243" class="linenr">3243 </a>                            t<span class="hl opt">)</span></div>
<div class="pre"><a id="l3244" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3244" class="linenr">3244 </a>                        nil<span class="hl opt">))))</span></div>
<div class="pre"><a id="l3245" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3245" class="linenr">3245 </a>              <span class="hl opt">(</span><span class="hl kwa">goto-char</span> boundary<span class="hl opt">)</span></div>
<div class="pre"><a id="l3246" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3246" class="linenr">3246 </a>              kwd<span class="hl opt">)))))))</span></div>
<div class="pre"><a id="l3247" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3247" class="linenr">3247 </a></div>
<div class="pre"><a id="l3248" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3248" class="linenr">3248 </a></div>
<div class="pre"><a id="l3249" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3249" class="linenr">3249 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-this-is-a-continuation <span class="hl opt">()</span></div>
<div class="pre"><a id="l3250" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3250" class="linenr">3250 </a>  <span class="hl str">&quot;Return non-nil if current line is a continuation of previous line.&quot;</span></div>
<div class="pre"><a id="l3251" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3251" class="linenr">3251 </a>  <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l3252" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3252" class="linenr">3252 </a>    <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">zerop</span> <span class="hl opt">(</span><span class="hl kwa">forward-line</span> -<span class="hl num">1</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3253" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3253" class="linenr">3253 </a>         <span class="hl opt">(</span><span class="hl kwa">looking-at</span> <span class="hl str">&quot;.*</span><span class="hl esc">\\\\</span><span class="hl str">$&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3254" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3254" class="linenr">3254 </a>         <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">4</span> <span class="hl opt">(</span><span class="hl kwa">parse-partial-sexp</span> <span class="hl opt">(</span><span class="hl kwa">match-beginning</span> <span class="hl num">0</span><span class="hl opt">) (</span><span class="hl kwa">match-end</span> <span class="hl num">0</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3255" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3255" class="linenr">3255 </a>                                         nil nil nil t<span class="hl opt">))))))</span></div>
<div class="pre"><a id="l3256" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3256" class="linenr">3256 </a></div>
<div class="pre"><a id="l3257" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3257" class="linenr">3257 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-get-kw <span class="hl opt">(&amp;</span>optional where and-move<span class="hl opt">)</span></div>
<div class="pre"><a id="l3258" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3258" class="linenr">3258 </a>  <span class="hl str">&quot;Return first word of line from WHERE.</span></div>
<div class="pre"><a id="l3259" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3259" class="linenr">3259 </a><span class="hl str">If AND-MOVE is non-nil then move to end of word.&quot;</span></div>
<div class="pre"><a id="l3260" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3260" class="linenr">3260 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">start</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3261" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3261" class="linenr">3261 </a>    <span class="hl opt">(</span><span class="hl kwa">if</span> where</div>
<div class="pre"><a id="l3262" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3262" class="linenr">3262 </a>        <span class="hl opt">(</span><span class="hl kwa">goto-char</span> where<span class="hl opt">))</span></div>
<div class="pre"><a id="l3263" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3263" class="linenr">3263 </a>    <span class="hl opt">(</span><span class="hl kwa">prog1</span></div>
<div class="pre"><a id="l3264" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3264" class="linenr">3264 </a>        <span class="hl opt">(</span><span class="hl kwa">buffer-substring</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3265" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3265" class="linenr">3265 </a>                          <span class="hl opt">(</span><span class="hl kwa">progn</span> <span class="hl opt">(</span><span class="hl kwa">skip-chars-forward</span> <span class="hl str">&quot;^</span> <span class="hl esc">\t\n</span><span class="hl str">;&amp;|&quot;</span><span class="hl opt">)(</span><span class="hl kwa">point</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3266" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3266" class="linenr">3266 </a>      <span class="hl opt">(</span><span class="hl kwa">unless</span> and-move</div>
<div class="pre"><a id="l3267" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3267" class="linenr">3267 </a>        <span class="hl opt">(</span><span class="hl kwa">goto-char</span> start<span class="hl opt">)))))</span></div>
<div class="pre"><a id="l3268" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3268" class="linenr">3268 </a></div>
<div class="pre"><a id="l3269" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3269" class="linenr">3269 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-find-prev-matching <span class="hl opt">(</span><span class="hl kwa">open</span> close <span class="hl opt">&amp;</span>optional depth<span class="hl opt">)</span></div>
<div class="pre"><a id="l3270" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3270" class="linenr">3270 </a>  <span class="hl str">&quot;Find a matching token for a set of opening and closing keywords.</span></div>
<div class="pre"><a id="l3271" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3271" class="linenr">3271 </a><span class="hl str">This takes into account that there may be nested open..close pairings.</span></div>
<div class="pre"><a id="l3272" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3272" class="linenr">3272 </a><span class="hl str">OPEN and CLOSE are regexps denoting the tokens to be matched.</span></div>
<div class="pre"><a id="l3273" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3273" class="linenr">3273 </a><span class="hl str">Optional parameter DEPTH (usually 1) says how many to look for.&quot;</span></div>
<div class="pre"><a id="l3274" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3274" class="linenr">3274 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">parse-sexp-ignore-comments</span> t<span class="hl opt">)</span></div>
<div class="pre"><a id="l3275" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3275" class="linenr">3275 </a>        <span class="hl opt">(</span><span class="hl kwa">forward-sexp-function</span> nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l3276" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3276" class="linenr">3276 </a>        prev<span class="hl opt">)</span></div>
<div class="pre"><a id="l3277" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3277" class="linenr">3277 </a>    <span class="hl opt">(</span><span class="hl kwa">setq</span> depth <span class="hl opt">(</span><span class="hl kwa">or</span> depth <span class="hl num">1</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3278" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3278" class="linenr">3278 </a>    <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l3279" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3279" class="linenr">3279 </a>      <span class="hl opt">(</span><span class="hl kwa">condition-case</span> nil</div>
<div class="pre"><a id="l3280" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3280" class="linenr">3280 </a>          <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">and</span></div>
<div class="pre"><a id="l3281" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3281" class="linenr">3281 </a>                  <span class="hl opt">(/=</span> <span class="hl num">0</span>  depth<span class="hl opt">)</span></div>
<div class="pre"><a id="l3282" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3282" class="linenr">3282 </a>                  <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">bobp</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3283" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3283" class="linenr">3283 </a>                  <span class="hl opt">(</span><span class="hl kwa">setq</span> prev <span class="hl opt">(</span><span class="hl kwa">sh-prev-stmt</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3284" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3284" class="linenr">3284 </a>            <span class="hl opt">(</span><span class="hl kwa">goto-char</span> prev<span class="hl opt">)</span></div>
<div class="pre"><a id="l3285" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3285" class="linenr">3285 </a>            <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l3286" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3286" class="linenr">3286 </a>              <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">looking-at</span> <span class="hl str">&quot;</span><span class="hl esc">\\\\\n</span><span class="hl str">&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3287" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3287" class="linenr">3287 </a>                  <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l3288" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3288" class="linenr">3288 </a>                    <span class="hl opt">(</span><span class="hl kwa">forward-char</span> <span class="hl num">2</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3289" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3289" class="linenr">3289 </a>                    <span class="hl opt">(</span><span class="hl kwa">skip-chars-forward</span> <span class="hl str">&quot;</span> <span class="hl esc">\t</span><span class="hl str">&quot;</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3290" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3290" class="linenr">3290 </a>              <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l3291" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3291" class="linenr">3291 </a>               <span class="hl opt">((</span><span class="hl kwa">looking-at</span> open<span class="hl opt">)</span></div>
<div class="pre"><a id="l3292" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3292" class="linenr">3292 </a>                <span class="hl opt">(</span><span class="hl kwa">setq</span> depth <span class="hl opt">(</span><span class="hl kwa">1-</span> depth<span class="hl opt">))</span></div>
<div class="pre"><a id="l3293" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3293" class="linenr">3293 </a>                <span class="hl opt">(</span><span class="hl kwa">sh-debug</span> <span class="hl str">&quot;found open at %d - depth = %d&quot;</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)</span> depth<span class="hl opt">))</span></div>
<div class="pre"><a id="l3294" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3294" class="linenr">3294 </a>               <span class="hl opt">((</span><span class="hl kwa">looking-at</span> close<span class="hl opt">)</span></div>
<div class="pre"><a id="l3295" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3295" class="linenr">3295 </a>                <span class="hl opt">(</span><span class="hl kwa">setq</span> depth <span class="hl opt">(</span><span class="hl kwa">1</span><span class="hl opt">+</span> depth<span class="hl opt">))</span></div>
<div class="pre"><a id="l3296" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3296" class="linenr">3296 </a>                <span class="hl opt">(</span><span class="hl kwa">sh-debug</span> <span class="hl str">&quot;found close - depth = %d&quot;</span> depth<span class="hl opt">))</span></div>
<div class="pre"><a id="l3297" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3297" class="linenr">3297 </a>               <span class="hl opt">(</span><span class="hl kwa">t</span></div>
<div class="pre"><a id="l3298" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3298" class="linenr">3298 </a>                <span class="hl opt">))))</span></div>
<div class="pre"><a id="l3299" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3299" class="linenr">3299 </a>        <span class="hl opt">(</span><span class="hl kwa">error</span> nil<span class="hl opt">))</span></div>
<div class="pre"><a id="l3300" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3300" class="linenr">3300 </a>      <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> depth <span class="hl num">0</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3301" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3301" class="linenr">3301 </a>          prev <span class="hl slc">;; (point)</span></div>
<div class="pre"><a id="l3302" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3302" class="linenr">3302 </a>        nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l3303" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3303" class="linenr">3303 </a>      <span class="hl opt">)))</span></div>
<div class="pre"><a id="l3304" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3304" class="linenr">3304 </a></div>
<div class="pre"><a id="l3305" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3305" class="linenr">3305 </a></div>
<div class="pre"><a id="l3306" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3306" class="linenr">3306 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-var-value <span class="hl opt">(</span><span class="hl kwa">var</span> <span class="hl opt">&amp;</span>optional ignore-error<span class="hl opt">)</span></div>
<div class="pre"><a id="l3307" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3307" class="linenr">3307 </a>  <span class="hl str">&quot;Return the value of variable VAR, interpreting symbols.</span></div>
<div class="pre"><a id="l3308" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3308" class="linenr">3308 </a><span class="hl str">It can also return t or nil.</span></div>
<div class="pre"><a id="l3309" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3309" class="linenr">3309 </a><span class="hl str">If an invalid value is found, throw an error unless Optional argument</span></div>
<div class="pre"><a id="l3310" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3310" class="linenr">3310 </a><span class="hl str">IGNORE-ERROR is non-nil.&quot;</span></div>
<div class="pre"><a id="l3311" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3311" class="linenr">3311 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">val</span> <span class="hl opt">(</span><span class="hl kwa">symbol-value</span> var<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3312" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3312" class="linenr">3312 </a>    <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l3313" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3313" class="linenr">3313 </a>     <span class="hl opt">((</span><span class="hl kwa">numberp</span> val<span class="hl opt">)</span></div>
<div class="pre"><a id="l3314" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3314" class="linenr">3314 </a>      val<span class="hl opt">)</span></div>
<div class="pre"><a id="l3315" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3315" class="linenr">3315 </a>     <span class="hl opt">((</span><span class="hl kwa">eq</span> val t<span class="hl opt">)</span></div>
<div class="pre"><a id="l3316" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3316" class="linenr">3316 </a>      val<span class="hl opt">)</span></div>
<div class="pre"><a id="l3317" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3317" class="linenr">3317 </a>     <span class="hl opt">((</span><span class="hl kwa">null</span> val<span class="hl opt">)</span></div>
<div class="pre"><a id="l3318" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3318" class="linenr">3318 </a>      val<span class="hl opt">)</span></div>
<div class="pre"><a id="l3319" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3319" class="linenr">3319 </a>     <span class="hl opt">((</span><span class="hl kwa">eq</span> val <span class="hl opt">'+)</span></div>
<div class="pre"><a id="l3320" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3320" class="linenr">3320 </a>      sh-basic-offset<span class="hl opt">)</span></div>
<div class="pre"><a id="l3321" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3321" class="linenr">3321 </a>     <span class="hl opt">((</span><span class="hl kwa">eq</span> val <span class="hl opt">'</span>-<span class="hl opt">)</span></div>
<div class="pre"><a id="l3322" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3322" class="linenr">3322 </a>      <span class="hl opt">(</span><span class="hl kwa">-</span> sh-basic-offset<span class="hl opt">))</span></div>
<div class="pre"><a id="l3323" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3323" class="linenr">3323 </a>     <span class="hl opt">((</span><span class="hl kwa">eq</span> val <span class="hl opt">'++)</span></div>
<div class="pre"><a id="l3324" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3324" class="linenr">3324 </a>      <span class="hl opt">(*</span> <span class="hl num">2</span> sh-basic-offset<span class="hl opt">))</span></div>
<div class="pre"><a id="l3325" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3325" class="linenr">3325 </a>     <span class="hl opt">((</span><span class="hl kwa">eq</span> val <span class="hl opt">'</span>--<span class="hl opt">)</span></div>
<div class="pre"><a id="l3326" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3326" class="linenr">3326 </a>      <span class="hl opt">(*</span> <span class="hl num">2</span> <span class="hl opt">(</span><span class="hl kwa">-</span> sh-basic-offset<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3327" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3327" class="linenr">3327 </a>     <span class="hl opt">((</span><span class="hl kwa">eq</span> val <span class="hl opt">'*)</span></div>
<div class="pre"><a id="l3328" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3328" class="linenr">3328 </a>      <span class="hl opt">(/</span> sh-basic-offset <span class="hl num">2</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3329" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3329" class="linenr">3329 </a>     <span class="hl opt">((</span><span class="hl kwa">eq</span> val <span class="hl opt">'/)</span></div>
<div class="pre"><a id="l3330" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3330" class="linenr">3330 </a>      <span class="hl opt">(/ (</span><span class="hl kwa">-</span> sh-basic-offset<span class="hl opt">)</span> <span class="hl num">2</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3331" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3331" class="linenr">3331 </a>     <span class="hl opt">(</span><span class="hl kwa">t</span></div>
<div class="pre"><a id="l3332" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3332" class="linenr">3332 </a>      <span class="hl opt">(</span><span class="hl kwa">funcall</span> <span class="hl opt">(</span><span class="hl kwa">if</span> ignore-error <span class="hl opt">#'</span>message <span class="hl opt">#'</span>error<span class="hl opt">)</span></div>
<div class="pre"><a id="l3333" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3333" class="linenr">3333 </a>               <span class="hl str">&quot;Don't know how to handle %s's value of %s&quot;</span> var val<span class="hl opt">)</span></div>
<div class="pre"><a id="l3334" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3334" class="linenr">3334 </a>      <span class="hl num">0</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l3335" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3335" class="linenr">3335 </a></div>
<div class="pre"><a id="l3336" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3336" class="linenr">3336 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-set-var-value <span class="hl opt">(</span><span class="hl kwa">var</span> value <span class="hl opt">&amp;</span>optional no-symbol<span class="hl opt">)</span></div>
<div class="pre"><a id="l3337" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3337" class="linenr">3337 </a>  <span class="hl str">&quot;Set variable VAR to VALUE.</span></div>
<div class="pre"><a id="l3338" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3338" class="linenr">3338 </a><span class="hl str">Unless optional argument NO-SYMBOL is non-nil, then if VALUE is</span></div>
<div class="pre"><a id="l3339" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3339" class="linenr">3339 </a><span class="hl str">can be represented by a symbol then do so.&quot;</span></div>
<div class="pre"><a id="l3340" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3340" class="linenr">3340 </a>  <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l3341" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3341" class="linenr">3341 </a>   <span class="hl opt">(</span><span class="hl kwa">no-symbol</span></div>
<div class="pre"><a id="l3342" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3342" class="linenr">3342 </a>    <span class="hl opt">(</span><span class="hl kwa">set</span> var value<span class="hl opt">))</span></div>
<div class="pre"><a id="l3343" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3343" class="linenr">3343 </a>   <span class="hl opt">((=</span> value sh-basic-offset<span class="hl opt">)</span></div>
<div class="pre"><a id="l3344" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3344" class="linenr">3344 </a>    <span class="hl opt">(</span><span class="hl kwa">set</span> var <span class="hl opt">'+))</span></div>
<div class="pre"><a id="l3345" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3345" class="linenr">3345 </a>   <span class="hl opt">((=</span> value <span class="hl opt">(</span><span class="hl kwa">-</span> sh-basic-offset<span class="hl opt">))</span></div>
<div class="pre"><a id="l3346" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3346" class="linenr">3346 </a>    <span class="hl opt">(</span><span class="hl kwa">set</span> var <span class="hl opt">'</span>-<span class="hl opt">))</span></div>
<div class="pre"><a id="l3347" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3347" class="linenr">3347 </a>   <span class="hl opt">((</span><span class="hl kwa">eq</span> value <span class="hl opt">(*</span> <span class="hl num">2</span> sh-basic-offset<span class="hl opt">))</span></div>
<div class="pre"><a id="l3348" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3348" class="linenr">3348 </a>    <span class="hl opt">(</span><span class="hl kwa">set</span> var  <span class="hl opt">'++))</span></div>
<div class="pre"><a id="l3349" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3349" class="linenr">3349 </a>   <span class="hl opt">((</span><span class="hl kwa">eq</span> value <span class="hl opt">(*</span> <span class="hl num">2</span> <span class="hl opt">(</span><span class="hl kwa">-</span> sh-basic-offset<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3350" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3350" class="linenr">3350 </a>    <span class="hl opt">(</span><span class="hl kwa">set</span> var  <span class="hl opt">'</span>--<span class="hl opt">))</span></div>
<div class="pre"><a id="l3351" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3351" class="linenr">3351 </a>   <span class="hl opt">((</span><span class="hl kwa">eq</span> value <span class="hl opt">(/</span> sh-basic-offset <span class="hl num">2</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3352" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3352" class="linenr">3352 </a>    <span class="hl opt">(</span><span class="hl kwa">set</span> var  <span class="hl opt">'*))</span></div>
<div class="pre"><a id="l3353" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3353" class="linenr">3353 </a>   <span class="hl opt">((</span><span class="hl kwa">eq</span> value <span class="hl opt">(/ (</span><span class="hl kwa">-</span> sh-basic-offset<span class="hl opt">)</span> <span class="hl num">2</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3354" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3354" class="linenr">3354 </a>    <span class="hl opt">(</span><span class="hl kwa">set</span> var  <span class="hl opt">'/))</span></div>
<div class="pre"><a id="l3355" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3355" class="linenr">3355 </a>   <span class="hl opt">(</span><span class="hl kwa">t</span></div>
<div class="pre"><a id="l3356" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3356" class="linenr">3356 </a>    <span class="hl opt">(</span><span class="hl kwa">set</span> var value<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3357" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3357" class="linenr">3357 </a>  <span class="hl opt">)</span></div>
<div class="pre"><a id="l3358" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3358" class="linenr">3358 </a></div>
<div class="pre"><a id="l3359" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3359" class="linenr">3359 </a></div>
<div class="pre"><a id="l3360" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3360" class="linenr">3360 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-calculate-indent <span class="hl opt">(&amp;</span>optional info<span class="hl opt">)</span></div>
<div class="pre"><a id="l3361" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3361" class="linenr">3361 </a>  <span class="hl str">&quot;Return the indentation for the current line.</span></div>
<div class="pre"><a id="l3362" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3362" class="linenr">3362 </a><span class="hl str">If INFO is supplied it is used, else it is calculated from current line.&quot;</span></div>
<div class="pre"><a id="l3363" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3363" class="linenr">3363 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">ofs</span> <span class="hl num">0</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3364" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3364" class="linenr">3364 </a>        <span class="hl opt">(</span><span class="hl kwa">base-value</span> <span class="hl num">0</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3365" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3365" class="linenr">3365 </a>        elt a b val<span class="hl opt">)</span></div>
<div class="pre"><a id="l3366" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3366" class="linenr">3366 </a>    <span class="hl opt">(</span><span class="hl kwa">or</span> info</div>
<div class="pre"><a id="l3367" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3367" class="linenr">3367 </a>        <span class="hl opt">(</span><span class="hl kwa">setq</span> info <span class="hl opt">(</span><span class="hl kwa">sh-get-indent-info</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3368" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3368" class="linenr">3368 </a>    <span class="hl opt">(</span><span class="hl kwa">when</span> info</div>
<div class="pre"><a id="l3369" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3369" class="linenr">3369 </a>      <span class="hl opt">(</span><span class="hl kwa">while</span> info</div>
<div class="pre"><a id="l3370" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3370" class="linenr">3370 </a>        <span class="hl opt">(</span><span class="hl kwa">sh-debug</span> <span class="hl str">&quot;info: %s  ofs=%s&quot;</span> info ofs<span class="hl opt">)</span></div>
<div class="pre"><a id="l3371" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3371" class="linenr">3371 </a>        <span class="hl opt">(</span><span class="hl kwa">setq</span> elt <span class="hl opt">(</span><span class="hl kwa">car</span> info<span class="hl opt">))</span></div>
<div class="pre"><a id="l3372" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3372" class="linenr">3372 </a>        <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l3373" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3373" class="linenr">3373 </a>         <span class="hl opt">((</span><span class="hl kwa">stringp</span> elt<span class="hl opt">))</span> <span class="hl slc">;; do nothing?</span></div>
<div class="pre"><a id="l3374" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3374" class="linenr">3374 </a>         <span class="hl opt">((</span><span class="hl kwa">listp</span> elt<span class="hl opt">)</span></div>
<div class="pre"><a id="l3375" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3375" class="linenr">3375 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> a <span class="hl opt">(</span><span class="hl kwa">car</span> <span class="hl opt">(</span><span class="hl kwa">car</span> info<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3376" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3376" class="linenr">3376 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> b <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">1</span> <span class="hl opt">(</span><span class="hl kwa">car</span> info<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3377" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3377" class="linenr">3377 </a>          <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l3378" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3378" class="linenr">3378 </a>           <span class="hl opt">((</span><span class="hl kwa">eq</span> a t<span class="hl opt">)</span></div>
<div class="pre"><a id="l3379" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3379" class="linenr">3379 </a>            <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l3380" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3380" class="linenr">3380 </a>              <span class="hl opt">(</span><span class="hl kwa">goto-char</span> b<span class="hl opt">)</span></div>
<div class="pre"><a id="l3381" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3381" class="linenr">3381 </a>              <span class="hl opt">(</span><span class="hl kwa">setq</span> val <span class="hl opt">(</span><span class="hl kwa">current-indentation</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3382" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3382" class="linenr">3382 </a>            <span class="hl opt">(</span><span class="hl kwa">setq</span> base-value val<span class="hl opt">))</span></div>
<div class="pre"><a id="l3383" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3383" class="linenr">3383 </a>           <span class="hl opt">((</span><span class="hl kwa">symbolp</span> b<span class="hl opt">)</span></div>
<div class="pre"><a id="l3384" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3384" class="linenr">3384 </a>            <span class="hl opt">(</span><span class="hl kwa">setq</span> val <span class="hl opt">(</span><span class="hl kwa">sh-var-value</span> b<span class="hl opt">))</span></div>
<div class="pre"><a id="l3385" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3385" class="linenr">3385 </a>            <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l3386" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3386" class="linenr">3386 </a>             <span class="hl opt">((</span><span class="hl kwa">eq</span> a <span class="hl opt">'=)</span></div>
<div class="pre"><a id="l3387" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3387" class="linenr">3387 </a>              <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l3388" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3388" class="linenr">3388 </a>               <span class="hl opt">((</span><span class="hl kwa">null</span> val<span class="hl opt">)</span></div>
<div class="pre"><a id="l3389" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3389" class="linenr">3389 </a>                <span class="hl slc">;; no indentation</span></div>
<div class="pre"><a id="l3390" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3390" class="linenr">3390 </a>                <span class="hl slc">;; set info to nil so  we stop immediately</span></div>
<div class="pre"><a id="l3391" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3391" class="linenr">3391 </a>                <span class="hl opt">(</span><span class="hl kwa">setq</span> base-value nil  ofs nil  info nil<span class="hl opt">))</span></div>
<div class="pre"><a id="l3392" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3392" class="linenr">3392 </a>               <span class="hl opt">((</span><span class="hl kwa">eq</span> val t<span class="hl opt">) (</span><span class="hl kwa">setq</span> ofs <span class="hl num">0</span><span class="hl opt">))</span> <span class="hl slc">;; indent as normal line</span></div>
<div class="pre"><a id="l3393" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3393" class="linenr">3393 </a>               <span class="hl opt">(</span><span class="hl kwa">t</span></div>
<div class="pre"><a id="l3394" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3394" class="linenr">3394 </a>                <span class="hl slc">;; The following assume the (t POS) come first!</span></div>
<div class="pre"><a id="l3395" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3395" class="linenr">3395 </a>                <span class="hl opt">(</span><span class="hl kwa">setq</span> ofs val  base-value <span class="hl num">0</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3396" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3396" class="linenr">3396 </a>                <span class="hl opt">(</span><span class="hl kwa">setq</span> info nil<span class="hl opt">))))</span>      <span class="hl slc">;; ? stop now</span></div>
<div class="pre"><a id="l3397" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3397" class="linenr">3397 </a>             <span class="hl opt">((</span><span class="hl kwa">eq</span> a <span class="hl opt">'+) (</span><span class="hl kwa">setq</span> ofs <span class="hl opt">(+</span> ofs val<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3398" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3398" class="linenr">3398 </a>             <span class="hl opt">((</span><span class="hl kwa">eq</span> a <span class="hl opt">'</span>-<span class="hl opt">) (</span><span class="hl kwa">setq</span> ofs <span class="hl opt">(</span><span class="hl kwa">-</span> ofs val<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3399" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3399" class="linenr">3399 </a>             <span class="hl opt">(</span><span class="hl kwa">t</span></div>
<div class="pre"><a id="l3400" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3400" class="linenr">3400 </a>              <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;sh-calculate-indent invalid a a=%s b=%s&quot;</span> a b<span class="hl opt">))))</span></div>
<div class="pre"><a id="l3401" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3401" class="linenr">3401 </a>           <span class="hl opt">(</span><span class="hl kwa">t</span></div>
<div class="pre"><a id="l3402" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3402" class="linenr">3402 </a>            <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;sh-calculate-indent invalid elt: a=%s b=%s&quot;</span> a b<span class="hl opt">))))</span></div>
<div class="pre"><a id="l3403" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3403" class="linenr">3403 </a>         <span class="hl opt">(</span><span class="hl kwa">t</span></div>
<div class="pre"><a id="l3404" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3404" class="linenr">3404 </a>          <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;sh-calculate-indent invalid elt %s&quot;</span> elt<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3405" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3405" class="linenr">3405 </a>        <span class="hl opt">(</span><span class="hl kwa">sh-debug</span> <span class="hl str">&quot;a=%s b=%s val=%s base-value=%s ofs=%s&quot;</span></div>
<div class="pre"><a id="l3406" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3406" class="linenr">3406 </a>                  a b val base-value ofs<span class="hl opt">)</span></div>
<div class="pre"><a id="l3407" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3407" class="linenr">3407 </a>        <span class="hl opt">(</span><span class="hl kwa">setq</span> info <span class="hl opt">(</span><span class="hl kwa">cdr</span> info<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3408" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3408" class="linenr">3408 </a>      <span class="hl slc">;; return value:</span></div>
<div class="pre"><a id="l3409" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3409" class="linenr">3409 </a>      <span class="hl opt">(</span><span class="hl kwa">sh-debug</span> <span class="hl str">&quot;at end:  base-value: %s    ofs: %s&quot;</span> base-value ofs<span class="hl opt">)</span></div>
<div class="pre"><a id="l3410" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3410" class="linenr">3410 </a></div>
<div class="pre"><a id="l3411" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3411" class="linenr">3411 </a>      <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l3412" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3412" class="linenr">3412 </a>       <span class="hl opt">((</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">null</span> base-value<span class="hl opt">)(</span><span class="hl kwa">null</span> ofs<span class="hl opt">))</span></div>
<div class="pre"><a id="l3413" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3413" class="linenr">3413 </a>        nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l3414" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3414" class="linenr">3414 </a>       <span class="hl opt">((</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">numberp</span> base-value<span class="hl opt">)(</span><span class="hl kwa">numberp</span> ofs<span class="hl opt">))</span></div>
<div class="pre"><a id="l3415" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3415" class="linenr">3415 </a>        <span class="hl opt">(</span><span class="hl kwa">sh-debug</span> <span class="hl str">&quot;base (%d) + ofs (%d) = %d&quot;</span></div>
<div class="pre"><a id="l3416" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3416" class="linenr">3416 </a>                  base-value ofs <span class="hl opt">(+</span> base-value ofs<span class="hl opt">))</span></div>
<div class="pre"><a id="l3417" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3417" class="linenr">3417 </a>        <span class="hl opt">(+</span> base-value ofs<span class="hl opt">))</span> <span class="hl slc">;; return value</span></div>
<div class="pre"><a id="l3418" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3418" class="linenr">3418 </a>       <span class="hl opt">(</span><span class="hl kwa">t</span></div>
<div class="pre"><a id="l3419" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3419" class="linenr">3419 </a>        <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;sh-calculate-indent:  Help.  base-value=%s ofs=%s&quot;</span></div>
<div class="pre"><a id="l3420" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3420" class="linenr">3420 </a>               base-value ofs<span class="hl opt">)</span></div>
<div class="pre"><a id="l3421" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3421" class="linenr">3421 </a>        nil<span class="hl opt">)))))</span></div>
<div class="pre"><a id="l3422" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3422" class="linenr">3422 </a></div>
<div class="pre"><a id="l3423" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3423" class="linenr">3423 </a></div>
<div class="pre"><a id="l3424" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3424" class="linenr">3424 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-indent-line <span class="hl opt">()</span></div>
<div class="pre"><a id="l3425" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3425" class="linenr">3425 </a>  <span class="hl str">&quot;Indent the current line.&quot;</span></div>
<div class="pre"><a id="l3426" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3426" class="linenr">3426 </a>  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3427" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3427" class="linenr">3427 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">indent</span> <span class="hl opt">(</span><span class="hl kwa">sh-calculate-indent</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3428" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3428" class="linenr">3428 </a>        <span class="hl opt">(</span><span class="hl kwa">pos</span> <span class="hl opt">(</span><span class="hl kwa">-</span> <span class="hl opt">(</span><span class="hl kwa">point-max</span><span class="hl opt">) (</span><span class="hl kwa">point</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l3429" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3429" class="linenr">3429 </a>    <span class="hl opt">(</span><span class="hl kwa">when</span> indent</div>
<div class="pre"><a id="l3430" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3430" class="linenr">3430 </a>      <span class="hl opt">(</span><span class="hl kwa">beginning-of-line</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3431" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3431" class="linenr">3431 </a>      <span class="hl opt">(</span><span class="hl kwa">skip-chars-forward</span> <span class="hl str">&quot;</span> <span class="hl esc">\t</span><span class="hl str">&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3432" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3432" class="linenr">3432 </a>      <span class="hl opt">(</span><span class="hl kwa">indent-line-to</span> indent<span class="hl opt">)</span></div>
<div class="pre"><a id="l3433" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3433" class="linenr">3433 </a>      <span class="hl slc">;; If initial point was within line's indentation,</span></div>
<div class="pre"><a id="l3434" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3434" class="linenr">3434 </a>      <span class="hl slc">;; position after the indentation.  Else stay at same point in text.</span></div>
<div class="pre"><a id="l3435" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3435" class="linenr">3435 </a>      <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(&gt; (</span><span class="hl kwa">-</span> <span class="hl opt">(</span><span class="hl kwa">point-max</span><span class="hl opt">)</span> pos<span class="hl opt">) (</span><span class="hl kwa">point</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3436" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3436" class="linenr">3436 </a>          <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">-</span> <span class="hl opt">(</span><span class="hl kwa">point-max</span><span class="hl opt">)</span> pos<span class="hl opt">))))))</span></div>
<div class="pre"><a id="l3437" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3437" class="linenr">3437 </a></div>
<div class="pre"><a id="l3438" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3438" class="linenr">3438 </a></div>
<div class="pre"><a id="l3439" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3439" class="linenr">3439 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-blink <span class="hl opt">(</span><span class="hl kwa">blinkpos</span> <span class="hl opt">&amp;</span>optional msg<span class="hl opt">)</span></div>
<div class="pre"><a id="l3440" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3440" class="linenr">3440 </a>  <span class="hl str">&quot;Move cursor momentarily to BLINKPOS and display MSG.&quot;</span></div>
<div class="pre"><a id="l3441" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3441" class="linenr">3441 </a>  <span class="hl slc">;; We can get here without it being a number on first line</span></div>
<div class="pre"><a id="l3442" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3442" class="linenr">3442 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">numberp</span> blinkpos<span class="hl opt">)</span></div>
<div class="pre"><a id="l3443" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3443" class="linenr">3443 </a>      <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l3444" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3444" class="linenr">3444 </a>        <span class="hl opt">(</span><span class="hl kwa">goto-char</span> blinkpos<span class="hl opt">)</span></div>
<div class="pre"><a id="l3445" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3445" class="linenr">3445 </a>        <span class="hl opt">(</span><span class="hl kwa">if</span> msg <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;%s&quot;</span> msg<span class="hl opt">) (</span><span class="hl kwa">message</span> nil<span class="hl opt">))</span></div>
<div class="pre"><a id="l3446" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3446" class="linenr">3446 </a>        <span class="hl opt">(</span><span class="hl kwa">sit-for</span> blink-matching-delay<span class="hl opt">))</span></div>
<div class="pre"><a id="l3447" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3447" class="linenr">3447 </a>    <span class="hl opt">(</span><span class="hl kwa">if</span> msg <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;%s&quot;</span> msg<span class="hl opt">) (</span><span class="hl kwa">message</span> nil<span class="hl opt">))))</span></div>
<div class="pre"><a id="l3448" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3448" class="linenr">3448 </a></div>
<div class="pre"><a id="l3449" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3449" class="linenr">3449 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-show-indent <span class="hl opt">(</span><span class="hl kwa">arg</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3450" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3450" class="linenr">3450 </a>  <span class="hl str">&quot;Show the how the current line would be indented.</span></div>
<div class="pre"><a id="l3451" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3451" class="linenr">3451 </a><span class="hl str">This tells you which variable, if any, controls the indentation of</span></div>
<div class="pre"><a id="l3452" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3452" class="linenr">3452 </a><span class="hl str">this line.</span></div>
<div class="pre"><a id="l3453" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3453" class="linenr">3453 </a><span class="hl str">If optional arg ARG is non-null (called interactively with a prefix),</span></div>
<div class="pre"><a id="l3454" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3454" class="linenr">3454 </a><span class="hl str">a pop up window describes this variable.</span></div>
<div class="pre"><a id="l3455" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3455" class="linenr">3455 </a><span class="hl str">If variable `sh-blink' is non-nil then momentarily go to the line</span></div>
<div class="pre"><a id="l3456" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3456" class="linenr">3456 </a><span class="hl str">we are indenting relative to, if applicable.&quot;</span></div>
<div class="pre"><a id="l3457" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3457" class="linenr">3457 </a>  <span class="hl opt">(</span><span class="hl kwa">interactive</span> <span class="hl str">&quot;P&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3458" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3458" class="linenr">3458 </a>  <span class="hl opt">(</span><span class="hl kwa">sh-must-support-indent</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3459" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3459" class="linenr">3459 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> sh-use-smie</div>
<div class="pre"><a id="l3460" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3460" class="linenr">3460 </a>      <span class="hl opt">(</span><span class="hl kwa">smie-config-show-indent</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3461" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3461" class="linenr">3461 </a>    <span class="hl opt">(</span><span class="hl kwa">let</span><span class="hl opt">* ((</span><span class="hl kwa">info</span> <span class="hl opt">(</span><span class="hl kwa">sh-get-indent-info</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3462" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3462" class="linenr">3462 </a>           <span class="hl opt">(</span><span class="hl kwa">var</span> <span class="hl opt">(</span><span class="hl kwa">sh-get-indent-var-for-line</span> info<span class="hl opt">))</span></div>
<div class="pre"><a id="l3463" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3463" class="linenr">3463 </a>           <span class="hl opt">(</span><span class="hl kwa">curr-indent</span> <span class="hl opt">(</span><span class="hl kwa">current-indentation</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3464" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3464" class="linenr">3464 </a>           val msg<span class="hl opt">)</span></div>
<div class="pre"><a id="l3465" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3465" class="linenr">3465 </a>      <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">stringp</span> var<span class="hl opt">)</span></div>
<div class="pre"><a id="l3466" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3466" class="linenr">3466 </a>          <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;%s&quot;</span> <span class="hl opt">(</span><span class="hl kwa">setq</span> msg var<span class="hl opt">))</span></div>
<div class="pre"><a id="l3467" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3467" class="linenr">3467 </a>        <span class="hl opt">(</span><span class="hl kwa">setq</span> val <span class="hl opt">(</span><span class="hl kwa">sh-calculate-indent</span> info<span class="hl opt">))</span></div>
<div class="pre"><a id="l3468" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3468" class="linenr">3468 </a></div>
<div class="pre"><a id="l3469" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3469" class="linenr">3469 </a>        <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> curr-indent val<span class="hl opt">)</span></div>
<div class="pre"><a id="l3470" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3470" class="linenr">3470 </a>            <span class="hl opt">(</span><span class="hl kwa">setq</span> msg <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;%s is %s&quot;</span> var <span class="hl opt">(</span><span class="hl kwa">symbol-value</span> var<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3471" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3471" class="linenr">3471 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> msg</div>
<div class="pre"><a id="l3472" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3472" class="linenr">3472 </a>                <span class="hl opt">(</span><span class="hl kwa">if</span> val</div>
<div class="pre"><a id="l3473" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3473" class="linenr">3473 </a>                    <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;%s (%s) would change indent from %d to: %d&quot;</span></div>
<div class="pre"><a id="l3474" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3474" class="linenr">3474 </a>                            var <span class="hl opt">(</span><span class="hl kwa">symbol-value</span> var<span class="hl opt">)</span> curr-indent val<span class="hl opt">)</span></div>
<div class="pre"><a id="l3475" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3475" class="linenr">3475 </a>                  <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;%s (%s) would leave line as is&quot;</span></div>
<div class="pre"><a id="l3476" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3476" class="linenr">3476 </a>                          var <span class="hl opt">(</span><span class="hl kwa">symbol-value</span> var<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3477" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3477" class="linenr">3477 </a>                <span class="hl opt">))</span></div>
<div class="pre"><a id="l3478" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3478" class="linenr">3478 </a>        <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">and</span> arg var<span class="hl opt">)</span></div>
<div class="pre"><a id="l3479" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3479" class="linenr">3479 </a>            <span class="hl opt">(</span><span class="hl kwa">describe-variable</span> var<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3480" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3480" class="linenr">3480 </a>      <span class="hl opt">(</span><span class="hl kwa">if</span> sh-blink</div>
<div class="pre"><a id="l3481" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3481" class="linenr">3481 </a>          <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">info</span> <span class="hl opt">(</span><span class="hl kwa">sh-get-indent-info</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3482" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3482" class="linenr">3482 </a>            <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">and</span> info <span class="hl opt">(</span><span class="hl kwa">listp</span> <span class="hl opt">(</span><span class="hl kwa">car</span> info<span class="hl opt">))</span></div>
<div class="pre"><a id="l3483" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3483" class="linenr">3483 </a>                     <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl opt">(</span><span class="hl kwa">car</span> <span class="hl opt">(</span><span class="hl kwa">car</span> info<span class="hl opt">))</span> t<span class="hl opt">))</span></div>
<div class="pre"><a id="l3484" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3484" class="linenr">3484 </a>                <span class="hl opt">(</span><span class="hl kwa">sh-blink</span> <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">1</span> <span class="hl opt">(</span><span class="hl kwa">car</span> info<span class="hl opt">))</span>  msg<span class="hl opt">)</span></div>
<div class="pre"><a id="l3485" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3485" class="linenr">3485 </a>              <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;%s&quot;</span> msg<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3486" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3486" class="linenr">3486 </a>        <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;%s&quot;</span> msg<span class="hl opt">))</span></div>
<div class="pre"><a id="l3487" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3487" class="linenr">3487 </a>      <span class="hl opt">)))</span></div>
<div class="pre"><a id="l3488" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3488" class="linenr">3488 </a></div>
<div class="pre"><a id="l3489" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3489" class="linenr">3489 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-set-indent <span class="hl opt">()</span></div>
<div class="pre"><a id="l3490" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3490" class="linenr">3490 </a>  <span class="hl str">&quot;Set the indentation for the current line.</span></div>
<div class="pre"><a id="l3491" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3491" class="linenr">3491 </a><span class="hl str">If the current line is controlled by an indentation variable, prompt</span></div>
<div class="pre"><a id="l3492" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3492" class="linenr">3492 </a><span class="hl str">for a new value for it.&quot;</span></div>
<div class="pre"><a id="l3493" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3493" class="linenr">3493 </a>  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3494" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3494" class="linenr">3494 </a>  <span class="hl opt">(</span><span class="hl kwa">sh-must-support-indent</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3495" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3495" class="linenr">3495 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> sh-use-smie</div>
<div class="pre"><a id="l3496" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3496" class="linenr">3496 </a>      <span class="hl opt">(</span><span class="hl kwa">smie-config-set-indent</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3497" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3497" class="linenr">3497 </a>    <span class="hl opt">(</span><span class="hl kwa">let</span><span class="hl opt">* ((</span><span class="hl kwa">info</span> <span class="hl opt">(</span><span class="hl kwa">sh-get-indent-info</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3498" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3498" class="linenr">3498 </a>           <span class="hl opt">(</span><span class="hl kwa">var</span> <span class="hl opt">(</span><span class="hl kwa">sh-get-indent-var-for-line</span> info<span class="hl opt">))</span></div>
<div class="pre"><a id="l3499" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3499" class="linenr">3499 </a>           val old-val indent-val<span class="hl opt">)</span></div>
<div class="pre"><a id="l3500" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3500" class="linenr">3500 </a>      <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">stringp</span> var<span class="hl opt">)</span></div>
<div class="pre"><a id="l3501" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3501" class="linenr">3501 </a>          <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;Cannot set indent - %s&quot;</span> var<span class="hl opt">)</span></div>
<div class="pre"><a id="l3502" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3502" class="linenr">3502 </a>        <span class="hl opt">(</span><span class="hl kwa">setq</span> old-val <span class="hl opt">(</span><span class="hl kwa">symbol-value</span> var<span class="hl opt">))</span></div>
<div class="pre"><a id="l3503" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3503" class="linenr">3503 </a>        <span class="hl opt">(</span><span class="hl kwa">setq</span> val <span class="hl opt">(</span><span class="hl kwa">sh-read-variable</span> var<span class="hl opt">))</span></div>
<div class="pre"><a id="l3504" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3504" class="linenr">3504 </a>        <span class="hl opt">(</span><span class="hl kwa">condition-case</span> nil</div>
<div class="pre"><a id="l3505" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3505" class="linenr">3505 </a>            <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l3506" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3506" class="linenr">3506 </a>              <span class="hl opt">(</span><span class="hl kwa">set</span> var val<span class="hl opt">)</span></div>
<div class="pre"><a id="l3507" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3507" class="linenr">3507 </a>              <span class="hl opt">(</span><span class="hl kwa">setq</span> indent-val <span class="hl opt">(</span><span class="hl kwa">sh-calculate-indent</span> info<span class="hl opt">))</span></div>
<div class="pre"><a id="l3508" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3508" class="linenr">3508 </a>              <span class="hl opt">(</span><span class="hl kwa">if</span> indent-val</div>
<div class="pre"><a id="l3509" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3509" class="linenr">3509 </a>                  <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;Variable: %s  Value: %s  would indent to: %d&quot;</span></div>
<div class="pre"><a id="l3510" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3510" class="linenr">3510 </a>                           var <span class="hl opt">(</span><span class="hl kwa">symbol-value</span> var<span class="hl opt">)</span> indent-val<span class="hl opt">)</span></div>
<div class="pre"><a id="l3511" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3511" class="linenr">3511 </a>                <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;Variable: %s  Value: %s  would leave line as is.&quot;</span></div>
<div class="pre"><a id="l3512" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3512" class="linenr">3512 </a>                         var <span class="hl opt">(</span><span class="hl kwa">symbol-value</span> var<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3513" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3513" class="linenr">3513 </a>              <span class="hl slc">;; I'm not sure about this, indenting it now?</span></div>
<div class="pre"><a id="l3514" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3514" class="linenr">3514 </a>              <span class="hl slc">;; No.  Because it would give the impression that an undo would</span></div>
<div class="pre"><a id="l3515" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3515" class="linenr">3515 </a>              <span class="hl slc">;; restore thing, but the value has been altered.</span></div>
<div class="pre"><a id="l3516" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3516" class="linenr">3516 </a>              <span class="hl slc">;; (sh-indent-line)</span></div>
<div class="pre"><a id="l3517" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3517" class="linenr">3517 </a>              <span class="hl opt">)</span></div>
<div class="pre"><a id="l3518" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3518" class="linenr">3518 </a>          <span class="hl opt">(</span><span class="hl kwa">error</span></div>
<div class="pre"><a id="l3519" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3519" class="linenr">3519 </a>           <span class="hl opt">(</span><span class="hl kwa">set</span> var old-val<span class="hl opt">)</span></div>
<div class="pre"><a id="l3520" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3520" class="linenr">3520 </a>           <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;Bad value for %s, restoring to previous value %s&quot;</span></div>
<div class="pre"><a id="l3521" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3521" class="linenr">3521 </a>                    var old-val<span class="hl opt">)</span></div>
<div class="pre"><a id="l3522" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3522" class="linenr">3522 </a>           <span class="hl opt">(</span><span class="hl kwa">sit-for</span> <span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3523" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3523" class="linenr">3523 </a>           nil<span class="hl opt">))</span></div>
<div class="pre"><a id="l3524" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3524" class="linenr">3524 </a>        <span class="hl opt">))))</span></div>
<div class="pre"><a id="l3525" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3525" class="linenr">3525 </a></div>
<div class="pre"><a id="l3526" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3526" class="linenr">3526 </a></div>
<div class="pre"><a id="l3527" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3527" class="linenr">3527 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-learn-line-indent <span class="hl opt">(</span><span class="hl kwa">arg</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3528" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3528" class="linenr">3528 </a>  <span class="hl str">&quot;Learn how to indent a line as it currently is indented.</span></div>
<div class="pre"><a id="l3529" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3529" class="linenr">3529 </a><span class="hl str"></span></div>
<div class="pre"><a id="l3530" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3530" class="linenr">3530 </a><span class="hl str">If there is an indentation variable which controls this line's indentation,</span></div>
<div class="pre"><a id="l3531" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3531" class="linenr">3531 </a><span class="hl str">then set it to a value which would indent the line the way it</span></div>
<div class="pre"><a id="l3532" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3532" class="linenr">3532 </a><span class="hl str">presently is.</span></div>
<div class="pre"><a id="l3533" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3533" class="linenr">3533 </a><span class="hl str"></span></div>
<div class="pre"><a id="l3534" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3534" class="linenr">3534 </a><span class="hl str">If the value can be represented by one of the symbols then do so</span></div>
<div class="pre"><a id="l3535" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3535" class="linenr">3535 </a><span class="hl str">unless optional argument ARG (the prefix when interactive) is non-nil.&quot;</span></div>
<div class="pre"><a id="l3536" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3536" class="linenr">3536 </a>  <span class="hl opt">(</span><span class="hl kwa">interactive</span> <span class="hl str">&quot;*P&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3537" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3537" class="linenr">3537 </a>  <span class="hl opt">(</span><span class="hl kwa">sh-must-support-indent</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3538" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3538" class="linenr">3538 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> sh-use-smie</div>
<div class="pre"><a id="l3539" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3539" class="linenr">3539 </a>      <span class="hl opt">(</span><span class="hl kwa">smie-config-set-indent</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3540" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3540" class="linenr">3540 </a>    <span class="hl slc">;; I'm not sure if we show allow learning on an empty line.</span></div>
<div class="pre"><a id="l3541" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3541" class="linenr">3541 </a>    <span class="hl slc">;; Though it might occasionally be useful I think it usually</span></div>
<div class="pre"><a id="l3542" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3542" class="linenr">3542 </a>    <span class="hl slc">;; would just be confusing.</span></div>
<div class="pre"><a id="l3543" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3543" class="linenr">3543 </a>    <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l3544" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3544" class="linenr">3544 </a>          <span class="hl opt">(</span><span class="hl kwa">beginning-of-line</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3545" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3545" class="linenr">3545 </a>          <span class="hl opt">(</span><span class="hl kwa">looking-at</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">s-*$&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3546" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3546" class="linenr">3546 </a>        <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;sh-learn-line-indent ignores empty lines.&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3547" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3547" class="linenr">3547 </a>      <span class="hl opt">(</span><span class="hl kwa">let</span><span class="hl opt">* ((</span><span class="hl kwa">info</span> <span class="hl opt">(</span><span class="hl kwa">sh-get-indent-info</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3548" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3548" class="linenr">3548 </a>             <span class="hl opt">(</span><span class="hl kwa">var</span> <span class="hl opt">(</span><span class="hl kwa">sh-get-indent-var-for-line</span> info<span class="hl opt">))</span></div>
<div class="pre"><a id="l3549" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3549" class="linenr">3549 </a>             ival sval diff new-val</div>
<div class="pre"><a id="l3550" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3550" class="linenr">3550 </a>             <span class="hl opt">(</span><span class="hl kwa">no-symbol</span> arg<span class="hl opt">)</span></div>
<div class="pre"><a id="l3551" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3551" class="linenr">3551 </a>             <span class="hl opt">(</span><span class="hl kwa">curr-indent</span> <span class="hl opt">(</span><span class="hl kwa">current-indentation</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3552" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3552" class="linenr">3552 </a>        <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l3553" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3553" class="linenr">3553 </a>         <span class="hl opt">((</span><span class="hl kwa">stringp</span> var<span class="hl opt">)</span></div>
<div class="pre"><a id="l3554" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3554" class="linenr">3554 </a>          <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;Cannot learn line - %s&quot;</span> var<span class="hl opt">))</span></div>
<div class="pre"><a id="l3555" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3555" class="linenr">3555 </a>         <span class="hl opt">((</span><span class="hl kwa">eq</span> var <span class="hl opt">'</span>sh-indent-comment<span class="hl opt">)</span></div>
<div class="pre"><a id="l3556" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3556" class="linenr">3556 </a>          <span class="hl slc">;; This is arbitrary...</span></div>
<div class="pre"><a id="l3557" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3557" class="linenr">3557 </a>          <span class="hl slc">;; - if curr-indent is 0, set to curr-indent</span></div>
<div class="pre"><a id="l3558" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3558" class="linenr">3558 </a>          <span class="hl slc">;; - else if it has the indentation of a &quot;normal&quot; line,</span></div>
<div class="pre"><a id="l3559" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3559" class="linenr">3559 </a>          <span class="hl slc">;;   then set to t</span></div>
<div class="pre"><a id="l3560" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3560" class="linenr">3560 </a>          <span class="hl slc">;; - else set to curr-indent.</span></div>
<div class="pre"><a id="l3561" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3561" class="linenr">3561 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> sh-indent-comment</div>
<div class="pre"><a id="l3562" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3562" class="linenr">3562 </a>                <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(=</span> curr-indent <span class="hl num">0</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3563" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3563" class="linenr">3563 </a>                    <span class="hl num">0</span></div>
<div class="pre"><a id="l3564" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3564" class="linenr">3564 </a>                  <span class="hl opt">(</span><span class="hl kwa">let</span><span class="hl opt">* ((</span><span class="hl kwa">sh-indent-comment</span> t<span class="hl opt">)</span></div>
<div class="pre"><a id="l3565" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3565" class="linenr">3565 </a>                         <span class="hl opt">(</span><span class="hl kwa">val2</span> <span class="hl opt">(</span><span class="hl kwa">sh-calculate-indent</span> info<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3566" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3566" class="linenr">3566 </a>                    <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(=</span> val2 curr-indent<span class="hl opt">)</span></div>
<div class="pre"><a id="l3567" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3567" class="linenr">3567 </a>                        t</div>
<div class="pre"><a id="l3568" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3568" class="linenr">3568 </a>                      curr-indent<span class="hl opt">))))</span></div>
<div class="pre"><a id="l3569" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3569" class="linenr">3569 </a>          <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;%s set to %s&quot;</span> var <span class="hl opt">(</span><span class="hl kwa">symbol-value</span> var<span class="hl opt">))</span></div>
<div class="pre"><a id="l3570" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3570" class="linenr">3570 </a>          <span class="hl opt">)</span></div>
<div class="pre"><a id="l3571" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3571" class="linenr">3571 </a>         <span class="hl opt">((</span><span class="hl kwa">numberp</span> <span class="hl opt">(</span><span class="hl kwa">setq</span> sval <span class="hl opt">(</span><span class="hl kwa">sh-var-value</span> var<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3572" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3572" class="linenr">3572 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> ival <span class="hl opt">(</span><span class="hl kwa">sh-calculate-indent</span> info<span class="hl opt">))</span></div>
<div class="pre"><a id="l3573" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3573" class="linenr">3573 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> diff <span class="hl opt">(</span><span class="hl kwa">-</span> curr-indent ival<span class="hl opt">))</span></div>
<div class="pre"><a id="l3574" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3574" class="linenr">3574 </a></div>
<div class="pre"><a id="l3575" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3575" class="linenr">3575 </a>          <span class="hl opt">(</span><span class="hl kwa">sh-debug</span> <span class="hl str">&quot;curr-indent: %d   ival: %d  diff: %d  var:%s  sval %s&quot;</span></div>
<div class="pre"><a id="l3576" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3576" class="linenr">3576 </a>                    curr-indent ival diff  var sval<span class="hl opt">)</span></div>
<div class="pre"><a id="l3577" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3577" class="linenr">3577 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> new-val <span class="hl opt">(+</span> sval diff<span class="hl opt">))</span></div>
<div class="pre"><a id="l3578" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3578" class="linenr">3578 </a>          <span class="hl slc">;; I commented out this because someone might want to replace</span></div>
<div class="pre"><a id="l3579" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3579" class="linenr">3579 </a>          <span class="hl slc">;; a value of `+' with the current value of sh-basic-offset</span></div>
<div class="pre"><a id="l3580" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3580" class="linenr">3580 </a>          <span class="hl slc">;; or vice-versa.</span></div>
<div class="pre"><a id="l3581" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3581" class="linenr">3581 </a>          <span class="hl slc">;;(if (= 0 diff)</span></div>
<div class="pre"><a id="l3582" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3582" class="linenr">3582 </a>          <span class="hl slc">;;     (message &quot;No change needed!&quot;)</span></div>
<div class="pre"><a id="l3583" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3583" class="linenr">3583 </a>          <span class="hl opt">(</span><span class="hl kwa">sh-set-var-value</span> var new-val no-symbol<span class="hl opt">)</span></div>
<div class="pre"><a id="l3584" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3584" class="linenr">3584 </a>          <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;%s set to %s&quot;</span> var <span class="hl opt">(</span><span class="hl kwa">symbol-value</span> var<span class="hl opt">))</span></div>
<div class="pre"><a id="l3585" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3585" class="linenr">3585 </a>          <span class="hl opt">)</span></div>
<div class="pre"><a id="l3586" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3586" class="linenr">3586 </a>         <span class="hl opt">(</span><span class="hl kwa">t</span></div>
<div class="pre"><a id="l3587" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3587" class="linenr">3587 </a>          <span class="hl opt">(</span><span class="hl kwa">debug</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3588" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3588" class="linenr">3588 </a>          <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;Cannot change %s&quot;</span> var<span class="hl opt">)))))))</span></div>
<div class="pre"><a id="l3589" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3589" class="linenr">3589 </a></div>
<div class="pre"><a id="l3590" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3590" class="linenr">3590 </a></div>
<div class="pre"><a id="l3591" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3591" class="linenr">3591 </a></div>
<div class="pre"><a id="l3592" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3592" class="linenr">3592 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-mark-init <span class="hl opt">(</span><span class="hl kwa">buffer</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3593" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3593" class="linenr">3593 </a>  <span class="hl str">&quot;Initialize a BUFFER to be used by `sh-mark-line'.&quot;</span></div>
<div class="pre"><a id="l3594" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3594" class="linenr">3594 </a>  <span class="hl opt">(</span><span class="hl kwa">with-current-buffer</span> <span class="hl opt">(</span><span class="hl kwa">get-buffer-create</span> buffer<span class="hl opt">)</span></div>
<div class="pre"><a id="l3595" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3595" class="linenr">3595 </a>    <span class="hl opt">(</span><span class="hl kwa">erase-buffer</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3596" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3596" class="linenr">3596 </a>    <span class="hl opt">(</span><span class="hl kwa">occur-mode</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3597" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3597" class="linenr">3597 </a></div>
<div class="pre"><a id="l3598" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3598" class="linenr">3598 </a></div>
<div class="pre"><a id="l3599" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3599" class="linenr">3599 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-mark-line <span class="hl opt">(</span><span class="hl kwa">message</span> point buffer <span class="hl opt">&amp;</span>optional add-linenum occur-point<span class="hl opt">)</span></div>
<div class="pre"><a id="l3600" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3600" class="linenr">3600 </a>  <span class="hl str">&quot;Insert MESSAGE referring to location POINT in current buffer into BUFFER.</span></div>
<div class="pre"><a id="l3601" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3601" class="linenr">3601 </a><span class="hl str">Buffer BUFFER is in `occur-mode'.</span></div>
<div class="pre"><a id="l3602" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3602" class="linenr">3602 </a><span class="hl str">If ADD-LINENUM is non-nil the message is preceded by the line number.</span></div>
<div class="pre"><a id="l3603" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3603" class="linenr">3603 </a><span class="hl str">If OCCUR-POINT is non-nil then the line is marked as a new occurrence</span></div>
<div class="pre"><a id="l3604" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3604" class="linenr">3604 </a><span class="hl str">so that `occur-next' and `occur-prev' will work.&quot;</span></div>
<div class="pre"><a id="l3605" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3605" class="linenr">3605 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">m1</span> <span class="hl opt">(</span><span class="hl kwa">make-marker</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3606" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3606" class="linenr">3606 </a>        start</div>
<div class="pre"><a id="l3607" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3607" class="linenr">3607 </a>        <span class="hl opt">(</span><span class="hl kwa">line</span> <span class="hl str">&quot;&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3608" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3608" class="linenr">3608 </a>    <span class="hl opt">(</span><span class="hl kwa">when</span> point</div>
<div class="pre"><a id="l3609" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3609" class="linenr">3609 </a>      <span class="hl opt">(</span><span class="hl kwa">set-marker</span> m1 point <span class="hl opt">(</span><span class="hl kwa">current-buffer</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3610" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3610" class="linenr">3610 </a>      <span class="hl opt">(</span><span class="hl kwa">if</span> add-linenum</div>
<div class="pre"><a id="l3611" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3611" class="linenr">3611 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> line <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;%d: &quot;</span> <span class="hl opt">(</span><span class="hl kwa">1</span><span class="hl opt">+ (</span><span class="hl kwa">count-lines</span> <span class="hl num">1</span> point<span class="hl opt">))))))</span></div>
<div class="pre"><a id="l3612" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3612" class="linenr">3612 </a>    <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l3613" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3613" class="linenr">3613 </a>      <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">get-buffer</span> buffer<span class="hl opt">)</span></div>
<div class="pre"><a id="l3614" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3614" class="linenr">3614 </a>          <span class="hl opt">(</span><span class="hl kwa">set-buffer</span> <span class="hl opt">(</span><span class="hl kwa">get-buffer</span> buffer<span class="hl opt">))</span></div>
<div class="pre"><a id="l3615" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3615" class="linenr">3615 </a>        <span class="hl opt">(</span><span class="hl kwa">set-buffer</span> <span class="hl opt">(</span><span class="hl kwa">get-buffer-create</span> buffer<span class="hl opt">))</span></div>
<div class="pre"><a id="l3616" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3616" class="linenr">3616 </a>        <span class="hl opt">(</span><span class="hl kwa">occur-mode</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3617" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3617" class="linenr">3617 </a>        <span class="hl opt">)</span></div>
<div class="pre"><a id="l3618" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3618" class="linenr">3618 </a>      <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-max</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3619" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3619" class="linenr">3619 </a>      <span class="hl opt">(</span><span class="hl kwa">setq</span> start <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3620" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3620" class="linenr">3620 </a>      <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">inhibit-read-only</span> t<span class="hl opt">))</span></div>
<div class="pre"><a id="l3621" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3621" class="linenr">3621 </a>        <span class="hl opt">(</span><span class="hl kwa">insert</span> line<span class="hl opt">)</span></div>
<div class="pre"><a id="l3622" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3622" class="linenr">3622 </a>        <span class="hl opt">(</span><span class="hl kwa">if</span> occur-point</div>
<div class="pre"><a id="l3623" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3623" class="linenr">3623 </a>            <span class="hl opt">(</span><span class="hl kwa">setq</span> occur-point <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3624" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3624" class="linenr">3624 </a>        <span class="hl opt">(</span><span class="hl kwa">insert</span> message<span class="hl opt">)</span></div>
<div class="pre"><a id="l3625" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3625" class="linenr">3625 </a>        <span class="hl opt">(</span><span class="hl kwa">if</span> point</div>
<div class="pre"><a id="l3626" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3626" class="linenr">3626 </a>            <span class="hl opt">(</span><span class="hl kwa">add-text-properties</span></div>
<div class="pre"><a id="l3627" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3627" class="linenr">3627 </a>             start <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3628" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3628" class="linenr">3628 </a>             <span class="hl opt">'(</span><span class="hl kwa">mouse-face</span> highlight</div>
<div class="pre"><a id="l3629" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3629" class="linenr">3629 </a>                          help-echo <span class="hl str">&quot;mouse-2: go to the line where I learned this&quot;</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3630" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3630" class="linenr">3630 </a>        <span class="hl opt">(</span><span class="hl kwa">insert</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3631" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3631" class="linenr">3631 </a>        <span class="hl opt">(</span><span class="hl kwa">when</span> point</div>
<div class="pre"><a id="l3632" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3632" class="linenr">3632 </a>          <span class="hl opt">(</span><span class="hl kwa">put-text-property</span> start <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">) '</span>occur-target m1<span class="hl opt">)</span></div>
<div class="pre"><a id="l3633" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3633" class="linenr">3633 </a>          <span class="hl opt">(</span><span class="hl kwa">if</span> occur-point</div>
<div class="pre"><a id="l3634" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3634" class="linenr">3634 </a>              <span class="hl opt">(</span><span class="hl kwa">put-text-property</span> start occur-point</div>
<div class="pre"><a id="l3635" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3635" class="linenr">3635 </a>                                 <span class="hl opt">'</span>occur-match t<span class="hl opt">))</span></div>
<div class="pre"><a id="l3636" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3636" class="linenr">3636 </a>          <span class="hl opt">)))))</span></div>
<div class="pre"><a id="l3637" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3637" class="linenr">3637 </a></div>
<div class="pre"><a id="l3638" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3638" class="linenr">3638 </a><span class="hl slc">;; Is this really worth having?</span></div>
<div class="pre"><a id="l3639" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3639" class="linenr">3639 </a><span class="hl opt">(</span><span class="hl kwa">defvar</span> sh-learned-buffer-hook nil</div>
<div class="pre"><a id="l3640" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3640" class="linenr">3640 </a>  <span class="hl str">&quot;An abnormal hook, called with an alist of learned variables.&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3641" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3641" class="linenr">3641 </a><span class="hl slc">;; Example of how to use sh-learned-buffer-hook</span></div>
<div class="pre"><a id="l3642" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3642" class="linenr">3642 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l3643" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3643" class="linenr">3643 </a><span class="hl slc">;; (defun what-i-learned (list)</span></div>
<div class="pre"><a id="l3644" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3644" class="linenr">3644 </a><span class="hl slc">;;   (let ((p list))</span></div>
<div class="pre"><a id="l3645" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3645" class="linenr">3645 </a><span class="hl slc">;;     (with-current-buffer &quot;*scratch*&quot;</span></div>
<div class="pre"><a id="l3646" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3646" class="linenr">3646 </a><span class="hl slc">;;       (goto-char (point-max))</span></div>
<div class="pre"><a id="l3647" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3647" class="linenr">3647 </a><span class="hl slc">;;       (insert &quot;(setq\n&quot;)</span></div>
<div class="pre"><a id="l3648" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3648" class="linenr">3648 </a><span class="hl slc">;;       (while p</span></div>
<div class="pre"><a id="l3649" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3649" class="linenr">3649 </a><span class="hl slc">;;      (insert (format &quot;  %s %s \n&quot;</span></div>
<div class="pre"><a id="l3650" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3650" class="linenr">3650 </a><span class="hl slc">;;                      (nth 0 (car p)) (nth 1 (car p))))</span></div>
<div class="pre"><a id="l3651" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3651" class="linenr">3651 </a><span class="hl slc">;;      (setq p (cdr p)))</span></div>
<div class="pre"><a id="l3652" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3652" class="linenr">3652 </a><span class="hl slc">;;       (insert &quot;)\n&quot;)</span></div>
<div class="pre"><a id="l3653" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3653" class="linenr">3653 </a><span class="hl slc">;;       )))</span></div>
<div class="pre"><a id="l3654" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3654" class="linenr">3654 </a><span class="hl slc">;;</span></div>
<div class="pre"><a id="l3655" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3655" class="linenr">3655 </a><span class="hl slc">;; (add-hook 'sh-learned-buffer-hook 'what-i-learned)</span></div>
<div class="pre"><a id="l3656" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3656" class="linenr">3656 </a></div>
<div class="pre"><a id="l3657" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3657" class="linenr">3657 </a></div>
<div class="pre"><a id="l3658" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3658" class="linenr">3658 </a><span class="hl slc">;; Originally this was sh-learn-region-indent (beg end)</span></div>
<div class="pre"><a id="l3659" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3659" class="linenr">3659 </a><span class="hl slc">;; However, in practice this was awkward so I changed it to</span></div>
<div class="pre"><a id="l3660" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3660" class="linenr">3660 </a><span class="hl slc">;; use the whole buffer.  Use narrowing if need be.</span></div>
<div class="pre"><a id="l3661" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3661" class="linenr">3661 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-learn-buffer-indent <span class="hl opt">(&amp;</span>optional arg<span class="hl opt">)</span></div>
<div class="pre"><a id="l3662" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3662" class="linenr">3662 </a>  <span class="hl str">&quot;Learn how to indent the buffer the way it currently is.</span></div>
<div class="pre"><a id="l3663" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3663" class="linenr">3663 </a><span class="hl str"></span></div>
<div class="pre"><a id="l3664" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3664" class="linenr">3664 </a><span class="hl str">Output in buffer</span> <span class="hl esc">\&quot;</span><span class="hl str">*indent*</span><span class="hl esc">\&quot;</span> <span class="hl str">shows any lines which have conflicting</span></div>
<div class="pre"><a id="l3665" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3665" class="linenr">3665 </a><span class="hl str">values of a variable, and the final value of all variables learned.</span></div>
<div class="pre"><a id="l3666" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3666" class="linenr">3666 </a><span class="hl str">When called interactively, pop to this buffer automatically if</span></div>
<div class="pre"><a id="l3667" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3667" class="linenr">3667 </a><span class="hl str">there are any discrepancies.</span></div>
<div class="pre"><a id="l3668" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3668" class="linenr">3668 </a><span class="hl str"></span></div>
<div class="pre"><a id="l3669" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3669" class="linenr">3669 </a><span class="hl str">If no prefix ARG is given, then variables are set to numbers.</span></div>
<div class="pre"><a id="l3670" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3670" class="linenr">3670 </a><span class="hl str">If a prefix arg is given, then variables are set to symbols when</span></div>
<div class="pre"><a id="l3671" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3671" class="linenr">3671 </a><span class="hl str">applicable -- e.g. to symbol `+' if the value is that of the</span></div>
<div class="pre"><a id="l3672" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3672" class="linenr">3672 </a><span class="hl str">basic indent.</span></div>
<div class="pre"><a id="l3673" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3673" class="linenr">3673 </a><span class="hl str">If a positive numerical prefix is given, then  `sh-basic-offset'</span></div>
<div class="pre"><a id="l3674" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3674" class="linenr">3674 </a><span class="hl str">is set to the prefix's numerical value.</span></div>
<div class="pre"><a id="l3675" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3675" class="linenr">3675 </a><span class="hl str">Otherwise, sh-basic-offset may or may not be changed, according</span></div>
<div class="pre"><a id="l3676" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3676" class="linenr">3676 </a><span class="hl str">to the value of variable `sh-learn-basic-offset'.</span></div>
<div class="pre"><a id="l3677" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3677" class="linenr">3677 </a><span class="hl str"></span></div>
<div class="pre"><a id="l3678" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3678" class="linenr">3678 </a><span class="hl str">Abnormal hook `sh-learned-buffer-hook' if non-nil is called when the</span></div>
<div class="pre"><a id="l3679" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3679" class="linenr">3679 </a><span class="hl str">function completes.  The function is abnormal because it is called</span></div>
<div class="pre"><a id="l3680" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3680" class="linenr">3680 </a><span class="hl str">with an alist of variables learned.  This feature may be changed or</span></div>
<div class="pre"><a id="l3681" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3681" class="linenr">3681 </a><span class="hl str">removed in the future.</span></div>
<div class="pre"><a id="l3682" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3682" class="linenr">3682 </a><span class="hl str"></span></div>
<div class="pre"><a id="l3683" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3683" class="linenr">3683 </a><span class="hl str">This command can often take a long time to run.&quot;</span></div>
<div class="pre"><a id="l3684" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3684" class="linenr">3684 </a>  <span class="hl opt">(</span><span class="hl kwa">interactive</span> <span class="hl str">&quot;P&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3685" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3685" class="linenr">3685 </a>  <span class="hl opt">(</span><span class="hl kwa">sh-must-support-indent</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3686" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3686" class="linenr">3686 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> sh-use-smie</div>
<div class="pre"><a id="l3687" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3687" class="linenr">3687 </a>      <span class="hl opt">(</span><span class="hl kwa">smie-config-guess</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3688" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3688" class="linenr">3688 </a>    <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l3689" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3689" class="linenr">3689 </a>      <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3690" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3690" class="linenr">3690 </a>      <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">learned-var-list</span> nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l3691" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3691" class="linenr">3691 </a>            <span class="hl opt">(</span><span class="hl kwa">out-buffer</span> <span class="hl str">&quot;*indent*&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3692" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3692" class="linenr">3692 </a>            <span class="hl opt">(</span><span class="hl kwa">num-diffs</span> <span class="hl num">0</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3693" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3693" class="linenr">3693 </a>            previous-set-info</div>
<div class="pre"><a id="l3694" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3694" class="linenr">3694 </a>            <span class="hl opt">(</span><span class="hl kwa">max</span> <span class="hl num">17</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3695" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3695" class="linenr">3695 </a>            vec</div>
<div class="pre"><a id="l3696" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3696" class="linenr">3696 </a>            msg</div>
<div class="pre"><a id="l3697" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3697" class="linenr">3697 </a>            <span class="hl opt">(</span><span class="hl kwa">comment-col</span> nil<span class="hl opt">)</span> <span class="hl slc">;; number if all same, t if seen diff values</span></div>
<div class="pre"><a id="l3698" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3698" class="linenr">3698 </a>            <span class="hl opt">(</span><span class="hl kwa">comments-always-default</span> t<span class="hl opt">)</span> <span class="hl slc">;; nil if we see one not default</span></div>
<div class="pre"><a id="l3699" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3699" class="linenr">3699 </a>            initial-msg</div>
<div class="pre"><a id="l3700" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3700" class="linenr">3700 </a>            <span class="hl opt">(</span><span class="hl kwa">specified-basic-offset</span> <span class="hl opt">(</span><span class="hl kwa">and</span> arg <span class="hl opt">(</span><span class="hl kwa">numberp</span> arg<span class="hl opt">)</span></div>
<div class="pre"><a id="l3701" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3701" class="linenr">3701 </a>                                         <span class="hl opt">(&gt;</span> arg <span class="hl num">0</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3702" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3702" class="linenr">3702 </a>            <span class="hl opt">(</span><span class="hl kwa">linenum</span> <span class="hl num">0</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3703" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3703" class="linenr">3703 </a>            suggested<span class="hl opt">)</span></div>
<div class="pre"><a id="l3704" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3704" class="linenr">3704 </a>        <span class="hl opt">(</span><span class="hl kwa">setq</span> vec <span class="hl opt">(</span><span class="hl kwa">make-vector</span> max <span class="hl num">0</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3705" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3705" class="linenr">3705 </a>        <span class="hl opt">(</span><span class="hl kwa">sh-mark-init</span> out-buffer<span class="hl opt">)</span></div>
<div class="pre"><a id="l3706" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3706" class="linenr">3706 </a></div>
<div class="pre"><a id="l3707" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3707" class="linenr">3707 </a>        <span class="hl opt">(</span><span class="hl kwa">if</span> specified-basic-offset</div>
<div class="pre"><a id="l3708" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3708" class="linenr">3708 </a>            <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l3709" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3709" class="linenr">3709 </a>              <span class="hl opt">(</span><span class="hl kwa">setq</span> sh-basic-offset arg<span class="hl opt">)</span></div>
<div class="pre"><a id="l3710" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3710" class="linenr">3710 </a>              <span class="hl opt">(</span><span class="hl kwa">setq</span> initial-msg</div>
<div class="pre"><a id="l3711" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3711" class="linenr">3711 </a>                    <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;Using specified sh-basic-offset of %d&quot;</span></div>
<div class="pre"><a id="l3712" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3712" class="linenr">3712 </a>                            sh-basic-offset<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3713" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3713" class="linenr">3713 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> initial-msg</div>
<div class="pre"><a id="l3714" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3714" class="linenr">3714 </a>                <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;Initial value of sh-basic-offset: %s&quot;</span></div>
<div class="pre"><a id="l3715" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3715" class="linenr">3715 </a>                        sh-basic-offset<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3716" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3716" class="linenr">3716 </a></div>
<div class="pre"><a id="l3717" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3717" class="linenr">3717 </a>        <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(&lt; (</span><span class="hl kwa">point</span><span class="hl opt">) (</span><span class="hl kwa">point-max</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3718" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3718" class="linenr">3718 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> linenum <span class="hl opt">(</span><span class="hl kwa">1</span><span class="hl opt">+</span> linenum<span class="hl opt">))</span></div>
<div class="pre"><a id="l3719" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3719" class="linenr">3719 </a>          <span class="hl slc">;; (if (zerop (% linenum 10))</span></div>
<div class="pre"><a id="l3720" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3720" class="linenr">3720 </a>          <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;line %d&quot;</span> linenum<span class="hl opt">)</span></div>
<div class="pre"><a id="l3721" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3721" class="linenr">3721 </a>          <span class="hl slc">;; )</span></div>
<div class="pre"><a id="l3722" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3722" class="linenr">3722 </a>          <span class="hl opt">(</span><span class="hl kwa">unless</span> <span class="hl opt">(</span><span class="hl kwa">looking-at</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">s-*$&quot;</span><span class="hl opt">)</span> <span class="hl slc">;; ignore empty lines!</span></div>
<div class="pre"><a id="l3723" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3723" class="linenr">3723 </a>            <span class="hl opt">(</span><span class="hl kwa">let</span><span class="hl opt">* ((</span><span class="hl kwa">sh-indent-comment</span> t<span class="hl opt">)</span> <span class="hl slc">;; info must return default indent</span></div>
<div class="pre"><a id="l3724" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3724" class="linenr">3724 </a>                   <span class="hl opt">(</span><span class="hl kwa">info</span> <span class="hl opt">(</span><span class="hl kwa">sh-get-indent-info</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3725" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3725" class="linenr">3725 </a>                   <span class="hl opt">(</span><span class="hl kwa">var</span> <span class="hl opt">(</span><span class="hl kwa">sh-get-indent-var-for-line</span> info<span class="hl opt">))</span></div>
<div class="pre"><a id="l3726" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3726" class="linenr">3726 </a>                   sval ival diff new-val</div>
<div class="pre"><a id="l3727" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3727" class="linenr">3727 </a>                   <span class="hl opt">(</span><span class="hl kwa">curr-indent</span> <span class="hl opt">(</span><span class="hl kwa">current-indentation</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3728" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3728" class="linenr">3728 </a>              <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l3729" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3729" class="linenr">3729 </a>               <span class="hl opt">((</span><span class="hl kwa">null</span> var<span class="hl opt">)</span></div>
<div class="pre"><a id="l3730" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3730" class="linenr">3730 </a>                nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l3731" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3731" class="linenr">3731 </a>               <span class="hl opt">((</span><span class="hl kwa">stringp</span> var<span class="hl opt">)</span></div>
<div class="pre"><a id="l3732" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3732" class="linenr">3732 </a>                nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l3733" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3733" class="linenr">3733 </a>               <span class="hl opt">((</span><span class="hl kwa">numberp</span> <span class="hl opt">(</span><span class="hl kwa">setq</span> sval <span class="hl opt">(</span><span class="hl kwa">sh-var-value</span> var <span class="hl opt">'</span>no-error<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3734" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3734" class="linenr">3734 </a>                <span class="hl slc">;; the numberp excludes comments since sval will be t.</span></div>
<div class="pre"><a id="l3735" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3735" class="linenr">3735 </a>                <span class="hl opt">(</span><span class="hl kwa">setq</span> ival <span class="hl opt">(</span><span class="hl kwa">sh-calculate-indent</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3736" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3736" class="linenr">3736 </a>                <span class="hl opt">(</span><span class="hl kwa">setq</span> diff <span class="hl opt">(</span><span class="hl kwa">-</span> curr-indent ival<span class="hl opt">))</span></div>
<div class="pre"><a id="l3737" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3737" class="linenr">3737 </a>                <span class="hl opt">(</span><span class="hl kwa">setq</span> new-val <span class="hl opt">(+</span> sval diff<span class="hl opt">))</span></div>
<div class="pre"><a id="l3738" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3738" class="linenr">3738 </a>                <span class="hl opt">(</span><span class="hl kwa">sh-set-var-value</span> var new-val <span class="hl opt">'</span>no-symbol<span class="hl opt">)</span></div>
<div class="pre"><a id="l3739" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3739" class="linenr">3739 </a>                <span class="hl opt">(</span><span class="hl kwa">unless</span> <span class="hl opt">(</span><span class="hl kwa">looking-at</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">s-*#&quot;</span><span class="hl opt">)</span> <span class="hl slc">;; don't learn from comments</span></div>
<div class="pre"><a id="l3740" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3740" class="linenr">3740 </a>                  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">setq</span> previous-set-info <span class="hl opt">(</span><span class="hl kwa">assoc</span> var learned-var-list<span class="hl opt">))</span></div>
<div class="pre"><a id="l3741" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3741" class="linenr">3741 </a>                      <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l3742" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3742" class="linenr">3742 </a>                        <span class="hl slc">;; it was already there, is it same value ?</span></div>
<div class="pre"><a id="l3743" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3743" class="linenr">3743 </a>                        <span class="hl opt">(</span><span class="hl kwa">unless</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl opt">(</span><span class="hl kwa">symbol-value</span> var<span class="hl opt">)</span></div>
<div class="pre"><a id="l3744" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3744" class="linenr">3744 </a>                                    <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">1</span> previous-set-info<span class="hl opt">))</span></div>
<div class="pre"><a id="l3745" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3745" class="linenr">3745 </a>                          <span class="hl opt">(</span><span class="hl kwa">sh-mark-line</span></div>
<div class="pre"><a id="l3746" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3746" class="linenr">3746 </a>                           <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;Variable %s was set to %s&quot;</span></div>
<div class="pre"><a id="l3747" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3747" class="linenr">3747 </a>                                   var <span class="hl opt">(</span><span class="hl kwa">symbol-value</span> var<span class="hl opt">))</span></div>
<div class="pre"><a id="l3748" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3748" class="linenr">3748 </a>                           <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)</span> out-buffer t t<span class="hl opt">)</span></div>
<div class="pre"><a id="l3749" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3749" class="linenr">3749 </a>                          <span class="hl opt">(</span><span class="hl kwa">sh-mark-line</span></div>
<div class="pre"><a id="l3750" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3750" class="linenr">3750 </a>                           <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;  but was previously set to %s&quot;</span></div>
<div class="pre"><a id="l3751" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3751" class="linenr">3751 </a>                                   <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">1</span> previous-set-info<span class="hl opt">))</span></div>
<div class="pre"><a id="l3752" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3752" class="linenr">3752 </a>                           <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">2</span> previous-set-info<span class="hl opt">)</span> out-buffer t<span class="hl opt">)</span></div>
<div class="pre"><a id="l3753" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3753" class="linenr">3753 </a>                          <span class="hl opt">(</span><span class="hl kwa">setq</span> num-diffs <span class="hl opt">(</span><span class="hl kwa">1</span><span class="hl opt">+</span> num-diffs<span class="hl opt">))</span></div>
<div class="pre"><a id="l3754" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3754" class="linenr">3754 </a>                          <span class="hl slc">;; (delete previous-set-info  learned-var-list)</span></div>
<div class="pre"><a id="l3755" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3755" class="linenr">3755 </a>                          <span class="hl opt">(</span><span class="hl kwa">setcdr</span> previous-set-info</div>
<div class="pre"><a id="l3756" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3756" class="linenr">3756 </a>                                  <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">(</span><span class="hl kwa">symbol-value</span> var<span class="hl opt">) (</span><span class="hl kwa">point</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3757" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3757" class="linenr">3757 </a>                          <span class="hl opt">)</span></div>
<div class="pre"><a id="l3758" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3758" class="linenr">3758 </a>                        <span class="hl opt">)</span></div>
<div class="pre"><a id="l3759" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3759" class="linenr">3759 </a>                    <span class="hl opt">(</span><span class="hl kwa">setq</span> learned-var-list</div>
<div class="pre"><a id="l3760" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3760" class="linenr">3760 </a>                          <span class="hl opt">(</span><span class="hl kwa">append</span> <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">(</span><span class="hl kwa">list</span> var <span class="hl opt">(</span><span class="hl kwa">symbol-value</span> var<span class="hl opt">)</span></div>
<div class="pre"><a id="l3761" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3761" class="linenr">3761 </a>                                              <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3762" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3762" class="linenr">3762 </a>                                  learned-var-list<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3763" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3763" class="linenr">3763 </a>                  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">numberp</span> new-val<span class="hl opt">)</span></div>
<div class="pre"><a id="l3764" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3764" class="linenr">3764 </a>                      <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l3765" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3765" class="linenr">3765 </a>                        <span class="hl opt">(</span><span class="hl kwa">sh-debug</span></div>
<div class="pre"><a id="l3766" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3766" class="linenr">3766 </a>                         <span class="hl str">&quot;This line's indent value: %d&quot;</span>  new-val<span class="hl opt">)</span></div>
<div class="pre"><a id="l3767" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3767" class="linenr">3767 </a>                        <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(&lt;</span> new-val <span class="hl num">0</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3768" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3768" class="linenr">3768 </a>                            <span class="hl opt">(</span><span class="hl kwa">setq</span> new-val <span class="hl opt">(</span><span class="hl kwa">-</span> new-val<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3769" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3769" class="linenr">3769 </a>                        <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(&lt;</span> new-val max<span class="hl opt">)</span></div>
<div class="pre"><a id="l3770" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3770" class="linenr">3770 </a>                            <span class="hl opt">(</span><span class="hl kwa">aset</span> vec new-val <span class="hl opt">(</span><span class="hl kwa">1</span><span class="hl opt">+ (</span><span class="hl kwa">aref</span> vec new-val<span class="hl opt">))))))</span></div>
<div class="pre"><a id="l3771" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3771" class="linenr">3771 </a>                  <span class="hl opt">))</span></div>
<div class="pre"><a id="l3772" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3772" class="linenr">3772 </a>               <span class="hl opt">((</span><span class="hl kwa">eq</span> var <span class="hl opt">'</span>sh-indent-comment<span class="hl opt">)</span></div>
<div class="pre"><a id="l3773" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3773" class="linenr">3773 </a>                <span class="hl opt">(</span><span class="hl kwa">unless</span> <span class="hl opt">(=</span> curr-indent <span class="hl opt">(</span><span class="hl kwa">sh-calculate-indent</span> info<span class="hl opt">))</span></div>
<div class="pre"><a id="l3774" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3774" class="linenr">3774 </a>                  <span class="hl slc">;; this is not the default indentation</span></div>
<div class="pre"><a id="l3775" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3775" class="linenr">3775 </a>                  <span class="hl opt">(</span><span class="hl kwa">setq</span> comments-always-default nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l3776" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3776" class="linenr">3776 </a>                  <span class="hl opt">(</span><span class="hl kwa">if</span> comment-col <span class="hl slc">;; then we have see one before</span></div>
<div class="pre"><a id="l3777" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3777" class="linenr">3777 </a>                      <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> comment-col curr-indent<span class="hl opt">)</span></div>
<div class="pre"><a id="l3778" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3778" class="linenr">3778 </a>                          <span class="hl opt">(</span><span class="hl kwa">setq</span> comment-col t<span class="hl opt">))</span> <span class="hl slc">;; seen a different one</span></div>
<div class="pre"><a id="l3779" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3779" class="linenr">3779 </a>                    <span class="hl opt">(</span><span class="hl kwa">setq</span> comment-col curr-indent<span class="hl opt">))</span></div>
<div class="pre"><a id="l3780" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3780" class="linenr">3780 </a>                  <span class="hl opt">))</span></div>
<div class="pre"><a id="l3781" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3781" class="linenr">3781 </a>               <span class="hl opt">(</span><span class="hl kwa">t</span></div>
<div class="pre"><a id="l3782" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3782" class="linenr">3782 </a>                <span class="hl opt">(</span><span class="hl kwa">sh-debug</span> <span class="hl str">&quot;Cannot learn this line!!!&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3783" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3783" class="linenr">3783 </a>                <span class="hl opt">))</span></div>
<div class="pre"><a id="l3784" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3784" class="linenr">3784 </a>              <span class="hl opt">(</span><span class="hl kwa">sh-debug</span></div>
<div class="pre"><a id="l3785" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3785" class="linenr">3785 </a>               <span class="hl str">&quot;at %s learned-var-list is %s&quot;</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)</span> learned-var-list<span class="hl opt">)</span></div>
<div class="pre"><a id="l3786" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3786" class="linenr">3786 </a>              <span class="hl opt">))</span></div>
<div class="pre"><a id="l3787" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3787" class="linenr">3787 </a>          <span class="hl opt">(</span><span class="hl kwa">forward-line</span> <span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3788" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3788" class="linenr">3788 </a>          <span class="hl opt">)</span> <span class="hl slc">;; while</span></div>
<div class="pre"><a id="l3789" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3789" class="linenr">3789 </a>        <span class="hl opt">(</span><span class="hl kwa">if</span> sh-debug</div>
<div class="pre"><a id="l3790" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3790" class="linenr">3790 </a>            <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l3791" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3791" class="linenr">3791 </a>              <span class="hl opt">(</span><span class="hl kwa">setq</span> msg <span class="hl opt">(</span><span class="hl kwa">format</span></div>
<div class="pre"><a id="l3792" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3792" class="linenr">3792 </a>                         <span class="hl str">&quot;comment-col = %s  comments-always-default = %s&quot;</span></div>
<div class="pre"><a id="l3793" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3793" class="linenr">3793 </a>                         comment-col comments-always-default<span class="hl opt">))</span></div>
<div class="pre"><a id="l3794" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3794" class="linenr">3794 </a>              <span class="hl slc">;; (message msg)</span></div>
<div class="pre"><a id="l3795" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3795" class="linenr">3795 </a>              <span class="hl opt">(</span><span class="hl kwa">sh-mark-line</span>  msg nil out-buffer<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3796" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3796" class="linenr">3796 </a>        <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l3797" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3797" class="linenr">3797 </a>         <span class="hl opt">((</span><span class="hl kwa">eq</span> comment-col <span class="hl num">0</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3798" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3798" class="linenr">3798 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> msg  <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">Comments are all in 1st column.</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3799" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3799" class="linenr">3799 </a>         <span class="hl opt">(</span><span class="hl kwa">comments-always-default</span></div>
<div class="pre"><a id="l3800" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3800" class="linenr">3800 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> msg  <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">Comments follow default indentation.</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3801" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3801" class="linenr">3801 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> comment-col t<span class="hl opt">))</span></div>
<div class="pre"><a id="l3802" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3802" class="linenr">3802 </a>         <span class="hl opt">((</span><span class="hl kwa">numberp</span> comment-col<span class="hl opt">)</span></div>
<div class="pre"><a id="l3803" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3803" class="linenr">3803 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> msg  <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">Comments are in col %d.&quot;</span> comment-col<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3804" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3804" class="linenr">3804 </a>         <span class="hl opt">(</span><span class="hl kwa">t</span></div>
<div class="pre"><a id="l3805" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3805" class="linenr">3805 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> msg  <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">Comments seem to be mixed, leaving them as is.</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3806" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3806" class="linenr">3806 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> comment-col nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l3807" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3807" class="linenr">3807 </a>          <span class="hl opt">))</span></div>
<div class="pre"><a id="l3808" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3808" class="linenr">3808 </a>        <span class="hl opt">(</span><span class="hl kwa">sh-debug</span> msg<span class="hl opt">)</span></div>
<div class="pre"><a id="l3809" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3809" class="linenr">3809 </a>        <span class="hl opt">(</span><span class="hl kwa">sh-mark-line</span>  msg nil out-buffer<span class="hl opt">)</span></div>
<div class="pre"><a id="l3810" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3810" class="linenr">3810 </a></div>
<div class="pre"><a id="l3811" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3811" class="linenr">3811 </a>        <span class="hl opt">(</span><span class="hl kwa">sh-mark-line</span> initial-msg nil out-buffer t t<span class="hl opt">)</span></div>
<div class="pre"><a id="l3812" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3812" class="linenr">3812 </a></div>
<div class="pre"><a id="l3813" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3813" class="linenr">3813 </a>        <span class="hl opt">(</span><span class="hl kwa">setq</span> suggested <span class="hl opt">(</span><span class="hl kwa">sh-guess-basic-offset</span> vec<span class="hl opt">))</span></div>
<div class="pre"><a id="l3814" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3814" class="linenr">3814 </a></div>
<div class="pre"><a id="l3815" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3815" class="linenr">3815 </a>        <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">and</span> suggested <span class="hl opt">(</span><span class="hl kwa">not</span> specified-basic-offset<span class="hl opt">))</span></div>
<div class="pre"><a id="l3816" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3816" class="linenr">3816 </a>            <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">new-value</span></div>
<div class="pre"><a id="l3817" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3817" class="linenr">3817 </a>                   <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l3818" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3818" class="linenr">3818 </a>                    <span class="hl slc">;; t =&gt; set it if we have a single value as a number</span></div>
<div class="pre"><a id="l3819" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3819" class="linenr">3819 </a>                    <span class="hl opt">((</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> sh-learn-basic-offset t<span class="hl opt">) (</span><span class="hl kwa">numberp</span> suggested<span class="hl opt">))</span></div>
<div class="pre"><a id="l3820" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3820" class="linenr">3820 </a>                     suggested<span class="hl opt">)</span></div>
<div class="pre"><a id="l3821" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3821" class="linenr">3821 </a>                    <span class="hl slc">;; other non-nil =&gt; set it if only one value was found</span></div>
<div class="pre"><a id="l3822" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3822" class="linenr">3822 </a>                    <span class="hl opt">(</span><span class="hl kwa">sh-learn-basic-offset</span></div>
<div class="pre"><a id="l3823" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3823" class="linenr">3823 </a>                     <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">numberp</span> suggested<span class="hl opt">)</span></div>
<div class="pre"><a id="l3824" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3824" class="linenr">3824 </a>                         suggested</div>
<div class="pre"><a id="l3825" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3825" class="linenr">3825 </a>                       <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(= (</span><span class="hl kwa">length</span> suggested<span class="hl opt">)</span> <span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3826" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3826" class="linenr">3826 </a>                           <span class="hl opt">(</span><span class="hl kwa">car</span> suggested<span class="hl opt">))))</span></div>
<div class="pre"><a id="l3827" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3827" class="linenr">3827 </a>                    <span class="hl opt">(</span><span class="hl kwa">t</span></div>
<div class="pre"><a id="l3828" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3828" class="linenr">3828 </a>                     nil<span class="hl opt">))))</span></div>
<div class="pre"><a id="l3829" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3829" class="linenr">3829 </a>              <span class="hl opt">(</span><span class="hl kwa">if</span> new-value</div>
<div class="pre"><a id="l3830" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3830" class="linenr">3830 </a>                  <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l3831" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3831" class="linenr">3831 </a>                    <span class="hl opt">(</span><span class="hl kwa">setq</span> learned-var-list</div>
<div class="pre"><a id="l3832" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3832" class="linenr">3832 </a>                          <span class="hl opt">(</span><span class="hl kwa">append</span> <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">'</span>sh-basic-offset</div>
<div class="pre"><a id="l3833" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3833" class="linenr">3833 </a>                                              <span class="hl opt">(</span><span class="hl kwa">setq</span> sh-basic-offset new-value<span class="hl opt">)</span></div>
<div class="pre"><a id="l3834" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3834" class="linenr">3834 </a>                                              <span class="hl opt">(</span><span class="hl kwa">point-max</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3835" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3835" class="linenr">3835 </a>                                  learned-var-list<span class="hl opt">))</span></div>
<div class="pre"><a id="l3836" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3836" class="linenr">3836 </a>                    <span class="hl slc">;; Not sure if we need to put this line in, since</span></div>
<div class="pre"><a id="l3837" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3837" class="linenr">3837 </a>                    <span class="hl slc">;; it will appear in the &quot;Learned variable settings&quot;.</span></div>
<div class="pre"><a id="l3838" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3838" class="linenr">3838 </a>                    <span class="hl opt">(</span><span class="hl kwa">sh-mark-line</span></div>
<div class="pre"><a id="l3839" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3839" class="linenr">3839 </a>                     <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;Changed sh-basic-offset to: %d&quot;</span> sh-basic-offset<span class="hl opt">)</span></div>
<div class="pre"><a id="l3840" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3840" class="linenr">3840 </a>                     nil out-buffer<span class="hl opt">))</span></div>
<div class="pre"><a id="l3841" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3841" class="linenr">3841 </a>                <span class="hl opt">(</span><span class="hl kwa">sh-mark-line</span></div>
<div class="pre"><a id="l3842" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3842" class="linenr">3842 </a>                 <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">listp</span> suggested<span class="hl opt">)</span></div>
<div class="pre"><a id="l3843" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3843" class="linenr">3843 </a>                     <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;Possible value(s) for sh-basic-offset:  %s&quot;</span></div>
<div class="pre"><a id="l3844" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3844" class="linenr">3844 </a>                             <span class="hl opt">(</span><span class="hl kwa">mapconcat</span> <span class="hl opt">'</span>int-to-string suggested <span class="hl str">&quot; &quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3845" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3845" class="linenr">3845 </a>                   <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;Suggested sh-basic-offset:  %d&quot;</span> suggested<span class="hl opt">))</span></div>
<div class="pre"><a id="l3846" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3846" class="linenr">3846 </a>                 nil out-buffer<span class="hl opt">))))</span></div>
<div class="pre"><a id="l3847" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3847" class="linenr">3847 </a></div>
<div class="pre"><a id="l3848" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3848" class="linenr">3848 </a></div>
<div class="pre"><a id="l3849" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3849" class="linenr">3849 </a>        <span class="hl opt">(</span><span class="hl kwa">setq</span> learned-var-list</div>
<div class="pre"><a id="l3850" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3850" class="linenr">3850 </a>              <span class="hl opt">(</span><span class="hl kwa">append</span> <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">'</span>sh-indent-comment comment-col <span class="hl opt">(</span><span class="hl kwa">point-max</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3851" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3851" class="linenr">3851 </a>                      learned-var-list<span class="hl opt">))</span></div>
<div class="pre"><a id="l3852" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3852" class="linenr">3852 </a>        <span class="hl opt">(</span><span class="hl kwa">setq</span> sh-indent-comment comment-col<span class="hl opt">)</span></div>
<div class="pre"><a id="l3853" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3853" class="linenr">3853 </a>        <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">name</span> <span class="hl opt">(</span><span class="hl kwa">buffer-name</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3854" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3854" class="linenr">3854 </a>          <span class="hl opt">(</span><span class="hl kwa">sh-mark-line</span>  <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">Learned variable settings:&quot;</span> nil out-buffer<span class="hl opt">)</span></div>
<div class="pre"><a id="l3855" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3855" class="linenr">3855 </a>          <span class="hl opt">(</span><span class="hl kwa">if</span> arg</div>
<div class="pre"><a id="l3856" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3856" class="linenr">3856 </a>              <span class="hl slc">;; Set learned variables to symbolic rather than numeric</span></div>
<div class="pre"><a id="l3857" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3857" class="linenr">3857 </a>              <span class="hl slc">;; values where possible.</span></div>
<div class="pre"><a id="l3858" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3858" class="linenr">3858 </a>              <span class="hl opt">(</span><span class="hl kwa">dolist</span> <span class="hl opt">(</span><span class="hl kwa">learned-var</span> <span class="hl opt">(</span><span class="hl kwa">reverse</span> learned-var-list<span class="hl opt">))</span></div>
<div class="pre"><a id="l3859" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3859" class="linenr">3859 </a>                <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">var</span> <span class="hl opt">(</span><span class="hl kwa">car</span> learned-var<span class="hl opt">))</span></div>
<div class="pre"><a id="l3860" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3860" class="linenr">3860 </a>                      <span class="hl opt">(</span><span class="hl kwa">val</span> <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">1</span> learned-var<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3861" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3861" class="linenr">3861 </a>                  <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> var <span class="hl opt">'</span>sh-basic-offset<span class="hl opt">))</span></div>
<div class="pre"><a id="l3862" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3862" class="linenr">3862 </a>                             <span class="hl opt">(</span><span class="hl kwa">numberp</span> val<span class="hl opt">))</span></div>
<div class="pre"><a id="l3863" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3863" class="linenr">3863 </a>                    <span class="hl opt">(</span><span class="hl kwa">sh-set-var-value</span> var val<span class="hl opt">)))))</span></div>
<div class="pre"><a id="l3864" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3864" class="linenr">3864 </a>          <span class="hl opt">(</span><span class="hl kwa">dolist</span> <span class="hl opt">(</span><span class="hl kwa">learned-var</span> <span class="hl opt">(</span><span class="hl kwa">reverse</span> learned-var-list<span class="hl opt">))</span></div>
<div class="pre"><a id="l3865" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3865" class="linenr">3865 </a>            <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">var</span> <span class="hl opt">(</span><span class="hl kwa">car</span> learned-var<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3866" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3866" class="linenr">3866 </a>              <span class="hl opt">(</span><span class="hl kwa">sh-mark-line</span> <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;  %s %s&quot;</span> var <span class="hl opt">(</span><span class="hl kwa">symbol-value</span> var<span class="hl opt">))</span></div>
<div class="pre"><a id="l3867" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3867" class="linenr">3867 </a>                            <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">2</span> learned-var<span class="hl opt">)</span> out-buffer<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3868" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3868" class="linenr">3868 </a>          <span class="hl opt">(</span><span class="hl kwa">with-current-buffer</span> out-buffer</div>
<div class="pre"><a id="l3869" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3869" class="linenr">3869 </a>            <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3870" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3870" class="linenr">3870 </a>            <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">inhibit-read-only</span> t<span class="hl opt">))</span></div>
<div class="pre"><a id="l3871" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3871" class="linenr">3871 </a>              <span class="hl opt">(</span><span class="hl kwa">insert</span></div>
<div class="pre"><a id="l3872" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3872" class="linenr">3872 </a>               <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;Indentation values for buffer %s.</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> name<span class="hl opt">)</span></div>
<div class="pre"><a id="l3873" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3873" class="linenr">3873 </a>               <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;%d indentation variable%s different values%s</span><span class="hl esc">\n\n</span><span class="hl str">&quot;</span></div>
<div class="pre"><a id="l3874" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3874" class="linenr">3874 </a>                       num-diffs</div>
<div class="pre"><a id="l3875" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3875" class="linenr">3875 </a>                       <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(=</span> num-diffs <span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3876" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3876" class="linenr">3876 </a>                           <span class="hl str">&quot; has&quot;</span>   <span class="hl str">&quot;s have&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3877" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3877" class="linenr">3877 </a>                       <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">zerop</span> num-diffs<span class="hl opt">)</span></div>
<div class="pre"><a id="l3878" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3878" class="linenr">3878 </a>                           <span class="hl str">&quot;.&quot;</span> <span class="hl str">&quot;:&quot;</span><span class="hl opt">))))))</span></div>
<div class="pre"><a id="l3879" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3879" class="linenr">3879 </a>        <span class="hl slc">;; Are abnormal hooks considered bad form?</span></div>
<div class="pre"><a id="l3880" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3880" class="linenr">3880 </a>        <span class="hl opt">(</span><span class="hl kwa">run-hook-with-args</span> <span class="hl opt">'</span>sh-learned-buffer-hook learned-var-list<span class="hl opt">)</span></div>
<div class="pre"><a id="l3881" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3881" class="linenr">3881 </a>        <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">called-interactively-p</span> <span class="hl opt">'</span>any<span class="hl opt">)</span></div>
<div class="pre"><a id="l3882" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3882" class="linenr">3882 </a>             <span class="hl opt">(</span><span class="hl kwa">or</span> sh-popup-occur-buffer <span class="hl opt">(&gt;</span> num-diffs <span class="hl num">0</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3883" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3883" class="linenr">3883 </a>             <span class="hl opt">(</span><span class="hl kwa">pop-to-buffer</span> out-buffer<span class="hl opt">))))))</span></div>
<div class="pre"><a id="l3884" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3884" class="linenr">3884 </a></div>
<div class="pre"><a id="l3885" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3885" class="linenr">3885 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-guess-basic-offset <span class="hl opt">(</span><span class="hl kwa">vec</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3886" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3886" class="linenr">3886 </a>  <span class="hl str">&quot;See if we can determine a reasonable value for `sh-basic-offset'.</span></div>
<div class="pre"><a id="l3887" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3887" class="linenr">3887 </a><span class="hl str">This is experimental, heuristic and arbitrary!</span></div>
<div class="pre"><a id="l3888" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3888" class="linenr">3888 </a><span class="hl str">Argument VEC is a vector of information collected by</span></div>
<div class="pre"><a id="l3889" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3889" class="linenr">3889 </a><span class="hl str">`sh-learn-buffer-indent'.</span></div>
<div class="pre"><a id="l3890" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3890" class="linenr">3890 </a><span class="hl str">Return values:</span></div>
<div class="pre"><a id="l3891" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3891" class="linenr">3891 </a><span class="hl str">  number          - there appears to be a good single value</span></div>
<div class="pre"><a id="l3892" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3892" class="linenr">3892 </a><span class="hl str">  list of numbers - no obvious one, here is a list of one or more</span></div>
<div class="pre"><a id="l3893" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3893" class="linenr">3893 </a><span class="hl str">                    reasonable choices</span></div>
<div class="pre"><a id="l3894" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3894" class="linenr">3894 </a><span class="hl str">  nil             - we couldn't find a reasonable one.&quot;</span></div>
<div class="pre"><a id="l3895" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3895" class="linenr">3895 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span><span class="hl opt">* ((</span><span class="hl kwa">max</span> <span class="hl opt">(</span><span class="hl kwa">1-</span> <span class="hl opt">(</span><span class="hl kwa">length</span> vec<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3896" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3896" class="linenr">3896 </a>         <span class="hl opt">(</span><span class="hl kwa">i</span> <span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3897" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3897" class="linenr">3897 </a>         <span class="hl opt">(</span><span class="hl kwa">totals</span> <span class="hl opt">(</span><span class="hl kwa">make-vector</span> max <span class="hl num">0</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3898" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3898" class="linenr">3898 </a>    <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(&lt;</span> i max<span class="hl opt">)</span></div>
<div class="pre"><a id="l3899" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3899" class="linenr">3899 </a>      <span class="hl opt">(</span><span class="hl kwa">cl-incf</span> <span class="hl opt">(</span><span class="hl kwa">aref</span> totals i<span class="hl opt">) (*</span> <span class="hl num">4</span> <span class="hl opt">(</span><span class="hl kwa">aref</span> vec i<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3900" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3900" class="linenr">3900 </a>      <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">zerop</span> <span class="hl opt">(</span>% i <span class="hl num">2</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3901" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3901" class="linenr">3901 </a>          <span class="hl opt">(</span><span class="hl kwa">cl-incf</span> <span class="hl opt">(</span><span class="hl kwa">aref</span> totals i<span class="hl opt">) (</span><span class="hl kwa">aref</span> vec <span class="hl opt">(/</span> i <span class="hl num">2</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l3902" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3902" class="linenr">3902 </a>      <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(&lt; (*</span> i <span class="hl num">2</span><span class="hl opt">)</span> max<span class="hl opt">)</span></div>
<div class="pre"><a id="l3903" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3903" class="linenr">3903 </a>          <span class="hl opt">(</span><span class="hl kwa">cl-incf</span> <span class="hl opt">(</span><span class="hl kwa">aref</span> totals i<span class="hl opt">) (</span><span class="hl kwa">aref</span> vec <span class="hl opt">(*</span> i <span class="hl num">2</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l3904" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3904" class="linenr">3904 </a>      <span class="hl opt">(</span><span class="hl kwa">setq</span> i <span class="hl opt">(</span><span class="hl kwa">1</span><span class="hl opt">+</span> i<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3905" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3905" class="linenr">3905 </a></div>
<div class="pre"><a id="l3906" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3906" class="linenr">3906 </a>    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">x</span> nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l3907" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3907" class="linenr">3907 </a>          <span class="hl opt">(</span><span class="hl kwa">result</span> nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l3908" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3908" class="linenr">3908 </a>          tot sum p<span class="hl opt">)</span></div>
<div class="pre"><a id="l3909" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3909" class="linenr">3909 </a>      <span class="hl opt">(</span><span class="hl kwa">setq</span> i <span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3910" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3910" class="linenr">3910 </a>      <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(&lt;</span> i max<span class="hl opt">)</span></div>
<div class="pre"><a id="l3911" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3911" class="linenr">3911 </a>        <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(/= (</span><span class="hl kwa">aref</span> totals i<span class="hl opt">)</span> <span class="hl num">0</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3912" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3912" class="linenr">3912 </a>            <span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl opt">(</span><span class="hl kwa">cons</span> i <span class="hl opt">(</span><span class="hl kwa">aref</span> totals i<span class="hl opt">))</span> x<span class="hl opt">))</span></div>
<div class="pre"><a id="l3913" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3913" class="linenr">3913 </a>        <span class="hl opt">(</span><span class="hl kwa">setq</span> i <span class="hl opt">(</span><span class="hl kwa">1</span><span class="hl opt">+</span> i<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3914" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3914" class="linenr">3914 </a></div>
<div class="pre"><a id="l3915" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3915" class="linenr">3915 </a>      <span class="hl opt">(</span><span class="hl kwa">setq</span> x <span class="hl opt">(</span><span class="hl kwa">sort</span> <span class="hl opt">(</span><span class="hl kwa">nreverse</span> x<span class="hl opt">) (</span><span class="hl kwa">lambda</span> <span class="hl opt">(</span><span class="hl kwa">a</span> b<span class="hl opt">) (&gt; (</span><span class="hl kwa">cdr</span> a<span class="hl opt">) (</span><span class="hl kwa">cdr</span> b<span class="hl opt">)))))</span></div>
<div class="pre"><a id="l3916" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3916" class="linenr">3916 </a>      <span class="hl opt">(</span><span class="hl kwa">setq</span> tot <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">'+ (</span><span class="hl kwa">append</span> totals nil<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3917" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3917" class="linenr">3917 </a>      <span class="hl opt">(</span><span class="hl kwa">sh-debug</span> <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;vec: %s</span><span class="hl esc">\n</span><span class="hl str">totals: %s</span><span class="hl esc">\n</span><span class="hl str">tot: %d&quot;</span></div>
<div class="pre"><a id="l3918" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3918" class="linenr">3918 </a>                        vec totals tot<span class="hl opt">))</span></div>
<div class="pre"><a id="l3919" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3919" class="linenr">3919 </a>      <span class="hl opt">(</span><span class="hl kwa">cond</span></div>
<div class="pre"><a id="l3920" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3920" class="linenr">3920 </a>       <span class="hl opt">((</span><span class="hl kwa">zerop</span> <span class="hl opt">(</span><span class="hl kwa">length</span> x<span class="hl opt">))</span></div>
<div class="pre"><a id="l3921" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3921" class="linenr">3921 </a>        <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;no values!&quot;</span><span class="hl opt">))</span> <span class="hl slc">;; we return nil</span></div>
<div class="pre"><a id="l3922" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3922" class="linenr">3922 </a>       <span class="hl opt">((= (</span><span class="hl kwa">length</span> x<span class="hl opt">)</span> <span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3923" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3923" class="linenr">3923 </a>        <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;only value is %d&quot;</span> <span class="hl opt">(</span><span class="hl kwa">car</span> <span class="hl opt">(</span><span class="hl kwa">car</span> x<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3924" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3924" class="linenr">3924 </a>        <span class="hl opt">(</span><span class="hl kwa">setq</span> result <span class="hl opt">(</span><span class="hl kwa">car</span> <span class="hl opt">(</span><span class="hl kwa">car</span> x<span class="hl opt">))))</span> <span class="hl slc">;; return single value</span></div>
<div class="pre"><a id="l3925" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3925" class="linenr">3925 </a>       <span class="hl opt">((&gt; (</span><span class="hl kwa">cdr</span> <span class="hl opt">(</span><span class="hl kwa">car</span> x<span class="hl opt">)) (/</span> tot <span class="hl num">2</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3926" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3926" class="linenr">3926 </a>        <span class="hl slc">;; 1st is &gt; 50%</span></div>
<div class="pre"><a id="l3927" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3927" class="linenr">3927 </a>        <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;basic-offset is probably %d&quot;</span> <span class="hl opt">(</span><span class="hl kwa">car</span> <span class="hl opt">(</span><span class="hl kwa">car</span> x<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3928" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3928" class="linenr">3928 </a>        <span class="hl opt">(</span><span class="hl kwa">setq</span> result <span class="hl opt">(</span><span class="hl kwa">car</span> <span class="hl opt">(</span><span class="hl kwa">car</span> x<span class="hl opt">))))</span> <span class="hl slc">;;   again, return a single value</span></div>
<div class="pre"><a id="l3929" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3929" class="linenr">3929 </a>       <span class="hl opt">((&gt;=  (</span><span class="hl kwa">cdr</span> <span class="hl opt">(</span><span class="hl kwa">car</span> x<span class="hl opt">)) (*</span> <span class="hl num">2</span> <span class="hl opt">(</span><span class="hl kwa">cdr</span> <span class="hl opt">(</span><span class="hl kwa">car</span> <span class="hl opt">(</span><span class="hl kwa">cdr</span> x<span class="hl opt">)))))</span></div>
<div class="pre"><a id="l3930" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3930" class="linenr">3930 </a>        <span class="hl slc">;; 1st is &gt;= 2 * 2nd</span></div>
<div class="pre"><a id="l3931" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3931" class="linenr">3931 </a>        <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;basic-offset could be %d&quot;</span> <span class="hl opt">(</span><span class="hl kwa">car</span> <span class="hl opt">(</span><span class="hl kwa">car</span> x<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3932" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3932" class="linenr">3932 </a>        <span class="hl opt">(</span><span class="hl kwa">setq</span> result <span class="hl opt">(</span><span class="hl kwa">car</span> <span class="hl opt">(</span><span class="hl kwa">car</span> x<span class="hl opt">))))</span></div>
<div class="pre"><a id="l3933" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3933" class="linenr">3933 </a>       <span class="hl opt">((&gt;= (+ (</span><span class="hl kwa">cdr</span> <span class="hl opt">(</span><span class="hl kwa">car</span> x<span class="hl opt">))(</span><span class="hl kwa">cdr</span> <span class="hl opt">(</span><span class="hl kwa">car</span> <span class="hl opt">(</span><span class="hl kwa">cdr</span> x<span class="hl opt">)))) (/</span> tot <span class="hl num">2</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3934" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3934" class="linenr">3934 </a>        <span class="hl slc">;; 1st &amp; 2nd together &gt;= 50%  - return a list</span></div>
<div class="pre"><a id="l3935" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3935" class="linenr">3935 </a>        <span class="hl opt">(</span><span class="hl kwa">setq</span> p x  sum <span class="hl num">0</span> result nil<span class="hl opt">)</span></div>
<div class="pre"><a id="l3936" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3936" class="linenr">3936 </a>        <span class="hl opt">(</span><span class="hl kwa">while</span>  <span class="hl opt">(</span><span class="hl kwa">and</span> p</div>
<div class="pre"><a id="l3937" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3937" class="linenr">3937 </a>                     <span class="hl opt">(&lt;= (</span><span class="hl kwa">setq</span> sum <span class="hl opt">(+</span> sum <span class="hl opt">(</span><span class="hl kwa">cdr</span> <span class="hl opt">(</span><span class="hl kwa">car</span> p<span class="hl opt">)))) (/</span> tot <span class="hl num">2</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3938" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3938" class="linenr">3938 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> result <span class="hl opt">(</span><span class="hl kwa">append</span> result <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">(</span><span class="hl kwa">car</span> <span class="hl opt">(</span><span class="hl kwa">car</span> p<span class="hl opt">)))))</span></div>
<div class="pre"><a id="l3939" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3939" class="linenr">3939 </a>          <span class="hl opt">(</span><span class="hl kwa">setq</span> p <span class="hl opt">(</span><span class="hl kwa">cdr</span> p<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3940" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3940" class="linenr">3940 </a>        <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;Possible choices for sh-basic-offset: %s&quot;</span></div>
<div class="pre"><a id="l3941" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3941" class="linenr">3941 </a>                 <span class="hl opt">(</span><span class="hl kwa">mapconcat</span> <span class="hl opt">'</span>int-to-string result <span class="hl str">&quot; &quot;</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3942" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3942" class="linenr">3942 </a>       <span class="hl opt">(</span><span class="hl kwa">t</span></div>
<div class="pre"><a id="l3943" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3943" class="linenr">3943 </a>        <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;No obvious value for sh-basic-offset.  Perhaps %d&quot;</span></div>
<div class="pre"><a id="l3944" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3944" class="linenr">3944 </a>                 <span class="hl opt">(</span><span class="hl kwa">car</span> <span class="hl opt">(</span><span class="hl kwa">car</span> x<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3945" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3945" class="linenr">3945 </a>        <span class="hl slc">;; result is nil here</span></div>
<div class="pre"><a id="l3946" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3946" class="linenr">3946 </a>        <span class="hl opt">))</span></div>
<div class="pre"><a id="l3947" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3947" class="linenr">3947 </a>      result<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3948" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3948" class="linenr">3948 </a></div>
<div class="pre"><a id="l3949" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3949" class="linenr">3949 </a><span class="hl slc">;; ========================================================================</span></div>
<div class="pre"><a id="l3950" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3950" class="linenr">3950 </a></div>
<div class="pre"><a id="l3951" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3951" class="linenr">3951 </a><span class="hl slc">;; Styles -- a quick and dirty way of saving the indentation settings.</span></div>
<div class="pre"><a id="l3952" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3952" class="linenr">3952 </a></div>
<div class="pre"><a id="l3953" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3953" class="linenr">3953 </a><span class="hl opt">(</span><span class="hl kwa">defvar</span> sh-styles-alist nil</div>
<div class="pre"><a id="l3954" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3954" class="linenr">3954 </a>  <span class="hl str">&quot;A list of all known shell indentation styles.&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3955" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3955" class="linenr">3955 </a></div>
<div class="pre"><a id="l3956" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3956" class="linenr">3956 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-name-style <span class="hl opt">(</span><span class="hl kwa">name</span> <span class="hl opt">&amp;</span>optional confirm-overwrite<span class="hl opt">)</span></div>
<div class="pre"><a id="l3957" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3957" class="linenr">3957 </a>  <span class="hl str">&quot;Name the current indentation settings as a style called NAME.</span></div>
<div class="pre"><a id="l3958" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3958" class="linenr">3958 </a><span class="hl str">If this name exists, the command will prompt whether it should be</span></div>
<div class="pre"><a id="l3959" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3959" class="linenr">3959 </a><span class="hl str">overwritten if</span></div>
<div class="pre"><a id="l3960" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3960" class="linenr">3960 </a><span class="hl str">- - it was called interactively with a prefix argument, or</span></div>
<div class="pre"><a id="l3961" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3961" class="linenr">3961 </a><span class="hl str">- - called non-interactively with optional CONFIRM-OVERWRITE non-nil.&quot;</span></div>
<div class="pre"><a id="l3962" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3962" class="linenr">3962 </a>  <span class="hl slc">;; (interactive &quot;sName for this style: &quot;)</span></div>
<div class="pre"><a id="l3963" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3963" class="linenr">3963 </a>  <span class="hl opt">(</span><span class="hl kwa">interactive</span></div>
<div class="pre"><a id="l3964" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3964" class="linenr">3964 </a>   <span class="hl opt">(</span><span class="hl kwa">list</span></div>
<div class="pre"><a id="l3965" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3965" class="linenr">3965 </a>    <span class="hl opt">(</span><span class="hl kwa">read-from-minibuffer</span> <span class="hl str">&quot;Name for this style? &quot;</span> <span class="hl opt">)</span></div>
<div class="pre"><a id="l3966" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3966" class="linenr">3966 </a>    <span class="hl opt">(</span><span class="hl kwa">not</span> current-prefix-arg<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3967" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3967" class="linenr">3967 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">slist</span> <span class="hl opt">(</span><span class="hl kwa">cons</span> name</div>
<div class="pre"><a id="l3968" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3968" class="linenr">3968 </a>                     <span class="hl opt">(</span><span class="hl kwa">mapcar</span> <span class="hl opt">(</span><span class="hl kwa">lambda</span> <span class="hl opt">(</span><span class="hl kwa">var</span><span class="hl opt">) (</span><span class="hl kwa">cons</span> var <span class="hl opt">(</span><span class="hl kwa">symbol-value</span> var<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3969" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3969" class="linenr">3969 </a>                             sh-var-list<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3970" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3970" class="linenr">3970 </a>        <span class="hl opt">(</span><span class="hl kwa">style</span> <span class="hl opt">(</span><span class="hl kwa">assoc</span> name sh-styles-alist<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3971" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3971" class="linenr">3971 </a>    <span class="hl opt">(</span><span class="hl kwa">if</span> style</div>
<div class="pre"><a id="l3972" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3972" class="linenr">3972 </a>        <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">and</span> confirm-overwrite</div>
<div class="pre"><a id="l3973" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3973" class="linenr">3973 </a>                 <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">y-or-n-p</span> <span class="hl str">&quot;This style exists.  Overwrite it? &quot;</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3974" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3974" class="linenr">3974 </a>            <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;Not changing style %s&quot;</span> name<span class="hl opt">)</span></div>
<div class="pre"><a id="l3975" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3975" class="linenr">3975 </a>          <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;Updating style %s&quot;</span> name<span class="hl opt">)</span></div>
<div class="pre"><a id="l3976" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3976" class="linenr">3976 </a>          <span class="hl opt">(</span><span class="hl kwa">setcdr</span> style <span class="hl opt">(</span><span class="hl kwa">cdr</span> slist<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3977" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3977" class="linenr">3977 </a>      <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;Creating new style %s&quot;</span> name<span class="hl opt">)</span></div>
<div class="pre"><a id="l3978" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3978" class="linenr">3978 </a>      <span class="hl opt">(</span><span class="hl kwa">push</span> slist sh-styles-alist<span class="hl opt">))))</span></div>
<div class="pre"><a id="l3979" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3979" class="linenr">3979 </a></div>
<div class="pre"><a id="l3980" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3980" class="linenr">3980 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-load-style <span class="hl opt">(</span><span class="hl kwa">name</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3981" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3981" class="linenr">3981 </a>  <span class="hl str">&quot;Set shell indentation values for this buffer from those in style NAME.&quot;</span></div>
<div class="pre"><a id="l3982" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3982" class="linenr">3982 </a>  <span class="hl opt">(</span><span class="hl kwa">interactive</span> <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">(</span><span class="hl kwa">completing-read</span></div>
<div class="pre"><a id="l3983" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3983" class="linenr">3983 </a>                      <span class="hl str">&quot;Which style to use for this buffer? &quot;</span></div>
<div class="pre"><a id="l3984" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3984" class="linenr">3984 </a>                      sh-styles-alist nil t<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3985" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3985" class="linenr">3985 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">sl</span> <span class="hl opt">(</span><span class="hl kwa">assoc</span> name  sh-styles-alist<span class="hl opt">)))</span></div>
<div class="pre"><a id="l3986" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3986" class="linenr">3986 </a>    <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">null</span> sl<span class="hl opt">)</span></div>
<div class="pre"><a id="l3987" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3987" class="linenr">3987 </a>        <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;sh-load-style - style %s not known&quot;</span> name<span class="hl opt">)</span></div>
<div class="pre"><a id="l3988" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3988" class="linenr">3988 </a>      <span class="hl opt">(</span><span class="hl kwa">dolist</span> <span class="hl opt">(</span><span class="hl kwa">var</span> <span class="hl opt">(</span><span class="hl kwa">cdr</span> sl<span class="hl opt">))</span></div>
<div class="pre"><a id="l3989" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3989" class="linenr">3989 </a>        <span class="hl opt">(</span><span class="hl kwa">set</span> <span class="hl opt">(</span><span class="hl kwa">car</span> var<span class="hl opt">) (</span><span class="hl kwa">cdr</span> var<span class="hl opt">))))))</span></div>
<div class="pre"><a id="l3990" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3990" class="linenr">3990 </a></div>
<div class="pre"><a id="l3991" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3991" class="linenr">3991 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-save-styles-to-buffer <span class="hl opt">(</span><span class="hl kwa">buff</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l3992" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3992" class="linenr">3992 </a>  <span class="hl str">&quot;Save all current styles in elisp to buffer BUFF.</span></div>
<div class="pre"><a id="l3993" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3993" class="linenr">3993 </a><span class="hl str">This is always added to the end of the buffer.&quot;</span></div>
<div class="pre"><a id="l3994" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3994" class="linenr">3994 </a>  <span class="hl opt">(</span><span class="hl kwa">interactive</span></div>
<div class="pre"><a id="l3995" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3995" class="linenr">3995 </a>   <span class="hl opt">(</span><span class="hl kwa">list</span></div>
<div class="pre"><a id="l3996" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3996" class="linenr">3996 </a>    <span class="hl opt">(</span><span class="hl kwa">read-from-minibuffer</span> <span class="hl str">&quot;Buffer to save styles in? &quot;</span> <span class="hl str">&quot;*scratch*&quot;</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l3997" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3997" class="linenr">3997 </a>  <span class="hl opt">(</span><span class="hl kwa">with-current-buffer</span> <span class="hl opt">(</span><span class="hl kwa">get-buffer-create</span> buff<span class="hl opt">)</span></div>
<div class="pre"><a id="l3998" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3998" class="linenr">3998 </a>    <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-max</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l3999" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l3999" class="linenr">3999 </a>    <span class="hl opt">(</span><span class="hl kwa">insert</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4000" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4000" class="linenr">4000 </a>    <span class="hl opt">(</span><span class="hl kwa">pp</span> <span class="hl opt">`(</span><span class="hl kwa">setq</span> sh-styles-alist <span class="hl opt">',</span>sh-styles-alist<span class="hl opt">) (</span><span class="hl kwa">current-buffer</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l4001" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4001" class="linenr">4001 </a></div>
<div class="pre"><a id="l4002" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4002" class="linenr">4002 </a></div>
<div class="pre"><a id="l4003" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4003" class="linenr">4003 </a><span class="cntrl">\f</span></div>
<div class="pre"><a id="l4004" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4004" class="linenr">4004 </a><span class="hl slc">;; statement syntax-commands for various shells</span></div>
<div class="pre"><a id="l4005" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4005" class="linenr">4005 </a></div>
<div class="pre"><a id="l4006" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4006" class="linenr">4006 </a><span class="hl slc">;; You are welcome to add the syntax or even completely new statements as</span></div>
<div class="pre"><a id="l4007" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4007" class="linenr">4007 </a><span class="hl slc">;; appropriate for your favorite shell.</span></div>
<div class="pre"><a id="l4008" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4008" class="linenr">4008 </a></div>
<div class="pre"><a id="l4009" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4009" class="linenr">4009 </a><span class="hl opt">(</span><span class="hl kwa">defconst</span> sh-non-closing-paren</div>
<div class="pre"><a id="l4010" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4010" class="linenr">4010 </a>  <span class="hl slc">;; If we leave it rear-sticky, calling `newline' ends up inserting a \n</span></div>
<div class="pre"><a id="l4011" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4011" class="linenr">4011 </a>  <span class="hl slc">;; that inherits this property, which then confuses the indentation.</span></div>
<div class="pre"><a id="l4012" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4012" class="linenr">4012 </a>  <span class="hl opt">(</span><span class="hl kwa">propertize</span> <span class="hl str">&quot;)&quot;</span> <span class="hl opt">'</span>syntax-table sh-st-punc <span class="hl opt">'</span>rear-nonsticky t<span class="hl opt">))</span></div>
<div class="pre"><a id="l4013" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4013" class="linenr">4013 </a></div>
<div class="pre"><a id="l4014" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4014" class="linenr">4014 </a><span class="hl opt">(</span><span class="hl kwa">define-skeleton</span> sh-case</div>
<div class="pre"><a id="l4015" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4015" class="linenr">4015 </a>  <span class="hl str">&quot;Insert a case/switch statement.  See `sh-feature'.&quot;</span></div>
<div class="pre"><a id="l4016" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4016" class="linenr">4016 </a>  <span class="hl opt">(</span><span class="hl kwa">csh</span> <span class="hl str">&quot;expression: &quot;</span></div>
<div class="pre"><a id="l4017" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4017" class="linenr">4017 </a>       <span class="hl str">&quot;switch( &quot;</span> str <span class="hl str">&quot; )&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4018" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4018" class="linenr">4018 </a>       <span class="hl opt">&gt;</span> <span class="hl str">&quot;case &quot;</span> <span class="hl opt">(</span><span class="hl kwa">read-string</span> <span class="hl str">&quot;pattern: &quot;</span><span class="hl opt">)</span> ?<span class="hl opt">:</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4019" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4019" class="linenr">4019 </a>       <span class="hl opt">&gt;</span> _ <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4020" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4020" class="linenr">4020 </a>       <span class="hl str">&quot;breaksw&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4021" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4021" class="linenr">4021 </a>       <span class="hl opt">(</span> <span class="hl str">&quot;other pattern, %s: &quot;</span></div>
<div class="pre"><a id="l4022" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4022" class="linenr">4022 </a>         <span class="hl opt">&lt;</span> <span class="hl str">&quot;case &quot;</span> str ?<span class="hl opt">:</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4023" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4023" class="linenr">4023 </a>         <span class="hl opt">&gt;</span> _ <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4024" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4024" class="linenr">4024 </a>         <span class="hl str">&quot;breaksw&quot;</span> <span class="hl esc">\n</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4025" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4025" class="linenr">4025 </a>       <span class="hl opt">&lt;</span> <span class="hl str">&quot;default:&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4026" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4026" class="linenr">4026 </a>       <span class="hl opt">&gt;</span> _ <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4027" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4027" class="linenr">4027 </a>       resume<span class="hl opt">:</span></div>
<div class="pre"><a id="l4028" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4028" class="linenr">4028 </a>       <span class="hl opt">&lt; &lt;</span> <span class="hl str">&quot;endsw&quot;</span> <span class="hl esc">\n</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4029" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4029" class="linenr">4029 </a>  <span class="hl opt">(</span><span class="hl kwa">es</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4030" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4030" class="linenr">4030 </a>  <span class="hl opt">(</span><span class="hl kwa">rc</span> <span class="hl str">&quot;expression: &quot;</span></div>
<div class="pre"><a id="l4031" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4031" class="linenr">4031 </a>      <span class="hl opt">&gt;</span> <span class="hl str">&quot;switch( &quot;</span> str <span class="hl str">&quot; ) {&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4032" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4032" class="linenr">4032 </a>      <span class="hl opt">&gt;</span> <span class="hl str">&quot;case &quot;</span> <span class="hl opt">(</span><span class="hl kwa">read-string</span> <span class="hl str">&quot;pattern: &quot;</span><span class="hl opt">)</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4033" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4033" class="linenr">4033 </a>      <span class="hl opt">&gt;</span> _ <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4034" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4034" class="linenr">4034 </a>      <span class="hl opt">(</span> <span class="hl str">&quot;other pattern, %s: &quot;</span></div>
<div class="pre"><a id="l4035" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4035" class="linenr">4035 </a>        <span class="hl str">&quot;case &quot;</span> str <span class="hl opt">&gt;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4036" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4036" class="linenr">4036 </a>        <span class="hl opt">&gt;</span> _ <span class="hl esc">\n</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4037" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4037" class="linenr">4037 </a>      <span class="hl str">&quot;case *&quot;</span> <span class="hl opt">&gt;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4038" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4038" class="linenr">4038 </a>      <span class="hl opt">&gt;</span> _ <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4039" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4039" class="linenr">4039 </a>      resume<span class="hl opt">:</span></div>
<div class="pre"><a id="l4040" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4040" class="linenr">4040 </a>      ?\<span class="hl opt">} &gt;</span> <span class="hl esc">\n</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4041" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4041" class="linenr">4041 </a>  <span class="hl opt">(</span><span class="hl kwa">sh</span> <span class="hl str">&quot;expression: &quot;</span></div>
<div class="pre"><a id="l4042" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4042" class="linenr">4042 </a>      <span class="hl opt">&gt;</span> <span class="hl str">&quot;case &quot;</span> str <span class="hl str">&quot; in&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4043" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4043" class="linenr">4043 </a>      <span class="hl opt">(</span> <span class="hl str">&quot;pattern, %s: &quot;</span></div>
<div class="pre"><a id="l4044" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4044" class="linenr">4044 </a>        <span class="hl opt">&gt;</span> str sh-non-closing-paren <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4045" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4045" class="linenr">4045 </a>        <span class="hl opt">&gt;</span> _ <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4046" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4046" class="linenr">4046 </a>        <span class="hl str">&quot;;;&quot;</span> <span class="hl esc">\n</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4047" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4047" class="linenr">4047 </a>      <span class="hl opt">&gt;</span> <span class="hl str">&quot;*&quot;</span> sh-non-closing-paren <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4048" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4048" class="linenr">4048 </a>      <span class="hl opt">&gt;</span> _ <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4049" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4049" class="linenr">4049 </a>      resume<span class="hl opt">:</span></div>
<div class="pre"><a id="l4050" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4050" class="linenr">4050 </a>      <span class="hl str">&quot;esac&quot;</span> <span class="hl opt">&gt;</span> <span class="hl esc">\n</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4051" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4051" class="linenr">4051 </a></div>
<div class="pre"><a id="l4052" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4052" class="linenr">4052 </a><span class="hl opt">(</span><span class="hl kwa">define-skeleton</span> sh-for</div>
<div class="pre"><a id="l4053" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4053" class="linenr">4053 </a>  <span class="hl str">&quot;Insert a for loop.  See `sh-feature'.&quot;</span></div>
<div class="pre"><a id="l4054" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4054" class="linenr">4054 </a>  <span class="hl opt">(</span><span class="hl kwa">csh</span> sh-modify sh</div>
<div class="pre"><a id="l4055" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4055" class="linenr">4055 </a>       <span class="hl num">1</span> <span class="hl str">&quot;&quot;</span></div>
<div class="pre"><a id="l4056" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4056" class="linenr">4056 </a>       <span class="hl num">2</span> <span class="hl str">&quot;foreach &quot;</span></div>
<div class="pre"><a id="l4057" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4057" class="linenr">4057 </a>       <span class="hl num">4</span> <span class="hl str">&quot; ( &quot;</span></div>
<div class="pre"><a id="l4058" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4058" class="linenr">4058 </a>       <span class="hl num">6</span> <span class="hl str">&quot; )&quot;</span></div>
<div class="pre"><a id="l4059" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4059" class="linenr">4059 </a>       <span class="hl num">15</span> <span class="hl opt">'&lt;</span></div>
<div class="pre"><a id="l4060" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4060" class="linenr">4060 </a>       <span class="hl num">16</span> <span class="hl str">&quot;end&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4061" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4061" class="linenr">4061 </a>  <span class="hl opt">(</span><span class="hl kwa">es</span> sh-modify rc</div>
<div class="pre"><a id="l4062" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4062" class="linenr">4062 </a>      <span class="hl num">4</span> <span class="hl str">&quot; = &quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4063" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4063" class="linenr">4063 </a>  <span class="hl opt">(</span><span class="hl kwa">rc</span> sh-modify sh</div>
<div class="pre"><a id="l4064" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4064" class="linenr">4064 </a>      <span class="hl num">2</span> <span class="hl str">&quot;for( &quot;</span></div>
<div class="pre"><a id="l4065" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4065" class="linenr">4065 </a>      <span class="hl num">6</span> <span class="hl str">&quot; ) {&quot;</span></div>
<div class="pre"><a id="l4066" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4066" class="linenr">4066 </a>      <span class="hl num">15</span> ?\<span class="hl opt">} )</span></div>
<div class="pre"><a id="l4067" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4067" class="linenr">4067 </a>  <span class="hl opt">(</span><span class="hl kwa">sh</span> <span class="hl str">&quot;Index variable: &quot;</span></div>
<div class="pre"><a id="l4068" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4068" class="linenr">4068 </a>      <span class="hl opt">&gt;</span> <span class="hl str">&quot;for &quot;</span> str <span class="hl str">&quot; in &quot;</span> _ <span class="hl str">&quot;; do&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4069" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4069" class="linenr">4069 </a>      <span class="hl opt">&gt;</span> _ | ?$ <span class="hl opt">&amp; (</span><span class="hl kwa">sh-remember-variable</span> str<span class="hl opt">)</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4070" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4070" class="linenr">4070 </a>      <span class="hl str">&quot;done&quot;</span> <span class="hl opt">&gt;</span> <span class="hl esc">\n</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4071" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4071" class="linenr">4071 </a></div>
<div class="pre"><a id="l4072" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4072" class="linenr">4072 </a></div>
<div class="pre"><a id="l4073" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4073" class="linenr">4073 </a></div>
<div class="pre"><a id="l4074" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4074" class="linenr">4074 </a><span class="hl opt">(</span><span class="hl kwa">define-skeleton</span> sh-indexed-loop</div>
<div class="pre"><a id="l4075" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4075" class="linenr">4075 </a>  <span class="hl str">&quot;Insert an indexed loop from 1 to n.  See `sh-feature'.&quot;</span></div>
<div class="pre"><a id="l4076" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4076" class="linenr">4076 </a>  <span class="hl opt">(</span><span class="hl kwa">bash</span> sh-modify posix<span class="hl opt">)</span></div>
<div class="pre"><a id="l4077" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4077" class="linenr">4077 </a>  <span class="hl opt">(</span><span class="hl kwa">csh</span> <span class="hl str">&quot;Index variable: &quot;</span></div>
<div class="pre"><a id="l4078" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4078" class="linenr">4078 </a>       <span class="hl str">&quot;&#64; &quot;</span> str <span class="hl str">&quot; = 1&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4079" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4079" class="linenr">4079 </a>       <span class="hl str">&quot;while( $&quot;</span> str <span class="hl str">&quot; &lt;= &quot;</span> <span class="hl opt">(</span><span class="hl kwa">read-string</span> <span class="hl str">&quot;upper limit: &quot;</span><span class="hl opt">)</span> <span class="hl str">&quot; )&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4080" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4080" class="linenr">4080 </a>       <span class="hl opt">&gt;</span> _ ?$ str <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4081" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4081" class="linenr">4081 </a>       <span class="hl str">&quot;&#64; &quot;</span> str <span class="hl str">&quot;++&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4082" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4082" class="linenr">4082 </a>       <span class="hl opt">&lt;</span> <span class="hl str">&quot;end&quot;</span> <span class="hl esc">\n</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4083" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4083" class="linenr">4083 </a>  <span class="hl opt">(</span><span class="hl kwa">es</span> sh-modify rc</div>
<div class="pre"><a id="l4084" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4084" class="linenr">4084 </a>      <span class="hl num">4</span> <span class="hl str">&quot; =&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4085" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4085" class="linenr">4085 </a>  <span class="hl opt">(</span><span class="hl kwa">ksh88</span> <span class="hl str">&quot;Index variable: &quot;</span></div>
<div class="pre"><a id="l4086" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4086" class="linenr">4086 </a>         <span class="hl opt">&gt;</span> <span class="hl str">&quot;integer &quot;</span> str <span class="hl str">&quot;=0&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4087" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4087" class="linenr">4087 </a>         <span class="hl opt">&gt;</span> <span class="hl str">&quot;while (( ( &quot;</span> str <span class="hl str">&quot; += 1 ) &lt;= &quot;</span></div>
<div class="pre"><a id="l4088" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4088" class="linenr">4088 </a>         <span class="hl opt">(</span><span class="hl kwa">read-string</span> <span class="hl str">&quot;upper limit: &quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4089" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4089" class="linenr">4089 </a>         <span class="hl str">&quot; )); do&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4090" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4090" class="linenr">4090 </a>         <span class="hl opt">&gt;</span> _ ?$ <span class="hl opt">(</span><span class="hl kwa">sh-remember-variable</span> str<span class="hl opt">) &gt;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4091" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4091" class="linenr">4091 </a>         <span class="hl str">&quot;done&quot;</span> <span class="hl opt">&gt;</span> <span class="hl esc">\n</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4092" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4092" class="linenr">4092 </a>  <span class="hl opt">(</span><span class="hl kwa">posix</span> <span class="hl str">&quot;Index variable: &quot;</span></div>
<div class="pre"><a id="l4093" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4093" class="linenr">4093 </a>         <span class="hl opt">&gt;</span> str <span class="hl str">&quot;=1&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4094" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4094" class="linenr">4094 </a>         <span class="hl str">&quot;while [ $&quot;</span> str <span class="hl str">&quot; -le &quot;</span></div>
<div class="pre"><a id="l4095" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4095" class="linenr">4095 </a>         <span class="hl opt">(</span><span class="hl kwa">read-string</span> <span class="hl str">&quot;upper limit: &quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4096" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4096" class="linenr">4096 </a>         <span class="hl str">&quot; ]; do&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4097" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4097" class="linenr">4097 </a>         <span class="hl opt">&gt;</span> _ ?$ str <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4098" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4098" class="linenr">4098 </a>         str ?<span class="hl opt">= (</span><span class="hl kwa">sh-add</span> <span class="hl opt">(</span><span class="hl kwa">sh-remember-variable</span> str<span class="hl opt">)</span> <span class="hl num">1</span><span class="hl opt">)</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4099" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4099" class="linenr">4099 </a>         <span class="hl str">&quot;done&quot;</span> <span class="hl opt">&gt;</span> <span class="hl esc">\n</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4100" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4100" class="linenr">4100 </a>  <span class="hl opt">(</span><span class="hl kwa">rc</span> <span class="hl str">&quot;Index variable: &quot;</span></div>
<div class="pre"><a id="l4101" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4101" class="linenr">4101 </a>      <span class="hl opt">&gt;</span> <span class="hl str">&quot;for( &quot;</span> str <span class="hl str">&quot; in&quot;</span> <span class="hl str">&quot; `{awk 'BEGIN { for( i=1; i&lt;=&quot;</span></div>
<div class="pre"><a id="l4102" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4102" class="linenr">4102 </a>      <span class="hl opt">(</span><span class="hl kwa">read-string</span> <span class="hl str">&quot;upper limit: &quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4103" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4103" class="linenr">4103 </a>      <span class="hl str">&quot;; i++ ) print i }'`}) {&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4104" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4104" class="linenr">4104 </a>      <span class="hl opt">&gt;</span> _ ?$ <span class="hl opt">(</span><span class="hl kwa">sh-remember-variable</span> str<span class="hl opt">)</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4105" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4105" class="linenr">4105 </a>      ?\<span class="hl opt">} &gt;</span> <span class="hl esc">\n</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4106" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4106" class="linenr">4106 </a>  <span class="hl opt">(</span><span class="hl kwa">sh</span> <span class="hl str">&quot;Index variable: &quot;</span></div>
<div class="pre"><a id="l4107" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4107" class="linenr">4107 </a>      <span class="hl opt">&gt;</span> <span class="hl str">&quot;for &quot;</span> str <span class="hl str">&quot; in `awk 'BEGIN { for( i=1; i&lt;=&quot;</span></div>
<div class="pre"><a id="l4108" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4108" class="linenr">4108 </a>      <span class="hl opt">(</span><span class="hl kwa">read-string</span> <span class="hl str">&quot;upper limit: &quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4109" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4109" class="linenr">4109 </a>      <span class="hl str">&quot;; i++ ) print i }'`; do&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4110" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4110" class="linenr">4110 </a>      <span class="hl opt">&gt;</span> _ ?$ <span class="hl opt">(</span><span class="hl kwa">sh-remember-variable</span> str<span class="hl opt">)</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4111" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4111" class="linenr">4111 </a>      <span class="hl str">&quot;done&quot;</span> <span class="hl opt">&gt;</span> <span class="hl esc">\n</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4112" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4112" class="linenr">4112 </a></div>
<div class="pre"><a id="l4113" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4113" class="linenr">4113 </a></div>
<div class="pre"><a id="l4114" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4114" class="linenr">4114 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-shell-initialize-variables <span class="hl opt">()</span></div>
<div class="pre"><a id="l4115" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4115" class="linenr">4115 </a>  <span class="hl str">&quot;Scan the buffer for variable assignments.</span></div>
<div class="pre"><a id="l4116" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4116" class="linenr">4116 </a><span class="hl str">Add these variables to `sh-shell-variables'.&quot;</span></div>
<div class="pre"><a id="l4117" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4117" class="linenr">4117 </a>  <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;Scanning buffer `%s' for variable assignments...&quot;</span> <span class="hl opt">(</span><span class="hl kwa">buffer-name</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4118" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4118" class="linenr">4118 </a>  <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l4119" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4119" class="linenr">4119 </a>    <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4120" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4120" class="linenr">4120 </a>    <span class="hl opt">(</span><span class="hl kwa">setq</span> sh-shell-variables-initialized t<span class="hl opt">)</span></div>
<div class="pre"><a id="l4121" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4121" class="linenr">4121 </a>    <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">search-forward</span> <span class="hl str">&quot;=&quot;</span> nil t<span class="hl opt">)</span></div>
<div class="pre"><a id="l4122" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4122" class="linenr">4122 </a>      <span class="hl opt">(</span><span class="hl kwa">sh-assignment</span> <span class="hl num">0</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l4123" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4123" class="linenr">4123 </a>  <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;Scanning buffer `%s' for variable assignments...done&quot;</span></div>
<div class="pre"><a id="l4124" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4124" class="linenr">4124 </a>           <span class="hl opt">(</span><span class="hl kwa">buffer-name</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l4125" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4125" class="linenr">4125 </a></div>
<div class="pre"><a id="l4126" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4126" class="linenr">4126 </a><span class="hl opt">(</span><span class="hl kwa">defvar</span> sh-add-buffer<span class="hl opt">)</span></div>
<div class="pre"><a id="l4127" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4127" class="linenr">4127 </a></div>
<div class="pre"><a id="l4128" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4128" class="linenr">4128 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-add-completer <span class="hl opt">(</span><span class="hl kwa">string</span> predicate code<span class="hl opt">)</span></div>
<div class="pre"><a id="l4129" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4129" class="linenr">4129 </a>  <span class="hl str">&quot;Do completion using `sh-shell-variables', but initialize it first.</span></div>
<div class="pre"><a id="l4130" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4130" class="linenr">4130 </a><span class="hl str">This function is designed for use as the</span> <span class="hl esc">\&quot;</span><span class="hl str">completion table</span><span class="hl esc">\&quot;</span><span class="hl str">,</span></div>
<div class="pre"><a id="l4131" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4131" class="linenr">4131 </a><span class="hl str">so it takes three arguments:</span></div>
<div class="pre"><a id="l4132" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4132" class="linenr">4132 </a><span class="hl str">  STRING, the current buffer contents;</span></div>
<div class="pre"><a id="l4133" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4133" class="linenr">4133 </a><span class="hl str">  PREDICATE, the predicate for filtering possible matches;</span></div>
<div class="pre"><a id="l4134" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4134" class="linenr">4134 </a><span class="hl str">  CODE, which says what kind of things to do.</span></div>
<div class="pre"><a id="l4135" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4135" class="linenr">4135 </a><span class="hl str">CODE can be nil, t or `lambda'.</span></div>
<div class="pre"><a id="l4136" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4136" class="linenr">4136 </a><span class="hl str">nil means to return the best completion of STRING, or nil if there is none.</span></div>
<div class="pre"><a id="l4137" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4137" class="linenr">4137 </a><span class="hl str">t means to return a list of all possible completions of STRING.</span></div>
<div class="pre"><a id="l4138" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4138" class="linenr">4138 </a><span class="hl str">`lambda' means to return t if STRING is a valid completion as it stands.&quot;</span></div>
<div class="pre"><a id="l4139" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4139" class="linenr">4139 </a>  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">vars</span></div>
<div class="pre"><a id="l4140" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4140" class="linenr">4140 </a>         <span class="hl opt">(</span><span class="hl kwa">with-current-buffer</span> sh-add-buffer</div>
<div class="pre"><a id="l4141" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4141" class="linenr">4141 </a>           <span class="hl opt">(</span><span class="hl kwa">or</span> sh-shell-variables-initialized</div>
<div class="pre"><a id="l4142" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4142" class="linenr">4142 </a>               <span class="hl opt">(</span><span class="hl kwa">sh-shell-initialize-variables</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4143" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4143" class="linenr">4143 </a>           <span class="hl opt">(</span><span class="hl kwa">nconc</span> <span class="hl opt">(</span><span class="hl kwa">mapcar</span> <span class="hl opt">(</span><span class="hl kwa">lambda</span> <span class="hl opt">(</span><span class="hl kwa">var</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4144" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4144" class="linenr">4144 </a>                            <span class="hl opt">(</span><span class="hl kwa">substring</span> var <span class="hl num">0</span> <span class="hl opt">(</span><span class="hl kwa">string-match</span> <span class="hl str">&quot;=&quot;</span> var<span class="hl opt">)))</span></div>
<div class="pre"><a id="l4145" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4145" class="linenr">4145 </a>                          process-environment<span class="hl opt">)</span></div>
<div class="pre"><a id="l4146" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4146" class="linenr">4146 </a>                  sh-shell-variables<span class="hl opt">))))</span></div>
<div class="pre"><a id="l4147" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4147" class="linenr">4147 </a>    <span class="hl opt">(</span><span class="hl kwa">complete-with-action</span> code vars string predicate<span class="hl opt">)))</span></div>
<div class="pre"><a id="l4148" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4148" class="linenr">4148 </a></div>
<div class="pre"><a id="l4149" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4149" class="linenr">4149 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-add <span class="hl opt">(</span><span class="hl kwa">var</span> delta<span class="hl opt">)</span></div>
<div class="pre"><a id="l4150" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4150" class="linenr">4150 </a>  <span class="hl str">&quot;Insert an addition of VAR and prefix DELTA for Bourne (type) shell.&quot;</span></div>
<div class="pre"><a id="l4151" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4151" class="linenr">4151 </a>  <span class="hl opt">(</span><span class="hl kwa">interactive</span></div>
<div class="pre"><a id="l4152" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4152" class="linenr">4152 </a>   <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">sh-add-buffer</span> <span class="hl opt">(</span><span class="hl kwa">current-buffer</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l4153" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4153" class="linenr">4153 </a>     <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">(</span><span class="hl kwa">completing-read</span> <span class="hl str">&quot;Variable: &quot;</span> <span class="hl opt">'</span>sh-add-completer<span class="hl opt">)</span></div>
<div class="pre"><a id="l4154" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4154" class="linenr">4154 </a>           <span class="hl opt">(</span><span class="hl kwa">prefix-numeric-value</span> current-prefix-arg<span class="hl opt">))))</span></div>
<div class="pre"><a id="l4155" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4155" class="linenr">4155 </a>  <span class="hl opt">(</span><span class="hl kwa">insert</span> <span class="hl opt">(</span><span class="hl kwa">sh-feature</span> <span class="hl opt">'((</span><span class="hl kwa">bash</span> . <span class="hl str">&quot;$(( &quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4156" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4156" class="linenr">4156 </a>                        <span class="hl opt">(</span><span class="hl kwa">ksh88</span> . <span class="hl str">&quot;$(( &quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4157" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4157" class="linenr">4157 </a>                        <span class="hl opt">(</span><span class="hl kwa">posix</span> . <span class="hl str">&quot;$(( &quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4158" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4158" class="linenr">4158 </a>                        <span class="hl opt">(</span><span class="hl kwa">rc</span> . <span class="hl str">&quot;`{expr $&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4159" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4159" class="linenr">4159 </a>                        <span class="hl opt">(</span><span class="hl kwa">sh</span> . <span class="hl str">&quot;`expr $&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4160" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4160" class="linenr">4160 </a>                        <span class="hl opt">(</span><span class="hl kwa">zsh</span> . <span class="hl str">&quot;$[ &quot;</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l4161" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4161" class="linenr">4161 </a>          <span class="hl opt">(</span><span class="hl kwa">sh-remember-variable</span> var<span class="hl opt">)</span></div>
<div class="pre"><a id="l4162" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4162" class="linenr">4162 </a>          <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(&lt;</span> delta <span class="hl num">0</span><span class="hl opt">)</span> <span class="hl str">&quot; - &quot;</span> <span class="hl str">&quot; + &quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4163" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4163" class="linenr">4163 </a>          <span class="hl opt">(</span><span class="hl kwa">number-to-string</span> <span class="hl opt">(</span><span class="hl kwa">abs</span> delta<span class="hl opt">))</span></div>
<div class="pre"><a id="l4164" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4164" class="linenr">4164 </a>          <span class="hl opt">(</span><span class="hl kwa">sh-feature</span> <span class="hl opt">'((</span><span class="hl kwa">bash</span> . <span class="hl str">&quot; ))&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4165" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4165" class="linenr">4165 </a>                        <span class="hl opt">(</span><span class="hl kwa">ksh88</span> . <span class="hl str">&quot; ))&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4166" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4166" class="linenr">4166 </a>                        <span class="hl opt">(</span><span class="hl kwa">posix</span> . <span class="hl str">&quot; ))&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4167" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4167" class="linenr">4167 </a>                        <span class="hl opt">(</span><span class="hl kwa">rc</span> . <span class="hl str">&quot;}&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4168" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4168" class="linenr">4168 </a>                        <span class="hl opt">(</span><span class="hl kwa">sh</span> . <span class="hl str">&quot;`&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4169" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4169" class="linenr">4169 </a>                        <span class="hl opt">(</span><span class="hl kwa">zsh</span> . <span class="hl str">&quot; ]&quot;</span><span class="hl opt">)))))</span></div>
<div class="pre"><a id="l4170" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4170" class="linenr">4170 </a></div>
<div class="pre"><a id="l4171" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4171" class="linenr">4171 </a></div>
<div class="pre"><a id="l4172" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4172" class="linenr">4172 </a></div>
<div class="pre"><a id="l4173" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4173" class="linenr">4173 </a><span class="hl opt">(</span><span class="hl kwa">define-skeleton</span> sh-function</div>
<div class="pre"><a id="l4174" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4174" class="linenr">4174 </a>  <span class="hl str">&quot;Insert a function definition.  See `sh-feature'.&quot;</span></div>
<div class="pre"><a id="l4175" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4175" class="linenr">4175 </a>  <span class="hl opt">(</span><span class="hl kwa">bash</span> sh-modify ksh88</div>
<div class="pre"><a id="l4176" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4176" class="linenr">4176 </a>        <span class="hl num">3</span> <span class="hl str">&quot;() {&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4177" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4177" class="linenr">4177 </a>  <span class="hl opt">(</span><span class="hl kwa">ksh88</span> <span class="hl str">&quot;name: &quot;</span></div>
<div class="pre"><a id="l4178" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4178" class="linenr">4178 </a>         <span class="hl str">&quot;function &quot;</span> str <span class="hl str">&quot; {&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4179" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4179" class="linenr">4179 </a>         <span class="hl opt">&gt;</span> _ <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4180" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4180" class="linenr">4180 </a>         <span class="hl opt">&lt;</span> <span class="hl str">&quot;}&quot;</span> <span class="hl esc">\n</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4181" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4181" class="linenr">4181 </a>  <span class="hl opt">(</span><span class="hl kwa">rc</span> sh-modify ksh88</div>
<div class="pre"><a id="l4182" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4182" class="linenr">4182 </a>      <span class="hl num">1</span> <span class="hl str">&quot;fn &quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4183" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4183" class="linenr">4183 </a>  <span class="hl opt">(</span><span class="hl kwa">sh</span> <span class="hl opt">()</span></div>
<div class="pre"><a id="l4184" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4184" class="linenr">4184 </a>      <span class="hl str">&quot;() {&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4185" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4185" class="linenr">4185 </a>      <span class="hl opt">&gt;</span> _ <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4186" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4186" class="linenr">4186 </a>      <span class="hl opt">&lt;</span> <span class="hl str">&quot;}&quot;</span> <span class="hl esc">\n</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4187" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4187" class="linenr">4187 </a></div>
<div class="pre"><a id="l4188" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4188" class="linenr">4188 </a></div>
<div class="pre"><a id="l4189" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4189" class="linenr">4189 </a></div>
<div class="pre"><a id="l4190" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4190" class="linenr">4190 </a><span class="hl opt">(</span><span class="hl kwa">define-skeleton</span> sh-if</div>
<div class="pre"><a id="l4191" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4191" class="linenr">4191 </a>  <span class="hl str">&quot;Insert an if statement.  See `sh-feature'.&quot;</span></div>
<div class="pre"><a id="l4192" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4192" class="linenr">4192 </a>  <span class="hl opt">(</span><span class="hl kwa">csh</span> <span class="hl str">&quot;condition: &quot;</span></div>
<div class="pre"><a id="l4193" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4193" class="linenr">4193 </a>       <span class="hl str">&quot;if( &quot;</span> str <span class="hl str">&quot; ) then&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4194" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4194" class="linenr">4194 </a>       <span class="hl opt">&gt;</span> _ <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4195" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4195" class="linenr">4195 </a>       <span class="hl opt">(</span> <span class="hl str">&quot;other condition, %s: &quot;</span></div>
<div class="pre"><a id="l4196" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4196" class="linenr">4196 </a>         <span class="hl opt">&lt;</span> <span class="hl str">&quot;else if( &quot;</span> str <span class="hl str">&quot; ) then&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4197" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4197" class="linenr">4197 </a>         <span class="hl opt">&gt;</span> _ <span class="hl esc">\n</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4198" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4198" class="linenr">4198 </a>       <span class="hl opt">&lt;</span> <span class="hl str">&quot;else&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4199" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4199" class="linenr">4199 </a>       <span class="hl opt">&gt;</span> _ <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4200" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4200" class="linenr">4200 </a>       resume<span class="hl opt">:</span></div>
<div class="pre"><a id="l4201" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4201" class="linenr">4201 </a>       <span class="hl opt">&lt;</span> <span class="hl str">&quot;endif&quot;</span> <span class="hl esc">\n</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4202" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4202" class="linenr">4202 </a>  <span class="hl opt">(</span><span class="hl kwa">es</span> <span class="hl str">&quot;condition: &quot;</span></div>
<div class="pre"><a id="l4203" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4203" class="linenr">4203 </a>      <span class="hl opt">&gt;</span> <span class="hl str">&quot;if { &quot;</span> str <span class="hl str">&quot; } {&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4204" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4204" class="linenr">4204 </a>      <span class="hl opt">&gt;</span> _ <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4205" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4205" class="linenr">4205 </a>      <span class="hl opt">(</span> <span class="hl str">&quot;other condition, %s: &quot;</span></div>
<div class="pre"><a id="l4206" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4206" class="linenr">4206 </a>        <span class="hl str">&quot;} { &quot;</span> str <span class="hl str">&quot; } {&quot;</span> <span class="hl opt">&gt;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4207" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4207" class="linenr">4207 </a>        <span class="hl opt">&gt;</span> _ <span class="hl esc">\n</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4208" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4208" class="linenr">4208 </a>      <span class="hl str">&quot;} {&quot;</span> <span class="hl opt">&gt;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4209" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4209" class="linenr">4209 </a>      <span class="hl opt">&gt;</span> _ <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4210" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4210" class="linenr">4210 </a>      resume<span class="hl opt">:</span></div>
<div class="pre"><a id="l4211" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4211" class="linenr">4211 </a>      ?\<span class="hl opt">} &gt;</span> <span class="hl esc">\n</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4212" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4212" class="linenr">4212 </a>  <span class="hl opt">(</span><span class="hl kwa">rc</span> <span class="hl str">&quot;condition: &quot;</span></div>
<div class="pre"><a id="l4213" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4213" class="linenr">4213 </a>      <span class="hl opt">&gt;</span> <span class="hl str">&quot;if( &quot;</span> str <span class="hl str">&quot; ) {&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4214" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4214" class="linenr">4214 </a>      <span class="hl opt">&gt;</span> _ <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4215" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4215" class="linenr">4215 </a>      <span class="hl opt">(</span> <span class="hl str">&quot;other condition, %s: &quot;</span></div>
<div class="pre"><a id="l4216" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4216" class="linenr">4216 </a>        <span class="hl str">&quot;} else if( &quot;</span> str <span class="hl str">&quot; ) {&quot;</span>  <span class="hl opt">&gt;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4217" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4217" class="linenr">4217 </a>        <span class="hl opt">&gt;</span> _ <span class="hl esc">\n</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4218" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4218" class="linenr">4218 </a>      <span class="hl str">&quot;} else {&quot;</span> <span class="hl opt">&gt;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4219" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4219" class="linenr">4219 </a>      <span class="hl opt">&gt;</span> _ <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4220" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4220" class="linenr">4220 </a>      resume<span class="hl opt">:</span></div>
<div class="pre"><a id="l4221" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4221" class="linenr">4221 </a>      ?\<span class="hl opt">} &gt;</span> <span class="hl esc">\n</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4222" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4222" class="linenr">4222 </a>  <span class="hl opt">(</span><span class="hl kwa">sh</span> <span class="hl str">&quot;condition: &quot;</span></div>
<div class="pre"><a id="l4223" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4223" class="linenr">4223 </a>      <span class="hl opt">'(</span><span class="hl kwa">setq</span> input <span class="hl opt">(</span><span class="hl kwa">sh-feature</span> sh-test<span class="hl opt">))</span></div>
<div class="pre"><a id="l4224" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4224" class="linenr">4224 </a>      <span class="hl opt">&gt;</span> <span class="hl str">&quot;if &quot;</span> str <span class="hl str">&quot;; then&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4225" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4225" class="linenr">4225 </a>      <span class="hl opt">&gt;</span> _ <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4226" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4226" class="linenr">4226 </a>      <span class="hl opt">(</span> <span class="hl str">&quot;other condition, %s: &quot;</span></div>
<div class="pre"><a id="l4227" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4227" class="linenr">4227 </a>        <span class="hl opt">&gt;</span>  <span class="hl str">&quot;elif &quot;</span> str <span class="hl str">&quot;; then&quot;</span> <span class="hl opt">&gt;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4228" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4228" class="linenr">4228 </a>        <span class="hl opt">&gt;</span> <span class="hl esc">\n</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4229" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4229" class="linenr">4229 </a>      <span class="hl str">&quot;else&quot;</span> <span class="hl opt">&gt;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4230" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4230" class="linenr">4230 </a>      <span class="hl opt">&gt;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4231" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4231" class="linenr">4231 </a>      resume<span class="hl opt">:</span></div>
<div class="pre"><a id="l4232" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4232" class="linenr">4232 </a>      <span class="hl str">&quot;fi&quot;</span> <span class="hl opt">&gt;</span> <span class="hl esc">\n</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4233" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4233" class="linenr">4233 </a></div>
<div class="pre"><a id="l4234" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4234" class="linenr">4234 </a></div>
<div class="pre"><a id="l4235" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4235" class="linenr">4235 </a></div>
<div class="pre"><a id="l4236" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4236" class="linenr">4236 </a><span class="hl opt">(</span><span class="hl kwa">define-skeleton</span> sh-repeat</div>
<div class="pre"><a id="l4237" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4237" class="linenr">4237 </a>  <span class="hl str">&quot;Insert a repeat loop definition.  See `sh-feature'.&quot;</span></div>
<div class="pre"><a id="l4238" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4238" class="linenr">4238 </a>  <span class="hl opt">(</span><span class="hl kwa">es</span> nil</div>
<div class="pre"><a id="l4239" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4239" class="linenr">4239 </a>      <span class="hl opt">&gt;</span> <span class="hl str">&quot;forever {&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4240" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4240" class="linenr">4240 </a>      <span class="hl opt">&gt;</span> _ <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4241" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4241" class="linenr">4241 </a>      ?\<span class="hl opt">} &gt;</span> <span class="hl esc">\n</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4242" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4242" class="linenr">4242 </a>  <span class="hl opt">(</span><span class="hl kwa">zsh</span> <span class="hl str">&quot;factor: &quot;</span></div>
<div class="pre"><a id="l4243" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4243" class="linenr">4243 </a>       <span class="hl opt">&gt;</span> <span class="hl str">&quot;repeat &quot;</span> str <span class="hl str">&quot;; do&quot;</span> <span class="hl opt">&gt;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4244" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4244" class="linenr">4244 </a>       <span class="hl opt">&gt;</span>  <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4245" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4245" class="linenr">4245 </a>       <span class="hl str">&quot;done&quot;</span> <span class="hl opt">&gt;</span> <span class="hl esc">\n</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4246" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4246" class="linenr">4246 </a></div>
<div class="pre"><a id="l4247" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4247" class="linenr">4247 </a><span class="hl slc">;;;(put 'sh-repeat 'menu-enable '(sh-feature sh-repeat))</span></div>
<div class="pre"><a id="l4248" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4248" class="linenr">4248 </a></div>
<div class="pre"><a id="l4249" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4249" class="linenr">4249 </a></div>
<div class="pre"><a id="l4250" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4250" class="linenr">4250 </a></div>
<div class="pre"><a id="l4251" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4251" class="linenr">4251 </a><span class="hl opt">(</span><span class="hl kwa">define-skeleton</span> sh-select</div>
<div class="pre"><a id="l4252" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4252" class="linenr">4252 </a>  <span class="hl str">&quot;Insert a select statement.  See `sh-feature'.&quot;</span></div>
<div class="pre"><a id="l4253" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4253" class="linenr">4253 </a>  <span class="hl opt">(</span><span class="hl kwa">ksh88</span> <span class="hl str">&quot;Index variable: &quot;</span></div>
<div class="pre"><a id="l4254" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4254" class="linenr">4254 </a>         <span class="hl opt">&gt;</span> <span class="hl str">&quot;select &quot;</span> str <span class="hl str">&quot; in &quot;</span> _ <span class="hl str">&quot;; do&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4255" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4255" class="linenr">4255 </a>         <span class="hl opt">&gt;</span> ?$ str <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4256" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4256" class="linenr">4256 </a>         <span class="hl str">&quot;done&quot;</span> <span class="hl opt">&gt;</span> <span class="hl esc">\n</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4257" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4257" class="linenr">4257 </a>  <span class="hl opt">(</span><span class="hl kwa">bash</span> sh-append ksh88<span class="hl opt">))</span></div>
<div class="pre"><a id="l4258" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4258" class="linenr">4258 </a><span class="hl slc">;;;(put 'sh-select 'menu-enable '(sh-feature sh-select))</span></div>
<div class="pre"><a id="l4259" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4259" class="linenr">4259 </a></div>
<div class="pre"><a id="l4260" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4260" class="linenr">4260 </a></div>
<div class="pre"><a id="l4261" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4261" class="linenr">4261 </a></div>
<div class="pre"><a id="l4262" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4262" class="linenr">4262 </a><span class="hl opt">(</span><span class="hl kwa">define-skeleton</span> sh-tmp-file</div>
<div class="pre"><a id="l4263" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4263" class="linenr">4263 </a>  <span class="hl str">&quot;Insert code to setup temporary file handling.  See `sh-feature'.&quot;</span></div>
<div class="pre"><a id="l4264" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4264" class="linenr">4264 </a>  <span class="hl opt">(</span><span class="hl kwa">bash</span> sh-append ksh88<span class="hl opt">)</span></div>
<div class="pre"><a id="l4265" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4265" class="linenr">4265 </a>  <span class="hl opt">(</span><span class="hl kwa">csh</span> <span class="hl opt">(</span><span class="hl kwa">file-name-nondirectory</span> <span class="hl opt">(</span><span class="hl kwa">buffer-file-name</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4266" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4266" class="linenr">4266 </a>       <span class="hl str">&quot;set tmp = `mktemp -t &quot;</span> str <span class="hl str">&quot;.XXXXXX`&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4267" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4267" class="linenr">4267 </a>       <span class="hl str">&quot;onintr exit&quot;</span> <span class="hl esc">\n</span> _</div>
<div class="pre"><a id="l4268" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4268" class="linenr">4268 </a>       <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-max</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4269" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4269" class="linenr">4269 </a>            <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">bolp</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4270" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4270" class="linenr">4270 </a>            ?<span class="hl esc">\n</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4271" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4271" class="linenr">4271 </a>       <span class="hl str">&quot;exit:</span><span class="hl esc">\n</span><span class="hl str">&quot;</span></div>
<div class="pre"><a id="l4272" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4272" class="linenr">4272 </a>       <span class="hl str">&quot;rm $tmp* &gt;&amp;/dev/null&quot;</span> <span class="hl opt">&gt;</span> <span class="hl esc">\n</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4273" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4273" class="linenr">4273 </a>  <span class="hl opt">(</span><span class="hl kwa">es</span> <span class="hl opt">(</span><span class="hl kwa">file-name-nondirectory</span> <span class="hl opt">(</span><span class="hl kwa">buffer-file-name</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4274" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4274" class="linenr">4274 </a>      <span class="hl opt">&gt;</span> <span class="hl str">&quot;local( signals = $signals sighup sigint;&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4275" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4275" class="linenr">4275 </a>      <span class="hl opt">&gt;</span> <span class="hl str">&quot;tmp = `{ mktemp -t &quot;</span> str <span class="hl str">&quot;.XXXXXX } ) {&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4276" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4276" class="linenr">4276 </a>      <span class="hl opt">&gt;</span> <span class="hl str">&quot;catch &#64; e {&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4277" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4277" class="linenr">4277 </a>      <span class="hl opt">&gt;</span> <span class="hl str">&quot;rm $tmp^* &gt;[2]/dev/null&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4278" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4278" class="linenr">4278 </a>      <span class="hl str">&quot;throw $e&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4279" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4279" class="linenr">4279 </a>      <span class="hl str">&quot;} {&quot;</span> <span class="hl opt">&gt;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4280" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4280" class="linenr">4280 </a>      _ <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4281" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4281" class="linenr">4281 </a>      ?\<span class="hl opt">} &gt;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4282" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4282" class="linenr">4282 </a>      ?\<span class="hl opt">} &gt;</span> <span class="hl esc">\n</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4283" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4283" class="linenr">4283 </a>  <span class="hl opt">(</span><span class="hl kwa">ksh88</span> sh-modify sh</div>
<div class="pre"><a id="l4284" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4284" class="linenr">4284 </a>         <span class="hl num">7</span> <span class="hl str">&quot;EXIT&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4285" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4285" class="linenr">4285 </a>  <span class="hl opt">(</span><span class="hl kwa">rc</span> <span class="hl opt">(</span><span class="hl kwa">file-name-nondirectory</span> <span class="hl opt">(</span><span class="hl kwa">buffer-file-name</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4286" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4286" class="linenr">4286 </a>      <span class="hl opt">&gt;</span> <span class="hl str">&quot;tmp = `{ mktemp -t &quot;</span> str <span class="hl str">&quot;.XXXXXX }&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4287" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4287" class="linenr">4287 </a>      <span class="hl str">&quot;fn sigexit { rm $tmp^* &gt;[2]/dev/null }&quot;</span> <span class="hl esc">\n</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4288" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4288" class="linenr">4288 </a>  <span class="hl opt">(</span><span class="hl kwa">sh</span> <span class="hl opt">(</span><span class="hl kwa">file-name-nondirectory</span> <span class="hl opt">(</span><span class="hl kwa">buffer-file-name</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4289" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4289" class="linenr">4289 </a>      <span class="hl opt">&gt;</span> <span class="hl str">&quot;TMP=`mktemp -t &quot;</span> str <span class="hl str">&quot;.XXXXXX`&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4290" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4290" class="linenr">4290 </a>      <span class="hl str">&quot;trap</span> <span class="hl esc">\&quot;</span><span class="hl str">rm $TMP* 2&gt;/dev/null</span><span class="hl esc">\&quot;</span> <span class="hl str">&quot;</span> ?<span class="hl num">0</span> <span class="hl esc">\n</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4291" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4291" class="linenr">4291 </a></div>
<div class="pre"><a id="l4292" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4292" class="linenr">4292 </a></div>
<div class="pre"><a id="l4293" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4293" class="linenr">4293 </a></div>
<div class="pre"><a id="l4294" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4294" class="linenr">4294 </a><span class="hl opt">(</span><span class="hl kwa">define-skeleton</span> sh-until</div>
<div class="pre"><a id="l4295" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4295" class="linenr">4295 </a>  <span class="hl str">&quot;Insert an until loop.  See `sh-feature'.&quot;</span></div>
<div class="pre"><a id="l4296" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4296" class="linenr">4296 </a>  <span class="hl opt">(</span><span class="hl kwa">sh</span> <span class="hl str">&quot;condition: &quot;</span></div>
<div class="pre"><a id="l4297" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4297" class="linenr">4297 </a>      <span class="hl opt">'(</span><span class="hl kwa">setq</span> input <span class="hl opt">(</span><span class="hl kwa">sh-feature</span> sh-test<span class="hl opt">))</span></div>
<div class="pre"><a id="l4298" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4298" class="linenr">4298 </a>      <span class="hl opt">&gt;</span> <span class="hl str">&quot;until &quot;</span> str <span class="hl str">&quot;; do&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4299" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4299" class="linenr">4299 </a>      <span class="hl opt">&gt;</span> _ <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4300" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4300" class="linenr">4300 </a>      <span class="hl str">&quot;done&quot;</span> <span class="hl opt">&gt;</span> <span class="hl esc">\n</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4301" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4301" class="linenr">4301 </a><span class="hl slc">;;;(put 'sh-until 'menu-enable '(sh-feature sh-until))</span></div>
<div class="pre"><a id="l4302" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4302" class="linenr">4302 </a></div>
<div class="pre"><a id="l4303" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4303" class="linenr">4303 </a></div>
<div class="pre"><a id="l4304" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4304" class="linenr">4304 </a></div>
<div class="pre"><a id="l4305" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4305" class="linenr">4305 </a><span class="hl opt">(</span><span class="hl kwa">define-skeleton</span> sh-while</div>
<div class="pre"><a id="l4306" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4306" class="linenr">4306 </a>  <span class="hl str">&quot;Insert a while loop.  See `sh-feature'.&quot;</span></div>
<div class="pre"><a id="l4307" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4307" class="linenr">4307 </a>  <span class="hl opt">(</span><span class="hl kwa">csh</span> sh-modify sh</div>
<div class="pre"><a id="l4308" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4308" class="linenr">4308 </a>       <span class="hl num">2</span> <span class="hl str">&quot;&quot;</span></div>
<div class="pre"><a id="l4309" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4309" class="linenr">4309 </a>       <span class="hl num">3</span> <span class="hl str">&quot;while( &quot;</span></div>
<div class="pre"><a id="l4310" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4310" class="linenr">4310 </a>       <span class="hl num">5</span> <span class="hl str">&quot; )&quot;</span></div>
<div class="pre"><a id="l4311" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4311" class="linenr">4311 </a>       <span class="hl num">10</span> <span class="hl opt">'&lt;</span></div>
<div class="pre"><a id="l4312" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4312" class="linenr">4312 </a>       <span class="hl num">11</span> <span class="hl str">&quot;end&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4313" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4313" class="linenr">4313 </a>  <span class="hl opt">(</span><span class="hl kwa">es</span> sh-modify sh</div>
<div class="pre"><a id="l4314" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4314" class="linenr">4314 </a>      <span class="hl num">3</span> <span class="hl str">&quot;while { &quot;</span></div>
<div class="pre"><a id="l4315" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4315" class="linenr">4315 </a>      <span class="hl num">5</span> <span class="hl str">&quot; } {&quot;</span></div>
<div class="pre"><a id="l4316" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4316" class="linenr">4316 </a>      <span class="hl num">10</span> ?\<span class="hl opt">} )</span></div>
<div class="pre"><a id="l4317" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4317" class="linenr">4317 </a>  <span class="hl opt">(</span><span class="hl kwa">rc</span> sh-modify sh</div>
<div class="pre"><a id="l4318" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4318" class="linenr">4318 </a>      <span class="hl num">3</span> <span class="hl str">&quot;while( &quot;</span></div>
<div class="pre"><a id="l4319" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4319" class="linenr">4319 </a>      <span class="hl num">5</span> <span class="hl str">&quot; ) {&quot;</span></div>
<div class="pre"><a id="l4320" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4320" class="linenr">4320 </a>      <span class="hl num">10</span> ?\<span class="hl opt">} )</span></div>
<div class="pre"><a id="l4321" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4321" class="linenr">4321 </a>  <span class="hl opt">(</span><span class="hl kwa">sh</span> <span class="hl str">&quot;condition: &quot;</span></div>
<div class="pre"><a id="l4322" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4322" class="linenr">4322 </a>      <span class="hl opt">'(</span><span class="hl kwa">setq</span> input <span class="hl opt">(</span><span class="hl kwa">sh-feature</span> sh-test<span class="hl opt">))</span></div>
<div class="pre"><a id="l4323" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4323" class="linenr">4323 </a>      <span class="hl opt">&gt;</span> <span class="hl str">&quot;while &quot;</span> str <span class="hl str">&quot;; do&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4324" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4324" class="linenr">4324 </a>      <span class="hl opt">&gt;</span> _ <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4325" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4325" class="linenr">4325 </a>      <span class="hl str">&quot;done&quot;</span> <span class="hl opt">&gt;</span> <span class="hl esc">\n</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4326" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4326" class="linenr">4326 </a></div>
<div class="pre"><a id="l4327" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4327" class="linenr">4327 </a></div>
<div class="pre"><a id="l4328" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4328" class="linenr">4328 </a></div>
<div class="pre"><a id="l4329" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4329" class="linenr">4329 </a><span class="hl opt">(</span><span class="hl kwa">define-skeleton</span> sh-while-getopts</div>
<div class="pre"><a id="l4330" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4330" class="linenr">4330 </a>  <span class="hl str">&quot;Insert a while getopts loop.  See `sh-feature'.</span></div>
<div class="pre"><a id="l4331" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4331" class="linenr">4331 </a><span class="hl str">Prompts for an options string which consists of letters for each recognized</span></div>
<div class="pre"><a id="l4332" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4332" class="linenr">4332 </a><span class="hl str">option followed by a colon `:' if the option accepts an argument.&quot;</span></div>
<div class="pre"><a id="l4333" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4333" class="linenr">4333 </a>  <span class="hl opt">(</span><span class="hl kwa">bash</span> sh-modify sh</div>
<div class="pre"><a id="l4334" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4334" class="linenr">4334 </a>        <span class="hl num">18</span> <span class="hl str">&quot;${0##*/}&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4335" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4335" class="linenr">4335 </a>  <span class="hl opt">(</span><span class="hl kwa">csh</span> nil</div>
<div class="pre"><a id="l4336" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4336" class="linenr">4336 </a>       <span class="hl str">&quot;while( 1 )&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4337" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4337" class="linenr">4337 </a>       <span class="hl opt">&gt;</span> <span class="hl str">&quot;switch(</span> <span class="hl esc">\&quot;</span><span class="hl str">$1</span><span class="hl esc">\&quot;</span> <span class="hl str">)&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4338" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4338" class="linenr">4338 </a>       <span class="hl opt">'(</span><span class="hl kwa">setq</span> input <span class="hl opt">'(</span><span class="hl str">&quot;- x&quot;</span> . <span class="hl num">2</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4339" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4339" class="linenr">4339 </a>       <span class="hl opt">&gt; &gt;</span></div>
<div class="pre"><a id="l4340" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4340" class="linenr">4340 </a>       <span class="hl opt">(</span> <span class="hl str">&quot;option, %s: &quot;</span></div>
<div class="pre"><a id="l4341" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4341" class="linenr">4341 </a>         <span class="hl opt">&lt;</span> <span class="hl str">&quot;case &quot;</span> <span class="hl opt">'(</span><span class="hl kwa">eval</span> str<span class="hl opt">)</span></div>
<div class="pre"><a id="l4342" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4342" class="linenr">4342 </a>         <span class="hl opt">'(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">string-match</span> <span class="hl str">&quot; +&quot;</span> str<span class="hl opt">)</span></div>
<div class="pre"><a id="l4343" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4343" class="linenr">4343 </a>              <span class="hl opt">(</span><span class="hl kwa">setq</span> v1 <span class="hl opt">(</span><span class="hl kwa">substring</span> str <span class="hl opt">(</span><span class="hl kwa">match-end</span> <span class="hl num">0</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4344" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4344" class="linenr">4344 </a>                    str <span class="hl opt">(</span><span class="hl kwa">substring</span> str <span class="hl num">0</span> <span class="hl opt">(</span><span class="hl kwa">match-beginning</span> <span class="hl num">0</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l4345" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4345" class="linenr">4345 </a>            <span class="hl opt">(</span><span class="hl kwa">setq</span> v1 nil<span class="hl opt">))</span></div>
<div class="pre"><a id="l4346" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4346" class="linenr">4346 </a>         str ?<span class="hl opt">:</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4347" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4347" class="linenr">4347 </a>         <span class="hl opt">&gt;</span> <span class="hl str">&quot;set &quot;</span> v1 <span class="hl opt">&amp;</span> <span class="hl str">&quot; = $2&quot;</span> | -<span class="hl num">4</span> <span class="hl opt">&amp;</span> _ <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4348" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4348" class="linenr">4348 </a>         <span class="hl opt">(</span><span class="hl kwa">if</span> v1 <span class="hl str">&quot;shift&quot;</span><span class="hl opt">) &amp;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4349" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4349" class="linenr">4349 </a>         <span class="hl str">&quot;breaksw&quot;</span> <span class="hl esc">\n</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4350" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4350" class="linenr">4350 </a>       <span class="hl opt">&lt;</span> <span class="hl str">&quot;case --:&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4351" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4351" class="linenr">4351 </a>       <span class="hl opt">&gt;</span> <span class="hl str">&quot;shift&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4352" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4352" class="linenr">4352 </a>       <span class="hl opt">&lt;</span> <span class="hl str">&quot;default:&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4353" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4353" class="linenr">4353 </a>       <span class="hl opt">&gt;</span> <span class="hl str">&quot;break&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4354" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4354" class="linenr">4354 </a>       resume<span class="hl opt">:</span></div>
<div class="pre"><a id="l4355" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4355" class="linenr">4355 </a>       <span class="hl opt">&lt; &lt;</span> <span class="hl str">&quot;endsw&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4356" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4356" class="linenr">4356 </a>       <span class="hl str">&quot;shift&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4357" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4357" class="linenr">4357 </a>       <span class="hl opt">&lt;</span> <span class="hl str">&quot;end&quot;</span> <span class="hl esc">\n</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4358" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4358" class="linenr">4358 </a>  <span class="hl opt">(</span><span class="hl kwa">ksh88</span> sh-modify sh</div>
<div class="pre"><a id="l4359" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4359" class="linenr">4359 </a>         <span class="hl num">16</span> <span class="hl str">&quot;print&quot;</span></div>
<div class="pre"><a id="l4360" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4360" class="linenr">4360 </a>         <span class="hl num">18</span> <span class="hl str">&quot;${0##*/}&quot;</span></div>
<div class="pre"><a id="l4361" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4361" class="linenr">4361 </a>         <span class="hl num">37</span> <span class="hl str">&quot;OPTIND-1&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4362" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4362" class="linenr">4362 </a>  <span class="hl opt">(</span><span class="hl kwa">posix</span> sh-modify sh</div>
<div class="pre"><a id="l4363" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4363" class="linenr">4363 </a>         <span class="hl num">18</span> <span class="hl str">&quot;$(basename $0)&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4364" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4364" class="linenr">4364 </a>  <span class="hl opt">(</span><span class="hl kwa">sh</span> <span class="hl str">&quot;optstring: &quot;</span></div>
<div class="pre"><a id="l4365" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4365" class="linenr">4365 </a>      <span class="hl opt">&gt;</span> <span class="hl str">&quot;while getopts :&quot;</span> str <span class="hl str">&quot; OPT; do&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4366" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4366" class="linenr">4366 </a>      <span class="hl opt">&gt;</span> <span class="hl str">&quot;case $OPT in&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4367" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4367" class="linenr">4367 </a>      <span class="hl opt">'(</span><span class="hl kwa">setq</span> v1 <span class="hl opt">(</span><span class="hl kwa">append</span> <span class="hl opt">(</span><span class="hl kwa">vconcat</span> str<span class="hl opt">)</span> nil<span class="hl opt">))</span></div>
<div class="pre"><a id="l4368" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4368" class="linenr">4368 </a>      <span class="hl opt">( (</span><span class="hl kwa">prog1</span> <span class="hl opt">(</span><span class="hl kwa">if</span> v1 <span class="hl opt">(</span><span class="hl kwa">char-to-string</span> <span class="hl opt">(</span><span class="hl kwa">car</span> v1<span class="hl opt">)))</span></div>
<div class="pre"><a id="l4369" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4369" class="linenr">4369 </a>          <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">1</span> v1<span class="hl opt">)</span> ?<span class="hl opt">:)</span></div>
<div class="pre"><a id="l4370" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4370" class="linenr">4370 </a>              <span class="hl opt">(</span><span class="hl kwa">setq</span> v1 <span class="hl opt">(</span><span class="hl kwa">nthcdr</span> <span class="hl num">2</span> v1<span class="hl opt">)</span></div>
<div class="pre"><a id="l4371" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4371" class="linenr">4371 </a>                    v2 <span class="hl str">&quot;</span><span class="hl esc">\&quot;</span><span class="hl str">$OPTARG</span><span class="hl esc">\&quot;</span><span class="hl str">&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4372" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4372" class="linenr">4372 </a>            <span class="hl opt">(</span><span class="hl kwa">setq</span> v1 <span class="hl opt">(</span><span class="hl kwa">cdr</span> v1<span class="hl opt">)</span></div>
<div class="pre"><a id="l4373" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4373" class="linenr">4373 </a>                  v2 nil<span class="hl opt">)))</span></div>
<div class="pre"><a id="l4374" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4374" class="linenr">4374 </a>        <span class="hl opt">&gt;</span> str <span class="hl str">&quot;|+&quot;</span> str sh-non-closing-paren <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4375" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4375" class="linenr">4375 </a>        <span class="hl opt">&gt;</span> _ v2 <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4376" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4376" class="linenr">4376 </a>        <span class="hl opt">&gt;</span> <span class="hl str">&quot;;;&quot;</span> <span class="hl esc">\n</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4377" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4377" class="linenr">4377 </a>      <span class="hl opt">&gt;</span> <span class="hl str">&quot;*&quot;</span> sh-non-closing-paren <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4378" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4378" class="linenr">4378 </a>      <span class="hl opt">&gt;</span> <span class="hl str">&quot;echo&quot;</span> <span class="hl str">&quot;</span> <span class="hl esc">\&quot;</span><span class="hl str">usage: &quot;</span> <span class="hl str">&quot;`basename $0`&quot;</span></div>
<div class="pre"><a id="l4379" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4379" class="linenr">4379 </a>      <span class="hl str">&quot; [+-&quot;</span> <span class="hl opt">'(</span><span class="hl kwa">setq</span> v1 <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))</span> str</div>
<div class="pre"><a id="l4380" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4380" class="linenr">4380 </a>      <span class="hl opt">'(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l4381" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4381" class="linenr">4381 </a>         <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">search-backward</span> <span class="hl str">&quot;:&quot;</span> v1 t<span class="hl opt">)</span></div>
<div class="pre"><a id="l4382" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4382" class="linenr">4382 </a>           <span class="hl opt">(</span><span class="hl kwa">replace-match</span> <span class="hl str">&quot; ARG] [+-&quot;</span> t t<span class="hl opt">)))</span></div>
<div class="pre"><a id="l4383" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4383" class="linenr">4383 </a>      <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl opt">(</span><span class="hl kwa">preceding-char</span><span class="hl opt">)</span> ?-<span class="hl opt">)</span> -<span class="hl num">5</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4384" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4384" class="linenr">4384 </a>      <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">sequencep</span> v1<span class="hl opt">) (</span><span class="hl kwa">length</span> v1<span class="hl opt">))</span> <span class="hl str">&quot;] &quot;</span> <span class="hl str">&quot;} &quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4385" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4385" class="linenr">4385 </a>      <span class="hl str">&quot;[--] ARGS...</span><span class="hl esc">\&quot;</span><span class="hl str">&quot;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4386" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4386" class="linenr">4386 </a>      <span class="hl str">&quot;exit 2&quot;</span>  <span class="hl opt">&gt;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4387" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4387" class="linenr">4387 </a>      <span class="hl str">&quot;esac&quot;</span> <span class="hl opt">&gt;</span></div>
<div class="pre"><a id="l4388" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4388" class="linenr">4388 </a>      <span class="hl esc">\n</span> <span class="hl str">&quot;done&quot;</span></div>
<div class="pre"><a id="l4389" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4389" class="linenr">4389 </a>      <span class="hl opt">&gt;</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4390" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4390" class="linenr">4390 </a>      <span class="hl str">&quot;shift &quot;</span> <span class="hl opt">(</span><span class="hl kwa">sh-add</span> <span class="hl str">&quot;OPTIND&quot;</span> -<span class="hl num">1</span><span class="hl opt">)</span> <span class="hl esc">\n</span></div>
<div class="pre"><a id="l4391" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4391" class="linenr">4391 </a>      <span class="hl str">&quot;OPTIND=1&quot;</span> <span class="hl esc">\n</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4392" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4392" class="linenr">4392 </a></div>
<div class="pre"><a id="l4393" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4393" class="linenr">4393 </a></div>
<div class="pre"><a id="l4394" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4394" class="linenr">4394 </a></div>
<div class="pre"><a id="l4395" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4395" class="linenr">4395 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-assignment <span class="hl opt">(</span><span class="hl kwa">arg</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4396" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4396" class="linenr">4396 </a>  <span class="hl str">&quot;Remember preceding identifier for future completion and do self-insert.&quot;</span></div>
<div class="pre"><a id="l4397" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4397" class="linenr">4397 </a>  <span class="hl opt">(</span><span class="hl kwa">interactive</span> <span class="hl str">&quot;p&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4398" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4398" class="linenr">4398 </a>  <span class="hl opt">(</span><span class="hl kwa">self-insert-command</span> arg<span class="hl opt">)</span></div>
<div class="pre"><a id="l4399" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4399" class="linenr">4399 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(&lt;=</span> arg <span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4400" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4400" class="linenr">4400 </a>      <span class="hl opt">(</span><span class="hl kwa">sh-remember-variable</span></div>
<div class="pre"><a id="l4401" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4401" class="linenr">4401 </a>       <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l4402" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4402" class="linenr">4402 </a>         <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">re-search-forward</span> <span class="hl opt">(</span><span class="hl kwa">sh-feature</span> sh-assignment-regexp<span class="hl opt">)</span></div>
<div class="pre"><a id="l4403" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4403" class="linenr">4403 </a>                                <span class="hl opt">(</span><span class="hl kwa">prog1</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4404" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4404" class="linenr">4404 </a>                                  <span class="hl opt">(</span><span class="hl kwa">beginning-of-line</span> <span class="hl num">1</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4405" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4405" class="linenr">4405 </a>                                t<span class="hl opt">)</span></div>
<div class="pre"><a id="l4406" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4406" class="linenr">4406 </a>             <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">1</span><span class="hl opt">))))))</span></div>
<div class="pre"><a id="l4407" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4407" class="linenr">4407 </a></div>
<div class="pre"><a id="l4408" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4408" class="linenr">4408 </a></div>
<div class="pre"><a id="l4409" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4409" class="linenr">4409 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-maybe-here-document <span class="hl opt">(</span><span class="hl kwa">arg</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4410" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4410" class="linenr">4410 </a>  <span class="hl str">&quot;Insert self.  Without prefix, following unquoted `&lt;' inserts here document.</span></div>
<div class="pre"><a id="l4411" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4411" class="linenr">4411 </a><span class="hl str">The document is bounded by `sh-here-document-word'.&quot;</span></div>
<div class="pre"><a id="l4412" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4412" class="linenr">4412 </a>  <span class="hl opt">(</span><span class="hl kwa">declare</span> <span class="hl opt">(</span><span class="hl kwa">obsolete</span> sh-electric-here-document-mode <span class="hl str">&quot;24.3&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4413" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4413" class="linenr">4413 </a>  <span class="hl opt">(</span><span class="hl kwa">interactive</span> <span class="hl str">&quot;*P&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4414" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4414" class="linenr">4414 </a>  <span class="hl opt">(</span><span class="hl kwa">self-insert-command</span> <span class="hl opt">(</span><span class="hl kwa">prefix-numeric-value</span> arg<span class="hl opt">))</span></div>
<div class="pre"><a id="l4415" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4415" class="linenr">4415 </a>  <span class="hl opt">(</span><span class="hl kwa">or</span> arg <span class="hl opt">(</span><span class="hl kwa">sh--maybe-here-document</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l4416" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4416" class="linenr">4416 </a></div>
<div class="pre"><a id="l4417" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4417" class="linenr">4417 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh--maybe-here-document <span class="hl opt">()</span></div>
<div class="pre"><a id="l4418" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4418" class="linenr">4418 </a>  <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">looking-back</span> <span class="hl str">&quot;[^&lt;]&lt;&lt;&quot;</span> <span class="hl opt">(</span><span class="hl kwa">line-beginning-position</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l4419" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4419" class="linenr">4419 </a>      <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l4420" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4420" class="linenr">4420 </a>        <span class="hl opt">(</span><span class="hl kwa">backward-char</span> <span class="hl num">2</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4421" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4421" class="linenr">4421 </a>        <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">sh-quoted-p</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4422" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4422" class="linenr">4422 </a>            <span class="hl opt">(</span><span class="hl kwa">sh--inside-noncommand-expression</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l4423" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4423" class="linenr">4423 </a>      <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl num">8</span> <span class="hl opt">(</span><span class="hl kwa">syntax-ppss</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4424" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4424" class="linenr">4424 </a>      <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">tabs</span> <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">string-match</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">`-&quot;</span> sh-here-document-word<span class="hl opt">)</span></div>
<div class="pre"><a id="l4425" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4425" class="linenr">4425 </a>                      <span class="hl opt">(</span><span class="hl kwa">make-string</span> <span class="hl opt">(/ (</span><span class="hl kwa">current-indentation</span><span class="hl opt">)</span> tab-width<span class="hl opt">)</span> ?<span class="hl esc">\t</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4426" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4426" class="linenr">4426 </a>                    <span class="hl str">&quot;&quot;</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4427" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4427" class="linenr">4427 </a>            <span class="hl opt">(</span><span class="hl kwa">delim</span> <span class="hl opt">(</span><span class="hl kwa">replace-regexp-in-string</span> <span class="hl str">&quot;['</span><span class="hl esc">\&quot;</span><span class="hl str">]&quot;</span> <span class="hl str">&quot;&quot;</span></div>
<div class="pre"><a id="l4428" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4428" class="linenr">4428 </a>                                            sh-here-document-word<span class="hl opt">)))</span></div>
<div class="pre"><a id="l4429" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4429" class="linenr">4429 </a>        <span class="hl opt">(</span><span class="hl kwa">insert</span> sh-here-document-word<span class="hl opt">)</span></div>
<div class="pre"><a id="l4430" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4430" class="linenr">4430 </a>        <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">eolp</span><span class="hl opt">) (</span><span class="hl kwa">looking-at</span> <span class="hl str">&quot;[</span> <span class="hl esc">\t</span><span class="hl str">]&quot;</span><span class="hl opt">) (</span><span class="hl kwa">insert</span> ?\s<span class="hl opt">))</span></div>
<div class="pre"><a id="l4431" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4431" class="linenr">4431 </a>        <span class="hl opt">(</span><span class="hl kwa">end-of-line</span> <span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4432" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4432" class="linenr">4432 </a>        <span class="hl opt">(</span><span class="hl kwa">while</span></div>
<div class="pre"><a id="l4433" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4433" class="linenr">4433 </a>            <span class="hl opt">(</span><span class="hl kwa">sh-quoted-p</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4434" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4434" class="linenr">4434 </a>          <span class="hl opt">(</span><span class="hl kwa">end-of-line</span> <span class="hl num">2</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4435" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4435" class="linenr">4435 </a>        <span class="hl opt">(</span><span class="hl kwa">insert</span> ?<span class="hl esc">\n</span> tabs<span class="hl opt">)</span></div>
<div class="pre"><a id="l4436" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4436" class="linenr">4436 </a>        <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l4437" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4437" class="linenr">4437 </a>          <span class="hl opt">(</span><span class="hl kwa">insert</span> ?<span class="hl esc">\n</span> tabs <span class="hl opt">(</span><span class="hl kwa">replace-regexp-in-string</span></div>
<div class="pre"><a id="l4438" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4438" class="linenr">4438 </a>                            <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">`-?[</span> <span class="hl esc">\t</span><span class="hl str">]*&quot;</span> <span class="hl str">&quot;&quot;</span> delim<span class="hl opt">))))))</span></div>
<div class="pre"><a id="l4439" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4439" class="linenr">4439 </a></div>
<div class="pre"><a id="l4440" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4440" class="linenr">4440 </a><span class="hl opt">(</span><span class="hl kwa">define-minor-mode</span> sh-electric-here-document-mode</div>
<div class="pre"><a id="l4441" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4441" class="linenr">4441 </a>  <span class="hl str">&quot;Make &lt;&lt; insert a here document skeleton.&quot;</span></div>
<div class="pre"><a id="l4442" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4442" class="linenr">4442 </a>  nil nil nil</div>
<div class="pre"><a id="l4443" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4443" class="linenr">4443 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> sh-electric-here-document-mode</div>
<div class="pre"><a id="l4444" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4444" class="linenr">4444 </a>      <span class="hl opt">(</span><span class="hl kwa">add-hook</span> <span class="hl opt">'</span>post-self-insert-hook <span class="hl opt">#'</span>sh--maybe-here-document nil t<span class="hl opt">)</span></div>
<div class="pre"><a id="l4445" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4445" class="linenr">4445 </a>    <span class="hl opt">(</span><span class="hl kwa">remove-hook</span> <span class="hl opt">'</span>post-self-insert-hook <span class="hl opt">#'</span>sh--maybe-here-document t<span class="hl opt">)))</span></div>
<div class="pre"><a id="l4446" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4446" class="linenr">4446 </a><span class="cntrl">\f</span></div>
<div class="pre"><a id="l4447" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4447" class="linenr">4447 </a><span class="hl slc">;; various other commands</span></div>
<div class="pre"><a id="l4448" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4448" class="linenr">4448 </a></div>
<div class="pre"><a id="l4449" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4449" class="linenr">4449 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-beginning-of-command <span class="hl opt">()</span></div>
<div class="pre"><a id="l4450" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4450" class="linenr">4450 </a>  <span class="hl slc">;; FIXME: Redefine using SMIE.</span></div>
<div class="pre"><a id="l4451" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4451" class="linenr">4451 </a>  <span class="hl str">&quot;Move point to successive beginnings of commands.&quot;</span></div>
<div class="pre"><a id="l4452" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4452" class="linenr">4452 </a>  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4453" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4453" class="linenr">4453 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">re-search-backward</span> sh-beginning-of-command nil t<span class="hl opt">)</span></div>
<div class="pre"><a id="l4454" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4454" class="linenr">4454 </a>      <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">match-beginning</span> <span class="hl num">2</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l4455" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4455" class="linenr">4455 </a></div>
<div class="pre"><a id="l4456" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4456" class="linenr">4456 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-end-of-command <span class="hl opt">()</span></div>
<div class="pre"><a id="l4457" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4457" class="linenr">4457 </a>  <span class="hl slc">;; FIXME: Redefine using SMIE.</span></div>
<div class="pre"><a id="l4458" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4458" class="linenr">4458 </a>  <span class="hl str">&quot;Move point to successive ends of commands.&quot;</span></div>
<div class="pre"><a id="l4459" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4459" class="linenr">4459 </a>  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4460" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4460" class="linenr">4460 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">re-search-forward</span> sh-end-of-command nil t<span class="hl opt">)</span></div>
<div class="pre"><a id="l4461" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4461" class="linenr">4461 </a>      <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">match-end</span> <span class="hl num">1</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l4462" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4462" class="linenr">4462 </a></div>
<div class="pre"><a id="l4463" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4463" class="linenr">4463 </a><span class="hl slc">;; Backslashification.  Stolen from make-mode.el.</span></div>
<div class="pre"><a id="l4464" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4464" class="linenr">4464 </a></div>
<div class="pre"><a id="l4465" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4465" class="linenr">4465 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-backslash-region <span class="hl opt">(</span><span class="hl kwa">from</span> to delete-flag<span class="hl opt">)</span></div>
<div class="pre"><a id="l4466" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4466" class="linenr">4466 </a>  <span class="hl str">&quot;Insert, align, or delete end-of-line backslashes on the lines in the region.</span></div>
<div class="pre"><a id="l4467" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4467" class="linenr">4467 </a><span class="hl str">With no argument, inserts backslashes and aligns existing backslashes.</span></div>
<div class="pre"><a id="l4468" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4468" class="linenr">4468 </a><span class="hl str">With an argument, deletes the backslashes.</span></div>
<div class="pre"><a id="l4469" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4469" class="linenr">4469 </a><span class="hl str"></span></div>
<div class="pre"><a id="l4470" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4470" class="linenr">4470 </a><span class="hl str">This function does not modify the last line of the region if the region ends</span></div>
<div class="pre"><a id="l4471" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4471" class="linenr">4471 </a><span class="hl str">right at the start of the following line; it does not modify blank lines</span></div>
<div class="pre"><a id="l4472" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4472" class="linenr">4472 </a><span class="hl str">at the start of the region.  So you can put the region around an entire</span></div>
<div class="pre"><a id="l4473" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4473" class="linenr">4473 </a><span class="hl str">shell command and conveniently use this command.&quot;</span></div>
<div class="pre"><a id="l4474" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4474" class="linenr">4474 </a>  <span class="hl opt">(</span><span class="hl kwa">interactive</span> <span class="hl str">&quot;r</span><span class="hl esc">\n</span><span class="hl str">P&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4475" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4475" class="linenr">4475 </a>  <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l4476" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4476" class="linenr">4476 </a>    <span class="hl opt">(</span><span class="hl kwa">goto-char</span> from<span class="hl opt">)</span></div>
<div class="pre"><a id="l4477" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4477" class="linenr">4477 </a>    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">column</span> sh-backslash-column<span class="hl opt">)</span></div>
<div class="pre"><a id="l4478" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4478" class="linenr">4478 </a>          <span class="hl opt">(</span><span class="hl kwa">endmark</span> <span class="hl opt">(</span><span class="hl kwa">make-marker</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l4479" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4479" class="linenr">4479 </a>      <span class="hl opt">(</span><span class="hl kwa">move-marker</span> endmark to<span class="hl opt">)</span></div>
<div class="pre"><a id="l4480" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4480" class="linenr">4480 </a>      <span class="hl slc">;; Compute the smallest column number past the ends of all the lines.</span></div>
<div class="pre"><a id="l4481" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4481" class="linenr">4481 </a>      <span class="hl opt">(</span><span class="hl kwa">if</span> sh-backslash-align</div>
<div class="pre"><a id="l4482" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4482" class="linenr">4482 </a>          <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l4483" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4483" class="linenr">4483 </a>            <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">not</span> delete-flag<span class="hl opt">)</span></div>
<div class="pre"><a id="l4484" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4484" class="linenr">4484 </a>                <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(&lt; (</span><span class="hl kwa">point</span><span class="hl opt">)</span> to<span class="hl opt">)</span></div>
<div class="pre"><a id="l4485" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4485" class="linenr">4485 </a>                  <span class="hl opt">(</span><span class="hl kwa">end-of-line</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4486" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4486" class="linenr">4486 </a>                  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(= (</span><span class="hl kwa">preceding-char</span><span class="hl opt">)</span> ?<span class="hl esc">\\</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4487" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4487" class="linenr">4487 </a>                      <span class="hl opt">(</span><span class="hl kwa">progn</span> <span class="hl opt">(</span><span class="hl kwa">forward-char</span> -<span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4488" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4488" class="linenr">4488 </a>                             <span class="hl opt">(</span><span class="hl kwa">skip-chars-backward</span> <span class="hl str">&quot;</span> <span class="hl esc">\t</span><span class="hl str">&quot;</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l4489" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4489" class="linenr">4489 </a>                  <span class="hl opt">(</span><span class="hl kwa">setq</span> column <span class="hl opt">(</span><span class="hl kwa">max</span> column <span class="hl opt">(</span><span class="hl kwa">1</span><span class="hl opt">+ (</span><span class="hl kwa">current-column</span><span class="hl opt">))))</span></div>
<div class="pre"><a id="l4490" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4490" class="linenr">4490 </a>                  <span class="hl opt">(</span><span class="hl kwa">forward-line</span> <span class="hl num">1</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l4491" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4491" class="linenr">4491 </a>            <span class="hl slc">;; Adjust upward to a tab column, if that doesn't push</span></div>
<div class="pre"><a id="l4492" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4492" class="linenr">4492 </a>            <span class="hl slc">;; past the margin.</span></div>
<div class="pre"><a id="l4493" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4493" class="linenr">4493 </a>            <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(&gt; (</span>% column tab-width<span class="hl opt">)</span> <span class="hl num">0</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4494" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4494" class="linenr">4494 </a>                <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">adjusted</span> <span class="hl opt">(* (/ (+</span> column tab-width -<span class="hl num">1</span><span class="hl opt">)</span> tab-width<span class="hl opt">)</span></div>
<div class="pre"><a id="l4495" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4495" class="linenr">4495 </a>                                   tab-width<span class="hl opt">)))</span></div>
<div class="pre"><a id="l4496" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4496" class="linenr">4496 </a>                  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(&lt;</span> adjusted <span class="hl opt">(</span><span class="hl kwa">window-width</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4497" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4497" class="linenr">4497 </a>                      <span class="hl opt">(</span><span class="hl kwa">setq</span> column adjusted<span class="hl opt">))))))</span></div>
<div class="pre"><a id="l4498" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4498" class="linenr">4498 </a>      <span class="hl slc">;; Don't modify blank lines at start of region.</span></div>
<div class="pre"><a id="l4499" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4499" class="linenr">4499 </a>      <span class="hl opt">(</span><span class="hl kwa">goto-char</span> from<span class="hl opt">)</span></div>
<div class="pre"><a id="l4500" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4500" class="linenr">4500 </a>      <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(&lt; (</span><span class="hl kwa">point</span><span class="hl opt">)</span> endmark<span class="hl opt">) (</span><span class="hl kwa">eolp</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4501" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4501" class="linenr">4501 </a>        <span class="hl opt">(</span><span class="hl kwa">forward-line</span> <span class="hl num">1</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4502" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4502" class="linenr">4502 </a>      <span class="hl slc">;; Add or remove backslashes on all the lines.</span></div>
<div class="pre"><a id="l4503" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4503" class="linenr">4503 </a>      <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(&lt; (</span><span class="hl kwa">point</span><span class="hl opt">)</span> endmark<span class="hl opt">)</span></div>
<div class="pre"><a id="l4504" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4504" class="linenr">4504 </a>                  <span class="hl slc">;; Don't backslashify the last line</span></div>
<div class="pre"><a id="l4505" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4505" class="linenr">4505 </a>                  <span class="hl slc">;; if the region ends right at the start of the next line.</span></div>
<div class="pre"><a id="l4506" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4506" class="linenr">4506 </a>                  <span class="hl opt">(</span><span class="hl kwa">save-excursion</span></div>
<div class="pre"><a id="l4507" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4507" class="linenr">4507 </a>                    <span class="hl opt">(</span><span class="hl kwa">forward-line</span> <span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4508" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4508" class="linenr">4508 </a>                    <span class="hl opt">(&lt; (</span><span class="hl kwa">point</span><span class="hl opt">)</span> endmark<span class="hl opt">)))</span></div>
<div class="pre"><a id="l4509" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4509" class="linenr">4509 </a>        <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">not</span> delete-flag<span class="hl opt">)</span></div>
<div class="pre"><a id="l4510" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4510" class="linenr">4510 </a>            <span class="hl opt">(</span><span class="hl kwa">sh-append-backslash</span> column<span class="hl opt">)</span></div>
<div class="pre"><a id="l4511" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4511" class="linenr">4511 </a>          <span class="hl opt">(</span><span class="hl kwa">sh-delete-backslash</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4512" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4512" class="linenr">4512 </a>        <span class="hl opt">(</span><span class="hl kwa">forward-line</span> <span class="hl num">1</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4513" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4513" class="linenr">4513 </a>      <span class="hl opt">(</span><span class="hl kwa">move-marker</span> endmark nil<span class="hl opt">))))</span></div>
<div class="pre"><a id="l4514" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4514" class="linenr">4514 </a></div>
<div class="pre"><a id="l4515" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4515" class="linenr">4515 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-append-backslash <span class="hl opt">(</span><span class="hl kwa">column</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4516" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4516" class="linenr">4516 </a>  <span class="hl opt">(</span><span class="hl kwa">end-of-line</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4517" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4517" class="linenr">4517 </a>  <span class="hl slc">;; Note that &quot;\\\\&quot; is needed to get one backslash.</span></div>
<div class="pre"><a id="l4518" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4518" class="linenr">4518 </a>  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(= (</span><span class="hl kwa">preceding-char</span><span class="hl opt">)</span> ?<span class="hl esc">\\</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4519" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4519" class="linenr">4519 </a>      <span class="hl opt">(</span><span class="hl kwa">progn</span> <span class="hl opt">(</span><span class="hl kwa">forward-char</span> -<span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4520" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4520" class="linenr">4520 </a>             <span class="hl opt">(</span><span class="hl kwa">delete-horizontal-space</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4521" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4521" class="linenr">4521 </a>             <span class="hl opt">(</span><span class="hl kwa">indent-to</span> column <span class="hl opt">(</span><span class="hl kwa">if</span> sh-backslash-align nil <span class="hl num">1</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l4522" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4522" class="linenr">4522 </a>    <span class="hl opt">(</span><span class="hl kwa">indent-to</span> column <span class="hl opt">(</span><span class="hl kwa">if</span> sh-backslash-align nil <span class="hl num">1</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4523" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4523" class="linenr">4523 </a>    <span class="hl opt">(</span><span class="hl kwa">insert</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">&quot;</span><span class="hl opt">)))</span></div>
<div class="pre"><a id="l4524" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4524" class="linenr">4524 </a></div>
<div class="pre"><a id="l4525" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4525" class="linenr">4525 </a><span class="hl opt">(</span><span class="hl kwa">defun</span> sh-delete-backslash <span class="hl opt">()</span></div>
<div class="pre"><a id="l4526" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4526" class="linenr">4526 </a>  <span class="hl opt">(</span><span class="hl kwa">end-of-line</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4527" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4527" class="linenr">4527 </a>  <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">bolp</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4528" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4528" class="linenr">4528 </a>      <span class="hl opt">(</span><span class="hl kwa">progn</span></div>
<div class="pre"><a id="l4529" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4529" class="linenr">4529 </a>        <span class="hl opt">(</span><span class="hl kwa">forward-char</span> -<span class="hl num">1</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4530" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4530" class="linenr">4530 </a>        <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">looking-at</span> <span class="hl str">&quot;</span><span class="hl esc">\\\\</span><span class="hl str">&quot;</span><span class="hl opt">)</span></div>
<div class="pre"><a id="l4531" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4531" class="linenr">4531 </a>            <span class="hl opt">(</span><span class="hl kwa">delete-region</span> <span class="hl opt">(</span><span class="hl kwa">1</span><span class="hl opt">+ (</span><span class="hl kwa">point</span><span class="hl opt">))</span></div>
<div class="pre"><a id="l4532" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4532" class="linenr">4532 </a>                           <span class="hl opt">(</span><span class="hl kwa">progn</span> <span class="hl opt">(</span><span class="hl kwa">skip-chars-backward</span> <span class="hl str">&quot;</span> <span class="hl esc">\t</span><span class="hl str">&quot;</span><span class="hl opt">) (</span><span class="hl kwa">point</span><span class="hl opt">)))))))</span></div>
<div class="pre"><a id="l4533" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4533" class="linenr">4533 </a></div>
<div class="pre"><a id="l4534" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4534" class="linenr">4534 </a><span class="hl opt">(</span><span class="hl kwa">provide</span> <span class="hl opt">'</span>sh-script<span class="hl opt">)</span></div>
<div class="pre"><a id="l4535" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4535" class="linenr">4535 </a></div>
<div class="pre"><a id="l4536" href="/emacs.git/blob/HEAD:/lisp/progmodes/sh-script.el#l4536" class="linenr">4536 </a><span class="hl slc">;;; sh-script.el ends here</span></div>
</div><div class="page_footer">
<div class="page_footer_text">Emacs repository mirror</div>
<a class="rss_logo" title="history of lisp/progmodes/sh-script.el RSS feed" href="/emacs.git/rss?f=lisp/progmodes/sh-script.el">RSS</a>
<a class="rss_logo" title="history of lisp/progmodes/sh-script.el Atom feed" href="/emacs.git/atom?f=lisp/progmodes/sh-script.el">Atom</a>
</div>
<script type="text/javascript" src="/gitweb.js"></script>
<script type="text/javascript">
window.onload = function () {
	fixBlameLinks();
	var tz_cookie = { name: 'gitweb_tz', expires: 14, path: '/' };
	onloadTZSetup('local', tz_cookie, 'datetime');
};
</script>
</span></body>
</html>