;; Object elpy/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "elpy/"
  :tables
  (list
    (semanticdb-table "server.py"
      :major-mode 'python-mode
      :tags 
        '( ("\"\"\"Method implementations for the Elpy JSON-RPC server.

This file implements the methods exported by the JSON-RPC server. It
handles backend selection and passes methods on to the selected
backend.

\"\"\"" code nil nil [1 204])
            ("io" include nil nil [205 214])
            ("os" include nil nil [215 224])
            ("pydoc" include nil nil [225 237])
            ("elpy.pydocutils" include nil nil [239 288])
            ("elpy.rpc" include nil nil [289 330])
            ("elpy.impmagic" include nil nil [331 368])
            ("try" code nil nil [371 472])
            ("try" code nil nil [473 574])
            ("ElpyRPCServer" type
               (:documentation "The RPC server for elpy.

    See the rpc_* methods for exported method documentation.

    "
                :superclasses ("JSONRPCServer")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [764 816])
                            ("self" variable nil (reparse-symbol indented_block_body) [825 844])
                            ("self" variable nil (reparse-symbol indented_block_body) [853 886])
                            ("self" variable nil (reparse-symbol indented_block_body) [895 919]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [732 736])
                            ("args" variable nil (reparse-symbol function_parameters) [738 743])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [745 753]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [719 920])
                    ("_call_backend" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [943 947])
                            ("method" variable nil (reparse-symbol function_parameters) [949 955])
                            ("default" variable nil (reparse-symbol function_parameters) [957 964])
                            ("args" variable nil (reparse-symbol function_parameters) [966 971])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [973 981]))                          
                        :documentation "Call the backend method with args.

        If there is currently no backend, return default.")
                        (reparse-symbol indented_block_body) [925 1250])
                    ("rpc_echo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1268 1272])
                            ("args" variable nil (reparse-symbol function_parameters) [1274 1279]))                          
                        :documentation "Return the arguments.

        This is a simple test method to see if the protocol is
        working.

        ")
                        (reparse-symbol indented_block_body) [1255 1429])
                    ("rpc_init" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1447 1451])
                            ("options" variable nil (reparse-symbol function_parameters) [1453 1460]))                          )
                        (reparse-symbol indented_block_body) [1434 2246])
                    ("rpc_get_calltip" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2271 2275])
                            ("filename" variable nil (reparse-symbol function_parameters) [2277 2285])
                            ("source" variable nil (reparse-symbol function_parameters) [2287 2293])
                            ("offset" variable nil (reparse-symbol function_parameters) [2295 2301]))                          
                        :documentation "Get the calltip for the function at the offset.

        ")
                        (reparse-symbol indented_block_body) [2251 2507])
                    ("rpc_get_completions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2536 2540])
                            ("filename" variable nil (reparse-symbol function_parameters) [2542 2550])
                            ("source" variable nil (reparse-symbol function_parameters) [2552 2558])
                            ("offset" variable nil (reparse-symbol function_parameters) [2560 2566]))                          
                        :documentation "Get a list of completion candidates for the symbol at offset.

        ")
                        (reparse-symbol indented_block_body) [2512 3012])
                    ("rpc_get_completion_docstring" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3050 3054])
                            ("completion" variable nil (reparse-symbol function_parameters) [3056 3066]))                          
                        :documentation "Return documentation for a previously returned completion.

        ")
                        (reparse-symbol indented_block_body) [3017 3270])
                    ("rpc_get_completion_location" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3307 3311])
                            ("completion" variable nil (reparse-symbol function_parameters) [3313 3323]))                          
                        :documentation "Return the location for a previously returned completion.

        This returns a list of [file name, line number].

        ")
                        (reparse-symbol indented_block_body) [3275 3583])
                    ("rpc_get_definition" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3611 3615])
                            ("filename" variable nil (reparse-symbol function_parameters) [3617 3625])
                            ("source" variable nil (reparse-symbol function_parameters) [3627 3633])
                            ("offset" variable nil (reparse-symbol function_parameters) [3635 3641]))                          
                        :documentation "Get the location of the definition for the symbol at the offset.

        ")
                        (reparse-symbol indented_block_body) [3588 3867])
                    ("rpc_get_docstring" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3894 3898])
                            ("filename" variable nil (reparse-symbol function_parameters) [3900 3908])
                            ("source" variable nil (reparse-symbol function_parameters) [3910 3916])
                            ("offset" variable nil (reparse-symbol function_parameters) [3918 3924]))                          
                        :documentation "Get the docstring for the symbol at the offset.

        ")
                        (reparse-symbol indented_block_body) [3872 4132])
                    ("rpc_get_pydoc_completions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4167 4171])
                            ("name" variable nil (reparse-symbol function_parameters) [4173 4177]))                          
                        :documentation "Return a list of possible strings to pass to pydoc.

        If name is given, the strings are under name. If not, top
        level modules are returned.

        ")
                        (reparse-symbol indented_block_body) [4137 4407])
                    ("rpc_get_pydoc_documentation" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4444 4448])
                            ("symbol" variable nil (reparse-symbol function_parameters) [4450 4456]))                          
                        :documentation "Get the Pydoc documentation for the given symbol.

        Uses pydoc and can return a string with backspace characters
        for bold highlighting.

        ")
                        (reparse-symbol indented_block_body) [4412 5057])
                    ("rpc_get_refactor_options" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5091 5095])
                            ("filename" variable nil (reparse-symbol function_parameters) [5097 5105])
                            ("start" variable nil (reparse-symbol function_parameters) [5107 5112])
                            ("end" variable nil (reparse-symbol function_parameters) [5114 5117]))                          
                        :documentation "Return a list of possible refactoring options.

        This list will be filtered depending on whether it's
        applicable at the point START and possibly the region between
        START and END.

        ")
                        (reparse-symbol indented_block_body) [5062 5609])
                    ("rpc_refactor" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5631 5635])
                            ("filename" variable nil (reparse-symbol function_parameters) [5637 5645])
                            ("method" variable nil (reparse-symbol function_parameters) [5647 5653])
                            ("args" variable nil (reparse-symbol function_parameters) [5655 5659]))                          
                        :documentation "Return a list of changes from the refactoring action.

        A change is a dictionary describing the change. See
        elpy.refactor.translate_changes for a description.

        ")
                        (reparse-symbol indented_block_body) [5614 6159])
                    ("rpc_get_usages" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6183 6187])
                            ("filename" variable nil (reparse-symbol function_parameters) [6189 6197])
                            ("source" variable nil (reparse-symbol function_parameters) [6199 6205])
                            ("offset" variable nil (reparse-symbol function_parameters) [6207 6213]))                          
                        :documentation "Get usages for the symbol at point.

        ")
                        (reparse-symbol indented_block_body) [6164 6558])
                    ("_ensure_import_magic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6588 6592]))                          )
                        (reparse-symbol indented_block_body) [6563 6901])
                    ("rpc_get_import_symbols" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6933 6937])
                            ("filename" variable nil (reparse-symbol function_parameters) [6939 6947])
                            ("source" variable nil (reparse-symbol function_parameters) [6949 6955])
                            ("symbol" variable nil (reparse-symbol function_parameters) [6957 6963]))                          
                        :documentation "Return a list of modules from which the given symbol can be imported.

        ")
                        (reparse-symbol indented_block_body) [6906 7156])
                    ("rpc_add_import" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7180 7184])
                            ("filename" variable nil (reparse-symbol function_parameters) [7186 7194])
                            ("source" variable nil (reparse-symbol function_parameters) [7196 7202])
                            ("statement" variable nil (reparse-symbol function_parameters) [7204 7213]))                          
                        :documentation "Add an import statement to the module.

        ")
                        (reparse-symbol indented_block_body) [7161 7414])
                    ("rpc_get_unresolved_symbols" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7450 7454])
                            ("filename" variable nil (reparse-symbol function_parameters) [7456 7464])
                            ("source" variable nil (reparse-symbol function_parameters) [7466 7472]))                          
                        :documentation "Return a list of unreferenced symbols in the module.

        ")
                        (reparse-symbol indented_block_body) [7419 7688])
                    ("rpc_remove_unreferenced_imports" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7729 7733])
                            ("filename" variable nil (reparse-symbol function_parameters) [7735 7743])
                            ("source" variable nil (reparse-symbol function_parameters) [7745 7751]))                          
                        :documentation "Remove unused import statements.

        ")
                        (reparse-symbol indented_block_body) [7693 7952]))                  
                :type "class")
                nil [576 7952])
            ("get_source" function
               (:documentation "Translate fileobj into file contents.

    fileobj is either a string or a dict. If it's a string, that's the
    file contents. If it's a string, then the filename key contains
    the name of the file whose contents we are to use.

    If the dict contains a true value for the key delete_after_use,
    the file should be deleted once read.

    "
                :arguments 
                  ( ("fileobj" variable nil (reparse-symbol function_parameters) [7969 7976]))                  )
                nil [7954 8731])
            ("_pysymbol_key" function
               (:documentation "Return a sortable key index for name.

    Sorting is case-insensitive, with the first underscore counting as
    worse than any character, but subsequent underscores do not. This
    means that dunder symbols (like __init__) are sorted after symbols
    that start with an alphabetic character, but before those that
    start with only a single underscore.

    "
                :arguments 
                  ( ("name" variable nil (reparse-symbol function_parameters) [8751 8755]))                  )
                nil [8733 9216]))          
      :file "server.py"
      :pointmax 9216
      :fsize 9215
      :lastmodtime '(22385 58356 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "pydocutils.py"
      :file "pydocutils.py"
      :fsize 2946
      :lastmodtime '(22385 58355 0 0))
    (semanticdb-table "rpc.py"
      :file "rpc.py"
      :fsize 4564
      :lastmodtime '(22385 58355 0 0))
    (semanticdb-table "impmagic.py"
      :file "impmagic.py"
      :fsize 3533
      :lastmodtime '(22385 58356 0 0)))
  :file "!Users!zhangli!.emacs.d!elpa!elpy-1.8.0!elpy!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
